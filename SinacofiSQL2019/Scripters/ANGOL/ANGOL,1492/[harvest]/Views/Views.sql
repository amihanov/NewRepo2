
GO
--SqlScripter----[dbo].[ActivitiesAvgOverdueView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ActivitiesAvgOverdueView]') IS NULL EXEC('CREATE VIEW [dbo].[ActivitiesAvgOverdueView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ActivitiesAvgOverdueView]
AS SELECT     activity, AVG(time_late) AS late_avg, process_name
FROM ActivitiesLateCompView
GROUP BY activity, process_name
GO

GO
--SqlScripter----[dbo].[ActivitiesLateCompView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ActivitiesLateCompView]') IS NULL EXEC('CREATE VIEW [dbo].[ActivitiesLateCompView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ActivitiesLateCompView]
AS SELECT     stats.workitemid AS item_id, stats.PROCESSID AS instance_id, stats.NODENAME AS activity, (stats.completed - stats.duedate) / 1000 AS time_late, stats.PROCESSNAME AS process_name, NODEDESC AS activity_description, userlist_worklist.username AS actor
FROM stats, userlist_worklist, productidview
WHERE     (stats.workitemid = userlist_worklist.workitemid) AND (stats.completed > stats.duedate) AND (stats.duedate > 0) AND (stats.productid = productidview.productid)
GO

GO
--SqlScripter----[dbo].[ActivitiesLateIncompView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ActivitiesLateIncompView]') IS NULL EXEC('CREATE VIEW [dbo].[ActivitiesLateIncompView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ActivitiesLateIncompView]
AS SELECT stats.workitemid AS item_id, stats.PROCESSID AS instance_id, stats.NODENAME AS activity, stats.duedate / 1000 AS time_late, stats.PROCESSNAME AS process_name, NODEDESC AS activity_description, userlist_worklist.username AS actor
FROM stats, userlist_worklist, productidview 
WHERE (stats.workitemid = userlist_worklist.workitemid) AND ((stats.completed is null) OR (stats.completed = 0)) AND (stats.DUEDATE > 0) AND (stats.productid = productidview.productid)
GO

GO
--SqlScripter----[dbo].[ActivitiesTimeToDueDate].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ActivitiesTimeToDueDate]') IS NULL EXEC('CREATE VIEW [dbo].[ActivitiesTimeToDueDate] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ActivitiesTimeToDueDate]
AS SELECT     stats.workitemid AS item_id, stats.PROCESSID AS instance_id, stats.NODENAME AS activity, stats.DUEDATE / 1000 AS time_to_due_date, stats.PROCESSNAME AS process_name, NODEDESC AS activity_description, userlist_worklist.username AS actor
FROM stats, userlist_worklist, productidview
WHERE     (stats.workitemid = userlist_worklist.workitemid) AND ((stats.completed is null) OR (stats.completed = 0)) AND (stats.DUEDATE > 0) AND (stats.productid = productidview.productid)
GO

GO
--SqlScripter----[dbo].[activitydistravgsview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[activitydistravgsview]') IS NULL EXEC('CREATE VIEW [dbo].[activitydistravgsview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[activitydistravgsview]
("activity", "avg_time_spent", "process_name")  AS
       SELECT "activitydistrcompview"."activity", AVG(time_spent), "activitydistrcompview"."process_name"
       FROM "activitydistrcompview"
       GROUP BY activity, process_name
GO

GO
--SqlScripter----[dbo].[activitydistrcompview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[activitydistrcompview]') IS NULL EXEC('CREATE VIEW [dbo].[activitydistrcompview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[activitydistrcompview]
("item_id", "instance_id", "activity", "time_spent", "process_name")  AS
       SELECT "stats"."workitemid", "stats"."processid", "stats"."nodename", (stats.completed - stats.started) / 1000, "stats"."processname"
       FROM "stats", "productidview"
       WHERE (stats.completed IS NOT NULL) AND (stats.completed > 0) AND (stats.productid = productidview.productid)
GO

GO
--SqlScripter----[dbo].[ActorBottleneckView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ActorBottleneckView]') IS NULL EXEC('CREATE VIEW [dbo].[ActorBottleneckView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ActorBottleneckView]
AS SELECT     userlist_worklist.username AS actor, stats.NODENAME AS activity_name, AVG((stats.completed - stats.duedate) / 1000) AS avg_time_late, NODEDESC AS activity_description, stats.PROCESSNAME AS process_name, stats.PROCESSID AS instance_id
FROM stats, userlist_worklist, productidview
WHERE     (stats.workitemid = userlist_worklist.workitemid) AND (stats.completed > stats.duedate) AND (stats.duedate > 0) AND (stats.productid = productidview.productid)
GROUP BY userlist_worklist.username, stats.NODENAME, NODEDESC, stats.PROCESSNAME, stats.PROCESSID
GO

GO
--SqlScripter----[dbo].[ActorThroughputView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ActorThroughputView]') IS NULL EXEC('CREATE VIEW [dbo].[ActorThroughputView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ActorThroughputView]
AS SELECT     userlist_worklist.username AS actor, stats.NODENAME AS activity_name, AVG((stats.completed - stats.started) / 1000) AS time_completed, NODEDESC AS activity_description, stats.PROCESSNAME AS process_name, stats.PROCESSID AS instance_id
FROM stats, userlist_worklist, productidview
WHERE     (stats.workitemid = userlist_worklist.workitemid) AND (stats.completed < stats.duedate) AND (stats.duedate > 0) AND (stats.completed is not null) AND (stats.completed > 0) AND (stats.productid = productidview.productid)
GROUP BY userlist_worklist.username, stats.NODENAME, NODEDESC, stats.PROCESSNAME, stats.PROCESSID
GO

GO
--SqlScripter----[dbo].[aiv_usrtoorglast].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[aiv_usrtoorglast]') IS NULL EXEC('CREATE VIEW [dbo].[aiv_usrtoorglast] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[aiv_usrtoorglast]
AS SELECT ai_usrdef_orgtree_prop.pmf as userid, ud_orgdef_list.olorgname, ud_orgdef_list.olnote, ud_orgdef_list.oldiv FROM  ai_usrdef_orgtree_prop INNER JOIN  ud_orgdef_list ON ai_usrdef_orgtree_prop.reportsto LIKE '%' + ud_orgdef_list.oluserlist
GO

GO
--SqlScripter----[dbo].[alamode].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[alamode]') IS NULL EXEC('CREATE VIEW [dbo].[alamode] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[alamode]
AS

select * from ujo_alamode
GO

GO
--SqlScripter----[dbo].[AlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[AlertView]') IS NULL EXEC('CREATE VIEW [dbo].[AlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[AlertView]
AS
SELECT server_addr,probe_addr, rsrcIndex, 
	rsrcOtherIndex = CASE rsrcType
	WHEN 1 THEN 0
	WHEN 3 THEN rsrcIndex
	ELSE rsrcOtherIndex
	END,
	rsrcType,a.fieldIndex,fieldDescShort,unit
	,value=t.displayScaleFactor*a.value
	,threshold=t.displayScaleFactor*a.threshold
	,severity,
	thresholdType=CASE WHEN value > threshold THEN 5
		WHEN value < threshold AND severity = 0 THEN 5 ELSE 6 END,
	IntervalDateTime, IntervalDuration
	,endTime=CASE WHEN a.fieldIndex/100=16 THEN dateadd(second, IntervalDuration,IntervalDateTime)
		ELSE endTime END
	,alertDuration=CASE WHEN a.fieldIndex/100=16 THEN IntervalDuration
		ELSE datediff(second, IntervalDateTime, endTime) END
	FROM network_Alert a, ThresholdDesc t
	WHERE a.fieldIndex=t.fieldIndex
GO

GO
--SqlScripter----[dbo].[anomalycommentview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[anomalycommentview]') IS NULL EXEC('CREATE VIEW [dbo].[anomalycommentview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[anomalycommentview]
AS
       SELECT "a"."ruleid", "b"."fullname", "c"."comment", "c"."score", "c"."active", "a"."id"
       FROM "anomaly" "a", "secure_person" "b", "anomalychange" "c", "anomalylinkobject" "d", "personalias" "e"
       WHERE a.id = d.anomalyid AND d.objecttable = 'person' AND d.objectid = e.id AND e.personid = b.id AND c.anomalyid = a.id
GO

GO
--SqlScripter----[dbo].[apps].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[apps]') IS NULL EXEC('CREATE VIEW [dbo].[apps] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[apps]
AS
		SELECT	ai_swdef_prop.swname,
			ai_swdef_prop.swver,
			ai_swdef_prop.swrel,
			ai_swdef_prop.swmod,
			ai_swdef_prop.swnote,
			ai_swdef_hwdef_rel.hwuuid,
			ai_pubdef_prop.pubname
		FROM	ai_swdef_hwdef_rel
			INNER JOIN
			ai_swdef_prop
			ON ai_swdef_hwdef_rel.swuuid = ai_swdef_prop.swuuid
			INNER JOIN
			ai_pubdef_prop
			ON ai_swdef_prop.pubuuid = ai_pubdef_prop.pubuuid
GO

GO
--SqlScripter----[dbo].[appsbycategory].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[appsbycategory]') IS NULL EXEC('CREATE VIEW [dbo].[appsbycategory] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[appsbycategory]
AS SELECT ai_swdef_prop.pubuuid, ai_swdef_prop.swuuid, ai_swdef_prop.swname, ai_swdef_prop.swver, ai_swdef_prop.swrel, ai_swdef_prop.swmod, ai_swdef_prop.swbld, ai_swdef_prop.swnote, ai_swdef_prop.laction, ai_swdef_prop.lactdate, ai_swcat_prop.scname AS scname, ai_swcat_prop.scnote AS scnote FROM  ai_swdef_prop INNER JOIN  ai_swcat_swdef_rel ON ai_swdef_prop.swuuid = ai_swcat_swdef_rel.swuuid INNER JOIN  ai_swcat_prop ON ai_swcat_swdef_rel.scuuid = ai_swcat_prop.scuuid
GO

GO
--SqlScripter----[dbo].[appsetrust].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[appsetrust]') IS NULL EXEC('CREATE VIEW [dbo].[appsetrust] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[appsetrust]
AS SELECT ai_swdef_prop.swname, ai_swdef_hwdef_rel.hwuuid FROM  ai_swdef_hwdef_rel INNER JOIN  ai_swdef_prop ON ai_swdef_hwdef_rel.swuuid = ai_swdef_prop.swuuid WHERE ai_swdef_prop.swname = 'eTrust Antivirus'
GO

GO
--SqlScripter----[dbo].[BaselineBGP4View].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineBGP4View]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineBGP4View] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineBGP4View]
AS SELECT BaselineBGP4.*, IntervalDateTime=IntervalDate FROM  BaselineBGP4
GO

GO
--SqlScripter----[dbo].[BaselineCiscoView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineCiscoView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineCiscoView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineCiscoView]
AS SELECT BaselineCisco.*, IntervalDateTime=IntervalDate FROM  BaselineCisco
GO

GO
--SqlScripter----[dbo].[BaselineEtherStatsView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineEtherStatsView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineEtherStatsView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineEtherStatsView]
AS SELECT BaselineEtherStats.*, IntervalDateTime=IntervalDate FROM  BaselineEtherStats
GO

GO
--SqlScripter----[dbo].[BaselineFRView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineFRView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineFRView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineFRView]
AS SELECT BaselineFR.*, IntervalDateTime=IntervalDate FROM  BaselineFR
GO

GO
--SqlScripter----[dbo].[BaselineFSView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineFSView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineFSView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineFSView]
AS SELECT BaselineFS.*, IntervalDateTime=IntervalDate FROM  BaselineFS
GO

GO
--SqlScripter----[dbo].[BaselineIfView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineIfView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineIfView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineIfView]
AS SELECT BaselineIf.*, IntervalDateTime=IntervalDate FROM  BaselineIf
GO

GO
--SqlScripter----[dbo].[BaselineIpView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineIpView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineIpView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineIpView]
AS SELECT BaselineIp.*, IntervalDateTime=IntervalDate FROM  BaselineIp
GO

GO
--SqlScripter----[dbo].[BaselineLPView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineLPView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineLPView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineLPView]
AS SELECT BaselineLP.*, IntervalDateTime=IntervalDate FROM  BaselineLP
GO

GO
--SqlScripter----[dbo].[BaselineLUView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineLUView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineLUView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineLUView]
AS SELECT BaselineLU.*, IntervalDateTime=IntervalDate FROM  BaselineLU
GO

GO
--SqlScripter----[dbo].[BaselineNBarView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineNBarView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineNBarView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineNBarView]
AS SELECT BaselineNBar.*, IntervalDateTime=IntervalDate FROM  BaselineNBar
GO

GO
--SqlScripter----[dbo].[BaselineRMON2ProtoView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineRMON2ProtoView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineRMON2ProtoView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineRMON2ProtoView]
AS SELECT BaselineRMON2Proto.*, IntervalDateTime=IntervalDate FROM  BaselineRMON2Proto
GO

GO
--SqlScripter----[dbo].[BaselineRTTCaptureView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineRTTCaptureView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineRTTCaptureView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineRTTCaptureView]
AS SELECT BaselineRTTCapture.*, IntervalDateTime=IntervalDate FROM  BaselineRTTCapture
GO

GO
--SqlScripter----[dbo].[BaselineRTTCollView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineRTTCollView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineRTTCollView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineRTTCollView]
AS SELECT BaselineRTTColl.*, IntervalDateTime=IntervalDate FROM  BaselineRTTColl
GO

GO
--SqlScripter----[dbo].[BaselineRTTJitterView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineRTTJitterView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineRTTJitterView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineRTTJitterView]
AS SELECT BaselineRTTJitter.*, IntervalDateTime=IntervalDate FROM  BaselineRTTJitter
GO

GO
--SqlScripter----[dbo].[BaselineTSView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BaselineTSView]') IS NULL EXEC('CREATE VIEW [dbo].[BaselineTSView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BaselineTSView]
AS SELECT BaselineTS.*, IntervalDateTime=IntervalDate FROM  BaselineTS
GO

GO
--SqlScripter----[dbo].[BGP4AlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4AlertView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4AlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4AlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,bgpPeerInUpdates=CASE WHEN a.fieldIndex=2001 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bgpPeerOutUpdates=CASE a.fieldIndex WHEN 2002 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bgpPeerInTotalMessages=CASE WHEN a.fieldIndex = 2003 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bgpPeerOutTotalMessages=CASE WHEN a.fieldIndex=2004 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bgpPeerFsmEstablishedTrans=case WHEN a.fieldIndex =2004 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bgpPeerInUpdateElapsedTime=case WHEN a.fieldIndex =2005 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
FROM ResourceNameBGP4View r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
		AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.rsrcType=20
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=20
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageDayView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageDayView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM BGP4PeerEntryMessage
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageHourView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageHourView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM BGP4PeerEntryMessage
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageLastDayView]
AS
SELECT * FROM BGP4PeerEntryMessageHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageLastWeekView]
AS
SELECT * FROM BGP4PeerEntryMessageDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageMinuteView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM BGP4PeerEntryMessage
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageMonthView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM BGP4PeerEntryMessage
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessagePSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessagePSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessagePSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessagePSDayView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM BGP4PeerEntryMessage WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessagePSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessagePSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessagePSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessagePSHourView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM BGP4PeerEntryMessage WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessagePSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessagePSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessagePSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessagePSMinuteView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM BGP4PeerEntryMessage WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessagePSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessagePSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessagePSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessagePSMonthView]
AS
SELECT BGP4PeerEntryMessage.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM BGP4PeerEntryMessage WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[BGP4PeerEntryMessageThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4PeerEntryMessageThView]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4PeerEntryMessageThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4PeerEntryMessageThView]
AS SELECT BGP4PeerEntryMessage.server_addr, BGP4PeerEntryMessage.probe_addr, BGP4PeerEntryMessage.bgpIdentifier, BGP4PeerEntryMessage.bgpPeerIdentifier, IntervalDateTime, IntervalDuration, bgpPeerInUpdates=case WHEN bgpPeerInTotalMessages= 0 THEN 0 ELSE bgpPeerInUpdates/bgpPeerInTotalMessages END, bgpPeerOutUpdates=case WHEN bgpPeerOutTotalMessages= 0 THEN 0 ELSE bgpPeerOutUpdates/bgpPeerOutTotalMessages END, bgpPeerInTotalMessages=case WHEN IntervalDuration= 0 THEN 0 ELSE bgpPeerInTotalMessages/IntervalDuration END, bgpPeerOutTotalMessages=case WHEN IntervalDuration= 0 THEN 0 ELSE bgpPeerOutTotalMessages/IntervalDuration END, bgpPeerFsmEstablishedTrans=case WHEN IntervalDuration= 0 THEN 0 ELSE bgpPeerFsmEstablishedTrans/IntervalDuration END, bgpPeerInUpdateElapsedTime=bgpPeerInUpdateElapsedTime FROM  BGP4PeerEntryMessage
GO

GO
--SqlScripter----[dbo].[BGP4ScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[BGP4ScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[BGP4ScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[BGP4ScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,bgpPeerInUpdates=100-case WHEN SUM(bgpPeerInUpdates) > 100 THEN 100 ELSE SUM(bgpPeerInUpdates) END
	,bgpPeerOutUpdates=100-case WHEN SUM(bgpPeerOutUpdates) > 100 THEN 100 ELSE SUM(bgpPeerOutUpdates) END
	,bgpPeerInTotalMessages=100-case WHEN SUM(bgpPeerInTotalMessages) > 100 THEN 100 ELSE SUM(bgpPeerInTotalMessages) END
	,bgpPeerOutTotalMessages=100-case WHEN SUM(bgpPeerOutTotalMessages) > 100 THEN 100 ELSE SUM(bgpPeerOutTotalMessages) END
	,bgpPeerFsmEstablishedTrans=100-case WHEN SUM(bgpPeerFsmEstablishedTrans) > 100 THEN 100 ELSE SUM(bgpPeerFsmEstablishedTrans) END
	,bgpPeerInUpdateElapsedTime=100-case WHEN SUM(bgpPeerInUpdateElapsedTime) > 100 THEN 100 ELSE SUM(bgpPeerInUpdateElapsedTime) END
FROM BGP4AlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[buildingview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[buildingview]') IS NULL EXEC('CREATE VIEW [dbo].[buildingview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[buildingview]
AS
       SELECT "building"."screenname", "building"."description"
       FROM "building"
GO

GO
--SqlScripter----[dbo].[ca_am_agent_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ca_am_agent_view]') IS NULL EXEC('CREATE VIEW [dbo].[ca_am_agent_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_am_agent_view]
AS select engine_uuid as object_uuid, 3 as object_type, -1 as object_class, label from  ca_engine union select dis_hw_uuid as object_uuid, 1 as object_type, class_id as object_class, label from  ca_discovered_hardware union select user_uuid as object_uuid, 2 as object_type, -1 as object_class, label from  ca_discovered_user
GO

GO
--SqlScripter----[dbo].[ca_am_asset_derived_status].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_am_asset_derived_status]') IS NULL EXEC('CREATE VIEW [dbo].[ca_am_asset_derived_status] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_am_asset_derived_status]
AS
select ca_agent.object_uuid,isnull(min(polsev),0) as object_status 
	FROM
ca_agent left outer join POLILOG
on ca_agent.object_uuid=polilog.object_uuid 
	WHERE agent_type>0 group by ca_agent.object_uuid
GO

GO
--SqlScripter----[dbo].[ca_coapi_agent_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_coapi_agent_view]') IS NULL EXEC('CREATE VIEW [dbo].[ca_coapi_agent_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_coapi_agent_view]
AS 
	SELECT dhw.label AS agv_label,
				 dhw.creation_user AS agv_creation_user,
				 dhw.creation_date AS agv_creation_date,
				 dhw.last_update_user AS agv_last_update_user,
				 dhw.last_update_date AS agv_last_update_date,
				 ag.object_uuid AS ag_object_uuid,
				 ag.domain_id AS ag_domain_id,
				 ag.server_uuid AS ag_server_uuid,
				 srv.host_name AS srv_host_name,
				 ag.boot_server_uuid AS ag_boot_server_uuid,
				 ag.unit_id AS ag_unit_id,
				 ag.last_run_date AS ag_last_run_date,
				 ag.agent_type AS ag_agent_type,
				 ag.agent_lock AS ag_agent_lock,
				 ag.agent_name AS ag_agent_name,
				 ag.agent_file_id AS ag_agent_file_id,
				 ag.agent_area AS ag_agent_area,
				 ag.agent_version AS ag_agent_version,
				 ag.description AS ag_description,
				 ag.prev_manager AS ag_prev_manager,
				 ag.ip_address AS ag_ip_address,
				 ag.registration_type AS ag_registration_type,
				 ag.proc_os_id AS ag_proc_os_id,
				 ag.class_id AS ag_class_id,
				 ag.derived_status_am AS ag_derived_status_am,
				 ag.derived_status_sd AS ag_derived_status_sd,
				 ag.derived_status_rc AS ag_derived_status_rc,
				 ag.derived_status_babld AS ag_derived_status_babld,
				 ag.user_def1 AS ag_user_def1,
				 ag.user_def2 AS ag_user_def2,
				 ag.user_def3 AS ag_user_def3,
				 ag.user_def4 AS ag_user_def4,
				 ag.creation_user AS ag_creation_user,
				 ag.creation_date AS ag_creation_date,
				 ag.last_update_date AS ag_last_update_date,
				 ag.last_update_user AS ag_last_update_user,
				 ag.version_number AS ag_version_number,
				 dom.label AS dom_label,
				 dhw.label AS dhw_label,
				 dhw.domain_uuid AS dhw_domain_uuid,
				 dhw.dis_hw_uuid AS dhw_dis_hw_uuid,
				 dhw.asset_source_uuid AS dhw_asset_source_uuid,
				 dhw.host_name AS dhw_host_name,
				 dhw.primary_network_address AS dhw_primary_network_address,
				 dhw.serial_number AS dhw_serial_number,
				 dhw.disc_serial_number AS dhw_disc_serial_number,
				 dhw.primary_mac_address AS dhw_primary_mac_address,
				 dhw.asset_tag AS dhw_asset_tag,
				 dhw.host_uuid AS dhw_host_uuid,
				 dhw.class_id AS dhw_class_id,
				 dhw.usage_list AS dhw_usage_list,
				 dhw.uri AS dhw_uri,
				 dhw.system_id AS dhw_system_id,
				 dhw.vendor_name AS dhw_vendor_name,
				 dhw.creation_user AS dhw_creation_user,
				 dhw.creation_date AS dhw_creation_date,
				 dhw.last_update_date AS dhw_last_update_date,
				 dhw.last_update_user AS dhw_last_update_user,
				 dhw.version_number AS dhw_version_number,
				 '' AS usr_label,
				 convert(binary(16),NULL) AS usr_domain_uuid,
				 convert(binary(16),NULL) AS usr_user_uuid,
				 '' AS usr_user_name,
				 convert(binary(32),0) AS usr_usage_list,
				 '' AS usr_uri,
				 '' AS usr_creation_user,
				 convert(integer,NULL) AS usr_creation_date,
				 convert(integer,NULL) AS usr_last_update_date,
				 '' AS usr_last_update_user,
				 convert(integer,NULL) AS usr_version_number,
				 '' AS cu_label,
				 convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
				 convert(binary(16),NULL) AS cu_dis_hw_uuid,
				 convert(binary(16),NULL) AS cu_user_uuid,
				 convert(integer,NULL) AS cu_ref_count,
				 convert(binary(32),0) AS cu_usage_list,
				 '' AS cu_creation_user,
				 convert(integer,NULL) AS cu_creation_date,
				 '' AS cu_last_update_user,
				 convert(integer,NULL) AS cu_last_update_date,
				 convert(integer,NULL) AS cu_version_number,
				 '' AS exa_label,
				 convert(binary(16),NULL) AS exa_device_uuid,
				 convert(binary(16),NULL) AS exa_domain_uuid,
				 '' AS exa_class_name,
				 '' AS exa_ipaddress,
				 '' AS exa_macaddress,
				 '' AS exa_last_update_user,
				 convert(integer,NULL) AS exa_last_update_date,
				 convert(integer,NULL) AS exa_creation_date,
				 '' AS exa_creation_user,
				 convert(integer,NULL) AS exa_version_number 
	FROM  ca_discovered_hardware dhw,  ca_n_tier dom,  ca_agent AS ag LEFT OUTER JOIN  ca_server AS srv ON ag.server_uuid = srv.server_uuid 
	WHERE (ag.object_uuid = dhw.dis_hw_uuid) 
			AND (dhw.domain_uuid= dom.domain_uuid) 
	UNION SELECT usr.label AS agv_label,
				 usr.creation_user AS agv_creation_user,
				 usr.creation_date AS agv_creation_date,
				 usr.last_update_user AS agv_last_update_user,
				 usr.last_update_date AS agv_last_update_date,
				 ag.object_uuid AS ag_object_uuid,
				 ag.domain_id AS ag_domain_id,
				 ag.server_uuid AS ag_server_uuid,
				 srv.host_name AS srv_host_name,
				 ag.boot_server_uuid AS ag_boot_server_uuid,
				 ag.unit_id AS ag_unit_id,
				 ag.last_run_date AS ag_last_run_date,
				 ag.agent_type AS ag_agent_type,
				 ag.agent_lock AS ag_agent_lock,
				 ag.agent_name AS ag_agent_name,
				 ag.agent_file_id AS ag_agent_file_id,
				 ag.agent_area AS ag_agent_area,
				 ag.agent_version AS ag_agent_version,
				 ag.description AS ag_description,
				 ag.prev_manager AS ag_prev_manager,
				 ag.ip_address AS ag_ip_address,
				 ag.registration_type AS ag_registration_type,
				 ag.proc_os_id AS ag_proc_os_id,
				 ag.class_id AS ag_class_id,
				 ag.derived_status_am AS ag_derived_status_am,
				 ag.derived_status_sd AS ag_derived_status_sd,
				 ag.derived_status_rc AS ag_derived_status_rc,
				 ag.derived_status_babld AS ag_derived_status_babld,
				 ag.user_def1 AS ag_user_def1,
				 ag.user_def2 AS ag_user_def2,
				 ag.user_def3 AS ag_user_def3,
				 ag.user_def4 AS ag_user_def4,
				 ag.creation_user AS ag_creation_user,
				 ag.creation_date AS ag_creation_date,
				 ag.last_update_date AS ag_last_update_date,
				 ag.last_update_user AS ag_last_update_user,
				 ag.version_number AS ag_version_number,
				 dom.label AS dom_label,
				 '' AS dhw_label,
				 convert(binary(16),NULL) AS dhw_domain_uuid,
				 convert(binary(16),NULL) AS dhw_dis_hw_uuid,
				 convert(binary(16),NULL) AS dhw_asset_source_uuid,
				 '' AS dhw_host_name,
				 '' AS dhw_primary_network_address,
				 '' AS dhw_serial_number,
				 '' AS dhw_disc_serial_number,
				 '' AS dhw_primary_mac_address,
				 '' ASdhw_asset_tag,
				 '' AS dhw_host_uuid,
				 convert(integer,NULL) AS dhw_class_id,
				 convert(binary(32),0) AS dhw_usage_list,
				 '' AS dhw_uri,
				 '' AS dhw_system_id,
				 '' AS dhw_vendor_name,
				 '' AS dhw_creation_user,
				 convert(integer,NULL) AS dhw_creation_date,
				 convert(integer,NULL) AS dhw_last_update_date,
				 '' AS dhw_last_update_user,
				 convert(integer,NULL) AS dhw_version_number,
				 usr.label AS usr_label,
				 usr.domain_uuid AS usr_domain_uuid,
				 usr.user_uuid AS usr_user_uuid,
				 usr.user_name AS usr_user_name,
				 usr.usage_list AS usr_usage_list,
				 usr.uri ASusr_uri,
				 usr.creation_user AS usr_creation_user,
				 usr.creation_date AS usr_creation_date,
				 usr.last_update_date AS usr_last_update_date,
				 usr.last_update_user AS usr_last_update_user,
				 usr.version_number AS usr_version_number,
				 '' AS cu_label,
				 convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
				 convert(binary(16),NULL) AS cu_dis_hw_uuid,
				 convert(binary(16),NULL) AS cu_user_uuid,
				 convert(integer,NULL) AS cu_ref_count,
				 convert(binary(32),0) AS cu_usage_list,
				 '' AS cu_creation_user,
				 convert(integer,NULL) AS cu_creation_date,
				 '' AS cu_last_update_user,
				 convert(integer,NULL) AS cu_last_update_date,
				 convert(integer,NULL) AS cu_version_number,
				 '' AS exa_label,
				 convert(binary(16),NULL) AS exa_device_uuid,
				 convert(binary(16),NULL) AS exa_domain_uuid,
				 '' AS exa_class_name,
			 '' AS exa_ipaddress,
			 '' AS exa_macaddress,
			 '' AS exa_last_update_user,
			 convert(integer,NULL) AS exa_last_update_date,
			 convert(integer,NULL) AS exa_creation_date,
			 '' AS exa_creation_user,
			 convert(integer,NULL) AS exa_version_number 
	FROM  ca_discovered_user usr,  ca_n_tier dom,  ca_agent AS ag LEFT OUTER JOIN  ca_server AS srv ON ag.server_uuid = srv.server_uuid 
	WHERE (ag.object_uuid = usr.user_uuid) 
			AND (usr.domain_uuid=dom.domain_uuid) 
	UNION SELECT cu.label AS agv_label,
				 cu.creation_user AS agv_creation_user,
				 cu.creation_date AS agv_creation_date,
				 cu.last_update_user AS agv_last_update_user,
				 cu.last_update_date AS agv_last_update_date,
				 ag.object_uuid AS ag_object_uuid,
				 ag.domain_id AS ag_domain_id,
				 ag.server_uuid AS ag_server_uuid,
				 srv.host_name AS srv_host_name,
				 ag.boot_server_uuid AS ag_boot_server_uuid,
				 ag.unit_id AS ag_unit_id,
				 ag.last_run_date AS ag_last_run_date,
				 ag.agent_type AS ag_agent_type,
				 ag.agent_lock AS ag_agent_lock,
				 ag.agent_name AS ag_agent_name,
				 ag.agent_file_id AS ag_agent_file_id,
				 ag.agent_area AS ag_agent_area,
				 ag.agent_version AS ag_agent_version,
				 ag.description AS ag_description,
				 ag.prev_manager AS ag_prev_manager,
				 ag.ip_address AS ag_ip_address,
				 ag.registration_type AS ag_registration_type,
				 ag.proc_os_id AS ag_proc_os_id,
				 ag.class_id AS ag_class_id,
				 ag.derived_status_am AS ag_derived_status_am,
				 ag.derived_status_sd AS ag_derived_status_sd,
				 ag.derived_status_rc AS ag_derived_status_rc,
				 ag.derived_status_babld AS ag_derived_status_babld,
				 ag.user_def1 AS ag_user_def1,
				 ag.user_def2 AS ag_user_def2,
				 ag.user_def3 AS ag_user_def3,
				 ag.user_def4 AS ag_user_def4,
				 ag.creation_user AS ag_creation_user,
				 ag.creation_date AS ag_creation_date,
				 ag.last_update_date AS ag_last_update_date,
				 ag.last_update_user AS ag_last_update_user,
				 ag.version_number AS ag_version_number,
				 dom.label AS dom_label,
				 dhw.label AS dhw_label,
				 dhw.domain_uuid AS dhw_domain_uuid,
				 dhw.dis_hw_uuid AS dhw_dis_hw_uuid,
				 dhw.asset_source_uuid AS dhw_asset_source_uuid,
				 dhw.host_name AS dhw_host_name,
				 dhw.primary_network_address AS dhw_primary_network_address,
			 dhw.serial_number AS dhw_serial_number,
			 dhw.disc_serial_number AS dhw_disc_serial_number,
			 dhw.primary_mac_address AS dhw_primary_mac_address,
			 dhw.asset_tag AS dhw_asset_tag,
			 dhw.host_uuid AS dhw_host_uuid,
			 dhw.class_id AS dhw_class_id,
			 dhw.usage_list AS dhw_usage_list,
			 dhw.uri AS dhw_uri,
			 dhw.system_id AS dhw_system_id,
			 dhw.vendor_name AS dhw_vendor_name,
			 dhw.creation_user AS dhw_creation_user,
			 dhw.creation_date AS dhw_creation_date,
			 dhw.last_update_date AS dhw_last_update_date,
			 dhw.last_update_user AS dhw_last_update_user,
			 dhw.version_number AS dhw_version_number,
			 '' AS usr_label,
			 convert(binary(16),NULL) AS usr_domain_uuid,
			 convert(binary(16),NULL) AS usr_user_uuid,
			 '' AS usr_user_name,
			 convert(binary(32),0) AS usr_usage_list,
			 '' AS usr_uri,
			 '' AS usr_creation_user,
			 convert(integer,NULL) AS usr_creation_date,
			 convert(integer,NULL) AS usr_last_update_date,
			 '' AS usr_last_update_user,
			 convert(integer,NULL) AS usr_version_number,
			 cu.label AS cu_label,
			 cu.link_dis_hw_user_uuid AS cu_link_dis_hw_user_uuid,
			 cu.dis_hw_uuid AS cu_dis_hw_uuid,
			 cu.user_uuid AS cu_user_uuid,
			 cu.ref_count AS cu_ref_count,
			 cu.usage_list AS cu_usage_list,
			 cu.creation_user AS cu_creation_user,
			 cu.creation_date AS cu_creation_date,
			 cu.last_update_user AS cu_last_update_user,
			 cu.last_update_date AS cu_last_update_date,
			 cu.version_number AS cu_version_number,
			 '' AS exa_label,
			 convert(binary(16),NULL) AS exa_device_uuid,
			 convert(binary(16),NULL) AS exa_domain_uuid,
			 '' AS exa_class_name,
			 '' AS exa_ipaddress,
			 '' AS exa_macaddress,
			 '' AS exa_last_update_user,
			 convert(integer,NULL) AS exa_last_update_date,
			 convert(integer,NULL) AS exa_creation_date,
			 '' AS exa_creation_user,
			 convert(integer,NULL) AS exa_version_number 
	FROM  ca_link_dis_hw_user cu,  ca_discovered_hardware dhw,  ca_n_tier dom,  ca_agent AS ag LEFT OUTER JOIN  ca_server AS srv ON ag.server_uuid = srv.server_uuid 
	WHERE (ag.object_uuid = cu.link_dis_hw_user_uuid) 
			AND (cu.dis_hw_uuid= dhw.dis_hw_uuid) 
			AND (dhw.domain_uuid=dom.domain_uuid) 
	UNION SELECT exa.label  COLLATE Latin1_General_CI_AI AS agv_label,
				 exa.creation_user AS agv_creation_user,
				 exa.creation_date AS agv_creation_date,
				 exa.last_update_user AS agv_last_update_user,
				 exa.last_update_date AS agv_last_update_date,
				 ag.object_uuid AS ag_object_uuid,
				 ag.domain_id AS ag_domain_id,
				 ag.server_uuid AS ag_server_uuid,
				 srv.host_name AS srv_host_name,
				 ag.boot_server_uuid AS ag_boot_server_uuid,
				 ag.unit_id AS ag_unit_id,
				 ag.last_run_date AS ag_last_run_date,
				 ag.agent_type AS ag_agent_type,
				 ag.agent_lock AS ag_agent_lock,
				 ag.agent_name AS ag_agent_name,
				 ag.agent_file_id AS ag_agent_file_id,
				 ag.agent_area AS ag_agent_area,
				 ag.agent_version AS ag_agent_version,
				 ag.description AS ag_description,
				 ag.prev_manager AS ag_prev_manager,
				 ag.ip_address AS ag_ip_address,
				 ag.registration_type AS ag_registration_type,
				 ag.proc_os_id AS ag_proc_os_id,
				 ag.class_id AS ag_class_id,
				 ag.derived_status_am AS ag_derived_status_am,
				 ag.derived_status_sd AS ag_derived_status_sd,
				 ag.derived_status_rc AS ag_derived_status_rc,
				 ag.derived_status_babld AS ag_derived_status_babld,
				 ag.user_def1 AS ag_user_def1,
				 ag.user_def2 AS ag_user_def2,
				 ag.user_def3 AS ag_user_def3,
				 ag.user_def4 AS ag_user_def4,
				 ag.creation_user AS ag_creation_user,
				 ag.creation_date AS ag_creation_date,
				 ag.last_update_date AS ag_last_update_date,
				 ag.last_update_user AS ag_last_update_user,
				 ag.version_number AS ag_version_number,
				 dom.label AS dom_label,
				 '' AS dhw_label,
				 convert(binary(16),NULL) AS dhw_domain_uuid,
				 convert(binary(16),NULL) AS dhw_dis_hw_uuid,
				 convert(binary(16),NULL) AS dhw_asset_source_uuid,
				 '' AS dhw_host_name,
				 '' AS dhw_primary_network_address,
				 '' AS dhw_serial_number,
				 '' AS dhw_disc_serial_number,
				 '' AS dhw_primary_mac_address,
				 '' AS dhw_asset_tag,
				 '' AS dhw_host_uuid,
				 convert(integer,NULL) AS dhw_class_id,
				 convert(binary(32),0) AS dhw_usage_list,
				 '' AS dhw_uri,
				 '' AS dhw_system_id,
				 '' AS dhw_vendor_name,
				 '' AS dhw_creation_user,
				 convert(integer,NULL) AS dhw_creation_date,
				 convert(integer,NULL) AS dhw_last_update_date,
				 '' AS dhw_last_update_user,
				 convert(integer,NULL) AS dhw_version_number,
				 '' AS usr_label,
				 convert(binary(16),NULL) AS usr_domain_uuid,
				 convert(binary(16),NULL) AS usr_user_uuid,
				 '' AS usr_user_name,
				 convert(binary(32),0) AS usr_usage_list,
				 '' AS usr_uri,
				 '' AS usr_creation_user,
				 convert(integer,NULL) AS usr_creation_date,
				 convert(integer,NULL) AS usr_last_update_date,
				 '' AS usr_last_update_user,
				 convert(integer,NULL) AS usr_version_number,
				 '' AS cu_label,
				 convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
				 convert(binary(16),NULL) AS cu_dis_hw_uuid,
				 convert(binary(16),NULL) AS cu_user_uuid,
				 convert(integer,NULL) AS cu_ref_count,
				 convert(binary(32),0) AS cu_usage_list,
				 '' AS cu_creation_user,
				 convert(integer,NULL) AS cu_creation_date,
				 '' AS cu_last_update_user,
				 convert(integer,NULL) AS cu_last_update_date,
				 convert(integer,NULL) AS cu_version_number,
				 exa.label AS exa_label,
				 exa.device_uuid AS exa_device_uuid,
				 exa.domain_uuid AS exa_domain_uuid,
				 exa.class_name AS exa_class_name,
				 exa.ipaddress AS exa_ipaddress,
				 exa.macaddress AS exa_macaddress,
				 exa.last_update_user AS exa_last_update_user,
				 exa.last_update_date AS exa_last_update_date,
				 exa.creation_date AS exa_creation_date,
				 exa.creation_user AS exa_creation_user,
				 exa.version_number AS exa_version_number 
	FROM  am_external_device exa,  ca_n_tier dom,  ca_agent AS ag LEFT OUTER JOIN  ca_server AS srv ON ag.server_uuid = srv.server_uuid 
	WHERE (ag.object_uuid = exa.device_uuid) 
			AND (exa.domain_uuid=dom.domain_uuid)
GO

GO
--SqlScripter----[dbo].[ca_coapi_agent_view_nodom_v1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_coapi_agent_view_nodom_v1]') IS NULL EXEC('CREATE VIEW [dbo].[ca_coapi_agent_view_nodom_v1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_coapi_agent_view_nodom_v1]
AS
SELECT
dhw.label AS agv_label,
dhw.creation_user AS agv_creation_user,
dhw.creation_date AS agv_creation_date,
dhw.last_update_user AS agv_last_update_user,
dhw.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid, 
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid, 
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_discovered_hardware dhw, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = dhw.dis_hw_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
usr.label AS agv_label,
usr.creation_user AS agv_creation_user,
usr.creation_date AS agv_creation_date,
usr.last_update_user AS agv_last_update_user,
usr.last_update_date AS agv_last_update_date,
'' AS agv_network_address,
'' AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid, 
convert(binary(16),NULL) AS dhw_asset_source_uuid, 
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
usr.label AS usr_label,
usr.domain_uuid AS usr_domain_uuid,
usr.user_uuid AS usr_user_uuid, 
usr.user_name AS usr_user_name, 
usr.usage_list AS usr_usage_list,
usr.uri AS usr_uri,
usr.creation_user AS usr_creation_user,
usr.creation_date AS usr_creation_date,
usr.last_update_date AS usr_last_update_date,
usr.last_update_user AS usr_last_update_user,
usr.version_number AS usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 as cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 as cu_creation_date,
'' AS cu_last_update_user,
0 as cu_last_update_date,
0 as cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid, 
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM  ca_group_member grm, ca_discovered_user usr, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = usr.user_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
cu.label AS agv_label,
cu.creation_user AS agv_creation_user,
cu.creation_date AS agv_creation_date,
cu.last_update_user AS agv_last_update_user,
cu.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid, 
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
cu.label AS cu_label,
cu.link_dis_hw_user_uuid AS cu_link_dis_hw_user_uuid,
cu.dis_hw_uuid AS cu_dis_hw_uuid,
cu.user_uuid AS cu_user_uuid,
cu.ref_count AS cu_ref_count,
cu.usage_list AS cu_usage_list,
cu.creation_user AS cu_creation_user,
cu.creation_date AS cu_creation_date,
cu.last_update_user AS cu_last_update_user,
cu.last_update_date AS cu_last_update_date,
cu.version_number AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid, 
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_link_dis_hw_user cu, ca_discovered_hardware dhw, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = cu.link_dis_hw_user_uuid) AND 
(cu.dis_hw_uuid=dhw.dis_hw_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
exa.label  COLLATE Latin1_General_CI_AI AS agv_label,
exa.creation_user AS agv_creation_user,
exa.creation_date AS agv_creation_date,
exa.last_update_user AS agv_last_update_user,
exa.last_update_date AS agv_last_update_date,
exa.ipaddress  COLLATE Latin1_General_CI_AI AS agv_network_address,
exa.macaddress  COLLATE Latin1_General_CI_AI AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid,
convert(binary(16),NULL) AS dhw_asset_source_uuid,
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
exa.label AS exa_label,
exa.device_uuid AS exa_device_uuid,
exa.domain_uuid AS exa_domain_uuid, 
exa.class_name AS exa_class_name,
exa.ipaddress  AS exa_ipaddress,
exa.macaddress  AS exa_macaddress,
exa.last_update_user AS exa_last_update_user,
exa.last_update_date AS exa_last_update_date,
exa.creation_date AS exa_creation_date,
exa.creation_user AS exa_creation_user,
exa.version_number AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, am_external_device exa, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = exa.device_uuid) AND (grm.member_uuid=ag.object_uuid)
GO

GO
--SqlScripter----[dbo].[ca_coapi_agent_view_nodomsrv_v1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_coapi_agent_view_nodomsrv_v1]') IS NULL EXEC('CREATE VIEW [dbo].[ca_coapi_agent_view_nodomsrv_v1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_coapi_agent_view_nodomsrv_v1]
AS
SELECT
dhw.label AS agv_label,
dhw.creation_user AS agv_creation_user,
dhw.creation_date AS agv_creation_date,
dhw.last_update_user AS agv_last_update_user,
dhw.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid,
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_discovered_hardware dhw, ca_agent ag
WHERE (ag.object_uuid = dhw.dis_hw_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
usr.label AS agv_label,
usr.creation_user AS agv_creation_user,
usr.creation_date AS agv_creation_date,
usr.last_update_user AS agv_last_update_user,
usr.last_update_date AS agv_last_update_date,
'' AS agv_network_address,
'' AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid,
convert(binary(16),NULL) AS dhw_asset_source_uuid,
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
usr.label AS usr_label,
usr.domain_uuid AS usr_domain_uuid,
usr.user_uuid AS usr_user_uuid, 
usr.user_name AS usr_user_name, 
usr.usage_list AS usr_usage_list,
usr.uri AS usr_uri,
usr.creation_user AS usr_creation_user,
usr.creation_date AS usr_creation_date,
usr.last_update_date AS usr_last_update_date,
usr.last_update_user AS usr_last_update_user,
usr.version_number AS usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid,
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM  ca_group_member grm, ca_discovered_user usr, ca_agent ag
WHERE (ag.object_uuid = usr.user_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
cu.label AS agv_label,
cu.creation_user AS agv_creation_user,
cu.creation_date AS agv_creation_date,
cu.last_update_user AS agv_last_update_user,
cu.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
cu.label AS cu_label,
cu.link_dis_hw_user_uuid AS cu_link_dis_hw_user_uuid,
cu.dis_hw_uuid AS cu_dis_hw_uuid,
cu.user_uuid AS cu_user_uuid,
cu.ref_count AS cu_ref_count,
cu.usage_list AS cu_usage_list,
cu.creation_user AS cu_creation_user,
cu.creation_date AS cu_creation_date,
cu.last_update_user AS cu_last_update_user,
cu.last_update_date AS cu_last_update_date,
cu.version_number AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid,
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_link_dis_hw_user cu, ca_discovered_hardware dhw, ca_agent ag
WHERE (ag.object_uuid = cu.link_dis_hw_user_uuid) AND 
(cu.dis_hw_uuid=dhw.dis_hw_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
exa.label  COLLATE Latin1_General_CI_AI AS agv_label,
exa.creation_user AS agv_creation_user,
exa.creation_date AS agv_creation_date,
exa.last_update_user AS agv_last_update_user,
exa.last_update_date AS agv_last_update_date,
exa.ipaddress COLLATE Latin1_General_CI_AI AS agv_network_address,
exa.macaddress COLLATE Latin1_General_CI_AI AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid,
convert(binary(16),NULL) AS dhw_asset_source_uuid,
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
exa.label AS exa_label,
exa.device_uuid AS exa_device_uuid,
exa.domain_uuid AS exa_domain_uuid, 
exa.class_name AS exa_class_name,
exa.ipaddress  AS exa_ipaddress,
exa.macaddress  AS exa_macaddress,
exa.last_update_user AS exa_last_update_user,
exa.last_update_date AS exa_last_update_date,
exa.creation_date AS exa_creation_date,
exa.creation_user AS exa_creation_user,
exa.version_number AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, am_external_device exa, ca_agent ag
WHERE (ag.object_uuid = exa.device_uuid) AND (grm.member_uuid=ag.object_uuid)
GO

GO
--SqlScripter----[dbo].[ca_coapi_agent_view_nosrv_v1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_coapi_agent_view_nosrv_v1]') IS NULL EXEC('CREATE VIEW [dbo].[ca_coapi_agent_view_nosrv_v1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_coapi_agent_view_nosrv_v1]
AS
SELECT
dhw.label AS agv_label,
dhw.creation_user AS agv_creation_user,
dhw.creation_date AS agv_creation_date,
dhw.last_update_user AS agv_last_update_user,
dhw.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid,
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_discovered_hardware dhw, ca_n_tier dom, ca_agent ag
WHERE (ag.object_uuid = dhw.dis_hw_uuid) AND (dhw.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
usr.label AS agv_label,
usr.creation_user AS agv_creation_user,
usr.creation_date AS agv_creation_date,
usr.last_update_user AS agv_last_update_user,
usr.last_update_date AS agv_last_update_date,
'' AS agv_network_address,
'' AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid,
convert(binary(16),NULL) AS dhw_asset_source_uuid,
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
usr.label AS usr_label,
usr.domain_uuid AS usr_domain_uuid,
usr.user_uuid AS usr_user_uuid, 
usr.user_name AS usr_user_name, 
usr.usage_list AS usr_usage_list,
usr.uri AS usr_uri,
usr.creation_user AS usr_creation_user,
usr.creation_date AS usr_creation_date,
usr.last_update_date AS usr_last_update_date,
usr.last_update_user AS usr_last_update_user,
usr.version_number AS usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid,
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM  ca_group_member grm, ca_discovered_user usr, ca_n_tier dom, ca_agent ag
WHERE (ag.object_uuid = usr.user_uuid) AND (usr.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
cu.label AS agv_label,
cu.creation_user AS agv_creation_user,
cu.creation_date AS agv_creation_date,
cu.last_update_user AS agv_last_update_user,
cu.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
cu.label AS cu_label,
cu.link_dis_hw_user_uuid AS cu_link_dis_hw_user_uuid,
cu.dis_hw_uuid AS cu_dis_hw_uuid,
cu.user_uuid AS cu_user_uuid,
cu.ref_count AS cu_ref_count,
cu.usage_list AS cu_usage_list,
cu.creation_user AS cu_creation_user,
cu.creation_date AS cu_creation_date,
cu.last_update_user AS cu_last_update_user,
cu.last_update_date AS cu_last_update_date,
cu.version_number AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid,
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_link_dis_hw_user cu, ca_discovered_hardware dhw, ca_n_tier dom, ca_agent ag
WHERE (ag.object_uuid = cu.link_dis_hw_user_uuid) AND 
(cu.dis_hw_uuid=dhw.dis_hw_uuid) AND
(dhw.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
exa.label  COLLATE Latin1_General_CI_AI AS agv_label,
exa.creation_user AS agv_creation_user,
exa.creation_date AS agv_creation_date,
exa.last_update_user AS agv_last_update_user,
exa.last_update_date AS agv_last_update_date,
exa.ipaddress  COLLATE Latin1_General_CI_AI AS agv_network_address,
exa.macaddress  COLLATE Latin1_General_CI_AI AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid,
convert(binary(16),NULL) AS dhw_asset_source_uuid,
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid,
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 AS cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 AS cu_last_update_date,
0 AS cu_version_number,
exa.label AS exa_label,
exa.device_uuid AS exa_device_uuid,
exa.domain_uuid AS exa_domain_uuid, 
exa.class_name AS exa_class_name,
exa.ipaddress AS exa_ipaddress,
exa.macaddress AS exa_macaddress,
exa.last_update_user AS exa_last_update_user,
exa.last_update_date AS exa_last_update_date,
exa.creation_date AS exa_creation_date,
exa.creation_user AS exa_creation_user,
exa.version_number AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, am_external_device exa, ca_n_tier dom, ca_agent ag
WHERE (ag.object_uuid = exa.device_uuid) AND (exa.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
GO

GO
--SqlScripter----[dbo].[ca_coapi_agent_view_v1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_coapi_agent_view_v1]') IS NULL EXEC('CREATE VIEW [dbo].[ca_coapi_agent_view_v1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ca_coapi_agent_view_v1]
AS
SELECT
dhw.label AS agv_label,
dhw.creation_user AS agv_creation_user,
dhw.creation_date AS agv_creation_date,
dhw.last_update_user AS agv_last_update_user,
dhw.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid, 
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 as cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 as cu_last_update_date,
0 as cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid, 
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_discovered_hardware dhw, ca_n_tier dom, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = dhw.dis_hw_uuid) AND (dhw.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
usr.label AS agv_label,
usr.creation_user AS agv_creation_user,
usr.creation_date AS agv_creation_date,
usr.last_update_user AS agv_last_update_user,
usr.last_update_date AS agv_last_update_date,
'' AS agv_network_address,
'' AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid, 
convert(binary(16),NULL) AS dhw_asset_source_uuid, 
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
usr.label AS usr_label,
usr.domain_uuid AS usr_domain_uuid,
usr.user_uuid AS usr_user_uuid, 
usr.user_name AS usr_user_name, 
usr.usage_list AS usr_usage_list,
usr.uri AS usr_uri,
usr.creation_user AS usr_creation_user,
usr.creation_date AS usr_creation_date,
usr.last_update_date AS usr_last_update_date,
usr.last_update_user AS usr_last_update_user,
usr.version_number AS usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 as cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 as cu_last_update_date,
0 as cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid, 
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM  ca_group_member grm, ca_discovered_user usr, ca_n_tier dom, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = usr.user_uuid) AND (usr.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
cu.label AS agv_label,
cu.creation_user AS agv_creation_user,
cu.creation_date AS agv_creation_date,
cu.last_update_user AS agv_last_update_user,
cu.last_update_date AS agv_last_update_date,
dhw.primary_network_address AS agv_network_address,
dhw.primary_mac_address AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
dhw.label AS dhw_label,
dhw.domain_uuid AS dhw_domain_uuid,
dhw.dis_hw_uuid AS dhw_dis_hw_uuid, 
dhw.asset_source_uuid AS dhw_asset_source_uuid, 
dhw.host_name AS dhw_host_name,
dhw.primary_network_address AS dhw_primary_network_address,
dhw.serial_number AS dhw_serial_number,
dhw.disc_serial_number AS dhw_disc_serial_number,
dhw.primary_mac_address AS dhw_primary_mac_address,
dhw.asset_tag AS dhw_asset_tag,
dhw.host_uuid AS dhw_host_uuid,
dhw.class_id AS dhw_class_id,
dhw.usage_list AS dhw_usage_list,
dhw.uri AS dhw_uri,
dhw.system_id AS dhw_system_id,
dhw.vendor_name AS dhw_vendor_name,
dhw.creation_user AS dhw_creation_user,
dhw.creation_date AS dhw_creation_date,
dhw.last_update_date AS dhw_last_update_date,
dhw.last_update_user AS dhw_last_update_user,
dhw.version_number AS dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid, 
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
cu.label AS cu_label,
cu.link_dis_hw_user_uuid AS cu_link_dis_hw_user_uuid,
cu.dis_hw_uuid AS cu_dis_hw_uuid,
cu.user_uuid AS cu_user_uuid,
cu.ref_count AS cu_ref_count,
cu.usage_list AS cu_usage_list,
cu.creation_user AS cu_creation_user,
cu.creation_date AS cu_creation_date,
cu.last_update_user AS cu_last_update_user,
cu.last_update_date AS cu_last_update_date,
cu.version_number AS cu_version_number,
'' AS exa_label,
convert(binary(16),NULL) AS exa_device_uuid,
convert(binary(16),NULL) AS exa_domain_uuid, 
'' AS exa_class_name,
'' AS exa_ipaddress,
'' AS exa_macaddress,
'' AS exa_last_update_user,
0 AS exa_last_update_date,
0 AS exa_creation_date,
'' AS exa_creation_user,
0 AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, ca_link_dis_hw_user cu, ca_discovered_hardware dhw, ca_n_tier dom, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = cu.link_dis_hw_user_uuid) AND 
(cu.dis_hw_uuid=dhw.dis_hw_uuid) AND
(dhw.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
UNION
SELECT
exa.label  COLLATE Latin1_General_CI_AI AS agv_label,
exa.creation_user AS agv_creation_user,
exa.creation_date AS agv_creation_date,
exa.last_update_user AS agv_last_update_user,
exa.last_update_date AS agv_last_update_date,
exa.ipaddress  COLLATE Latin1_General_CI_AI AS agv_network_address,
exa.macaddress  COLLATE Latin1_General_CI_AI AS agv_mac_address,
ag.object_uuid AS ag_object_uuid, 
ag.domain_id AS ag_domain_id,
ag.server_uuid AS ag_server_uuid,
srv.host_name AS srv_host_name,
ag.boot_server_uuid AS ag_boot_server_uuid,
ag.unit_id AS ag_unit_id,
ag.last_run_date AS ag_last_run_date,
ag.agent_type AS ag_agent_type,
ag.agent_lock AS ag_agent_lock,
ag.agent_name AS ag_agent_name,
ag.agent_file_id AS ag_agent_file_id,
ag.agent_area AS ag_agent_area,
ag.agent_version AS ag_agent_version,
ag.description AS ag_description,
ag.prev_manager AS ag_prev_manager,
ag.ip_address AS ag_ip_address,
ag.registration_type AS ag_registration_type,
ag.proc_os_id AS ag_proc_os_id,
ag.class_id AS ag_class_id,
ag.derived_status_am AS ag_derived_status_am,
ag.derived_status_sd AS ag_derived_status_sd,
ag.derived_status_rc AS ag_derived_status_rc,
ag.derived_status_babld AS ag_derived_status_babld,
ag.user_def1 AS ag_user_def1,
ag.user_def2 AS ag_user_def2,
ag.user_def3 AS ag_user_def3,
ag.user_def4 AS ag_user_def4,
ag.creation_user AS ag_creation_user,
ag.creation_date AS ag_creation_date,
ag.last_update_date AS ag_last_update_date,
ag.last_update_user AS ag_last_update_user,
ag.version_number AS ag_version_number,
dom.label AS dom_label,
'' AS dhw_label,
convert(binary(16),NULL) AS dhw_domain_uuid,
convert(binary(16),NULL) AS dhw_dis_hw_uuid, 
convert(binary(16),NULL) AS dhw_asset_source_uuid, 
'' AS dhw_host_name,
'' AS dhw_primary_network_address,
'' AS dhw_serial_number,
'' AS dhw_disc_serial_number,
'' AS dhw_primary_mac_address,
'' AS dhw_asset_tag,
'' AS dhw_host_uuid,
0 dhw_class_id,
convert(binary(32),0) AS dhw_usage_list,
'' AS dhw_uri,
'' AS dhw_system_id,
'' AS dhw_vendor_name,
'' AS dhw_creation_user,
0 dhw_creation_date,
0 dhw_last_update_date,
'' AS dhw_last_update_user,
0 dhw_version_number,
'' AS usr_label,
convert(binary(16),NULL) AS usr_domain_uuid,
convert(binary(16),NULL) AS usr_user_uuid, 
'' AS usr_user_name, 
convert(binary(32),0) AS usr_usage_list,
'' AS usr_uri,
'' AS usr_creation_user,
0 usr_creation_date,
0 usr_last_update_date,
'' AS usr_last_update_user,
0 usr_version_number,
'' AS cu_label,
convert(binary(16),NULL) AS cu_link_dis_hw_user_uuid,
convert(binary(16),NULL) AS cu_dis_hw_uuid,
convert(binary(16),NULL) AS cu_user_uuid,
0 as cu_ref_count,
convert(binary(32),0) AS cu_usage_list,
'' AS cu_creation_user,
0 AS cu_creation_date,
'' AS cu_last_update_user,
0 as cu_last_update_date,
0 as cu_version_number,
exa.label AS exa_label,
exa.device_uuid AS exa_device_uuid,
exa.domain_uuid AS exa_domain_uuid, 
exa.class_name AS exa_class_name,
exa.ipaddress AS exa_ipaddress,
exa.macaddress AS exa_macaddress,
exa.last_update_user AS exa_last_update_user,
exa.last_update_date AS exa_last_update_date,
exa.creation_date AS exa_creation_date,
exa.creation_user AS exa_creation_user,
exa.version_number AS exa_version_number,
grm.group_uuid as group_uuid
FROM ca_group_member grm, am_external_device exa, ca_n_tier dom, ca_agent AS ag LEFT OUTER JOIN ca_server AS srv ON ag.server_uuid = srv.server_uuid
WHERE (ag.object_uuid = exa.device_uuid) AND (exa.domain_uuid=dom.domain_uuid) AND (grm.member_uuid=ag.object_uuid)
GO

GO
--SqlScripter----[dbo].[ca_v_query_def_user].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ca_v_query_def_user]') IS NULL EXEC('CREATE VIEW [dbo].[ca_v_query_def_user] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/* End of lines added to convert to online lock */


ALTER VIEW [dbo].[ca_v_query_def_user]
AS
select 
	q.domain_uuid as q_domain_uuid,
	q.query_uuid as query_uuid,
	q.label as q_label,
	q.query_type as query_type,
	q.query_cont as query_cont,
	q.target_table as q_target_table,
	q.target_type as q_target_type,
	q.creation_user as q_creation_user,
	q.creation_date as q_creation_date,
	q.last_update_user as q_last_update_user,
	q.last_update_date as q_last_update_date,
--	q.version_number as q_version_number, 
--	q.auto_rep_version as q_autorep_version,
	u.user_uuid as user_uuid,
	u.label		as u_label,
	u.user_name	 as user_name,
	u.domain_uuid	as u_domain_uuid,
	u.creation_user as u_creation_user,
	u.creation_date as u_creation_date,
	u.last_update_user as u_last_update_user,
	u.last_update_date as u_last_update_date,
--	u.version_number as u_version_number 
--	u.auto_rep_version as u_autorep_version
	u.uri	as u_uri,
	u.user_type as user_type,
	u.usage_list	as u_usage_list,
	u.directory_url as u_directory_url


from ca_query_def q, ca_discovered_user u
where  u.uri = q.creation_user collate Modern_Spanish_CI_AS
	and u.uri is not null
	and q.creation_user is not null
	and q.domain_uuid = u.domain_uuid
GO

GO
--SqlScripter----[dbo].[CiscoAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,avgBusy1=CASE WHEN a.fieldIndex=409 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,freeMem=CASE a.fieldIndex WHEN 401 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bufferElFree=CASE WHEN a.fieldIndex =402 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bufferElMiss=CASE WHEN a.fieldIndex=405 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bufferFail=case WHEN a.fieldIndex =407 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bufferNoMem=CASE WHEN a.fieldIndex = 408 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,unavail=CASE WHEN a.fieldIndex =1601 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
	FROM ResourceNameCiscoView r, AlertView a
	WHERE r.server_addr=a.server_addr
	AND r.probe_addr=a.probe_addr
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=4
	GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[CiscoScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,avgBusy1=100-case WHEN SUM(avgBusy1) > 100 THEN 100 ELSE SUM(avgBusy1) END
	,freeMem=100-case WHEN SUM(freeMem) > 100 THEN 100 ELSE SUM(freeMem) END
	,bufferElFree=100-case WHEN SUM(bufferElFree) > 100 THEN 100 ELSE SUM(bufferElFree) END
	,bufferElMiss=100-case WHEN SUM(bufferElMiss) > 100 THEN 100 ELSE SUM(bufferElMiss) END
	,bufferFail=100-case WHEN SUM(bufferFail) > 100 THEN 100 ELSE SUM(bufferFail) END
	,bufferNoMem=100-case WHEN SUM(bufferNoMem) > 100 THEN 100 ELSE SUM(bufferNoMem) END
	,availability=100-case WHEN SUM(unavail) > 100 THEN 100 ELSE SUM(unavail) END
FROM CiscoAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[CiscoStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsDayView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM CiscoStats
GO

GO
--SqlScripter----[dbo].[CiscoStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsHourView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM CiscoStats
GO

GO
--SqlScripter----[dbo].[CiscoStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsLastDayView]
AS
SELECT * FROM CiscoStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[CiscoStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsLastWeekView]
AS
SELECT * FROM CiscoStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[CiscoStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsMinuteView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM CiscoStats
GO

GO
--SqlScripter----[dbo].[CiscoStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsMonthView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM CiscoStats
GO

GO
--SqlScripter----[dbo].[CiscoStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsPSDayView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM CiscoStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsPSHourView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM CiscoStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsPSMinuteView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM CiscoStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsPSMonthView]
AS
SELECT CiscoStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM CiscoStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoStatsThView]
AS SELECT CiscoStats.server_addr, CiscoStats.probe_addr, IntervalDateTime, IntervalDuration, freeMem=freeMem, bufferElFree=bufferElFree, bufferElMiss=case WHEN (bufferElHit + bufferElMiss)= 0 THEN 0 ELSE bufferElMiss/(bufferElHit + bufferElMiss) END, bufferFail=case WHEN IntervalDuration= 0 THEN 0 ELSE bufferFail/IntervalDuration END, bufferNoMem=case WHEN IntervalDuration= 0 THEN 0 ELSE bufferNoMem/IntervalDuration END, avgBusy1=avgBusy1 FROM  CiscoStats
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statDayView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM CiscoTemperature_stat
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statHourView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM CiscoTemperature_stat
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statLastDayView]
AS
SELECT * FROM CiscoTemperature_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statLastWeek].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statLastWeek]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statLastWeek] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statLastWeek]
AS
SELECT * FROM CiscoTemperature_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statMinuteView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM CiscoTemperature_stat
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statMonthView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM CiscoTemperature_stat
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statPSDayView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM CiscoTemperature_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statPSHourView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM CiscoTemperature_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statPSMinute].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statPSMinute]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statPSMinute] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statPSMinute]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM CiscoTemperature_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoTemperature_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoTemperature_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoTemperature_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoTemperature_statPSMonthView]
AS
SELECT CiscoTemperature_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM CiscoTemperature_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statDayView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM CiscoVoltage_stat
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statHourView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM CiscoVoltage_stat
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statLastDayView]
AS
SELECT * FROM CiscoVoltage_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statLastWeekView]
AS
SELECT * FROM CiscoVoltage_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statMinuteView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM CiscoVoltage_stat
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statMonthView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM CiscoVoltage_stat
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statPSDayView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM CiscoVoltage_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statPSHourView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM CiscoVoltage_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statPSMinuteView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM CiscoVoltage_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CiscoVoltage_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CiscoVoltage_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[CiscoVoltage_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CiscoVoltage_statPSMonthView]
AS
SELECT CiscoVoltage_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM CiscoVoltage_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[CriticalInterfaceView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CriticalInterfaceView]') IS NULL EXEC('CREATE VIEW [dbo].[CriticalInterfaceView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CriticalInterfaceView]
AS
SELECT
	server_addr
	,probe_addr
	,rsrcIndex
	,rsrcOtherIndex
	,rsrcType=-16
	,collect_flags
	,rsrcName
	,rsrcDescr
	,IP_addr
	,port
	,community
	,ifSpeed
	,ifType
	,agentName
	,ifName
	,ifIndex
	,mibIndex
	,mibId
	,monitored
	,bypassAvail
	,viewType=-16
	,rsrcId=convert(varchar(10),-16)+':'+convert(varchar(12),probe_addr)+':'+convert(varchar(10),rsrcIndex)+':'+convert(varchar(10),0)
	,userId
	FROM ResourceNameWANView p
	WHERE ifSpeed >= 1000000 and ifSpeed <> 4294967295
	AND monitored > 0
	AND (collect_flags & 1)=1
GO

GO
--SqlScripter----[dbo].[csm_v_computer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[csm_v_computer]') IS NULL EXEC('CREATE VIEW [dbo].[csm_v_computer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[csm_v_computer]
(uuid, dname, osim_target_type 	) /* Table with OSIM computers */
as
select 	c.uuid, c.dname, 1 as osim_target_type 	/* uuid of the computer */
from csm_object c, csm_property cp_bs 
where c.class=102 	/* computers already registered in DSM and CSM */
	and c.dname!=''
	
	and cp_bs.object=c.id 
	and cp_bs.name='bootstatus' /* OSIM computers have a bootstatus */

union
select c.uuid, cp_mac.value, -1 as osim_target_type 
from csm_object c, csm_property cp_bs, csm_property cp_mac  
where c.class=102 	/* computers reported with a MAC only are not registered in DSM */
	and c.dname=''

	and cp_bs.object=c.id 
	and cp_bs.name='bootstatus' 
	
	and cp_mac.object=c.id  
	and cp_mac.name='macaddr'
GO

GO
--SqlScripter----[dbo].[csm_v_parameter].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[csm_v_parameter]') IS NULL EXEC('CREATE VIEW [dbo].[csm_v_parameter] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[csm_v_parameter]
(uuid, parname, parvalue, bootstatus)
as
select 	distinct c.uuid, bc_p.dname parname, bc_pv.value parvalue,bc_bs.value bootstatus 	/* uuid of the computer */
	
from  csm_object c,
--	csm_property c_pr,						/* computer property */
	csm_link l_bc, 		csm_object bc,		/* bootconfiguration*/
	csm_link l_bc_p, 	csm_object bc_p,	/* bootconfiguration parameter */
	csm_property bc_bs,						/* bootstatus in bootconfiguration */

	csm_link l_oi, 		csm_object oi,		/* osimage */
	csm_property bc_pv

where 
	c.class=102 		and /* top is computer */

	/* computer -> bootconfiguration */
	l_bc.parent	= c.id 	and	/* link computer to child: bootconfiguration */
	l_bc.child 	= bc.id	and	
	bc.class	= 1004	and	/* child is bootconfiguration */ 

	/* bootconfiguration -> bootstatus */
	bc_bs.object 	= bc.id		and
	bc_bs.name 		= 'bootstatus' and 
	
	/* bootconfiguration -> osimage */
	l_oi.parent	= bc.id	and /* link bootconfiguration to child: osimage */
	l_oi.child	= oi.id	and	
	oi.class	= 1008	and	/* child is osimage */ 

	/* bootconfiguration -> parameter */
	l_bc_p.parent	= bc.id		and /* link bootconfiguration to child: parameter */
	l_bc_p.child	= bc_p.id	and	
	bc_p.class		= 106		and	/* child is parameter */ 

	/* bootconfiguration -> parameter -> value */
	bc_p.id			= bc_pv.object 	and
	bc_pv.name		= 'value'			

union	
select 	distinct c.uuid, oi_p.dname parname, oi_pv.value parvalue,bc_bs.value boostatus 	/* uuid of the computer */
	
from  csm_object c, 
--	csm_property c_pr,						/* computer property */
	csm_link l_bc, 		csm_object bc,		/* bootconfiguration*/
	csm_property bc_bs,						/* bootstatus in bootconfiguration */

	csm_link l_oi, 		csm_object oi,		/* osimage */
	csm_link l_oi_p, 	csm_object oi_p, 	/* os image parameter */
	csm_property oi_pv

where 
	c.class=102 		and /* top is computer */

	/* computer -> bootconfiguration */
	l_bc.parent	= c.id 	and	/* link computer to child: bootconfiguration */
	l_bc.child 	= bc.id	and	
	bc.class	= 1004	and	/* child is bootconfiguration */ 

	/* bootconfiguration -> bootstatus */
	bc_bs.object 	= bc.id		and
	bc_bs.name 		= 'bootstatus' and 
	
	/* bootconfiguration -> osimage */
	l_oi.parent	= bc.id	and /* link bootconfiguration to child: osimage */
	l_oi.child	= oi.id	and	
	oi.class	= 1008	and	/* child is osimage */ 

	/* osimage -> parameter */
	l_oi_p.parent	= oi.id		and /* link bootconfiguration to child: parameter */
	l_oi_p.child	= oi_p.id	and	
	oi_p.class		= 106		and	/* child is parameter */ 

	/* osimage -> parameter -> value */
	oi_p.id			= oi_pv.object 	and
	oi_pv.name		= 'value'		and

	/* konfiguration parameter with same name as osimage parameter doesn't exist */
	oi_p.dname not in (
	select 	bc_p.dname /* uuid of the computer */
	
		from  csm_link l_bc_p, 	csm_object bc_p,	/* bootconfiguration parameter */

			csm_property bc_pv

		where 
			/* bootconfiguration -> parameter */
			l_bc_p.parent	= bc.id		and /* link bootconfiguration to child: parameter */
			l_bc_p.child	= bc_p.id	and	
			bc_p.class		= 106		and	/* child is parameter */ 
			bc_p.dname		= oi_p.dname and

			/* bootconfiguration -> parameter -> value */
			bc_p.id			= bc_pv.object 	and
			bc_pv.name		= 'value'		
	)
GO

GO
--SqlScripter----[dbo].[csm_v_property].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[csm_v_property]') IS NULL EXEC('CREATE VIEW [dbo].[csm_v_property] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[csm_v_property]
AS
select 
	case when 
		len(cs.value)>0 
			and substring(cs.value+'33333333333', 1, 1) in ('-','0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 2, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 3, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 4, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 5, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 6, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 7, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 8, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 9, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333',10, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333',11, 1) in (    '0','1','2','3','4','5','6','7','8','9') 

			/* and cs.name='value' */
		then 0  /* text string */
		else 1  /* number */
	end as type, 
	case when 
		len(cs.value)>0
			and substring(cs.value+'33333333333', 1, 1) in ('-','0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 2, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 3, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 4, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 5, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 6, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 7, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 8, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333', 9, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333',10, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			and substring(cs.value+'33333333333',11, 1) in (    '0','1','2','3','4','5','6','7','8','9') 
			/* and cs.name='value' */
		then convert(bigint,left(cs.value,11))
		else 0 
	end as i_value, 
	cs.id as id, 
	cs.name,
	cs.object,
	cs.value as value
from  csm_property cs
GO

GO
--SqlScripter----[dbo].[CurrentNonAvailView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CurrentNonAvailView]') IS NULL EXEC('CREATE VIEW [dbo].[CurrentNonAvailView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[CurrentNonAvailView]
AS
SELECT server_addr, probe_addr, ifIndex,rsrcType, rsrcOtherIndex,
	IntervalDateTime=start_down_time,start_down_time,
	end_down_time = CASE 
		WHEN end_down_time IS NULL THEN end_time
		ELSE end_down_time
		END,
	downDuration= CASE 
		WHEN end_down_time IS NULL THEN datediff(second, start_down_time, end_time)
		ELSE datediff(second, start_down_time, end_down_time)
		END
	FROM NonAvail na, SessionLength s
	WHERE na.sessionNumber=s.sessionNumber
	AND end_down_time IS NULL
	AND s.sessionNumber=(SELECT MAX(sessionNumber) FROM SessionLength)
GO

GO
--SqlScripter----[dbo].[DeviceTypeView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[DeviceTypeView]') IS NULL EXEC('CREATE VIEW [dbo].[DeviceTypeView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[DeviceTypeView]
AS
SELECT c.server_name,p.*,
	rsrcName=IP_addr + ' / ' + sysName,
	ipType=collect_flags & 0x1, 
	rmonType=(collect_flags & 0x4)/0x4, 
	ciscoType=(collect_flags & 0x400)/0x400,
	rmon2Type=(collect_flags & 0x4000)/0x4000 | 
		(collect_flags & 0x8000) / 0x8000 |
		(collect_flags & 0x10000 )/ 0x10000| 
		(collect_flags & 0x20000)/0x20000, 
	frType = (collect_flags & 0x800)/0x800,
	lanspyType=(collect_flags & 0x2000)/0x2000,
	bgpType= (collect_flags & 0x40000)/0x40000,
	skipifType=(collect_flags & 0x4000000)/0x4000000, 
	alwaysmonType=(collect_flags & 0x20000000)/0x20000000,
	monitoredType =1- ((collect_flags & 0x40000000)/0x40000000 |
			(collect_flags & 0x80000000)/0x80000000) 
	FROM network_Probe p, CollectServer c 
	WHERE p.server_addr = c.server_addr
GO

GO
--SqlScripter----[dbo].[DeviceView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[DeviceView]') IS NULL EXEC('CREATE VIEW [dbo].[DeviceView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[DeviceView]
AS
SELECT 
	server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=0
	,rsrcOtherIndex=0
	,rsrcType=-1
	,collect_flags=p.collect_flags
	,rsrcName = p.sysName
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,port=p.port
	,community=community
	,ifSpeed=0
	,ifType=0
	,agentName=sysName
	,ifName=''
	,ifIndex=0
	,mibIndex='0'
	,mibId=0
	,monitored= p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=1
	,rsrcId=convert(varchar(10),-1)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM UserProbeView p
WHERE p.server_addr=
(SELECT convert(int, parmValue) FROM CollectionParms
WHERE parmName='COLLECTION SERVER ID')
GO

GO
--SqlScripter----[dbo].[dts_dtasset_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[dts_dtasset_view]') IS NULL EXEC('CREATE VIEW [dbo].[dts_dtasset_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[dts_dtasset_view]
( object_id,
                               label,
							   asset_host_name,
							   asset_host_uuid,
							   asset_primary_mac_address,
							   asset_primary_network_address,
							   asset_usage_list,
							   asset_source_uuid,
							   asset_ip_address,
							   asset_primary_subnet_mask
							 )
	AS
	SELECT ca_discovered_hardware.dis_hw_uuid,
	       ca_discovered_hardware.label,
		   ca_discovered_hardware.host_name,
		   ca_discovered_hardware.host_uuid,
		   ca_discovered_hardware.primary_mac_address,
		   ca_discovered_hardware.primary_network_address,
		   ca_discovered_hardware.usage_list,
		   ca_discovered_hardware.asset_source_uuid,
		   ca_agent.ip_address,
		   ca_discovered_hardware.primary_subnet_mask
	FROM ( ca_discovered_hardware LEFT OUTER JOIN ca_agent ON ca_discovered_hardware.dis_hw_uuid = ca_agent.object_uuid)
GO

GO
--SqlScripter----[dbo].[e2e_apm_AnalysisAlertsV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AnalysisAlertsV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AnalysisAlertsV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AnalysisAlertsV]
AS SELECT r.trans_id AS TRANSID, t.trans_state AS  TRANS_STATE,r.trans_wellness AS TRANS_WELLNESS,
r.num_exception AS EXCEPTION,r.start_datetime AS  TStamp,r.app_id AS APPID, a.app_name AS APPLICATION,r.op_id AS OPID, o.op_name AS OPERATION,
r.server_id AS SERVERID, s.server_name AS SERVER, r.client_id AS CLIENTID, c.client_name AS  CLIENT, r.user_id AS USERID, r.duration AS RESPONSETIME,
r.local_dur AS LOCALTIME, r.wire_dur AS  NETWORKTIME, r.server_dur AS SERVERTIME,r.num_complete AS COMPLETED, r.num_cancelled AS  CANCELLED,
r.delta_threshold AS DELTA_THRESHOLD, CONVERT(float(8), r.exception_threshold)/1000 AS THRESHOLD, CONVERT(float(8), r.net_total) /1000 AS NETTOTAL,
CONVERT(float(8), r.net_global) /1000 AS NETGLOBAL, r.cpu_util AS  CPUUTIL, r.mem_util AS MEMUTIL,a.app_name + '/' + o.op_name AS APPOPNAME,
r.host_id AS HOSTID,  h.ip AS HOSTIP, h.local_name AS HOSTNAME FROM e2e_apm_application a INNER JOIN e2e_apm_resp_data r ON a.app_id = r.app_id
INNER JOIN e2e_apm_operation o  ON r.op_id = o.op_id INNER JOIN e2e_apm_client c ON r.client_id = c.client_id INNER  JOIN e2e_apm_server s
ON r.server_id = s.server_id INNER JOIN e2e_apm_alert t ON r.trans_id = t.trans_id INNER JOIN e2e_apm_host h ON r.host_id =  h.host_id WHERE r.trans_wellness > 0
GO

GO
--SqlScripter----[dbo].[e2e_apm_AnalysisDetail_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AnalysisDetail_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AnalysisDetail_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AnalysisDetail_dayV]
AS SELECT r.start_datetime AS TStamp,r.app_id AS APPID,  a.app_name AS APPLICATION,
r.op_id AS OPID, o.op_name AS OPERATION, r.server_id AS SERVERID,  s.server_name AS SERVER, r.client_id AS CLIENTID,
c.client_name AS CLIENT, r.user_id AS USERID,  r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME,
r.server_dur AS  SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS  EXCEPTION,
r.delta_threshold AS DELTA_THRESHOLD, CONVERT(float(8), r.exception_threshold)/1000 AS THRESHOLD,  CONVERT(float(8), r.net_total) /1000 AS NETTOTAL,
CONVERT(float(8), r.net_global) /1000 AS NETGLOBAL, r.cpu_util AS  CPUUTIL, r.mem_util AS MEMUTIL, a.app_name + '/' + o.op_name AS APPOPNAME,
r.host_id AS HOSTID,  h.ip AS HOSTIP, h.local_name AS HOSTNAME FROM e2e_apm_application a INNER JOIN e2e_apm_resp_data_day r
ON a.app_id = r.app_id INNER JOIN e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN e2e_apm_client c ON r.client_id =  c.client_id
INNER JOIN e2e_apm_server s ON r.server_id = s.server_id INNER JOIN e2e_apm_host h ON r.host_id = h.host_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_AnalysisDetail_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AnalysisDetail_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AnalysisDetail_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AnalysisDetail_hourV]
AS SELECT r.start_datetime AS TStamp,r.app_id AS APPID, a.app_name AS APPLICATION,
r.op_id AS OPID, o.op_name AS OPERATION, r.server_id AS SERVERID, s.server_name AS SERVER, r.client_id AS CLIENTID,c.client_name AS CLIENT, r.user_id AS USERID, 
r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, 
r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.delta_threshold AS DELTA_THRESHOLD, dbo.float8(r.exception_threshold)/1000 AS THRESHOLD, 
dbo.float8(r.net_total) /1000 AS NETTOTAL, dbo.float8(r.net_global) /1000 AS NETGLOBAL, r.cpu_util AS CPUUTIL, r.mem_util AS MEMUTIL, 
a.app_name + '/' + o.op_name AS APPOPNAME, r.host_id AS HOSTID, h.host_name AS HOSTIP, h.local_name AS HOSTNAME FROM  e2e_apm_application a 
INNER JOIN  e2e_apm_resp_data_hour r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c 
ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id INNER JOIN  e2e_apm_host h ON r.host_id = h.host_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_AnalysisDetailV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AnalysisDetailV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AnalysisDetailV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AnalysisDetailV]
AS SELECT r.start_datetime AS TStamp,r.app_id AS APPID, a.app_name AS APPLICATION,r.op_id AS OPID, o.op_name AS OPERATION, 
		r.server_id AS SERVERID, s.server_name AS SERVER, r.client_id AS CLIENTID, c.client_name AS CLIENT, 
		r.user_id AS USERID, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, 
		r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, 
		r.num_exception AS EXCEPTION, r.delta_threshold AS DELTA_THRESHOLD, dbo.float8(r.exception_threshold)/1000 AS THRESHOLD,
		dbo.float8(r.net_total) /1000 AS NETTOTAL, dbo.float8(r.net_global) /1000 AS NETGLOBAL, r.cpu_util AS CPUUTIL, 
		r.mem_util AS MEMUTIL, a.app_name + '/' + o.op_name AS APPOPNAME, 
		r.host_id AS HOSTID, h.host_name AS HOSTIP, h.local_name AS HOSTNAME 
	FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o 
	ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON 
		r.server_id = s.server_id INNER JOIN  e2e_apm_host h ON r.host_id = h.host_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_AppOpSummary_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AppOpSummary_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AppOpSummary_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AppOpSummary_dayV]
AS SELECT a.app_id AS APPID, a.app_name AS APPLICATION, o.op_name AS OPERATION, r.duration AS DURATION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.duration AS MAXDURATION, r.local_dur AS MAXLOCALTIME, r.wire_dur AS MAXNETWORKTIME, r.server_dur AS MAXSERVERTIME, r.start_datetime AS TStamp, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_AppOpSummary_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AppOpSummary_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AppOpSummary_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AppOpSummary_hourV]
AS SELECT a.app_id AS APPID, a.app_name AS APPLICATION, o.op_name AS OPERATION, r.duration AS DURATION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.duration AS MAXDURATION, r.local_dur AS MAXLOCALTIME, r.wire_dur AS MAXNETWORKTIME, r.server_dur AS MAXSERVERTIME, r.start_datetime AS TStamp, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED FROM  e2e_apm_resp_data_hour r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_AppOpSummaryV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_AppOpSummaryV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_AppOpSummaryV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_AppOpSummaryV]
AS SELECT a.app_id AS APPID, a.app_name AS APPLICATION, o.op_name AS OPERATION, r.duration AS DURATION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.duration AS MAXDURATION, r.local_dur AS MAXLOCALTIME, r.wire_dur AS MAXNETWORKTIME, r.server_dur AS MAXSERVERTIME, r.start_datetime AS TStamp, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_CancellationDetail_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_CancellationDetail_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_CancellationDetail_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_CancellationDetail_dayV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, r.duration AS hVALUE, dbo.float8(r.exception_threshold) /1000 AS THRESHOLD, 
r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, 
s.server_name AS SERVER, a.app_name + '/' + c.client_name AS APPCLINAME, o.op_name AS OPERATION, r.op_id AS OPID FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id 
INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_cancelled > 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_CancellationDetail_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_CancellationDetail_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_CancellationDetail_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_CancellationDetail_hourV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold)/1000 AS THRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, s.server_name AS SERVER, a.app_name + '/' + c.client_name AS APPCLINAME, o.op_name AS OPERATION, r.op_id AS OPID FROM  e2e_apm_resp_data_hour r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_cancelled > 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_CancellationDetailV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_CancellationDetailV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_CancellationDetailV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_CancellationDetailV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold)/1000 AS THRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, s.server_name AS SERVER, a.app_name +'/' + c.client_name AS APPCLINAME, o.op_name AS OPERATION,r.op_id AS OPID FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_cancelled > 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_ClientSummary_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ClientSummary_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ClientSummary_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ClientSummary_dayV]
AS SELECT c.client_name AS CLIENT, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.client_id AS CLIENTID FROM  e2e_apm_client c INNER JOIN  e2e_apm_resp_data_day r ON c.client_id = r.client_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ClientSummary_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ClientSummary_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ClientSummary_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ClientSummary_hourV]
AS SELECT c.client_name AS CLIENT, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.client_id AS CLIENTID FROM  e2e_apm_client c INNER JOIN  e2e_apm_resp_data_hour r ON c.client_id = r.client_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ClientSummaryV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ClientSummaryV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ClientSummaryV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ClientSummaryV]
AS SELECT c.client_name AS CLIENT, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.client_id AS CLIENTID FROM  e2e_apm_client c INNER JOIN  e2e_apm_resp_data r ON c.client_id = r.client_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail_dayV]
AS SELECT t.trans_id AS TRANSID, a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, 
r.duration AS VALUE, dbo.float8(r.exception_threshold) /1000 AS THRESHOLD, r.start_datetime AS TStamp, t.trans_state AS STATUS, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, 
r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id 
INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id 
INNER JOIN  e2e_apm_alert t ON r.trans_id = t.trans_id WHERE (r.trans_wellness = 1)
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail_hourV]
AS SELECT t.trans_id AS TRANSID, a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.start_datetime AS TStamp, t.trans_state AS STATUS, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id INNER JOIN  e2e_apm_alert t ON r.trans_id = t.trans_id WHERE (r.trans_wellness = 1)
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail2_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail2_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail2_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail2_dayV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold)/1000 AS THRESHOLD, r.start_datetime ASTStamp, r.duration AS RESPONSETIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, s.server_name AS SERVER, a.app_name + '/' + c.client_name AS APPCLINAME, o.op_name AS OPERATION, r.op_id AS OPID FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail2_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail2_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail2_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail2_hourV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, s.server_name AS SERVER, a.app_name + '/' + c.client_name AS APPCLINAME, o.op_name AS OPERATION, r.op_id AS OPID FROM  e2e_apm_resp_data_hour r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail2V].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail2V]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail2V] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail2V]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, s.server_name AS SERVER, a.app_name +'/' + c.client_name AS APPCLINAME, o.op_name AS OPERATION, r.op_id AS OPID FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail3_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail3_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail3_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail3_dayV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID,r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.exception_threshold/1000 AS MINTHRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur ASSERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_exception > 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail3_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail3_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail3_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail3_hourV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.exception_threshold/1000 AS MINTHRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data_hour r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_exception > 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetail3V].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetail3V]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetail3V] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetail3V]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.exception_threshold/1000 AS MINTHRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_exception > 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_ExceptionDetailV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ExceptionDetailV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ExceptionDetailV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ExceptionDetailV]
AS SELECT t.trans_id AS TRANSID, a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, r.start_datetime AS TStamp, t.trans_state AS STATUS, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id INNER JOIN  e2e_apm_alert t ON r.trans_id = t.trans_id WHERE (r.trans_wellness = 1)
GO

GO
--SqlScripter----[dbo].[e2e_apm_GeneralDetail_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_GeneralDetail_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_GeneralDetail_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_GeneralDetail_dayV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.user_id AS USERID, r.op_id AS OPID, o.op_name AS OPERATION, r.server_id AS SERVERID, r.client_id AS CLIENTID, c.client_name AS CLIENT, s.server_name AS SERVER, r.duration AS MAXRESPONSETIME, r.duration AS MINRESPONSETIME, r.local_dur AS MAXLOCALTIME, r.wire_dur AS MAXNETWORKTIME, r.server_dur AS MAXSERVERTIME, r.server_dur AS MINSERVERTIME, a.app_name + '/' + o.op_name AS APPOPNAME FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data_day r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_GeneralDetail_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_GeneralDetail_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_GeneralDetail_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_GeneralDetail_hourV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.user_id AS USERID, r.op_id AS OPID, o.op_name AS OPERATION, r.server_id AS SERVERID, r.client_id AS CLIENTID, c.client_name AS CLIENT, s.server_name AS SERVER, r.duration AS MAXRESPONSETIME, r.duration AS MINRESPONSETIME, r.local_dur AS MAXLOCALTIME, r.wire_dur AS MAXNETWORKTIME, r.server_dur AS MAXSERVERTIME, r.server_dur AS MINSERVERTIME, a.app_name + '/' + o.op_name AS APPOPNAME FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data_hour r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_GeneralDetailV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_GeneralDetailV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_GeneralDetailV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_GeneralDetailV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.user_id AS USERID, r.op_id AS OPID, o.op_name AS OPERATION, r.server_id AS SERVERID, r.client_id AS CLIENTID, c.client_name AS CLIENT, s.server_name AS SERVER,r.duration AS MAXRESPONSETIME, r.duration AS MINRESPONSETIME, r.local_dur AS MAXLOCALTIME, r.wire_dur AS MAXNETWORKTIME, r.server_dur AS MAXSERVERTIME, r.server_dur AS MINSERVERTIME, a.app_name + '/' + o.op_name AS APPOPNAME FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_LocationDetails_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_LocationDetails_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_LocationDetails_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_LocationDetails_dayV]
AS SELECT h.host_id AS HostID, h.ip AS IPADDRESS, h.host_name AS HOSTNAME, h.local_name AS LOCALNAME, h.os, h.aro_server AS AROSERVER, h.last_contact AS LASTCONTACT,h.thresh_version AS THRESH_VERSION, h.startup_time AS STARTUP_TIME, h.remark AS REMARK, r.trans_id AS TRANSID, r.app_id AS APPID, r.op_id AS OPID, r.client_id AS CLIENTID, r.user_id AS USERID, r.server_id AS SERVERID, a.app_name AS APPLICATION, o.op_name AS OPERATION, u.user_name AS USERNAME,c.client_name AS CLIENT, s.server_name AS SERVER, r.start_datetime AS TStamp,r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTIONS, CONVERT(float(8), r.net_total)/1000 AS NETTOTAL, CONVERT(float(8), r.net_global)/1000 AS NETGLOBAL, r.delta_threshold AS DELTA_THRESHOLD, CONVERT(float(8), r.exception_threshold) AS THRESHOLD, r.cpu_util AS CPUUTIL, r.mem_util AS MEMUTIL, n.subnet AS SUBNET, n.octet1 AS OCTET1, n.octet2 AS OCTET2 , n.octet3 AS OCTET3 FROM  e2e_apm_host h INNER JOIN  e2e_apm_resp_data_day r ON h.host_id = r.host_id INNER JOIN  e2e_apm_client c ON c.client_id = r.client_id INNER JOIN  e2e_apm_server s ON s.server_id = r.server_id INNER JOIN  e2e_apm_user u ON u.user_id = r.user_id INNER JOIN  e2e_apm_application a ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON o.op_id = r.op_id INNER JOIN  e2e_apm_subnet n ON n.host_id = h.host_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_LocationDetails_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_LocationDetails_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_LocationDetails_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_LocationDetails_hourV]
AS SELECT h.host_id AS HostID, h.ip AS IPADDRESS, h.host_name AS HOSTNAME, h.local_name AS LOCALNAME, h.os, h.aro_server AS AROSERVER, h.last_contact AS LASTCONTACT,h.thresh_version AS THRESH_VERSION, h.startup_time AS STARTUP_TIME, h.remark AS REMARK, r.trans_id AS TRANSID, r.app_id AS APPID, r.op_id AS OPID, r.client_id AS CLIENTID, r.user_id AS USERID, r.server_id AS SERVERID, a.app_name AS APPLICATION, o.op_name AS OPERATION, u.user_name AS USERNAME,c.client_name AS CLIENT, s.server_name AS SERVER, r.start_datetime AS TStamp,r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTIONS, CONVERT(float(8), r.net_total)/1000 AS NETTOTAL, CONVERT(float(8), r.net_global)/1000 AS NETGLOBAL, r.delta_threshold AS DELTA_THRESHOLD, CONVERT(float(8), r.exception_threshold) AS THRESHOLD, r.cpu_util AS CPUUTIL,r.mem_util AS MEMUTIL, n.subnet AS SUBNET, n.octet1 AS OCTET1, n.octet2 AS OCTET2 , n.octet3 AS OCTET3 FROM  e2e_apm_host h INNER JOIN  e2e_apm_resp_data_hour r ON h.host_id = r.host_id INNER JOIN  e2e_apm_client c ON c.client_id = r.client_id INNER JOIN  e2e_apm_server s ON s.server_id = r.server_id INNER JOIN  e2e_apm_user u ON u.user_id = r.user_id INNER JOIN  e2e_apm_application a ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON o.op_id = r.op_id INNER JOIN  e2e_apm_subnet n ON n.host_id = h.host_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_LocationDetailsV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_LocationDetailsV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_LocationDetailsV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_LocationDetailsV]
AS SELECT h.host_id AS HostID, h.ip AS IPADDRESS, h.host_name AS HOSTNAME, h.local_name AS LOCALNAME, h.os, h.aro_server AS AROSERVER, h.last_contact AS LASTCONTACT, h.thresh_version AS THRESH_VERSION,h.startup_time AS STARTUP_TIME, h.remark AS REMARK, r.trans_id AS TRANSID, r.app_id AS APPID, r.op_id AS OPID, r.client_id AS CLIENTID, r.user_id AS USERID, r.server_id AS SERVERID, a.app_name AS APPLICATION, o.op_name AS OPERATION, u.user_name AS USERNAME,c.client_name AS CLIENT, s.server_name AS SERVER, r.start_datetime AS TStamp,r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTIONS, CONVERT(float(8), r.net_total)/1000 AS NETTOTAL, CONVERT(float(8), r.net_global)/1000 AS NETGLOBAL, r.delta_threshold AS DELTA_THRESHOLD, CONVERT(float(8), r.exception_threshold) AS THRESHOLD, r.cpu_util AS CPUUTIL, r.mem_util AS MEMUTIL, n.subnet AS SUBNET, n.octet1 AS OCTET1, n.octet2 AS OCTET2 , n.octet3 AS OCTET3 FROM  e2e_apm_host h INNER JOIN  e2e_apm_resp_data r ON h.host_id = r.host_id INNER JOIN  e2e_apm_client c ON c.client_id = r.client_id INNER JOIN  e2e_apm_server s ON s.server_id = r.server_id INNER JOIN  e2e_apm_user u ON u.user_id = r.user_id INNER JOIN  e2e_apm_application a ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON o.op_id = r.op_id INNER JOIN  e2e_apm_subnet n ON n.host_id = h.host_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_NonExceptDetail3_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_NonExceptDetail3_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_NonExceptDetail3_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_NonExceptDetail3_dayV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID,r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, CONVERT(float(8), r.exception_threshold) /1000 AS MINTHRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_exception = 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_NonExceptDetail3_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_NonExceptDetail3_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_NonExceptDetail3_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_NonExceptDetail3_hourV]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, CONVERT(float(8), r.exception_threshold) /1000 AS MINTHRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data_hour r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_exception = 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_NonExceptDetail3V].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_NonExceptDetail3V]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_NonExceptDetail3V] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_NonExceptDetail3V]
AS SELECT a.app_name AS APPLICATION, r.app_id AS APPID, o.op_name AS OPERATION, r.op_id AS OPID, c.client_name AS CLIENT, r.client_id AS CLIENTID, s.server_name AS SERVER, r.server_id AS SERVERID, r.duration AS VALUE, CONVERT(float(8), r.exception_threshold) /1000 AS THRESHOLD, CONVERT(float(8), r.exception_threshold) /1000 AS MINTHRESHOLD, r.start_datetime AS TStamp, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id WHERE (r.num_exception = 0)
GO

GO
--SqlScripter----[dbo].[e2e_apm_OperationSummary_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_OperationSummary_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_OperationSummary_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_OperationSummary_dayV]
AS SELECT a.app_id AS APPID, a.app_name AS APPLICATION, o.op_name AS OPERATION, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data_day r ON a.app_id = r.app_id INNER JOIN e2e_apm_operation o ON r.op_id = o.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_OperationSummary_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_OperationSummary_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_OperationSummary_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_OperationSummary_hourV]
AS SELECT a.app_id AS APPID, a.app_name AS APPLICATION, o.op_name AS OPERATION, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data_hour r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_OperationSummaryV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_OperationSummaryV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_OperationSummaryV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_OperationSummaryV]
AS SELECT a.app_id AS APPID, a.app_name AS APPLICATION, o.op_name AS OPERATION, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.server_dur AS SERVERTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp FROM  e2e_apm_application a INNER JOIN  e2e_apm_resp_data r ON a.app_id = r.app_id INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_RootCauseAnalysisV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_RootCauseAnalysisV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_RootCauseAnalysisV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_RootCauseAnalysisV]
AS SELECT  r.trans_id AS TRANSID,t.trans_state AS TRANS_STATE,
r.trans_wellness AS TRANS_WELLNESS, r.num_exception AS EXCEPTION,r.start_datetime AS TStamp,
r.app_id AS APPID, a.app_name AS APPLICATION,r.op_id AS OPID, o.op_name AS OPERATION,
r.server_id AS SERVERID, s.server_name AS SERVER,r.client_id AS CLIENTID,  c.client_name AS CLIENT,
r.user_id AS USERID, r.duration AS RESPONSETIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME,
r.server_dur AS SERVERTIME,r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED,
r.delta_threshold AS DELTA_THRESHOLD,CONVERT(float(8), r.exception_threshold)/1000 AS THRESHOLD,
CONVERT(float(8), r.net_total) /1000 AS NETTOTAL, CONVERT(float(8), r.net_global) /1000  AS NETGLOBAL, r.cpu_util AS CPUUTIL,
r.mem_util AS MEMUTIL,a.app_name + '/' + o.op_name AS APPOPNAME, r.host_id AS HOSTID,
h.host_name AS HOSTIP, h.local_name AS HOSTNAME FROM e2e_apm_application a INNER JOIN  e2e_apm_resp_data r
ON a.app_id = r.app_id INNER JOIN e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN e2e_apm_client c ON
r.client_id = c.client_id INNER JOIN e2e_apm_server s ON r.server_id = s.server_id INNER JOIN e2e_apm_alert t
ON r.trans_id = t.trans_id INNER JOIN e2e_apm_host h ON r.host_id = h.host_id WHERE r.trans_wellness > 0
GO

GO
--SqlScripter----[dbo].[e2e_apm_ServerSummary_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ServerSummary_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ServerSummary_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ServerSummary_dayV]
AS SELECT s.server_name AS SERVER, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.server_id AS SERVERID FROM  e2e_apm_server s INNER JOIN  e2e_apm_resp_data_day r ON s.server_id = r.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ServerSummary_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ServerSummary_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ServerSummary_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ServerSummary_hourV]
AS SELECT s.server_name AS SERVER, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.server_id AS SERVERID FROM  e2e_apm_server s INNER JOIN  e2e_apm_resp_data_hour r ON s.server_id = r.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_ServerSummaryV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_ServerSummaryV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_ServerSummaryV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_ServerSummaryV]
AS SELECT s.server_name AS SERVER, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.server_id AS SERVERID FROM  e2e_apm_server s INNER JOIN  e2e_apm_resp_data r ON s.server_id = r.server_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_SubTransactionsDetailV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_SubTransactionsDetailV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_SubTransactionsDetailV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_SubTransactionsDetailV]
AS SELECT r.trans_id AS TRANSID,
r.app_id AS APPID, a.app_name AS APPNAME, r.op_id AS OPID, o.op_name AS OPNAME,
r.start_datetime AS TStamp, r.duration AS RESPONSETIME, s.query AS SUBTRANSNAME,
s.query_type AS SUBTRANSTYPE, s.duration AS SUBTRANSTIME, s.server_name AS SUBTRANSSERVER,
s.server_ip AS SUBTRANSSRVIP, s.server_port AS SUBTRANSSRVPORT, s.packets AS SUBTRANSPACKETS,
s.bytes AS SUBTRANSBYTES  FROM e2e_apm_net_subs s INNER JOIN e2e_apm_resp_data r
ON s.parent_trans = r.trans_id INNER JOIN e2e_apm_application a ON a.app_id = r.app_id
INNER JOIN e2e_apm_operation o ON o.op_id = r.op_id
GO

GO
--SqlScripter----[dbo].[e2e_apm_WebResponseDetail_dayV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_WebResponseDetail_dayV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_WebResponseDetail_dayV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_WebResponseDetail_dayV]
AS SELECT c.client_name AS CLIENT, s.server_name AS SERVER, a.app_name AS APPLICATION, r.duration AS RESPONSETIME, r.server_dur AS SERVERTIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME,r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.app_id AS APPID, r.server_id AS SERVERID FROM  e2e_apm_resp_data_day r INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id WHERE (o.op_name = 'Page Load (Browser Response)')
GO

GO
--SqlScripter----[dbo].[e2e_apm_WebResponseDetail_hourV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_WebResponseDetail_hourV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_WebResponseDetail_hourV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_WebResponseDetail_hourV]
AS SELECT c.client_name AS CLIENT, s.server_name AS SERVER, a.app_name AS APPLICATION, r.duration AS RESPONSETIME, r.server_dur AS SERVERTIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.num_exception AS EXCEPTION, r.num_cancelled AS CANCELLED, r.num_complete AS COMPLETED, r.start_datetime AS TStamp, r.app_id AS APPID, r.server_id AS SERVERID FROM  e2e_apm_resp_data_hour r INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id WHERE (o.op_name = 'Page Load (Browser Response)')
GO

GO
--SqlScripter----[dbo].[e2e_apm_WebResponseDetailV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_apm_WebResponseDetailV]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_apm_WebResponseDetailV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_apm_WebResponseDetailV]
AS SELECT c.client_name AS CLIENT, s.server_name AS SERVER, a.app_name AS APPLICATION, r.duration AS RESPONSETIME, r.server_dur AS SERVERTIME, r.local_dur AS LOCALTIME, r.wire_dur AS NETWORKTIME, r.num_complete AS COMPLETED, r.num_cancelled AS CANCELLED, r.num_exception AS EXCEPTION, r.start_datetime AS TStamp, r.app_id AS APPID, r.server_id AS SERVERID FROM  e2e_apm_resp_data r INNER JOIN  e2e_apm_operation o ON r.op_id = o.op_id INNER JOIN  e2e_apm_client c ON r.client_id = c.client_id INNER JOIN  e2e_apm_server s ON r.server_id = s.server_id INNER JOIN  e2e_apm_application a ON r.app_id = a.app_id WHERE (o.op_name= 'Page Load (Browser Response)')
GO

GO
--SqlScripter----[dbo].[e2e_wrm_columnnamev].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_columnnamev]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_columnnamev] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_columnnamev]
AS 
SELECT e2e_wrm_reportcolumn.columnname, e2e_wrm_reportcolumn.title, 
e2e_wrm_report.tablename, e2e_wrm_report.title AS reporttitle, 
e2e_wrm_reportcolumn.isvisible, e2e_wrm_reportcolumn.presentation, 
e2e_wrm_reportcolumn.formula, e2e_wrm_reportcolumn.sortby 
FROM  e2e_wrm_report inner JOIN  e2e_wrm_reportcolumn 
ON e2e_wrm_report.reportid = e2e_wrm_reportcolumn.reportid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmdetailv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmdetailv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmdetailv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmdetailv]
AS 
SELECT e2e_wrm_wrm.timestart, e2e_wrm_countersource.sourcename, e2e_wrm_wrmtype.name AS type, 
e2e_wrm_wrmidentifier.name AS transactionname, e2e_wrm_countersource.hostname, 
wrmidentifier_1.name AS identifier, e2e_wrm_weblogurl.url, e2e_wrm_wrmstatusmessage.message, 
wrmstat_2.name AS summarystatus, wrmstat_1.name AS accuracystatus, 
e2e_wrm_wrm.resptime, e2e_wrm_wrm.firstbytems, e2e_wrm_wrm.statuscode, 
e2e_wrm_wrm.bytesrec, e2e_wrm_wrm.retrycount, e2e_wrm_wrm.connecttimems, 
e2e_wrm_wrm.pingtimems, e2e_wrm_wrmrequestname.name AS requestname 
FROM  e2e_wrm_wrm INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrm.sourceid = e2e_wrm_countersource.sourceid 
INNER JOIN  e2e_wrm_wrmtype ON e2e_wrm_wrm.typeid = e2e_wrm_wrmtype.typeid 
LEFT OUTER JOIN  e2e_wrm_wrmrequestname ON e2e_wrm_wrm.requestnameid = e2e_wrm_wrmrequestname.requestnameid 
LEFT OUTER JOIN  e2e_wrm_weblogurl ON e2e_wrm_wrm.urlid = e2e_wrm_weblogurl.urlid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier ON e2e_wrm_wrm.transactionid = e2e_wrm_wrmidentifier.identifierid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier wrmidentifier_1 ON e2e_wrm_wrm.identifierid = wrmidentifier_1.identifierid 
LEFT OUTER JOIN  e2e_wrm_wrmstatusmessage ON e2e_wrm_wrm.statusmessageid = e2e_wrm_wrmstatusmessage.statusmessageid 
LEFT OUTER JOIN  e2e_wrm_wrmstat wrmstat_1 ON e2e_wrm_wrm.newaccuracystatid = wrmstat_1.statusid 
LEFT OUTER JOIN  e2e_wrm_wrmstat wrmstat_2 ON e2e_wrm_wrm.newsumstatid = wrmstat_2.statusid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmgroupsummaryv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmgroupsummaryv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmgroupsummaryv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmgroupsummaryv]
AS 
SELECT e2e_wrm_wrmreport.timestart, e2e_wrm_wrmstat.name AS summarystatus, 
e2e_wrm_wrmtype.name AS type, e2e_wrm_weblogurl.url, 
e2e_wrm_wrmidentifier.name AS transactionname, e2e_wrm_wrmgroup.name AS groupname, 
e2e_wrm_countersource.sourcename, e2e_wrm_countersource.hostname, e2e_wrm_wrmreport.timefactor FROM  e2e_wrm_wrmreport INNER JOIN  e2e_wrm_wrmgroup ON e2e_wrm_wrmreport.groupid = e2e_wrm_wrmgroup.groupid INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrmreport.sourceid = e2e_wrm_countersource.sourceid LEFT OUTER JOIN  e2e_wrm_wrmidentifier ON e2e_wrm_wrmreport.transactionid = e2e_wrm_wrmidentifier.identifierid LEFT OUTER JOIN  e2e_wrm_wrmtype ON e2e_wrm_wrmreport.typeid = e2e_wrm_wrmtype.typeid LEFT OUTER JOIN  e2e_wrm_wrmstat ON e2e_wrm_wrmreport.newsumstatid = e2e_wrm_wrmstat.statusid LEFT OUTER JOIN  e2e_wrm_weblogurl ON e2e_wrm_wrmreport.urlid = e2e_wrm_weblogurl.urlid WHERE (e2e_wrm_wrmreport.transactionid = 0) AND (e2e_wrm_wrmreport.urlid IS NOT NULL) OR (e2e_wrm_wrmreport.transactionid IS NOT NULL) AND (e2e_wrm_wrmreport.urlid IS NULL)
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmgroupsv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmgroupsv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmgroupsv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmgroupsv]
AS 
SELECT e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, 
e2e_wrm_wrmgroup.name as groupname, wrmstat.name AS summarystatus, 
e2e_wrm_weblogurl.url, e2e_wrm_wrmidentifier.name AS identifier 
FROM  e2e_wrm_wrmstat wrmstat RIGHT OUTER JOIN  e2e_wrm_wrmreport 
INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrmreport.sourceid = e2e_wrm_countersource.sourceid 
INNER JOIN  e2e_wrm_wrmgroup ON e2e_wrm_wrmreport.groupid = e2e_wrm_wrmgroup.groupid 
INNER JOIN  e2e_wrm_weblogurl ON e2e_wrm_wrmreport.urlid = e2e_wrm_weblogurl.urlid 
INNER JOIN  e2e_wrm_wrmidentifier ON e2e_wrm_wrmreport.identifierid = e2e_wrm_wrmidentifier.identifierid 
ON wrmstat.statusid = e2e_wrm_wrmreport.newsumstatid 
GROUP BY e2e_wrm_countersource.hostname, e2e_wrm_wrmgroup.name, 
e2e_wrm_countersource.sourcename, wrmstat.name, 
e2e_wrm_weblogurl.url, e2e_wrm_wrmidentifier.name
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrminstancesv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrminstancesv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrminstancesv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrminstancesv]
("HostName", "SourceName")  AS
       SELECT "e2e_wrm_countersource"."hostname", "e2e_wrm_countersource"."sourcename"
       FROM "e2e_wrm_countersource"
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmmessagev].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmmessagev]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmmessagev] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmmessagev]
AS 
SELECT e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, 
e2e_wrm_wrmstatusmessage.message, e2e_wrm_wrmidentifier.name AS identifier, 
e2e_wrm_weblogurl.url FROM  e2e_wrm_wrmreport 
INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrmreport.sourceid = e2e_wrm_countersource.sourceid 
INNER JOIN  e2e_wrm_wrmstatusmessage ON e2e_wrm_wrmreport.statusmessageid = e2e_wrm_wrmstatusmessage.statusmessageid 
INNER JOIN  e2e_wrm_wrmidentifier ON e2e_wrm_wrmreport.identifierid = e2e_wrm_wrmidentifier.identifierid 
INNER JOIN  e2e_wrm_weblogurl ON e2e_wrm_wrmreport.urlid = e2e_wrm_weblogurl.urlid 
GROUP BY e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, e2e_wrm_wrmstatusmessage.message, e2e_wrm_wrmidentifier.name, e2e_wrm_weblogurl.url
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmnotsentdetailv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmnotsentdetailv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmnotsentdetailv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmnotsentdetailv]
AS 
SELECT e2e_wrm_wrm.timestart, e2e_wrm_wrm.timeend, e2e_wrm_countersource.sourcename, 
e2e_wrm_wrmtype.name AS type, e2e_wrm_wrmidentifier.name AS transactionname, 
e2e_wrm_countersource.hostname, e2e_wrm_weblogurl.url, 
wrmidentifier_1.name AS identifier, 
e2e_wrm_wrmstatusmessage.message, wrmstat_2.name AS summarystatus, 
wrmstat_1.name AS accuracystatus, 
e2e_wrm_wrm.resptime, e2e_wrm_wrm.firstbytems, e2e_wrm_wrm.statuscode, e2e_wrm_wrm.bytesrec, 
e2e_wrm_wrm.retrycount, e2e_wrm_wrm.connecttimems, e2e_wrm_wrm.pingtimems FROM  e2e_wrm_wrm 
INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrm.sourceid = e2e_wrm_countersource.sourceid 
INNER JOIN  e2e_wrm_wrmtype ON e2e_wrm_wrm.typeid = e2e_wrm_wrmtype.typeid 
INNER JOIN  e2e_wrm_wrmstatusmessage ON e2e_wrm_wrm.statusmessageid = e2e_wrm_wrmstatusmessage.statusmessageid 
LEFT OUTER JOIN  e2e_wrm_wrmstat wrmstat_1 ON e2e_wrm_wrm.newaccuracystatid = wrmstat_1.statusid 
LEFT OUTER JOIN  e2e_wrm_wrmstat wrmstat_2 ON e2e_wrm_wrm.newsumstatid = wrmstat_2.statusid 
LEFT OUTER JOIN  e2e_wrm_weblogurl ON e2e_wrm_wrm.urlid = e2e_wrm_weblogurl.urlid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier ON e2e_wrm_wrm.transactionid = e2e_wrm_wrmidentifier.identifierid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier wrmidentifier_1 ON e2e_wrm_wrm.identifierid = wrmidentifier_1.identifierid 
WHERE (e2e_wrm_wrm.issent = 0)
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreportdetailv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreportdetailv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreportdetailv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreportdetailv]
AS 
SELECT     dbo.e2e_wrm_wrmreport.timestart, dbo.e2e_wrm_countersource.sourcename, dbo.e2e_wrm_wrmtype.name AS type, 
                      dbo.e2e_wrm_wrmidentifier.name AS transactionname, dbo.e2e_wrm_countersource.hostname, WRMIdentifier_1.name AS identifier, 
                      dbo.e2e_wrm_weblogurl.url, dbo.e2e_wrm_wrmstatusmessage.message, wrmstat_2.name AS summarystatus, wrmstat_1.name AS accuracystatus, 
                      dbo.e2e_wrm_wrmreport.resptime, dbo.e2e_wrm_wrmreport.firstbytems, dbo.e2e_wrm_wrmreport.statuscode, dbo.e2e_wrm_wrmreport.bytesrec, 
                      dbo.e2e_wrm_wrmreport.retrycount, dbo.e2e_wrm_wrmreport.connecttimems, dbo.e2e_wrm_wrmreport.pingtimems, 
                      dbo.e2e_wrm_wrmreport.timefactor, dbo.e2e_wrm_wrmgroup.name AS groupname, dbo.e2e_wrm_wrmrequestname.name AS requestname, 
                      dbo.e2e_wrm_wrmreport.pctresptime, dbo.e2e_wrm_wrmreport.maxresptime, dbo.e2e_wrm_wrmreport.minresptime
FROM         dbo.e2e_wrm_wrmreport INNER JOIN
                      dbo.e2e_wrm_countersource ON dbo.e2e_wrm_wrmreport.sourceid = dbo.e2e_wrm_countersource.sourceid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmtype ON dbo.e2e_wrm_wrmreport.typeid = dbo.e2e_wrm_wrmtype.typeid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmgroup ON dbo.e2e_wrm_wrmreport.groupid = dbo.e2e_wrm_wrmgroup.groupid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmrequestname ON dbo.e2e_wrm_wrmreport.requestnameid = dbo.e2e_wrm_wrmrequestname.requestnameid LEFT OUTER JOIN
                      dbo.e2e_wrm_weblogurl ON dbo.e2e_wrm_wrmreport.urlid = dbo.e2e_wrm_weblogurl.urlid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmidentifier ON dbo.e2e_wrm_wrmreport.transactionid = dbo.e2e_wrm_wrmidentifier.identifierid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmidentifier WRMIdentifier_1 ON dbo.e2e_wrm_wrmreport.identifierid = WRMIdentifier_1.identifierid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmstatusmessage ON 
                      dbo.e2e_wrm_wrmreport.statusmessageid = dbo.e2e_wrm_wrmstatusmessage.statusmessageid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmstat wrmstat_1 ON dbo.e2e_wrm_wrmreport.newaccuracystatid = wrmstat_1.statusid LEFT OUTER JOIN
                      dbo.e2e_wrm_wrmstat wrmstat_2 ON dbo.e2e_wrm_wrmreport.newsumstatid = wrmstat_2.statusid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreportdnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreportdnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreportdnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreportdnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."urlid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 2) AND (IsSent = 0 OR IsSent IS NULL) AND (typeid = 1 OR typeid = 2)
       GROUP BY sourceid, DATEPART([year], timestart), DATEPART([month], timestart), identifierid, typeid, urlid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporthnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporthnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporthnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporthnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, DATEPART([day], timestart) AS d, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."urlid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 1) AND (issent = 0 OR issent IS NULL) AND (typeid = 1 OR typeid = 2)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), DATEPART([day], timestart), identifierid, typeid, urlid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreportinotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreportinotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreportinotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreportinotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, DATEPART([day], timestart) AS d, DATEPART([hour], timestart) AS h, 
       "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."urlid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 0) AND (issent = 0 OR issent IS NULL) AND (typeid = 1 OR typeid = 2)
       GROUP BY sourceid, DATEPART([year], timestart), DATEPART([month], timestart), DATEPART([day], timestart), DATEPART([hour], timestart), identifierid, typeid, urlid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreportmnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreportmnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreportmnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreportmnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEPART([year], timestart) AS y, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."urlid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 4) AND (issent = 0 OR issent IS NULL) AND (typeid = 1 OR typeid = 2)
       GROUP BY sourceid, DATEPART([year], timestart), identifierid, typeid, urlid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttrandnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttrandnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttrandnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttrandnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."transactionid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 2) AND (issent = 0 OR issent IS NULL) AND (typeid = 3 OR typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), identifierid, typeid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranhnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranhnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranhnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranhnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, DATEPART([day], timestart) AS d, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."transactionid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 1) AND (issent = 0 OR issent IS NULL) AND (typeid = 3 OR typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), DATEPART([day], timestart), identifierid, typeid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttraninotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttraninotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttraninotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttraninotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", 
        DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, DATEPART([day], timestart) AS d, DATEPART([hour], timestart) AS h, 
        "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 0) AND (issent = 0 OR issent IS NULL) AND (typeid = 3 OR typeid = 4)
       GROUP BY sourceID, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), DATEPART([day], timestart), DATEPART([hour], timestart), identifierid, typeid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranmnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranmnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranmnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranmnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", DATEPART([year], timestart) AS y, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 4) AND (issent = 0 OR issent IS NULL) AND (typeid = 3 OR typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), identifierid, typeid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranreqdnotroll].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranreqdnotroll]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranreqdnotroll] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranreqdnotroll]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, "e2e_wrm_wrmreport"."requestnameid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 2) AND (issent = 0 OR issent IS NULL) AND (typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), requestnameid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranreqhnotroll].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranreqhnotroll]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranreqhnotroll] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranreqhnotroll]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", 
       DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, DATEPART([day], timestart) AS d, 
       "e2e_wrm_wrmreport"."requestnameid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 1) AND (issent = 0 OR issent IS NULL) AND (typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), DATEPART([day], timestart), requestnameid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranreqinotroll].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranreqinotroll]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranreqinotroll] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranreqinotroll]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", DATEPART([year], timestart) AS y, DATEPART([month], timestart) AS m, DATEPART([day], timestart) AS d, DATEPART([hour], timestart) AS h, 
       "e2e_wrm_wrmreport"."requestnameid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 0) AND (issent = 0 OR issent IS NULL) AND (typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), DATEPART([month], timestart), DATEPART([day], timestart), DATEPART([hour], timestart), requestnameid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranreqmnotroll].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranreqmnotroll]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranreqmnotroll] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranreqmnotroll]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", DATEPART([year], timestart) AS y, "e2e_wrm_wrmreport"."requestnameid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 4) AND (issent = 0 OR issent IS NULL) AND (typeid = 4)
       GROUP BY sourceid, transactionid, DATEPART([year], timestart), requestnameid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranreqwnotroll].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranreqwnotroll]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranreqwnotroll] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranreqwnotroll]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", DATEADD([Hour], (1 - DATEPART(weekday, timestart)) * 24, timestart) AS w, "e2e_wrm_wrmreport"."requestnameid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 2) AND (issent = 0 OR issent IS NULL) AND (typeid = 4)
       GROUP BY sourceid, transactionid, DATEADD([Hour], (1 - DATEPART(weekday, timestart)) * 24, timestart), requestnameid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreporttranwnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreporttranwnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreporttranwnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreporttranwnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", "e2e_wrm_wrmreport"."transactionid", 
       DATEADD([Hour], (1 - DATEPART(weekday, timestart)) * 24, timestart) AS w, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 2) AND (issent = 0 OR issent IS NULL) AND (typeid = 3 OR typeid = 4)
       GROUP BY sourceid, transactionid, DATEADD([Hour], (1 - DATEPART(weekday, timestart)) * 24, timestart), identifierid, typeid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmreportwnotrollv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmreportwnotrollv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmreportwnotrollv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmreportwnotrollv]
AS
       SELECT "e2e_wrm_wrmreport"."sourceid", DATEADD([hour], (1 - DATEPART(weekday, timestart)) * 24, timestart) AS w, "e2e_wrm_wrmreport"."identifierid", "e2e_wrm_wrmreport"."typeid", "e2e_wrm_wrmreport"."urlid"
       FROM "e2e_wrm_wrmreport"
       WHERE (timefactor = 2) AND (IsSent = 0 OR IsSent IS NULL) AND (typeid = 1 OR typeid = 2)
       GROUP BY sourceid, DATEADD([hour], (1 - DATEPART(weekday, timestart)) * 24, timestart), identifierid, typeid, urlid
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmtranrequestv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmtranrequestv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmtranrequestv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmtranrequestv]
AS 
SELECT e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, 
wrmidentifier_2.name AS transactionname, e2e_wrm_wrmtype.name AS type, 
e2e_wrm_wrmstat.name AS status, e2e_wrm_wrmrequestname.name AS requestname 
FROM  e2e_wrm_wrmrequestname RIGHT OUTER JOIN  e2e_wrm_wrmreport 
INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrmreport.sourceid = e2e_wrm_countersource.sourceid ON e2e_wrm_wrmrequestname.requestnameid = e2e_wrm_wrmreport.requestnameid 
LEFT OUTER JOIN  e2e_wrm_wrmstat ON e2e_wrm_wrmreport.newsumstatid = e2e_wrm_wrmstat.statusid 
LEFT OUTER JOIN  e2e_wrm_wrmtype ON e2e_wrm_wrmreport.typeid = e2e_wrm_wrmtype.typeid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier wrmidentifier_2 ON e2e_wrm_wrmreport.transactionid = wrmidentifier_2.identifierid 
GROUP BY e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, wrmidentifier_2.name, e2e_wrm_wrmtype.name, e2e_wrm_wrmstat.name, e2e_wrm_wrmrequestname.name
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmtransactionv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmtransactionv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmtransactionv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmtransactionv]
AS 
SELECT e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, 
e2e_wrm_wrmidentifier.name AS transactionname, e2e_wrm_wrmstat.name AS status 
FROM  e2e_wrm_wrmreport INNER JOIN  e2e_wrm_countersource 
ON e2e_wrm_wrmreport.sourceid = e2e_wrm_countersource.sourceid 
INNER JOIN  e2e_wrm_wrmidentifier ON e2e_wrm_wrmreport.transactionid = e2e_wrm_wrmidentifier.identifierid 
LEFT OUTER JOIN  e2e_wrm_wrmstat ON e2e_wrm_wrmstat.statusid = e2e_wrm_wrmreport.newsumstatid 
GROUP BY e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, e2e_wrm_wrmidentifier.name, e2e_wrm_wrmstat.name
GO

GO
--SqlScripter----[dbo].[e2e_wrm_wrmurlv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[e2e_wrm_wrmurlv]') IS NULL EXEC('CREATE VIEW [dbo].[e2e_wrm_wrmurlv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[e2e_wrm_wrmurlv]
AS 
SELECT e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, e2e_wrm_weblogurl.url, 
wrmidentifier_2.name AS transactionname, 
e2e_wrm_wrmtype.name AS type, wrmidentifier_1.name AS identifier, 
e2e_wrm_wrmstat.name AS status FROM  e2e_wrm_wrmstat 
RIGHT OUTER JOIN  e2e_wrm_wrmreport 
INNER JOIN  e2e_wrm_countersource ON e2e_wrm_wrmreport.sourceid = e2e_wrm_countersource.sourceid 
INNER JOIN  e2e_wrm_weblogurl ON e2e_wrm_wrmreport.urlid = e2e_wrm_weblogurl.urlid 
ON e2e_wrm_wrmstat.statusid = e2e_wrm_wrmreport.newsumstatid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier wrmidentifier_1 
ON e2e_wrm_wrmreport.identifierid = wrmidentifier_1.identifierid 
LEFT OUTER JOIN  e2e_wrm_wrmtype ON e2e_wrm_wrmreport.typeid = e2e_wrm_wrmtype.typeid 
LEFT OUTER JOIN  e2e_wrm_wrmidentifier wrmidentifier_2 ON e2e_wrm_wrmreport.transactionid = wrmidentifier_2.identifierid 
GROUP BY e2e_wrm_weblogurl.url, e2e_wrm_countersource.hostname, e2e_wrm_countersource.sourcename, WRMIdentifier_2.name,wrmidentifier_1.name, e2e_wrm_wrmtype.name, e2e_wrm_wrmstat.name
GO

GO
--SqlScripter----[dbo].[EchoPathScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[EchoPathScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[EchoPathScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[EchoPathScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,StatsCaptureOverThresholds=100-100*SUM(case WHEN a.fieldIndex=13201 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCaptureSumCompletionTime=100-100*SUM(case WHEN a.fieldIndex=13202 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectNumDisconnects=100-100*SUM(case WHEN a.fieldIndex=13203 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectTimeouts=100-100*SUM(case WHEN a.fieldIndex=13204 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectBusies=100-100*SUM(case WHEN a.fieldIndex=13205 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectNoConnections=100-100*SUM(case WHEN a.fieldIndex=13206 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectDrops=100-100*SUM(case WHEN a.fieldIndex=13207 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectSequenceErrors=100-100*SUM(case WHEN a.fieldIndex=13208 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,StatsCollectVerifyErrors=100-100*SUM(case WHEN a.fieldIndex=13209 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,availability=100-100*SUM(CASE WHEN a.fieldIndex =1602 THEN (a.alertDuration*1.0)/(24*3600) ELSE 0 END)
FROM ResourceNameEchoPathView r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
		AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=132
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[eventview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[eventview]') IS NULL EXEC('CREATE VIEW [dbo].[eventview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[eventview]
("eventid", "timestamp", "source", "fullname", "dept", "mscreenname", "cscreenname", "bscreenname")  AS
       SELECT "secure_event"."id", "secure_event"."timestamp", "secure_event"."source", "secure_person"."fullname", "secure_person"."department", "secure_machine"."screenname", "category"."screenname", "building"."screenname"
       FROM "secure_event", "secure_person", "secure_machine", "category", "personalias", "machinealias", "building"
       WHERE secure_event.personaliasid = personalias.id AND personalias.personid = secure_person.id AND secure_event.machinealiasid = machinealias.id AND machinealias.machineid = secure_machine.id AND (secure_machine.buildingid IS NULL OR secure_machine.buildingid = building.id) AND secure_event.categoryid = category.id
GO

GO
--SqlScripter----[dbo].[FRAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[FRAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,frCircuitSentOctets=CASE a.fieldIndex WHEN 501 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frCircuitSentFrames=CASE WHEN a.fieldIndex =502 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frCircuitReceivedFECNs=CASE WHEN a.fieldIndex=503 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frCircuitReceivedBECNs=case WHEN a.fieldIndex =504 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frCircuitReceivedFrames=CASE WHEN a.fieldIndex = 505 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frCircuitReceivedOctets=CASE WHEN a.fieldIndex=506 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,unavail=CASE WHEN a.fieldIndex =1603 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
FROM ResourceNameFRView r, AlertView a
WHERE r.server_addr=a.server_addr
	AND r.probe_addr=a.probe_addr
	AND r.rsrcIndex=a.rsrcIndex
	AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100 = 5
	GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,a.fieldIndex
	,r.rsrcIndex
	,r.rsrcOtherIndex
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsDayView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM FRCircuitStats
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsHourView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM FRCircuitStats
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsLastDayView]
AS
SELECT * FROM FRCircuitStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsLastWeekView]
AS
SELECT * FROM FRCircuitStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsMinuteView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM FRCircuitStats
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsMonthView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM FRCircuitStats
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsPSDayView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM FRCircuitStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsPSHourView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM FRCircuitStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsPSMinuteView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM FRCircuitStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsPSMonthView]
AS
SELECT FRCircuitStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM FRCircuitStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[FRCircuitStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRCircuitStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[FRCircuitStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRCircuitStatsThView]
AS SELECT FRCircuitStats.server_addr, FRCircuitStats.probe_addr, FRCircuitStats.frCircuitIfIndex, FRCircuitStats. frCircuitDlci, IntervalDateTime, IntervalDuration, frCircuitSentOctets=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE frCircuitSentOctets*8/(ifSpeed*IntervalDuration) END, frCircuitSentFrames=case WHEN IntervalDuration= 0 THEN 0 ELSE frCircuitSentFrames/IntervalDuration END, frCircuitReceivedFECNs=case WHEN IntervalDuration= 0 THEN 0 ELSE frCircuitReceivedFECNs/IntervalDuration END, frCircuitReceivedBECNs=case WHEN IntervalDuration= 0 THEN 0 ELSE frCircuitReceivedBECNs/IntervalDuration END, frCircuitReceivedFrames=case WHEN IntervalDuration= 0 THEN 0 ELSE frCircuitReceivedFrames/IntervalDuration END, frCircuitReceivedOctets=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE frCircuitReceivedOctets*8/(ifSpeed*IntervalDuration) END, ResourceNameFRView.ifSpeed FROM  FRCircuitStats, ResourceNameFRView WHERE userId = 0 AND ResourceNameFRView.server_addr=FRCircuitStats.server_addr AND ResourceNameFRView.probe_addr=FRCircuitStats.probe_addr AND ResourceNameFRView.rsrcIndex=FRCircuitStats.frCircuitIfIndex AND ResourceNameFRView.rsrcOtherIndex=FRCircuitStats.frCircuitDlci
GO

GO
--SqlScripter----[dbo].[FRScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FRScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[FRScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[FRScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,frCircuitSentOctets=100-CASE WHEN SUM(frCircuitSentOctets) > 100 THEN 100 ELSE SUM(frCircuitSentOctets) END
	,frCircuitSentFrames=100-CASE WHEN SUM(frCircuitSentFrames) > 100 THEN 100 ELSE SUM(frCircuitSentFrames) END
	,frCircuitReceivedFECNs=100-CASE WHEN SUM(frCircuitReceivedFECNs) > 100 THEN 100 ELSE SUM(frCircuitReceivedFECNs) END
	,frCircuitReceivedBECNs=100-CASE WHEN SUM(frCircuitReceivedBECNs) > 100 THEN 100 ELSE SUM(frCircuitReceivedBECNs) END
	,frCircuitReceivedFrames=100-CASE WHEN SUM(frCircuitReceivedFrames) > 100 THEN 100 ELSE SUM(frCircuitReceivedFrames) END
	,frCircuitReceivedOctets=100-CASE WHEN SUM(frCircuitReceivedOctets) > 100 THEN 100 ELSE SUM(frCircuitReceivedOctets) END
	,availability=100-CASE WHEN SUM(unavail) > 100 THEN 100 ELSE SUM(unavail) END
FROM FRAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,r.rsrcIndex
	,r.rsrcOtherIndex
GO

GO
--SqlScripter----[dbo].[HARALLVERSIONSINENVVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARALLVERSIONSINENVVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARALLVERSIONSINENVVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARALLVERSIONSINENVVIEW]
AS SELECT DISTINCT HARVIEW.ENVOBJID, HARVERSIONS.ITEMOBJID, HARVERSIONS.VERSIONOBJID FROM HARVIEW JOIN HARVERSIONINVIEW ON HARVIEW.VIEWOBJID = HARVERSIONINVIEW.VIEWOBJID JOIN HARVERSIONS ON HARVERSIONINVIEW.VERSIONOBJID = HARVERSIONS.VERSIONOBJID WHERE HARVIEW.ENVOBJID > 0 AND HARVIEW.VIEWTYPE != 'Snapshot'
GO

GO
--SqlScripter----[dbo].[harapproveactionview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[harapproveactionview]') IS NULL EXEC('CREATE VIEW [dbo].[harapproveactionview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[harapproveactionview]
("ENVOBJID", "STATEOBJID", "PACKAGEOBJID", "USROBJID", "ACTIONTIME", "ACTION", "USRGRPOBJID", "PROCESSOBJID")  AS
       SELECT "v"."envobjid", "v"."stateobjid", "v"."packageobjid", "v"."usrobjid", "v"."actiontime", "v"."ACTION", "l"."usrgrpobjid", "l"."processobjid"
       FROM "harapprovehistactionview" "v", "harapprovelist" "l"
       WHERE v.stateobjid = l.stateobjid AND ((l.isgroup = 'N' AND l.usrobjid = v.usrobjid) OR (l.isgroup = 'Y' AND l.usrgrpobjid IN (SELECT usrgrpobjid FROM harusersingroup g WHERE v.usrobjid = g.usrobjid)))
GO

GO
--SqlScripter----[dbo].[harapprovehistactionview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[harapprovehistactionview]') IS NULL EXEC('CREATE VIEW [dbo].[harapprovehistactionview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[harapprovehistactionview]
("envobjid", "stateobjid", "packageobjid", "usrobjid", "actiontime", "ACTION", "note")  AS
       SELECT "h"."envobjid", "h"."stateobjid", "h"."packageobjid", "h"."usrobjid", "h"."execdtime", "h"."action", "h"."note"
       FROM "harapprovehist" "h", "harapprovehistview" "v", "harpackage" "p"
       WHERE v.packageobjid = p.packageobjid AND v.stateobjid = p.stateobjid AND h.envobjid = v.envobjid AND h.stateobjid = v.stateobjid AND h.packageobjid = v.packageobjid AND h.usrobjid = v.usrobjid AND h.execdtime = v.actiontime
GO

GO
--SqlScripter----[dbo].[harapprovehistview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[harapprovehistview]') IS NULL EXEC('CREATE VIEW [dbo].[harapprovehistview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[harapprovehistview]
("envobjid", "stateobjid", "packageobjid", "usrobjid", "actiontime")  AS
       SELECT DISTINCT "harapprovehist"."envobjid", "harapprovehist"."stateobjid", "harapprovehist"."packageobjid", "harapprovehist"."usrobjid", MAX(execdtime)
       FROM "harapprovehist"
       GROUP BY envobjid, stateobjid, packageobjid, usrobjid
GO

GO
--SqlScripter----[dbo].[harauditlogview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[harauditlogview]') IS NULL EXEC('CREATE VIEW [dbo].[harauditlogview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[harauditlogview]
(   ParentAuditEventObjId, auditeventobjid, actionobjid, successfailure, actionname, eventtime,   usrobjid, username,   clienthostname, clientprocessid, serverhostname, serverprocessid,   resourcetypeobjid, resourcetypename, resourceobjid, resourcename,   eventdescription,   er1resourcetypeobjid, er1resourcetypename, er1resourceobjid, er1resourcename,   er2resourcetypeobjid, er2resourcetypename, er2resourceobjid, er2resourcename,   er3resourcetypeobjid, er3resourcetypename, er3resourceobjid, er3resourcename,   er4resourcetypeobjid, er4resourcetypename, er4resourceobjid, er4resourcename ) as select   AE.ParentAuditEventObjId, AE.auditeventobjid, AE.actionobjid, AE.successfailure, AC.actionname, AE.eventtime,   AE.usrobjid, AE.username,   AE.clienthostname, AE.clientprocessid, AE.serverhostname, AE.serverprocessid,   AE.resourcetypeobjid, RT.resourcetypename, AE.resourceobjid, AE.resourcename,   ED.EventDescription,   ER1.resourcetypeobjid er1resourcetypeobjid, RT1.resourcetypename er1resourcetypename,   ER1.resourceobjid er1resourceobjid, ER1.resourcename er1resourcename,   ER2.resourcetypeobjid er2resourcetypeobjid, RT2.resourcetypename er2resourcetypename,   ER2.resourceobjid er2resourceobjid, ER2.resourcename er2resourcename,   ER3.resourcetypeobjid er3resourcetypeobjid, RT3.resourcetypename er3resourcetypename,   ER3.resourceobjid er3resourceobjid, ER3.resourcename er3resourcename,   ER4.resourcetypeobjid er4resourcetypeobjid, RT4.resourcetypename er4resourcetypename,   ER4.resourceobjid er4resourceobjid, ER4.resourcename er4resourcename from   harauditevent AE    inner join   haraction AC on ( AE.actionobjid = AC.actionobjid )    inner join   harresourcetype RT on ( AE.resourcetypeobjid = RT.resourcetypeobjid )    left outer join   harauditeventdescription ED on ( AE.auditeventobjid = ED.auditeventobjid )    left outer join   harauditeventresourcel1 ER1 on ( AE.auditeventobjid = ER1.auditeventobjid )    left outer join   harauditeventresourcel2 ER2 on ( AE.auditeventobjid = ER2.auditeventobjid )    LEFT OUTER JOIN   harauditeventresourcel3 ER3 on ( AE.auditeventobjid = ER3.auditeventobjid )    left outer join   harauditeventresourcel4 ER4 on ( AE.auditeventobjid = ER4.auditeventobjid )    left outer join   harresourcetype RT1 on ( ER1.resourcetypeobjid = RT1.resourcetypeobjid )    LEFT OUTER JOIN   harresourcetype RT2 on ( ER2.resourcetypeobjid = RT2.resourcetypeobjid )    LEFT OUTER JOIN   harresourcetype RT3 on ( ER3.resourcetypeobjid = RT3.resourcetypeobjid )    LEFT OUTER JOIN   harresourcetype RT4 on ( ER4.resourcetypeobjid = RT4.resourcetypeobjid )
GO

GO
--SqlScripter----[dbo].[HARENVIRONMENTUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARENVIRONMENTUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARENVIRONMENTUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARENVIRONMENTUSERACCESSVIEW]
AS SELECT HARENVIRONMENTACCESS.ENVOBJID, HARUSERSINGROUP.USROBJID, MAX(HARENVIRONMENTACCESS.SECUREACCESS) SECUREACCESS, MAX(HARENVIRONMENTACCESS.UPDATEACCESS) UPDATEACCESS, MAX(HARENVIRONMENTACCESS.VIEWACCESS) VIEWACCESS, MAX(HARENVIRONMENTACCESS.EXECUTEACCESS) EXECUTEACCESS FROM HARENVIRONMENTACCESS JOIN HARUSERSINGROUP ON HARENVIRONMENTACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARENVIRONMENTACCESS.ENVOBJID, HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[HARENVWITHGROUPACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARENVWITHGROUPACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARENVWITHGROUPACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARENVWITHGROUPACCESSVIEW]
AS SELECT HARENVIRONMENTACCESS.ENVOBJID, HARENVIRONMENTACCESS.USRGRPOBJID FROM HARENVIRONMENTACCESS UNION SELECT HARSTATE.ENVOBJID, HARSTATEACCESS.USRGRPOBJID FROM HARSTATE JOIN HARSTATEACCESS ON HARSTATE.STATEOBJID = HARSTATEACCESS.STATEOBJID UNION SELECT HARSTATE.ENVOBJID, HARSTATEPROCESSACCESS.USRGRPOBJID FROM HARSTATE JOIN HARSTATEPROCESSACCESS ON HARSTATE.STATEOBJID = HARSTATEPROCESSACCESS.STATEOBJID
GO

GO
--SqlScripter----[dbo].[HARENVWITHUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARENVWITHUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARENVWITHUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARENVWITHUSERACCESSVIEW]
AS SELECT HARENVIRONMENTACCESS.ENVOBJID, HARUSERSINGROUP.USROBJID FROM HARENVIRONMENTACCESS JOIN HARUSERSINGROUP ON HARENVIRONMENTACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID UNION SELECT HARSTATE.ENVOBJID, HARUSERSINGROUP.USROBJID FROM HARSTATE JOIN HARSTATEACCESS ON HARSTATE.STATEOBJID = HARSTATEACCESS.STATEOBJID JOIN HARUSERSINGROUP ON HARSTATEACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID UNION SELECT HARSTATE.ENVOBJID, HARUSERSINGROUP.USROBJID FROM HARSTATE JOIN HARSTATEPROCESSACCESS ON HARSTATE.STATEOBJID = HARSTATEPROCESSACCESS.STATEOBJID JOIN HARUSERSINGROUP ON HARSTATEPROCESSACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID
GO

GO
--SqlScripter----[dbo].[HARFORMTYPEUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARFORMTYPEUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARFORMTYPEUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARFORMTYPEUSERACCESSVIEW]
AS SELECT HARFORMTYPEACCESS.FORMTYPEOBJID, HARUSERSINGROUP.USROBJID, MAX(HARFORMTYPEACCESS.SECUREACCESS) SECUREACCESS, MAX(HARFORMTYPEACCESS.UPDATEACCESS) UPDATEACCESS, MAX(HARFORMTYPEACCESS.VIEWACCESS) VIEWACCESS FROM HARFORMTYPEACCESS JOIN HARUSERSINGROUP ON HARFORMTYPEACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARFORMTYPEACCESS.FORMTYPEOBJID, HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[HARHARVESTUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARHARVESTUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARHARVESTUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARHARVESTUSERACCESSVIEW]
AS SELECT HARUSERSINGROUP.USROBJID, MAX(HARHARVEST.SECUREHARVEST) SECUREHARVEST, MAX(HARHARVEST.ADMINUSER) ADMINUSER, MAX(HARHARVEST.VIEWUSER) VIEWUSER, MAX(HARHARVEST.ADMINENVIRONMENT) ADMINENVIRONMENT, MAX(HARHARVEST.VIEWENVIRONMENT) VIEWENVIRONMENT, MAX(HARHARVEST.ADMINREPOSITORY) ADMINREPOSITORY, MAX(HARHARVEST.VIEWREPOSITORY) VIEWREPOSITORY, MAX(HARHARVEST.ADMINFORMTYPE) ADMINFORMTYPE, MAX(HARHARVEST.VIEWFORMTYPE) VIEWFORMTYPE FROM HARHARVEST JOIN HARUSERSINGROUP ON HARHARVEST.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[HARITEMUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARITEMUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARITEMUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARITEMUSERACCESSVIEW]
AS SELECT HARITEMACCESS.ITEMOBJID, HARUSERSINGROUP.USROBJID, MAX(HARITEMACCESS.VIEWACCESS) VIEWACCESS FROM HARITEMACCESS JOIN HARUSERSINGROUP ON HARITEMACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARITEMACCESS.ITEMOBJID, HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[HARLATESTTRUNKINENVVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARLATESTTRUNKINENVVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARLATESTTRUNKINENVVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARLATESTTRUNKINENVVIEW]
AS SELECT HARVIEW.ENVOBJID, HARVERSIONS.ITEMOBJID, MAX(HARVERSIONS.VERSIONOBJID) VERSIONOBJID FROM HARVIEW JOIN HARVERSIONINVIEW ON HARVIEW.VIEWOBJID = HARVERSIONINVIEW.VIEWOBJID JOIN HARVERSIONS ON HARVERSIONINVIEW.VERSIONOBJID = HARVERSIONS.VERSIONOBJID WHERE HARVIEW.ENVOBJID > 0 AND HARVIEW.VIEWTYPE != 'Snapshot' AND HARVERSIONS.INBRANCH = 0 GROUP BY HARVIEW.ENVOBJID, HARVERSIONS.ITEMOBJID
GO

GO
--SqlScripter----[dbo].[HARLATESTTRUNKINREPVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARLATESTTRUNKINREPVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARLATESTTRUNKINREPVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARLATESTTRUNKINREPVIEW]
AS SELECT HARITEMS.REPOSITOBJID, HARITEMS.ITEMOBJID, MAX(HARVERSIONS.VERSIONOBJID) VERSIONOBJID FROM HARITEMS JOIN HARVERSIONS ON HARITEMS.ITEMOBJID = HARVERSIONS.ITEMOBJID WHERE HARITEMS.REPOSITOBJID > 0 AND HARVERSIONS.INBRANCH = 0 GROUP BY HARITEMS.REPOSITOBJID, HARITEMS.ITEMOBJID
GO

GO
--SqlScripter----[dbo].[HARPKGAPPROVEDVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARPKGAPPROVEDVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARPKGAPPROVEDVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARPKGAPPROVEDVIEW]
AS SELECT P.PackageObjId FROM HarPackage P WHERE ( EXISTS ( SELECT * FROM HarApprove AP WHERE AP.StateObjId = P.StateObjId AND NOT EXISTS (SELECT * FROM HarApproveList AL WHERE AL.ProcessObjId = AP.ProcessObjId) ) OR EXISTS ( SELECT AL1.ProcessObjId FROM HarApproveList AL1 WHERE AL1.StateObjId = P.StateObjId GROUP BY AL1.ProcessObjId HAVING COUNT(*) = ( SELECT COUNT(*) FROM HarApproveList AL2 WHERE AL2.ProcessObjId = AL1.ProcessObjId AND ( ( AL2.IsGroup = 'N' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND AH1.UsrObjId = AL2.UsrObjId AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AL2.UsrObjId ) ) ) OR ( AL2.IsGroup = 'Y' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL2.UsrGrpObjId) AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) AND NOT EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL2.UsrGrpObjId) AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) ) ) ) ) )
GO

GO
--SqlScripter----[dbo].[HARPKGFROZENVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARPKGFROZENVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARPKGFROZENVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARPKGFROZENVIEW]
AS SELECT P.PackageObjId FROM HarPackage P WHERE EXISTS ( SELECT * FROM HarApprove AP WHERE AP.StateObjId = P.StateObjId AND EXISTS ( SELECT * FROM HarApproveList AL WHERE AL.ProcessObjId = AP.ProcessObjId AND ( ( AL.IsGroup = 'N' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND AH1.UsrObjId = AL.UsrObjId AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AL.UsrObjId ) ) ) OR ( AL.IsGroup = 'Y' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL.UsrGrpObjId) AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) ) ) ) AND NOT EXISTS ( SELECT * FROM HarApproveList AL WHERE AL.ProcessObjId = AP.ProcessObjId AND ( ( AL.IsGroup = 'N' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND AH1.UsrObjId = AL.UsrObjId AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AL.UsrObjId ) ) ) OR ( AL.IsGroup = 'Y' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL.UsrGrpObjId) AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) ) ) ) )
GO

GO
--SqlScripter----[dbo].[HARPKGPENDINGAPPROVALVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARPKGPENDINGAPPROVALVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARPKGPENDINGAPPROVALVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARPKGPENDINGAPPROVALVIEW]
AS SELECT P.PackageObjId FROM HarPackage P WHERE ( EXISTS ( SELECT * FROM HarApprove AP WHERE AP.StateObjId = P.StateObjId ) AND NOT EXISTS ( SELECT * FROM HarApprove AP WHERE AP.StateObjId = P.StateObjId AND NOT EXISTS (SELECT * FROM HarApproveList AL WHERE AL.ProcessObjId = AP.ProcessObjId) ) AND NOT EXISTS ( SELECT AL1.ProcessObjId FROM HarApproveList AL1 WHERE AL1.StateObjId = P.StateObjId GROUP BY AL1.ProcessObjId HAVING COUNT(*) = ( SELECT COUNT(*) FROM HarApproveList AL2 WHERE AL2.ProcessObjId = AL1.ProcessObjId AND ( ( AL2.IsGroup = 'N' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND AH1.UsrObjId = AL2.UsrObjId AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AL2.UsrObjId ) ) ) OR ( AL2.IsGroup = 'Y' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL2.UsrGrpObjId) AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) AND NOT EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL2.UsrGrpObjId) AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) ) ) ) ) )
GO

GO
--SqlScripter----[dbo].[HARPKGREJECTEDVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARPKGREJECTEDVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARPKGREJECTEDVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARPKGREJECTEDVIEW]
AS SELECT P.PackageObjId FROM HarPackage P WHERE ( EXISTS ( SELECT * FROM HarApprove AP WHERE AP.StateObjId = P.StateObjId ) AND NOT EXISTS ( SELECT * FROM HarApprove AP WHERE AP.StateObjId = P.StateObjId AND NOT EXISTS (SELECT * FROM HarApproveList AL WHERE AL.ProcessObjId = AP.ProcessObjId) ) AND NOT EXISTS ( SELECT AL1.ProcessObjId FROM HarApproveList AL1 WHERE AL1.StateObjId = P.StateObjId GROUP BY AL1.ProcessObjId HAVING COUNT(*) = ( SELECT COUNT(*) FROM HarApproveList AL2 WHERE AL2.ProcessObjId = AL1.ProcessObjId AND ( ( AL2.IsGroup = 'N' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND AH1.UsrObjId = AL2.UsrObjId AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AL2.UsrObjId ) ) ) OR ( AL2.IsGroup = 'Y' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL2.UsrGrpObjId) AND AH1.Action = 'Approved' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) AND NOT EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL2.UsrGrpObjId) AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) ) ) ) ) AND EXISTS ( SELECT * FROM HarApproveList AL WHERE AL.StateObjId = P.StateObjId AND ( ( AL.IsGroup = 'N' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND AH1.UsrObjId = AL.UsrObjId AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AL.UsrObjId ) ) ) OR ( AL.IsGroup = 'Y' AND EXISTS ( SELECT * FROM HarApproveHist AH1 WHERE AH1.EnvObjId = P.EnvObjId AND AH1.StateObjId = P.StateObjId AND AH1.PackageObjId = P.PackageObjId AND EXISTS (SELECT * FROM HarUsersInGroup UG WHERE UG.UsrObjId = AH1.UsrObjId and UG.UsrGrpObjId = AL.UsrGrpObjId) AND AH1.Action = 'Rejected' AND AH1.ExecDTime = ( SELECT MAX(AH2.ExecDTime) FROM HarApproveHist AH2 WHERE AH2.EnvObjId = P.EnvObjId AND AH2.StateObjId = P.StateObjId AND AH2.PackageObjId = P.PackageObjId AND AH2.UsrObjId = AH1.UsrObjId ) ) ) ) ) )
GO

GO
--SqlScripter----[dbo].[HARREPOSITORYUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARREPOSITORYUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARREPOSITORYUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARREPOSITORYUSERACCESSVIEW]
AS SELECT HARREPOSITORYACCESS.REPOSITOBJID, HARUSERSINGROUP.USROBJID, MAX(HARREPOSITORYACCESS.SECUREACCESS) SECUREACCESS, MAX(HARREPOSITORYACCESS.UPDATEACCESS) UPDATEACCESS, MAX(HARREPOSITORYACCESS.VIEWACCESS) VIEWACCESS FROM HARREPOSITORYACCESS JOIN HARUSERSINGROUP ON HARREPOSITORYACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARREPOSITORYACCESS.REPOSITOBJID, HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[HARSTATEPROCESSUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARSTATEPROCESSUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARSTATEPROCESSUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARSTATEPROCESSUSERACCESSVIEW]
AS SELECT HARSTATEPROCESSACCESS.STATEOBJID, HARSTATEPROCESSACCESS.PROCESSOBJID, HARUSERSINGROUP.USROBJID, MAX(HARSTATEPROCESSACCESS.EXECUTEACCESS) EXECUTEACCESS FROM HARSTATEPROCESSACCESS JOIN HARUSERSINGROUP ON HARSTATEPROCESSACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARSTATEPROCESSACCESS.STATEOBJID, HARSTATEPROCESSACCESS.PROCESSOBJID, HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[HARSTATEUSERACCESSVIEW].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[HARSTATEUSERACCESSVIEW]') IS NULL EXEC('CREATE VIEW [dbo].[HARSTATEUSERACCESSVIEW] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[HARSTATEUSERACCESSVIEW]
AS SELECT HARSTATEACCESS.STATEOBJID, HARUSERSINGROUP.USROBJID, MAX(HARSTATEACCESS.UPDATEACCESS) UPDATEACCESS, MAX(HARSTATEACCESS.UPDATEPKGACCESS) UPDATEPKGACCESS FROM HARSTATEACCESS JOIN HARUSERSINGROUP ON HARSTATEACCESS.USRGRPOBJID = HARUSERSINGROUP.USRGRPOBJID GROUP BY HARSTATEACCESS.STATEOBJID, HARUSERSINGROUP.USROBJID
GO

GO
--SqlScripter----[dbo].[hotfixdetailforcomputer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[hotfixdetailforcomputer]') IS NULL EXEC('CREATE VIEW [dbo].[hotfixdetailforcomputer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[hotfixdetailforcomputer]
AS 
SELECT ai_hfdef_prop.hfpub, ai_hfdef_prop.hfname, ai_hfdef_prop.hfsp, 
ai_hfdef_prop.hfid, ai_hfdef_prop.hfver, ai_hfdef_prop.hfrel, ai_hfdef_prop.hfmod, 
ai_hfdef_prop.hfbld, ai_hfdef_hwdef_rel.hwuuid FROM  ai_hfdef_prop 
LEFT JOIN  ai_hfdef_hwdef_rel ON ai_hfdef_prop.hfuuid = ai_hfdef_hwdef_rel.hfuuid 
LEFT JOIN  ai_undef_hwdef_rel ON ai_hfdef_hwdef_rel.hwuuid = ai_undef_hwdef_rel.hwuuid
GO

GO
--SqlScripter----[dbo].[iam_attribute_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_attribute_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_attribute_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_attribute_view]
( object_guid, attribute_name, attribute_value, attribute_shortvalue, attribute_order ) as select s1.norm object_guid, a2.description attribute_name, ss.norm attribute_value, s2.norm attribute_shortvalue, s2.vid attribute_order from ( search s1 inner join  attr a1 on s1.aid = a1.aid and a1.description = 'pozId') inner join ( search s2 inner join  attr a2 on s2.aid = a2.aid and a2.objectid like '2.1104.%') on s1.eid = s2.eid left join  subsearch ss on ss.eid = s1.eid and ss.aid = s1.aid and ss.vid = s1.vid and ss.cid = 1
GO

GO
--SqlScripter----[dbo].[iam_global_membership_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_global_membership_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_global_membership_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_global_membership_view]
("user_group_name", "user_group_object_guid", "user_name", "user_object_guid")  AS
       SELECT iav.attribute_shortvalue, iav.object_guid, "iguv"."object_name", "iguv"."object_guid"
       FROM "iam_attribute_view" "iav", "iam_global_user_view" "iguv"
       WHERE iav.object_guid = iguv.object_guid AND iav.attribute_name = 'pzGroupMembership'
GO

GO
--SqlScripter----[dbo].[iam_global_user_attr_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_global_user_attr_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_global_user_attr_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_global_user_attr_view]
("object_guid", "object_name", "attribute_name", "attribute_value", "attribute_shortvalue", "attribute_order")  AS
       SELECT "iguv"."object_guid", "iguv"."object_name", iav.attribute_name, iav.attribute_value, iav.attribute_shortvalue, iav.attribute_order
       FROM "iam_global_user_view" "iguv", "iam_attribute_view" "iav"
       WHERE iguv.object_guid = iav.object_guid
GO

GO
--SqlScripter----[dbo].[iam_global_user_group_attr_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_global_user_group_attr_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_global_user_group_attr_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_global_user_group_attr_view]
("object_guid", "object_name", "attribute_name", "attribute_value", "attribute_shortvalue", "attribute_order")  AS
       SELECT "igugv"."object_guid", "igugv"."object_name", iav.attribute_name, iav.attribute_value, iav.attribute_shortvalue, iav.attribute_order
       FROM "iam_global_user_group_view" "igugv", "iam_attribute_view" "iav"
       WHERE igugv.object_guid = iav.object_guid
GO

GO
--SqlScripter----[dbo].[iam_global_user_group_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_global_user_group_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_global_user_group_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_global_user_group_view]
("object_guid", "object_name", "location_name")  AS
       SELECT iov.object_guid, iov.object_name, iov.location_name
       FROM "iam_object_view" "iov"
       WHERE iov.object_class = 'O_G_U' AND iov.product_instance_name = 'PozAdmin'
GO

GO
--SqlScripter----[dbo].[iam_global_user_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_global_user_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_global_user_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_global_user_view]
("object_guid", "object_name", "location_name")  AS
       SELECT iov.object_guid, iov.object_name, iov.location_name
       FROM "iam_object_view" "iov"
       WHERE iov.object_class = 'O_E_U' AND iov.product_instance_name = 'PozAdmin'
GO

GO
--SqlScripter----[dbo].[iam_object_view].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[iam_object_view]') IS NULL EXEC('CREATE VIEW [dbo].[iam_object_view] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[iam_object_view]
( object_guid, object_name, location_name, object_class, object_link, product_instance_name, version_number ) as select s1.norm object_guid, s2.norm object_name, s3.norm location_name, s4.norm object_class, s7.norm object_link, s5.norm product_instance_name, s6.norm version_number from ( search s1 inner join  attr a1 on s1.aid = a1.aid and a1.description = 'pozId') inner join ( search s2 inner join  attr a2 on s2.aid = a2.aid and a2.description = 'commonName') on s1.eid = s2.eid left join ( search s3 inner join  attr a3 on s3.aid = a3.aid and a3.description = 'pozLocation') on s1.eid = s3.eid inner join ( search s4 inner join  attr a4 on s4.aid = a4.aid and a4.description = 'pozClass') on s1.eid = s4.eid left join ( search s5 inner join  attr a5 on s5.aid = a5.aid and a5.description = 'pozLabel') on s1.eid = s5.eid inner join ( search s6 inner join  attr a6 on s6.aid = a6.aid and a6.description = 'pozGeneration') on s1.eid = s6.eid left join ( search s7 inner join  attr a7 on s7.aid = a7.aid and a7.description = 'pozLink') on s1.eid = s7.eid inner join  search s8 on s1.eid = s8.eid and s8.aid = 0 and ( s8.norm = '1.3.6.1.4.1.791.2.3.5.5.1.6.2'  or s8.norm = '1.3.6.1.4.1.791.2.3.5.5.1.6.3')
GO

GO
--SqlScripter----[dbo].[InterfaceAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[InterfaceAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[InterfaceAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[InterfaceAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,ifInOctets=CASE a.fieldIndex WHEN 101 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,ifOutOctets=CASE a.fieldIndex WHEN 107 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,inboundErrors=CASE WHEN a.fieldIndex IN (104,105,106) THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,outboundErrors=case WHEN a.fieldIndex IN (110,111) THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,unavail=CASE WHEN a.fieldIndex = 1602 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
FROM ResourceNameInterfaceView r, AlertView a
WHERE r.server_addr=a.server_addr
	AND r.probe_addr=a.probe_addr
	AND r.rsrcIndex=a.rsrcIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100 = 1
	GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[InterfaceScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[InterfaceScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[InterfaceScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[InterfaceScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,ifInOctets=100-CASE WHEN SUM(ifInOctets)>100 THEN 100 ELSE SUM(ifInOctets) END
	,ifOutOctets=100-CASE WHEN SUM(ifOutOctets)>100 THEN 100 ELSE SUM(ifOutOctets) END
	,inboundErrors=100-CASE WHEN SUM(inboundErrors)>100 THEN 100 ELSE SUM(inboundErrors) END
	,outboundErrors=100-CASE WHEN SUM(outboundErrors)>100 THEN 100 ELSE SUM(outboundErrors) END
	,availability=100-CASE WHEN SUM(unavail)>100 THEN 100 ELSE SUM(unavail) END
FROM InterfaceAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[InterfaceView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[InterfaceView]') IS NULL EXEC('CREATE VIEW [dbo].[InterfaceView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[InterfaceView]
AS
SELECT
	server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=0
	,rsrcType=-2
	,collect_flags=p.collect_flags
	,rsrcName = p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), f.ifIndex)
	,mibId=0
	,monitored=(CASE 
	WHEN ((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN i.collReq & 0x1 = 0x1 THEN 0
	WHEN i.collReq & 32 = 32 THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	WHEN i.collReq & 0x2 = 0x2 THEN 2
	ELSE 1
	END) - (CASE WHEN i.itfcType & 0x1 = 0x1 THEN 3 ELSE 0 END)
	,bypassAvail=
	CASE
	WHEN (p.collect_flags & 0x80000)>0 THEN 1
	WHEN i.collReq & 16 > 0 THEN 1
	ELSE 0 END
	,viewType=2
	,rsrcId=convert(varchar(10),-2)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM (UserProbeView p join M2if f
ON p.server_addr=f.server_addr
AND p.probe_addr=f.probe_addr)
left join ItfcConfig i
ON f.server_addr=i.server_addr
AND f.probe_addr=i.probe_addr
AND f.dbIndex=i.itfcIndex
GO

GO
--SqlScripter----[dbo].[investigationhistoryview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[investigationhistoryview]') IS NULL EXEC('CREATE VIEW [dbo].[investigationhistoryview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[investigationhistoryview]
AS select investigation_history.* from  investigation_history
GO

GO
--SqlScripter----[dbo].[investigationview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[investigationview]') IS NULL EXEC('CREATE VIEW [dbo].[investigationview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[investigationview]
AS select investigation.* from  investigation
GO

GO
--SqlScripter----[dbo].[IPAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[IPAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[IPAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[IPAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,ipInReceives=CASE a.fieldIndex WHEN 201 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,ipInErrors=CASE WHEN a.fieldIndex IN (202,203,205,206) THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,ipForwDatagrams=CASE WHEN a.fieldIndex=204 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,ipInDelivers=case WHEN a.fieldIndex =207 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,ipOutErrors=CASE WHEN a.fieldIndex IN (209,210) THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,ipOutRequest=CASE WHEN a.fieldIndex=208 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,unavail=CASE WHEN a.fieldIndex =1601 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
FROM ResourceNameIPView r, AlertView a
WHERE r.server_addr=a.server_addr
	AND r.probe_addr=a.probe_addr
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100 = 2
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[IPScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[IPScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[IPScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[IPScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
	,ipInReceives=100-CASE WHEN SUM(ipInReceives)>100 THEN 100 ELSE SUM(ipInReceives) END
	,ipInErrors=100-CASE WHEN SUM(ipInErrors)>100 THEN 100 ELSE SUM(ipInErrors) END
	,ipForwDatagrams=100-CASE WHEN SUM(ipForwDatagrams)>100 THEN 100 ELSE SUM(ipForwDatagrams) END
	,ipInDelivers=100-CASE WHEN SUM(ipInDelivers)>100 THEN 100 ELSE SUM(ipInDelivers) END
	,ipOutErrors=100-CASE WHEN SUM(ipOutErrors)>100 THEN 100 ELSE SUM(ipOutErrors) END
	,ipOutRequest=100-CASE WHEN SUM(ipOutRequest)>100 THEN 100 ELSE SUM(ipOutRequest) END
	,availability=100-CASE WHEN SUM(unavail)>100 THEN 100 ELSE SUM(unavail) END
FROM IPAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[JitterScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[JitterScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[JitterScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[JitterScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,JitterStatsOverThresholds=100-100*SUM(case WHEN a.fieldIndex=13601 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsRTTSum=100-100*SUM(case WHEN a.fieldIndex=13602 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsPacketLossSD=100-100*SUM(case WHEN a.fieldIndex=13603 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsPacketLossDS=100-100*SUM(case WHEN a.fieldIndex=13604 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsPacketOutOfSequence=100-100*SUM(case WHEN a.fieldIndex=13605 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsPacketLateArrival=100-100*SUM(case WHEN a.fieldIndex=13606 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsError=100-100*SUM(case WHEN a.fieldIndex=13607 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,JitterStatsBusies=100-100*SUM(case WHEN a.fieldIndex=13608 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,availability=100-100*SUM(CASE WHEN a.fieldIndex =1602 THEN (a.alertDuration*1.0)/(24*3600) ELSE 0 END)
FROM ResourceNameJitterView r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
		AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=136
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[jmo_wbr].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[jmo_wbr]') IS NULL EXEC('CREATE VIEW [dbo].[jmo_wbr] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[jmo_wbr]
( wbr_stid, wbr_groupid, wbr_node, wbr_type, wbr_timz, wbr_dsc ) as select s.id, g.id, s.cci_node, s.type, s.time_zone, s.descr from ( jmo_station s left join  jmo_group g on s.id = g.stationid)
GO

GO
--SqlScripter----[dbo].[jobhistoryview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[jobhistoryview]') IS NULL EXEC('CREATE VIEW [dbo].[jobhistoryview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[jobhistoryview]
AS select job_history.* from  job_history
GO

GO
--SqlScripter----[dbo].[jobview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[jobview]') IS NULL EXEC('CREATE VIEW [dbo].[jobview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[jobview]
("name", "starttime", "repeats", "delay", "state")  AS
       SELECT "secure_job"."name", dbo.varchar(secure_job.start_time), "secure_job"."repeats", dbo.varchar(secure_job.delay), "secure_job"."state"
       FROM "secure_job"
GO

GO
--SqlScripter----[dbo].[LANScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LANScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[LANScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LANScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,ifInOctets=100-100*SUM(CASE a.fieldIndex WHEN 101 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,ifOutOctets=100-100*SUM(CASE a.fieldIndex WHEN 107 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,inboundErrors=100-100*SUM(CASE WHEN a.fieldIndex IN (104,105,106) THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,outboundErrors=100-100*SUM(case WHEN a.fieldIndex IN (110,111) THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,availability=100-100*SUM(CASE WHEN a.fieldIndex = 1602 THEN (a.alertDuration*1.0)/(24*3600) ELSE 0 END)
FROM ResourceNameLANView r, AlertView a
WHERE r.server_addr=a.server_addr
	AND r.probe_addr=a.probe_addr
	AND r.rsrcIndex=a.rsrcIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=1
	GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsDayView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYFileServerClients
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsHourView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYFileServerClients
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsLastDayView]
AS
SELECT * FROM LSYFileServerClientsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsLastWeekView]
AS
SELECT * FROM LSYFileServerClientsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsMinuteView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYFileServerClients
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsMonthView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYFileServerClients
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsPSDayView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYFileServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsPSHourView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYFileServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsPSMinuteView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYFileServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerClientsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerClientsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerClientsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerClientsPSMonthView]
AS
SELECT LSYFileServerClients.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYFileServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsDayView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYFileServerStats
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsHourView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYFileServerStats
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsLastDayView]
AS
SELECT * FROM LSYFileServerStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsLastWeekView]
AS
SELECT * FROM LSYFileServerStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsMinuteView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYFileServerStats
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsMonthView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYFileServerStats
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsPSDayView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYFileServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsPSHourView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYFileServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsPSMinuteView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYFileServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsPSMonthView]
AS
SELECT LSYFileServerStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYFileServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYFileServerStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYFileServerStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYFileServerStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYFileServerStatsThView]
AS SELECT LSYFileServerStats.server_addr, LSYFileServerStats.probe_addr, LSYFileServerStats.probeIndex, LSYFileServerStats.fileServerKeyId, IntervalDateTime, IntervalDuration, readSvcSum=case WHEN readSvcCount= 0 THEN 0 ELSE readSvcSum/readSvcCount END, readbytes=case WHEN IntervalDuration= 0 THEN 0 ELSE readbytes/IntervalDuration END, writeSvcSum=case WHEN writeSvcCount= 0 THEN 0 ELSE writeSvcSum/writeSvcCount END, writebytes=case WHEN IntervalDuration= 0 THEN 0 ELSE writebytes/IntervalDuration END, otherSvcSum=case WHEN otherSvcCount= 0 THEN 0 ELSE otherSvcSum/otherSvcCount END, SIOSum=case WHEN SIOCount= 0 THEN 0 ELSE SIOSum/SIOCount END, linkErrCount=case WHEN pktsToServer= 0 THEN 0 ELSE linkErrCount/pktsToServer END, FSErrCount=case WHEN (readSvcCount+writeSvcCount+otherSvcCount)= 0 THEN 0 ELSE FSErrCount /(readSvcCount+writeSvcCount+otherSvcCount) END FROM  LSYFileServerStats
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsDayView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYLanProtocols
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsHourView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYLanProtocols
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsLastDayView]
AS
SELECT * FROM LSYLanProtocolsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsLastWeekView]
AS
SELECT * FROM LSYLanProtocolsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsMinuteView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYLanProtocols
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsMonthView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYLanProtocols
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsPSDayView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYLanProtocols WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsPSHourView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYLanProtocols WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsPSMinuteView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYLanProtocols WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsPSMonthView]
AS
SELECT LSYLanProtocols.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYLanProtocols WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanProtocolsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanProtocolsThView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanProtocolsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanProtocolsThView]
AS SELECT LSYLanProtocols.server_addr, LSYLanProtocols.probe_addr, LSYLanProtocols.probeIndex, IntervalDateTime, IntervalDuration, protocolbytes=case WHEN IntervalDuration= 0 THEN 0 ELSE protocolbytes/IntervalDuration END FROM  LSYLanProtocols
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationDayView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYLanUtilization
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationHourView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYLanUtilization
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationLastDayView]
AS
SELECT * FROM LSYLanUtilizationHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationLastWeekView]
AS
SELECT * FROM LSYLanUtilizationDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationMinuteView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYLanUtilization
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationMonthView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYLanUtilization
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationPSDayView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYLanUtilization WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationPSHourView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYLanUtilization WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationPSMinuteView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYLanUtilization WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationPSMonthView]
AS
SELECT LSYLanUtilization.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYLanUtilization WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYLanUtilizationThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYLanUtilizationThView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYLanUtilizationThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYLanUtilizationThView]
AS SELECT LSYLanUtilization.server_addr, LSYLanUtilization.probe_addr, LSYLanUtilization.probeIndex, IntervalDateTime, IntervalDuration, utilSum=case WHEN utilCount= 0 THEN 0 ELSE utilSum/utilCount END,
broadcastFrames=case WHEN IntervalDuration= 0 THEN 0 ELSE broadcastFrames/IntervalDuration END, 
multicastFrames=case WHEN IntervalDuration= 0 THEN 0 ELSE multicastFrames/IntervalDuration END, 
framesLostProbe=case WHEN totalFrames= 0 THEN 0 ELSE framesLostProbe/totalFrames END, 
framesLostBuf=case WHEN totalFrames= 0 THEN 0 ELSE framesLostHard/totalFrames END, 
framesLostHard=case WHEN totalFrames= 0 THEN 0 ELSE framesLostBuf/totalFrames END 
FROM  LSYLanUtilization
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsDayView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTermServerClients
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsHourView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTermServerClients
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsLastDayView]
AS
SELECT * FROM LSYTermServerClientsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsLastWeekView]
AS
SELECT * FROM LSYTermServerClientsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsMinuteView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTermServerClients
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsMonthView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTermServerClients
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsPSDayView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTermServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsPSHourView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTermServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsPSMinuteView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTermServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerClientsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerClientsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerClientsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerClientsPSMonthView]
AS
SELECT LSYTermServerClients.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTermServerClients WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsDayView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTermServerStats
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsHourView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTermServerStats
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsLastDayView]
AS
SELECT * FROM LSYTermServerStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsLastWeekView]
AS
SELECT * FROM LSYTermServerStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsMinuteView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTermServerStats
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsMonthView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTermServerStats
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsPSDayView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTermServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsPSHourView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTermServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsPSMinuteView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTermServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsPSMonthView]
AS
SELECT LSYTermServerStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTermServerStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTermServerStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTermServerStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTermServerStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTermServerStatsThView]
AS SELECT LSYTermServerStats.server_addr, LSYTermServerStats.probe_addr, LSYTermServerStats.probeIndex, LSYTermServerStats.termServerKeyId, IntervalDateTime, IntervalDuration, bytesToClients=case WHEN IntervalDuration= 0 THEN 0 ELSE bytesToClient/IntervalDuration END, bytesToServer=case WHEN IntervalDuration= 0 THEN 0 ELSE bytesToServer/IntervalDuration END, RTTermSum=case WHEN RTTermCount= 0 THEN 0 ELSE RTTermSum/RTTermCount END, NRTermSum=case WHEN NRTermCount= 0 THEN 0 ELSE NRTermSum/NRTermCount END, linkErrCount=case WHEN pktsToServer= 0 THEN 0 ELSE linkErrCount/pktsToServer END FROM  LSYTermServerStats
GO

GO
--SqlScripter----[dbo].[LSYTopNCastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastDayView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNCast
GO

GO
--SqlScripter----[dbo].[LSYTopNCastHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastHourView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNCast
GO

GO
--SqlScripter----[dbo].[LSYTopNCastLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastLastDayView]
AS
SELECT * FROM LSYTopNCastHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNCastLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastLastWeekView]
AS
SELECT * FROM LSYTopNCastDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNCastMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastMinuteView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNCast
GO

GO
--SqlScripter----[dbo].[LSYTopNCastMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastMonthView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNCast
GO

GO
--SqlScripter----[dbo].[LSYTopNCastPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastPSDayView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNCast WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNCastPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastPSHourView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNCast WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNCastPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastPSMinuteView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNCast WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNCastPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNCastPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNCastPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNCastPSMonthView]
AS
SELECT LSYTopNCast.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNCast WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrDayView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNLinkErr
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrHourView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNLinkErr
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrLastDayView]
AS
SELECT * FROM LSYTopNLinkErrHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrLastWeekView]
AS
SELECT * FROM LSYTopNLinkErrDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrMinuteView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNLinkErr
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrMonthView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNLinkErr
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrPSDayView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNLinkErr WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrPSHourView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNLinkErr WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrPSMinuteView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNLinkErr WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNLinkErrPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNLinkErrPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNLinkErrPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNLinkErrPSMonthView]
AS
SELECT LSYTopNLinkErr.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNLinkErr WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixDayView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNMatrix
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixHourView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNMatrix
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixLastDayView]
AS
SELECT * FROM LSYTopNMatrixHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixLastWeekView]
AS
SELECT * FROM LSYTopNMatrixDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixMinuteView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNMatrix
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixMonthView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNMatrix
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixPSDayView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixPSHourView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixPSMinuteView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNMatrixPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNMatrixPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNMatrixPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNMatrixPSMonthView]
AS
SELECT LSYTopNMatrix.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspDayView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNNetRsp
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspHourView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNNetRsp
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspLastDayView]
AS
SELECT * FROM LSYTopNNetRspHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspLastWeekView]
AS
SELECT * FROM LSYTopNNetRspDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspMinuteView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNNetRsp
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspMonthView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNNetRsp
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspPSDayView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNNetRsp WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspPSHourView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNNetRsp WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspPSMinuteView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNNetRsp WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNNetRspPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNNetRspPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNNetRspPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNNetRspPSMonthView]
AS
SELECT LSYTopNNetRsp.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNNetRsp WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDayView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNRoute
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayDayView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNRouteDelay
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayHourView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNRouteDelay
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayLastDayView]
AS
SELECT * FROM LSYTopNRouteDelayHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayLastWeekView]
AS
SELECT * FROM LSYTopNRouteDelayDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayMinuteView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNRouteDelay
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayMonthView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNRouteDelay
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayPSDayView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNRouteDelay WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayPSHourView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNRouteDelay WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayPSMinuteView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNRouteDelay WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteDelayPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteDelayPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteDelayPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteDelayPSMonthView]
AS
SELECT LSYTopNRouteDelay.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNRouteDelay WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteHourView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNRoute
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteLastDayView]
AS
SELECT * FROM LSYTopNRouteHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteLastWeekView]
AS
SELECT * FROM LSYTopNRouteDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteMinuteView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNRoute
GO

GO
--SqlScripter----[dbo].[LSYTopNRouteMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRouteMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRouteMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRouteMonthView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNRoute
GO

GO
--SqlScripter----[dbo].[LSYTopNRoutePSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRoutePSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRoutePSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRoutePSDayView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM LSYTopNRoute WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRoutePSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRoutePSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRoutePSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRoutePSHourView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM LSYTopNRoute WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRoutePSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRoutePSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRoutePSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRoutePSMinuteView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM LSYTopNRoute WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[LSYTopNRoutePSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LSYTopNRoutePSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[LSYTopNRoutePSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[LSYTopNRoutePSMonthView]
AS
SELECT LSYTopNRoute.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM LSYTopNRoute WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ifStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsDayView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM M2ifStats
GO

GO
--SqlScripter----[dbo].[M2ifStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsHourView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM M2ifStats
GO

GO
--SqlScripter----[dbo].[M2ifStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsLastDayView]
AS
SELECT * FROM M2ifStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[M2ifStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsLastWeekView]
AS
SELECT * FROM M2ifStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[M2ifStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsMinuteView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM M2ifStats
GO

GO
--SqlScripter----[dbo].[M2ifStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsMonthView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM M2ifStats
GO

GO
--SqlScripter----[dbo].[M2ifStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsPSDayView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM M2ifStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ifStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsPSHourView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM M2ifStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ifStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsPSMinuteView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM M2ifStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ifStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsPSMonthView]
AS
SELECT M2ifStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM M2ifStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ifStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ifStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ifStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ifStatsThView]
AS SELECT M2ifStats.server_addr, M2ifStats.probe_addr, M2ifStats.ifIndex, IntervalDateTime, IntervalDuration, ifInOctets=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE ifInOctets*8.0/(ifSpeed*IntervalDuration) END, ifInDiscards=case WHEN (ifInUcastPkts+ifInNUcastPkts)= 0 THEN 0 ELSE ifInDiscards/(ifInUcastPkts+ifInNUcastPkts) END, ifInErrors=case WHEN (ifInUcastPkts+ifInNUcastPkts)= 0 THEN 0 ELSE ifInErrors/(ifInUcastPkts+ifInNUcastPkts) END, ifInUnknownProtos=case WHEN (ifInUcastPkts+ifInNUcastPkts)= 0 THEN 0 ELSE ifInUnknownProtos/(ifInUcastPkts+ifInNUcastPkts) END, ifOutOctets=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE ifOutOctets*8.0/(ifSpeed*IntervalDuration) END, ifOutDiscards=case WHEN (ifOutUcastPkts+ifOutNUcastPkts)= 0 THEN 0 ELSE ifOutDiscards/(ifOutUcastPkts+ifOutNUcastPkts) END, ifOutErrors=case WHEN (ifOutUcastPkts+ifOutNUcastPkts)= 0 THEN 0 ELSE ifOutErrors/(ifOutUcastPkts+ifOutNUcastPkts) END, InterfaceView.ifSpeed FROM  M2ifStats, InterfaceView WHERE userId = 0 AND InterfaceView.server_addr=M2ifStats.server_addr AND InterfaceView.probe_addr=M2ifStats.probe_addr AND InterfaceView.rsrcIndex=M2ifStats.ifIndex
GO

GO
--SqlScripter----[dbo].[M2ipStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsDayView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM M2ipStats
GO

GO
--SqlScripter----[dbo].[M2ipStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsHourView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM M2ipStats
GO

GO
--SqlScripter----[dbo].[M2ipStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsLastDayView]
AS
SELECT * FROM M2ipStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[M2ipStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsLastWeekView]
AS
SELECT * FROM M2ipStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[M2ipStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsMinuteView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM M2ipStats
GO

GO
--SqlScripter----[dbo].[M2ipStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsMonthView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM M2ipStats
GO

GO
--SqlScripter----[dbo].[M2ipStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsPSDayView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM M2ipStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ipStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsPSHourView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM M2ipStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ipStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsPSMinuteView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM M2ipStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ipStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsPSMonthView]
AS
SELECT M2ipStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM M2ipStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[M2ipStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M2ipStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[M2ipStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[M2ipStatsThView]
AS SELECT M2ipStats.server_addr, M2ipStats.probe_addr, IntervalDateTime, IntervalDuration, ipInReceives=case WHEN IntervalDuration= 0 THEN 0 ELSE ipInReceives/IntervalDuration END, ipInHdrErrors=case WHEN ipInReceives= 0 THEN 0 ELSE ipInHdrErrors/ipInReceives END, ipInAddrErrors=case WHEN ipInReceives= 0 THEN 0 ELSE ipInAddrErrors/ipInReceives END, ipForwDatagram=case WHEN IntervalDuration= 0 THEN 0 ELSE ipForwDatagrams/IntervalDuration END, ipInUnknownProtos=case WHEN ipInReceives= 0 THEN 0 ELSE ipInUnknownProtos/ipInReceives END, ipInDiscards=case WHEN ipInReceives= 0 THEN 0 ELSE ipInDiscards/ipInReceives END, ipInDelivers=case WHEN ipInReceives= 0 THEN 0 ELSE ipInDelivers/ipInReceives END, ipOutRequest=case WHEN IntervalDuration= 0 THEN 0 ELSE ipOutRequests/IntervalDuration END, ipOutDiscards=case WHEN (ipOutRequests+ipForwDatagrams)= 0 THEN 0 ELSE ipOutDiscards/(ipOutRequests+ipForwDatagrams) END, ipOutNoRoutes=case WHEN (ipOutRequests+ipForwDatagrams)= 0 THEN 0 ELSE ipOutNoRoutes/(ipOutRequests+ipForwDatagrams) END, ipReasmFails=case WHEN ipInReceives= 0 THEN 0 ELSE ipReasmFails/ipInReceives END, ipFragFails=case WHEN (ipOutRequests+ipForwDatagrams)= 0 THEN 0 ELSE ipFragFails/(ipOutRequests+ipForwDatagrams) END FROM  M2ipStats
GO

GO
--SqlScripter----[dbo].[machineview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[machineview]') IS NULL EXEC('CREATE VIEW [dbo].[machineview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[machineview]
AS select a.*, b.screenname as "building", c.name, d.screenname as "source" from  secure_machine a,  building b,  machinealias c,  datasource d where c.machineid = a.id and a.buildingid = b.id and c.createdby = d.id
GO

GO
--SqlScripter----[dbo].[MANAGEMENT_WBR].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MANAGEMENT_WBR]') IS NULL EXEC('CREATE VIEW [dbo].[MANAGEMENT_WBR] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[MANAGEMENT_WBR]
( wbr_stid, wbr_groupid, wbr_node, wbr_type, wbr_timz, wbr_dsc ) as Select s.ID, g.ID, s.CCI_NODE, s.TYPE, s.TIME_ZONE, s.DESCR From ( STATION s left join  MANAGEMENT_GROUPS g on s.ID = g.STATIONID)
GO

GO
--SqlScripter----[dbo].[MibIndexView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MibIndexView]') IS NULL EXEC('CREATE VIEW [dbo].[MibIndexView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[MibIndexView]
AS
SELECT mibIndex=md.MibIdx,mibDescription=md.Description
	,indexOrder=coi.ComponentOfIndexOrder
	,indexForMib=coi.OidIdxForMIB
	,columnOrder=cd.OrderOfColumn
	,tableName=tdf.NameOfTable
	,columnName=cd.Name
FROM MIBDefinition md
,ComponentOfIndex coi
,TablesDescription tds
,TableDefinition tdf
,ColumnDefinition cd
WHERE md.MibIdx=tds.MibIdx
AND tds.TableIdx=cd.TableIdx
AND tds.OrderOfColumn=cd.OrderOfColumn
AND tds.TableIdx=tdf.TableIdx
AND tds.MibIdx=coi.MibIdx
AND tds.OidIdxForMIB=coi.OidIdxForMIB
GO

GO
--SqlScripter----[dbo].[NBarAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBarAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[NBarAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBarAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,AllStatsHCInBytes=case WHEN a.fieldIndex=12701 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,AllStatsHCOutBytes=case WHEN a.fieldIndex=12702 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,availability=CASE WHEN a.fieldIndex =1602 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
FROM ResourceNameNBarView r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
		AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=127
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statDayView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM NBARprotocol_stat
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statHourView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM NBARprotocol_stat
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statLastDayView]
AS
SELECT * FROM NBARprotocol_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statLastWeekView]
AS
SELECT * FROM NBARprotocol_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statMinuteView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM NBARprotocol_stat
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statMonthView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM NBARprotocol_stat
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statPSDayView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM NBARprotocol_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statPSHourView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM NBARprotocol_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statPSMinuteView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM NBARprotocol_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statPSMonthView]
AS
SELECT NBARprotocol_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM NBARprotocol_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NBARprotocol_statThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBARprotocol_statThView]') IS NULL EXEC('CREATE VIEW [dbo].[NBARprotocol_statThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBARprotocol_statThView]
AS SELECT NBARprotocol_stat.server_addr, NBARprotocol_stat.probe_addr, NBARprotocol_stat.ifIndex, NBARprotocol_stat.AllStatsProtocolsIndex, IntervalDateTime, IntervalDuration, AllStatsHCInBytes=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE 8.0*AllStatsHCInBytes/(ifSpeed*IntervalDuration) END, AllStatsHCOutBytes=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE 8.0*AllStatsHCInBytes/(ifSpeed*IntervalDuration) END, ResourceNameNBarView.ifSpeed FROM  NBARprotocol_stat, ResourceNameNBarView WHERE userId = 0 AND ResourceNameNBarView.server_addr=NBARprotocol_stat.server_addr AND ResourceNameNBarView.probe_addr=NBARprotocol_stat.probe_addr AND ResourceNameNBarView.rsrcIndex=NBARprotocol_stat.ifIndex
GO

GO
--SqlScripter----[dbo].[NBarScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NBarScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[NBarScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NBarScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,AllStatsHCInBytes=100-case WHEN SUM(AllStatsHCInBytes)>100 THEN 100 ELSE SUM(AllStatsHCInBytes) END
	,AllStatsHCOutBytes=100-case WHEN SUM(AllStatsHCOutBytes)>100 THEN 100 ELSE SUM(AllStatsHCOutBytes) END
	,availability=100-CASE WHEN SUM(availability)>100 THEN 100 ELSE SUM(availability) END
FROM NBarAlertView r
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[NonAvailView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailView]
AS
SELECT server_addr, probe_addr, ifIndex,rsrcType, rsrcOtherIndex,
	IntervalDateTime=start_down_time,start_down_time,
	end_down_time = CASE 
		WHEN end_down_time IS NULL THEN end_time
		ELSE end_down_time
		END,
	downDuration= CASE 
		WHEN end_down_time IS NULL THEN datediff(second, start_down_time, end_time)
		ELSE datediff(second, start_down_time, end_down_time)
		END
	FROM NonAvail na, SessionLength s
	WHERE na.sessionNumber=s.sessionNumber
GO

GO
--SqlScripter----[dbo].[NonAvailViewDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewDayView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM NonAvailView
GO

GO
--SqlScripter----[dbo].[NonAvailViewHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewHourView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewHourView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM NonAvailView
GO

GO
--SqlScripter----[dbo].[NonAvailViewLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewLastDayView]
AS
SELECT * FROM NonAvailViewHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[NonAvailViewLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewLastWeekView]
AS
SELECT * FROM NonAvailViewDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[NonAvailViewMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewMinuteView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM NonAvailView
GO

GO
--SqlScripter----[dbo].[NonAvailViewMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewMonthView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM NonAvailView
GO

GO
--SqlScripter----[dbo].[NonAvailViewPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewPSDayView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM NonAvailView WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonAvailViewPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewPSHourView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM NonAvailView WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonAvailViewPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewPSMinuteView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM NonAvailView WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonAvailViewPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonAvailViewPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[NonAvailViewPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonAvailViewPSMonthView]
AS
SELECT NonAvailView.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM NonAvailView WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonHealthDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthDayView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM NonHealth
GO

GO
--SqlScripter----[dbo].[NonHealthHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthHourView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthHourView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM NonHealth
GO

GO
--SqlScripter----[dbo].[NonHealthLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthLastDayView]
AS
SELECT * FROM NonHealthHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[NonHealthLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthLastWeekView]
AS
SELECT * FROM NonHealthDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[NonHealthMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthMinuteView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM NonHealth
GO

GO
--SqlScripter----[dbo].[NonHealthMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthMonthView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM NonHealth
GO

GO
--SqlScripter----[dbo].[NonHealthPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthPSDayView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM NonHealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonHealthPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthPSHourView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM NonHealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonHealthPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthPSMinuteView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM NonHealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NonHealthPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NonHealthPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[NonHealthPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NonHealthPSMonthView]
AS
SELECT NonHealth.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM NonHealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[NPOProbeAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NPOProbeAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[NPOProbeAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NPOProbeAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,utilization_sum=CASE WHEN a.fieldIndex=1402 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,broadcastFrames=CASE a.fieldIndex WHEN 1403 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,multicastFrames=CASE WHEN a.fieldIndex = 1404 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frameLostProbe=CASE WHEN a.fieldIndex=1405 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frameLostbuf=case WHEN a.fieldIndex =1406 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,frameLosthard=CASE WHEN a.fieldIndex = 1407 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,unavail=CASE WHEN a.fieldIndex =1602 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
FROM ResourceNameNPOProbeView r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND monitored = 1
	AND a.fieldIndex/100=14
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[NPOProbeScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NPOProbeScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[NPOProbeScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NPOProbeScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,utilization_sum=100-case WHEN SUM(utilization_sum) > 100 THEN 100 ELSE SUM(utilization_sum) END
	,broadcastFrames=100-case WHEN SUM(broadcastFrames) > 100 THEN 100 ELSE SUM(broadcastFrames) END
	,multicastFrames=100-case WHEN SUM(multicastFrames) > 100 THEN 100 ELSE SUM(multicastFrames) END
	,frameLostProbe=100-case WHEN SUM(frameLostProbe) > 100 THEN 100 ELSE SUM(frameLostProbe) END
	,frameLostBuf=100-case WHEN SUM(frameLostbuf) > 100 THEN 100 ELSE SUM(frameLostbuf) END
	,frameLostHard=100-case WHEN SUM(frameLosthard) > 100 THEN 100 ELSE SUM(frameLosthard) END
	,availability=100-case WHEN SUM(unavail) > 100 THEN 100 ELSE SUM(unavail) END
FROM NPOProbeAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[NPOTSAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NPOTSAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[NPOTSAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NPOTSAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,bytesToServer=CASE WHEN a.fieldIndex=1201 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,bytesToClients=CASE a.fieldIndex WHEN 1202 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,userrespTime=CASE WHEN a.fieldIndex = 1204 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,netRespTime=CASE WHEN a.fieldIndex=1207 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,TSlinkErr=case WHEN a.fieldIndex =1208 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
FROM ResourceNameNPOTSView r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
		AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=12
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[NPOTSScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[NPOTSScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[NPOTSScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[NPOTSScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,bytesToServer=100-case WHEN SUM(bytesToServer) > 100 THEN 100 ELSE SUM(bytesToServer) END
	,bytesToClients=100-case WHEN SUM(bytesToClients) > 100 THEN 100 ELSE SUM(bytesToClients) END
	,userrespTime=100-case WHEN SUM(userrespTime) > 100 THEN 100 ELSE SUM(userrespTime) END
	,netRespTime=100-case WHEN SUM(netRespTime) > 100 THEN 100 ELSE SUM(netRespTime) END
	,TSlinkErr=100-case WHEN SUM(TSlinkErr) > 100 THEN 100 ELSE SUM(TSlinkErr) END
FROM NPOTSAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[OidColumnMappingView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[OidColumnMappingView]') IS NULL EXEC('CREATE VIEW [dbo].[OidColumnMappingView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[OidColumnMappingView]
AS
SELECT ms.MibIdx, tbl.NameOfTable, td.TypeOfSaving, ms.OidIdxForMIB, cd.Name, ms.OID
FROM TablesDescription td join MibStructure ms
	ON td.MibIdx = ms.MibIdx AND td.OidIdxForMIB = ms.OidIdxForMIB
JOIN ColumnDefinition cd ON cd.OrderOfColumn = td.OrderOfColumn
	AND cd.OrderOfColumn = td.OrderOfColumn
	AND cd.TableIdx = td.TableIdx
JOIN TableDefinition tbl
	ON tbl.TableIdx = cd.TableIdx
GO

GO
--SqlScripter----[dbo].[ols_v_user].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ols_v_user]') IS NULL EXEC('CREATE VIEW [dbo].[ols_v_user] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ols_v_user]
AS
	select	u.user_uuid as user_uuid,
			is_area_enabled = 	case  s.set_val_lng when   0 
								then 0
								/* if user is not inside a profile
								   we asume hard restrictions: area_enabled */
								else  min(isnull(usp.area_enabled,1) )
								end, 
			u.uri as uri
	from 	ca_settings s,
			ca_discovered_user u left join
				ols_v_user_link_profile usp on u.user_uuid = usp.user_uuid,
			ca_settings s2
	where
			s.set_id = 901
			and ( u.domain_uuid = s2.set_val_uuid and	s2.set_id = 1
				)
group by u.user_uuid, u.uri, u.domain_uuid, s.set_val_lng
GO

GO
--SqlScripter----[dbo].[ols_v_user_link_profile].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ols_v_user_link_profile]') IS NULL EXEC('CREATE VIEW [dbo].[ols_v_user_link_profile] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/**
 ********************************************************
 ********************************************************
 Views, Functions and procedures for area support
 ********************************************************
 ********************************************************
*/

/**
 * view to be used to get the uuid and the settigs if area is enabled
 * based on a user uri
*/

ALTER VIEW [dbo].[ols_v_user_link_profile]
AS
	select	usp.user_uuid as user_uuid,
		min(sp.area_enabled) as area_enabled
	from 
		ca_security_profile sp,
		ca_link_dis_user_sec_profile usp
	where
			usp.security_profile_uuid = sp.security_profile_uuid
		and sp.type != 1			-- exclude everyone
	group by usp.user_uuid
GO

GO
--SqlScripter----[dbo].[OutstandingAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[OutstandingAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[OutstandingAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[OutstandingAlertView]
AS
SELECT * FROM AlertView WHERE endTime IS NULL
	AND severity > 0
	AND IntervalDateTime > (SELECT MAX(start_time) FROM SessionLength)
GO

GO
--SqlScripter----[dbo].[personview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[personview]') IS NULL EXEC('CREATE VIEW [dbo].[personview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[personview]
AS select a.name, b.*, c.screenname as "source" from  personalias a,  secure_person b,  datasource c where a.personid = b.id and a.createdby = c.id
GO

GO
--SqlScripter----[dbo].[pmftoorg].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[pmftoorg]') IS NULL EXEC('CREATE VIEW [dbo].[pmftoorg] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[pmftoorg]
AS SELECT ai_usrdef_orgtree_prop.pmf, ud_orgdef_list.olorgname, ud_orgdef_list.olnote, ud_orgdef_list.oldiv FROM  ai_usrdef_orgtree_prop INNER JOIN  ud_orgdef_list ON ai_usrdef_orgtree_prop.reportsto LIKE '%' + ud_orgdef_list.oluserlist + '%'
GO

GO
--SqlScripter----[dbo].[processlistview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[processlistview]') IS NULL EXEC('CREATE VIEW [dbo].[processlistview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[processlistview]
AS
       SELECT DISTINCT "stats"."processid", "stats"."processname"
       FROM "stats", "productidview"
       WHERE (stats.productid = productidview.productid)
GO

GO
--SqlScripter----[dbo].[ProcStatusCompView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ProcStatusCompView]') IS NULL EXEC('CREATE VIEW [dbo].[ProcStatusCompView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ProcStatusCompView]
AS SELECT definitions.name AS process_name, COUNT(instances.id) AS instance_count, instances.definitionid AS process_id FROM  definitions INNER JOIN  instances ON definitions.id = instances.definitionid,  productidview WHERE (NOT (instances.completed = 0)) AND (instances.productid = productidview.productid) AND (definitions.productid = productidview.productid) GROUP BY instances.definitionid, definitions.name
GO

GO
--SqlScripter----[dbo].[ProcStatusIncompView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ProcStatusIncompView]') IS NULL EXEC('CREATE VIEW [dbo].[ProcStatusIncompView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ProcStatusIncompView]
AS SELECT definitions.name AS process_name, COUNT(instances.id) AS instance_count, instances.definitionid AS process_id FROM  definitions INNER JOIN  instances ON definitions.id = instances.definitionid,  productidview WHERE (instances.completed = 0) AND (instances.productid = productidview.productid) AND (definitions.productid = productidview.productid) GROUP BY instances.definitionid, definitions.name
GO

GO
--SqlScripter----[dbo].[ProcStatusJoinedView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ProcStatusJoinedView]') IS NULL EXEC('CREATE VIEW [dbo].[ProcStatusJoinedView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ProcStatusJoinedView]
AS SELECT ProcStatusListView.process_name, ProcStatusCompView.instance_count AS complete_count, ProcStatusIncompView.instance_count AS incomplete_count FROM  ProcStatusCompView FULL OUTER JOIN  ProcStatusListView ON ProcStatusCompView.process_name = ProcStatusListView.process_name FULL OUTER JOIN  ProcStatusIncompView ON ProcStatusIncompView.process_name = ProcStatusListView.process_name
GO

GO
--SqlScripter----[dbo].[ProcStatusListView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ProcStatusListView]') IS NULL EXEC('CREATE VIEW [dbo].[ProcStatusListView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ProcStatusListView]
AS select process_name from  ProcStatusIncompView union select process_name from  ProcStatusCompView
GO

GO
--SqlScripter----[dbo].[productidview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[productidview]') IS NULL EXEC('CREATE VIEW [dbo].[productidview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[productidview]
AS
       SELECT "productids"."productid"
       FROM "productids", "productkeyview"
       WHERE productids.productkey = productkeyview.product_key
GO

GO
--SqlScripter----[dbo].[productkeyview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[productkeyview]') IS NULL EXEC('CREATE VIEW [dbo].[productkeyview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[productkeyview]
("product_key")  AS
       SELECT "kpi_properties"."value"
       FROM "kpi_properties"
       WHERE name = 'pr.product_key'
GO

GO
--SqlScripter----[dbo].[pubsum].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[pubsum]') IS NULL EXEC('CREATE VIEW [dbo].[pubsum] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[pubsum]
AS SELECT ai_pubdef_prop.pubname, SUM(ai_swdef_instcnt_kpi.count) AS "count" FROM  ai_swdef_instcnt_kpi INNER JOIN  ai_swdef_prop ON ai_swdef_instcnt_kpi.swuuid = ai_swdef_prop.swuuid INNER JOIN  ai_pubdef_prop ON ai_pubdef_prop.pubuuid = ai_swdef_prop.pubuuid where pubname!= '' GROUP BY ai_pubdef_prop.pubname
GO

GO
--SqlScripter----[dbo].[pubsumcomputers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[pubsumcomputers]') IS NULL EXEC('CREATE VIEW [dbo].[pubsumcomputers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[pubsumcomputers]
AS SELECT COUNT(*) AS "count", ai_pubdef_prop.pubname FROM  ai_swdef_prop INNER JOIN  ai_pubdef_prop ON ai_swdef_prop.pubuuid = ai_pubdef_prop.pubuuid INNER JOIN  ai_swdef_instcnt_kpi ON ai_swdef_prop.swuuid = ai_swdef_instcnt_kpi.swuuid GROUP BY ai_pubdef_prop.pubname
GO

GO
--SqlScripter----[dbo].[ResNonhealthDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthDayView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthDayView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM ResNonhealth
GO

GO
--SqlScripter----[dbo].[ResNonhealthHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthHourView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthHourView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM ResNonhealth
GO

GO
--SqlScripter----[dbo].[ResNonhealthLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthLastDayView]
AS
SELECT * FROM ResNonhealthHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[ResNonhealthLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthLastWeekView]
AS
SELECT * FROM ResNonhealthDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[ResNonhealthMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthMinuteView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM ResNonhealth
GO

GO
--SqlScripter----[dbo].[ResNonhealthMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthMonthView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM ResNonhealth
GO

GO
--SqlScripter----[dbo].[ResNonhealthPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthPSDayView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM ResNonhealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[ResNonhealthPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthPSHourView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM ResNonhealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[ResNonhealthPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthPSMinuteView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM ResNonhealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[ResNonhealthPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResNonhealthPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[ResNonhealthPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResNonhealthPSMonthView]
AS
SELECT ResNonhealth.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM ResNonhealth WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[resourcenamebgp4asview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[resourcenamebgp4asview]') IS NULL EXEC('CREATE VIEW [dbo].[resourcenamebgp4asview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[resourcenamebgp4asview]
("server_addr", "probe_addr", "rsrcIndex", "rsrcOtherIndex", "rsrcType", "collect_flags", "rsrcName", "rsrcDescr", "IP_addr", "port", "community", "ifSpeed", "ifType", "agentName", "ifName", "ifIndex", "mibIndex", "mibId", "monitored", "bypassAvail", "viewType", "rsrcId", "userId")  AS
       SELECT DISTINCT "b"."server_addr", 0, "b"."bgplocalas", "b"."bgppeerremoteas", - 20, 0, 'AS Pair ' + dbo.varchar(bgpLocalAs) + ' - ' + dbo.varchar(bgpPeerRemoteAs), '', '', 0, '', 0, 0, dbo.varchar(bgpLocalAs) + ' - ' + dbo.varchar(bgpPeerRemoteAs), '', 0, '', 0, 1, 1, 8, dbo.varchar(20) + ':' + dbo.varchar(server_addr) + ':' + dbo.varchar(bgpLocalAs) + ':' + dbo.varchar(bgpPeerRemoteAs), 0
       FROM "bgp4peerentry" "b"
GO

GO
--SqlScripter----[dbo].[ResourceNameBGP4View].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameBGP4View]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameBGP4View] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameBGP4View]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=bgpPeerRemoteAs
	,rsrcOtherIndex=bgpPeerIdentifier
	,rsrcType=20
	,collect_flags=collect_flags
	,rsrcName=b.bgpPeerIdentifierIP+' : ' +convert(varchar(10),bgpLocalAs)+' - '+ convert(varchar(10),bgpPeerRemoteAs)
	,rsrcDescr=sysDescr
	,IP_addr=IP_addr
	,p.port
	,community=community
	,ifSpeed=0
	,ifType=0
	,agentName=b.bgpPeerIdentifierIP+' : ' +convert(varchar(10),bgpLocalAs)+' - '+ convert(varchar(10),bgpPeerRemoteAs)
	,ifName=''
	,ifIndex=0
	,mibIndex=bgpPeerIdentifierIP
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=8
	,rsrcId=convert(varchar(10),20)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),bgpPeerRemoteAs)+':'+convert(varchar(10),bgpPeerIdentifier)
	,userId=p.userId
FROM UserProbeView p, BGP4PeerEntry b
WHERE (collect_flags & 262144)=262144
	AND p.server_addr=b.server_addr
	AND p.probe_addr=b.probe_addr
GO

GO
--SqlScripter----[dbo].[ResourceNameCiscoView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameCiscoView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameCiscoView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameCiscoView]
AS
SELECT server_addr=server_addr
	,probe_addr=probe_addr
	,rsrcIndex=0
	,rsrcOtherIndex=0
	,rsrcType=4
	,collect_flags=collect_flags
	,rsrcName=isnull(isnull(sysName,IP_addr),'')
	,rsrcDescr=sysDescr
	,IP_addr=IP_addr
	,p.port
	,community=community
	,ifSpeed=0
	,ifType=0
	,agentName=isnull(sysName,'') + ' / ' + IP_addr
	,ifName=''
	,ifIndex=0
	,mibIndex='0'
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=8
	,rsrcId=convert(varchar(10),4)+':'+convert(varchar(12),probe_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM UserProbeView p
WHERE (collect_flags & 1024)=1024
GO

GO
--SqlScripter----[dbo].[ResourceNameEchoPathView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameEchoPathView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameEchoPathView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameEchoPathView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=0
	,rsrcOtherIndex=re.CtrlAdminIndex
	,rsrcType=132
	,collect_flags=collect_flags
	,rsrcName=ra.CtrlAdminTag+' ('+p.IP_addr+':' + convert(varchar(8),EchoAdminSourcePort)+' - ' + dbo.StrToIP(EchoAdminTargetAddress)+':'+convert(varchar(8), EchoAdminTargetPort)+') TOS ('+convert(varchar(2),echoadmintos)+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=0
	,ifType=0
	,agentName=ra.CtrlAdminTag+' ('+p.IP_addr+':' + convert(varchar(8),EchoAdminSourcePort)+' - ' + dbo.StrToIP(EchoAdminTargetAddress)+':'+convert(varchar(8), EchoAdminTargetPort)+') TOS ('+convert(varchar(2),echoadmintos)+')'
	,ifName=ra.CtrlAdminTag
	,ifIndex=0
	,mibIndex=''
	,mibId=18
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=8
	,rsrcId=convert(varchar(10),132)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),re.CtrlAdminIndex)
	,userId=p.userId
FROM RTTEchoAdmin_cfg re, RTTCtrlAdmin_cfg ra, UserProbeView p
WHERE re.probe_addr = p.probe_addr
	AND re.probe_addr=ra.probe_addr
	AND re.CtrlAdminIndex=ra.CtrlAdminIndex
	AND ra.CtrlAdminRttType=1
GO

GO
--SqlScripter----[dbo].[ResourceNameFRView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameFRView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameFRView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameFRView]
AS
SELECT
	server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=fr.frCircuitDlci
	,rsrcType=5
	,collect_flags=p.collect_flags
	,rsrcName = p.sysName + ' / '+convert(varchar(5),f.ifIndex) +' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' Circuit Id: ' + convert(varchar(5), fr.frCircuitDlci)+ ' (bw= ' + 
	CASE 
	WHEN fr.frCommittedInformationRate IS NULL AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NULL THEN convert(varchar(12), f.ifSpeed) + ' Mbps'
	WHEN fr.frCommittedInformationRate = 0 AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NULL THEN convert(varchar(12),f.ifSpeed/1000000)+' Mbps'
	WHEN fr.frCommittedInformationRate = 0 AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NOT NULL THEN convert(varchar(12),i.itfcSpeed/1000000)+' Mbps'
	WHEN fr.frCommittedInformationRate IS NULL AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NOT NULL THEN convert(varchar(12), i.itfcSpeed/1000000)+ 'Mbps'
	WHEN fr.frCommittedInformationRate = 0 AND fr.frCircuitCommittedBurst > 0 THEN convert(varchar(12),fr.frCircuitCommittedBurst*1.0/1000000)+' Mbps'
	ELSE convert(varchar(12),fr.frCommittedInformationRate*1.0/1000000)+' Mbps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=CASE
	WHEN fr.frCommittedInformationRate IS NOT NULL AND fr.frCommittedInformationRate > 0 THEN fr.frCommittedInformationRate
	WHEN fr.frCircuitCommittedBurst IS NOT NULL AND fr.frCircuitCommittedBurst > 0 THEN fr.frCircuitCommittedBurst
	WHEN i.itfcSpeed IS NOT NULL AND i.itfcSpeed > 0 THEN i.itfcSpeed
	ELSE f.ifSpeed
	END
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex) +' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' Circuit Id: ' + convert(varchar(5), fr.frCircuitDlci)+ ' (bw= ' + 
	CASE 
	WHEN fr.frCommittedInformationRate IS NULL AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NULL THEN convert(varchar(12), f.ifSpeed) + ' Mbps'
	WHEN fr.frCommittedInformationRate = 0 AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NULL THEN convert(varchar(12),f.ifSpeed/1000000)+' Mbps'
	WHEN fr.frCommittedInformationRate = 0 AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NOT NULL THEN convert(varchar(12),i.itfcSpeed/1000000)+' Mbps'
	WHEN fr.frCommittedInformationRate IS NULL AND fr.frCircuitCommittedBurst = 0 AND i.itfcSpeed IS NOT NULL THEN convert(varchar(12), i.itfcSpeed/1000000)+ 'Mbps'
	WHEN fr.frCommittedInformationRate = 0 AND fr.frCircuitCommittedBurst > 0 THEN convert(varchar(12),fr.frCircuitCommittedBurst*1.0/1000000)+' Mbps'
	ELSE convert(varchar(12),fr.frCommittedInformationRate*1.0/1000000)+' Mbps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), f.ifIndex)+'.'+convert(varchar(10),fr.frCircuitDlci)
	,mibId=0
	,monitored=(CASE WHEN ((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN i.collReq & 0x1 = 0x1 THEN 0
	WHEN fr.collReq & 0x1 = 0x1 THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	ELSE 1
	END) - (CASE WHEN i.itfcType & 0x1 = 1 THEN 3 ELSE 0 END)
	,bypassAvail=
	CASE
	WHEN (p.collect_flags & 0x80000)>0 THEN 1
	WHEN fr.collReq & 16 > 0 THEN 1
	ELSE 0 END
	,viewType=32
	,rsrcId=convert(varchar(10),5)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),fr.frCircuitDlci)
	,userId=p.userId
FROM (UserProbeView p join M2if f
ON p.server_addr=f.server_addr
AND p.probe_addr=f.probe_addr)
left join ItfcConfig i
ON f.server_addr=i.server_addr
AND f.probe_addr=i.probe_addr
AND f.dbIndex=i.itfcIndex
 join FRCircuitId fr
	ON p.server_addr=fr.server_addr
	AND p.probe_addr=fr.probe_addr
	AND f.dbIndex=fr.frCircuitIfIndex
GO

GO
--SqlScripter----[dbo].[ResourceNameInterfaceView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameInterfaceView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameInterfaceView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameInterfaceView]
AS

	SELECT * FROM ResourceNameWANView 
	UNION ALL
	SELECT * FROM ResourceNameLANView
GO

GO
--SqlScripter----[dbo].[ResourceNameIPView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameIPView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameIPView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameIPView]
AS
SELECT server_addr=server_addr
	,probe_addr=probe_addr
	,rsrcIndex=0
	,rsrcOtherIndex=0
	,rsrcType=2
	,collect_flags=collect_flags
	,rsrcName=isnull(isnull(p.sysName,IP_addr),'')
	,rsrcDescr=sysDescr
	,IP_addr=IP_addr
	,p.port
	,community=community
	,ifSpeed=0
	,ifType=0
	,agentName=p.sysName
	,ifName=''
	,ifIndex=0
	,mibIndex='0'
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=8
	,rsrcId=convert(varchar(10),2)+':'+convert(varchar(12),probe_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM UserProbeView p
WHERE (collect_flags & 1)=1
GO

GO
--SqlScripter----[dbo].[ResourceNameJitterView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameJitterView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameJitterView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameJitterView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=0
	,rsrcOtherIndex=re.CtrlAdminIndex
	,rsrcType=136
	,collect_flags=collect_flags
	,rsrcName=ra.CtrlAdminTag+' ('+p.IP_addr+':' + convert(varchar(8),EchoAdminSourcePort)+' - ' + dbo.StrToIP(EchoAdminTargetAddress)+':'+convert(varchar(8), EchoAdminTargetPort)+') TOS ('+convert(varchar(2),echoadmintos)+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=0
	,ifType=0
	,agentName=ra.CtrlAdminTag+' ('+p.IP_addr+':' + convert(varchar(8),EchoAdminSourcePort)+' - ' + dbo.StrToIP(EchoAdminTargetAddress)+':'+convert(varchar(8), EchoAdminTargetPort)+') TOS ('+convert(varchar(2),echoadmintos)+')'
	,ifName=ra.CtrlAdminTag
	,ifIndex=0
	,mibIndex=''
	,mibId=21
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=8
	,rsrcId=convert(varchar(10),136)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),re.CtrlAdminIndex)
	,userId=p.userId
FROM RTTEchoAdmin_cfg re, RTTCtrlAdmin_cfg ra, UserProbeView p
WHERE re.probe_addr = p.probe_addr
	AND re.probe_addr=ra.probe_addr
	AND re.CtrlAdminIndex=ra.CtrlAdminIndex
	AND ra.CtrlAdminRttType=9
GO

GO
--SqlScripter----[dbo].[ResourceNameLANView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameLANView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameLANView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameLANView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=0
	,rsrcType=1
	,collect_flags=collect_flags
	,rsrcName=p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), f.ifIndex)
	,mibId=0
	,monitored=(CASE 
	WHEN((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN i.collReq & 0x1 = 0x1 THEN 0
	WHEN i.collReq & 32 = 32 THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	WHEN i.collReq & 0x2 = 0x2 THEN 2
	ELSE 1
	END) - (CASE WHEN i.itfcType & 0x1 = 0x1 THEN 3 ELSE 0 END)
	,bypassAvail=CASE
	WHEN (p.collect_flags & 0x80000)>0 THEN 1
	WHEN i.collReq & 16 > 0 THEN 1
	ELSE 0 END
	,viewType=16
	,rsrcId=convert(varchar(10),1)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM (UserProbeView p join M2if f
	ON p.server_addr=f.server_addr
	AND p.probe_addr=f.probe_addr)
	left join ItfcConfig i
	ON f.server_addr=i.server_addr
	AND f.probe_addr=i.probe_addr
	AND f.dbIndex=i.itfcIndex
WHERE f.ifType IN (1,6,7,8,9,10,11,12,13,14,15,26,35,36,53,62,69,115,117,161)
GO

GO
--SqlScripter----[dbo].[ResourceNameNBarProtocolView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNBarProtocolView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNBarProtocolView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNBarProtocolView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=nbp.SupportedProtocolsIndex
	,rsrcType=-8
	,collect_flags=collect_flags
	,rsrcName=p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+') ' + nbp.SupportedProtocolsName
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+') ' + nbp.SupportedProtocolsName
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), f.ifIndex)
	,mibId=16
	,monitored=CASE WHEN ((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	WHEN np.StatusPdEnable <> 1 THEN 0
	ELSE 1 END
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=32
	,rsrcId=convert(varchar(10),-8)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM (UserProbeView p join M2if f
	ON p.server_addr=f.server_addr
	AND p.probe_addr=f.probe_addr)
	left join ItfcConfig i
	ON f.server_addr=i.server_addr
	AND f.probe_addr=i.probe_addr
	AND f.dbIndex=i.itfcIndex
	,NBARProtocolStatus_cfg np
	,NBARprotocol_cfg nbp
WHERE np.server_addr=f.server_addr
	AND np.probe_addr=f.probe_addr
	AND np.dbIndex=f.dbIndex
GO

GO
--SqlScripter----[dbo].[ResourceNameNBarView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNBarView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNBarView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNBarView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=0
	,rsrcType=127
	,collect_flags=collect_flags
	,rsrcName=p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), f.ifIndex)
	,mibId=16
	,monitored=CASE WHEN ((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	WHEN np.StatusPdEnable <> 1 THEN 0
	ELSE 1 END
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=16
	,rsrcId=convert(varchar(10),127)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM (UserProbeView p join M2if f
	ON p.server_addr=f.server_addr
	AND p.probe_addr=f.probe_addr)
	left join ItfcConfig i
	ON f.server_addr=i.server_addr
	AND f.probe_addr=i.probe_addr
	AND f.dbIndex=i.itfcIndex
	,NBARProtocolStatus_cfg np
WHERE np.server_addr=f.server_addr
	AND np.probe_addr=f.probe_addr
	AND np.dbIndex=f.dbIndex
	AND np.StatusPdEnable=1
GO

GO
--SqlScripter----[dbo].[ResourceNameNPOFSView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNPOFSView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNPOFSView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNPOFSView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=lp.probeIndex
	,rsrcOtherIndex=fid.fileServerKeyId
	,rsrcType=11
	,collect_flags=collect_flags
	,rsrcName=lp.probeInterfaceName+ ' / '+sid.name+ ' / '+fid.fileServerName
	,rsrcDescr=fid.fileServerNetAddr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=lp.probeNetworkSpeed
	,ifType=lp.probeMediumType
	,agentName=sid.name+' / '+fid.fileServerName
	,ifName=lp.probeInterfaceName
	,ifIndex=lp.probeIndex
	,mibIndex=convert(varchar(2), fid.probeIndex) + '.' + 
		CASE fileServerServiceType WHEN 2050 THEN '3'
		WHEN 2049 THEN '1' ELSE '2' END
	+'.$' + fileServerNetAddr + '$'
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=32
	,rsrcId=convert(varchar(10),11)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),lp.probeIndex)+':'+convert(varchar(10),fid.fileServerKeyId)
	,userId=p.userId
FROM UserProbeView p, LSYProbeId lp, LSYFileServerId fid, MonitorAppl sid
WHERE p.probe_addr=lp.probe_addr
	AND p.server_addr=lp.server_addr
	AND lp.server_addr=fid.server_addr
	AND lp.probe_addr=fid.probe_addr
	AND lp.probeIndex=fid.probeIndex
	AND fid.fileServerServiceType=sid.serviceType
	AND (collect_flags & 8192)=8192
GO

GO
--SqlScripter----[dbo].[ResourceNameNPOProbeView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNPOProbeView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNPOProbeView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNPOProbeView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=lp.probeIndex
	,rsrcOtherIndex=0
	,rsrcType=14
	,collect_flags=collect_flags
	,rsrcName=lp.probeInterfaceName+' / '+p.sysName
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=lp.probeNetworkSpeed
	,ifType=lp.probeMediumType
	,agentName=lp.probeInterfaceName
	,ifName=lp.probeInterfaceName
	,ifIndex=lp.probeIndex
	,mibIndex=convert(varchar(2), probeIndex)
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=16
	,rsrcId=convert(varchar(10),14)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),lp.probeIndex)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM UserProbeView p, LSYProbeId lp
WHERE p.probe_addr=lp.probe_addr
	AND p.server_addr=lp.server_addr
	AND (collect_flags & 8192)=8192
GO

GO
--SqlScripter----[dbo].[ResourceNameNPOTSView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNPOTSView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNPOTSView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNPOTSView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=lp.probeIndex
	,rsrcOtherIndex=tid.termServerKeyId
	,rsrcType=12
	,collect_flags=collect_flags
	,rsrcName=lp.probeInterfaceName+' / '+
		case sid.mode
		WHEN 0 THEN sid.name
		WHEN 1 THEN sid.name
		WHEN 3 THEN 'User Defined Server'
		ELSE 'Unknown'
		END
	+' / '+tid.termServerName+
	CASE tid.termServerPort
	WHEN 0 THEN ''
	ELSE ':'+convert(varchar(6), tid.termServerPort)
	END
	,rsrcDescr=tid.termServerNetAddr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=lp.probeNetworkSpeed
	,ifType=lp.probeMediumType
	,agentName=
		case sid.mode
		WHEN 0 THEN sid.name
		WHEN 1 THEN sid.name
		WHEN 3 THEN 'User Defined Server'
		ELSE 'Unknown'
		END
	+' / '+tid.termServerName+
	CASE tid.termServerPort
	WHEN 0 THEN ''
	ELSE ':'+convert(varchar(6), tid.termServerPort)
	END
	,ifName=lp.probeInterfaceName
	,ifIndex=lp.probeIndex
	,mibIndex=
	convert(varchar(2), tid.probeIndex) + '.' + 
	CASE serviceType 
	WHEN 1025 THEN '2'
	WHEN 514 THEN  '5'
	WHEN 515 THEN '6'
	WHEN 516 THEN '3'
	ELSE '1' END
	+ '.'+ convert(varchar(6), termServerServiceType) + '.'
	+ convert(varchar(6), termServerPort)
	+'.$' + termServerNetAddr+ '$'
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=32
	,rsrcId=convert(varchar(10),12)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),lp.probeIndex)+':'+convert(varchar(10),tid.termServerKeyId)
	,userId=p.userId
FROM UserProbeView p, LSYProbeId lp, 
	(LSYTermServerId tid left join MonitorAppl sid 
	ON tid.termServerServiceType=sid.serviceType)
WHERE (collect_flags & 8192)=8192
	AND p.probe_addr=lp.probe_addr
	AND p.server_addr=lp.server_addr
	AND lp.server_addr=tid.server_addr
	AND lp.probe_addr=tid.probe_addr
	AND lp.probeIndex=tid.probeIndex
	AND tid.termServerServiceType<>1025
GO

GO
--SqlScripter----[dbo].[ResourceNameNPOWCView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNPOWCView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNPOWCView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNPOWCView]
AS
SELECT distinct server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=lp.probeIndex
	,rsrcOtherIndex=0
	,rsrcType=18
	,collect_flags=collect_flags
	,rsrcName=lp.probeInterfaceName+
		' / '+tc.clientName
	,rsrcDescr=tc.clientName
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=lp.probeNetworkSpeed
	,ifType=lp.probeMediumType
	,agentName=tc.clientName
	,ifName=lp.probeInterfaceName
	,ifIndex=lp.probeIndex
	,mibIndex=''
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=32
	,rsrcId=convert(varchar(10),17)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),lp.probeIndex)+':'+convert(varchar(10),tc.clientName)
	,userId=p.userId
FROM UserProbeView p,LSYProbeId lp
	,LSYTermServerClients tc, LSYTermServerId tid
WHERE (collect_flags & 8192)=8192
	AND p.probe_addr=lp.probe_addr
	AND p.server_addr=lp.server_addr
	AND lp.server_addr=tid.server_addr
	AND lp.probe_addr=tid.probe_addr
	AND lp.probeIndex=tid.probeIndex
	AND tc.server_addr=tid.server_addr
	AND tc.probe_addr=tid.probe_addr
	AND tc.probeIndex=tid.probeIndex
	AND tc.serverNetAddr=tid.termServerNetAddr
	AND tid.termServerServiceType=1025
GO

GO
--SqlScripter----[dbo].[ResourceNameNPOWSView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameNPOWSView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameNPOWSView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameNPOWSView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=lp.probeIndex
	,rsrcOtherIndex=tid.termServerKeyId
	,rsrcType=17
	,collect_flags=collect_flags
	,rsrcName=lp.probeInterfaceName+
		' / '+tid.termServerName
	,rsrcDescr=tid.termServerNetAddr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=lp.probeNetworkSpeed
	,ifType=lp.probeMediumType
	,agentName=tid.termServerName
	,ifName=lp.probeInterfaceName
	,ifIndex=lp.probeIndex
	,mibIndex=
	convert(varchar(2), tid.probeIndex) + '.' + '1'
	+ '.'+ convert(varchar(6), termServerServiceType) + '.'
	+ convert(varchar(6), termServerPort)
	+'.$' + termServerNetAddr+ '$'
	,mibId=0
	,monitored=p.monitored
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
	,viewType=32
	,rsrcId=convert(varchar(10),17)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),lp.probeIndex)+':'+convert(varchar(10),tid.termServerKeyId)
	,userId=p.userId
FROM UserProbeView p,LSYProbeId lp,LSYTermServerId tid
WHERE (collect_flags & 8192)=8192
	AND p.probe_addr=lp.probe_addr
	AND p.server_addr=lp.server_addr
	AND lp.server_addr=tid.server_addr
	AND lp.probe_addr=tid.probe_addr
	AND lp.probeIndex=tid.probeIndex
	AND tid.termServerServiceType=1025
GO

GO
--SqlScripter----[dbo].[ResourceNameRMON2View].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameRMON2View]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameRMON2View] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameRMON2View]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=r2.protocolDistControlIndex
	,rsrcType=6
	,collect_flags=collect_flags
	,rsrcName=p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=''
	,mibId=0
	,monitored=(CASE 
	WHEN ((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN i.collReq & 0x1 = 0x1 THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	ELSE 1
	END)-(CASE WHEN i.itfcType & 0x1 = 1 THEN 3 ELSE 0 END)
	,bypassAvail=CASE
	WHEN (p.collect_flags & 0x80000)>0 THEN 1
	WHEN i.collReq & 16 > 0 THEN 1
	ELSE 0 END
	,viewType=16
	,rsrcId=convert(varchar(10),6)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),r2.protocolDistControlIndex)
	,userId=p.userId
FROM UserProbeView p, RMON2protocolDistControl r2,
	(M2if f left join ItfcConfig i
	ON f.server_addr=i.server_addr
	AND f.probe_addr=i.probe_addr
	AND f.dbIndex=i.itfcIndex)
WHERE p.probe_addr=f.probe_addr
	AND p.server_addr=f.server_addr
	AND r2.server_addr=f.server_addr
	AND r2.probe_addr=f.probe_addr
	AND r2.protocolDistControlDataSource=f.dbIndex
GO

GO
--SqlScripter----[dbo].[ResourceNameRMONView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameRMONView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameRMONView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameRMONView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=eid.etherStatsIndex
	,rsrcType=3
	,collect_flags=collect_flags
	,rsrcName=p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), eid.etherStatsIndex)
	,mibId=0
	,monitored=(CASE 
	WHEN ((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN i.collReq & 0x1 = 0x1 AND i.collReq & 0x4 = 0x1 THEN 0
	WHEN i.collReq & 32 = 32 AND i.collReq & 0x4 = 0x1 THEN 0
	WHEN i.collReq & 0x4 = 0x4 THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	WHEN i.collReq & 0x8 = 0x8 THEN 2
	ELSE 1 END) - (CASE WHEN itfcType & 0x1 = 1 THEN 3 ELSE 0 END)
	,bypassAvail=
	CASE
	WHEN (p.collect_flags & 0x80000)>0 THEN 1
	WHEN i.collReq & 16 > 0 THEN 1
	ELSE 0 END
	,viewType=16
	,rsrcId=convert(varchar(10),3)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),eid.etherStatsIndex)
	,userId=p.userId
FROM UserProbeView p, RMONetherStatsId eid,
(M2if f left join ItfcConfig i
	ON f.server_addr=i.server_addr
	AND f.probe_addr=i.probe_addr
	AND f.dbIndex=i.itfcIndex)
	WHERE (collect_flags & 4)=4
	AND p.probe_addr=f.probe_addr
	AND p.server_addr=f.server_addr
	AND eid.server_addr=f.server_addr
	AND eid.probe_addr=f.probe_addr
	AND eid.etherStatsDataSource=f.dbIndex
GO

GO
--SqlScripter----[dbo].[ResourceNameServerView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameServerView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameServerView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameServerView]
AS
SELECT server_addr=c.server_addr
	,probe_addr=0
	,rsrcIndex=0
	,rsrcOtherIndex=0
	,rsrcType=-1
	,collect_flags=536870912
	,rsrcName=c.server_name 
	,rsrcDescr='Collector'
	,IP_addr=''
	,port=0
	,community='public'
	,ifSpeed=0
	,ifType=0
	,agentName=c.server_name
	,ifName=''
	,ifIndex=0
	,mibIndex=''
	,mibId=0
	,monitored=1
	,bypassAvail=0
	,viewType=-1
	,rsrcId=convert(varchar(10),-1)+':'+convert(varchar(12),c.server_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),0)
	,userId=0
FROM CollectServer c
GO

GO
--SqlScripter----[dbo].[ResourceNameWANView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ResourceNameWANView]') IS NULL EXEC('CREATE VIEW [dbo].[ResourceNameWANView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ResourceNameWANView]
AS
SELECT server_addr=p.server_addr
	,probe_addr=p.probe_addr
	,rsrcIndex=f.dbIndex
	,rsrcOtherIndex=0
	,rsrcType=0
	,collect_flags=collect_flags
	,rsrcName=p.sysName + ' / '+convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,rsrcDescr=sysDescr
	,IP_addr=p.IP_addr
	,p.port
	,community=community
	,ifSpeed=isnull(i.itfcSpeed,f.ifSpeed)
	,ifType=f.ifType
	,agentName=convert(varchar(5),f.ifIndex)+' : '+ISNULL(i.itfcDescr,f.ifDescr)+ ' (bw= ' + CASE 
	WHEN ISNULL(itfcSpeed,ifSpeed)=4294967295 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed)=1 THEN 'Unknown'
	WHEN ISNULL(itfcSpeed,ifSpeed) BETWEEN 1000.0 AND 1000000 THEN convert(varchar(5),ISNULL(itfcSpeed,ifSpeed)/1000) + ' Kbps'
	WHEN ISNULL(itfcSpeed,ifSpeed)>1000000 THEN convert(varchar(12),convert(int,1.0*ISNULL(itfcSpeed,ifSpeed)/1000000))+' Mbps'
	ELSE  convert(varchar(6),ISNULL(itfcSpeed,ifSpeed))+' bps'
	END+')'
	,ifName=f.ifDescr
	,ifIndex=f.ifIndex
	,mibIndex=convert(varchar(10), f.ifIndex)
	,mibId=0
	,monitored=(CASE 
	WHEN((collect_flags & 67108864)=67108864 AND i.collReq IS NULL) THEN 0
	WHEN i.collReq & 0x1 = 0x1 THEN 0
	WHEN i.collReq & 32 = 32 THEN 0
	WHEN p.collect_flags < 0 THEN 0
	WHEN p.collect_flags >= 1073741824 THEN 0
	WHEN i.collReq & 0x2 = 0x2 THEN 2
	ELSE 1
	END) - (CASE WHEN i.itfcType & 0x1 = 0x1 THEN 3 ELSE 0 END)
	,bypassAvail=CASE
	WHEN (p.collect_flags & 0x80000)>0 THEN 1
	WHEN i.collReq & 16 > 0 THEN 1
	ELSE 0 END
	,viewType=16
	,rsrcId=convert(varchar(10),0)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),f.dbIndex)+':'+convert(varchar(10),0)
	,userId=p.userId
FROM (UserProbeView p join M2if f
	ON p.server_addr=f.server_addr
	AND p.probe_addr=f.probe_addr)
	left join ItfcConfig i
	ON f.server_addr=i.server_addr
	AND f.probe_addr=i.probe_addr
	AND f.dbIndex=i.itfcIndex
WHERE f.ifType NOT IN (1,6,7,8,9,10,11,12,13,14,15,26,35,36,53,62,69,115,117,161)
GO

GO
--SqlScripter----[dbo].[RMON2AlHostDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostDayView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMON2AlHost
GO

GO
--SqlScripter----[dbo].[RMON2AlHostHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostHourView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMON2AlHost
GO

GO
--SqlScripter----[dbo].[RMON2AlHostLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostLastDayView]
AS
SELECT * FROM RMON2AlHostHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMON2AlHostLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostLastWeekView]
AS
SELECT * FROM RMON2AlHostDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMON2AlHostMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostMinuteView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMON2AlHost
GO

GO
--SqlScripter----[dbo].[RMON2AlHostMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostMonthView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMON2AlHost
GO

GO
--SqlScripter----[dbo].[RMON2AlHostPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostPSDayView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMON2AlHost WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2AlHostPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostPSHourView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMON2AlHost WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2AlHostPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostPSMinuteView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMON2AlHost WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2AlHostPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2AlHostPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2AlHostPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2AlHostPSMonthView]
AS
SELECT RMON2AlHost.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMON2AlHost WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixDayView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMON2NlMatrix
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixHourView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMON2NlMatrix
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixLastDayView]
AS
SELECT * FROM RMON2NlMatrixHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixLastWeekView]
AS
SELECT * FROM RMON2NlMatrixDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixMinuteView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMON2NlMatrix
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixMonthView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMON2NlMatrix
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixPSDayView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMON2NlMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixPSHourView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMON2NlMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixPSMinuteView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMON2NlMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2NlMatrixPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2NlMatrixPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2NlMatrixPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2NlMatrixPSMonthView]
AS
SELECT RMON2NlMatrix.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMON2NlMatrix WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistDayView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMON2ProtocolDist
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistHourView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMON2ProtocolDist
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistLastDayView]
AS
SELECT * FROM RMON2ProtocolDistHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistLastWeekView]
AS
SELECT * FROM RMON2ProtocolDistDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistMinuteView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMON2ProtocolDist
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistMonthView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMON2ProtocolDist
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistPSDayView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMON2ProtocolDist WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistPSHourView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMON2ProtocolDist WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistPSMinuteView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMON2ProtocolDist WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistPSMonthView]
AS
SELECT RMON2ProtocolDist.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMON2ProtocolDist WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMON2ProtocolDistThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ProtocolDistThView]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ProtocolDistThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ProtocolDistThView]
AS SELECT RMON2ProtocolDist.server_addr, RMON2ProtocolDist.probe_addr, RMON2ProtocolDist.protocolDirRMIndex, RMON2ProtocolDist.protocolDistDataSource, IntervalDateTime, IntervalDuration, protocolDistStatsPkts=case WHEN IntervalDuration= 0 THEN 0 ELSE protocolDistStatsPkts/IntervalDuration END, protocolDistStatsOctets=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE protocolDistStatsOctets/(ifSpeed*IntervalDuration) END, ResourceNameRMON2View.ifSpeed FROM  RMON2ProtocolDist, ResourceNameRMON2View WHERE userId = 0 AND ResourceNameRMON2View.server_addr=RMON2ProtocolDist.server_addr AND ResourceNameRMON2View.probe_addr=RMON2ProtocolDist.probe_addr AND ResourceNameRMON2View.rsrcIndex=RMON2ProtocolDist.protocolDistDataSource
GO

GO
--SqlScripter----[dbo].[RMON2ScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMON2ScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[RMON2ScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMON2ScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,protocolDistStatsPkts=100-100*SUM(case WHEN a.fieldIndex=601 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,protocolDistStatsOctets=100-100*SUM(case WHEN a.fieldIndex=602 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,availability=100-100*SUM(CASE WHEN a.fieldIndex =1602 THEN (a.alertDuration*1.0)/(24*3600) ELSE 0 END)
FROM ResourceNameRMON2View r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcIndex=a.rsrcIndex
		AND r.rsrcOtherIndex=a.rsrcOtherIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=6
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[RMONAlertView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONAlertView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONAlertView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONAlertView]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,etherStatsOctets=CASE WHEN a.fieldIndex=302 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,etherStatsBroadcastPkts=CASE a.fieldIndex WHEN 304 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,etherStatsMulticastPkts=CASE WHEN a.fieldIndex =305 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,etherStatsCRCAlignErrors=CASE WHEN a.fieldIndex=306 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,etherStatsCollisions=case WHEN a.fieldIndex =311 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,etherStatsDropEvents=CASE WHEN a.fieldIndex = 301 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,etherStatsFragments=CASE WHEN a.fieldIndex = 309 THEN 100*SUM(alertDuration*severity/5.0)/(24*3600) ELSE 0 END
	,unavail=CASE WHEN a.fieldIndex =1602 THEN 100*SUM(a.alertDuration*1.0)/(24*3600) ELSE 0 END
FROM ResourceNameRMONView r, AlertView a
		WHERE r.server_addr=a.server_addr
		AND r.probe_addr=a.probe_addr
		AND r.rsrcOtherIndex=a.rsrcIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND monitored = 1
	AND a.fieldIndex/100=3
GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,a.fieldIndex
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsDayView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMONetherStatsStats
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsHourView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMONetherStatsStats
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsLastDayView]
AS
SELECT * FROM RMONetherStatsStatsHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsLastWeekView]
AS
SELECT * FROM RMONetherStatsStatsDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsMinuteView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMONetherStatsStats
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsMonthView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMONetherStatsStats
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsPSDayView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RMONetherStatsStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsPSHourView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RMONetherStatsStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsPSMinuteView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RMONetherStatsStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsPSMonthView]
AS
SELECT RMONetherStatsStats.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RMONetherStatsStats WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RMONetherStatsStatsThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONetherStatsStatsThView]') IS NULL EXEC('CREATE VIEW [dbo].[RMONetherStatsStatsThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONetherStatsStatsThView]
AS SELECT RMONetherStatsStats.server_addr, RMONetherStatsStats.probe_addr, RMONetherStatsStats.etherStatsIndex, IntervalDateTime, IntervalDuration, etherStatsDropEvents=case WHEN etherStatsPkts= 0 THEN 0 ELSE etherStatsDropEvents/etherStatsPkts END, etherStatsOctest=case WHEN (ifSpeed*IntervalDuration)= 0 THEN 0 WHEN ifSpeed = 1 THEN 0 ELSE 8.0*etherStatsOctets/(ifSpeed*IntervalDuration) END, etherStatsPkts=case WHEN IntervalDuration= 0THEN 0 ELSE etherStatsPkts/IntervalDuration END, etherStatsBroadcastPkts=case WHEN IntervalDuration= 0 THEN 0 ELSE etherStatsBroadcastPkts/IntervalDuration END, etherStatsMulticastPkts=case WHEN IntervalDuration= 0 THEN 0 ELSE etherStatsMulticastPkts/IntervalDuration END, etherStatsCRCAlignErrors=case WHEN etherStatsPkts= 0 THEN 0 ELSE etherStatsCRCAlignErrors/etherStatsPkts END, etherStatsUndersizePkts=case WHEN etherStatsPkts= 0 THEN 0 ELSE etherStatsUndersizePkts/etherStatsPkts END, etherStatsOversizePkts=case WHEN etherStatsPkts= 0 THEN 0 ELSE etherStatsOversizePkts/etherStatsPkts END, etherStatsFragments=case WHEN IntervalDuration= 0 THEN 0 ELSE etherStatsFragments/IntervalDuration END, etherStatsJabbers=case WHEN etherStatsPkts= 0 THEN 0 ELSE etherStatsJabbers/etherStatsPkts END, etherStatsCollisions=case WHEN IntervalDuration= 0 THEN 0 ELSE etherStatsCollisions/IntervalDuration END, ResourceNameRMONView.ifSpeed FROM  RMONetherStatsStats, ResourceNameRMONView WHERE userId = 0 AND ResourceNameRMONView.server_addr=RMONetherStatsStats.server_addr AND ResourceNameRMONView.probe_addr=RMONetherStatsStats.probe_addr AND ResourceNameRMONView.rsrcOtherIndex=RMONetherStatsStats.etherStatsIndex
GO

GO
--SqlScripter----[dbo].[RMONScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RMONScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[RMONScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RMONScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
	,etherStatsOctets=100-case WHEN SUM(etherStatsOctets) > 100 THEN 100 ELSE SUM(etherStatsOctets) END
	,etherStatsBroadcastPkts=100-case WHEN SUM(etherStatsBroadcastPkts) > 100 THEN 100 ELSE SUM(etherStatsBroadcastPkts) END
	,etherStatsMulticastPkts=100-case WHEN SUM(etherStatsMulticastPkts) > 100 THEN 100 ELSE SUM(etherStatsMulticastPkts) END
	,etherStatsCRCAlignErrors=100-case WHEN SUM(etherStatsCRCAlignErrors) > 100 THEN 100 ELSE SUM(etherStatsCRCAlignErrors) END
	,etherStatsCollisions=100-case WHEN SUM(etherStatsCollisions) > 100 THEN 100 ELSE SUM(etherStatsCollisions) END
	,etherStatsDropEvents=100-case WHEN SUM(etherStatsDropEvents) > 100 THEN 100 ELSE SUM(etherStatsDropEvents) END
	,etherStatsFragments=100-case WHEN SUM(etherStatsFragments) > 100 THEN 100 ELSE SUM(etherStatsFragments) END
	,availability=100-case WHEN SUM(unavail) > 100 THEN 100 ELSE SUM(unavail) END
FROM RMONAlertView r
GROUP BY 
	r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcOtherIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[RTTJitter_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statDayView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTJitter_stat
GO

GO
--SqlScripter----[dbo].[RTTJitter_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statHourView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTJitter_stat
GO

GO
--SqlScripter----[dbo].[RTTJitter_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statLastDayView]
AS
SELECT * FROM RTTJitter_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTJitter_statLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statLastWeekView]
AS
SELECT * FROM RTTJitter_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTJitter_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statMinuteView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTJitter_stat
GO

GO
--SqlScripter----[dbo].[RTTJitter_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statMonthView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTJitter_stat
GO

GO
--SqlScripter----[dbo].[RTTJitter_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statPSDayView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTJitter_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTJitter_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statPSHourView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTJitter_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTJitter_statPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statPSMinuteView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTJitter_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTJitter_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statPSMonthView]
AS
SELECT RTTJitter_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTJitter_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTJitter_statThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTJitter_statThView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTJitter_statThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTJitter_statThView]
AS SELECT RTTJitter_stat.server_addr, RTTJitter_stat.probe_addr, RTTJitter_stat.CtrlAdminIndex, IntervalDateTime, IntervalDuration, JitterStatsOverThresholds=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsOverThresholds/JitterStatsNumOfRTT END, JitterStatsRTTSum=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsRTTSum/JitterStatsNumOfRTT END, JitterStatsPacketLossSD=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsPacketLossSD/JitterStatsNumOfRTT END, JitterStatsPacketLossDS=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsPacketLossDS/JitterStatsNumOfRTT END, JitterStatsPacketOutOfSequence=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsPacketOutOfSequence/JitterStatsNumOfRTT END, JitterStatsPacketLateArrival=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsPacketLateArrival/JitterStatsNumOfRTT END, JitterStatsError=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsError/JitterStatsNumOfRTT END, JitterStatsBusies=case WHEN JitterStatsNumOfRTT= 0 THEN 0 ELSE JitterStatsBusies/JitterStatsNumOfRTT END FROM  RTTJitter_stat
GO

GO
--SqlScripter----[dbo].[RTTStats_stat].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_stat]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_stat] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_stat]
AS
SELECT r.*
	,r2.StatsCollectTimeouts
	,StatsCollectBusies
	,StatsCollectNoConnections
	,StatsCollectDrops
	,StatsCollectSequenceErrors
	,StatsCollectVerifyErrors
	,StatsCollectAddress
FROM RTTStatsCapture_stat r, RTTStatsColl_stat r2
WHERE r.server_addr = r2.server_addr
	AND r.probe_addr=r2.probe_addr
	AND r.StatsCaptureStartTimeIndex=r2.StatsCaptureStartTimeIndex
	AND r.StatsCapturePathIndex=r2.StatsCapturePathIndex
	AND r.StatsCaptureHopIndex=r2.StatsCaptureHopIndex
GO

GO
--SqlScripter----[dbo].[RTTStats_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statDayView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTStats_stat
GO

GO
--SqlScripter----[dbo].[RTTStats_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statHourView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTStats_stat
GO

GO
--SqlScripter----[dbo].[RTTStats_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statLastDayView]
AS
SELECT * FROM RTTStats_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTStats_statLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statLastWeekView]
AS
SELECT * FROM RTTStats_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTStats_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statMinuteView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTStats_stat
GO

GO
--SqlScripter----[dbo].[RTTStats_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statMonthView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTStats_stat
GO

GO
--SqlScripter----[dbo].[RTTStats_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statPSDayView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTStats_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStats_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statPSHourView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTStats_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStats_statPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statPSMinuteView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTStats_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStats_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStats_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStats_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStats_statPSMonthView]
AS
SELECT RTTStats_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTStats_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statDayView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTStatsCapture_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statHourView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTStatsCapture_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statLastDayView]
AS
SELECT * FROM RTTStatsCapture_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statLastWeekView]
AS
SELECT * FROM RTTStatsCapture_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statMinuteView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTStatsCapture_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statMonthView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTStatsCapture_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statPSDayView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTStatsCapture_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statPSHourView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTStatsCapture_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statPSMinuteView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTStatsCapture_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statPSMonthView]
AS
SELECT RTTStatsCapture_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTStatsCapture_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsCapture_statThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsCapture_statThView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsCapture_statThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsCapture_statThView]
AS SELECT RTTStatsCapture_stat.server_addr, RTTStatsCapture_stat.probe_addr, RTTStatsCapture_stat.CtrlAdminIndex, RTTStatsCapture_stat.StatsCapturePathIndex, RTTStatsCapture_stat.StatsCaptureHopIndex, IntervalDateTime, IntervalDuration, StatsCaptureOverThresholds=case WHEN StatsCaptureCompletions= 0 THEN 0 ELSE StatsCaptureOverThresholds/StatsCaptureCompletions END, StatsCaptureSumCompletionTime=case WHEN StatsCaptureCompletions= 0 THEN 0 ELSE StatsCaptureSumCompletionTime/StatsCaptureCompletions END FROM  RTTStatsCapture_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statDayView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTStatsColl_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statHourView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTStatsColl_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statLastDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statLastDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statLastDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statLastDayView]
AS
SELECT * FROM RTTStatsColl_statHourView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,1,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statLastWeekView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statLastWeekView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statLastWeekView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statLastWeekView]
AS
SELECT * FROM RTTStatsColl_statDayView WHERE IntervalTime >= DATEADD(dd, DATEDIFF(dd,8,getdate()), 0) AND IntervalDateTime < DATEADD(dd, DATEDIFF(dd,0,getdate()), 0)
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statMinuteView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTStatsColl_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statMonthView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTStatsColl_stat
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statPSDayView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statPSDayView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statPSDayView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statPSDayView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(day, DATEDIFF(day,0,getdate()), 0) FROM RTTStatsColl_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statPSHourView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statPSHourView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statPSHourView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statPSHourView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(hour, DATEDIFF(hour,0,getdate()), 0) FROM RTTStatsColl_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statPSMinuteView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statPSMinuteView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statPSMinuteView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statPSMinuteView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(minute, DATEDIFF(minute,0,getdate()), 0) FROM RTTStatsColl_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statPSMonthView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statPSMonthView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statPSMonthView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statPSMonthView]
AS
SELECT RTTStatsColl_stat.*, IntervalTime=DATEADD(month, DATEDIFF(month,0,getdate()), 0) FROM RTTStatsColl_stat WHERE datepart(weekday, IntervalDateTime) BETWEEN 2 AND 6 AND datepart(hour, IntervalDateTime) BETWEEN 8 AND 18
GO

GO
--SqlScripter----[dbo].[RTTStatsColl_statThView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[RTTStatsColl_statThView]') IS NULL EXEC('CREATE VIEW [dbo].[RTTStatsColl_statThView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[RTTStatsColl_statThView]
AS SELECT RTTStatsColl_stat.server_addr, RTTStatsColl_stat.probe_addr, RTTStatsColl_stat.CtrlAdminIndex, RTTStatsColl_stat.StatsCapturePathIndex, RTTStatsColl_stat.StatsCaptureHopIndex, IntervalDateTime, IntervalDuration, StatsCollectNumDisconnects=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectNumDisconnects/IntervalDuration END, StatsCollectTimeouts=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectTimeouts/IntervalDuration END, StatsCollectBusies=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectBusies/IntervalDuration END, StatsCollectNoConnections=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectNoConnections/IntervalDuration END, StatsCollectDrops=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectDrops/IntervalDuration END, StatsCollectSequenceErrors=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectSequenceErrors/IntervalDuration END, StatsCollectVerifyErrors=case WHEN IntervalDuration= 0 THEN 0 ELSE StatsCollectVerifyErrors/IntervalDuration END FROM  RTTStatsColl_stat
GO

GO
--SqlScripter----[dbo].[rule_dec_combo_list].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[rule_dec_combo_list]') IS NULL EXEC('CREATE VIEW [dbo].[rule_dec_combo_list] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[rule_dec_combo_list]
AS
       SELECT DISTINCT "kpi_data"."chart_element_label", "kpi_data"."dimension_3"
       FROM "kpi_data"
       WHERE kpi_id = 5
GO

GO
--SqlScripter----[dbo].[rulebase_list].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[rulebase_list]') IS NULL EXEC('CREATE VIEW [dbo].[rulebase_list] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[rulebase_list]
AS
       SELECT DISTINCT "kpi_data"."dimension_2"
       FROM "kpi_data"
       WHERE kpi_id = 5
GO

GO
--SqlScripter----[dbo].[statview].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[statview]') IS NULL EXEC('CREATE VIEW [dbo].[statview] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[statview]
("fullname", "dayorhour", "average", "avg", "avgseconds", "stddeviation", "stddev", "stddevseconds", "totalcount", "periodendts", "name", "weekdayid")  AS
       SELECT "d"."fullname", "c"."dayorhour", "c"."average", char(dbo._time(dbo.int4(c.average + 0.5))), dbo.mod(c.average + 0.5, 60), "c"."stddeviation", char(dbo._time(dbo.int4(c.stddeviation + 0.5))), dbo.mod(c.stddeviation + 0.5, 60), "c"."totalcount", "c"."periodendts", "a"."name", "e"."id"
       FROM "statistic" "a", "statisticgrouping" "b", "statisticaverages" "c", "secure_person" "d", "weekday" "e"
       WHERE c.statisticgroupingid = b.id AND b.personid = d.id AND b.statisticid = a.id AND c.dayorhour = e.name
GO

GO
--SqlScripter----[dbo].[storagefilesystemsum].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[storagefilesystemsum]') IS NULL EXEC('CREATE VIEW [dbo].[storagefilesystemsum] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[storagefilesystemsum]
("countoffilesystem", "fsname", "sumofdrivesize")  AS
       SELECT COUNT(fsname), "ai_fsdef_prop"."fsname", SUM(fssize)
       FROM "ai_fsdef_prop"
       GROUP BY fsname
       HAVING fsname <> 'N/A'
GO

GO
--SqlScripter----[dbo].[storagefssum].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[storagefssum]') IS NULL EXEC('CREATE VIEW [dbo].[storagefssum] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[storagefssum]
("countoffilesystem", "fsname", "sumofdrivesize")  AS
       SELECT Count(ai_fsdef_prop.fsname), "ai_fsdef_prop"."fsname", Sum(ai_fsdef_prop.fssize)
       FROM "ai_fsdef_prop"
       GROUP BY ai_fsdef_prop.fsname
       HAVING ai_fsdef_prop.fsname <> ''
GO

GO
--SqlScripter----[dbo].[tau_mdb].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[tau_mdb]') IS NULL EXEC('CREATE VIEW [dbo].[tau_mdb] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[tau_mdb]
("mdbMajorVersion", "mdbMinorVersion", "buildNumber", "releaseDate", "installDate")  AS
       SELECT "mdb"."mdbmajorversion", "mdb"."mdbminorversion", "mdb"."buildnumber", "mdb"."releasedate", "mdb"."installdate"
       FROM "mdb"
GO

GO
--SqlScripter----[dbo].[ThresholdsView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ThresholdsView]') IS NULL EXEC('CREATE VIEW [dbo].[ThresholdsView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ThresholdsView]
AS
SELECT 
	server_addr=0
	,probe_addr=0
	,MibIdx=0
	,rsrcIndex=0
	,rsrcOtherIndex=0
	,td.fieldIndex
	,fieldName=lower(td.fieldName)
	,lowerThreshold=displayScaleFactor*td.lowerDefaultValue
	,lowerMode=td.lowerDefaultMode
	,upperThreshold=displayScaleFactor*td.upperDefaultValue
	,upperMode=td.upperDefaultMode
FROM ThresholdDesc td
UNION ALL
SELECT t.server_addr
	,t.probe_addr
	,t.MibIdx
	,t.rsrcIndex
	,t.rsrcOtherIndex
	,td.fieldIndex
	,fieldName=lower(td.fieldName)
	,lowerThreshold=displayScaleFactor*(
		CASE lowerMode
		WHEN 2 THEN td.lowerDefaultValue
		WHEN 3 THEN 0
		ELSE t.lowerThreshold
		END)
	,t.lowerMode
	,upperThreshold=displayScaleFactor*(
		CASE upperMode
		WHEN 2 THEN td.upperDefaultValue
		WHEN 3 THEN 0
		ELSE t.upperThreshold
		END)
	,t.upperMode
FROM Thresholds t JOIN ThresholdDesc td ON
	t.fieldIndex=td.fieldIndex
GO

GO
--SqlScripter----[dbo].[ujo_eventvu].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ujo_eventvu]') IS NULL EXEC('CREATE VIEW [dbo].[ujo_eventvu] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ujo_eventvu]
AS
select 	eoid, 
	stamp, 
	evt_num,
	joid,
	job_name, 
	box_name,
	AUTOSERV,
	event,
	ev.text eventtxt,
	status,
	s.text statustxt,
	alarm,
	a.text alarmtxt,
	event_time_gmt,
	exit_code, 
	que_status,
	que_status_stamp,
	run_num,
	ntry,
	e.text text,
	machine

from	ujo_event e, ujo_intcodes ev, ujo_intcodes s, ujo_intcodes a

where	e.event = ev.code and ev.fld='event'
and	e.status = s.code  and s.fld='status'
and	e.alarm  = a.code and a.fld='alarm'
GO

GO
--SqlScripter----[dbo].[ujo_jobst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ujo_jobst]') IS NULL EXEC('CREATE VIEW [dbo].[ujo_jobst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ujo_jobst]
AS
SELECT j.*, status, status_time, run_num, ntry, appl_ntry, last_start,
	last_end,next_start,exit_code,run_machine, que_name,
	run_priority, next_priority, pid, jc_pid,time_ok,
	last_heartbeat
FROM	ujo_job j, ujo_job_status
WHERE j.joid = ujo_job_status.joid
GO

GO
--SqlScripter----[dbo].[ujo_proc_eventvu].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[ujo_proc_eventvu]') IS NULL EXEC('CREATE VIEW [dbo].[ujo_proc_eventvu] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[ujo_proc_eventvu]
AS

select 	eoid, 
	stamp, 
	evt_num,
	joid,
	job_name, 
	box_name,
	AUTOSERV,
	event,
	ev.text eventtxt,
	status,
	s.text statustxt,
	alarm,
	a.text alarmtxt,
	event_time_gmt,
	exit_code, 
	que_status,
	que_status_stamp,
	run_num,
	ntry,
	e.text text,
	machine

from	ujo_proc_event e, ujo_intcodes ev, ujo_intcodes s, ujo_intcodes a

where	e.event = ev.code and ev.fld='event'
and	e.status = s.code  and s.fld='status'
and	e.alarm  = a.code and a.fld='alarm'
GO

GO
--SqlScripter----[dbo].[usd_compos].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_compos]') IS NULL EXEC('CREATE VIEW [dbo].[usd_compos] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_compos]
AS
select P.proc_os_uuid as objectid, 1 as version, P.proc_os_id as id, P.proc_os_name as os, 
P.msg_code_base as msgCodeBase from ca_proc_os P
GO

GO
--SqlScripter----[dbo].[usd_iprocos].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_iprocos]') IS NULL EXEC('CREATE VIEW [dbo].[usd_iprocos] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_iprocos]
AS
select P.proc_os_uuid as objectid, 1 as version, P.proc_os_id as id, P.proc_os_name as os, 
P.swd_extension as swdExtension from ca_proc_os P
GO

GO
--SqlScripter----[dbo].[usd_v_agents].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_agents]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_agents] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_agents]
(
	name,
	object_uuid,
	agent_name,
	agent_type 
)
as
	select dhw.host_name as name,
		dhw.dis_hw_uuid as object_uuid,
		dhw.label as agent_name,
		a.agent_type  as agent_type
	from  ca_discovered_hardware dhw , ca_agent a
	where a.object_uuid=dhw.dis_hw_uuid and a.agent_type=1
union
	select dusr.user_name as name,
		dusr.user_uuid as object_uuid,
		dusr.label as agent_name,
		a.agent_type 
	from ca_discovered_user dusr , ca_agent a
	where a.object_uuid=dusr.user_uuid and a.agent_type=4
GO

GO
--SqlScripter----[dbo].[usd_v_asset_grp].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_asset_grp]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_asset_grp] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_asset_grp]
AS
select G.group_uuid as objectid, G.version_number+1 as version,
G.creation_user as creation_user, G.evaluation_uuid as qtask,
0x00000000000000000000000000000000 as aux, 0x00000000000000000000000000000000 as aux2,
7 as type, 0x00000000 as attributes, G.label as name, G.description as comment,
G.creation_date as credate, G.creation_date as cretime, G.last_update_date as chdate,
G.last_update_date as chtime, 0 as propflag, '' as qcalendar, G.eval_freq as qevalrate,
0 as qnextevaldate, 0 as qnextevaltime, G.last_eval_date_time as qevaldate,
G.last_eval_date_time as qevaltime, 0x00000000000000000000000000000000 as qtemplfold,
0 as qtype, 0 as state, 0 as seal, 0 as var, '' as auxtext0, '' as auxtext1, '' as auxtext2,
'' as auxtext3, G.query_uuid as queryid, G.evaluation_location as evaluation_location,
G.group_flag as group_flag, G.group_system as group_system, G.group_uuid
from ca_group_def G
where G.member_type = 1   /* Asset group = 1 */
GO

GO
--SqlScripter----[dbo].[usd_v_common_grp].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_common_grp]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_common_grp] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_common_grp]
AS
select G.group_uuid as objectid, G.version_number+1 as version,
G.creation_user as creation_user, G.evaluation_uuid as qtask,
0x00000000000000000000000000000000 as aux, 0x00000000000000000000000000000000 as aux2,
7 as type, 0x00000000 as attributes, G.label as name, G.description as comment,
G.creation_date as credate, G.creation_date as cretime, G.last_update_date as chdate,
G.last_update_date as chtime, 0 as propflag, '' as qcalendar, G.eval_freq as qevalrate,
0 as qnextevaldate, 0 as qnextevaltime, G.last_eval_date_time as qevaldate,
G.last_eval_date_time as qevaltime, 0x00000000000000000000000000000000 as qtemplfold,
0 as qtype, 0 as state, 0 as seal, 0 as var, '' as auxtext0, '' as auxtext1, '' as auxtext2,
'' as auxtext3, G.query_uuid as queryid, G.evaluation_location as evaluation_location,
G.group_flag as group_flag, G.group_system as group_system, G.group_uuid, G.member_type
from ca_group_def G
GO

GO
--SqlScripter----[dbo].[usd_v_container_installations].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_container_installations]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_container_installations] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_container_installations]
(	containername, containercomment,  container_uuid,
	agent_name, agent_type, agent_uuid,
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, job_uuid,
	"procedure", procedureversion, procedure_uuid
)

as
select	
	JC.name, JC.comment, JC.objectid,
	CA.agent_name, CA.agent_type, CA.object_uuid,
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACTIV.jobname, ACTIV.objectid,
	ACP.itemname, ACP.itemversion, ACP.objectid

from 	usd_job_cont JC, usd_link_jc_act LJcAct,
	usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW, 
	usd_activity ACTIV

where (	CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and

	JC.objectid	= LJcAct.jcont		and
      	LJcAct.activity = ACTIV.objectid	and
	APP.activity 	= ACTIV.objectid 	and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid 		and
	/* the following attributes characterise an installation job */
	(cast(APP.task as integer) & 0x00000001) = 0x00000001 /* install */	and 
	/* maybe this could be helpfull */
	/* ACTIV.instproc = ACTIV.actproc       and */
	APP.uninstallstate != 2 /* uninstalled */ and
	APP.status 	= 9 		/* EXECUTION_OK */
GO

GO
--SqlScripter----[dbo].[usd_v_container_installations_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_container_installations_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_container_installations_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_container_installations
	displays the installation done via a container
	
	view 	usd_v_container_installations_s
	is used for security impacts

************************************************************************/




ALTER VIEW [dbo].[usd_v_container_installations_a_s]
(	uri, user_uuid, 
	containername, containercomment, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)

as
select 	uri, user_uuid, 
	containername, containercomment, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_container_installations 

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_container_installations.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_container_installations_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_container_installations_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_container_installations_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_container_installations_s]
(	uri, user_uuid, 
	containername, containercomment, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)

as
select 	uri, user_uuid, 
	containername, containercomment, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_container_installations 

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_container_installations.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_container_jobs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_container_jobs]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_container_jobs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_container_jobs]
(	containername, containercomment, container_uuid,
	agent_name, agent_type, agent_uuid,
	productname, productversion, prodcut_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, job_uuid,
	"procedure", procedureversion, procedure_uuid)

as
select 	
	JC.name, JC.comment, JC.objectid,
	CA.agent_name, CA.agent_type, CA.object_uuid,
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACTIV.jobname, ACTIV.objectid,
	ACP.itemname, ACP.itemversion, ACP.objectid

from 	usd_job_cont JC, usd_link_jc_act LJcAct,
	usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW, usd_activity ACTIV

where (	CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and

	JC.objectid	= LJcAct.jcont		and
      	LJcAct.activity = ACTIV.objectid	and
	APP.activity 	= ACTIV.objectid 	and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid
GO

GO
--SqlScripter----[dbo].[usd_v_container_jobs_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_container_jobs_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_container_jobs_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_container_jobs
	displays the (failed and non-installation) jobs
	of a container.

	view 	usd_v_container_jobs_s 
	is the security form.
************************************************************************/



/************************************************************************
	view 

************************************************************************/


ALTER VIEW [dbo].[usd_v_container_jobs_a_s]
(	uri, user_uuid, 
	containername, containercomment,
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)


as
select 	uri, user_uuid, 
	containername, containercomment,
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_container_jobs

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_container_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_container_jobs_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_container_jobs_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_container_jobs_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_container_jobs_s]
(	uri, user_uuid, 
	containername, containercomment,
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)


as
select 	uri, user_uuid, 
	containername, containercomment,
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_container_jobs

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_container_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_csite].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_v_csite]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_csite] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_csite]
AS
select distinct CNT.domain_uuid as objectid, CNT.version_number+1 as version,
CNT.creation_user as creation_user, CNT.label as siteid, CNT.contact_information,
MAX(MC.manager_comp_version) as asmversion, CNT.creation_date as creationtime,
CNT.last_update_date as changetime, M.host_name as remoteaddress,
CNT.description as usercomment, M.host_uuid as uuid, CNT.domain_uuid
from ca_n_tier CNT, ca_manager M, ca_manager_component MC, ca_settings S
where S.set_id = 1 /* My own domain */
and CNT.domain_uuid <> S.set_val_uuid
and CNT.domain_type = 1   /* Domain = 1 */
and CNT.domain_uuid = M.domain_uuid
and CNT.domain_uuid = MC.domain_uuid
and (MC.manager_comp_id = 42
or MC.manager_comp_id = 43
or MC.manager_comp_id = 44
or MC.manager_comp_id = 45
or MC.manager_comp_id = 50)
group by CNT.domain_uuid, CNT.version_number,CNT.creation_user, CNT.label, 
CNT.contact_information,CNT.creation_date,CNT.last_update_date, 
M.host_name,CNT.description, M.host_uuid, CNT.domain_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_group_installed_products].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_group_installed_products]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_group_installed_products] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_group_installed_products]
(	group_name,  group_uuid,
	agent_name, agent_type, agent_uuid,
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion, procedure_uuid)

as
select 	GR.label, GR.group_uuid, 
	CA.agent_name, CA.agent_type, CA.object_uuid,
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACP.itemname, ACP.itemversion, ACP.objectid

from 	ca_group_def GR, ca_group_member GM, usd_v_agents CA, 
	usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW
where 
	GR.group_uuid = GM.group_uuid 		and
	GM.member_uuid =CA.object_uuid 		and
	(CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid 		and
	/* the following attributes characterise an installation job */
	(cast(APP.task as integer) & 0x00000001)  = 0x00000001 /* install */and 
	APP.uninstallstate != 2 /* uninstalled */ and
	APP.status 	= 9 		/* EXECUTION_OK */
GO

GO
--SqlScripter----[dbo].[usd_v_group_installed_products_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_group_installed_products_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_group_installed_products_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_group_installed_products
	displays the installed products in a group of targets

	view 	usd_v_group_installed_products_s
	is used for security impacts
************************************************************************/


/************************************************************************
 view 	

************************************************************************/

ALTER VIEW [dbo].[usd_v_group_installed_products_a_s]
(	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion)

as
select 	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_group_installed_products

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_group_installed_products.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_group_installed_products_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_group_installed_products_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_group_installed_products_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_group_installed_products_s]
(	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion)

as
select 	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_group_installed_products

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_group_installed_products.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_group_jobs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_group_jobs]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_group_jobs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_group_jobs]
(group_name,  group_uuid,
	agent_name, agent_type, agent_uuid,
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, job_uuid,
	"procedure", procedureversion, procedure_uuid)

as
select GR.label, GR.group_uuid,
	CA.agent_name, CA.agent_type, CA.object_uuid, 
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACTIV.jobname, ACTIV.objectid,
	ACP.itemname, ACP.itemversion, ACP.objectid

from ca_group_def GR, ca_group_member GM, 
	usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW, usd_activity ACTIV
where 
	GR.group_uuid = GM.group_uuid 		and
	GM.member_uuid =CA.object_uuid 		and
	(CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid 		and
	APP.activity 	= ACTIV.objectid
GO

GO
--SqlScripter----[dbo].[usd_v_group_jobs_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_group_jobs_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_group_jobs_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_group_jobs
	displays the jobs distributed to a group
	of targets. Jobs means the failed installation jobs
	and other usd jobs.
	
	view 	usd_v_group_jobs_s
	is used for security impacts

************************************************************************/



/************************************************************************
  view 
 ************************************************************************/


ALTER VIEW [dbo].[usd_v_group_jobs_a_s]
(	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)


as
select 	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_group_jobs

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_group_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_group_jobs_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_group_jobs_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_group_jobs_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_group_jobs_s]
(	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)


as
select 	uri, user_uuid, 
	group_name, agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_group_jobs

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_group_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_installed_products].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_installed_products]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_installed_products] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_installed_products]
(agent_name, agent_type, agent_uuid, 
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion, procedure_uuid)

as
select CA.agent_name, CA.agent_type, CA.object_uuid, 
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACP.itemname, ACP.itemversion, ACP.objectid

from usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW
where (CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid 		and
	/* the following attributes characterise an installation job */
	(cast(APP.task as integer) & 0x00000001) = 0x00000001 /* install */and 
	APP.uninstallstate != 2 /* uninstalled */ and
	APP.status 	= 9 		/* EXECUTION_OK */
GO

GO
--SqlScripter----[dbo].[usd_v_installed_products_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_installed_products_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_installed_products_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_installed_products
	displays the installed products on a system

	usd_v_installed_products_s
	is used for security impacts

************************************************************************/



/************************************************************************
	view 

************************************************************************/



ALTER VIEW [dbo].[usd_v_installed_products_a_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid, 
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion)


as
select 	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_installed_products

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_installed_products.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_installed_products_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_installed_products_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_installed_products_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_installed_products_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid, 
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion)


as
select 	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	"procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_installed_products

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_installed_products.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_ls].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_v_ls]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_ls] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_ls]
AS
select distinct CNT.domain_uuid as objectid, CNT.version_number+1 as version,
CNT.creation_user as creation_user, CNT.label as siteid, CNT.contact_information,
MAX(MC.manager_comp_version) as asmversion, CNT.creation_date as creationtime,
CNT.last_update_date as changetime, M.host_name as remoteaddress,
CNT.description as usercomment, M.host_uuid as uuid, CNT.domain_uuid
from ca_n_tier CNT, ca_manager M, ca_manager_component MC, ca_settings S
where S.set_id = 1 /* My own domain */
and CNT.domain_uuid <> S.set_val_uuid
and CNT.domain_type = 0   /* Domain = 0 */
and CNT.domain_uuid = M.domain_uuid
and CNT.domain_uuid = MC.domain_uuid
and (MC.manager_comp_id = 42
or MC.manager_comp_id = 43
or MC.manager_comp_id = 44
or MC.manager_comp_id = 45
or MC.manager_comp_id = 50)
group by CNT.domain_uuid, CNT.version_number,CNT.creation_user, CNT.label, 
CNT.contact_information,CNT.creation_date,CNT.last_update_date, 
M.host_name,CNT.description, M.host_uuid, CNT.domain_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_lsg].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_lsg]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_lsg] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_lsg]
AS
select G.group_uuid as objectid, G.version_number+1 as version,
G.creation_user as creation_user, G.evaluation_uuid as qtask,
0x00000000000000000000000000000000 as aux, 0x00000000000000000000000000000000 as aux2,
5 as type, 0x00000000 as attributes, G.label as name, G.description as comment,
G.creation_date as credate, G.creation_date as cretime, G.last_update_date as chdate,
G.last_update_date as chtime, 0 as propflag, '' as qcalendar, G.eval_freq as qevalrate,
0 as qnextevaldate, 0 as qnextevaltime, G.last_eval_date_time as qevaldate,
G.last_eval_date_time as qevaltime, 0x00000000000000000000000000000000 as qtemplfold,
0 as qtype, 0 as state, 0 as seal, 0 as var, '' as auxtext0, '' as auxtext1, '' as auxtext2,
'' as auxtext3, G.query_uuid as queryid, G.evaluation_location as evaluation_location,
G.group_flag as group_flag, G.group_system as group_system, G.group_uuid
from ca_group_def G
where G.member_type = 4   /* Domain group = 4 */
GO

GO
--SqlScripter----[dbo].[usd_v_nr_of_active_applics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_nr_of_active_applics]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_nr_of_active_applics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_nr_of_active_applics]
AS
select A.objectid, A.activity, A.target
from usd_applic A
where
not
(A.status in (0,1,2)
    or(A.task in (0x00000000,0x00000010,0x00000020)
        and
        A.status = 11)
    or(A.task in (0x00000000,0x00000001,0x00000002,0x00000004,0x00000008)
        and
        A.status = 4))
and not
(A.status in (5, 6, 9, 10, 13, 14, 15, 16, 20, 21, 25, 26)
    or(A.task in (0x00000000,0x00000010,0x00000020)
        and
        A.status not in (11, 12))
    or(A.task in (0x00000000,0x00000001,0x00000002,0x00000004,0x00000008)
        and
        A.status not in (4, 7, 8, 27) ))
GO

GO
--SqlScripter----[dbo].[usd_v_nr_of_ok_applics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_nr_of_ok_applics]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_nr_of_ok_applics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_nr_of_ok_applics]
AS
select A.objectid, A.activity, A.target
from usd_applic A
where A.status in (9,13)
or(A.task in (0x00000000,0x00000010,0x00000020)
    and(A.status = 4 or A.status = 6))
GO

GO
--SqlScripter----[dbo].[usd_v_nr_of_renew_active_applics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_nr_of_renew_active_applics]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_nr_of_renew_active_applics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_nr_of_renew_active_applics]
AS
select A.objectid, A.activity, A.target
from usd_applic A
where not(A.renewstatus in (1,2)
    or(A.task in (0x00000000,0x00000010,0x00000020)
        and A.renewstatus = 11)
    or(A.task in (0x00000000,0x00000001,0x00000002,0x00000004,0x00000008)
        and A.renewstatus = 4))
and not(A.renewstatus in (5, 6, 9, 10, 13, 14, 15, 16, 20, 21, 25, 26)
    or(A.task in (0x00000000,0x00000010,0x00000020)
        and A.renewstatus not in (11, 12))
    or(A.task in (0x00000000,0x00000001,0x00000002,0x00000004,0x00000008)
        and A.renewstatus not in (4, 7, 8, 27)))
GO

GO
--SqlScripter----[dbo].[usd_v_nr_of_renew_ok_applics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_nr_of_renew_ok_applics]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_nr_of_renew_ok_applics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_nr_of_renew_ok_applics]
AS
-- count all waiting applics of this target-activity
select A.objectid, A.activity, A.target
from usd_applic A
where A.renewstatus in (9,13)
or(A.task in (0x00000000,0x00000010,0x00000020)
    and(A.renewstatus = 4  or A.renewstatus = 6))
GO

GO
--SqlScripter----[dbo].[usd_v_nr_of_renew_wait_applics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_nr_of_renew_wait_applics]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_nr_of_renew_wait_applics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_nr_of_renew_wait_applics]
AS
-- count all waiting applics of this target-activity
select A.objectid, A.activity, A.target
from usd_applic A
where A.renewstatus in (1,2)
or(A.task in (0x00000000,0x00000010,0x00000020)
    and A.renewstatus = 11)
or(A.task in (0x00000000,0x00000001,0x00000002,0x00000004,0x00000008)
    and A.renewstatus = 4)
GO

GO
--SqlScripter----[dbo].[usd_v_nr_of_waiting_applics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_nr_of_waiting_applics]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_nr_of_waiting_applics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_nr_of_waiting_applics]
AS
select A.objectid, A.activity, A.target
from usd_applic A
where A.status in (0,1,2)
or(A.task in (0x00000000,0x00000010,0x00000020)
    and
    A.status = 11)
or(A.task in (0x00000000,0x00000001,0x00000002,0x00000004,0x00000008)
    and
    A.status = 4)
GO

GO
--SqlScripter----[dbo].[usd_v_osim_targets].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_osim_targets]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_osim_targets] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_osim_targets]
(agent_name, agent_uuid, id, class, bootserver, mac_address, nullid)
as
select 	aa.agent_name, 	/* readable name */
	aa.agent_uuid, 	/* uuid of the computer */
	aa.id, 		
	aa.class, 
       	aa.bootserver, 	/* readable name */
       	aa.mac_address,
	bb.id
from usd_v_osim_targets_all aa left join usd_v_osim_targets_deleted bb on  aa.id=bb.id
where bb.id is NULL
GO

GO
--SqlScripter----[dbo].[usd_v_osim_targets_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_osim_targets_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_osim_targets_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 

************************************************************************/



/************************************************************************
	view 

************************************************************************/



ALTER VIEW [dbo].[usd_v_osim_targets_a_s]
(
	uri, user_uuid, 
	agent_name, agent_uuid, bootserver, mac_address
)


as
select 	uri, user_uuid, 
	agent_name, agent_uuid, bootserver, mac_address

from 	usd_v_user_dhw_area_sec, usd_v_osim_targets

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_osim_targets.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_osim_targets_all].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_osim_targets_all]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_osim_targets_all] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_osim_targets_all]
(agent_name, agent_uuid, id, class, bootserver, mac_address)
as
select 	c.dname, 	/* readable name */
	c.uuid, 	/* uuid of the computer */
	c.id, 		
	c.class, 
       	bs.dname, 	/* readable name */
       	cp_mac.value

from  csm_object c, 
	csm_property cp_bs, csm_property cp_mac,
	csm_link l, csm_object bs
where 
	c.class=102 		and /* computer */
	c.name = '' 		and /* unnamed computer */

	cp_bs.object=c.id  	and /* link property on computer */
	cp_bs.name='bootstatus' and /* unmanaged computer */
	cp_bs.value='7000' 	and 

	cp_mac.object=c.id  	and /* link property on computer */
	cp_mac.name='macaddr'   and /* property mac address */

	l.child=c.id		and  /* link computer to parent */
	l.parent=bs.id  	and
	bs.class=1000		/* parent is bs */
GO

GO
--SqlScripter----[dbo].[usd_v_osim_targets_deleted].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_osim_targets_deleted]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_osim_targets_deleted] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_osim_targets_deleted]
(uuid, id)
as
select 	c1.uuid, 	/* uuid of the computer */
	c1.id
from  csm_object c1, 
	csm_link l1, csm_object p1
where 
	c1.class=102 	and /* computer */
	c1.name = '' 	and /* unnamed computer */

	l1.child=c1.id	and  /* link computer to parent */
	l1.parent=p1.id and
	p1.class=103	/* parent is bs */
GO

GO
--SqlScripter----[dbo].[usd_v_osim_targets_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_osim_targets_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_osim_targets_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_osim_targets_s]
(
	uri, user_uuid, 
	agent_name, agent_uuid, bootserver, mac_address
)


as
select 	uri, user_uuid, 
	agent_name, agent_uuid, bootserver, mac_address

from 	usd_v_user_dhw_sec, usd_v_osim_targets

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_osim_targets.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_ownsite].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_v_ownsite]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_ownsite] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/* Start of locks for dependent tables */

/* End of lines added to convert to online lock */

/* ************************** 11613 begin  **************/

ALTER VIEW [dbo].[usd_v_ownsite]
AS
select distinct CNT.domain_uuid as objectid, CNT.version_number+1 as version,
CNT.creation_user as creation_user, CNT.label as siteid, CNT.contact_information,
MAX(MC.manager_comp_version) as asmversion, CNT.creation_date as creationtime,
CNT.last_update_date as changetime, M.host_name as remoteaddress,
CNT.description as usercomment, M.host_uuid as uuid, CNT.domain_uuid
from ca_n_tier CNT, ca_manager M, ca_manager_component MC, ca_settings S
where S.set_id = 1 /* My own domain */
and CNT.domain_uuid = M.domain_uuid
and CNT.domain_uuid = MC.domain_uuid
and CNT.domain_uuid = S.set_val_uuid
and (MC.manager_comp_id = 42
or MC.manager_comp_id = 43
or MC.manager_comp_id = 44
or MC.manager_comp_id = 45
or MC.manager_comp_id = 50)
group by CNT.domain_uuid, CNT.version_number,CNT.creation_user, CNT.label, 
CNT.contact_information,CNT.creation_date,CNT.last_update_date, 
M.host_name,CNT.description, M.host_uuid, CNT.domain_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_product_jobs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_product_jobs]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_product_jobs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_product_jobs]
(	agent_name, agent_type, agent_uuid,
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, job_uuid,
	"procedure", procedureversion, procedure_uuid)

as
select 	CA.agent_name, CA.agent_type, CA.object_uuid,
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACTIV.jobname, ACTIV.objectid,
	ACP.itemname, ACP.itemversion, ACP.objectid

from  	usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW, usd_activity ACTIV
where (	CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid 		and
	APP.activity 	= ACTIV.objectid
GO

GO
--SqlScripter----[dbo].[usd_v_product_jobs_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_product_jobs_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_product_jobs_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_product_jobs_a_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)

as
select  uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_product_jobs

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_product_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_product_jobs_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_product_jobs_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_product_jobs_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_product_jobs_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)

as
select  uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_product_jobs

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_product_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_product_procedures].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_product_procedures]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_product_procedures] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_product_procedures]
(	agent_name, agent_type, agent_uuid,
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, uninstallstate, packagetype,
	"procedure", procedureversion, procedure_uuid)

as
select 	CA.agent_name, CA.agent_type, CA.object_uuid,
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, APP.uninstallstate, RSW.packagetype,
	ACP.itemname, ACP.itemversion, ACP.objectid

from  	usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW
where (	CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid
GO

GO
--SqlScripter----[dbo].[usd_v_product_procedures_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_product_procedures_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_product_procedures_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_product_procedures
	displays the procedures contained in a product
	and their OS
	
	view 	usd_v_product_procedures_s
	is used for security impacts

************************************************************************/


 
ALTER VIEW [dbo].[usd_v_product_procedures_a_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, uninstallstate, packagetype,
	"procedure", procedureversion)

as
select  uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, uninstallstate, packagetype,
	"procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_product_procedures

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_product_procedures.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_product_procedures_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_product_procedures_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_product_procedures_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_product_procedures_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, uninstallstate, packagetype,
	"procedure", procedureversion)

as
select  uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, uninstallstate, packagetype,
	"procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_product_procedures

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_product_procedures.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_query_del_time].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_v_query_del_time]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_query_del_time] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/* Start of locks for dependent tables */
 
/* End of lines added to convert to online lock */

/* ********************** 10297 begin  ******************* */
ALTER VIEW [dbo].[usd_v_query_del_time]
AS
select APPL.target,
case when APPL.status in (1,2,3) then APPL.activationtime
else APPL.completiontime
end as anytime
from usd_applic APPL
/* not uninstalled */
where APPL.uninstallstate <> 2
/* Delivery and WAITING,DELIVERY_ORDERED,DELIVERING,DELIVERY_OK */
and APPL.task = 0x00000010 and status in (1,2,3,4)
GO

GO
--SqlScripter----[dbo].[usd_v_query_inst_time].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_v_query_inst_time]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_query_inst_time] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_query_inst_time]
AS
select APPL.target,
case when APPL.status in (1,2,3,4,7,8,17,18,19,20,21,27) then APPL.activationtime
else APPL.completiontime
end as anytime
from usd_applic APPL
/* not uninstalled */
where APPL.uninstallstate <> 2
/* task&install and status!=execution_error and status!=already_installed and status!=manipulation_not_allowed */
and (APPL.task = 0x00000001 and APPL.status != 10 and APPL.status != 15 and APPL.status != 16)
GO

GO
--SqlScripter----[dbo].[usd_v_server_grp].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_server_grp]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_server_grp] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_server_grp]
AS
select G.group_uuid as objectid, G.version_number+1 as version,
G.creation_user as creation_user, G.evaluation_uuid as qtask,
0x00000000000000000000000000000000 as aux, 0x00000000000000000000000000000000 as aux2,
8 as type, 0x00000000 as attributes, G.label as name, G.description as comment,
G.creation_date as credate, G.creation_date as cretime, G.last_update_date as chdate,
G.last_update_date as chtime, 0 as propflag, '' as qcalendar, G.eval_freq as qevalrate,
0 as qnextevaldate, 0 as qnextevaltime, G.last_eval_date_time as qevaldate,
G.last_eval_date_time as qevaltime, 0x00000000000000000000000000000000 as qtemplfold,
0 as qtype, 0 as state, 0 as seal, 0 as var, '' as auxtext0, '' as auxtext1, '' as auxtext2,
'' as auxtext3, G.query_uuid as queryid, G.evaluation_location as evaluation_location,
G.group_flag as group_flag, G.group_system as group_system, G.group_uuid
from ca_group_def G
where G.member_type = 7   /* Server group = 7 */
GO

GO
--SqlScripter----[dbo].[usd_v_sserver_clients].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_sserver_clients]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_sserver_clients] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_sserver_clients]
( server_name, agent_name, object_uuid )	
as

select DHW.agent_name, DAG.agent_name, DAG.object_uuid 
from usd_v_agents DAG, usd_v_agents DHW, 
	ca_server_component SC, ca_server SV, 
	ca_agent_component CAC
where DHW.object_uuid=SV.dis_hw_uuid 
	and SV.server_uuid=SC.server_uuid
	and SC.server_comp_id=41
	and CAC.server_uuid=SV.server_uuid
	and CAC.object_uuid=DAG.object_uuid
	and CAC.agent_comp_id=40
GO

GO
--SqlScripter----[dbo].[usd_v_sserver_clients_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_sserver_clients_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_sserver_clients_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_sserver_clients
	displays the clients (user and computer) on a sector server
	
	view 	usd_v_sserver_clients_s
	is used for security impacts

************************************************************************/



/************************************************************************
	view 

************************************************************************/




ALTER VIEW [dbo].[usd_v_sserver_clients_a_s]
( uri, user_uuid, server_name, agent_name, object_uuid )	
as
select 	uri, user_uuid, server_name, agent_name, object_uuid

from 	usd_v_user_dhw_area_sec, usd_v_sserver_clients

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_sserver_clients.object_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_sserver_clients_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_sserver_clients_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_sserver_clients_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_sserver_clients_s]
( uri, user_uuid, server_name, agent_name, object_uuid )	
as
select 	uri, user_uuid, server_name, agent_name, object_uuid

from 	usd_v_user_dhw_sec, usd_v_sserver_clients

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_sserver_clients.object_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_target].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_v_target]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_target] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/* Start of locks for dependent tables */
 
/* End of lines added to convert to online lock */

/* ************** 11137 begin ************************************* */

ALTER VIEW [dbo].[usd_v_target]
AS
	select T.objectid as objectid,
		T.version as version,
		A.creation_user as creation_user,
		T.managementtype as managementtype,
		/* S.label as ssname, 9362 */
		S.host_name as ssname,
		A.agent_name as lanname,
		case when DH.primary_network_address is null then DH2.primary_network_address
		else DH.primary_network_address
		end as lanaddress,
		A.ip_address as ip_address,
		A.creation_date as creationtime,
		A.last_run_date as changetime,
		A.registration_type as regflag,
		case when DH.dis_hw_uuid = S.dis_hw_uuid then 5  /* Old USD server type */
			when AC.agent_comp_id = 46 then 7		/* Old USD docking type */
			else A.agent_type
		end as type,
		T.state as state,
		A.proc_os_id as curros,
		A.user_def4 as comment,
		T.calendar as calendar,
		S.dis_hw_uuid as ssid,
		AC.agent_component_version as sdver,
		case when DH.host_uuid is null then DH2.host_uuid
		else DH.host_uuid
		end as uuid,
		A.prev_manager as prevls,
		A.agent_ref_count as agrefcnt,
		T.locks as locks,
		T.download_method as download_method,
		case when DH.dis_hw_uuid is null then HWU.dis_hw_uuid
		else DH.dis_hw_uuid
		end as dis_hw_uuid,
		A.agent_type,
		A.user_def1,
		A.user_def2,
		A.user_def3,
		S.server_uuid,
		HWU.user_uuid,
		A.agent_lock
	from 	((((usd_target T left join ca_link_dis_hw_user HWU on T.objectid = HWU.link_dis_hw_user_uuid) join
		(ca_agent A left join ca_server S on A.server_uuid = S.server_uuid) on T.objectid = A.object_uuid) left join
		ca_discovered_hardware DH on T.objectid = DH.dis_hw_uuid)) left join
		ca_discovered_hardware DH2 on HWU.dis_hw_uuid = DH2.dis_hw_uuid,
		ca_agent_component AC
	where T.objectid = AC.object_uuid
	and (A.agent_type = 1 or A.agent_type = 4)	  	/* 1=computer 4=computer-user*/
	and (AC.agent_comp_id = 40 or AC.agent_comp_id = 46)	/* 40=USD agent, 46=USD docking device */
GO

GO
--SqlScripter----[dbo].[usd_v_target_jobs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_target_jobs]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_target_jobs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_target_jobs]
(	agent_name, agent_type, agent_uuid,
	productname, productversion, product_uuid,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, job_uuid, 
	"procedure", procedureversion, procedure_uuid)

as
select 	CA.agent_name, CA.agent_type, CA.object_uuid,
	RSW.productname, RSW.productversion, RSW.objectid,
	APP.objectid, APP.task, APP.status, 
	APP.errorcause, APP.errorparam,
	APP.activationtime,
	APP.creationtime, APP.completiontime,
	APP.userparams, RSW.packagetype,
	ACTIV.jobname, ACTIV.objectid,
	ACP.itemname, ACP.itemversion, ACP.objectid

from usd_v_agents CA, usd_target T,
	usd_applic APP, usd_actproc ACP, usd_rsw RSW, usd_activity ACTIV
where (CA.agent_type=1 or CA.agent_type=4) 	and
        CA.object_uuid	=T.objectid 		and
	T.objectid 	= APP.target 		and
	APP.actproc 	= ACP.objectid 		and
	ACP.rsw 	= RSW.objectid 		and
	APP.activity 	= ACTIV.objectid
GO

GO
--SqlScripter----[dbo].[usd_v_target_jobs_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_target_jobs_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_target_jobs_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_target_jobs
	displays the jobs on a system
	It contains the succeeded and failed installation jobs

	usd_v_target_jobs_s
	is used for security impacts
************************************************************************/

/************************************************************************
	view 

************************************************************************/





ALTER VIEW [dbo].[usd_v_target_jobs_a_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)


as
select 	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_area_sec, usd_v_target_jobs

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_target_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_target_jobs_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_target_jobs_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_target_jobs_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_target_jobs_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion)


as
select 	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	productname, productversion,
	object_uuid, task, state, 
	errorcause, errorparam,
	activationtime,
	creationtime, completiontime,
	userparams, packagetype,
	jobname, "procedure", procedureversion

from 	usd_v_user_dhw_sec, usd_v_target_jobs

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_target_jobs.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_targets_os].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_targets_os]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_targets_os] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_targets_os]
(	agent_name, agent_type, agent_uuid,
	proc_os_name,
        is_boot_server, is_staging_server, is_user, is_computer, 
	server_label, server_uuid, target_user_uuid
)
as

select 	CA.agent_name, CA.agent_type, CA.object_uuid, 
	CPO.proc_os_name, 
					       
	case when (cast(substring(CDH.usage_list, 7, 1 ) as int) & 0x07) = 0x07
		then 1 else 0 end, /* boot server */         
        case when  (cast(substring(CDH.usage_list, 5, 1 ) as int) & 0x40) = 0x40

		then 1 else 0 end, /* SD Staging Server    */
        0, /* no user */
        1 /* computer */,
        CS.label as server_label, CS.server_uuid,
	''  /* no user uuid */
from ca_agent CA, ca_proc_os CPO, ca_discovered_hardware CDH, ca_server CS, ca_agent_component CAC
where CA.agent_type=1			and
        CA.object_uuid=CDH.dis_hw_uuid	and
        CA.proc_os_id=CPO.proc_os_id 	and
       (cast(substring(CDH.usage_list, 5, 1 ) as int) & 0x80) = 0x80
	 /* SD Agent           */	and
        (CAC.agent_comp_id = 40 and CAC.object_uuid = CA.object_uuid and CS.server_uuid = CAC.server_uuid)
union

select 	CA.agent_name, CA.agent_type, CA.object_uuid, 
	CPO.proc_os_name,
	0, /* no boot server */         
	0, /* no SD Staging Server    */
        1, /* user */
        0 /* no computer */,
        CS.label as server_label, CS.server_uuid,
	CDU.user_uuid
from ca_agent CA, ca_proc_os CPO, ca_link_dis_hw_user CDU, ca_server CS, ca_agent_component CAC
where 	CA.agent_type=4 and
        CA.object_uuid=CDU.link_dis_hw_user_uuid and
        CA.proc_os_id=CPO.proc_os_id and
				     
	(cast(substring(CDU.usage_list, 5, 1 ) as int) & 0x80) = 0x80

         /* SD Agent           */ and
        (CAC.agent_comp_id = 40 and CAC.object_uuid = CA.object_uuid and CS.server_uuid = CAC.server_uuid)
GO

GO
--SqlScripter----[dbo].[usd_v_targets_os_a_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_targets_os_a_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_targets_os_a_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/************************************************************************
	view 	usd_v_targets_os
	displays the usd relavant target systems
	and their OS
	
	view 	usd_v_targets_os_s
	is used for security impacts

************************************************************************/




/************************************************************************
	view 

************************************************************************/




ALTER VIEW [dbo].[usd_v_targets_os_a_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	proc_os_name,
        is_boot_server, is_staging_server, is_user, is_computer, server_label)

as
select 	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	proc_os_name,
        is_boot_server, is_staging_server, is_user, is_computer, server_label

from 	usd_v_user_dhw_area_sec, usd_v_targets_os

where	usd_v_user_dhw_area_sec.dhw_uuid
		= usd_v_targets_os.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_targets_os_s].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_targets_os_s]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_targets_os_s] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_targets_os_s]
(	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	proc_os_name,
        is_boot_server, is_staging_server, is_user, is_computer, server_label)

as
select 	uri, user_uuid, 
	agent_name, agent_type, agent_uuid,
	proc_os_name,
        is_boot_server, is_staging_server, is_user, is_computer, server_label

from 	usd_v_user_dhw_sec, usd_v_targets_os

where	usd_v_user_dhw_sec.dhw_uuid
		= usd_v_targets_os.agent_uuid
GO

GO
--SqlScripter----[dbo].[usd_v_user_dhw_area_sec].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_user_dhw_area_sec]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_user_dhw_area_sec] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/* Start of locks for dependent tables */

/* End of lines added to convert to online lock */


/* ************************** 11579 begin **************/

ALTER VIEW [dbo].[usd_v_user_dhw_area_sec]
(uri, user_uuid, domain_uuid, dhw_uuid
)

as
select	distinct ca_discovered_user.uri,
	ca_discovered_user.user_uuid,
	ca_discovered_user.domain_uuid,
	ca_object_ace.object_def_uuid

from 	ca_object_ace, ca_security_profile, ca_link_object_owner,
	ca_link_dis_user_sec_profile, ca_discovered_user

where 	(ca_object_ace.ace & 64) = 64
	AND	ca_object_ace.security_profile_uuid = ca_security_profile.security_profile_uuid 
	AND  ( ( ca_security_profile.security_profile_uuid  	= ca_link_dis_user_sec_profile.security_profile_uuid 	
			AND    ca_link_dis_user_sec_profile.user_uuid	= ca_discovered_user.user_uuid )
	   OR   ( ca_security_profile.security_profile_uuid = ca_link_object_owner.security_profile_uuid 
			AND  	ca_link_object_owner.owner_uuid = ca_discovered_user.user_uuid   )
         )

	AND  
		 ( ca_object_ace.object_def_uuid IN  
			 ( select object_def_uuid 
				from ols_area_ace 
					where ( area_ace & area_mask 
								& [dbo].ols_fn_getAreaAceByUserUuid( ca_discovered_user.user_uuid   )) != 0 
			 )  
		 )
GO

GO
--SqlScripter----[dbo].[usd_v_user_dhw_sec].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[usd_v_user_dhw_sec]') IS NULL EXEC('CREATE VIEW [dbo].[usd_v_user_dhw_sec] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[usd_v_user_dhw_sec]
(uri, user_uuid, domain_uuid, dhw_uuid
)

as
select	distinct ca_discovered_user.uri,
	ca_discovered_user.user_uuid,
	ca_discovered_user.domain_uuid,
	ca_object_ace.object_def_uuid

from 	ca_object_ace, ca_security_profile, ca_link_object_owner,
	ca_link_dis_user_sec_profile, ca_discovered_user

where 	(ca_object_ace.ace & 64 ) = 64
	AND	ca_object_ace.security_profile_uuid = ca_security_profile.security_profile_uuid 
	AND  ( ( ca_security_profile.security_profile_uuid  	= ca_link_dis_user_sec_profile.security_profile_uuid 	
			AND    ca_link_dis_user_sec_profile.user_uuid	= ca_discovered_user.user_uuid )
	   OR   ( ca_security_profile.security_profile_uuid = ca_link_object_owner.security_profile_uuid 
			AND  	ca_link_object_owner.owner_uuid = ca_discovered_user.user_uuid   )
             )
GO

GO
--SqlScripter----[dbo].[usd_vq_target].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[usd_vq_target]') IS NULL EXEC('CREATE VIEW [dbo].[usd_vq_target] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
/* ************************** 11613 end **************/
/* ************************** 11614 begin **************/

ALTER VIEW [dbo].[usd_vq_target]
AS
select agent_name as lanname, object_uuid as objectid, NULL as dis_hw_uuid, agent_type
from ca_agent a
where a.agent_type = 1 or a.agent_type = 4
GO

GO
--SqlScripter----[dbo].[UserGroupResourceView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[UserGroupResourceView]') IS NULL EXEC('CREATE VIEW [dbo].[UserGroupResourceView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[UserGroupResourceView]
AS
SELECT pac.userId
	, ugv.server_addr
	, ugv.probe_addr
	, ugv.rsrcIndex
	, ugv.rsrcOtherIndex
	, ugv.grpName
	, ugv.grpType
	FROM UserGroupView ugv, ProbeAccessList pac
	WHERE (pac.probe_addr=ugv.probe_addr OR pac.probe_addr IS NULL)
	AND (ugv.userId = pac.userId OR ugv.userId IS NULL)
GO

GO
--SqlScripter----[dbo].[UserGroupView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[UserGroupView]') IS NULL EXEC('CREATE VIEW [dbo].[UserGroupView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[UserGroupView]
AS
select gac.userId
	, g.grpId
	, g.server_addr
	, g.probe_addr
	, g.rsrcIndex
	, g.rsrcOtherIndex
	, gid.grpType
	, gid.grpName
from GroupAccessList gac, network_Groups g, network_GroupId gid
where gac.grpId = g.grpId
	AND gid.grpId = g.grpId
GO

GO
--SqlScripter----[dbo].[userhasreports].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[userhasreports]') IS NULL EXEC('CREATE VIEW [dbo].[userhasreports] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[userhasreports]
("PMF", "ReportsTo")  AS
       SELECT "ai_usrdef_prop"."samid", "ai_usrdef_prop"."mgr"
       FROM "ai_usrdef_prop"
GO

GO
--SqlScripter----[dbo].[UserProbeView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[UserProbeView]') IS NULL EXEC('CREATE VIEW [dbo].[UserProbeView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[UserProbeView]
AS
SELECT p.server_addr
	,p.probe_addr
	,p.IP_addr
	,p.port
	,p.community
	,p.collect_flags
	,p.sysDescr
	,p.class_name
	,p.sysObjectId
	,sysName=CASE
	WHEN p.user_descr IS NOT NULL AND p.user_descr <> '' THEN p.user_descr
	WHEN p.sysName IS NOT NULL AND p.sysName <> '' THEN p.sysName
	ELSE p.IP_addr END
	,monitored= (CASE
	WHEN (p.collect_flags >=0 AND p.collect_flags < 536870912) THEN 1
	WHEN p.collect_flags & 0x20000000 = 0x20000000 THEN 2
	WHEN p.collect_flags & 0x40000000 = 0x40000000 THEN -1
	WHEN p.collect_flags & 0x80000000 = 0x80000000 THEN -2
	else 0
	END )
	,bypassAvail=(p.collect_flags & 0x80000)/0x80000
,	rsrcId=convert(varchar(10),-1)+':'+convert(varchar(12),p.probe_addr)+':'+convert(varchar(10),0)+':'+convert(varchar(10),0)
,	userId=acl.userId
	FROM network_Probe p, ProbeAccessList acl
WHERE (p.probe_addr=acl.probe_addr OR acl.probe_addr IS NULL)
	AND p.server_addr=
(SELECT convert(int, parmValue) FROM CollectionParms
WHERE parmName='COLLECTION SERVER ID')
	AND p.collect_flags & 0x80000000 <> 0x80000000
GO

GO
--SqlScripter----[dbo].[v$gla_data].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v$gla_data]') IS NULL EXEC('CREATE VIEW [dbo].[v$gla_data] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v$gla_data]
AS
       SELECT "gla_hours"."timestamp", "gla_hours"."num_val", "gla_hours"."text_val", "gla_objects"."object_name", "gla_sdamaps"."scan_name", "gla_agents"."agent_name"
       FROM "gla_hours", "gla_objects", "gla_sdamaps", "gla_agents"
       WHERE gla_hours.obj_id = gla_objects.obj_id AND gla_objects.agent_id = gla_sdamaps.agent_id AND gla_objects.scan_index = gla_sdamaps.scan_index AND gla_sdamaps.agent_id = gla_agents.agent_id
GO

GO
--SqlScripter----[dbo].[v_alert].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_alert]') IS NULL EXEC('CREATE VIEW [dbo].[v_alert] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_alert]
AS SELECT network_Alert.server_addr, network_Alert.probe_addr, network_Probe.sysName, network_Probe.IP_addr, network_Alert.rsrcIndex, COUNT(network_Alert.threshold) AS numAlerts FROM  network_Alert INNER JOIN  network_Probe ON network_Alert.server_addr = network_Probe.server_addr AND network_Alert.probe_addr = network_Probe.probe_addr 
WHERE ( (dbo.date('now') - network_Alert.IntervalDateTime) < (SELECT dbo.date(char (optionDataInt) + ' days') FROM  RMConfiguration WHERE optionName = 'ThresholdCalcSize') AND network_Probe.collect_flags >= 0 AND network_Probe.collect_flags < 1073741824 ) GROUP BY network_Alert.server_addr,network_Alert.probe_addr, network_Alert.rsrcIndex, network_Probe.sysName, network_Probe.IP_addr
GO

GO
--SqlScripter----[dbo].[v_alldevs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_alldevs]') IS NULL EXEC('CREATE VIEW [dbo].[v_alldevs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_alldevs]
AS SELECT server_addr, probe_addr, sysName, IP_addr FROM  t_GreatestCpu_dev UNION SELECT server_addr, probe_addr, sysName, IP_addr FROM  t_MostAlerts_dev UNION SELECT server_addr, probe_addr, sysName, IP_addr FROM  t_always_dev
GO

GO
--SqlScripter----[dbo].[v_allifs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_allifs]') IS NULL EXEC('CREATE VIEW [dbo].[v_allifs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_allifs]
AS SELECT server_addr, probe_addr, sysName, IP_addr, ifIndex, ifSpeed, ifip, ifType FROM  t_GreatestCpu_devif UNION SELECT server_addr, probe_addr, sysName, IP_addr, ifIndex, ifSpeed, ifip, ifType FROM  t_MostAlerts_devif UNION SELECT server_addr, probe_addr, sysName, IP_addr, ifIndex, ifSpeed, ifip, ifType FROM  t_MostAlerts_if UNION SELECT server_addr, probe_addr, sysName, IP_addr, ifIndex, ifSpeed, ifip, ifType FROM  t_MostThruput_if UNION SELECT server_addr, probe_addr, sysName, IP_addr, ifIndex, ifSpeed, ifip, ifType FROM  t_always_devif UNION SELECT server_addr, probe_addr, sysName, IP_addr, ifIndex, ifSpeed, ifip, ifType FROM  t_always_if
GO

GO
--SqlScripter----[dbo].[v_cpuUtil].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_cpuUtil]') IS NULL EXEC('CREATE VIEW [dbo].[v_cpuUtil] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_cpuUtil]
AS SELECT Thresholds.server_addr, Thresholds.probe_addr, network_Probe.sysName, network_Probe.IP_addr, Thresholds.upperThreshold AS cpuUtil FROM  Thresholds INNER JOIN  network_Probe ON Thresholds.server_addr = network_Probe.server_addr AND Thresholds.probe_addr = network_Probe.probe_addr WHERE (Thresholds.fieldIndex = 409) AND (Thresholds.server_addr <> 0) AND network_Probe.collect_flags >= 0 AND network_Probe.collect_flags < 1073741824
GO

GO
--SqlScripter----[dbo].[v_ifthruput].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_ifthruput]') IS NULL EXEC('CREATE VIEW [dbo].[v_ifthruput] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_ifthruput]
AS SELECT ifInOctets.server_addr, ifInOctets.probe_addr, ifInOctets.rsrcIndex, AVG(ifInOctets.upperThreshold) AS inIfUtil, AVG(ifOutOctets.upperThreshold) AS outIfUtil, SUM((ifInOctets.upperThreshold + ifOutOctets.upperThreshold) * M2if.ifSpeed / 2) AS ifThruput, network_Probe.sysName, network_Probe.IP_addr FROM  Thresholds ifInOctets INNER JOIN  Thresholds ifOutOctets ON ifInOctets.server_addr = ifOutOctets.server_addr AND ifInOctets.probe_addr = ifOutOctets.probe_addr AND ifInOctets.rsrcIndex = ifOutOctets.rsrcIndex INNER JOIN  M2if ON ifOutOctets.server_addr = M2if.server_addr AND ifOutOctets.probe_addr = M2if.probe_addr AND ifOutOctets.rsrcIndex = M2if.ifIndex INNER JOIN  network_Probe ON M2if.server_addr = network_Probe.server_addr AND M2if.probe_addr = network_Probe.probe_addr WHERE (ifInOctets.fieldIndex = 101) AND (ifOutOctets.fieldIndex = 107) AND network_Probe.collect_flags >= 0 AND network_Probe.collect_flags < 1073741824 GROUP BY ifInOctets.server_addr, ifInOctets.probe_addr, ifInOctets.rsrcIndex, network_Probe.sysName, network_Probe.IP_addr
GO

GO
--SqlScripter----[dbo].[v_ifutil].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_ifutil]') IS NULL EXEC('CREATE VIEW [dbo].[v_ifutil] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_ifutil]
AS SELECT Thresholds.server_addr, Thresholds.probe_addr, Thresholds.rsrcIndex, AVG(Thresholds.upperThreshold) AS ifInUtil, AVG(Thresholds1.upperThreshold) AS ifOutUtil, AVG(Thresholds.upperThreshold + Thresholds1.upperThreshold) AS ifUtil, network_Probe.sysName, network_Probe.IP_addr FROM  Thresholds INNER JOIN  Thresholds Thresholds1 ON Thresholds.server_addr = Thresholds1.server_addr AND Thresholds.probe_addr = Thresholds1.probe_addr AND Thresholds.rsrcIndex = Thresholds1.rsrcIndex INNER JOIN  network_Probe ON Thresholds1.server_addr = network_Probe.server_addr AND Thresholds1.probe_addr = network_Probe.probe_addr INNER JOIN  M2if ON Thresholds.server_addr = M2if.server_addr AND Thresholds.probe_addr = M2if.probe_addr AND Thresholds.rsrcIndex = M2if.ifIndex WHERE (Thresholds.fieldIndex = 101) AND (Thresholds1.fieldIndex = 107) AND network_Probe.collect_flags >= 0 AND network_Probe.collect_flags < 1073741824 GROUP BY Thresholds.server_addr, Thresholds.probe_addr, network_Probe.sysName, Thresholds.rsrcIndex, network_Probe.IP_addr, M2if.ifType HAVING (Thresholds.server_addr <> 0)
GO

GO
--SqlScripter----[dbo].[v_ipthruput].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[v_ipthruput]') IS NULL EXEC('CREATE VIEW [dbo].[v_ipthruput] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[v_ipthruput]
AS SELECT Thresholds.server_addr, Thresholds.probe_addr, Thresholds.upperThreshold AS ipInRec, Thresholds1.upperThreshold AS ipForwPerc, Thresholds.upperThreshold * Thresholds1.upperThreshold AS ipThruput, network_Probe.sysName FROM  Thresholds INNER JOIN  Thresholds Thresholds1 ON Thresholds.server_addr = Thresholds1.server_addr AND Thresholds.probe_addr = Thresholds1.probe_addr AND Thresholds.rsrcIndex = Thresholds1.rsrcIndex INNER JOIN  network_Probe ON Thresholds1.server_addr = network_Probe.server_addr AND Thresholds1.probe_addr = network_Probe.probe_addr WHERE (Thresholds.fieldIndex = 201) AND (Thresholds1.fieldIndex = 204) AND network_Probe.collect_flags >= 0 AND network_Probe.collect_flags < 1073741824
GO

GO
--SqlScripter----[dbo].[View_Act_Log].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Act_Log]') IS NULL EXEC('CREATE VIEW [dbo].[View_Act_Log] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Act_Log]
AS SELECT act_log.*, act_type.sym activity_type, View_Contact_Full.last_name analyst_lastname, View_Contact_Full.first_name analyst_firstname, View_Contact_Full.middle_name analyst_middlename FROM ((  act_log inner join  act_type ON act_log.type = act_type.code) left join  View_Contact_Full ON act_log.analyst = View_Contact_Full.contact_uuid)
GO

GO
--SqlScripter----[dbo].[View_Audit_Assignee].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Audit_Assignee]') IS NULL EXEC('CREATE VIEW [dbo].[View_Audit_Assignee] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Audit_Assignee]
AS SELECT a.audobj_uniqueid, b.attr_after_val from_val, a.attr_after_val to_val, b.change_date from_time, a.change_date to_time FROM  audit_log a,  audit_log b WHERE a.audobj_uniqueid = b.audobj_uniqueid AND a.attr_name = 'assignee' AND a.attr_name = b.attr_name AND b.change_date = ( SELECT MAX(change_date) FROM  audit_log c WHERE c.change_date < a.change_date and c.audobj_uniqueid = a.audobj_uniqueid and c.attr_name = 'assignee') UNION SELECT a.audobj_uniqueid, a.attr_after_val, '', a.change_date, null FROM  audit_log a WHERE a.attr_name = 'assignee' AND a.attr_after_val != '' AND a.change_date = ( SELECT MAX(change_date) FROM  audit_log b WHERE b.audobj_uniqueid = a.audobj_uniqueid AND b.attr_name = 'assignee') UNION SELECT a.audobj_uniqueid, b.attr_before_val, b.attr_after_val, a.change_date, b.change_date FROM  audit_log a,  audit_log b WHERE a.audobj_uniqueid = b.audobj_uniqueid AND a.attr_name = '' AND b.attr_name = 'assignee' AND b.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE c.audobj_uniqueid = a.audobj_uniqueid AND c.attr_name = 'assignee') UNION SELECT distinct a.audobj_uniqueid, assignee.last_name + ', ' + assignee.first_name + ' ' + assignee.middle_name, '', a.change_date, null FROM (( call_req cr inner join  audit_log a ON cr.persid = a.audobj_persid) inner join  ca_contact assignee ON cr.assignee = assignee.contact_uuid) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'assignee' AND cr.persid = b.audobj_persid) AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid) UNION SELECT distinct a.audobj_uniqueid, assignee.last_name + ', ' + assignee.first_name + ' ' + assignee.middle_name, '', a.change_date, null FROM (( chg inner join  audit_log a ON chg.persid = a.audobj_persid) inner join  ca_contact assignee ON chg.assignee = assignee.contact_uuid) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'assignee' AND chg.persid = b.audobj_persid) 
AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid)
GO

GO
--SqlScripter----[dbo].[View_Audit_Group].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Audit_Group]') IS NULL EXEC('CREATE VIEW [dbo].[View_Audit_Group] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Audit_Group]
AS SELECT a.audobj_uniqueid, b.attr_after_val from_val, a.attr_after_val to_val, b.change_date from_time, a.change_date to_time FROM  audit_log a,  audit_log b WHERE a.audobj_uniqueid = b.audobj_uniqueid AND a.attr_name = 'group' AND a.attr_name = b.attr_name AND 
b.change_date = ( SELECT MAX(change_date) FROM  audit_log c WHERE c.change_date < a.change_date and c.audobj_uniqueid = a.audobj_uniqueid and c.attr_name = 'group') UNION SELECT a.audobj_uniqueid, a.attr_after_val, '', a.change_date, null FROM  audit_log a WHERE a.attr_name = 'group' AND a.attr_after_val != '' AND a.change_date = ( SELECT MAX(change_date) FROM  audit_log b 
WHERE b.audobj_uniqueid = a.audobj_uniqueid AND b.attr_name = 'group') 
UNION SELECT a.audobj_uniqueid, b.attr_before_val, b.attr_after_val, a.change_date, b.change_date FROM  audit_log a,  audit_log b WHERE a.attr_name = '' AND b.attr_name = 'group' AND b.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE c.audobj_uniqueid = a.audobj_uniqueid AND c.attr_name = 'group') UNION SELECT distinct a.audobj_uniqueid, VG.last_name, '', a.change_date, null 
FROM (( call_req cr inner join  audit_log a ON cr.persid = a.audobj_persid) inner join  View_Group VG 
ON cr.group_id = VG.contact_uuid) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b 
WHERE b.attr_name = 'group' AND cr.persid = b.audobj_persid) AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid) UNION SELECT distinct a.audobj_uniqueid,VG.last_name, '', a.change_date, null FROM (( chg inner join  audit_log a ON chg.persid = a.audobj_persid) inner join  View_Group VG ON chg.group_id = VG.contact_uuid) 
WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'group' AND chg.persid = b.audobj_persid) AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid)
GO

GO
--SqlScripter----[dbo].[View_Audit_Priority].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Audit_Priority]') IS NULL EXEC('CREATE VIEW [dbo].[View_Audit_Priority] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Audit_Priority]
AS SELECT a.audobj_uniqueid, b.attr_after_val from_val, a.attr_after_val to_val, b.change_date from_time, a.change_date to_time FROM  audit_log a,  audit_log b WHERE a.audobj_uniqueid = b.audobj_uniqueid AND a.attr_name = 'priority' 
AND a.attr_name = b.attr_name AND b.change_date = ( SELECT MAX(change_date) FROM  audit_log c WHERE c.change_date < a.change_date and c.audobj_uniqueid = a.audobj_uniqueid and c.attr_name = 'priority') UNION SELECT a.audobj_uniqueid, a.attr_after_val, '', a.change_date, null 
FROM  audit_log a WHERE a.attr_name = 'priority' AND a.change_date = ( SELECT MAX(change_date) FROM  audit_log b WHERE b.audobj_uniqueid = a.audobj_uniqueid AND b.attr_name = 'priority') UNION SELECT a.audobj_uniqueid, b.attr_before_val, b.attr_after_val, a.change_date, b.change_date FROM  audit_log a,  audit_log b WHERE a.attr_name = '' AND b.attr_name = 'priority' AND b.change_date = ( SELECT MIN(change_date) 
FROM  audit_log c WHERE c.audobj_uniqueid = a.audobj_uniqueid AND c.attr_name = 'priority') UNION SELECT distinct a.audobj_uniqueid, pri.sym, '', a.change_date, null FROM (( call_req cr inner join  audit_log a ON cr.persid = a.audobj_persid) inner join  pri ON cr.priority = pri.enum) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'priority' AND cr.persid = b.audobj_persid) AND a.change_date = ( SELECT MIN(change_date) 
FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid) UNION SELECT distinct a.audobj_uniqueid, pri.sym, '', a.change_date, null FROM (( chg inner join  audit_log a ON chg.persid = a.audobj_persid) inner join  pri ON chg.priority = pri.enum) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'priority' AND chg.persid = b.audobj_persid) AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid)
GO

GO
--SqlScripter----[dbo].[View_Audit_Status].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Audit_Status]') IS NULL EXEC('CREATE VIEW [dbo].[View_Audit_Status] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Audit_Status]
AS SELECT a.audobj_uniqueid, b.attr_after_val as from_val, a.attr_after_val as to_val, b.change_date as from_time, a.change_date as to_time FROM  audit_log a,  audit_log b WHERE a.audobj_uniqueid = b.audobj_uniqueid AND a.attr_name = 'status' AND a.attr_name = b.attr_name AND b.change_date = ( SELECT MAX(change_date) FROM  audit_log c WHERE c.change_date < a.change_date and c.audobj_uniqueid = a.audobj_uniqueid and c.attr_name = 'status') UNION SELECT a.audobj_uniqueid, 
a.attr_after_val, '', a.change_date, null FROM  audit_log a WHERE a.attr_name = 'status' AND a.attr_after_val != '' AND a.change_date = ( SELECT MAX(change_date) FROM  audit_log b WHERE b.audobj_uniqueid = a.audobj_uniqueid AND b.attr_name = 'status') UNION SELECT a.audobj_uniqueid, b.attr_before_val, b.attr_after_val, a.change_date, b.change_date FROM  audit_log a,  audit_log b WHERE a.attr_name = '' AND b.attr_name = 'status' AND b.change_date = ( SELECT MIN(change_date) 
FROM  audit_log c WHERE c.audobj_uniqueid = a.audobj_uniqueid AND c.attr_name = 'status') UNION SELECT distinct a.audobj_uniqueid, stat.sym, '', a.change_date, null FROM (( call_req cr inner join  audit_log a ON cr.persid = a.audobj_persid) inner join  cr_stat stat ON cr.status = stat.code) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'status' AND cr.persid = b.audobj_persid) AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c 
WHERE a.audobj_persid = c.audobj_persid) UNION SELECT distinct a.audobj_uniqueid, chgstat.sym, '', a.change_date, null FROM (( chg inner join  audit_log a ON chg.persid = a.audobj_persid) inner join  chgstat ON chg.status = chgstat.code) WHERE NOT EXISTS ( SELECT b.audobj_persid FROM  audit_log b WHERE b.attr_name = 'status' AND chg.persid = b.audobj_persid) 
AND a.change_date = ( SELECT MIN(change_date) FROM  audit_log c WHERE a.audobj_persid = c.audobj_persid)
GO

GO
--SqlScripter----[dbo].[View_Change].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change]
AS SELECT chg.*, chgstat.sym status_name, pri.sym priority_num, chgcat.sym category_name, int_org.org_name organization_name, affected_cnt.last_name affected_end_user_lastname, 
affected_cnt.first_name affected_end_user_firstname, affected_cnt.middle_name affected_end_user_middlename, requester.last_name requester_lastname, requester.first_name requester_firstname, requester.middle_name requester_middlename, 
requester_org.org_name business, assignee.last_name assignee_lastname, 
assignee.first_name assignee_firstname, assignee.middle_name assignee_middlename, View_Group.contact_uuid groupID, View_Group.last_name group_name, srv_desc.sym service_type, impact.sym impact_num, product.sym product_sym, 
toc.sym type_of_contact_sym, repmeth.sym rpting_method_sym, perscon.sym person_contacting_sym FROM (((((((((((((((  chg inner join  pri ON chg.priority = pri.enum) left join  chgstat ON chg.status= chgstat.code) 
inner join  ca_contact affected_cnt ON chg.affected_contact = affected_cnt.contact_uuid) 
inner join  ca_contact requester ON chg.requestor = requester.contact_uuid) left join  ca_contact assignee ON chg.assignee = assignee.contact_uuid) left join  View_Group ON chg.group_id = View_Group.contact_uuid) 
left join  srv_desc ON chg.support_lev = srv_desc.code) left join  ca_organization int_org ON chg.organization = int_org.organization_uuid) left join  ca_organization requester_org 
ON requester.organization_uuid = requester_org.organization_uuid) left join  chgcat ON chg.category = chgcat.code) 
left join  impact ON chg.impact = impact.enum) left join  product ON chg.product = product.id) left join  toc ON chg.type_of_contact = toc.id) left join  repmeth ON chg.reporting_method = repmeth.id) left join  perscon ON chg.person_contacting = perscon.id)
GO

GO
--SqlScripter----[dbo].[View_Change_Act_Log].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change_Act_Log]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change_Act_Log] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change_Act_Log]
AS SELECT chgalg.*, View_Contact_Full.last_name analyst_lastname, View_Contact_Full.first_name analyst_firstname, View_Contact_Full.middle_name analyst_middlename, chgalg.last_mod_dt chgalg_last_mod_dt, act_type.sym activity_type FROM ((  chgalg inner join  act_type ON chgalg.type = act_type.code) left join  View_Contact_Full ON chgalg.analyst = View_Contact_Full.contact_uuid)
GO

GO
--SqlScripter----[dbo].[View_Change_to_Assets].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change_to_Assets]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change_to_Assets] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change_to_Assets]
AS SELECT View_Change.*, net_res.own_resource_uuid assetID, net_res.serial_number asset_serial_num, gen_res.name asset_class, resfam.name asset_family, net_res.resource_name asset_name FROM ((((  View_Change inner join  lrel ON View_Change.persid = lrel.l_persid) inner join  ca_owned_resource net_res ON lrel.r_persid = 'nr:'+dbo.uuid_to_char(net_res.own_resource_uuid)) left join  ca_resource_class gen_res ON net_res.resource_class = gen_res.id) left join  ca_resource_family resfam ON gen_res.family_id = resfam.id) WHERE (lrel.l_attr = 'asset') AND (lrel.r_attr = 'chgnr')
GO

GO
--SqlScripter----[dbo].[View_Change_to_Change_Act_Log].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change_to_Change_Act_Log]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change_to_Change_Act_Log] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change_to_Change_Act_Log]
AS SELECT View_Change.*, chgalg.id chgalg_id, 
chgalg.persid chgalg_persid, chgalg.change_id, chgalg.last_mod_dt chgalg_last_mod_dt, 
chgalg.time_spent, chgalg.time_stamp, chgalg.system_time, 
chgalg.analyst, chgalg.description chgalg_description, chgalg.action_desc, chgalg.type, chgalg.internal, 
chgalg.knowledge_session, chgalg.knowledge_tool, chgalg.analyst chgalg_analyst_id 
FROM ( View_Change inner join  chgalg ON View_Change.id = chgalg.change_id)
GO

GO
--SqlScripter----[dbo].[View_Change_to_Change_WF].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change_to_Change_WF]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change_to_Change_WF] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change_to_Change_WF]
AS SELECT View_Change.*, wf.id wf_id, wf.persid wf_persid, wf.del, wf.object_type, wf.object_id, wf.task, wf.wf_template, wf.sequence, wf.status wf_status, wf.group_task, wf.asset, wf.creator, wf.date_created, wf.assignee wf_assignee, wf.done_by, wf.start_date wf_start_date, wf.est_comp_date wf_est_comp_date, wf.est_duration, wf.completion_date, wf.actual_duration, wf.est_cost wf_est_cost, wf.cost, wf.description wf_description, wf.last_mod_dt wf_last_mod_dt, wf.last_mod_by wf_last_mod_by FROM ( View_Change inner join  wf ON View_Change.id = wf.object_id)
GO

GO
--SqlScripter----[dbo].[View_Change_to_Properties].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change_to_Properties]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change_to_Properties] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change_to_Properties]
AS SELECT View_Change.*, prp.id prp_id, prp.persid prp_persid, prp.object_type, prp.object_id, prp.sequence, prp.property, prp.value, prp.last_mod_dt prp_last_mod_dt, prp.last_mod_by prp_last_mod_by, prp.required, prp.sample, prp.description prp_description, prp.label FROM ( View_Change inner join  prp ON View_Change.id = prp.object_id)
GO

GO
--SqlScripter----[dbo].[View_Change_to_Request].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Change_to_Request]') IS NULL EXEC('CREATE VIEW [dbo].[View_Change_to_Request] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Change_to_Request]
AS SELECT View_Change.*, call_req.id cr_id, call_req.ref_num, call_req.summary cr_summary, call_req.persid cr_persid, call_req.description cr_description, call_req.status cr_status, call_req.active_flag cr_active_flag, call_req.time_spent_sum, call_req.open_date cr_open_date, call_req.last_mod_dt cr_last_mod_dt, call_req.close_date cr_close_date, call_req.log_agent cr_log_agent, call_req.group_id cr_group_id, call_req.assignee cr_assignee,call_req.customer, call_req.charge_back_id, call_req.affected_rc, call_req.support_lev cr_support_lev, call_req.category cr_category, call_req.solution, call_req.impact cr_impact, call_req.priority cr_priority, call_req.urgency, call_req.severity, call_req.extern_ref, call_req.last_act_id, call_req.cr_tticket, call_req.parent cr_parent, call_req.template_name cr_template_name, call_req.sla_violation cr_sla_violation, call_req.predicted_sla_viol cr_predicted_sla_viol, call_req.created_via cr_created_via, call_req.call_back_date cr_call_back_date, call_req.call_back_flag cr_call_back_flag, call_req.event_token, call_req.type, call_req.string1 cr_string1, call_req.string2 cr_string2, call_req.string3 cr_string3, call_req.string4 cr_string4, call_req.string5 cr_string5, call_req.string6 cr_string6, call_req.change FROM ( View_Change inner join  call_req ON View_Change.id = call_req.change)
GO

GO
--SqlScripter----[dbo].[View_Contact_Full].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Contact_Full]') IS NULL EXEC('CREATE VIEW [dbo].[View_Contact_Full] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Contact_Full]
AS SELECT ca_contact.*, ca_contact_type.name contact_type_name, loc.location_name location_name, org.org_name organization, admin.org_name admin_organization, srv_desc.sym service_type, loc.state state_sym FROM ((((((  ca_contact left join  ca_organization org ON ca_contact.organization_uuid = org.organization_uuid) left join  ca_organization admin ON ca_contact.admin_organization_uuid = admin.organization_uuid)left join  ca_location loc ON ca_contact.location_uuid = loc.location_uuid) left join  ca_contact_type ON ca_contact.contact_type = ca_contact_type.id) left join  usp_contact ON ca_contact.contact_uuid = usp_contact.contact_uuid) left join  srv_desc ON usp_contact.c_service_type = srv_desc.code)
GO

GO
--SqlScripter----[dbo].[View_Contact_to_Environment].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Contact_to_Environment]') IS NULL EXEC('CREATE VIEW [dbo].[View_Contact_to_Environment] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Contact_to_Environment]
AS SELECT ca_contact.*, net_res.own_resource_uuid asset_uuid, net_res.resource_name asset_name FROM ((  ca_contact inner join  lrel ON 'cnt:'+dbo.uuid_to_char(ca_contact.contact_uuid) = lrel.l_persid) inner join  ca_owned_resource net_res ON lrel.r_persid = 'nr:'+dbo.uuid_to_char(net_res.own_resource_uuid)) WHERE (lrel.l_attr = 'cenv') AND (lrel.r_attr = 'cntref')
GO

GO
--SqlScripter----[dbo].[View_Group].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Group]') IS NULL EXEC('CREATE VIEW [dbo].[View_Group] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Group]
AS SELECT ca_contact.* FROM  ca_contact WHERE ca_contact.contact_type = 2308
GO

GO
--SqlScripter----[dbo].[View_Group_to_Contact].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Group_to_Contact]') IS NULL EXEC('CREATE VIEW [dbo].[View_Group_to_Contact] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Group_to_Contact]
AS SELECT View_Group.*, contact.first_name member_firstname, contact.middle_name member_middlename, contact.last_name member_lastname, grpmem.manager_flag grpmem_manager_flag FROM ((  grpmem inner join  View_Group ON grpmem.group_id = View_Group.contact_uuid) inner join  ca_contact contact ON grpmem.member = contact.contact_uuid)
GO

GO
--SqlScripter----[dbo].[View_Issue].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Issue]') IS NULL EXEC('CREATE VIEW [dbo].[View_Issue] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Issue]
AS SELECT issue.*, issstat.sym status_name, pri.sym priority_num, isscat.sym category_name, int_org.org_name organization_name, affected_usr.last_name affected_end_user_lastname, 
affected_usr.first_name affected_end_user_firstname, affected_usr.middle_name affected_end_user_middlename, assignee.last_name assignee_lastname, assignee.first_name assignee_firstname, assignee.middle_name assignee_middlename, View_Group.contact_uuid groupID, 
View_Group.last_name group_name, srv_desc.sym service_type, impact.sym impact_num, product.sym product_sym, toc.sym type_of_contact_sym, repmeth.sym rpting_method_sym, perscon.sym person_contacting_sym, interface.sym created_via_sym, rootcause.sym rootcause_sym 
FROM ((((((((((((((( issue inner join  pri ON issue.priority = pri.enum) 
left join  issstat ON issue.status = issstat.code) 
inner join  ca_contact affected_usr ON issue.requestor = affected_usr.contact_uuid) 
left join  ca_contact assignee ON issue.assignee = assignee.contact_uuid) 
left join  srv_desc ON issue.support_lev = srv_desc.persid) 
left join  ca_organization int_org ON issue.organization = int_org.organization_uuid) 
left join  isscat ON issue.category = isscat.code) 
left join  View_Group ON issue.group_id = View_Group.contact_uuid) 
left join  impact ON issue.impact = impact.enum) 
left join  product ON issue.product = product.id) 
left join  toc ON issue.type_of_contact = toc.id) 
left join  repmeth ON issue.reporting_method = repmeth.id) left join  perscon ON issue.person_contacting= perscon.id) left join  interface ON issue.created_via = interface.id) left join  rootcause ON issue.rootcause = rootcause.id)
GO

GO
--SqlScripter----[dbo].[View_Issue_Act_Log].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Issue_Act_Log]') IS NULL EXEC('CREATE VIEW [dbo].[View_Issue_Act_Log] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Issue_Act_Log]
AS SELECT issalg.*, View_Contact_Full.last_name analyst_lastname, View_Contact_Full.first_name analyst_firstname, View_Contact_Full.middle_name analyst_middlename, act_type.sym activity_type FROM (( issalg inner join  act_type ON issalg.type = act_type.code) left join  View_Contact_Full ON issalg.analyst = View_Contact_Full.contact_uuid)
GO

GO
--SqlScripter----[dbo].[View_Issue_to_Assets].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Issue_to_Assets]') IS NULL EXEC('CREATE VIEW [dbo].[View_Issue_to_Assets] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Issue_to_Assets]
AS SELECT View_Issue.*, net_res.own_resource_uuid assetID, net_res.serial_number asset_serial_num, gen_res.name asset_class, resfam.name asset_family, 
net_res.resource_name asset_name FROM (((( View_Issue inner join  lrel ON View_Issue.persid = lrel.l_persid) inner join  ca_owned_resource net_res 
ON lrel.r_persid = 'nr:'+ dbo.uuid_to_char(net_res.own_resource_uuid)) left join  ca_resource_class gen_res ON net_res.resource_class = gen_res.id) left join  ca_resource_family resfam 
ON gen_res.family_id = resfam.id) WHERE (lrel.l_attr = 'asset') AND (lrel.r_attr = 'issnr')
GO

GO
--SqlScripter----[dbo].[View_Issue_to_Issue_Act_Log].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Issue_to_Issue_Act_Log]') IS NULL EXEC('CREATE VIEW [dbo].[View_Issue_to_Issue_Act_Log] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Issue_to_Issue_Act_Log]
AS SELECT View_Issue.*, issalg.id issalg_id, issalg.persid issalg_persid, issalg.issue_id, issalg.last_mod_dt issalg_last_mod_dt, issalg.time_spent, issalg.time_stamp, issalg.system_time, issalg.analyst, issalg.description issalg_description, issalg.action_desc, issalg.type, issalg.internal, issalg.knowledge_session, issalg.knowledge_tool, issalg.analyst issalg_analyst_id FROM ( View_Issue inner join  issalg ON View_Issue.persid = issalg.issue_id)
GO

GO
--SqlScripter----[dbo].[View_Issue_to_Issue_WF].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Issue_to_Issue_WF]') IS NULL EXEC('CREATE VIEW [dbo].[View_Issue_to_Issue_WF] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Issue_to_Issue_WF]
AS SELECT View_Issue.*, isswf.id wf_id, isswf.persid wf_persid, isswf.del, isswf.object_type, isswf.object_id, isswf.task, isswf.wf_template, isswf.sequence, isswf.status wf_status, isswf.group_task, isswf.asset, isswf.creator, isswf.date_created, isswf.assignee wf_assignee, isswf.done_by, isswf.start_date wf_start_date, isswf.est_comp_date wf_est_comp_date, isswf.est_duration, isswf.completion_date, isswf.actual_duration, isswf.est_cost wf_est_cost, isswf.cost, isswf.description wf_description, isswf.last_mod_dt wf_last_mod_dt, isswf.last_mod_by wf_last_mod_by FROM ( View_Issue inner join  isswf ON View_Issue.persid = isswf.object_id)
GO

GO
--SqlScripter----[dbo].[View_Issue_to_Properties].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Issue_to_Properties]') IS NULL EXEC('CREATE VIEW [dbo].[View_Issue_to_Properties] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Issue_to_Properties]
AS SELECT View_Issue.*, issprp.id prp_id, issprp.persid prp_persid, issprp.sequence, issprp.description prp_description, issprp.label, issprp.value, issprp.required, issprp.sample, issprp.owning_iss, issprp.last_mod_dt prp_last_mod_dt, issprp.last_mod_by prp_last_mod_by FROM ( View_Issue inner join  issprp ON View_Issue.persid = issprp.owning_iss)
GO

GO
--SqlScripter----[dbo].[View_Request].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Request]') IS NULL EXEC('CREATE VIEW [dbo].[View_Request] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Request]
AS SELECT call_req.*, srv_desc.sym service_type, sevrty.sym severity_num, urgncy.sym urgency_num, prob_ctg.sym category_name, net_res.resource_name asset, impact.sym impact_num, assignee.last_name assignee_lastname, assignee.first_name assignee_firstname, assignee.middle_name assignee_middlename, customer.last_name customer_lastname, customer.first_name customer_firstname, customer.middle_name customer_middlename, View_Group.last_name group_name, View_Group.contact_uuid groupID, cr_stat.sym status_name, pri.sym priority_num FROM (((((((((((  call_req inner join  pri ON call_req.priority = pri.enum) inner join  ca_contact customer ON call_req.customer =customer.contact_uuid) left join  srv_desc ON call_req.support_lev = srv_desc.code) left join  sevrty ON call_req.severity = sevrty.enum) left join  urgncy ON call_req.urgency = urgncy.enum) left join  impact ON call_req.impact = impact.enum) left join  ca_owned_resource net_res ON call_req.affected_rc = net_res.own_resource_uuid) left join  prob_ctg ON call_req.category = prob_ctg.persid) left join  View_Group ON call_req.group_id = View_Group.contact_uuid) left join  ca_contact assignee ON call_req.assignee = assignee.contact_uuid) left join  cr_stat ON call_req.status = cr_stat.code)
GO

GO
--SqlScripter----[dbo].[View_Request_to_Act_Log].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Request_to_Act_Log]') IS NULL EXEC('CREATE VIEW [dbo].[View_Request_to_Act_Log] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Request_to_Act_Log]
AS SELECT View_Request.*, View_Act_Log.id actlog_id, View_Act_Log.persid actlog_persid, View_Act_Log.call_req_id, View_Act_Log.last_mod_dt actlog_last_mod_dt, View_Act_Log.time_spent, View_Act_Log.time_stamp, View_Act_Log.system_time, View_Act_Log.analyst, View_Act_Log.description actlog_desc, View_Act_Log.action_desc, View_Act_Log.type actlog_type, View_Act_Log.knowledge_session, View_Act_Log.knowledge_tool, View_Act_Log.internal, View_Act_Log.activity_type, View_Act_Log.analyst_lastname, View_Act_Log.analyst_firstname, View_Act_Log.analyst_middlename FROM ( View_Request inner join  View_Act_Log ON View_Request.persid = View_Act_Log.call_req_id)
GO

GO
--SqlScripter----[dbo].[View_Request_to_Properties].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[View_Request_to_Properties]') IS NULL EXEC('CREATE VIEW [dbo].[View_Request_to_Properties] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[View_Request_to_Properties]
AS SELECT View_Request.*, cr_prp.id crprp_id, cr_prp.persid crprp_persid, cr_prp.sequence, cr_prp.label, cr_prp.description crprp_description, cr_prp.value, cr_prp.required, cr_prp.sample, cr_prp.owning_cr, cr_prp.last_mod_dt crprp_last_mod_dt, cr_prp.last_mod_by crprp_last_mod_by FROM ( View_Request inner join  cr_prp ON View_Request.persid = cr_prp.owning_cr)
GO

GO
--SqlScripter----[dbo].[WANScoreBoard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[WANScoreBoard]') IS NULL EXEC('CREATE VIEW [dbo].[WANScoreBoard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[WANScoreBoard]
AS
SELECT r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
	,ifInOctets=100-100*SUM(CASE a.fieldIndex WHEN 101 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,ifOutOctets=100-100*SUM(CASE a.fieldIndex WHEN 107 THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,inboundErrors=100-100*SUM(CASE WHEN a.fieldIndex IN (104,105,106) THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,outboundErrors=100-100*SUM(case WHEN a.fieldIndex IN (110,111) THEN (alertDuration*severity/5.0)/(24*3600) ELSE 0 END)
	,availability=100-100*SUM(CASE WHEN a.fieldIndex = 1602 THEN (a.alertDuration*1.0)/(24*3600) ELSE 0 END)
FROM ResourceNameWANView r, AlertView a
WHERE r.server_addr=a.server_addr
	AND r.probe_addr=a.probe_addr
	AND r.rsrcIndex=a.rsrcIndex
	AND a.severity > 0
	AND a.severity <=5
	AND r.monitored=1
	AND a.IntervalDateTime BETWEEN dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		dateadd(day, -1, getdate())))) 
	AND dateadd(second, -datepart(second, getdate()),
		dateadd(minute, -datepart(minute, getdate()),
		dateadd(hour, -datepart(hour, getdate()),
		getdate())))
	AND a.fieldIndex/100=1
	GROUP BY r.server_addr
	,r.probe_addr
	,r.rsrcIndex
	,r.rsrcName
	,r.userId
GO

GO
--SqlScripter----[dbo].[WatchView].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[WatchView]') IS NULL EXEC('CREATE VIEW [dbo].[WatchView] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[WatchView]
AS
select s.server_addr
	,s.probe_addr
	,s.rsrcIndex
	,s.rsrcOtherIndex
	,s.rsrcType
	,s.fieldIndex
	,t.fieldDescShort
	,s.IntervalDateTime
	,value=t.displayScaleFactor*s.value
	,average=t.displayScaleFactor*s.average
	,s.severity
	,type=CASE WHEN value > average THEN 'Value Over'
		else 'Value Under'
	end
FROM Watch s, ThresholdDesc t
WHERE s.fieldIndex=t.fieldIndex
GO

GO
--SqlScripter----[dbo].[wv_3COM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wv_3COM]') IS NULL EXEC('CREATE VIEW [dbo].[wv_3COM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wv_3COM]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wt_3COM r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wv_3COM_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wv_3COM_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wv_3COM_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wv_3COM_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wt_3COM_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wv_3COM_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wv_3COM_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wv_3COM_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wv_3COM_Device]
AS Select * from  tng_managedobject where class_name = '_3COM_Device'
GO

GO
--SqlScripter----[dbo].[wv_3COM_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wv_3COM_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wv_3COM_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wv_3COM_Switch]
AS Select * from  tng_managedobject where class_name = '_3COM_Switch'
GO

GO
--SqlScripter----[dbo].[wvAccess_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAccess_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvAccess_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAccess_Point]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtAccess_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAccessStax].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAccessStax]') IS NULL EXEC('CREATE VIEW [dbo].[wvAccessStax] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAccessStax]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtAccessStax r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAcer_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAcer_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvAcer_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAcer_Switch]
AS Select * from  tng_managedobject where class_name = 'Acer_Switch'
GO

GO
--SqlScripter----[dbo].[wvAdhoc_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAdhoc_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvAdhoc_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAdhoc_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtAdhoc_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAgent]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtAgent r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAggregate_CPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAggregate_CPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvAggregate_CPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAggregate_CPU]
AS Select * from  tng_managedobject where class_name = 'Aggregate_CPU'
GO

GO
--SqlScripter----[dbo].[wvAlcatel_IP_Phone].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAlcatel_IP_Phone]') IS NULL EXEC('CREATE VIEW [dbo].[wvAlcatel_IP_Phone] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAlcatel_IP_Phone]
AS Select * from  tng_managedobject where class_name = 'Alcatel_IP_Phone'
GO

GO
--SqlScripter----[dbo].[wvanoDsc_Agent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvanoDsc_Agent]') IS NULL EXEC('CREATE VIEW [dbo].[wvanoDsc_Agent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvanoDsc_Agent]
AS Select * from  tng_managedobject where class_name = 'anoDsc_Agent'
GO

GO
--SqlScripter----[dbo].[wvAPC_UPS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAPC_UPS]') IS NULL EXEC('CREATE VIEW [dbo].[wvAPC_UPS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAPC_UPS]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtAPC_UPS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAPMonitors].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAPMonitors]') IS NULL EXEC('CREATE VIEW [dbo].[wvAPMonitors] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAPMonitors]
AS Select * from  tng_managedobject where class_name = 'APMonitors'
GO

GO
--SqlScripter----[dbo].[wvApplCache].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplCache]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplCache] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplCache]
AS Select * from  tng_managedobject where class_name = 'ApplCache'
GO

GO
--SqlScripter----[dbo].[wvApplCacheHf].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplCacheHf]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplCacheHf] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplCacheHf]
AS Select * from  tng_managedobject where class_name = 'ApplCacheHf'
GO

GO
--SqlScripter----[dbo].[wvApplCacheOf].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplCacheOf]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplCacheOf] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplCacheOf]
AS Select * from  tng_managedobject where class_name = 'ApplCacheOf'
GO

GO
--SqlScripter----[dbo].[wvApplCursor].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplCursor]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplCursor] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplCursor]
AS Select * from  tng_managedobject where class_name = 'ApplCursor'
GO

GO
--SqlScripter----[dbo].[wvApplCursorBc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplCursorBc]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplCursorBc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplCursorBc]
AS Select * from  tng_managedobject where class_name = 'ApplCursorBc'
GO

GO
--SqlScripter----[dbo].[wvApplCursorRb].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplCursorRb]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplCursorRb] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplCursorRb]
AS Select * from  tng_managedobject where class_name = 'ApplCursorRb'
GO

GO
--SqlScripter----[dbo].[wvApplDeadLock].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplDeadLock]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplDeadLock] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplDeadLock]
AS Select * from  tng_managedobject where class_name = 'ApplDeadLock'
GO

GO
--SqlScripter----[dbo].[wvApple_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApple_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvApple_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApple_Device]
AS Select * from  tng_managedobject where class_name = 'Apple_Device'
GO

GO
--SqlScripter----[dbo].[wvApplicationHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplicationHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplicationHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplicationHost]
AS Select * from  tng_managedobject where class_name = 'ApplicationHost'
GO

GO
--SqlScripter----[dbo].[wvapplLock].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvapplLock]') IS NULL EXEC('CREATE VIEW [dbo].[wvapplLock] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvapplLock]
AS Select * from  tng_managedobject where class_name = 'applLock'
GO

GO
--SqlScripter----[dbo].[wvApplLocks].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplLocks]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplLocks] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplLocks]
AS Select * from  tng_managedobject where class_name = 'ApplLocks'
GO

GO
--SqlScripter----[dbo].[wvApplLocksEsc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplLocksEsc]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplLocksEsc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplLocksEsc]
AS Select * from  tng_managedobject where class_name = 'ApplLocksEsc'
GO

GO
--SqlScripter----[dbo].[wvApplLocksXEsc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplLocksXEsc]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplLocksXEsc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplLocksXEsc]
AS Select * from  tng_managedobject where class_name = 'ApplLocksXEsc'
GO

GO
--SqlScripter----[dbo].[wvApplLockTimeOut].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplLockTimeOut]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplLockTimeOut] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplLockTimeOut]
AS Select * from  tng_managedobject where class_name = 'ApplLockTimeOut'
GO

GO
--SqlScripter----[dbo].[wvApplSortStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplSortStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplSortStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplSortStatus]
AS Select * from  tng_managedobject where class_name = 'ApplSortStatus'
GO

GO
--SqlScripter----[dbo].[wvApplSQLTable].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplSQLTable]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplSQLTable] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplSQLTable]
AS Select * from  tng_managedobject where class_name = 'ApplSQLTable'
GO

GO
--SqlScripter----[dbo].[wvApplStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvApplStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvApplStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvApplStatus]
AS Select * from  tng_managedobject where class_name = 'ApplStatus'
GO

GO
--SqlScripter----[dbo].[wvAppResponse].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAppResponse]') IS NULL EXEC('CREATE VIEW [dbo].[wvAppResponse] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAppResponse]
AS Select * from  tng_managedobject where class_name = 'AppResponse'
GO

GO
--SqlScripter----[dbo].[wvAS400].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAS400]') IS NULL EXEC('CREATE VIEW [dbo].[wvAS400] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAS400]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtAS400 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAsante].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAsante]') IS NULL EXEC('CREATE VIEW [dbo].[wvAsante] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAsante]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtAsante r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvASMO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvASMO]') IS NULL EXEC('CREATE VIEW [dbo].[wvASMO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvASMO]
AS Select * from  tng_managedobject where class_name = 'ASMO'
GO

GO
--SqlScripter----[dbo].[wvASMO_BPV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvASMO_BPV]') IS NULL EXEC('CREATE VIEW [dbo].[wvASMO_BPV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvASMO_BPV]
AS Select * from  tng_managedobject where class_name = 'ASMO_BPV'
GO

GO
--SqlScripter----[dbo].[wvATM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvATM]') IS NULL EXEC('CREATE VIEW [dbo].[wvATM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvATM]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtATM r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvATM_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvATM_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvATM_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvATM_Interface]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtATM_Interface r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvATM_LANE].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvATM_LANE]') IS NULL EXEC('CREATE VIEW [dbo].[wvATM_LANE] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvATM_LANE]
AS Select * from  tng_managedobject where class_name = 'ATM_LANE'
GO

GO
--SqlScripter----[dbo].[wvATM_LINK].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvATM_LINK]') IS NULL EXEC('CREATE VIEW [dbo].[wvATM_LINK] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvATM_LINK]
AS Select r.* from  tng_managedobject m,  wtATM_LINK r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvATT_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvATT_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvATT_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvATT_Device]
AS Select * from  tng_managedobject where class_name = 'ATT_Device'
GO

GO
--SqlScripter----[dbo].[wvAvayaAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAvayaAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvAvayaAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAvayaAccessPoint]
AS Select m.name,m.label,m.address, m.address_type,m.status_no,m.hidden,
m.propagate_status,m.severity, m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins, 
m.date_modify,m.code_page,m.admin_status,m.DSM_Server, m.propagated_status_no,m.propagated_sev,
m.DSM_Address, m.license_machine_type,m.create_bpv,m.override_imagedecal, m.override_imagetintbool,
m.override_model,m.background_image,m.weight, m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid, 
m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer, m.class_name,m.override_imagelarge,
m.override_imagesmall, m.interface_type,m.subnet_mask,m.ip_address_hex,r.* 
from  tng_managedobject m,  wtavayaaccesspoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvAWsadmin].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvAWsadmin]') IS NULL EXEC('CREATE VIEW [dbo].[wvAWsadmin] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvAWsadmin]
AS Select * from  tng_managedobject where class_name = 'AWsadmin'
GO

GO
--SqlScripter----[dbo].[wvBackupStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBackupStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvBackupStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBackupStatus]
AS Select * from  tng_managedobject where class_name = 'BackupStatus'
GO

GO
--SqlScripter----[dbo].[wvBanyan_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBanyan_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvBanyan_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBanyan_Device]
AS Select * from  tng_managedobject where class_name = 'Banyan_Device'
GO

GO
--SqlScripter----[dbo].[wvBattery].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBattery]') IS NULL EXEC('CREATE VIEW [dbo].[wvBattery] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBattery]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtBattery r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBay_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBay_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvBay_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBay_Device]
AS Select * from  tng_managedobject where class_name = 'Bay_Device'
GO

GO
--SqlScripter----[dbo].[wvBay_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBay_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvBay_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBay_Switch]
AS Select * from  tng_managedobject where class_name = 'Bay_Switch'
GO

GO
--SqlScripter----[dbo].[wvBayBridge].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBayBridge]') IS NULL EXEC('CREATE VIEW [dbo].[wvBayBridge] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBayBridge]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtBayBridge r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBayHub].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBayHub]') IS NULL EXEC('CREATE VIEW [dbo].[wvBayHub] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBayHub]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtBayHub r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBelkinAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBelkinAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvBelkinAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBelkinAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtBelkinAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBGP_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBGP_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvBGP_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBGP_Link]
AS Select r.* from  tng_managedobject m,  wtBGP_Link r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBillboard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBillboard]') IS NULL EXEC('CREATE VIEW [dbo].[wvBillboard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBillboard]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtBillboard r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBreezeCOMAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBreezeCOMAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvBreezeCOMAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBreezeCOMAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtBreezeCOMAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBridge].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBridge]') IS NULL EXEC('CREATE VIEW [dbo].[wvBridge] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBridge]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtBridge r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBuffalo_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBuffalo_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvBuffalo_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBuffalo_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtBuffalo_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBull].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBull]') IS NULL EXEC('CREATE VIEW [dbo].[wvBull] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBull]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtBull r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBUS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBUS]') IS NULL EXEC('CREATE VIEW [dbo].[wvBUS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBUS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,r.* from  tng_managedobject m,  wtBUS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvBUSAGENT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvBUSAGENT]') IS NULL EXEC('CREATE VIEW [dbo].[wvBUSAGENT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvBUSAGENT]
AS Select * from  tng_managedobject where class_name = 'BUSAGENT'
GO

GO
--SqlScripter----[dbo].[wvCA_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCA_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvCA_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCA_Device]
AS Select * from  tng_managedobject where class_name = 'CA_Device'
GO

GO
--SqlScripter----[dbo].[wvCabletron].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCabletron]') IS NULL EXEC('CREATE VIEW [dbo].[wvCabletron] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCabletron]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtCabletron r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCabletron_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCabletron_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvCabletron_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCabletron_Switch]
AS Select * from  tng_managedobject where class_name = 'Cabletron_Switch'
GO

GO
--SqlScripter----[dbo].[wvcacheHeapFull].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcacheHeapFull]') IS NULL EXEC('CREATE VIEW [dbo].[wvcacheHeapFull] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcacheHeapFull]
AS Select * from  tng_managedobject where class_name = 'cacheHeapFull'
GO

GO
--SqlScripter----[dbo].[wvcacheOverFlow].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcacheOverFlow]') IS NULL EXEC('CREATE VIEW [dbo].[wvcacheOverFlow] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcacheOverFlow]
AS Select * from  tng_managedobject where class_name = 'cacheOverFlow'
GO

GO
--SqlScripter----[dbo].[wvCACMO_BPV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_BPV]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_BPV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_BPV]
AS Select * from  tng_managedobject where class_name = 'CACMO_BPV'
GO

GO
--SqlScripter----[dbo].[wvCACMO_Cluster].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_Cluster]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_Cluster] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_Cluster]
AS Select * from  tng_managedobject where class_name = 'CACMO_Cluster'
GO

GO
--SqlScripter----[dbo].[wvCACMO_CPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_CPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_CPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_CPU]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_CPU r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_Folder]
AS Select * from  tng_managedobject where class_name = 'CACMO_Folder'
GO

GO
--SqlScripter----[dbo].[wvCACMO_HACMP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HACMP]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HACMP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HACMP]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HACMP b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HACMPHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HACMPHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HACMPHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HACMPHost]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HACMPHost b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HACMPInterface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HACMPInterface]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HACMPInterface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HACMPInterface]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HACMPInterface b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HACMPResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HACMPResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HACMPResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HACMPResource]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HACMPResource b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HACMPResourceGroup].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HACMPResourceGroup]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HACMPResourceGroup] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HACMPResourceGroup]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HACMPResourceGroup b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HPServiceGuard].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HPServiceGuard]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HPServiceGuard] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HPServiceGuard]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HPServiceGuard b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HPSGFileSystem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HPSGFileSystem]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HPSGFileSystem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HPSGFileSystem]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HPSGFileSystem b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HPSGHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HPSGHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HPSGHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HPSGHost]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HPSGHost b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HPSGPackage].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HPSGPackage]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HPSGPackage] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HPSGPackage]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HPSGPackage b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_HPSGService].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_HPSGService]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_HPSGService] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_HPSGService]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_HPSGService b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_Mem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_Mem]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_Mem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_Mem]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_Mem r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSClusterService].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSClusterService]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSClusterService] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSClusterService]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_MSClusterService r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSCSHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSCSHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSCSHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSCSHost]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_MSCSHost r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSCSInterface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSCSInterface]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSCSInterface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSCSInterface]
AS Select * from  tng_managedobject where class_name = 'CACMO_MSCSInterface'
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSCSNetwork].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSCSNetwork]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSCSNetwork] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSCSNetwork]
AS Select * from  tng_managedobject where class_name = 'CACMO_MSCSNetwork'
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSCSQuorum].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSCSQuorum]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSCSQuorum] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSCSQuorum]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_MSCSQuorum r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSCSResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSCSResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSCSResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSCSResource]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.propagate_status,m.class_name,r.* from  tng_managedobject m,  wtCACMO_MSCSResource r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_MSCSResourceGroup].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_MSCSResourceGroup]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_MSCSResourceGroup] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_MSCSResourceGroup]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_MSCSResourceGroup r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_RedHatCluHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_RedHatCluHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_RedHatCluHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_RedHatCluHost]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_RedHatCluHost r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_RedHatCluManager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_RedHatCluManager]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_RedHatCluManager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_RedHatCluManager]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtCACMO_RedHatCluManager r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_RedHatCluSer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_RedHatCluSer]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_RedHatCluSer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_RedHatCluSer]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.propagate_status,m.class_name,r.* from  tng_managedobject m,  wtCACMO_RedHatCluSer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_SCHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_SCHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_SCHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_SCHost]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_SCHost b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCACMO_VeritasCluster].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCACMO_VeritasCluster]') IS NULL EXEC('CREATE VIEW [dbo].[wvCACMO_VeritasCluster] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCACMO_VeritasCluster]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM tng_managedobject a, wtCACMO_VeritasCluster b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvcaiDb2mvsAgt].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiDb2mvsAgt]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiDb2mvsAgt] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiDb2mvsAgt]
AS Select * from  tng_managedobject where class_name = 'caiDb2mvsAgt'
GO

GO
--SqlScripter----[dbo].[wvcaiDb2mvsAgtInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiDb2mvsAgtInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiDb2mvsAgtInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiDb2mvsAgtInst]
AS Select * from  tng_managedobject where class_name = 'caiDb2mvsAgtInst'
GO

GO
--SqlScripter----[dbo].[wvCaiIngA2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCaiIngA2]') IS NULL EXEC('CREATE VIEW [dbo].[wvCaiIngA2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCaiIngA2]
AS Select * from  tng_managedobject where class_name = 'CaiIngA2'
GO

GO
--SqlScripter----[dbo].[wvCaiIngA2Inst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCaiIngA2Inst]') IS NULL EXEC('CREATE VIEW [dbo].[wvCaiIngA2Inst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCaiIngA2Inst]
AS Select * from  tng_managedobject where class_name = 'CaiIngA2Inst'
GO

GO
--SqlScripter----[dbo].[wvcaiLogA2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiLogA2]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiLogA2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiLogA2]
AS Select * from  tng_managedobject where class_name = 'caiLogA2'
GO

GO
--SqlScripter----[dbo].[wvcaiNt4Os].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiNt4Os]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiNt4Os] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiNt4Os]
AS Select * from  tng_managedobject where class_name = 'caiNt4Os'
GO

GO
--SqlScripter----[dbo].[wvcaiOraA2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiOraA2]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiOraA2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiOraA2]
AS Select * from  tng_managedobject where class_name = 'caiOraA2'
GO

GO
--SqlScripter----[dbo].[wvcaiOraA2Inst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiOraA2Inst]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiOraA2Inst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiOraA2Inst]
AS Select * from  tng_managedobject where class_name = 'caiOraA2Inst'
GO

GO
--SqlScripter----[dbo].[wvcaiSybA2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiSybA2]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiSybA2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiSybA2]
AS Select * from  tng_managedobject where class_name = 'caiSybA2'
GO

GO
--SqlScripter----[dbo].[wvcaiSybA2Inst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiSybA2Inst]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiSybA2Inst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiSybA2Inst]
AS Select * from  tng_managedobject where class_name = 'caiSybA2Inst'
GO

GO
--SqlScripter----[dbo].[wvcaiSysAgtCics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiSysAgtCics]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiSysAgtCics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiSysAgtCics]
AS Select * from  tng_managedobject where class_name = 'caiSysAgtCics'
GO

GO
--SqlScripter----[dbo].[wvcaiSysAgtHDS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiSysAgtHDS]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiSysAgtHDS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiSysAgtHDS]
AS Select * from  tng_managedobject where class_name = 'caiSysAgtHDS'
GO

GO
--SqlScripter----[dbo].[wvcaiSysAgtMqs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiSysAgtMqs]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiSysAgtMqs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiSysAgtMqs]
AS Select * from  tng_managedobject where class_name = 'caiSysAgtMqs'
GO

GO
--SqlScripter----[dbo].[wvcaiSysAgtMvs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiSysAgtMvs]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiSysAgtMvs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiSysAgtMvs]
AS Select * from  tng_managedobject where class_name = 'caiSysAgtMvs'
GO

GO
--SqlScripter----[dbo].[wvCaiUxOs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCaiUxOs]') IS NULL EXEC('CREATE VIEW [dbo].[wvCaiUxOs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCaiUxOs]
AS Select * from  tng_managedobject where class_name = 'CaiUxOs'
GO

GO
--SqlScripter----[dbo].[wvcaiW2kOs].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaiW2kOs]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaiW2kOs] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaiW2kOs]
AS Select * from  tng_managedobject where class_name = 'caiW2kOs'
GO

GO
--SqlScripter----[dbo].[wvCalderaLinux].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCalderaLinux]') IS NULL EXEC('CREATE VIEW [dbo].[wvCalderaLinux] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCalderaLinux]
AS Select * from  tng_managedobject where class_name = 'CalderaLinux'
GO

GO
--SqlScripter----[dbo].[wvcalpara].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcalpara]') IS NULL EXEC('CREATE VIEW [dbo].[wvcalpara] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcalpara]
AS Select * from  tng_managedobject where class_name = 'calpara'
GO

GO
--SqlScripter----[dbo].[wvcalparaInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcalparaInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvcalparaInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcalparaInst]
AS Select * from  tng_managedobject where class_name = 'calparaInst'
GO

GO
--SqlScripter----[dbo].[wvcamscsa].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcamscsa]') IS NULL EXEC('CREATE VIEW [dbo].[wvcamscsa] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcamscsa]
AS Select * from  tng_managedobject where class_name = 'camscsa'
GO

GO
--SqlScripter----[dbo].[wvcamsvsa].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcamsvsa]') IS NULL EXEC('CREATE VIEW [dbo].[wvcamsvsa] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcamsvsa]
AS Select * from  tng_managedobject where class_name = 'camsvsa'
GO

GO
--SqlScripter----[dbo].[wvcarhcla].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcarhcla]') IS NULL EXEC('CREATE VIEW [dbo].[wvcarhcla] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcarhcla]
AS Select * from  tng_managedobject where class_name = 'carhcla'
GO

GO
--SqlScripter----[dbo].[wvcasfha].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcasfha]') IS NULL EXEC('CREATE VIEW [dbo].[wvcasfha] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcasfha]
AS Select * from  tng_managedobject where class_name = 'casfha'
GO

GO
--SqlScripter----[dbo].[wvcasfhaInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcasfhaInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvcasfhaInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcasfhaInst]
AS Select * from  tng_managedobject where class_name = 'casfhaInst'
GO

GO
--SqlScripter----[dbo].[wvcasfma].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcasfma]') IS NULL EXEC('CREATE VIEW [dbo].[wvcasfma] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcasfma]
AS Select * from  tng_managedobject where class_name = 'casfma'
GO

GO
--SqlScripter----[dbo].[wvcasfmaInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcasfmaInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvcasfmaInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcasfmaInst]
AS Select * from  tng_managedobject where class_name = 'casfmaInst'
GO

GO
--SqlScripter----[dbo].[wvcaSunAdrAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaSunAdrAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaSunAdrAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaSunAdrAgent]
AS Select * from  tng_managedobject where class_name = 'caSunAdrAgent'
GO

GO
--SqlScripter----[dbo].[wvcaSunFireHighAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaSunFireHighAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaSunFireHighAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaSunFireHighAgent]
AS Select * from  tng_managedobject where class_name = 'caSunFireHighAgent'
GO

GO
--SqlScripter----[dbo].[wvcaSunFireMidAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcaSunFireMidAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvcaSunFireMidAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcaSunFireMidAgent]
AS Select * from  tng_managedobject where class_name = 'caSunFireMidAgent'
GO

GO
--SqlScripter----[dbo].[wvcavmesxa].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcavmesxa]') IS NULL EXEC('CREATE VIEW [dbo].[wvcavmesxa] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcavmesxa]
AS Select * from  tng_managedobject where class_name = 'cavmesxa'
GO

GO
--SqlScripter----[dbo].[wvcavmgsxa].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcavmgsxa]') IS NULL EXEC('CREATE VIEW [dbo].[wvcavmgsxa] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcavmgsxa]
AS Select * from  tng_managedobject where class_name = 'cavmgsxa'
GO

GO
--SqlScripter----[dbo].[wvcellAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcellAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvcellAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcellAgent]
AS Select * from  tng_managedobject where class_name = 'cellAgent'
GO

GO
--SqlScripter----[dbo].[wvChannel_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvChannel_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvChannel_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvChannel_Link]
AS select * from  tng_link where class_name ='Channel_Link'
GO

GO
--SqlScripter----[dbo].[wvChargeback].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvChargeback]') IS NULL EXEC('CREATE VIEW [dbo].[wvChargeback] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvChargeback]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.weight,r.* from  tng_managedobject m,  wtChargeback r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvChassis].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvChassis]') IS NULL EXEC('CREATE VIEW [dbo].[wvChassis] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvChassis]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtChassis r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvChipcom].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvChipcom]') IS NULL EXEC('CREATE VIEW [dbo].[wvChipcom] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvChipcom]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtChipcom r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCicsInstance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCicsInstance]') IS NULL EXEC('CREATE VIEW [dbo].[wvCicsInstance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCicsInstance]
AS Select * from  tng_managedobject where class_name = 'CicsInstance'
GO

GO
--SqlScripter----[dbo].[wvCISCO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCISCO]') IS NULL EXEC('CREATE VIEW [dbo].[wvCISCO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCISCO]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtCISCO r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCisco_Aironet1100_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCisco_Aironet1100_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvCisco_Aironet1100_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCisco_Aironet1100_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtCisco_Aironet1100_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCisco_Aironet1200_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCisco_Aironet1200_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvCisco_Aironet1200_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCisco_Aironet1200_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtCisco_Aironet1200_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCisco_Aironet340_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCisco_Aironet340_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvCisco_Aironet340_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCisco_Aironet340_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtCisco_Aironet340_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCisco_Aironet350_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCisco_Aironet350_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvCisco_Aironet350_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCisco_Aironet350_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtCisco_Aironet350_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCisco_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCisco_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvCisco_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCisco_Device]
AS Select * from  tng_managedobject where class_name = 'Cisco_Device'
GO

GO
--SqlScripter----[dbo].[wvCISCO_LocalDirector].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCISCO_LocalDirector]') IS NULL EXEC('CREATE VIEW [dbo].[wvCISCO_LocalDirector] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCISCO_LocalDirector]
AS Select * from  tng_managedobject where class_name = 'CISCO_LocalDirector'
GO

GO
--SqlScripter----[dbo].[wvCISCO_Manager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCISCO_Manager]') IS NULL EXEC('CREATE VIEW [dbo].[wvCISCO_Manager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCISCO_Manager]
AS Select * from  tng_managedobject where class_name = 'CISCO_Manager'
GO

GO
--SqlScripter----[dbo].[wvCISCO_SWITCH].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCISCO_SWITCH]') IS NULL EXEC('CREATE VIEW [dbo].[wvCISCO_SWITCH] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCISCO_SWITCH]
AS Select * from  tng_managedobject where class_name = 'CISCO_SWITCH'
GO

GO
--SqlScripter----[dbo].[wvCiscoBUS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCiscoBUS]') IS NULL EXEC('CREATE VIEW [dbo].[wvCiscoBUS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCiscoBUS]
AS Select * from  tng_managedobject where class_name = 'CiscoBUS'
GO

GO
--SqlScripter----[dbo].[wvCiscoFeederNode].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCiscoFeederNode]') IS NULL EXEC('CREATE VIEW [dbo].[wvCiscoFeederNode] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCiscoFeederNode]
AS Select * from  tng_managedobject where class_name = 'CiscoFeederNode'
GO

GO
--SqlScripter----[dbo].[wvCiscoHsrpAgt].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCiscoHsrpAgt]') IS NULL EXEC('CREATE VIEW [dbo].[wvCiscoHsrpAgt] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCiscoHsrpAgt]
AS Select * from  tng_managedobject where class_name = 'CiscoHsrpAgt'
GO

GO
--SqlScripter----[dbo].[wvCiscoLECS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCiscoLECS]') IS NULL EXEC('CREATE VIEW [dbo].[wvCiscoLECS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCiscoLECS]
AS Select * from  tng_managedobject where class_name = 'CiscoLECS'
GO

GO
--SqlScripter----[dbo].[wvCiscoLES].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCiscoLES]') IS NULL EXEC('CREATE VIEW [dbo].[wvCiscoLES] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCiscoLES]
AS Select * from  tng_managedobject where class_name = 'CiscoLES'
GO

GO
--SqlScripter----[dbo].[wvCiscoRoutingNode].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCiscoRoutingNode]') IS NULL EXEC('CREATE VIEW [dbo].[wvCiscoRoutingNode] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCiscoRoutingNode]
AS Select * from  tng_managedobject where class_name = 'CiscoRoutingNode'
GO

GO
--SqlScripter----[dbo].[wvcities].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvcities]') IS NULL EXEC('CREATE VIEW [dbo].[wvcities] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvcities]
("uuid", "name", "label", "address", "address_type", "status_no", "hidden", "propagate_status", "severity", "posted", "acknowledge", "alarmset_name", "autoarrange_type", "date_ins", "date_modify", "code_page", "admin_status", "DSM_Server", "propagated_status_no", "propagated_sev", "DSM_Address", "license_machine_type", "create_bpv", "override_imagelarge", "override_imagesmall", "override_imagedecal", "override_imagetintbool", "override_model", "background_image", "class_name", "latitude", "longitude", "background", "geomap")  AS
       SELECT "m"."uuid", "m"."name", "m"."label", "m"."address", "m"."address_type", "m"."status_no", "m"."hidden", "m"."propagate_status", "m"."severity", "m"."posted", "m"."acknowledge", "m"."alarmset_name", "m"."autoarrange_type", "m"."date_ins", "m"."date_modify", "m"."code_page", "m"."admin_status", "m"."dsm_server", "m"."propagated_status_no", "m"."propagated_sev", "m"."dsm_address", "m"."license_machine_type", "m"."create_bpv", "m"."override_imagelarge", "m"."override_imagesmall", "m"."override_imagedecal", "m"."override_imagetintbool", "m"."override_model", "m"."background_image", "m"."class_name", "r"."latitude", "r"."longitude", "r"."background", "r"."geomap"
       FROM "tng_managedobject" "m", "tng_city" "r"
       WHERE m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCity].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCity]') IS NULL EXEC('CREATE VIEW [dbo].[wvCity] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCity]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from  tng_managedobject a,  tng_city b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvClassical_Medium_Skyscraper].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvClassical_Medium_Skyscraper]') IS NULL EXEC('CREATE VIEW [dbo].[wvClassical_Medium_Skyscraper] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvClassical_Medium_Skyscraper]
AS Select * from  tng_managedobject where class_name = 'Classical_Medium_Skyscraper'
GO

GO
--SqlScripter----[dbo].[wvClassical_Tall_Skyscraper].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvClassical_Tall_Skyscraper]') IS NULL EXEC('CREATE VIEW [dbo].[wvClassical_Tall_Skyscraper] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvClassical_Tall_Skyscraper]
AS Select * from  tng_managedobject where class_name = 'Classical_Tall_Skyscraper'
GO

GO
--SqlScripter----[dbo].[wvCmuTek].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCmuTek]') IS NULL EXEC('CREATE VIEW [dbo].[wvCmuTek] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCmuTek]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtCmuTek r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCompaq_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCompaq_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvCompaq_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCompaq_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtCompaq_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvCompaq_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCompaq_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvCompaq_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCompaq_Device]
AS Select * from  tng_managedobject where class_name = 'Compaq_Device'
GO

GO
--SqlScripter----[dbo].[wvConflict_Object].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvConflict_Object]') IS NULL EXEC('CREATE VIEW [dbo].[wvConflict_Object] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvConflict_Object]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time,b.*from  tng_managedobject a,  tng_conflict_object b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvContemporary_Low_Skyscraper].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvContemporary_Low_Skyscraper]') IS NULL EXEC('CREATE VIEW [dbo].[wvContemporary_Low_Skyscraper] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvContemporary_Low_Skyscraper]
AS Select * from  tng_managedobject where class_name = 'Contemporary_Low_Skyscraper'
GO

GO
--SqlScripter----[dbo].[wvContemporary_Medium_Skyscraper].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvContemporary_Medium_Skyscraper]') IS NULL EXEC('CREATE VIEW [dbo].[wvContemporary_Medium_Skyscraper] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvContemporary_Medium_Skyscraper]
AS Select * from  tng_managedobject where class_name = 'Contemporary_Medium_Skyscraper'
GO

GO
--SqlScripter----[dbo].[wvContemporary_Tall_Skyscraper].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvContemporary_Tall_Skyscraper]') IS NULL EXEC('CREATE VIEW [dbo].[wvContemporary_Tall_Skyscraper] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvContemporary_Tall_Skyscraper]
AS Select * from  tng_managedobject where class_name = 'Contemporary_Tall_Skyscraper'
GO

GO
--SqlScripter----[dbo].[wvCountry].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCountry]') IS NULL EXEC('CREATE VIEW [dbo].[wvCountry] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCountry]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from  tng_managedobject a,  tng_country b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvCPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvCPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvCPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvCPU]
AS Select * from  tng_managedobject where class_name = 'CPU'
GO

GO
--SqlScripter----[dbo].[wvdatabaseCounting].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdatabaseCounting]') IS NULL EXEC('CREATE VIEW [dbo].[wvdatabaseCounting] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdatabaseCounting]
AS Select * from  tng_managedobject where class_name = 'databaseCounting'
GO

GO
--SqlScripter----[dbo].[wvdatabaseHeapLog].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdatabaseHeapLog]') IS NULL EXEC('CREATE VIEW [dbo].[wvdatabaseHeapLog] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdatabaseHeapLog]
AS Select * from  tng_managedobject where class_name = 'databaseHeapLog'
GO

GO
--SqlScripter----[dbo].[wvdatabaseSort].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdatabaseSort]') IS NULL EXEC('CREATE VIEW [dbo].[wvdatabaseSort] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdatabaseSort]
AS Select * from  tng_managedobject where class_name = 'databaseSort'
GO

GO
--SqlScripter----[dbo].[wvdatabaseSQLTable].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdatabaseSQLTable]') IS NULL EXEC('CREATE VIEW [dbo].[wvdatabaseSQLTable] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdatabaseSQLTable]
AS Select * from  tng_managedobject where class_name = 'databaseSQLTable'
GO

GO
--SqlScripter----[dbo].[wvDatacomAgt].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDatacomAgt]') IS NULL EXEC('CREATE VIEW [dbo].[wvDatacomAgt] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDatacomAgt]
AS Select * from  tng_managedobject where class_name = 'DatacomAgt'
GO

GO
--SqlScripter----[dbo].[wvDatacomAgtInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDatacomAgtInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvDatacomAgtInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDatacomAgtInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtDatacomAgtInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvdb2Agent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdb2Agent]') IS NULL EXEC('CREATE VIEW [dbo].[wvdb2Agent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdb2Agent]
AS Select * from  tng_managedobject where class_name = 'db2Agent'
GO

GO
--SqlScripter----[dbo].[wvdb2AgentDB2Status].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdb2AgentDB2Status]') IS NULL EXEC('CREATE VIEW [dbo].[wvdb2AgentDB2Status] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdb2AgentDB2Status]
AS Select * from  tng_managedobject where class_name = 'db2AgentDB2Status'
GO

GO
--SqlScripter----[dbo].[wvdb2Manager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdb2Manager]') IS NULL EXEC('CREATE VIEW [dbo].[wvdb2Manager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdb2Manager]
AS Select * from  tng_managedobject where class_name = 'db2Manager'
GO

GO
--SqlScripter----[dbo].[wvdb2ManagerGenDBMemoryStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdb2ManagerGenDBMemoryStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvdb2ManagerGenDBMemoryStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdb2ManagerGenDBMemoryStatus]
AS Select * from  tng_managedobject where class_name = 'db2ManagerGenDBMemoryStatus'
GO

GO
--SqlScripter----[dbo].[wvdb2ManagerGenSortHeap].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdb2ManagerGenSortHeap]') IS NULL EXEC('CREATE VIEW [dbo].[wvdb2ManagerGenSortHeap] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdb2ManagerGenSortHeap]
AS Select * from  tng_managedobject where class_name = 'db2ManagerGenSortHeap'
GO

GO
--SqlScripter----[dbo].[wvDBCacheStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDBCacheStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvDBCacheStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDBCacheStatus]
AS Select * from  tng_managedobject where class_name = 'DBCacheStatus'
GO

GO
--SqlScripter----[dbo].[wvDBMonitors].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDBMonitors]') IS NULL EXEC('CREATE VIEW [dbo].[wvDBMonitors] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDBMonitors]
AS Select * from  tng_managedobject where class_name = 'DBMonitors'
GO

GO
--SqlScripter----[dbo].[wvdceStatAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvdceStatAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvdceStatAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvdceStatAgent]
AS Select * from  tng_managedobject where class_name = 'dceStatAgent'
GO

GO
--SqlScripter----[dbo].[wvDECBridge].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDECBridge]') IS NULL EXEC('CREATE VIEW [dbo].[wvDECBridge] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDECBridge]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtDECBridge r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDECHub].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDECHub]') IS NULL EXEC('CREATE VIEW [dbo].[wvDECHub] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDECHub]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtDECHub r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDECRouter].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDECRouter]') IS NULL EXEC('CREATE VIEW [dbo].[wvDECRouter] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDECRouter]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtDECRouter r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDECSystem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDECSystem]') IS NULL EXEC('CREATE VIEW [dbo].[wvDECSystem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDECSystem]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtDECSystem r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDell_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDell_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvDell_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDell_Device]
AS Select * from  tng_managedobject where class_name = 'Dell_Device'
GO

GO
--SqlScripter----[dbo].[wvDell_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDell_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvDell_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDell_Switch]
AS Select * from  tng_managedobject where class_name = 'Dell_Switch'
GO

GO
--SqlScripter----[dbo].[wvDevice_Disk].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Disk]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Disk] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Disk]
AS Select * from  tng_managedobject where class_name = 'Device_Disk'
GO

GO
--SqlScripter----[dbo].[wvDevice_Disk_350Diskette].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Disk_350Diskette]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Disk_350Diskette] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Disk_350Diskette]
AS Select * from  tng_managedobject where class_name = 'Device_Disk_350Diskette'
GO

GO
--SqlScripter----[dbo].[wvDevice_Disk_525Diskette].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Disk_525Diskette]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Disk_525Diskette] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Disk_525Diskette]
AS Select * from  tng_managedobject where class_name = 'Device_Disk_525Diskette'
GO

GO
--SqlScripter----[dbo].[wvDevice_Disk_IDE].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Disk_IDE]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Disk_IDE] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Disk_IDE]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.weight,m.class_name,r.* from  tng_managedobject m,  wtDevice_Disk_IDE r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDevice_Disk_SCSI].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Disk_SCSI]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Disk_SCSI] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Disk_SCSI]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.weight,m.class_name,r.* from  tng_managedobject m,  wtDevice_Disk_SCSI r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDevice_Optical].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Optical]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Optical] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Optical]
AS Select * from  tng_managedobject where class_name = 'Device_Optical'
GO

GO
--SqlScripter----[dbo].[wvDevice_Optical_CDR].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Optical_CDR]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Optical_CDR] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Optical_CDR]
AS Select * from  tng_managedobject where class_name = 'Device_Optical_CDR'
GO

GO
--SqlScripter----[dbo].[wvDevice_Optical_CDROM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Optical_CDROM]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Optical_CDROM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Optical_CDROM]
AS Select * from  tng_managedobject where class_name = 'Device_Optical_CDROM'
GO

GO
--SqlScripter----[dbo].[wvDevice_Optical_Floptical].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Optical_Floptical]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Optical_Floptical] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Optical_Floptical]
AS Select * from  tng_managedobject where class_name = 'Device_Optical_Floptical'
GO

GO
--SqlScripter----[dbo].[wvDevice_Optical_WORM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Optical_WORM]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Optical_WORM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Optical_WORM]
AS Select * from  tng_managedobject where class_name = 'Device_Optical_WORM'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape]
AS Select * from  tng_managedobject where class_name = 'Device_Tape'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_4MM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_4MM]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_4MM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_4MM]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_4MM'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_8MM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_8MM]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_8MM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_8MM]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_8MM'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_CART].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_CART]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_CART] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_CART]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_CART'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_DAT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_DAT]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_DAT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_DAT]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_DAT'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_DLT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_DLT]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_DLT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_DLT]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_DLT'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_QIC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_QIC]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_QIC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_QIC]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_QIC'
GO

GO
--SqlScripter----[dbo].[wvDevice_Tape_REEL].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_Tape_REEL]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_Tape_REEL] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_Tape_REEL]
AS Select * from  tng_managedobject where class_name = 'Device_Tape_REEL'
GO

GO
--SqlScripter----[dbo].[wvDevice_TapeLibrary].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDevice_TapeLibrary]') IS NULL EXEC('CREATE VIEW [dbo].[wvDevice_TapeLibrary] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDevice_TapeLibrary]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.weight,m.class_name,r.* from  tng_managedobject m,  wtDevice_TapeLibrary r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDG_UX].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDG_UX]') IS NULL EXEC('CREATE VIEW [dbo].[wvDG_UX] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDG_UX]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtDG_UX r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDigital].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDigital]') IS NULL EXEC('CREATE VIEW [dbo].[wvDigital] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDigital]
AS select * from  tng_link where class_name ='Digital'
GO

GO
--SqlScripter----[dbo].[wvDiscovered_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDiscovered_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvDiscovered_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDiscovered_Link]
AS select * from  tng_link where class_name ='Discovered_Link'
GO

GO
--SqlScripter----[dbo].[wvDLink_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDLink_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvDLink_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDLink_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtDLink_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDomain].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDomain]') IS NULL EXEC('CREATE VIEW [dbo].[wvDomain] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDomain]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtDomain r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_BPV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_BPV]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_BPV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_BPV]
AS Select * from  tng_managedobject where class_name = 'DRO_BPV'
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K]
AS Select * from  tng_managedobject where class_name = 'DRO_E10K'
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_CB_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_CB_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_CB_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_CB_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_CB_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Domain_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Domain_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Domain_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Domain_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Domain_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Domains].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Domains]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Domains] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Domains]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Domains r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Fans].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Fans]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Fans] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Fans]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Fans r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Primary_CB].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Primary_CB]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Primary_CB] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Primary_CB]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Primary_CB r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Spare_CB].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Spare_CB]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Spare_CB] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Spare_CB]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Spare_CB r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_SSP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_SSP]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_SSP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_SSP]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_SSP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_SSP_Main].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_SSP_Main]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_SSP_Main] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_SSP_Main]
AS Select * from  tng_managedobject where class_name = 'DRO_E10K_SSP_Main'
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_SSP_Spare].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_SSP_Spare]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_SSP_Spare] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_SSP_Spare]
AS Select * from  tng_managedobject where class_name = 'DRO_E10K_SSP_Spare'
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_System_Board_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_System_Board_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_System_Board_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_System_Board_Folder]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,
m.class_name,r.* 
from  tng_managedobject m,  wtDRO_E10K_System_Board_Folder r 
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_System_Boards].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_System_Boards]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_System_Boards] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_System_Boards]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_System_Boards r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Tray_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Tray_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Tray_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Tray_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Tray_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_E10K_Trays].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_E10K_Trays]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_E10K_Trays] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_E10K_Trays]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_E10K_Trays r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_IBMLPAR].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_IBMLPAR]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_IBMLPAR] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_IBMLPAR]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_IBMLPAR r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PHMC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PHMC]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PHMC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PHMC]
AS Select * from  tng_managedobject where class_name = 'DRO_PHMC'
GO

GO
--SqlScripter----[dbo].[wvDRO_PLCPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PLCPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLCPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLCPU]
AS Select * from  tng_managedobject where class_name = 'DRO_PLCPU'
GO

GO
--SqlScripter----[dbo].[wvDRO_PLFolder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PLFolder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLFolder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLFolder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_PLFolder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PLPAR].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PLPAR]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLPAR] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLPAR]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_PLPAR r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PLPartition].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PLPartition]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLPartition] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLPartition]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_PLPartition r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PLProfile].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PLProfile]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLProfile] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLProfile]
AS Select * from  tng_managedobject where class_name = 'DRO_PLProfile'
GO

GO
--SqlScripter----[dbo].[wvDRO_PLSlot].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_PLSlot]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLSlot] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLSlot]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_PLSlot r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PLVEthernet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[wvDRO_PLVEthernet]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLVEthernet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLVEthernet]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM dbo.tng_managedobject a, dbo.wtDRO_PLVEthernet b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PLVSCSI].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[wvDRO_PLVSCSI]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLVSCSI] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLVSCSI]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM dbo.tng_managedobject a, dbo.wtDRO_PLVSCSI b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_PLVSerial].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[wvDRO_PLVSerial]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_PLVSerial] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_PLVSerial]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM dbo.tng_managedobject a, dbo.wtDRO_PLVSerial b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_Starfire].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_Starfire]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_Starfire] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_Starfire]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_Starfire r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunEnterprise].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunEnterprise]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunEnterprise] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunEnterprise]
AS Select * from  tng_managedobject where class_name = 'DRO_SunEnterprise'
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_CB_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_CB_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_CB_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_CB_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_CB_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_Domain_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_Domain_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_Domain_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_Domain_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_Domain_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_HighEnd r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_Domain].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_Domain]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_Domain] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_Domain]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_HighEnd_Domain r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_Fans].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_Fans]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_Fans] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_Fans]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,
m.class_name,r.* 
from  tng_managedobject m,  wtDRO_SunFire_HighEnd_Fans r 
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_Main_SC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_Main_SC]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_Main_SC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_Main_SC]
AS Select m.name,m.label,m.address,
m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,
m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,
m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,
m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,
m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,
m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,
m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* 
from  tng_managedobject m,  wtDRO_SunFire_HighEnd_Main_SC r
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_SB_CPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_SB_CPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_SB_CPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_SB_CPU]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_HighEnd_SB_CPU r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_SB_IO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_SB_IO]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_SB_IO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_SB_IO]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_HighEnd_SB_IO r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_Spare_SC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_Spare_SC]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_Spare_SC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_Spare_SC]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,
r.* 
from  tng_managedobject m,  wtDRO_SunFire_HighEnd_Spare_SC r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_HighEnd_Trays].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_HighEnd_Trays]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_HighEnd_Trays] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_HighEnd_Trays]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_HighEnd_Trays r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_Domain].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_Domain]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_Domain] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_Domain]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,
r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_Domain r
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_Fans].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_Fans]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_Fans] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_Fans]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_Fans r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_PRI_CB].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_PRI_CB]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_PRI_CB] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_PRI_CB]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,
r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_PRI_CB r
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_SB_CPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_SB_CPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_SB_CPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_SB_CPU]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,
r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_SB_CPU r
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_SB_IO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_SB_IO]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_SB_IO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_SB_IO]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_SB_IO r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_SB_Others].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_SB_Others]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_SB_Others] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_SB_Others]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_SB_Others r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_SPR_CB].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_SPR_CB]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_SPR_CB] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_SPR_CB]
AS Select m.name,m.label,m.address,m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,
m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,
m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,
m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,
m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,
m.class_name,r.* 
from  tng_managedobject m,  wtDRO_SunFire_MidRange_SPR_CB r
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MidRange_Trays].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MidRange_Trays]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MidRange_Trays] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MidRange_Trays]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_MidRange_Trays r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MSP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MSP]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MSP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MSP]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_MSP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_MSP_Main].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_MSP_Main]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_MSP_Main] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_MSP_Main]
AS Select * from  tng_managedobject where class_name = 'DRO_SunFire_MSP_Main'
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_SB_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_SB_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_SB_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_SB_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_SB_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDRO_SunFire_Tray_Folder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDRO_SunFire_Tray_Folder]') IS NULL EXEC('CREATE VIEW [dbo].[wvDRO_SunFire_Tray_Folder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDRO_SunFire_Tray_Folder]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtDRO_SunFire_Tray_Folder r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvDynamicBPV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvDynamicBPV]') IS NULL EXEC('CREATE VIEW [dbo].[wvDynamicBPV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvDynamicBPV]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from  tng_managedobject a,  tng_dbpv b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvELAN].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvELAN]') IS NULL EXEC('CREATE VIEW [dbo].[wvELAN] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvELAN]
AS Select * from  tng_managedobject where class_name = 'ELAN'
GO

GO
--SqlScripter----[dbo].[wvElementManagers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvElementManagers]') IS NULL EXEC('CREATE VIEW [dbo].[wvElementManagers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvElementManagers]
AS Select * from  tng_managedobject where class_name = 'ElementManagers'
GO

GO
--SqlScripter----[dbo].[wvEnterasys_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvEnterasys_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvEnterasys_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvEnterasys_Switch]
AS Select * from  tng_managedobject where class_name = 'Enterasys_Switch'
GO

GO
--SqlScripter----[dbo].[wvEntrasys_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvEntrasys_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvEntrasys_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvEntrasys_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtEntrasys_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepComSMPNodeGroup].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepComSMPNodeGroup]') IS NULL EXEC('CREATE VIEW [dbo].[wvepComSMPNodeGroup] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepComSMPNodeGroup]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.autoarrange_type,r.* from  tng_managedobject m,  wtepComSMPNodeGroup r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_c6].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_c6]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_c6] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_c6]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_c6 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_pc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_pc]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_pc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_pc]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_pc r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_s1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_s1]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_s1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_s1]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_s1 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_s2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_s2]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_s2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_s2]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_s2 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_s3].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_s3]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_s3] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_s3]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_s3 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_s4].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_s4]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_s4] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_s4]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_s4 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_eCS_s5].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_eCS_s5]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_eCS_s5] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_eCS_s5]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_eCS_s5 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_c5].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_c5]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_c5] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_c5]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_c5 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_c8].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_c8]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_c8] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_c8]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_c8 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_pc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_pc]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_pc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_pc]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_pc r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s10].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s10]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s10] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s10]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s10 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s11].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s11]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s11] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s11]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s11 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s12].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s12]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s12] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s12]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s12 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s14].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s14]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s14] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s14]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s14 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s15].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s15]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s15] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s15]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s15 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s2]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s2]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s2 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s3].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s3]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s3] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s3]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s3 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s6].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s6]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s6] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s6]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s6 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_ePortal_s7].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_ePortal_s7]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_ePortal_s7] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_ePortal_s7]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_ePortal_s7 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_iTech_c3].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_iTech_c3]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_iTech_c3] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_iTech_c3]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_iTech_c3 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_iTech_c4].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_iTech_c4]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_iTech_c4] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_iTech_c4]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_iTech_c4 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_iTech_pc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_iTech_pc]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_iTech_pc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_iTech_pc]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_iTech_pc r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_iTech_s5].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_iTech_s5]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_iTech_s5] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_iTech_s5]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_iTech_s5 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_iTech_s7].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_iTech_s7]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_iTech_s7] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_iTech_s7]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_iTech_s7 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_MSWin_c2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_MSWin_c2]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_MSWin_c2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_MSWin_c2]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_MSWin_c2 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_MSWin_c3].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_MSWin_c3]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_MSWin_c3] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_MSWin_c3]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_MSWin_c3 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_MSWin_pc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_MSWin_pc]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_MSWin_pc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_MSWin_pc]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_MSWin_pc r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_MSWin_s1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_MSWin_s1]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_MSWin_s1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_MSWin_s1]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_MSWin_s1 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_TSEnbl_pc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_TSEnbl_pc]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_TSEnbl_pc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_TSEnbl_pc]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_TSEnbl_pc r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorld_TSEnbl_s1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorld_TSEnbl_s1]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorld_TSEnbl_s1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorld_TSEnbl_s1]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.autoarrange_type,m.class_name,r.* from  tng_managedobject m,  wtepWorld_TSEnbl_s1 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorldSpace].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorldSpace]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorldSpace] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorldSpace]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.autoarrange_type,r.* from  tng_managedobject m,  wtepWorldSpace r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvepWorldSpaceRoot].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorldSpaceRoot]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorldSpaceRoot] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorldSpaceRoot]
AS Select * from  tng_managedobject where class_name = 'epWorldSpaceRoot'
GO

GO
--SqlScripter----[dbo].[wvepWorldSpaceUnicenterProfile].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvepWorldSpaceUnicenterProfile]') IS NULL EXEC('CREATE VIEW [dbo].[wvepWorldSpaceUnicenterProfile] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvepWorldSpaceUnicenterProfile]
AS Select * from  tng_managedobject where class_name = 'epWorldSpaceUnicenterProfile'
GO

GO
--SqlScripter----[dbo].[wvEricsson_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvEricsson_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvEricsson_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvEricsson_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtEricsson_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvEthAirNetAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvEthAirNetAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvEthAirNetAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvEthAirNetAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtEthAirNetAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvETSMIM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvETSMIM]') IS NULL EXEC('CREATE VIEW [dbo].[wvETSMIM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvETSMIM]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtETSMIM r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvExtreme_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvExtreme_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvExtreme_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvExtreme_Switch]
AS Select * from  tng_managedobject where class_name = 'Extreme_Switch'
GO

GO
--SqlScripter----[dbo].[wvFlowChart].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFlowChart]') IS NULL EXEC('CREATE VIEW [dbo].[wvFlowChart] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFlowChart]
AS select * from  tng_link where class_name ='FlowChart'
GO

GO
--SqlScripter----[dbo].[wvFolder].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFolder]') IS NULL EXEC('CREATE VIEW [dbo].[wvFolder] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFolder]
AS select * from  tng_managedobject where class_name = 'Folder'
GO

GO
--SqlScripter----[dbo].[wvFore_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFore_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvFore_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFore_Switch]
AS Select * from  tng_managedobject where class_name = 'Fore_Switch'
GO

GO
--SqlScripter----[dbo].[wvFoundry].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFoundry]') IS NULL EXEC('CREATE VIEW [dbo].[wvFoundry] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFoundry]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtFoundry r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvFoundry_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFoundry_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvFoundry_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFoundry_Switch]
AS Select * from  tng_managedobject where class_name = 'Foundry_Switch'
GO

GO
--SqlScripter----[dbo].[wvFrameRelay_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFrameRelay_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvFrameRelay_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFrameRelay_Link]
AS select * from  tng_link where class_name ='FrameRelay_Link'
GO

GO
--SqlScripter----[dbo].[wvFrameRelay_PVC_EndPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFrameRelay_PVC_EndPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvFrameRelay_PVC_EndPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFrameRelay_PVC_EndPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtFrameRelay_PVC_EndPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvFrameRelay_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFrameRelay_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvFrameRelay_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFrameRelay_Switch]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtFrameRelay_Switch r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvFrameRelayTrunk].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFrameRelayTrunk]') IS NULL EXEC('CREATE VIEW [dbo].[wvFrameRelayTrunk] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFrameRelayTrunk]
AS Select r.* from  tng_managedobject m,  wtFrameRelayTrunk r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvfrLink].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvfrLink]') IS NULL EXEC('CREATE VIEW [dbo].[wvfrLink] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvfrLink]
AS Select r.* from  tng_managedobject m,  wtfrLink r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvFUJIUxp].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFUJIUxp]') IS NULL EXEC('CREATE VIEW [dbo].[wvFUJIUxp] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFUJIUxp]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtFUJIUxp r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvFuture].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvFuture]') IS NULL EXEC('CREATE VIEW [dbo].[wvFuture] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvFuture]
AS select * from  tng_link where class_name ='Future'
GO

GO
--SqlScripter----[dbo].[wvGanttChart].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvGanttChart]') IS NULL EXEC('CREATE VIEW [dbo].[wvGanttChart] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvGanttChart]
AS select * from  tng_link where class_name ='GanttChart'
GO

GO
--SqlScripter----[dbo].[wvGatorStar].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvGatorStar]') IS NULL EXEC('CREATE VIEW [dbo].[wvGatorStar] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvGatorStar]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtGatorStar r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvGenericPC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvGenericPC]') IS NULL EXEC('CREATE VIEW [dbo].[wvGenericPC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvGenericPC]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtGenericPC r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvGray_Office_Park].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvGray_Office_Park]') IS NULL EXEC('CREATE VIEW [dbo].[wvGray_Office_Park] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvGray_Office_Park]
AS Select * from  tng_managedobject where class_name = 'Gray_Office_Park'
GO

GO
--SqlScripter----[dbo].[wvHawking_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHawking_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvHawking_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHawking_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtHawking_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHitachi_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHitachi_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvHitachi_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHitachi_Device]
AS Select * from  tng_managedobject where class_name = 'Hitachi_Device'
GO

GO
--SqlScripter----[dbo].[wvHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHost]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtHost r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHP_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHP_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvHP_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHP_Device]
AS Select * from  tng_managedobject where class_name = 'HP_Device'
GO

GO
--SqlScripter----[dbo].[wvHP_Printer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHP_Printer]') IS NULL EXEC('CREATE VIEW [dbo].[wvHP_Printer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHP_Printer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtHP_Printer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHP_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHP_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvHP_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHP_Switch]
AS Select * from  tng_managedobject where class_name = 'HP_Switch'
GO

GO
--SqlScripter----[dbo].[wvHPBridge].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHPBridge]') IS NULL EXEC('CREATE VIEW [dbo].[wvHPBridge] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHPBridge]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtHPBridge r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHpeNgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHpeNgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvHpeNgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHpeNgent]
AS Select * from  tng_managedobject where class_name = 'HpeNgent'
GO

GO
--SqlScripter----[dbo].[wvHPHub].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHPHub]') IS NULL EXEC('CREATE VIEW [dbo].[wvHPHub] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHPHub]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtHPHub r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHPServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHPServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvHPServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHPServer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtHPServer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHPUnix].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHPUnix]') IS NULL EXEC('CREATE VIEW [dbo].[wvHPUnix] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHPUnix]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtHPUnix r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvHpxAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHpxAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvHpxAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHpxAgent]
AS Select * from  tng_managedobject where class_name = 'HpxAgent'
GO

GO
--SqlScripter----[dbo].[wvHTTP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHTTP]') IS NULL EXEC('CREATE VIEW [dbo].[wvHTTP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHTTP]
AS Select * from  tng_managedobject where class_name = 'HTTP'
GO

GO
--SqlScripter----[dbo].[wvHub].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvHub]') IS NULL EXEC('CREATE VIEW [dbo].[wvHub] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvHub]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtHub r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIBM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtIBM r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIBM_8260].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_8260]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_8260] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_8260]
AS Select * from  tng_managedobject where class_name = 'IBM_8260'
GO

GO
--SqlScripter----[dbo].[wvIBM_8265].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_8265]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_8265] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_8265]
AS Select * from  tng_managedobject where class_name = 'IBM_8265'
GO

GO
--SqlScripter----[dbo].[wvIBM_8271].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_8271]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_8271] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_8271]
AS Select * from  tng_managedobject where class_name = 'IBM_8271'
GO

GO
--SqlScripter----[dbo].[wvIBM_8371].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_8371]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_8371] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_8371]
AS Select * from  tng_managedobject where class_name = 'IBM_8371'
GO

GO
--SqlScripter----[dbo].[wvIBM_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_Access_Point]
AS Select m.name,m.label,m.address, m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity, 
m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins, m.date_modify,
m.code_page,m.admin_status,m.DSM_Server, m.propagated_status_no,m.propagated_sev,m.DSM_Address, m.license_machine_type,m.create_bpv,
m.override_imagedecal, m.override_imagetintbool,m.override_model,m.background_image,m.weight, m.weighted_severity,m.Max_Sev,m.user_reclass,
m.Asset_uuid, m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer, m.class_name,m.override_imagelarge,m.override_imagesmall, 
m.interface_type,m.subnet_mask,m.ip_address_hex,r.* 
from  tng_managedobject m,  wtIBM_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIBM_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_Device]
AS Select * from  tng_managedobject where class_name = 'IBM_Device'
GO

GO
--SqlScripter----[dbo].[wvIBM_MSS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM_MSS]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM_MSS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM_MSS]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtIBM_MSS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIBM3090].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIBM3090]') IS NULL EXEC('CREATE VIEW [dbo].[wvIBM3090] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIBM3090]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtIBM3090 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvICLUnix].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvICLUnix]') IS NULL EXEC('CREATE VIEW [dbo].[wvICLUnix] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvICLUnix]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtICLUnix r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvICSSNMP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvICSSNMP]') IS NULL EXEC('CREATE VIEW [dbo].[wvICSSNMP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvICSSNMP]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtICSSNMP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIdmsAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIdmsAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvIdmsAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIdmsAgent]
AS Select * from  tng_managedobject where class_name = 'IdmsAgent'
GO

GO
--SqlScripter----[dbo].[wvIdmsInstance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIdmsInstance]') IS NULL EXEC('CREATE VIEW [dbo].[wvIdmsInstance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIdmsInstance]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtIdmsInstance r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvImxAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvImxAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvImxAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvImxAgent]
AS Select * from  tng_managedobject where class_name = 'ImxAgent'
GO

GO
--SqlScripter----[dbo].[wvImxAgentInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvImxAgentInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvImxAgentInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvImxAgentInst]
AS Select * from  tng_managedobject where class_name = 'ImxAgentInst'
GO

GO
--SqlScripter----[dbo].[wvInformix].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvInformix]') IS NULL EXEC('CREATE VIEW [dbo].[wvInformix] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvInformix]
AS Select * from  tng_managedobject where class_name = 'Informix'
GO

GO
--SqlScripter----[dbo].[wvIngAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIngAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvIngAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIngAgent]
AS Select * from  tng_managedobject where class_name = 'IngAgent'
GO

GO
--SqlScripter----[dbo].[wvIngres].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIngres]') IS NULL EXEC('CREATE VIEW [dbo].[wvIngres] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIngres]
AS Select * from  tng_managedobject where class_name = 'Ingres'
GO

GO
--SqlScripter----[dbo].[wvintegrity].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvintegrity]') IS NULL EXEC('CREATE VIEW [dbo].[wvintegrity] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvintegrity]
AS Select * from  tng_managedobject where class_name = 'integrity'
GO

GO
--SqlScripter----[dbo].[wvIntel_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIntel_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvIntel_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIntel_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtIntel_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIntel_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIntel_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvIntel_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIntel_Device]
AS Select * from  tng_managedobject where class_name = 'Intel_Device'
GO

GO
--SqlScripter----[dbo].[wvIntel_PSN].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIntel_PSN]') IS NULL EXEC('CREATE VIEW [dbo].[wvIntel_PSN] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIntel_PSN]
AS Select * from  tng_managedobject where class_name = 'Intel_PSN'
GO

GO
--SqlScripter----[dbo].[wvInterActive].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvInterActive]') IS NULL EXEC('CREATE VIEW [dbo].[wvInterActive] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvInterActive]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtInterActive r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIntergraph_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIntergraph_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvIntergraph_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIntergraph_Device]
AS Select * from  tng_managedobject where class_name = 'Intergraph_Device'
GO

GO
--SqlScripter----[dbo].[wvIP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIP]') IS NULL EXEC('CREATE VIEW [dbo].[wvIP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIP]
AS Select * from  tng_managedobject where class_name = 'IP'
GO

GO
--SqlScripter----[dbo].[wvIP_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIP_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvIP_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIP_Interface]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from  tng_managedobject a,  tng_ip_interface b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvIP_Network].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIP_Network]') IS NULL EXEC('CREATE VIEW [dbo].[wvIP_Network] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIP_Network]
AS select * from  tng_managedobject where class_name = 'IP_Network'
GO

GO
--SqlScripter----[dbo].[wvIP_Phone].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIP_Phone]') IS NULL EXEC('CREATE VIEW [dbo].[wvIP_Phone] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIP_Phone]
AS Select * from  tng_managedobject where class_name = 'IP_Phone'
GO

GO
--SqlScripter----[dbo].[wvIP_Subnet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIP_Subnet]') IS NULL EXEC('CREATE VIEW [dbo].[wvIP_Subnet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIP_Subnet]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from tng_managedobject a,  tng_IP_Subnet b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvIPX_Bus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIPX_Bus]') IS NULL EXEC('CREATE VIEW [dbo].[wvIPX_Bus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIPX_Bus]
AS Select * from  tng_managedobject where class_name = 'IPX_Bus'
GO

GO
--SqlScripter----[dbo].[wvIPX_Domain].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIPX_Domain]') IS NULL EXEC('CREATE VIEW [dbo].[wvIPX_Domain] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIPX_Domain]
AS Select * from  tng_managedobject where class_name = 'IPX_Domain'
GO

GO
--SqlScripter----[dbo].[wvIPX_Generic_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIPX_Generic_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvIPX_Generic_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIPX_Generic_Interface]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtIPX_Generic_Interface r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIPX_Host].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIPX_Host]') IS NULL EXEC('CREATE VIEW [dbo].[wvIPX_Host] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIPX_Host]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtIPX_Host r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIPX_Network].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIPX_Network]') IS NULL EXEC('CREATE VIEW [dbo].[wvIPX_Network] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIPX_Network]
AS Select * from  tng_managedobject where class_name = 'IPX_Network'
GO

GO
--SqlScripter----[dbo].[wvIPX_PrintServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIPX_PrintServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvIPX_PrintServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIPX_PrintServer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtIPX_PrintServer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvIRM2SNMP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvIRM2SNMP]') IS NULL EXEC('CREATE VIEW [dbo].[wvIRM2SNMP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvIRM2SNMP]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtIRM2SNMP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvKarlNetAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvKarlNetAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvKarlNetAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvKarlNetAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtKarlNetAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLANE].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLANE]') IS NULL EXEC('CREATE VIEW [dbo].[wvLANE] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLANE]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtLANE r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLANManager_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLANManager_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvLANManager_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLANManager_Device]
AS Select * from  tng_managedobject where class_name = 'LANManager_Device'
GO

GO
--SqlScripter----[dbo].[wvLanProbe].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLanProbe]') IS NULL EXEC('CREATE VIEW [dbo].[wvLanProbe] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLanProbe]
AS Select * from  tng_managedobject where class_name = 'LanProbe'
GO

GO
--SqlScripter----[dbo].[wvLarge_Brownstone].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLarge_Brownstone]') IS NULL EXEC('CREATE VIEW [dbo].[wvLarge_Brownstone] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLarge_Brownstone]
AS Select * from  tng_managedobject where class_name = 'Large_Brownstone'
GO

GO
--SqlScripter----[dbo].[wvLarge_Factory].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLarge_Factory]') IS NULL EXEC('CREATE VIEW [dbo].[wvLarge_Factory] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLarge_Factory]
AS Select * from  tng_managedobject where class_name = 'Large_Factory'
GO

GO
--SqlScripter----[dbo].[wvLarge_Warehouse].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLarge_Warehouse]') IS NULL EXEC('CREATE VIEW [dbo].[wvLarge_Warehouse] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLarge_Warehouse]
AS Select * from  tng_managedobject where class_name = 'Large_Warehouse'
GO

GO
--SqlScripter----[dbo].[wvLargeCity].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLargeCity]') IS NULL EXEC('CREATE VIEW [dbo].[wvLargeCity] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLargeCity]
AS Select * from  tng_managedobject where class_name = 'LargeCity'
GO

GO
--SqlScripter----[dbo].[wvLaserPrinter].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLaserPrinter]') IS NULL EXEC('CREATE VIEW [dbo].[wvLaserPrinter] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLaserPrinter]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtLaserPrinter r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLEC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLEC]') IS NULL EXEC('CREATE VIEW [dbo].[wvLEC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLEC]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,r.* from  tng_managedobject m,  wtLEC r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLECAGENT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLECAGENT]') IS NULL EXEC('CREATE VIEW [dbo].[wvLECAGENT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLECAGENT]
AS Select * from  tng_managedobject where class_name = 'LECAGENT'
GO

GO
--SqlScripter----[dbo].[wvLECS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLECS]') IS NULL EXEC('CREATE VIEW [dbo].[wvLECS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLECS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,r.* from  tng_managedobject m,  wtLECS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLECSAGENT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLECSAGENT]') IS NULL EXEC('CREATE VIEW [dbo].[wvLECSAGENT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLECSAGENT]
AS Select * from  tng_managedobject where class_name = 'LECSAGENT'
GO

GO
--SqlScripter----[dbo].[wvLES].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLES]') IS NULL EXEC('CREATE VIEW [dbo].[wvLES] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLES]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,r.* from  tng_managedobject m,  wtLES r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLESAGENT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLESAGENT]') IS NULL EXEC('CREATE VIEW [dbo].[wvLESAGENT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLESAGENT]
AS Select * from  tng_managedobject where class_name = 'LESAGENT'
GO

GO
--SqlScripter----[dbo].[wvLinksysAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLinksysAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvLinksysAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLinksysAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtLinksysAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvLinux].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLinux]') IS NULL EXEC('CREATE VIEW [dbo].[wvLinux] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLinux]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtLinux r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvlockCurrentHeld].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvlockCurrentHeld]') IS NULL EXEC('CREATE VIEW [dbo].[wvlockCurrentHeld] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvlockCurrentHeld]
AS Select * from  tng_managedobject where class_name = 'lockCurrentHeld'
GO

GO
--SqlScripter----[dbo].[wvlockEscStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvlockEscStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvlockEscStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvlockEscStatus]
AS Select * from  tng_managedobject where class_name = 'lockEscStatus'
GO

GO
--SqlScripter----[dbo].[wvlocking].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvlocking]') IS NULL EXEC('CREATE VIEW [dbo].[wvlocking] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvlocking]
AS Select * from  tng_managedobject where class_name = 'locking'
GO

GO
--SqlScripter----[dbo].[wvlockMemStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvlockMemStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvlockMemStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvlockMemStatus]
AS Select * from  tng_managedobject where class_name = 'lockMemStatus'
GO

GO
--SqlScripter----[dbo].[wvlockTimeOut].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvlockTimeOut]') IS NULL EXEC('CREATE VIEW [dbo].[wvlockTimeOut] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvlockTimeOut]
AS Select * from  tng_managedobject where class_name = 'lockTimeOut'
GO

GO
--SqlScripter----[dbo].[wvlockXEscStatus].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvlockXEscStatus]') IS NULL EXEC('CREATE VIEW [dbo].[wvlockXEscStatus] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvlockXEscStatus]
AS Select * from  tng_managedobject where class_name = 'lockXEscStatus'
GO

GO
--SqlScripter----[dbo].[wvLogAgent_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLogAgent_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvLogAgent_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLogAgent_v30]
AS Select * from  tng_managedobject where class_name = 'LogAgent_v30'
GO

GO
--SqlScripter----[dbo].[wvLogAgentNT_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLogAgentNT_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvLogAgentNT_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLogAgentNT_v30]
AS Select * from  tng_managedobject where class_name = 'LogAgentNT_v30'
GO

GO
--SqlScripter----[dbo].[wvLogAgentTand_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLogAgentTand_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvLogAgentTand_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLogAgentTand_v30]
AS Select * from  tng_managedobject where class_name = 'LogAgentTand_v30'
GO

GO
--SqlScripter----[dbo].[wvLUN].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvLUN]') IS NULL EXEC('CREATE VIEW [dbo].[wvLUN] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvLUN]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.weight,m.class_name,r.* from  tng_managedobject m,  wtLUN r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMacintosh].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMacintosh]') IS NULL EXEC('CREATE VIEW [dbo].[wvMacintosh] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMacintosh]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtMacintosh r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvManagedObject].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvManagedObject]') IS NULL EXEC('CREATE VIEW [dbo].[wvManagedObject] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvManagedObject]
AS select * from  tng_managedobject
GO

GO
--SqlScripter----[dbo].[wvManagedObjectRoot].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvManagedObjectRoot]') IS NULL EXEC('CREATE VIEW [dbo].[wvManagedObjectRoot] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvManagedObjectRoot]
AS select * from  tng_managedobject where class_name = 'ManagedObjectRoot'
GO

GO
--SqlScripter----[dbo].[wvManagedPC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvManagedPC]') IS NULL EXEC('CREATE VIEW [dbo].[wvManagedPC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvManagedPC]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtManagedPC r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvmaxHeapUsed].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmaxHeapUsed]') IS NULL EXEC('CREATE VIEW [dbo].[wvmaxHeapUsed] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmaxHeapUsed]
AS Select * from  tng_managedobject where class_name = 'maxHeapUsed'
GO

GO
--SqlScripter----[dbo].[wvmaxTotalLog].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmaxTotalLog]') IS NULL EXEC('CREATE VIEW [dbo].[wvmaxTotalLog] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmaxTotalLog]
AS Select * from  tng_managedobject where class_name = 'maxTotalLog'
GO

GO
--SqlScripter----[dbo].[wvMcData_EFCManager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMcData_EFCManager]') IS NULL EXEC('CREATE VIEW [dbo].[wvMcData_EFCManager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMcData_EFCManager]
AS Select * from  tng_managedobject where class_name = 'McData_EFCManager'
GO

GO
--SqlScripter----[dbo].[wvMedium_Brownstone].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMedium_Brownstone]') IS NULL EXEC('CREATE VIEW [dbo].[wvMedium_Brownstone] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMedium_Brownstone]
AS Select * from  tng_managedobject where class_name = 'Medium_Brownstone'
GO

GO
--SqlScripter----[dbo].[wvMedium_Warehouse].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMedium_Warehouse]') IS NULL EXEC('CREATE VIEW [dbo].[wvMedium_Warehouse] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMedium_Warehouse]
AS Select * from  tng_managedobject where class_name = 'Medium_Warehouse'
GO

GO
--SqlScripter----[dbo].[wvMediumCity].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMediumCity]') IS NULL EXEC('CREATE VIEW [dbo].[wvMediumCity] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMediumCity]
AS Select * from  tng_managedobject where class_name = 'MediumCity'
GO

GO
--SqlScripter----[dbo].[wvMib2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMib2]') IS NULL EXEC('CREATE VIEW [dbo].[wvMib2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMib2]
AS Select * from  tng_managedobject where class_name = 'Mib2'
GO

GO
--SqlScripter----[dbo].[wvMicom].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMicom]') IS NULL EXEC('CREATE VIEW [dbo].[wvMicom] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMicom]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMicom r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMicrosoftADSDevice].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMicrosoftADSDevice]') IS NULL EXEC('CREATE VIEW [dbo].[wvMicrosoftADSDevice] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMicrosoftADSDevice]
AS SELECT a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, AMSServer, EMServer, b.* FROM  tng_managedobject a,  wtMicrosoftADSDevice b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvMicrosoftADSDevice_2000].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMicrosoftADSDevice_2000]') IS NULL EXEC('CREATE VIEW [dbo].[wvMicrosoftADSDevice_2000] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMicrosoftADSDevice_2000]
AS SELECT * FROM  tng_managedobject a where class_name = 'MicrosoftADSDevice_2000'
GO

GO
--SqlScripter----[dbo].[wvMicrosoftADSDevice_2003].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMicrosoftADSDevice_2003]') IS NULL EXEC('CREATE VIEW [dbo].[wvMicrosoftADSDevice_2003] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMicrosoftADSDevice_2003]
AS SELECT * FROM  tng_managedobject a where class_name = 'MicrosoftADSDevice_2003'
GO

GO
--SqlScripter----[dbo].[wvmkAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkAgent]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtmkAgent r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvmkExpInv].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkExpInv]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkExpInv] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkExpInv]
AS Select * from  tng_managedobject where class_name = 'mkExpInv'
GO

GO
--SqlScripter----[dbo].[wvmkInvExp].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkInvExp]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkInvExp] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkInvExp]
AS Select * from  tng_managedobject where class_name = 'mkInvExp'
GO

GO
--SqlScripter----[dbo].[wvmkLateCustPay].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkLateCustPay]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkLateCustPay] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkLateCustPay]
AS Select * from  tng_managedobject where class_name = 'mkLateCustPay'
GO

GO
--SqlScripter----[dbo].[wvmkLateCustShip].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkLateCustShip]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkLateCustShip] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkLateCustShip]
AS Select * from  tng_managedobject where class_name = 'mkLateCustShip'
GO

GO
--SqlScripter----[dbo].[wvmkLateProdOrd].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkLateProdOrd]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkLateProdOrd] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkLateProdOrd]
AS Select * from  tng_managedobject where class_name = 'mkLateProdOrd'
GO

GO
--SqlScripter----[dbo].[wvmkLateVendShip].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvmkLateVendShip]') IS NULL EXEC('CREATE VIEW [dbo].[wvmkLateVendShip] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvmkLateVendShip]
AS Select * from  tng_managedobject where class_name = 'mkLateVendShip'
GO

GO
--SqlScripter----[dbo].[wvMmoAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMmoAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvMmoAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMmoAgent]
AS Select * from  tng_managedobject where class_name = 'MmoAgent'
GO

GO
--SqlScripter----[dbo].[wvMmoAgentInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMmoAgentInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMmoAgentInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMmoAgentInst]
AS Select * from  tng_managedobject where class_name = 'MmoAgentInst'
GO

GO
--SqlScripter----[dbo].[wvMmsAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMmsAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvMmsAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMmsAgent]
AS Select * from  tng_managedobject where class_name = 'MmsAgent'
GO

GO
--SqlScripter----[dbo].[wvMmsAgentInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMmsAgentInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMmsAgentInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMmsAgentInst]
AS Select * from  tng_managedobject where class_name = 'MmsAgentInst'
GO

GO
--SqlScripter----[dbo].[wvMMsapAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMMsapAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvMMsapAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMMsapAgent]
AS Select * from  tng_managedobject where class_name = 'MMsapAgent'
GO

GO
--SqlScripter----[dbo].[wvMobileDevice].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMobileDevice]') IS NULL EXEC('CREATE VIEW [dbo].[wvMobileDevice] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMobileDevice]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtMobileDevice r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqAliasQ].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqAliasQ]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqAliasQ] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqAliasQ]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqAliasQ r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqAliasQInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqAliasQInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqAliasQInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqAliasQInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqAliasQInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqChanInit].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqChanInit]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqChanInit] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqChanInit]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqChanInit r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqChanInitInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqChanInitInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqChanInitInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqChanInitInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqChanInitInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqChannel].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqChannel]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqChannel] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqChannel]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqChannel r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqChannelInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqChannelInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqChannelInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqChannelInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqChannelInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqDLQ].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqDLQ]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqDLQ] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqDLQ]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqDLQ r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqDLQInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqDLQInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqDLQInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqDLQInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqDLQInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqMgr].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqMgr]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqMgr] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqMgr]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqMgr r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqMgrInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqMgrInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqMgrInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqMgrInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqMgrInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqModelQ].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqModelQ]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqModelQ] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqModelQ]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqModelQ r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqModelQInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqModelQInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqModelQInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqModelQInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqModelQInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqProcess].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqProcess]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqProcess] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqProcess]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqProcess r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqProcessInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqProcessInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqProcessInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqProcessInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqProcessInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqPSID].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqPSID]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqPSID] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqPSID]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqPSID r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqPSIDInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqPSIDInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqPSIDInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqPSIDInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqPSIDInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqQueue].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqQueue]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqQueue] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqQueue]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqQueue r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqQueueInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqQueueInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqQueueInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqQueueInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqQueueInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqRemoteQ].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqRemoteQ]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqRemoteQ] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqRemoteQ]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqRemoteQ r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqRemoteQInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqRemoteQInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqRemoteQInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqRemoteQInst]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqRemoteQInst r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMqRoute].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqRoute]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqRoute] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqRoute]
AS Select * from  tng_managedobject where class_name = 'MqRoute'
GO

GO
--SqlScripter----[dbo].[wvMqRouteInst].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqRouteInst]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqRouteInst] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqRouteInst]
AS Select * from  tng_managedobject where class_name = 'MqRouteInst'
GO

GO
--SqlScripter----[dbo].[wvMqsInstance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMqsInstance]') IS NULL EXEC('CREATE VIEW [dbo].[wvMqsInstance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMqsInstance]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMqsInstance r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMSSQLServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMSSQLServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvMSSQLServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMSSQLServer]
AS Select * from  tng_managedobject where class_name = 'MSSQLServer'
GO

GO
--SqlScripter----[dbo].[wvMulti_Port].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMulti_Port]') IS NULL EXEC('CREATE VIEW [dbo].[wvMulti_Port] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMulti_Port]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtMulti_Port r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMulti_Protocol_Host].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMulti_Protocol_Host]') IS NULL EXEC('CREATE VIEW [dbo].[wvMulti_Protocol_Host] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMulti_Protocol_Host]
AS Select * from  tng_managedobject where class_name = 'Multi_Protocol_Host'
GO

GO
--SqlScripter----[dbo].[wvMultiNet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMultiNet]') IS NULL EXEC('CREATE VIEW [dbo].[wvMultiNet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMultiNet]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtMultiNet r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvMultiNet_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMultiNet_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvMultiNet_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMultiNet_Device]
AS Select * from  tng_managedobject where class_name = 'MultiNet_Device'
GO

GO
--SqlScripter----[dbo].[wvMvsInstance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvMvsInstance]') IS NULL EXEC('CREATE VIEW [dbo].[wvMvsInstance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvMvsInstance]
AS Select * from  tng_managedobject where class_name = 'MvsInstance'
GO

GO
--SqlScripter----[dbo].[wvNBase_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNBase_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvNBase_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNBase_Switch]
AS Select * from  tng_managedobject where class_name = 'NBase_Switch'
GO

GO
--SqlScripter----[dbo].[wvNCD_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNCD_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvNCD_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNCD_Device]
AS Select * from  tng_managedobject where class_name = 'NCD_Device'
GO

GO
--SqlScripter----[dbo].[wvNCD17c].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNCD17c]') IS NULL EXEC('CREATE VIEW [dbo].[wvNCD17c] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNCD17c]
AS Select * from  tng_managedobject where class_name = 'NCD17c'
GO

GO
--SqlScripter----[dbo].[wvNCR_Xterm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNCR_Xterm]') IS NULL EXEC('CREATE VIEW [dbo].[wvNCR_Xterm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNCR_Xterm]
AS Select * from  tng_managedobject where class_name = 'NCR_Xterm'
GO

GO
--SqlScripter----[dbo].[wvNCRUnix].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNCRUnix]') IS NULL EXEC('CREATE VIEW [dbo].[wvNCRUnix] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNCRUnix]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtNCRUnix r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNEC_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNEC_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvNEC_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNEC_Device]
AS Select * from  tng_managedobject where class_name = 'NEC_Device'
GO

GO
--SqlScripter----[dbo].[wvNetBIOSIP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetBIOSIP]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetBIOSIP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetBIOSIP]
AS Select * from  tng_managedobject where class_name = 'NetBIOSIP'
GO

GO
--SqlScripter----[dbo].[wvNetBIOSIPServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetBIOSIPServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetBIOSIPServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetBIOSIPServers]
AS Select * from  tng_managedobject where class_name = 'NetBIOSIPServers'
GO

GO
--SqlScripter----[dbo].[wvNetBotz_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetBotz_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetBotz_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetBotz_Device]
AS Select * from  tng_managedobject where class_name = 'NetBotz_Device'
GO

GO
--SqlScripter----[dbo].[wvNetgearAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetgearAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetgearAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetgearAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtNetgearAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNetGeneral].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetGeneral]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetGeneral] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetGeneral]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtNetGeneral r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNetJet_PrinterServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetJet_PrinterServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetJet_PrinterServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetJet_PrinterServer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtNetJet_PrinterServer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNetQue_PrinterServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetQue_PrinterServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetQue_PrinterServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetQue_PrinterServer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtNetQue_PrinterServer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNetScout].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetScout]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetScout] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetScout]
AS Select * from  tng_managedobject where class_name = 'NetScout'
GO

GO
--SqlScripter----[dbo].[wvNetSNMP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetSNMP]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetSNMP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetSNMP]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtNetSNMP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNetwork].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetwork]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetwork] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetwork]
AS select * from  tng_managedobject where class_name = 'Network'
GO

GO
--SqlScripter----[dbo].[wvNetwork_Connectivity].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetwork_Connectivity]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetwork_Connectivity] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetwork_Connectivity]
AS Select * from  tng_managedobject where class_name = 'Network_Connectivity'
GO

GO
--SqlScripter----[dbo].[wvNetWorth].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNetWorth]') IS NULL EXEC('CREATE VIEW [dbo].[wvNetWorth] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNetWorth]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtNetWorth r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNeugent_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNeugent_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvNeugent_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNeugent_Interface]
AS Select * from  tng_managedobject where class_name = 'Neugent_Interface'
GO

GO
--SqlScripter----[dbo].[wvNeugentBase].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNeugentBase]') IS NULL EXEC('CREATE VIEW [dbo].[wvNeugentBase] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNeugentBase]
AS Select * from  tng_managedobject where class_name = 'NeugentBase'
GO

GO
--SqlScripter----[dbo].[wvNeugentDevices].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNeugentDevices]') IS NULL EXEC('CREATE VIEW [dbo].[wvNeugentDevices] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNeugentDevices]
AS Select * from  tng_managedobject where class_name = 'NeugentDevices'
GO

GO
--SqlScripter----[dbo].[wvNeugentRouter].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNeugentRouter]') IS NULL EXEC('CREATE VIEW [dbo].[wvNeugentRouter] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNeugentRouter]
AS Select * from  tng_managedobject where class_name = 'NeugentRouter'
GO

GO
--SqlScripter----[dbo].[wvNGSniffer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNGSniffer]') IS NULL EXEC('CREATE VIEW [dbo].[wvNGSniffer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNGSniffer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtNGSniffer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNode].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNode]') IS NULL EXEC('CREATE VIEW [dbo].[wvNode] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNode]
AS select * from  tng_managedobject where class_name = 'Node'
GO

GO
--SqlScripter----[dbo].[wvNortel_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNortel_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvNortel_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNortel_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtNortel_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNovell].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNovell]') IS NULL EXEC('CREATE VIEW [dbo].[wvNovell] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNovell]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtNovell r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvNovell_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNovell_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvNovell_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNovell_Device]
AS Select * from  tng_managedobject where class_name = 'Novell_Device'
GO

GO
--SqlScripter----[dbo].[wvNovell_Probe].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNovell_Probe]') IS NULL EXEC('CREATE VIEW [dbo].[wvNovell_Probe] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNovell_Probe]
AS Select * from  tng_managedobject where class_name = 'Novell_Probe'
GO

GO
--SqlScripter----[dbo].[wvNovellHub].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvNovellHub]') IS NULL EXEC('CREATE VIEW [dbo].[wvNovellHub] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvNovellHub]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtNovellHub r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvnpoTrapAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvnpoTrapAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvnpoTrapAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvnpoTrapAgent]
AS Select * from  tng_managedobject where class_name = 'npoTrapAgent'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtOpenVMS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_CCI].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_CCI]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_CCI] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_CCI]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_CCI'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_CommonMgr].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_CommonMgr]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_CommonMgr] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_CommonMgr]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_CommonMgr'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_ConsoleEventDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_ConsoleEventDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_ConsoleEventDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_ConsoleEventDaemon]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_ConsoleEventDaemon'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_ConsoleMgr].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_ConsoleMgr]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_ConsoleMgr] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_ConsoleMgr]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_ConsoleMgr'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_ENF].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_ENF]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_ENF] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_ENF]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_ENF'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_EventLinksDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_EventLinksDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_EventLinksDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_EventLinksDaemon]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_EventLinksDaemon'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_EventManagementDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_EventManagementDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_EventManagementDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_EventManagementDaemon]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_EventManagementDaemon'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_GatewayDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_GatewayDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_GatewayDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_GatewayDaemon]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_GatewayDaemon'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_JobflowDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_JobflowDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_JobflowDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_JobflowDaemon]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_JobflowDaemon'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_PerformanceAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_PerformanceAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_PerformanceAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_PerformanceAgent]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_PerformanceAgent'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_PerformanceCubeDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_PerformanceCubeDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_PerformanceCubeDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_PerformanceCubeDaemon]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_PerformanceCubeDaemon'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_PerformanceMgr].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_PerformanceMgr]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_PerformanceMgr] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_PerformanceMgr]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_PerformanceMgr'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_System_Monitor].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_System_Monitor]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_System_Monitor] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_System_Monitor]
AS Select m.name,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.label,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtOpenVMS_System_Monitor r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_SystemMonitor].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_SystemMonitor]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_SystemMonitor] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_SystemMonitor]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_SystemMonitor'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_WorkloadAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_WorkloadAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_WorkloadAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_WorkloadAgent]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_WorkloadAgent'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_WorkloadAgentX].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_WorkloadAgentX]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_WorkloadAgentX] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_WorkloadAgentX]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_WorkloadAgentX'
GO

GO
--SqlScripter----[dbo].[wvOpenVMS_WorkloadMgr].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOpenVMS_WorkloadMgr]') IS NULL EXEC('CREATE VIEW [dbo].[wvOpenVMS_WorkloadMgr] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOpenVMS_WorkloadMgr]
AS Select * from  tng_managedobject where class_name = 'OpenVMS_WorkloadMgr'
GO

GO
--SqlScripter----[dbo].[wvOraAgtVMS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOraAgtVMS]') IS NULL EXEC('CREATE VIEW [dbo].[wvOraAgtVMS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOraAgtVMS]
AS Select * from  tng_managedobject where class_name = 'OraAgtVMS'
GO

GO
--SqlScripter----[dbo].[wvOracle].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOracle]') IS NULL EXEC('CREATE VIEW [dbo].[wvOracle] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOracle]
AS Select * from  tng_managedobject where class_name = 'Oracle'
GO

GO
--SqlScripter----[dbo].[wvOracle_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOracle_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvOracle_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOracle_Device]
AS Select * from  tng_managedobject where class_name = 'Oracle_Device'
GO

GO
--SqlScripter----[dbo].[wvOrinocoAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOrinocoAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvOrinocoAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOrinocoAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtOrinocoAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOS2].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOS2]') IS NULL EXEC('CREATE VIEW [dbo].[wvOS2] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOS2]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtOS2 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOsAgent_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOsAgent_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvOsAgent_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOsAgent_v30]
AS Select * from  tng_managedobject where class_name = 'OsAgent_v30'
GO

GO
--SqlScripter----[dbo].[wvOsAgentTand_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOsAgentTand_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvOsAgentTand_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOsAgentTand_v30]
AS Select * from  tng_managedobject where class_name = 'OsAgentTand_v30'
GO

GO
--SqlScripter----[dbo].[wvOSPF_Area].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOSPF_Area]') IS NULL EXEC('CREATE VIEW [dbo].[wvOSPF_Area] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOSPF_Area]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtOSPF_Area r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOSPF_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOSPF_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvOSPF_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOSPF_Link]
AS Select r.* from  tng_managedobject m,  wtOSPF_Link r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOSPF_Router].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOSPF_Router]') IS NULL EXEC('CREATE VIEW [dbo].[wvOSPF_Router] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOSPF_Router]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtOSPF_Router r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOSPF_View].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOSPF_View]') IS NULL EXEC('CREATE VIEW [dbo].[wvOSPF_View] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOSPF_View]
AS Select * from  tng_managedobject where class_name = 'OSPF_View'
GO

GO
--SqlScripter----[dbo].[wvOtherDevices].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOtherDevices]') IS NULL EXEC('CREATE VIEW [dbo].[wvOtherDevices] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOtherDevices]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtOtherDevices r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvOverlapInterface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvOverlapInterface]') IS NULL EXEC('CREATE VIEW [dbo].[wvOverlapInterface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvOverlapInterface]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from  tng_managedobject a,  tng_overlapinterface b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvPalm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPalm]') IS NULL EXEC('CREATE VIEW [dbo].[wvPalm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPalm]
AS Select * from  tng_managedobject where class_name = 'Palm'
GO

GO
--SqlScripter----[dbo].[wvPCNIU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPCNIU]') IS NULL EXEC('CREATE VIEW [dbo].[wvPCNIU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPCNIU]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtPCNIU r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvPerformance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPerformance]') IS NULL EXEC('CREATE VIEW [dbo].[wvPerformance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPerformance]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtPerformance r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvPerformanceConfig].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPerformanceConfig]') IS NULL EXEC('CREATE VIEW [dbo].[wvPerformanceConfig] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPerformanceConfig]
AS Select * from  tng_managedobject where class_name = 'PerformanceConfig'
GO

GO
--SqlScripter----[dbo].[wvPerformanceScope].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPerformanceScope]') IS NULL EXEC('CREATE VIEW [dbo].[wvPerformanceScope] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPerformanceScope]
AS Select * from  tng_managedobject where class_name = 'PerformanceScope'
GO

GO
--SqlScripter----[dbo].[wvPerformanceTrend].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPerformanceTrend]') IS NULL EXEC('CREATE VIEW [dbo].[wvPerformanceTrend] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPerformanceTrend]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.weight,r.* from  tng_managedobject m,  wtPerformanceTrend r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvPertChart].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPertChart]') IS NULL EXEC('CREATE VIEW [dbo].[wvPertChart] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPertChart]
AS select * from  tng_link where class_name ='PertChart'
GO

GO
--SqlScripter----[dbo].[wvPing].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPing]') IS NULL EXEC('CREATE VIEW [dbo].[wvPing] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPing]
AS Select * from  tng_managedobject where class_name = 'Ping'
GO

GO
--SqlScripter----[dbo].[wvPingIP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPingIP]') IS NULL EXEC('CREATE VIEW [dbo].[wvPingIP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPingIP]
AS Select * from  tng_managedobject where class_name = 'PingIP'
GO

GO
--SqlScripter----[dbo].[wvPocketPC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPocketPC]') IS NULL EXEC('CREATE VIEW [dbo].[wvPocketPC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPocketPC]
AS Select * from  tng_managedobject where class_name = 'PocketPC'
GO

GO
--SqlScripter----[dbo].[wvpplAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvpplAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvpplAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvpplAgent]
AS Select * from  tng_managedobject where class_name = 'pplAgent'
GO

GO
--SqlScripter----[dbo].[wvpplInstance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvpplInstance]') IS NULL EXEC('CREATE VIEW [dbo].[wvpplInstance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvpplInstance]
AS Select * from  tng_managedobject where class_name = 'pplInstance'
GO

GO
--SqlScripter----[dbo].[wvPrinters].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPrinters]') IS NULL EXEC('CREATE VIEW [dbo].[wvPrinters] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPrinters]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtPrinters r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvProAgent_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvProAgent_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvProAgent_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvProAgent_v30]
AS Select * from  tng_managedobject where class_name = 'ProAgent_v30'
GO

GO
--SqlScripter----[dbo].[wvProAgentTand_v30].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvProAgentTand_v30]') IS NULL EXEC('CREATE VIEW [dbo].[wvProAgentTand_v30] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvProAgentTand_v30]
AS Select * from  tng_managedobject where class_name = 'ProAgentTand_v30'
GO

GO
--SqlScripter----[dbo].[wvProbe].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvProbe]') IS NULL EXEC('CREATE VIEW [dbo].[wvProbe] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvProbe]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtProbe r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvProfileDomainServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvProfileDomainServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvProfileDomainServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvProfileDomainServer]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.weight,r.* from  tng_managedobject m,  wtProfileDomainServer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvProxim_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvProxim_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvProxim_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvProxim_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtProxim_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvPV705N].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvPV705N]') IS NULL EXEC('CREATE VIEW [dbo].[wvPV705N] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvPV705N]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.weight,r.* from  tng_managedobject m,  wtPV705N r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvQLogic_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvQLogic_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvQLogic_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvQLogic_Switch]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,m.interface_type,m.ip_address_hex,m.mac_address,m.subnet_mask,r.* from  tng_managedobject m,  wtQLogic_Switch r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvRedHatLinux].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRedHatLinux]') IS NULL EXEC('CREATE VIEW [dbo].[wvRedHatLinux] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRedHatLinux]
AS Select * from  tng_managedobject where class_name = 'RedHatLinux'
GO

GO
--SqlScripter----[dbo].[wvResponseManagerAppServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvResponseManagerAppServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvResponseManagerAppServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvResponseManagerAppServers]
AS Select * from  tng_managedobject where class_name = 'ResponseManagerAppServers'
GO

GO
--SqlScripter----[dbo].[wvResponseManagerCollector].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvResponseManagerCollector]') IS NULL EXEC('CREATE VIEW [dbo].[wvResponseManagerCollector] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvResponseManagerCollector]
AS Select m.name,m.label,m.address,m.address_type,
m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,
m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,
m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,
m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,
m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,
m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,
m.AMSServer,m.EMServer,r.* 
from  tng_managedobject m,  wtResponseManagerCollector r 
where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvResponseManagerFileServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvResponseManagerFileServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvResponseManagerFileServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvResponseManagerFileServers]
AS Select * from  tng_managedobject where class_name = 'ResponseManagerFileServers'
GO

GO
--SqlScripter----[dbo].[wvResponseManagerProbe].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvResponseManagerProbe]') IS NULL EXEC('CREATE VIEW [dbo].[wvResponseManagerProbe] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvResponseManagerProbe]
AS Select * from  tng_managedobject where class_name = 'ResponseManagerProbe'
GO

GO
--SqlScripter----[dbo].[wvResponseManagerProbeHost].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvResponseManagerProbeHost]') IS NULL EXEC('CREATE VIEW [dbo].[wvResponseManagerProbeHost] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvResponseManagerProbeHost]
AS Select * from  tng_managedobject where class_name = 'ResponseManagerProbeHost'
GO

GO
--SqlScripter----[dbo].[wvResponseManagerProbes].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvResponseManagerProbes]') IS NULL EXEC('CREATE VIEW [dbo].[wvResponseManagerProbes] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvResponseManagerProbes]
AS Select * from  tng_managedobject where class_name = 'ResponseManagerProbes'
GO

GO
--SqlScripter----[dbo].[wvRISC6000].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRISC6000]') IS NULL EXEC('CREATE VIEW [dbo].[wvRISC6000] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRISC6000]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtRISC6000 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvRMNovell].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMNovell]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMNovell] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMNovell]
AS Select * from  tng_managedobject where class_name = 'RMNovell'
GO

GO
--SqlScripter----[dbo].[wvRMNovellServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMNovellServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMNovellServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMNovellServers]
AS Select * from  tng_managedobject where class_name = 'RMNovellServers'
GO

GO
--SqlScripter----[dbo].[wvRMON_Probe].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMON_Probe]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMON_Probe] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMON_Probe]
AS Select * from  tng_managedobject where class_name = 'RMON_Probe'
GO

GO
--SqlScripter----[dbo].[wvRMSNMP_CISCO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMSNMP_CISCO]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMSNMP_CISCO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMSNMP_CISCO]
AS Select * from  tng_managedobject where class_name = 'RMSNMP_CISCO'
GO

GO
--SqlScripter----[dbo].[wvRMSNMP_Ethernet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMSNMP_Ethernet]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMSNMP_Ethernet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMSNMP_Ethernet]
AS Select * from  tng_managedobject where class_name = 'RMSNMP_Ethernet'
GO

GO
--SqlScripter----[dbo].[wvRMSNMP_Interfaces].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMSNMP_Interfaces]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMSNMP_Interfaces] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMSNMP_Interfaces]
AS Select * from  tng_managedobject where class_name = 'RMSNMP_Interfaces'
GO

GO
--SqlScripter----[dbo].[wvRMSNMP_IP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRMSNMP_IP]') IS NULL EXEC('CREATE VIEW [dbo].[wvRMSNMP_IP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRMSNMP_IP]
AS Select * from  tng_managedobject where class_name = 'RMSNMP_IP'
GO

GO
--SqlScripter----[dbo].[wvRoamAboutAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRoamAboutAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvRoamAboutAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRoamAboutAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtRoamAboutAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvRogue_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRogue_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvRogue_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRogue_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtRogue_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvRouter].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRouter]') IS NULL EXEC('CREATE VIEW [dbo].[wvRouter] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRouter]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtRouter r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvRouter_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRouter_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvRouter_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRouter_Interface]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtRouter_Interface r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvRouter_Manager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvRouter_Manager]') IS NULL EXEC('CREATE VIEW [dbo].[wvRouter_Manager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvRouter_Manager]
AS Select * from  tng_managedobject where class_name = 'Router_Manager'
GO

GO
--SqlScripter----[dbo].[wvSamsung].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSamsung]') IS NULL EXEC('CREATE VIEW [dbo].[wvSamsung] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSamsung]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSamsung r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvsapAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvsapAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvsapAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvsapAgent]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtsapAgent r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvsapAgent4].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvsapAgent4]') IS NULL EXEC('CREATE VIEW [dbo].[wvsapAgent4] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvsapAgent4]
AS Select * from  tng_managedobject where class_name = 'sapAgent4'
GO

GO
--SqlScripter----[dbo].[wvSapInstance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSapInstance]') IS NULL EXEC('CREATE VIEW [dbo].[wvSapInstance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSapInstance]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtSapInstance r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvsapInstance4].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvsapInstance4]') IS NULL EXEC('CREATE VIEW [dbo].[wvsapInstance4] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvsapInstance4]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtsapInstance4 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSCOUnix].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSCOUnix]') IS NULL EXEC('CREATE VIEW [dbo].[wvSCOUnix] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSCOUnix]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSCOUnix r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSDLC_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSDLC_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvSDLC_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSDLC_Link]
AS select * from  tng_link where class_name ='SDLC_Link'
GO

GO
--SqlScripter----[dbo].[wvsecondaryLog].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvsecondaryLog]') IS NULL EXEC('CREATE VIEW [dbo].[wvsecondaryLog] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvsecondaryLog]
AS Select * from  tng_managedobject where class_name = 'secondaryLog'
GO

GO
--SqlScripter----[dbo].[wvsecondaryLogAlloc].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvsecondaryLogAlloc]') IS NULL EXEC('CREATE VIEW [dbo].[wvsecondaryLogAlloc] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvsecondaryLogAlloc]
AS Select * from  tng_managedobject where class_name = 'secondaryLogAlloc'
GO

GO
--SqlScripter----[dbo].[wvSequent_Server].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSequent_Server]') IS NULL EXEC('CREATE VIEW [dbo].[wvSequent_Server] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSequent_Server]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSequent_Server r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSiemens_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSiemens_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvSiemens_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSiemens_Device]
AS Select * from  tng_managedobject where class_name = 'Siemens_Device'
GO

GO
--SqlScripter----[dbo].[wvSiemens_optiPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSiemens_optiPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvSiemens_optiPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSiemens_optiPoint]
AS Select * from  tng_managedobject where class_name = 'Siemens_optiPoint'
GO

GO
--SqlScripter----[dbo].[wvSiemenUX].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSiemenUX]') IS NULL EXEC('CREATE VIEW [dbo].[wvSiemenUX] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSiemenUX]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSiemenUX r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSilicon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSilicon]') IS NULL EXEC('CREATE VIEW [dbo].[wvSilicon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSilicon]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSilicon r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSmall_Brownstone].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSmall_Brownstone]') IS NULL EXEC('CREATE VIEW [dbo].[wvSmall_Brownstone] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSmall_Brownstone]
AS Select * from  tng_managedobject where class_name = 'Small_Brownstone'
GO

GO
--SqlScripter----[dbo].[wvSmall_Warehouse].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSmall_Warehouse]') IS NULL EXEC('CREATE VIEW [dbo].[wvSmall_Warehouse] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSmall_Warehouse]
AS Select * from  tng_managedobject where class_name = 'Small_Warehouse'
GO

GO
--SqlScripter----[dbo].[wvSmallCity].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSmallCity]') IS NULL EXEC('CREATE VIEW [dbo].[wvSmallCity] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSmallCity]
AS Select * from  tng_managedobject where class_name = 'SmallCity'
GO

GO
--SqlScripter----[dbo].[wvSMCAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSMCAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvSMCAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSMCAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtSMCAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSMO_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSMO_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvSMO_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSMO_Link]
AS Select * from  tng_managedobject where class_name = 'SMO_Link'
GO

GO
--SqlScripter----[dbo].[wvSolaris].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSolaris]') IS NULL EXEC('CREATE VIEW [dbo].[wvSolaris] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSolaris]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSolaris r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSQLServerAgt].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSQLServerAgt]') IS NULL EXEC('CREATE VIEW [dbo].[wvSQLServerAgt] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSQLServerAgt]
AS Select * from  tng_managedobject where class_name = 'SQLServerAgt'
GO

GO
--SqlScripter----[dbo].[wvSSIP_Network].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSSIP_Network]') IS NULL EXEC('CREATE VIEW [dbo].[wvSSIP_Network] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSSIP_Network]
AS Select * from  tng_managedobject where class_name = 'SSIP_Network'
GO

GO
--SqlScripter----[dbo].[wvSSIP_Subnet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSSIP_Subnet]') IS NULL EXEC('CREATE VIEW [dbo].[wvSSIP_Subnet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSSIP_Subnet]
AS Select * from  tng_managedobject where class_name = 'SSIP_Subnet'
GO

GO
--SqlScripter----[dbo].[wvStorageSubsystem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvStorageSubsystem]') IS NULL EXEC('CREATE VIEW [dbo].[wvStorageSubsystem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvStorageSubsystem]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtStorageSubsystem r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSubnet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSubnet]') IS NULL EXEC('CREATE VIEW [dbo].[wvSubnet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSubnet]
AS select * from  tng_managedobject where class_name = 'Subnet'
GO

GO
--SqlScripter----[dbo].[wvSUN].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSUN]') IS NULL EXEC('CREATE VIEW [dbo].[wvSUN] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSUN]
AS Select * from  tng_managedobject where class_name = 'SUN'
GO

GO
--SqlScripter----[dbo].[wvSUN_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSUN_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvSUN_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSUN_Device]
AS Select * from  tng_managedobject where class_name = 'SUN_Device'
GO

GO
--SqlScripter----[dbo].[wvSunOS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSunOS]') IS NULL EXEC('CREATE VIEW [dbo].[wvSunOS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSunOS]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtSunOS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSuperPingAgent].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSuperPingAgent]') IS NULL EXEC('CREATE VIEW [dbo].[wvSuperPingAgent] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSuperPingAgent]
AS Select * from  tng_managedobject where class_name = 'SuperPingAgent'
GO

GO
--SqlScripter----[dbo].[wvSuSELinux].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSuSELinux]') IS NULL EXEC('CREATE VIEW [dbo].[wvSuSELinux] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSuSELinux]
AS Select * from  tng_managedobject where class_name = 'SuSELinux'
GO

GO
--SqlScripter----[dbo].[wvSuspectAccessPoint].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSuspectAccessPoint]') IS NULL EXEC('CREATE VIEW [dbo].[wvSuspectAccessPoint] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSuspectAccessPoint]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtSuspectAccessPoint r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSVP_ElementManager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSVP_ElementManager]') IS NULL EXEC('CREATE VIEW [dbo].[wvSVP_ElementManager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSVP_ElementManager]
AS Select * from  tng_managedobject where class_name = 'SVP_ElementManager'
GO

GO
--SqlScripter----[dbo].[wvSw56Kbps].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSw56Kbps]') IS NULL EXEC('CREATE VIEW [dbo].[wvSw56Kbps] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSw56Kbps]
AS select * from  tng_link where class_name ='Sw56Kbps'
GO

GO
--SqlScripter----[dbo].[wvSwitch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSwitch]') IS NULL EXEC('CREATE VIEW [dbo].[wvSwitch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSwitch]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtSwitch r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSwitch_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSwitch_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvSwitch_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSwitch_Interface]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtSwitch_Interface r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSwitch_Manager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSwitch_Manager]') IS NULL EXEC('CREATE VIEW [dbo].[wvSwitch_Manager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSwitch_Manager]
AS Select * from  tng_managedobject where class_name = 'Switch_Manager'
GO

GO
--SqlScripter----[dbo].[wvSybase].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSybase]') IS NULL EXEC('CREATE VIEW [dbo].[wvSybase] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSybase]
AS Select * from  tng_managedobject where class_name = 'Sybase'
GO

GO
--SqlScripter----[dbo].[wvSybaseAgt].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSybaseAgt]') IS NULL EXEC('CREATE VIEW [dbo].[wvSybaseAgt] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSybaseAgt]
AS Select * from  tng_managedobject where class_name = 'SybaseAgt'
GO

GO
--SqlScripter----[dbo].[wvSymbol_1m_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSymbol_1m_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvSymbol_1m_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSymbol_1m_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtSymbol_1m_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSymbol80211_1_2m_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSymbol80211_1_2m_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvSymbol80211_1_2m_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSymbol80211_1_2m_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtSymbol80211_1_2m_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSymbol80211_11m_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSymbol80211_11m_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvSymbol80211_11m_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSymbol80211_11m_Access_Point]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,m.override_imagelarge,m.override_imagesmall,m.interface_type,m.subnet_mask,m.ip_address_hex,r.* from  tng_managedobject m,  wtSymbol80211_11m_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSynOptics].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSynOptics]') IS NULL EXEC('CREATE VIEW [dbo].[wvSynOptics] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSynOptics]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtSynOptics r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSynOptics_Bridge].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSynOptics_Bridge]') IS NULL EXEC('CREATE VIEW [dbo].[wvSynOptics_Bridge] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSynOptics_Bridge]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtSynOptics_Bridge r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvSynOptics_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSynOptics_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvSynOptics_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSynOptics_Device]
AS Select * from  tng_managedobject where class_name = 'SynOptics_Device'
GO

GO
--SqlScripter----[dbo].[wvSynOptics_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSynOptics_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvSynOptics_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSynOptics_Switch]
AS Select * from  tng_managedobject where class_name = 'SynOptics_Switch'
GO

GO
--SqlScripter----[dbo].[wvSysAgtAS400].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSysAgtAS400]') IS NULL EXEC('CREATE VIEW [dbo].[wvSysAgtAS400] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSysAgtAS400]
AS Select * from  tng_managedobject where class_name = 'SysAgtAS400'
GO

GO
--SqlScripter----[dbo].[wvSysAgtNetWare].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSysAgtNetWare]') IS NULL EXEC('CREATE VIEW [dbo].[wvSysAgtNetWare] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSysAgtNetWare]
AS Select * from  tng_managedobject where class_name = 'SysAgtNetWare'
GO

GO
--SqlScripter----[dbo].[wvSysAgtNT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSysAgtNT]') IS NULL EXEC('CREATE VIEW [dbo].[wvSysAgtNT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSysAgtNT]
AS Select * from  tng_managedobject where class_name = 'SysAgtNT'
GO

GO
--SqlScripter----[dbo].[wvSysAgtVMS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSysAgtVMS]') IS NULL EXEC('CREATE VIEW [dbo].[wvSysAgtVMS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSysAgtVMS]
AS Select * from  tng_managedobject where class_name = 'SysAgtVMS'
GO

GO
--SqlScripter----[dbo].[wvSysAgtWin9x].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvSysAgtWin9x]') IS NULL EXEC('CREATE VIEW [dbo].[wvSysAgtWin9x] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvSysAgtWin9x]
AS Select * from  tng_managedobject where class_name = 'SysAgtWin9x'
GO

GO
--SqlScripter----[dbo].[wvT1].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvT1]') IS NULL EXEC('CREATE VIEW [dbo].[wvT1] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvT1]
AS select * from  tng_link where class_name ='T1'
GO

GO
--SqlScripter----[dbo].[wvTandem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTandem]') IS NULL EXEC('CREATE VIEW [dbo].[wvTandem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTandem]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtTandem r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvTandem_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTandem_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvTandem_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTandem_Device]
AS Select * from  tng_managedobject where class_name = 'Tandem_Device'
GO

GO
--SqlScripter----[dbo].[wvTapeSubsystem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTapeSubsystem]') IS NULL EXEC('CREATE VIEW [dbo].[wvTapeSubsystem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTapeSubsystem]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtTapeSubsystem r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvTektronix_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTektronix_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvTektronix_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTektronix_Device]
AS Select * from  tng_managedobject where class_name = 'Tektronix_Device'
GO

GO
--SqlScripter----[dbo].[wvTelebit].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTelebit]') IS NULL EXEC('CREATE VIEW [dbo].[wvTelebit] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTelebit]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtTelebit r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvTelnet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTelnet]') IS NULL EXEC('CREATE VIEW [dbo].[wvTelnet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTelnet]
AS Select * from  tng_managedobject where class_name = 'Telnet'
GO

GO
--SqlScripter----[dbo].[wvTelnetServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTelnetServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvTelnetServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTelnetServers]
AS Select * from  tng_managedobject where class_name = 'TelnetServers'
GO

GO
--SqlScripter----[dbo].[wvTokenRing_Link].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTokenRing_Link]') IS NULL EXEC('CREATE VIEW [dbo].[wvTokenRing_Link] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTokenRing_Link]
AS select * from  tng_link where class_name ='TokenRing_Link'
GO

GO
--SqlScripter----[dbo].[wvToshiba_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvToshiba_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvToshiba_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvToshiba_Device]
AS Select * from  tng_managedobject where class_name = 'Toshiba_Device'
GO

GO
--SqlScripter----[dbo].[wvTrunk_Multi_Ethernet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTrunk_Multi_Ethernet]') IS NULL EXEC('CREATE VIEW [dbo].[wvTrunk_Multi_Ethernet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTrunk_Multi_Ethernet]
AS Select * from  tng_managedobject where class_name = 'Trunk_Multi_Ethernet'
GO

GO
--SqlScripter----[dbo].[wvTrunk_Multi_FDDI].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTrunk_Multi_FDDI]') IS NULL EXEC('CREATE VIEW [dbo].[wvTrunk_Multi_FDDI] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTrunk_Multi_FDDI]
AS Select * from  tng_managedobject where class_name = 'Trunk_Multi_FDDI'
GO

GO
--SqlScripter----[dbo].[wvTrunk_Multi_TokenRing].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTrunk_Multi_TokenRing]') IS NULL EXEC('CREATE VIEW [dbo].[wvTrunk_Multi_TokenRing] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTrunk_Multi_TokenRing]
AS Select * from  tng_managedobject where class_name = 'Trunk_Multi_TokenRing'
GO

GO
--SqlScripter----[dbo].[wvTSBufferIndexWrites].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTSBufferIndexWrites]') IS NULL EXEC('CREATE VIEW [dbo].[wvTSBufferIndexWrites] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTSBufferIndexWrites]
AS Select * from  tng_managedobject where class_name = 'TSBufferIndexWrites'
GO

GO
--SqlScripter----[dbo].[wvTSBufferWrites].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTSBufferWrites]') IS NULL EXEC('CREATE VIEW [dbo].[wvTSBufferWrites] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTSBufferWrites]
AS Select * from  tng_managedobject where class_name = 'TSBufferWrites'
GO

GO
--SqlScripter----[dbo].[wvTSioDirectWriteREQ].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTSioDirectWriteREQ]') IS NULL EXEC('CREATE VIEW [dbo].[wvTSioDirectWriteREQ] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTSioDirectWriteREQ]
AS Select * from  tng_managedobject where class_name = 'TSioDirectWriteREQ'
GO

GO
--SqlScripter----[dbo].[wvTSioWrittenDirect].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTSioWrittenDirect]') IS NULL EXEC('CREATE VIEW [dbo].[wvTSioWrittenDirect] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTSioWrittenDirect]
AS Select * from  tng_managedobject where class_name = 'TSioWrittenDirect'
GO

GO
--SqlScripter----[dbo].[wvTSMonitors].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTSMonitors]') IS NULL EXEC('CREATE VIEW [dbo].[wvTSMonitors] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTSMonitors]
AS Select * from  tng_managedobject where class_name = 'TSMonitors'
GO

GO
--SqlScripter----[dbo].[wvTSPhysicalSpace].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTSPhysicalSpace]') IS NULL EXEC('CREATE VIEW [dbo].[wvTSPhysicalSpace] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTSPhysicalSpace]
AS Select * from  tng_managedobject where class_name = 'TSPhysicalSpace'
GO

GO
--SqlScripter----[dbo].[wvTurboLinux].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvTurboLinux]') IS NULL EXEC('CREATE VIEW [dbo].[wvTurboLinux] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvTurboLinux]
AS Select * from  tng_managedobject where class_name = 'TurboLinux'
GO

GO
--SqlScripter----[dbo].[wvUB_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUB_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvUB_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUB_Device]
AS Select * from  tng_managedobject where class_name = 'UB_Device'
GO

GO
--SqlScripter----[dbo].[wvUBEMPower].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUBEMPower]') IS NULL EXEC('CREATE VIEW [dbo].[wvUBEMPower] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUBEMPower]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtUBEMPower r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUBNIU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUBNIU]') IS NULL EXEC('CREATE VIEW [dbo].[wvUBNIU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUBNIU]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtUBNIU r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUnclassified_TCP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnclassified_TCP]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnclassified_TCP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnclassified_TCP]
AS select a.name, a.label, a.address, a.class_name, a.interface_type, a.autoarrange_type, a.hidden, a.propagate_status, a.status_no, a.severity, a.tng_delete_flag, a.posted, a.acknowledge, a.ip_address_hex, a.mac_address, a.subnet_mask, a.date_ins, a.date_modify, a.alarmset_name, a.code_page, a.admin_status, a.DSM_Server, a.propagated_status_no, a.propagated_sev, a.DSM_Address, a.license_machine_type, a.create_bpv, a.override_imagelarge, a.override_imagesmall, a.override_imagedecal, a.override_imagetintbool, a.override_model, a.background_image, a.weight, a.reserved, a.weighted_severity, a.Max_Sev, a.user_reclass, a.Asset_uuid, a.source_repository, a.dnsname, a.last_seen_time, b.* from  tng_managedobject a,  tng_unclassified_tcp b where a.uuid = b.uuid
GO

GO
--SqlScripter----[dbo].[wvUnicenter_OpenVMS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenter_OpenVMS]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenter_OpenVMS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenter_OpenVMS]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtUnicenter_OpenVMS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUnicenter_OpenVMS_Console].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenter_OpenVMS_Console]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenter_OpenVMS_Console] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenter_OpenVMS_Console]
AS Select * from  tng_managedobject where class_name = 'Unicenter_OpenVMS_Console'
GO

GO
--SqlScripter----[dbo].[wvUnicenter_OpenVMS_Performance].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenter_OpenVMS_Performance]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenter_OpenVMS_Performance] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenter_OpenVMS_Performance]
AS Select * from  tng_managedobject where class_name = 'Unicenter_OpenVMS_Performance'
GO

GO
--SqlScripter----[dbo].[wvUnicenter_OpenVMS_Workload].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenter_OpenVMS_Workload]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenter_OpenVMS_Workload] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenter_OpenVMS_Workload]
AS Select * from  tng_managedobject where class_name = 'Unicenter_OpenVMS_Workload'
GO

GO
--SqlScripter----[dbo].[wvUnicenter_OpenVMSManagedObject].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenter_OpenVMSManagedObject]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenter_OpenVMSManagedObject] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenter_OpenVMSManagedObject]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtUnicenter_OpenVMSManagedObject r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUnicenterFileTransferDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenterFileTransferDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenterFileTransferDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenterFileTransferDaemon]
AS Select * from  tng_managedobject where class_name = 'UnicenterFileTransferDaemon'
GO

GO
--SqlScripter----[dbo].[wvUnicenterMessageDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnicenterMessageDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnicenterMessageDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnicenterMessageDaemon]
AS Select * from  tng_managedobject where class_name = 'UnicenterMessageDaemon'
GO

GO
--SqlScripter----[dbo].[wvUnispace].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnispace]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnispace] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnispace]
AS select * from  tng_managedobject where class_name = 'Unispace'
GO

GO
--SqlScripter----[dbo].[wvUnisys].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnisys]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnisys] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnisys]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtUnisys r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUnix].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnix]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnix] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnix]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtUnix r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUnixWare].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUnixWare]') IS NULL EXEC('CREATE VIEW [dbo].[wvUnixWare] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUnixWare]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtUnixWare r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvUPS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUPS]') IS NULL EXEC('CREATE VIEW [dbo].[wvUPS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUPS]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtUPS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvURM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURM]') IS NULL EXEC('CREATE VIEW [dbo].[wvURM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURM]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtURM r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvURMAIXAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMAIXAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMAIXAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMAIXAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMAIXAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMAIXGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMAIXGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMAIXGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMAIXGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMAIXGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMAIXInstAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMAIXInstAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMAIXInstAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMAIXInstAlarm]
AS Select * from  tng_managedobject where class_name = 'URMAIXInstAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMAIXPerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMAIXPerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMAIXPerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMAIXPerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMAIXPerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMHPAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMHPAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMHPAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMHPAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMHPAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMHPGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMHPGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMHPGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMHPGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMHPGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMHPInstAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMHPInstAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMHPInstAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMHPInstAlarm]
AS Select * from  tng_managedobject where class_name = 'URMHPInstAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMHPPerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMHPPerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMHPPerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMHPPerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMHPPerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMIPAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMIPAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMIPAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMIPAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMIPAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMIPGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMIPGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMIPGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMIPGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMIPGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMIPPortAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMIPPortAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMIPPortAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMIPPortAlarm]
AS Select * from  tng_managedobject where class_name = 'URMIPPortAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMIPRes].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMIPRes]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMIPRes] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMIPRes]
AS Select * from  tng_managedobject where class_name = 'URMIPRes'
GO

GO
--SqlScripter----[dbo].[wvURMLINUXAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMLINUXAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMLINUXAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMLINUXAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMLINUXAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMLINUXGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMLINUXGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMLINUXGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMLINUXGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMLINUXGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMLINUXInstAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMLINUXInstAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMLINUXInstAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMLINUXInstAlarm]
AS Select * from  tng_managedobject where class_name = 'URMLINUXInstAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMLINUXPerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMLINUXPerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMLINUXPerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMLINUXPerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMLINUXPerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMMACAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMMACAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMMACAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMMACAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMMACAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMMacOSXGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMMacOSXGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMMacOSXGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMMacOSXGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMMacOSXGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMMacOSXInstAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMMacOSXInstAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMMacOSXInstAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMMacOSXInstAlarm]
AS Select * from  tng_managedobject where class_name = 'URMMacOSXInstAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMMacOSXPerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMMacOSXPerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMMacOSXPerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMMacOSXPerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMMacOSXPerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMMacRes].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMMacRes]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMMacRes] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMMacRes]
AS Select * from  tng_managedobject where class_name = 'URMMacRes'
GO

GO
--SqlScripter----[dbo].[wvURMSUNAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMSUNAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMSUNAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMSUNAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMSUNAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMSUNGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMSUNGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMSUNGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMSUNGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMSUNGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMSUNInstAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMSUNInstAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMSUNInstAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMSUNInstAlarm]
AS Select * from  tng_managedobject where class_name = 'URMSUNInstAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMSUNPerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMSUNPerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMSUNPerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMSUNPerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMSUNPerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMTru64AlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMTru64AlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMTru64AlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMTru64AlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMTru64AlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMTru64GenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMTru64GenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMTru64GenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMTru64GenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMTru64GenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMTru64InstAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMTru64InstAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMTru64InstAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMTru64InstAlarm]
AS Select * from  tng_managedobject where class_name = 'URMTru64InstAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMTru64PerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMTru64PerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMTru64PerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMTru64PerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMTru64PerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMUnixRes].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMUnixRes]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMUnixRes] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMUnixRes]
AS Select * from  tng_managedobject where class_name = 'URMUnixRes'
GO

GO
--SqlScripter----[dbo].[wvURMWinAlarmResource].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinAlarmResource]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinAlarmResource] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinAlarmResource]
AS Select * from  tng_managedobject where class_name = 'URMWinAlarmResource'
GO

GO
--SqlScripter----[dbo].[wvURMWinGenAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinGenAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinGenAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinGenAlarm]
AS Select * from  tng_managedobject where class_name = 'URMWinGenAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMWinPerfAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinPerfAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinPerfAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinPerfAlarm]
AS Select * from  tng_managedobject where class_name = 'URMWinPerfAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMWinProcAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinProcAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinProcAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinProcAlarm]
AS Select * from  tng_managedobject where class_name = 'URMWinProcAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMWinRes].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinRes]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinRes] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinRes]
AS Select * from  tng_managedobject where class_name = 'URMWinRes'
GO

GO
--SqlScripter----[dbo].[wvURMWinRKeyAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinRKeyAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinRKeyAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinRKeyAlarm]
AS Select * from  tng_managedobject where class_name = 'URMWinRKeyAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMWinServAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinServAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinServAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinServAlarm]
AS Select * from  tng_managedobject where class_name = 'URMWinServAlarm'
GO

GO
--SqlScripter----[dbo].[wvURMWinSnapAlarm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvURMWinSnapAlarm]') IS NULL EXEC('CREATE VIEW [dbo].[wvURMWinSnapAlarm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvURMWinSnapAlarm]
AS Select * from  tng_managedobject where class_name = 'URMWinSnapAlarm'
GO

GO
--SqlScripter----[dbo].[wvUserDefApplicationsServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUserDefApplicationsServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvUserDefApplicationsServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUserDefApplicationsServers]
AS Select * from  tng_managedobject where class_name = 'UserDefApplicationsServers'
GO

GO
--SqlScripter----[dbo].[wvUserDefined].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUserDefined]') IS NULL EXEC('CREATE VIEW [dbo].[wvUserDefined] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUserDefined]
AS Select * from  tng_managedobject where class_name = 'UserDefined'
GO

GO
--SqlScripter----[dbo].[wvUserDefinedApplications].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUserDefinedApplications]') IS NULL EXEC('CREATE VIEW [dbo].[wvUserDefinedApplications] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUserDefinedApplications]
AS Select * from  tng_managedobject where class_name = 'UserDefinedApplications'
GO

GO
--SqlScripter----[dbo].[wvUserDefinedServers].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUserDefinedServers]') IS NULL EXEC('CREATE VIEW [dbo].[wvUserDefinedServers] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUserDefinedServers]
AS Select * from  tng_managedobject where class_name = 'UserDefinedServers'
GO

GO
--SqlScripter----[dbo].[wvUSR_Access_Point].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvUSR_Access_Point]') IS NULL EXEC('CREATE VIEW [dbo].[wvUSR_Access_Point] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvUSR_Access_Point]
AS Select m.name,m.label,m.address, m.address_type,
m.status_no,m.hidden,m.propagate_status,m.severity, m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins, 
m.date_modify,m.code_page,m.admin_status,m.DSM_Server, m.propagated_status_no,m.propagated_sev,m.DSM_Address, 
m.license_machine_type,m.create_bpv,m.override_imagedecal, m.override_imagetintbool,m.override_model,
m.background_image,m.weight, m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid, m.source_repository,m.dnsname,
m.last_seen_time,m.AMSServer,m.EMServer, m.class_name,m.override_imagelarge,m.override_imagesmall, 
m.interface_type,m.subnet_mask,m.ip_address_hex,r.* 
from  tng_managedobject m,  wtUSR_Access_Point r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVCP_1000].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVCP_1000]') IS NULL EXEC('CREATE VIEW [dbo].[wvVCP_1000] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVCP_1000]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtVCP_1000 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvvIP_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvvIP_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvvIP_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvvIP_Interface]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtvIP_Interface r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVitalink].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVitalink]') IS NULL EXEC('CREATE VIEW [dbo].[wvVitalink] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVitalink]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.weight,r.* from  tng_managedobject m,  wtVitalink r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVitalink_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVitalink_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvVitalink_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVitalink_Device]
AS Select * from  tng_managedobject where class_name = 'Vitalink_Device'
GO

GO
--SqlScripter----[dbo].[wvVlan].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVlan]') IS NULL EXEC('CREATE VIEW [dbo].[wvVlan] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVlan]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtVlan r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVLAN_Domain].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVLAN_Domain]') IS NULL EXEC('CREATE VIEW [dbo].[wvVLAN_Domain] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVLAN_Domain]
AS Select * from  tng_managedobject where class_name = 'VLAN_Domain'
GO

GO
--SqlScripter----[dbo].[wvVLAN_Domain_View].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVLAN_Domain_View]') IS NULL EXEC('CREATE VIEW [dbo].[wvVLAN_Domain_View] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVLAN_Domain_View]
AS Select * from  tng_managedobject where class_name = 'VLAN_Domain_View'
GO

GO
--SqlScripter----[dbo].[wvVLAN_Interface].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVLAN_Interface]') IS NULL EXEC('CREATE VIEW [dbo].[wvVLAN_Interface] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVLAN_Interface]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVLAN_Interface r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVlan_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVlan_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvVlan_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVlan_Switch]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtVlan_Switch r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO]
AS Select * from  tng_managedobject where class_name = 'VMO'
GO

GO
--SqlScripter----[dbo].[wvVMO_BPV].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_BPV]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_BPV] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_BPV]
AS Select * from  tng_managedobject where class_name = 'VMO_BPV'
GO

GO
--SqlScripter----[dbo].[wvVMO_CPU].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_CPU]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_CPU] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_CPU]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_CPU r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Disk_IO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Disk_IO]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Disk_IO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Disk_IO]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Disk_IO r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_GuestOS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_GuestOS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_GuestOS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_GuestOS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_GuestOS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_HB].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_HB]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_HB] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_HB]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_HB r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_HostOS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_HostOS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_HostOS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_HostOS]
AS Select * from  tng_managedobject where class_name = 'VMO_HostOS'
GO

GO
--SqlScripter----[dbo].[wvVMO_Linux].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Linux]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Linux] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Linux]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Linux r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Linux_HostOS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Linux_HostOS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Linux_HostOS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Linux_HostOS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Linux_HostOS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Mem].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Mem]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Mem] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Mem]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Mem r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_MSDOS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_MSDOS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_MSDOS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_MSDOS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_MSDOS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Netware4].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Netware4]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Netware4] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Netware4]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Netware4 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Netware5].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Netware5]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Netware5] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Netware5]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Netware5 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Netware6].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Netware6]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Netware6] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Netware6]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Netware6 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Network_IO].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Network_IO]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Network_IO] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Network_IO]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Network_IO r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Other].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Other]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Other] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Other]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Other r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Power].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Power]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Power] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Power]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Power r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win2K3ES].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win2K3ES]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win2K3ES] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win2K3ES]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win2K3ES r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win2K3S].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win2K3S]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win2K3S] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win2K3S]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win2K3S r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win2K3WS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win2K3WS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win2K3WS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win2K3WS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win2K3WS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win2KAS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win2KAS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win2KAS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win2KAS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win2KAS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win2KP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win2KP]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win2KP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win2KP]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win2KP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win2KS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win2KS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win2KS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win2KS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win2KS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win31].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win31]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win31] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win31]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win31 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win95].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win95]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win95] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win95]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win95 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Win98].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Win98]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Win98] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Win98]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Win98 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_Windows_HostOS].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_Windows_HostOS]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_Windows_HostOS] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_Windows_HostOS]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_Windows_HostOS r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_WinME].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_WinME]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_WinME] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_WinME]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_WinME r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_WinNT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_WinNT]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_WinNT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_WinNT]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_WinNT r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_WinXPH].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_WinXPH]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_WinXPH] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_WinXPH]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_WinXPH r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVMO_WinXPP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVMO_WinXPP]') IS NULL EXEC('CREATE VIEW [dbo].[wvVMO_WinXPP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVMO_WinXPP]
AS Select m.name,m.label,m.address,m.address_type,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.class_name,r.* from  tng_managedobject m,  wtVMO_WinXPP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvVN_ElementManager].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvVN_ElementManager]') IS NULL EXEC('CREATE VIEW [dbo].[wvVN_ElementManager] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvVN_ElementManager]
AS Select * from  tng_managedobject where class_name = 'VN_ElementManager'
GO

GO
--SqlScripter----[dbo].[wvWBEM].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWBEM]') IS NULL EXEC('CREATE VIEW [dbo].[wvWBEM] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWBEM]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtWBEM r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWellfleet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWellfleet]') IS NULL EXEC('CREATE VIEW [dbo].[wvWellfleet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWellfleet]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWellfleet r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvwfVrrpAgt].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvwfVrrpAgt]') IS NULL EXEC('CREATE VIEW [dbo].[wvwfVrrpAgt] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvwfVrrpAgt]
AS Select * from  tng_managedobject where class_name = 'wfVrrpAgt'
GO

GO
--SqlScripter----[dbo].[wvWhite_Office_Park].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWhite_Office_Park]') IS NULL EXEC('CREATE VIEW [dbo].[wvWhite_Office_Park] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWhite_Office_Park]
AS Select * from  tng_managedobject where class_name = 'White_Office_Park'
GO

GO
--SqlScripter----[dbo].[wvWindows].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindows]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindows] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindows]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindows r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindows_NetServer].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindows_NetServer]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindows_NetServer] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindows_NetServer]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindows_NetServer r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindows2000].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindows2000]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindows2000] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindows2000]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindows2000 r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindows2000_Server].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindows2000_Server]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindows2000_Server] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindows2000_Server]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindows2000_Server r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindows9x].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindows9x]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindows9x] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindows9x]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindows9x r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindows9x_ManagedPC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindows9x_ManagedPC]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindows9x_ManagedPC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindows9x_ManagedPC]
AS Select * from  tng_managedobject where class_name = 'Windows9x_ManagedPC'
GO

GO
--SqlScripter----[dbo].[wvWindowsNT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindowsNT]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindowsNT] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindowsNT]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindowsNT r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindowsNT_ManagedPC].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindowsNT_ManagedPC]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindowsNT_ManagedPC] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindowsNT_ManagedPC]
AS Select * from  tng_managedobject where class_name = 'WindowsNT_ManagedPC'
GO

GO
--SqlScripter----[dbo].[wvWindowsNT_Server].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindowsNT_Server]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindowsNT_Server] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindowsNT_Server]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindowsNT_Server r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWindowsXP].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWindowsXP]') IS NULL EXEC('CREATE VIEW [dbo].[wvWindowsXP] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWindowsXP]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtWindowsXP r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWireless].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWireless]') IS NULL EXEC('CREATE VIEW [dbo].[wvWireless] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWireless]
AS select * from  tng_link where class_name ='Wireless'
GO

GO
--SqlScripter----[dbo].[wvWireless_Domain].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWireless_Domain]') IS NULL EXEC('CREATE VIEW [dbo].[wvWireless_Domain] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWireless_Domain]
AS Select m.name,m.label,m.address, m.status_no,m.hidden,m.propagate_status,m.severity,m.posted, m.acknowledge,m.alarmset_name,m.date_ins,m.date_modify,m.code_page, 
m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev, m.DSM_Address,m.license_machine_type,m.create_bpv, m.override_imagelarge,m.override_imagesmall,
m.override_imagedecal, m.override_imagetintbool,m.override_model,m.background_image,m.weight, m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid, m.source_repository,
m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer, m.class_name,m.address_type,m.interface_type,m.autoarrange_type,r.* from  tng_managedobject m,  wtWireless_Domain r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvWireless_Network].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWireless_Network]') IS NULL EXEC('CREATE VIEW [dbo].[wvWireless_Network] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWireless_Network]
AS Select * from  tng_managedobject where class_name = 'Wireless_Network'
GO

GO
--SqlScripter----[dbo].[wvWirelessUnit].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWirelessUnit]') IS NULL EXEC('CREATE VIEW [dbo].[wvWirelessUnit] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWirelessUnit]
AS Select * from  tng_managedobject where class_name = 'WirelessUnit'
GO

GO
--SqlScripter----[dbo].[wvWorkload_EventDaemon].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWorkload_EventDaemon]') IS NULL EXEC('CREATE VIEW [dbo].[wvWorkload_EventDaemon] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWorkload_EventDaemon]
AS Select * from  tng_managedobject where class_name = 'Workload_EventDaemon'
GO

GO
--SqlScripter----[dbo].[wvWorkstation].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvWorkstation]') IS NULL EXEC('CREATE VIEW [dbo].[wvWorkstation] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvWorkstation]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtWorkstation r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvXerox_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvXerox_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvXerox_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvXerox_Device]
AS Select * from  tng_managedobject where class_name = 'Xerox_Device'
GO

GO
--SqlScripter----[dbo].[wvXircom_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvXircom_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvXircom_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvXircom_Device]
AS Select * from  tng_managedobject where class_name = 'Xircom_Device'
GO

GO
--SqlScripter----[dbo].[wvXterm].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvXterm]') IS NULL EXEC('CREATE VIEW [dbo].[wvXterm] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvXterm]
AS Select m.name,m.label,m.address,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,m.address_type,m.class_name,m.alarmset_name,m.autoarrange_type,m.weight,r.* from  tng_managedobject m,  wtXterm r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvXylan_Switch].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvXylan_Switch]') IS NULL EXEC('CREATE VIEW [dbo].[wvXylan_Switch] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvXylan_Switch]
AS Select * from  tng_managedobject where class_name = 'Xylan_Switch'
GO

GO
--SqlScripter----[dbo].[wvXylogics_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvXylogics_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvXylogics_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvXylogics_Device]
AS Select * from  tng_managedobject where class_name = 'Xylogics_Device'
GO

GO
--SqlScripter----[dbo].[wvXyplex_Device].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvXyplex_Device]') IS NULL EXEC('CREATE VIEW [dbo].[wvXyplex_Device] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvXyplex_Device]
AS Select * from  tng_managedobject where class_name = 'Xyplex_Device'
GO

GO
--SqlScripter----[dbo].[wvZone].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvZone]') IS NULL EXEC('CREATE VIEW [dbo].[wvZone] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvZone]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtZone r where m.uuid = r.uuid
GO

GO
--SqlScripter----[dbo].[wvZoneSet].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[wvZoneSet]') IS NULL EXEC('CREATE VIEW [dbo].[wvZoneSet] AS /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ SELECT 0 C1')
GO
ALTER VIEW [dbo].[wvZoneSet]
AS Select m.name,m.label,m.address,m.address_type,m.class_name,m.status_no,m.hidden,m.propagate_status,m.severity,m.posted,m.acknowledge,m.alarmset_name,m.autoarrange_type,m.date_ins,m.date_modify,m.code_page,m.admin_status,m.DSM_Server,m.propagated_status_no,m.propagated_sev,m.DSM_Address,m.license_machine_type,m.create_bpv,m.override_imagelarge,m.override_imagesmall,m.override_imagedecal,m.override_imagetintbool,m.override_model,m.background_image,m.weight,m.weighted_severity,m.Max_Sev,m.user_reclass,m.Asset_uuid,m.source_repository,m.dnsname,m.last_seen_time,m.AMSServer,m.EMServer,r.* from  tng_managedobject m,  wtZoneSet r where m.uuid = r.uuid
GO
