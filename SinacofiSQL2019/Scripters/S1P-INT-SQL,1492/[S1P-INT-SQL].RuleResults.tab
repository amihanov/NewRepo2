Database	Object Name	Type	Rule Name	Description	Highlight	Code
AdmDBA	[dbo].[spBackupDatabases]	Warning	BackupRestore	Using Backup	Backup	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPBACKUPDATABASES AS DECLARE@DTFECHA DATETIME DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCDATABASENAME VARCHAR(30)DECLARE@VCFILENAME VARCHAR(500)DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCREPORTEBACKUP VARCHAR(MAX)DECLARE@MAILSUBJECT VARCHAR(MAX)DECLARE@DTSTARTIME DATETIME DECLARE@DTENDTIME DATETIME DECLARE@ISEG INT SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@DTFECHA=CONVERT(VARCHAR(26),GETDATE(),109)SET@VCASUNTO=<str>+@@SERVERNAME+<str>DECLARE CURDATABASES CURSOR FOR SELECT NAME FROM MASTER..SYSDATABASES WHERE STATUS&512=0 AND NAME NOT IN(<str>)ORDER BY NAME ASC;SET@VCREPORTEBACKUP=<str>OPEN CURDATABASES FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME WHILE@@FETCH_STATUS=0 BEGIN SET@DTSTARTIME=GETDATE()SET@VCFILENAME=<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR(23),GETDATE(),112)+<str>BACKUP DATABASE@VCDATABASENAME TO DISK=@VCFILENAME WITH COMPRESSION,CHECKSUM,CONTINUE_AFTER_ERROR;RESTORE VERIFYONLY FROM DISK=@VCFILENAME SET@DTENDTIME=GETDATE()SET@ISEG=DATEDIFF(SS,@DTSTARTIME,@DTENDTIME)SET@VCREPORTEBACKUP=@VCREPORTEBACKUP+<str>+CONVERT(VARCHAR,@DTFECHA)+<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR,@ISEG)+<str>+@VCFILENAME+<str>FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME END CLOSE CURDATABASES DEALLOCATE CURDATABASES SET@VCREPORTEBACKUP=N<str>+@VCREPORTEBACKUP+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEBACKUP,@BODY_FORMAT=N<str>GO
AdmDBA	[dbo].[spBackupDatabases]	Warning	BackupRestore	Using Restore	Restore	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPBACKUPDATABASES AS DECLARE@DTFECHA DATETIME DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCDATABASENAME VARCHAR(30)DECLARE@VCFILENAME VARCHAR(500)DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCREPORTEBACKUP VARCHAR(MAX)DECLARE@MAILSUBJECT VARCHAR(MAX)DECLARE@DTSTARTIME DATETIME DECLARE@DTENDTIME DATETIME DECLARE@ISEG INT SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@DTFECHA=CONVERT(VARCHAR(26),GETDATE(),109)SET@VCASUNTO=<str>+@@SERVERNAME+<str>DECLARE CURDATABASES CURSOR FOR SELECT NAME FROM MASTER..SYSDATABASES WHERE STATUS&512=0 AND NAME NOT IN(<str>)ORDER BY NAME ASC;SET@VCREPORTEBACKUP=<str>OPEN CURDATABASES FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME WHILE@@FETCH_STATUS=0 BEGIN SET@DTSTARTIME=GETDATE()SET@VCFILENAME=<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR(23),GETDATE(),112)+<str>BACKUP DATABASE@VCDATABASENAME TO DISK=@VCFILENAME WITH COMPRESSION,CHECKSUM,CONTINUE_AFTER_ERROR;RESTORE VERIFYONLY FROM DISK=@VCFILENAME SET@DTENDTIME=GETDATE()SET@ISEG=DATEDIFF(SS,@DTSTARTIME,@DTENDTIME)SET@VCREPORTEBACKUP=@VCREPORTEBACKUP+<str>+CONVERT(VARCHAR,@DTFECHA)+<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR,@ISEG)+<str>+@VCFILENAME+<str>FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME END CLOSE CURDATABASES DEALLOCATE CURDATABASES SET@VCREPORTEBACKUP=N<str>+@VCREPORTEBACKUP+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEBACKUP,@BODY_FORMAT=N<str>GO
AdmDBA	[dbo].[spBackupDatabases]	Warning	AbsolutePath	Hardcoded absolute path	:\	
AdmDBA	[dbo].[spCpuMonitor]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	record_id DESC	SELECT TOP 1 DATEADD(MS,-1*(@TS_NOW-TIMESTAMP),GETDATE())AS MONITORTIME,SQLPROCESSUTILIZATION,SYSTEMIDLE,100-SYSTEMIDLE-SQLPROCESSUTILIZATION AS OTHERPROCESSUTILIZATION FROM(SELECT RECORD.VALUE('(./RECORD/@ID)1','INT')AS RECORD_ID,RECORD.VALUE('(./RECORD/SCHEDULERMONITOREVENT/SYSTEMHEALTH/SYSTEMIDLE)1','INT')AS SYSTEMIDLE,RECORD.VALUE('(./RECORD/SCHEDULERMONITOREVENT/SYSTEMHEALTH/PROCESSUTILIZATION)1','INT')AS SQLPROCESSUTILIZATION,TIMESTAMP FROM(SELECT TIMESTAMP,CONVERT(XML,RECORD)AS RECORD FROM SYS.DM_OS_RING_BUFFERS WHERE RING_BUFFER_TYPE=N'RING_BUFFER_SCHEDULER_MONITOR'AND RECORD LIKE'%<SYSTEMHEALTH>%')AS X)AS Y ORDER BY RECORD_ID DESC OPTION(RECOMPILE)
AdmDBA	[dbo].[spHelpReport]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPHELPREPORT AS DECLARE@VCPROFILENAME VARCHAR(50)DECLARE@VCDATABASE VARCHAR(30)DECLARE@VCLOGINNAME VARCHAR(30)DECLARE@VCHOSTNAME VARCHAR(30)DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICANTIDADSESIONES INT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT DECLARE@VCVOL VARCHAR(5)DECLARE@FLFREESPACEMB FLOAT DECLARE@FLTOTALSPACE FLOAT DECLARE@FLAVAILABLESPACE FLOAT DECLARE@FLFILESIZEMB FLOAT DECLARE@FLSPACEUSEDMB FLOAT DECLARE@FLPERCENTAGEAVAILABLE FLOAT DECLARE@FLPORCENTAJEUSADO FLOAT DECLARE@VCVOLUMEN VARCHAR(10)DECLARE@FLUSED FLOAT DECLARE@VCREPORTECPU VARCHAR(2500)DECLARE@VCREPORTEMEMORIA VARCHAR(2500)DECLARE@VCREPORTEDISCO VARCHAR(MAX)DECLARE@VCREPORTESESIONES VARCHAR(MAX)DECLARE@VCHTML_MENSAJE VARCHAR(MAX)DECLARE@FLAVGCPUIDLE FLOAT,@FLAVGCPUIDLE30 FLOAT,@FLAVGCPUIDLE60 FLOAT DECLARE@FLAVGCPUUSED FLOAT,@FLAVGCPUUSED30 FLOAT,@FLAVGCPUUSED60 FLOAT DECLARE@FLAVGOTHERPROCESS FLOAT,@FLAVGOTHERPROCESS30 FLOAT,@FLAVGOTHERPROCESS60 FLOAT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>DECLARE CURSESSION CURSOR FOR SELECT LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLAVGOTHERPROCESS=AVG(IOTHERPROCESS),@FLAVGCPUUSED=AVG(ISQLCPUUSE),@FLAVGCPUIDLE=AVG(ISYSTEMIDLE)FROM MONITOR.TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-10,GETDATE())SELECT@FLAVGOTHERPROCESS30=AVG(IOTHERPROCESS),@FLAVGCPUUSED30=AVG(ISQLCPUUSE),@FLAVGCPUIDLE30=AVG(ISYSTEMIDLE)FROM MONITOR.TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-30,GETDATE())SELECT@FLAVGOTHERPROCESS60=AVG(IOTHERPROCESS),@FLAVGCPUUSED60=AVG(ISQLCPUUSE),@FLAVGCPUIDLE60=AVG(ISYSTEMIDLE)FROM MONITOR.TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-60,GETDATE())SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;CREATE TABLE#TMPDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;DECLARE CURSPACE CURSOR FOR SELECT DBNAME,ROUND(FLFILESIZEMB,2)AS FILESIZEMB,ROUND(FLSPACEUSEDMB,2)AS SPACEUSEDMB,ROUND(FLFREESPACEMB,2)AS FREESPACEMB,ROUND((FLSPACEUSEDMB*100/FLFILESIZEMB),2)AS PORCENTAJEUSADO FROM#TMPDBSIZE ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEDISCO=<str>+<str>SET@VCREPORTESESIONES=<str>+<str>SET@VCREPORTECPU=<str>+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED30)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED60)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS60)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE60)+<str>SET@VCREPORTEMEMORIA=<str>+<str>+CONVERT(VARCHAR(10),@FLTOTALMEMORY)+<str>+CONVERT(VARCHAR(10),@FLSQLSERVERUSED)+<str>+CONVERT(VARCHAR(10),@FLAVAILABLEMEMORY)+<str>OPEN CURSPACE FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEDISCO=@VCREPORTEDISCO+<str>+@VCDATABASE+<str>+CONVERT(VARCHAR(20),@FLFILESIZEMB)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSEDMB)+<str>+CONVERT(VARCHAR(20),@FLFREESPACEMB)+<str>+CONVERT(VARCHAR(20),@FLPORCENTAJEUSADO)+<str>FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO END CLOSE CURSPACE DEALLOCATE CURSPACE OPEN CURSESSION FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTESESIONES=@VCREPORTESESIONES+<str>+@VCLOGINNAME+<str>+@VCHOSTNAME+<str>+CONVERT(VARCHAR(20),@ICANTIDADSESIONES)+<str>FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES END CLOSE CURSESSION DEALLOCATE CURSESSION SET@VCHTML_MENSAJE=N<str>+@VCREPORTECPU+N<str>+@VCREPORTEMEMORIA+N<str>+@VCREPORTESESIONES+N<str>+@VCREPORTEDISCO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCHTML_MENSAJE,@BODY_FORMAT=N<str>GO
AdmDBA	[dbo].[spMonitorErrorLog]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorErrorLog]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorEspacioBD]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORESPACIOBD AS DECLARE@VCREPORTEESPACIO VARCHAR(MAX)DECLARE@VCPROFILENAME VARCHAR(255)DECLARE@VCDBNAME VARCHAR(255)DECLARE@FLFILESIZE FLOAT DECLARE@FLSPACEUSED FLOAT DECLARE@FLPERUSED FLOAT DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICOUNT INT=0 DECLARE@IUMBRAL INT=60 SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@VCASUNTO=<str>+@@SERVERNAME+<str>+CONVERT(VARCHAR(20),@IUMBRAL)+<str>CREATE TABLE#TBLDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TBLDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB,VCVOLUMEN,FLTOTALSPACE,FLAVAILABLESPACE,FLPERCENTAGEAVAILABLE)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;SET@VCREPORTEESPACIO=<str>DECLARE CURDBSPACE CURSOR FOR SELECT DBNAME,FLFILESIZEMB,FLSPACEUSEDMB,(FLSPACEUSEDMB*100)/FLFILESIZEMB PERC FROM#TBLDBSIZE WHERE(FLSPACEUSEDMB*100)/FLFILESIZEMB>0 OPEN CURDBSPACE FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLSPACEUSED,@FLPERUSED WHILE@@FETCH_STATUS=0 BEGIN IF@FLPERUSED>80 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+<str>+@VCDBNAME+<str>+CONVERT(VARCHAR(20),@FLFILESIZE)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSED)+<str>+CONVERT(VARCHAR(20),@FLPERUSED)+<str>+CONVERT(VARCHAR(50),GETDATE(),113)+<str>SET@ICOUNT=@ICOUNT+1;END FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLSPACEUSED,@FLPERUSED END CLOSE CURDBSPACE DEALLOCATE CURDBSPACE SET@VCREPORTEESPACIO=N<str>+@VCREPORTEESPACIO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>IF@ICOUNT>0 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+N<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEESPACIO,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorEspacioBDLog]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SPMONITORESPACIOBDLOG')IS NULL EXEC('CREATE PROCEDURE DBO.SPMONITORESPACIOBDLOG AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SPMONITORESPACIOBDLOG AS DECLARE@VCREPORTEESPACIO VARCHAR(MAX)DECLARE@VCPROFILENAME VARCHAR(255)DECLARE@VCDBNAME VARCHAR(255)DECLARE@FLFILESIZE FLOAT DECLARE@FLSPACEUSED FLOAT DECLARE@FLPERUSED FLOAT DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICOUNT INT=0 DECLARE@IUMBRAL INT=50 DECLARE@NVCDBCC NVARCHAR(1024)SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@VCASUNTO=''+@@SERVERNAME+'UMBRAL DE ESPACIO SUPERADO'+CONVERT(VARCHAR(20),@IUMBRAL)+'%'SET@NVCDBCC='DBCC SQLPERF(LOGSPACE)'CREATE TABLE#TBLDBLOGSIZE(DBNAME SYSNAME,FLFILESIZEMB FLOAT DEFAULT(0),FLPERSPACEUSED FLOAT DEFAULT(0),ISTATUS INT);INSERT INTO#TBLDBLOGSIZE EXEC MASTER..SP_EXECUTESQL@NVCDBCC SET@VCREPORTEESPACIO='<DIV STYLE="FONT-FAMILY:VERDANA;FONT-SIZE:18PX"><P>UMBRAL DE ESPACIO SUPERADO PARA LOG BD</P><TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#FFFFFF;FONT-FAMILY:VERDANA;BACKGROUND-COLOR: BLACK;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>TAMAÑO LOG BASE MB</STRONG></TD><TD WIDTH="15%"><STRONG>%DE USO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA/HORA</STRONG></TD></TR>'DECLARE CURDBSPACE CURSOR FOR SELECT DBNAME,FLFILESIZEMB,FLPERSPACEUSED FROM#TBLDBLOGSIZE WHERE FLPERSPACEUSED>@IUMBRAL OPEN CURDBSPACE FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLPERUSED WHILE@@FETCH_STATUS=0 BEGIN IF@FLPERUSED>65 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+'<TR STYLE="FONT-SIZE: 10PX;COLOR:#023962;FONT-FAMILY:TAHOMA;TEXT-ALIGN: CENTER"><TD>'+@VCDBNAME+'</TD><TD>'+CONVERT(VARCHAR(20),@FLFILESIZE)+'</TD><TD>'+CONVERT(VARCHAR(20),@FLPERUSED)+'</TD><TD>'+CONVERT(VARCHAR(50),GETDATE(),113)+'</TD></TR>'SET@ICOUNT=@ICOUNT+1;END FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLFILESIZE END CLOSE CURDBSPACE DEALLOCATE CURDBSPACE SET@VCREPORTEESPACIO=N'<HTML><P>'+@VCREPORTEESPACIO+N'</P></TABLE></HTML><HR>'+'<P>'+'<DIV STYLE="FONT-FAMILY:VERDANA;FONT-SIZE:10PX">'+'<FONT COLOR="GREEN">ESTE MENSAJE HA SIDO GENERADO AUTOMATICAMENTE DESDE'+@@SERVERNAME+''+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+'.'+'</P>'IF@ICOUNT>0 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N'BASEDATOS.CHILE@EXPERIAN.COM',@IMPORTANCE=N'HIGH',@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEESPACIO,@BODY_FORMAT=N'HTML'END GO
AdmDBA	[dbo].[spMonitorLoginFail]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORLOGINFAIL AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-5,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>4 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@COPY_RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorLoginFail]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORLOGINFAIL AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-5,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>4 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@COPY_RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spSpaceDisc]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SPSPACEDISC')IS NULL EXEC('CREATE PROCEDURE DBO.SPSPACEDISC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SPSPACEDISC AS SET NOCOUNT ON DECLARE@MYSQL NVARCHAR(1024)DECLARE@DISCO CHAR(1)DECLARE@MB INT DECLARE@ASIG INT DECLARE@PORCENUSADO INT DECLARE@MEN NVARCHAR(1024)DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@MENSAJE VARCHAR(4048)DECLARE@VCPROFILENAME VARCHAR(255)SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@MENSAJE=''SET@HTML_MENSAJE=''SET@MYSQL='EXEC MASTER..XP_FIXEDDRIVES'IF EXISTS(SELECT*FROM SYS.OBJECTS WHERE OBJECT_ID=OBJECT_ID(N'DBO.TMP_DRIVES')AND TYPE IN(N'U'))TRUNCATE TABLE DBO.TMP_DRIVES INSERT INTO TMP_DRIVES(DISCO,SIZEREALMB)EXEC SP_EXECUTESQL@MYSQL DECLARE DISCO CURSOR FOR SELECT DISCO,SIZEREALMB FROM TMP_DRIVES OPEN DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB WHILE@@FETCH_STATUS=0 BEGIN UPDATE TB_DRIVES SET SIZEREALMB=@MB,FECHA=GETDATE()WHERE DISCO=@DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB END CLOSE DISCO DEALLOCATE DISCO DECLARE DISCSPACE CURSOR FOR SELECT DISCO,SIZEINICIAL,SIZEREALMB FROM TB_DRIVES SET@ENVIAR_MENSAJE='N'SET@MENSAJE='<HTML><HEAD><TITLE>DEPARTMENT REPORT</TITLE></HEAD><BODY><P><FONT STYLE="FONT-FAMILY:TAHOMA;FONT-WEIGHT: BOLD;FONT-SIZE: 13PX;COLOR:#023962">ALERTA DE ESPACIO EN DISCO,SERVIDOR<TABLE WIDTH="70%"STYLE="BORDER-COLLAPSE: COLLAPSE;BORDER-TOP: 3PX SOLID#CCE49D"><TR><TD></TD></TR></TABLE></FONT>'+@@SERVERNAME+'</P>'OPEN DISCSPACE FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB SET@MENSAJE=@MENSAJE+'<BR>'+'<TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#023962;FONT-FAMILY:TAHOMA;BACKGROUND-COLOR:#CCE49D;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>%DE ESPACIO OCUPADO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA</STRONG></TD></TR>'WHILE@@FETCH_STATUS=0 BEGIN SELECT@PORCENUSADO=(@ASIG-@MB)*100/@ASIG IF@PORCENUSADO>80 BEGIN SET@MEN='WARNING EN DISCO VALIDANDO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END ELSE IF@PORCENUSADO>85 BEGIN SET@MEN='CRITICAL ERROR EN DISCO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB END IF@ENVIAR_MENSAJE='Y'BEGIN SET@HTML_MENSAJE=N'<HTML><P>'+@MENSAJE+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N'BASEDATOS.CHILE@EXPERIAN.COM',@SUBJECT='ALERTA DE ESPACIO EN DISCOS',@BODY=@HTML_MENSAJE,@BODY_FORMAT='HTML',@IMPORTANCE='HIGH',@SENSITIVITY='NORMAL'END CLOSE DISCSPACE DEALLOCATE DISCSPACE GO
DataCollector	[snapshots].[fn_get_notable_query_plans]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	[sql_handle] ASC, ; ; ; [plan_handle], ; ; ; [statement_start_offset], ; ; ; [statement_end_offset], ; ; ; [creation_time] ASC	SELECT SQL_HANDLE,PLAN_HANDLE,STATEMENT_START_OFFSET,STATEMENT_END_OFFSET,CONVERT(DATETIME,CREATION_TIME)AS CREATION_TIME FROM SNAPSHOTS.NOTABLE_QUERY_PLAN WHERE SOURCE_ID=@SOURCE_ID ORDER BY SQL_HANDLE ASC,PLAN_HANDLE,STATEMENT_START_OFFSET,STATEMENT_END_OFFSET,CREATION_TIME ASC
DataCollector	[snapshots].[fn_get_notable_query_text]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	[sql_handle] ASC	SELECT SQL_HANDLE FROM SNAPSHOTS.NOTABLE_QUERY_TEXT WHERE SOURCE_ID=@SOURCE_ID ORDER BY SQL_HANDLE ASC
DataCollector	[core].[sp_create_snapshot]	Warning	UnsupportedHint	UPDLOCK hint	UPDLOCK	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE CORE.SP_CREATE_SNAPSHOT@COLLECTION_SET_UID UNIQUEIDENTIFIER,@COLLECTOR_TYPE_UID UNIQUEIDENTIFIER,@MACHINE_NAME SYSNAME,@NAMED_INSTANCE SYSNAME,@LOG_ID BIGINT,@SNAPSHOT_ID INT OUTPUT AS BEGIN SET NOCOUNT ON SET TRANSACTION ISOLATION LEVEL SERIALIZABLE IF(NOT(ISNULL(IS_MEMBER(N<str>),0)=1)AND NOT(ISNULL(IS_SRVROLEMEMBER(N<str>),0)=1))BEGIN RAISERROR(14677,16,-1,<str>)RETURN(1)END DECLARE@OPERATOR SYSNAME;SELECT@OPERATOR=SUSER_SNAME();DECLARE@INSTANCE_NAME SYSNAME SET@NAMED_INSTANCE=NULLIF(RTRIM(LTRIM(@NAMED_INSTANCE)),N<str>)IF(@NAMED_INSTANCE=<str>)SET@INSTANCE_NAME=@MACHINE_NAME ELSE SET@INSTANCE_NAME=@MACHINE_NAME+N<str>+@NAMED_INSTANCE DECLARE@SOURCE_ID INT SET@SOURCE_ID=(SELECT SOURCE_ID FROM CORE.SOURCE_INFO_INTERNAL WHERE COLLECTION_SET_UID=@COLLECTION_SET_UID AND OPERATOR=@OPERATOR AND INSTANCE_NAME=@INSTANCE_NAME)IF(@SOURCE_ID IS NULL)BEGIN DECLARE@COLLECTION_SET_UID_AS_CHAR NVARCHAR(36)SELECT@COLLECTION_SET_UID_AS_CHAR=CONVERT(NVARCHAR(36),@COLLECTION_SET_UID)RAISERROR(14679,-1,-1,N<str>,@COLLECTION_SET_UID_AS_CHAR)END IF NOT EXISTS(SELECT COLLECTOR_TYPE_UID FROM CORE.SUPPORTED_COLLECTOR_TYPES WHERE COLLECTOR_TYPE_UID=@COLLECTOR_TYPE_UID)BEGIN DECLARE@COLLECTOR_TYPE_UID_AS_CHAR NVARCHAR(36)SELECT@COLLECTOR_TYPE_UID_AS_CHAR=CONVERT(NVARCHAR(36),@COLLECTOR_TYPE_UID)RAISERROR(14679,-1,-1,N<str>,@COLLECTOR_TYPE_UID_AS_CHAR)END BEGIN TRY BEGIN TRAN DECLARE@SNAPSHOT_TIME_ID INT IF NOT EXISTS(SELECT SNAPSHOT_TIME_ID FROM CORE.SNAPSHOT_TIMETABLE_INTERNAL WITH(UPDLOCK)WHERE SNAPSHOT_TIME>DATEADD(MINUTE,-1,SYSDATETIMEOFFSET()))BEGIN INSERT INTO CORE.SNAPSHOT_TIMETABLE_INTERNAL(SNAPSHOT_TIME)VALUES(SYSDATETIMEOFFSET())SET@SNAPSHOT_TIME_ID=SCOPE_IDENTITY()END ELSE BEGIN SET@SNAPSHOT_TIME_ID=(SELECT MAX(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOT_TIMETABLE_INTERNAL)END INSERT INTO CORE.SNAPSHOTS_INTERNAL(SNAPSHOT_TIME_ID,SOURCE_ID,LOG_ID)VALUES(@SNAPSHOT_TIME_ID,@SOURCE_ID,@LOG_ID)SET@SNAPSHOT_ID=SCOPE_IDENTITY()IF(@SNAPSHOT_ID IS NULL)BEGIN RAISERROR(14262,-1,-1,<str>,@SNAPSHOT_ID)RETURN(1)END ELSE BEGIN COMMIT TRAN END END TRY BEGIN CATCH IF(@@TRANCOUNT>0)ROLLBACK TRANSACTION DECLARE@ERRORMESSAGE NVARCHAR(4000);DECLARE@ERRORSEVERITY INT;DECLARE@ERRORSTATE INT;DECLARE@ERRORNUMBER INT;DECLARE@ERRORLINE INT;DECLARE@ERRORPROCEDURE NVARCHAR(200);SELECT@ERRORLINE=ERROR_LINE(),@ERRORSEVERITY=ERROR_SEVERITY(),@ERRORSTATE=ERROR_STATE(),@ERRORNUMBER=ERROR_NUMBER(),@ERRORMESSAGE=ERROR_MESSAGE(),@ERRORPROCEDURE=ISNULL(ERROR_PROCEDURE(),<str>);RAISERROR(14684,-1,-1,@ERRORNUMBER,@ERRORSEVERITY,@ERRORSTATE,@ERRORPROCEDURE,@ERRORLINE,@ERRORMESSAGE);END CATCH END GO
DataCollector	[core].[sp_purge_data]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY P.SNAPSHOT_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE CORE.SP_PURGE_DATA@RETENTION_DAYS SMALLINT=NULL,@INSTANCE_NAME SYSNAME=NULL,@COLLECTION_SET_UID UNIQUEIDENTIFIER=NULL,@DURATION SMALLINT=NULL,@DELETE_BATCH_SIZE INT=500 AS BEGIN IF(NOT(ISNULL(IS_MEMBER(N<str>),0)=1)AND NOT(ISNULL(IS_SRVROLEMEMBER(N<str>),0)=1))BEGIN RAISERROR(14677,16,-1,<str>)RETURN(1)END IF((@RETENTION_DAYS IS NOT NULL)AND(@RETENTION_DAYS<0))BEGIN RAISERROR(14200,-1,-1,<str>)RETURN(1)END IF((@DURATION IS NOT NULL)AND(@DURATION<0))BEGIN RAISERROR(14200,-1,-1,<str>)RETURN(1)END DELETE FROM CORE.PURGE_INFO_INTERNAL SET@INSTANCE_NAME=NULLIF(LTRIM(RTRIM(@INSTANCE_NAME)),N<str>)DECLARE@END_TIME DATETIME IF(@DURATION IS NOT NULL)BEGIN SET@END_TIME=DATEADD(MINUTE,@DURATION,GETUTCDATE())END DECLARE@PURGE_CANDIDATES TABLE(SNAPSHOT_ID INT NOT NULL,SNAPSHOT_TIME DATETIME NOT NULL,INSTANCE_NAME SYSNAME NOT NULL,COLLECTION_SET_UID UNIQUEIDENTIFIER NOT NULL)IF(@RETENTION_DAYS IS NULL)BEGIN INSERT INTO@PURGE_CANDIDATES SELECT S.SNAPSHOT_ID,S.SNAPSHOT_TIME,S.INSTANCE_NAME,S.COLLECTION_SET_UID FROM CORE.SNAPSHOTS S WHERE(GETUTCDATE()>=S.VALID_THROUGH)END ELSE BEGIN INSERT INTO@PURGE_CANDIDATES SELECT S.SNAPSHOT_ID,S.SNAPSHOT_TIME,S.INSTANCE_NAME,S.COLLECTION_SET_UID FROM CORE.SNAPSHOTS S WHERE GETUTCDATE()>=DATEADD(DAY,@RETENTION_DAYS,S.SNAPSHOT_TIME)END DECLARE OLDEST_SNAPSHOT_CURSOR CURSOR FORWARD_ONLY READ_ONLY FOR SELECT P.SNAPSHOT_ID,P.INSTANCE_NAME,P.COLLECTION_SET_UID FROM@PURGE_CANDIDATES P WHERE((@INSTANCE_NAME IS NULL)OR(P.INSTANCE_NAME=@INSTANCE_NAME))AND((@COLLECTION_SET_UID IS NULL)OR(P.COLLECTION_SET_UID=@COLLECTION_SET_UID))ORDER BY P.SNAPSHOT_TIME ASC OPEN OLDEST_SNAPSHOT_CURSOR DECLARE@STOP_PURGE INT DECLARE@OLDEST_SNAPSHOT_ID INT DECLARE@OLDEST_INSTANCE_NAME SYSNAME DECLARE@OLDEST_COLLECTION_SET_UID UNIQUEIDENTIFIER FETCH NEXT FROM OLDEST_SNAPSHOT_CURSOR INTO@OLDEST_SNAPSHOT_ID,@OLDEST_INSTANCE_NAME,@OLDEST_COLLECTION_SET_UID WHILE@@FETCH_STATUS=0 BEGIN IF((@INSTANCE_NAME IS NULL)OR(@OLDEST_INSTANCE_NAME=@INSTANCE_NAME))BEGIN IF((@COLLECTION_SET_UID IS NULL)OR(@OLDEST_COLLECTION_SET_UID=@COLLECTION_SET_UID))BEGIN BEGIN TRANSACTION TRAN_SP_PURGE_DATA DELETE CORE.SNAPSHOTS_INTERNAL FROM CORE.SNAPSHOTS_INTERNAL S WHERE S.SNAPSHOT_ID=@OLDEST_SNAPSHOT_ID COMMIT TRANSACTION TRAN_SP_PURGE_DATA PRINT<str>+CONVERT(VARCHAR,@OLDEST_SNAPSHOT_ID)+<str>;END END IF(@DURATION IS NOT NULL)BEGIN IF(GETUTCDATE()>=@END_TIME)BEGIN PRINT<str>+CONVERT(VARCHAR,@DURATION)+<str>;BREAK END END SELECT@STOP_PURGE=COUNT(STOP_PURGE)FROM CORE.PURGE_INFO_INTERNAL IF(@STOP_PURGE>0)BEGIN PRINT<str>;BREAK END FETCH NEXT FROM OLDEST_SNAPSHOT_CURSOR INTO@OLDEST_SNAPSHOT_ID,@OLDEST_INSTANCE_NAME,@OLDEST_COLLECTION_SET_UID END CLOSE OLDEST_SNAPSHOT_CURSOR DEALLOCATE OLDEST_SNAPSHOT_CURSOR EXEC CORE.SP_PURGE_ORPHANED_NOTABLE_QUERY_PLAN@DURATION=@DURATION,@END_TIME=@END_TIME,@DELETE_BATCH_SIZE=@DELETE_BATCH_SIZE EXEC CORE.SP_PURGE_ORPHANED_NOTABLE_QUERY_TEXT@DURATION=@DURATION,@END_TIME=@END_TIME,@DELETE_BATCH_SIZE=@DELETE_BATCH_SIZE END GO
DataCollector	[core].[sp_update_data_source]	Warning	UnsupportedHint	UPDLOCK hint	UPDLOCK	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE CORE.SP_UPDATE_DATA_SOURCE@COLLECTION_SET_UID UNIQUEIDENTIFIER,@MACHINE_NAME SYSNAME,@NAMED_INSTANCE SYSNAME,@DAYS_UNTIL_EXPIRATION SMALLINT,@SOURCE_ID INT OUTPUT AS BEGIN SET NOCOUNT ON SET TRANSACTION ISOLATION LEVEL SERIALIZABLE IF(NOT(ISNULL(IS_MEMBER(N<str>),0)=1)AND NOT(ISNULL(IS_SRVROLEMEMBER(N<str>),0)=1))BEGIN RAISERROR(14677,16,-1,<str>)RETURN(1)END IF(@COLLECTION_SET_UID IS NULL)BEGIN RAISERROR(14200,-1,-1,<str>)RETURN(1)END SET@MACHINE_NAME=NULLIF(RTRIM(LTRIM(@MACHINE_NAME)),N<str>)IF(@MACHINE_NAME IS NULL)BEGIN RAISERROR(14200,-1,-1,<str>)RETURN(1)END DECLARE@INSTANCE_NAME SYSNAME SET@NAMED_INSTANCE=NULLIF(RTRIM(LTRIM(@NAMED_INSTANCE)),N<str>)IF(@NAMED_INSTANCE=<str>)SET@INSTANCE_NAME=@MACHINE_NAME ELSE SET@INSTANCE_NAME=@MACHINE_NAME+N<str>+@NAMED_INSTANCE IF(@DAYS_UNTIL_EXPIRATION IS NULL)BEGIN RAISERROR(14200,-1,-1,<str>)RETURN(1)END IF(@DAYS_UNTIL_EXPIRATION<0)BEGIN RAISERROR(14266,-1,-1,<str>,<str>)RETURN(1)END DECLARE@OPERATOR SYSNAME SELECT@OPERATOR=SUSER_SNAME()BEGIN TRY BEGIN TRAN SET@SOURCE_ID=(SELECT SOURCE_ID FROM CORE.SOURCE_INFO_INTERNAL WITH(UPDLOCK)WHERE COLLECTION_SET_UID=@COLLECTION_SET_UID AND INSTANCE_NAME=@INSTANCE_NAME AND OPERATOR=@OPERATOR)IF@SOURCE_ID IS NULL BEGIN INSERT INTO CORE.SOURCE_INFO_INTERNAL(COLLECTION_SET_UID,INSTANCE_NAME,DAYS_UNTIL_EXPIRATION,OPERATOR)VALUES(@COLLECTION_SET_UID,@INSTANCE_NAME,@DAYS_UNTIL_EXPIRATION,@OPERATOR)SET@SOURCE_ID=SCOPE_IDENTITY()END ELSE BEGIN UPDATE CORE.SOURCE_INFO_INTERNAL SET DAYS_UNTIL_EXPIRATION=@DAYS_UNTIL_EXPIRATION WHERE SOURCE_ID=@SOURCE_ID;END COMMIT TRAN RETURN(0)END TRY BEGIN CATCH IF(@@TRANCOUNT>0)ROLLBACK TRANSACTION DECLARE@ERRORMESSAGE NVARCHAR(4000);DECLARE@ERRORSEVERITY INT;DECLARE@ERRORSTATE INT;DECLARE@ERRORNUMBER INT;DECLARE@ERRORLINE INT;DECLARE@ERRORPROCEDURE NVARCHAR(200);SELECT@ERRORLINE=ERROR_LINE(),@ERRORSEVERITY=ERROR_SEVERITY(),@ERRORSTATE=ERROR_STATE(),@ERRORNUMBER=ERROR_NUMBER(),@ERRORMESSAGE=ERROR_MESSAGE(),@ERRORPROCEDURE=ISNULL(ERROR_PROCEDURE(),<str>);RAISERROR(14684,-1,-1,@ERRORNUMBER,@ERRORSEVERITY,@ERRORSTATE,@ERRORPROCEDURE,@ERRORLINE,@ERRORMESSAGE);RETURN(1)END CATCH END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAIN_DETAIL@INSTANCE_NAME SYSNAME,@BLOCKING_TIME_STR VARCHAR(40),@HEAD_BLOCKER_SESSION_ID INT AS BEGIN SET NOCOUNT ON;DECLARE@BLOCKING_START_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_END_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_TIME DATETIMEOFFSET(7)SET@BLOCKING_TIME=SWITCHOFFSET(CAST(@BLOCKING_TIME_STR AS DATETIMEOFFSET(7)),<str>)DECLARE@BLOCKING_END_SNAPSHOT_ID INT DECLARE@BLOCKING_END_SOURCE_ID INT DECLARE@HOUR_COUNT INT SET@HOUR_COUNT=-1 WHILE(@BLOCKING_START_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<DATEADD(HOUR,@HOUR_COUNT+1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND@BLOCKING_TIME AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME DESC END ELSE BEGIN SELECT@BLOCKING_START_TIME=ISNULL(DATEADD(SECOND,-10,MIN(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT-1 END SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>@BLOCKING_START_TIME ORDER BY R.COLLECTION_TIME ASC SET@HOUR_COUNT=1 WHILE(@BLOCKING_END_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME)AND DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME ASC END ELSE BEGIN SELECT@BLOCKING_END_TIME=ISNULL(DATEADD(SECOND,10,MAX(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT+1 END SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME,@BLOCKING_END_SNAPSHOT_ID=R.SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID=S.SOURCE_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<@BLOCKING_END_TIME ORDER BY R.COLLECTION_TIME DESC DECLARE@INTERVAL_SEC INT SET@INTERVAL_SEC=DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)/10 CREATE TABLE#SAMPLE_COLLECTION_TIMES(SNAPSHOT_ID INT,SOURCE_ID INT,COLLECTION_TIME DATETIMEOFFSET(7))DECLARE@I INT SET@I=0 WHILE(@I<9)BEGIN INSERT INTO#SAMPLE_COLLECTION_TIMES SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC SET@I=@I+1 END INSERT INTO#SAMPLE_COLLECTION_TIMES VALUES(@BLOCKING_END_SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID,@BLOCKING_END_TIME);WITH BLOCKING_HIERARCHY AS(SELECT T.COLLECTION_TIME,T.SNAPSHOT_ID,T.SOURCE_ID,0 AS LEVEL,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.REQUEST_STATUS,R.COMMAND,R.BLOCKING_SESSION_ID,R.BLOCKING_EXEC_CONTEXT_ID,R.WAIT_TYPE,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.RESOURCE_DESCRIPTION,R.LOGIN_NAME,R.LOGIN_TIME,R.PROGRAM_NAME,R.HOST_NAME,R.DATABASE_NAME,R.OPEN_TRANSACTION_COUNT,R.TRANSACTION_ISOLATION_LEVEL,R.REQUEST_CPU_TIME,R.REQUEST_TOTAL_ELAPSED_TIME,R.REQUEST_START_TIME,R.MEMORY_USAGE,R.SESSION_CPU_TIME,R.SESSION_TOTAL_SCHEDULED_TIME,R.SESSION_ROW_COUNT,R.PENDING_IO_COUNT,R.PREV_ERROR,R.SESSION_LAST_REQUEST_START_TIME,R.SESSION_LAST_REQUEST_END_TIME,R.OPEN_RESULTSETS,R.PLAN_HANDLE,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET FROM#SAMPLE_COLLECTION_TIMES AS T INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R ON T.SNAPSHOT_ID=R.SNAPSHOT_ID AND T.COLLECTION_TIME=R.COLLECTION_TIME WHERE R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID AND ISNULL(R.EXEC_CONTEXT_ID,0)IN(-1,0)UNION ALL SELECT R2.COLLECTION_TIME,R2.SNAPSHOT_ID,PARENT.SOURCE_ID,PARENT.LEVEL+1 AS LEVEL,R2.SESSION_ID,R2.REQUEST_ID,R2.EXEC_CONTEXT_ID,R2.REQUEST_STATUS,R2.COMMAND,R2.BLOCKING_SESSION_ID,R2.BLOCKING_EXEC_CONTEXT_ID,R2.WAIT_TYPE,R2.WAIT_DURATION_MS,R2.WAIT_RESOURCE,R2.RESOURCE_DESCRIPTION,R2.LOGIN_NAME,R2.LOGIN_TIME,R2.PROGRAM_NAME,R2.HOST_NAME,R2.DATABASE_NAME,R2.OPEN_TRANSACTION_COUNT,R2.TRANSACTION_ISOLATION_LEVEL,R2.REQUEST_CPU_TIME,R2.REQUEST_TOTAL_ELAPSED_TIME,R2.REQUEST_START_TIME,R2.MEMORY_USAGE,R2.SESSION_CPU_TIME,R2.SESSION_TOTAL_SCHEDULED_TIME,R2.SESSION_ROW_COUNT,R2.PENDING_IO_COUNT,R2.PREV_ERROR,R2.SESSION_LAST_REQUEST_START_TIME,R2.SESSION_LAST_REQUEST_END_TIME,R2.OPEN_RESULTSETS,R2.PLAN_HANDLE,R2.SQL_HANDLE,R2.STATEMENT_START_OFFSET,R2.STATEMENT_END_OFFSET FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 INNER JOIN BLOCKING_HIERARCHY AS PARENT ON PARENT.SNAPSHOT_ID=R2.SNAPSHOT_ID AND PARENT.COLLECTION_TIME=R2.COLLECTION_TIME AND PARENT.SESSION_ID=R2.BLOCKING_SESSION_ID)SELECT*INTO#BLOCKING_HIERARCHY FROM BLOCKING_HIERARCHY SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)AS BLOCKING_DURATION,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_END_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.CHART_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>),126)AS COLLECTION_TIME_STR,@HEAD_BLOCKER_SESSION_ID AS HEAD_BLOCKER_SESSION_ID,COUNT(DISTINCT BLOCKED.SESSION_ID)AS BLOCKED_SESSION_COUNT,SUM(BLOCKED.WAIT_DURATION_MS)AS TOTAL_WAIT_TIME,AVG(BLOCKED.WAIT_DURATION_MS)AS AVG_WAIT_TIME,(SELECT TOP 1 RESOURCE_DESCRIPTION FROM#BLOCKING_HIERARCHY BH WHERE BH.COLLECTION_TIME=BLOCKED.COLLECTION_TIME AND BH.SNAPSHOT_ID=BLOCKED.SNAPSHOT_ID AND BH.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID GROUP BY RESOURCE_DESCRIPTION ORDER BY SUM(WAIT_DURATION_MS)DESC)AS PRIMARY_WAIT_RESOURCE_DESCRIPTION,ISNULL(BLOCKER.COMMAND,<str>)AS COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKER.LOGIN_TIME AS DATETIMEOFFSET(7)),<str>))AS LOGIN_TIME,BLOCKER.DATABASE_NAME,MAX(BLOCKER.OPEN_TRANSACTION_COUNT)AS OPEN_TRANSACTION_COUNT,MAX(BLOCKER.TRANSACTION_ISOLATION_LEVEL)AS TRANSACTION_ISOLATION_LEVEL,MAX(BLOCKER.REQUEST_CPU_TIME)AS REQUEST_CPU_TIME,MAX(BLOCKER.REQUEST_TOTAL_ELAPSED_TIME)AS REQUEST_TOTAL_ELAPSED_TIME,MIN(BLOCKER.REQUEST_START_TIME)AS REQUEST_START_TIME,MAX(BLOCKER.MEMORY_USAGE)AS MEMORY_USAGE,MAX(BLOCKER.SESSION_CPU_TIME)AS SESSION_CPU_TIME,MAX(BLOCKER.SESSION_TOTAL_SCHEDULED_TIME)AS SESSION_TOTAL_SCHEDULED_TIME,MAX(BLOCKER.SESSION_ROW_COUNT)AS SESSION_ROW_COUNT,MAX(BLOCKER.PENDING_IO_COUNT)AS PENDING_IO_COUNT,MAX(BLOCKER.PREV_ERROR)AS PREV_ERROR,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_START_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_END_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_END_TIME,MAX(BLOCKER.OPEN_RESULTSETS)AS OPEN_RESULTSETS,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(BLOCKER.PLAN_HANDLE)AS PLAN_HANDLE_STR,MASTER.FN_VARBINTOHEXSTR(BLOCKER.SQL_HANDLE)AS SQL_HANDLE_STR,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(SQL_TEXT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT FROM(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0)AS BLOCKED INNER JOIN(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0)AS BLOCKER ON BLOCKED.COLLECTION_TIME=BLOCKER.COLLECTION_TIME AND BLOCKED.SNAPSHOT_ID=BLOCKER.SNAPSHOT_ID AND BLOCKED.CHART_COLLECTION_TIME=BLOCKER.CHART_COLLECTION_TIME OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(BLOCKER.SOURCE_ID,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET)AS SQL_TEXT LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON BLOCKER.WAIT_TYPE=WT.WAIT_TYPE WHERE BLOCKER.BLOCKING_SESSION_ID=0 AND BLOCKED.BLOCKING_SESSION_ID!=0 GROUP BY BLOCKED.CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,BLOCKED.COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,BLOCKER.COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,BLOCKER.LOGIN_TIME,BLOCKER.DATABASE_NAME,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT ORDER BY BLOCKED.COLLECTION_TIME ASC END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAIN_DETAIL@INSTANCE_NAME SYSNAME,@BLOCKING_TIME_STR VARCHAR(40),@HEAD_BLOCKER_SESSION_ID INT AS BEGIN SET NOCOUNT ON;DECLARE@BLOCKING_START_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_END_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_TIME DATETIMEOFFSET(7)SET@BLOCKING_TIME=SWITCHOFFSET(CAST(@BLOCKING_TIME_STR AS DATETIMEOFFSET(7)),<str>)DECLARE@BLOCKING_END_SNAPSHOT_ID INT DECLARE@BLOCKING_END_SOURCE_ID INT DECLARE@HOUR_COUNT INT SET@HOUR_COUNT=-1 WHILE(@BLOCKING_START_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<DATEADD(HOUR,@HOUR_COUNT+1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND@BLOCKING_TIME AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME DESC END ELSE BEGIN SELECT@BLOCKING_START_TIME=ISNULL(DATEADD(SECOND,-10,MIN(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT-1 END SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>@BLOCKING_START_TIME ORDER BY R.COLLECTION_TIME ASC SET@HOUR_COUNT=1 WHILE(@BLOCKING_END_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME)AND DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME ASC END ELSE BEGIN SELECT@BLOCKING_END_TIME=ISNULL(DATEADD(SECOND,10,MAX(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT+1 END SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME,@BLOCKING_END_SNAPSHOT_ID=R.SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID=S.SOURCE_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<@BLOCKING_END_TIME ORDER BY R.COLLECTION_TIME DESC DECLARE@INTERVAL_SEC INT SET@INTERVAL_SEC=DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)/10 CREATE TABLE#SAMPLE_COLLECTION_TIMES(SNAPSHOT_ID INT,SOURCE_ID INT,COLLECTION_TIME DATETIMEOFFSET(7))DECLARE@I INT SET@I=0 WHILE(@I<9)BEGIN INSERT INTO#SAMPLE_COLLECTION_TIMES SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC SET@I=@I+1 END INSERT INTO#SAMPLE_COLLECTION_TIMES VALUES(@BLOCKING_END_SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID,@BLOCKING_END_TIME);WITH BLOCKING_HIERARCHY AS(SELECT T.COLLECTION_TIME,T.SNAPSHOT_ID,T.SOURCE_ID,0 AS LEVEL,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.REQUEST_STATUS,R.COMMAND,R.BLOCKING_SESSION_ID,R.BLOCKING_EXEC_CONTEXT_ID,R.WAIT_TYPE,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.RESOURCE_DESCRIPTION,R.LOGIN_NAME,R.LOGIN_TIME,R.PROGRAM_NAME,R.HOST_NAME,R.DATABASE_NAME,R.OPEN_TRANSACTION_COUNT,R.TRANSACTION_ISOLATION_LEVEL,R.REQUEST_CPU_TIME,R.REQUEST_TOTAL_ELAPSED_TIME,R.REQUEST_START_TIME,R.MEMORY_USAGE,R.SESSION_CPU_TIME,R.SESSION_TOTAL_SCHEDULED_TIME,R.SESSION_ROW_COUNT,R.PENDING_IO_COUNT,R.PREV_ERROR,R.SESSION_LAST_REQUEST_START_TIME,R.SESSION_LAST_REQUEST_END_TIME,R.OPEN_RESULTSETS,R.PLAN_HANDLE,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET FROM#SAMPLE_COLLECTION_TIMES AS T INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R ON T.SNAPSHOT_ID=R.SNAPSHOT_ID AND T.COLLECTION_TIME=R.COLLECTION_TIME WHERE R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID AND ISNULL(R.EXEC_CONTEXT_ID,0)IN(-1,0)UNION ALL SELECT R2.COLLECTION_TIME,R2.SNAPSHOT_ID,PARENT.SOURCE_ID,PARENT.LEVEL+1 AS LEVEL,R2.SESSION_ID,R2.REQUEST_ID,R2.EXEC_CONTEXT_ID,R2.REQUEST_STATUS,R2.COMMAND,R2.BLOCKING_SESSION_ID,R2.BLOCKING_EXEC_CONTEXT_ID,R2.WAIT_TYPE,R2.WAIT_DURATION_MS,R2.WAIT_RESOURCE,R2.RESOURCE_DESCRIPTION,R2.LOGIN_NAME,R2.LOGIN_TIME,R2.PROGRAM_NAME,R2.HOST_NAME,R2.DATABASE_NAME,R2.OPEN_TRANSACTION_COUNT,R2.TRANSACTION_ISOLATION_LEVEL,R2.REQUEST_CPU_TIME,R2.REQUEST_TOTAL_ELAPSED_TIME,R2.REQUEST_START_TIME,R2.MEMORY_USAGE,R2.SESSION_CPU_TIME,R2.SESSION_TOTAL_SCHEDULED_TIME,R2.SESSION_ROW_COUNT,R2.PENDING_IO_COUNT,R2.PREV_ERROR,R2.SESSION_LAST_REQUEST_START_TIME,R2.SESSION_LAST_REQUEST_END_TIME,R2.OPEN_RESULTSETS,R2.PLAN_HANDLE,R2.SQL_HANDLE,R2.STATEMENT_START_OFFSET,R2.STATEMENT_END_OFFSET FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 INNER JOIN BLOCKING_HIERARCHY AS PARENT ON PARENT.SNAPSHOT_ID=R2.SNAPSHOT_ID AND PARENT.COLLECTION_TIME=R2.COLLECTION_TIME AND PARENT.SESSION_ID=R2.BLOCKING_SESSION_ID)SELECT*INTO#BLOCKING_HIERARCHY FROM BLOCKING_HIERARCHY SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)AS BLOCKING_DURATION,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_END_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.CHART_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>),126)AS COLLECTION_TIME_STR,@HEAD_BLOCKER_SESSION_ID AS HEAD_BLOCKER_SESSION_ID,COUNT(DISTINCT BLOCKED.SESSION_ID)AS BLOCKED_SESSION_COUNT,SUM(BLOCKED.WAIT_DURATION_MS)AS TOTAL_WAIT_TIME,AVG(BLOCKED.WAIT_DURATION_MS)AS AVG_WAIT_TIME,(SELECT TOP 1 RESOURCE_DESCRIPTION FROM#BLOCKING_HIERARCHY BH WHERE BH.COLLECTION_TIME=BLOCKED.COLLECTION_TIME AND BH.SNAPSHOT_ID=BLOCKED.SNAPSHOT_ID AND BH.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID GROUP BY RESOURCE_DESCRIPTION ORDER BY SUM(WAIT_DURATION_MS)DESC)AS PRIMARY_WAIT_RESOURCE_DESCRIPTION,ISNULL(BLOCKER.COMMAND,<str>)AS COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKER.LOGIN_TIME AS DATETIMEOFFSET(7)),<str>))AS LOGIN_TIME,BLOCKER.DATABASE_NAME,MAX(BLOCKER.OPEN_TRANSACTION_COUNT)AS OPEN_TRANSACTION_COUNT,MAX(BLOCKER.TRANSACTION_ISOLATION_LEVEL)AS TRANSACTION_ISOLATION_LEVEL,MAX(BLOCKER.REQUEST_CPU_TIME)AS REQUEST_CPU_TIME,MAX(BLOCKER.REQUEST_TOTAL_ELAPSED_TIME)AS REQUEST_TOTAL_ELAPSED_TIME,MIN(BLOCKER.REQUEST_START_TIME)AS REQUEST_START_TIME,MAX(BLOCKER.MEMORY_USAGE)AS MEMORY_USAGE,MAX(BLOCKER.SESSION_CPU_TIME)AS SESSION_CPU_TIME,MAX(BLOCKER.SESSION_TOTAL_SCHEDULED_TIME)AS SESSION_TOTAL_SCHEDULED_TIME,MAX(BLOCKER.SESSION_ROW_COUNT)AS SESSION_ROW_COUNT,MAX(BLOCKER.PENDING_IO_COUNT)AS PENDING_IO_COUNT,MAX(BLOCKER.PREV_ERROR)AS PREV_ERROR,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_START_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_END_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_END_TIME,MAX(BLOCKER.OPEN_RESULTSETS)AS OPEN_RESULTSETS,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(BLOCKER.PLAN_HANDLE)AS PLAN_HANDLE_STR,MASTER.FN_VARBINTOHEXSTR(BLOCKER.SQL_HANDLE)AS SQL_HANDLE_STR,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(SQL_TEXT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT FROM(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0)AS BLOCKED INNER JOIN(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0)AS BLOCKER ON BLOCKED.COLLECTION_TIME=BLOCKER.COLLECTION_TIME AND BLOCKED.SNAPSHOT_ID=BLOCKER.SNAPSHOT_ID AND BLOCKED.CHART_COLLECTION_TIME=BLOCKER.CHART_COLLECTION_TIME OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(BLOCKER.SOURCE_ID,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET)AS SQL_TEXT LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON BLOCKER.WAIT_TYPE=WT.WAIT_TYPE WHERE BLOCKER.BLOCKING_SESSION_ID=0 AND BLOCKED.BLOCKING_SESSION_ID!=0 GROUP BY BLOCKED.CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,BLOCKED.COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,BLOCKER.COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,BLOCKER.LOGIN_TIME,BLOCKER.DATABASE_NAME,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT ORDER BY BLOCKED.COLLECTION_TIME ASC END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAIN_DETAIL@INSTANCE_NAME SYSNAME,@BLOCKING_TIME_STR VARCHAR(40),@HEAD_BLOCKER_SESSION_ID INT AS BEGIN SET NOCOUNT ON;DECLARE@BLOCKING_START_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_END_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_TIME DATETIMEOFFSET(7)SET@BLOCKING_TIME=SWITCHOFFSET(CAST(@BLOCKING_TIME_STR AS DATETIMEOFFSET(7)),<str>)DECLARE@BLOCKING_END_SNAPSHOT_ID INT DECLARE@BLOCKING_END_SOURCE_ID INT DECLARE@HOUR_COUNT INT SET@HOUR_COUNT=-1 WHILE(@BLOCKING_START_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<DATEADD(HOUR,@HOUR_COUNT+1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND@BLOCKING_TIME AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME DESC END ELSE BEGIN SELECT@BLOCKING_START_TIME=ISNULL(DATEADD(SECOND,-10,MIN(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT-1 END SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>@BLOCKING_START_TIME ORDER BY R.COLLECTION_TIME ASC SET@HOUR_COUNT=1 WHILE(@BLOCKING_END_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME)AND DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME ASC END ELSE BEGIN SELECT@BLOCKING_END_TIME=ISNULL(DATEADD(SECOND,10,MAX(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT+1 END SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME,@BLOCKING_END_SNAPSHOT_ID=R.SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID=S.SOURCE_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<@BLOCKING_END_TIME ORDER BY R.COLLECTION_TIME DESC DECLARE@INTERVAL_SEC INT SET@INTERVAL_SEC=DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)/10 CREATE TABLE#SAMPLE_COLLECTION_TIMES(SNAPSHOT_ID INT,SOURCE_ID INT,COLLECTION_TIME DATETIMEOFFSET(7))DECLARE@I INT SET@I=0 WHILE(@I<9)BEGIN INSERT INTO#SAMPLE_COLLECTION_TIMES SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC SET@I=@I+1 END INSERT INTO#SAMPLE_COLLECTION_TIMES VALUES(@BLOCKING_END_SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID,@BLOCKING_END_TIME);WITH BLOCKING_HIERARCHY AS(SELECT T.COLLECTION_TIME,T.SNAPSHOT_ID,T.SOURCE_ID,0 AS LEVEL,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.REQUEST_STATUS,R.COMMAND,R.BLOCKING_SESSION_ID,R.BLOCKING_EXEC_CONTEXT_ID,R.WAIT_TYPE,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.RESOURCE_DESCRIPTION,R.LOGIN_NAME,R.LOGIN_TIME,R.PROGRAM_NAME,R.HOST_NAME,R.DATABASE_NAME,R.OPEN_TRANSACTION_COUNT,R.TRANSACTION_ISOLATION_LEVEL,R.REQUEST_CPU_TIME,R.REQUEST_TOTAL_ELAPSED_TIME,R.REQUEST_START_TIME,R.MEMORY_USAGE,R.SESSION_CPU_TIME,R.SESSION_TOTAL_SCHEDULED_TIME,R.SESSION_ROW_COUNT,R.PENDING_IO_COUNT,R.PREV_ERROR,R.SESSION_LAST_REQUEST_START_TIME,R.SESSION_LAST_REQUEST_END_TIME,R.OPEN_RESULTSETS,R.PLAN_HANDLE,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET FROM#SAMPLE_COLLECTION_TIMES AS T INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R ON T.SNAPSHOT_ID=R.SNAPSHOT_ID AND T.COLLECTION_TIME=R.COLLECTION_TIME WHERE R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID AND ISNULL(R.EXEC_CONTEXT_ID,0)IN(-1,0)UNION ALL SELECT R2.COLLECTION_TIME,R2.SNAPSHOT_ID,PARENT.SOURCE_ID,PARENT.LEVEL+1 AS LEVEL,R2.SESSION_ID,R2.REQUEST_ID,R2.EXEC_CONTEXT_ID,R2.REQUEST_STATUS,R2.COMMAND,R2.BLOCKING_SESSION_ID,R2.BLOCKING_EXEC_CONTEXT_ID,R2.WAIT_TYPE,R2.WAIT_DURATION_MS,R2.WAIT_RESOURCE,R2.RESOURCE_DESCRIPTION,R2.LOGIN_NAME,R2.LOGIN_TIME,R2.PROGRAM_NAME,R2.HOST_NAME,R2.DATABASE_NAME,R2.OPEN_TRANSACTION_COUNT,R2.TRANSACTION_ISOLATION_LEVEL,R2.REQUEST_CPU_TIME,R2.REQUEST_TOTAL_ELAPSED_TIME,R2.REQUEST_START_TIME,R2.MEMORY_USAGE,R2.SESSION_CPU_TIME,R2.SESSION_TOTAL_SCHEDULED_TIME,R2.SESSION_ROW_COUNT,R2.PENDING_IO_COUNT,R2.PREV_ERROR,R2.SESSION_LAST_REQUEST_START_TIME,R2.SESSION_LAST_REQUEST_END_TIME,R2.OPEN_RESULTSETS,R2.PLAN_HANDLE,R2.SQL_HANDLE,R2.STATEMENT_START_OFFSET,R2.STATEMENT_END_OFFSET FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 INNER JOIN BLOCKING_HIERARCHY AS PARENT ON PARENT.SNAPSHOT_ID=R2.SNAPSHOT_ID AND PARENT.COLLECTION_TIME=R2.COLLECTION_TIME AND PARENT.SESSION_ID=R2.BLOCKING_SESSION_ID)SELECT*INTO#BLOCKING_HIERARCHY FROM BLOCKING_HIERARCHY SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)AS BLOCKING_DURATION,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_END_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.CHART_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>),126)AS COLLECTION_TIME_STR,@HEAD_BLOCKER_SESSION_ID AS HEAD_BLOCKER_SESSION_ID,COUNT(DISTINCT BLOCKED.SESSION_ID)AS BLOCKED_SESSION_COUNT,SUM(BLOCKED.WAIT_DURATION_MS)AS TOTAL_WAIT_TIME,AVG(BLOCKED.WAIT_DURATION_MS)AS AVG_WAIT_TIME,(SELECT TOP 1 RESOURCE_DESCRIPTION FROM#BLOCKING_HIERARCHY BH WHERE BH.COLLECTION_TIME=BLOCKED.COLLECTION_TIME AND BH.SNAPSHOT_ID=BLOCKED.SNAPSHOT_ID AND BH.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID GROUP BY RESOURCE_DESCRIPTION ORDER BY SUM(WAIT_DURATION_MS)DESC)AS PRIMARY_WAIT_RESOURCE_DESCRIPTION,ISNULL(BLOCKER.COMMAND,<str>)AS COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKER.LOGIN_TIME AS DATETIMEOFFSET(7)),<str>))AS LOGIN_TIME,BLOCKER.DATABASE_NAME,MAX(BLOCKER.OPEN_TRANSACTION_COUNT)AS OPEN_TRANSACTION_COUNT,MAX(BLOCKER.TRANSACTION_ISOLATION_LEVEL)AS TRANSACTION_ISOLATION_LEVEL,MAX(BLOCKER.REQUEST_CPU_TIME)AS REQUEST_CPU_TIME,MAX(BLOCKER.REQUEST_TOTAL_ELAPSED_TIME)AS REQUEST_TOTAL_ELAPSED_TIME,MIN(BLOCKER.REQUEST_START_TIME)AS REQUEST_START_TIME,MAX(BLOCKER.MEMORY_USAGE)AS MEMORY_USAGE,MAX(BLOCKER.SESSION_CPU_TIME)AS SESSION_CPU_TIME,MAX(BLOCKER.SESSION_TOTAL_SCHEDULED_TIME)AS SESSION_TOTAL_SCHEDULED_TIME,MAX(BLOCKER.SESSION_ROW_COUNT)AS SESSION_ROW_COUNT,MAX(BLOCKER.PENDING_IO_COUNT)AS PENDING_IO_COUNT,MAX(BLOCKER.PREV_ERROR)AS PREV_ERROR,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_START_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_END_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_END_TIME,MAX(BLOCKER.OPEN_RESULTSETS)AS OPEN_RESULTSETS,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(BLOCKER.PLAN_HANDLE)AS PLAN_HANDLE_STR,MASTER.FN_VARBINTOHEXSTR(BLOCKER.SQL_HANDLE)AS SQL_HANDLE_STR,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(SQL_TEXT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT FROM(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0)AS BLOCKED INNER JOIN(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0)AS BLOCKER ON BLOCKED.COLLECTION_TIME=BLOCKER.COLLECTION_TIME AND BLOCKED.SNAPSHOT_ID=BLOCKER.SNAPSHOT_ID AND BLOCKED.CHART_COLLECTION_TIME=BLOCKER.CHART_COLLECTION_TIME OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(BLOCKER.SOURCE_ID,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET)AS SQL_TEXT LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON BLOCKER.WAIT_TYPE=WT.WAIT_TYPE WHERE BLOCKER.BLOCKING_SESSION_ID=0 AND BLOCKED.BLOCKING_SESSION_ID!=0 GROUP BY BLOCKED.CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,BLOCKED.COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,BLOCKER.COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,BLOCKER.LOGIN_TIME,BLOCKER.DATABASE_NAME,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT ORDER BY BLOCKED.COLLECTION_TIME ASC END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAIN_DETAIL@INSTANCE_NAME SYSNAME,@BLOCKING_TIME_STR VARCHAR(40),@HEAD_BLOCKER_SESSION_ID INT AS BEGIN SET NOCOUNT ON;DECLARE@BLOCKING_START_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_END_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_TIME DATETIMEOFFSET(7)SET@BLOCKING_TIME=SWITCHOFFSET(CAST(@BLOCKING_TIME_STR AS DATETIMEOFFSET(7)),<str>)DECLARE@BLOCKING_END_SNAPSHOT_ID INT DECLARE@BLOCKING_END_SOURCE_ID INT DECLARE@HOUR_COUNT INT SET@HOUR_COUNT=-1 WHILE(@BLOCKING_START_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<DATEADD(HOUR,@HOUR_COUNT+1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND@BLOCKING_TIME AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME DESC END ELSE BEGIN SELECT@BLOCKING_START_TIME=ISNULL(DATEADD(SECOND,-10,MIN(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT-1 END SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>@BLOCKING_START_TIME ORDER BY R.COLLECTION_TIME ASC SET@HOUR_COUNT=1 WHILE(@BLOCKING_END_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME)AND DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME ASC END ELSE BEGIN SELECT@BLOCKING_END_TIME=ISNULL(DATEADD(SECOND,10,MAX(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT+1 END SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME,@BLOCKING_END_SNAPSHOT_ID=R.SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID=S.SOURCE_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<@BLOCKING_END_TIME ORDER BY R.COLLECTION_TIME DESC DECLARE@INTERVAL_SEC INT SET@INTERVAL_SEC=DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)/10 CREATE TABLE#SAMPLE_COLLECTION_TIMES(SNAPSHOT_ID INT,SOURCE_ID INT,COLLECTION_TIME DATETIMEOFFSET(7))DECLARE@I INT SET@I=0 WHILE(@I<9)BEGIN INSERT INTO#SAMPLE_COLLECTION_TIMES SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC SET@I=@I+1 END INSERT INTO#SAMPLE_COLLECTION_TIMES VALUES(@BLOCKING_END_SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID,@BLOCKING_END_TIME);WITH BLOCKING_HIERARCHY AS(SELECT T.COLLECTION_TIME,T.SNAPSHOT_ID,T.SOURCE_ID,0 AS LEVEL,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.REQUEST_STATUS,R.COMMAND,R.BLOCKING_SESSION_ID,R.BLOCKING_EXEC_CONTEXT_ID,R.WAIT_TYPE,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.RESOURCE_DESCRIPTION,R.LOGIN_NAME,R.LOGIN_TIME,R.PROGRAM_NAME,R.HOST_NAME,R.DATABASE_NAME,R.OPEN_TRANSACTION_COUNT,R.TRANSACTION_ISOLATION_LEVEL,R.REQUEST_CPU_TIME,R.REQUEST_TOTAL_ELAPSED_TIME,R.REQUEST_START_TIME,R.MEMORY_USAGE,R.SESSION_CPU_TIME,R.SESSION_TOTAL_SCHEDULED_TIME,R.SESSION_ROW_COUNT,R.PENDING_IO_COUNT,R.PREV_ERROR,R.SESSION_LAST_REQUEST_START_TIME,R.SESSION_LAST_REQUEST_END_TIME,R.OPEN_RESULTSETS,R.PLAN_HANDLE,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET FROM#SAMPLE_COLLECTION_TIMES AS T INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R ON T.SNAPSHOT_ID=R.SNAPSHOT_ID AND T.COLLECTION_TIME=R.COLLECTION_TIME WHERE R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID AND ISNULL(R.EXEC_CONTEXT_ID,0)IN(-1,0)UNION ALL SELECT R2.COLLECTION_TIME,R2.SNAPSHOT_ID,PARENT.SOURCE_ID,PARENT.LEVEL+1 AS LEVEL,R2.SESSION_ID,R2.REQUEST_ID,R2.EXEC_CONTEXT_ID,R2.REQUEST_STATUS,R2.COMMAND,R2.BLOCKING_SESSION_ID,R2.BLOCKING_EXEC_CONTEXT_ID,R2.WAIT_TYPE,R2.WAIT_DURATION_MS,R2.WAIT_RESOURCE,R2.RESOURCE_DESCRIPTION,R2.LOGIN_NAME,R2.LOGIN_TIME,R2.PROGRAM_NAME,R2.HOST_NAME,R2.DATABASE_NAME,R2.OPEN_TRANSACTION_COUNT,R2.TRANSACTION_ISOLATION_LEVEL,R2.REQUEST_CPU_TIME,R2.REQUEST_TOTAL_ELAPSED_TIME,R2.REQUEST_START_TIME,R2.MEMORY_USAGE,R2.SESSION_CPU_TIME,R2.SESSION_TOTAL_SCHEDULED_TIME,R2.SESSION_ROW_COUNT,R2.PENDING_IO_COUNT,R2.PREV_ERROR,R2.SESSION_LAST_REQUEST_START_TIME,R2.SESSION_LAST_REQUEST_END_TIME,R2.OPEN_RESULTSETS,R2.PLAN_HANDLE,R2.SQL_HANDLE,R2.STATEMENT_START_OFFSET,R2.STATEMENT_END_OFFSET FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 INNER JOIN BLOCKING_HIERARCHY AS PARENT ON PARENT.SNAPSHOT_ID=R2.SNAPSHOT_ID AND PARENT.COLLECTION_TIME=R2.COLLECTION_TIME AND PARENT.SESSION_ID=R2.BLOCKING_SESSION_ID)SELECT*INTO#BLOCKING_HIERARCHY FROM BLOCKING_HIERARCHY SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)AS BLOCKING_DURATION,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_END_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.CHART_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>),126)AS COLLECTION_TIME_STR,@HEAD_BLOCKER_SESSION_ID AS HEAD_BLOCKER_SESSION_ID,COUNT(DISTINCT BLOCKED.SESSION_ID)AS BLOCKED_SESSION_COUNT,SUM(BLOCKED.WAIT_DURATION_MS)AS TOTAL_WAIT_TIME,AVG(BLOCKED.WAIT_DURATION_MS)AS AVG_WAIT_TIME,(SELECT TOP 1 RESOURCE_DESCRIPTION FROM#BLOCKING_HIERARCHY BH WHERE BH.COLLECTION_TIME=BLOCKED.COLLECTION_TIME AND BH.SNAPSHOT_ID=BLOCKED.SNAPSHOT_ID AND BH.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID GROUP BY RESOURCE_DESCRIPTION ORDER BY SUM(WAIT_DURATION_MS)DESC)AS PRIMARY_WAIT_RESOURCE_DESCRIPTION,ISNULL(BLOCKER.COMMAND,<str>)AS COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKER.LOGIN_TIME AS DATETIMEOFFSET(7)),<str>))AS LOGIN_TIME,BLOCKER.DATABASE_NAME,MAX(BLOCKER.OPEN_TRANSACTION_COUNT)AS OPEN_TRANSACTION_COUNT,MAX(BLOCKER.TRANSACTION_ISOLATION_LEVEL)AS TRANSACTION_ISOLATION_LEVEL,MAX(BLOCKER.REQUEST_CPU_TIME)AS REQUEST_CPU_TIME,MAX(BLOCKER.REQUEST_TOTAL_ELAPSED_TIME)AS REQUEST_TOTAL_ELAPSED_TIME,MIN(BLOCKER.REQUEST_START_TIME)AS REQUEST_START_TIME,MAX(BLOCKER.MEMORY_USAGE)AS MEMORY_USAGE,MAX(BLOCKER.SESSION_CPU_TIME)AS SESSION_CPU_TIME,MAX(BLOCKER.SESSION_TOTAL_SCHEDULED_TIME)AS SESSION_TOTAL_SCHEDULED_TIME,MAX(BLOCKER.SESSION_ROW_COUNT)AS SESSION_ROW_COUNT,MAX(BLOCKER.PENDING_IO_COUNT)AS PENDING_IO_COUNT,MAX(BLOCKER.PREV_ERROR)AS PREV_ERROR,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_START_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_END_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_END_TIME,MAX(BLOCKER.OPEN_RESULTSETS)AS OPEN_RESULTSETS,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(BLOCKER.PLAN_HANDLE)AS PLAN_HANDLE_STR,MASTER.FN_VARBINTOHEXSTR(BLOCKER.SQL_HANDLE)AS SQL_HANDLE_STR,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(SQL_TEXT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT FROM(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0)AS BLOCKED INNER JOIN(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0)AS BLOCKER ON BLOCKED.COLLECTION_TIME=BLOCKER.COLLECTION_TIME AND BLOCKED.SNAPSHOT_ID=BLOCKER.SNAPSHOT_ID AND BLOCKED.CHART_COLLECTION_TIME=BLOCKER.CHART_COLLECTION_TIME OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(BLOCKER.SOURCE_ID,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET)AS SQL_TEXT LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON BLOCKER.WAIT_TYPE=WT.WAIT_TYPE WHERE BLOCKER.BLOCKING_SESSION_ID=0 AND BLOCKED.BLOCKING_SESSION_ID!=0 GROUP BY BLOCKED.CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,BLOCKED.COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,BLOCKER.COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,BLOCKER.LOGIN_TIME,BLOCKER.DATABASE_NAME,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT ORDER BY BLOCKED.COLLECTION_TIME ASC END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAIN_DETAIL@INSTANCE_NAME SYSNAME,@BLOCKING_TIME_STR VARCHAR(40),@HEAD_BLOCKER_SESSION_ID INT AS BEGIN SET NOCOUNT ON;DECLARE@BLOCKING_START_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_END_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_TIME DATETIMEOFFSET(7)SET@BLOCKING_TIME=SWITCHOFFSET(CAST(@BLOCKING_TIME_STR AS DATETIMEOFFSET(7)),<str>)DECLARE@BLOCKING_END_SNAPSHOT_ID INT DECLARE@BLOCKING_END_SOURCE_ID INT DECLARE@HOUR_COUNT INT SET@HOUR_COUNT=-1 WHILE(@BLOCKING_START_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<DATEADD(HOUR,@HOUR_COUNT+1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND@BLOCKING_TIME AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME DESC END ELSE BEGIN SELECT@BLOCKING_START_TIME=ISNULL(DATEADD(SECOND,-10,MIN(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT-1 END SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>@BLOCKING_START_TIME ORDER BY R.COLLECTION_TIME ASC SET@HOUR_COUNT=1 WHILE(@BLOCKING_END_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME)AND DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME ASC END ELSE BEGIN SELECT@BLOCKING_END_TIME=ISNULL(DATEADD(SECOND,10,MAX(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT+1 END SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME,@BLOCKING_END_SNAPSHOT_ID=R.SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID=S.SOURCE_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<@BLOCKING_END_TIME ORDER BY R.COLLECTION_TIME DESC DECLARE@INTERVAL_SEC INT SET@INTERVAL_SEC=DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)/10 CREATE TABLE#SAMPLE_COLLECTION_TIMES(SNAPSHOT_ID INT,SOURCE_ID INT,COLLECTION_TIME DATETIMEOFFSET(7))DECLARE@I INT SET@I=0 WHILE(@I<9)BEGIN INSERT INTO#SAMPLE_COLLECTION_TIMES SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC SET@I=@I+1 END INSERT INTO#SAMPLE_COLLECTION_TIMES VALUES(@BLOCKING_END_SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID,@BLOCKING_END_TIME);WITH BLOCKING_HIERARCHY AS(SELECT T.COLLECTION_TIME,T.SNAPSHOT_ID,T.SOURCE_ID,0 AS LEVEL,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.REQUEST_STATUS,R.COMMAND,R.BLOCKING_SESSION_ID,R.BLOCKING_EXEC_CONTEXT_ID,R.WAIT_TYPE,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.RESOURCE_DESCRIPTION,R.LOGIN_NAME,R.LOGIN_TIME,R.PROGRAM_NAME,R.HOST_NAME,R.DATABASE_NAME,R.OPEN_TRANSACTION_COUNT,R.TRANSACTION_ISOLATION_LEVEL,R.REQUEST_CPU_TIME,R.REQUEST_TOTAL_ELAPSED_TIME,R.REQUEST_START_TIME,R.MEMORY_USAGE,R.SESSION_CPU_TIME,R.SESSION_TOTAL_SCHEDULED_TIME,R.SESSION_ROW_COUNT,R.PENDING_IO_COUNT,R.PREV_ERROR,R.SESSION_LAST_REQUEST_START_TIME,R.SESSION_LAST_REQUEST_END_TIME,R.OPEN_RESULTSETS,R.PLAN_HANDLE,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET FROM#SAMPLE_COLLECTION_TIMES AS T INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R ON T.SNAPSHOT_ID=R.SNAPSHOT_ID AND T.COLLECTION_TIME=R.COLLECTION_TIME WHERE R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID AND ISNULL(R.EXEC_CONTEXT_ID,0)IN(-1,0)UNION ALL SELECT R2.COLLECTION_TIME,R2.SNAPSHOT_ID,PARENT.SOURCE_ID,PARENT.LEVEL+1 AS LEVEL,R2.SESSION_ID,R2.REQUEST_ID,R2.EXEC_CONTEXT_ID,R2.REQUEST_STATUS,R2.COMMAND,R2.BLOCKING_SESSION_ID,R2.BLOCKING_EXEC_CONTEXT_ID,R2.WAIT_TYPE,R2.WAIT_DURATION_MS,R2.WAIT_RESOURCE,R2.RESOURCE_DESCRIPTION,R2.LOGIN_NAME,R2.LOGIN_TIME,R2.PROGRAM_NAME,R2.HOST_NAME,R2.DATABASE_NAME,R2.OPEN_TRANSACTION_COUNT,R2.TRANSACTION_ISOLATION_LEVEL,R2.REQUEST_CPU_TIME,R2.REQUEST_TOTAL_ELAPSED_TIME,R2.REQUEST_START_TIME,R2.MEMORY_USAGE,R2.SESSION_CPU_TIME,R2.SESSION_TOTAL_SCHEDULED_TIME,R2.SESSION_ROW_COUNT,R2.PENDING_IO_COUNT,R2.PREV_ERROR,R2.SESSION_LAST_REQUEST_START_TIME,R2.SESSION_LAST_REQUEST_END_TIME,R2.OPEN_RESULTSETS,R2.PLAN_HANDLE,R2.SQL_HANDLE,R2.STATEMENT_START_OFFSET,R2.STATEMENT_END_OFFSET FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 INNER JOIN BLOCKING_HIERARCHY AS PARENT ON PARENT.SNAPSHOT_ID=R2.SNAPSHOT_ID AND PARENT.COLLECTION_TIME=R2.COLLECTION_TIME AND PARENT.SESSION_ID=R2.BLOCKING_SESSION_ID)SELECT*INTO#BLOCKING_HIERARCHY FROM BLOCKING_HIERARCHY SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)AS BLOCKING_DURATION,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_END_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.CHART_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>),126)AS COLLECTION_TIME_STR,@HEAD_BLOCKER_SESSION_ID AS HEAD_BLOCKER_SESSION_ID,COUNT(DISTINCT BLOCKED.SESSION_ID)AS BLOCKED_SESSION_COUNT,SUM(BLOCKED.WAIT_DURATION_MS)AS TOTAL_WAIT_TIME,AVG(BLOCKED.WAIT_DURATION_MS)AS AVG_WAIT_TIME,(SELECT TOP 1 RESOURCE_DESCRIPTION FROM#BLOCKING_HIERARCHY BH WHERE BH.COLLECTION_TIME=BLOCKED.COLLECTION_TIME AND BH.SNAPSHOT_ID=BLOCKED.SNAPSHOT_ID AND BH.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID GROUP BY RESOURCE_DESCRIPTION ORDER BY SUM(WAIT_DURATION_MS)DESC)AS PRIMARY_WAIT_RESOURCE_DESCRIPTION,ISNULL(BLOCKER.COMMAND,<str>)AS COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKER.LOGIN_TIME AS DATETIMEOFFSET(7)),<str>))AS LOGIN_TIME,BLOCKER.DATABASE_NAME,MAX(BLOCKER.OPEN_TRANSACTION_COUNT)AS OPEN_TRANSACTION_COUNT,MAX(BLOCKER.TRANSACTION_ISOLATION_LEVEL)AS TRANSACTION_ISOLATION_LEVEL,MAX(BLOCKER.REQUEST_CPU_TIME)AS REQUEST_CPU_TIME,MAX(BLOCKER.REQUEST_TOTAL_ELAPSED_TIME)AS REQUEST_TOTAL_ELAPSED_TIME,MIN(BLOCKER.REQUEST_START_TIME)AS REQUEST_START_TIME,MAX(BLOCKER.MEMORY_USAGE)AS MEMORY_USAGE,MAX(BLOCKER.SESSION_CPU_TIME)AS SESSION_CPU_TIME,MAX(BLOCKER.SESSION_TOTAL_SCHEDULED_TIME)AS SESSION_TOTAL_SCHEDULED_TIME,MAX(BLOCKER.SESSION_ROW_COUNT)AS SESSION_ROW_COUNT,MAX(BLOCKER.PENDING_IO_COUNT)AS PENDING_IO_COUNT,MAX(BLOCKER.PREV_ERROR)AS PREV_ERROR,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_START_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_END_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_END_TIME,MAX(BLOCKER.OPEN_RESULTSETS)AS OPEN_RESULTSETS,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(BLOCKER.PLAN_HANDLE)AS PLAN_HANDLE_STR,MASTER.FN_VARBINTOHEXSTR(BLOCKER.SQL_HANDLE)AS SQL_HANDLE_STR,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(SQL_TEXT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT FROM(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0)AS BLOCKED INNER JOIN(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0)AS BLOCKER ON BLOCKED.COLLECTION_TIME=BLOCKER.COLLECTION_TIME AND BLOCKED.SNAPSHOT_ID=BLOCKER.SNAPSHOT_ID AND BLOCKED.CHART_COLLECTION_TIME=BLOCKER.CHART_COLLECTION_TIME OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(BLOCKER.SOURCE_ID,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET)AS SQL_TEXT LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON BLOCKER.WAIT_TYPE=WT.WAIT_TYPE WHERE BLOCKER.BLOCKING_SESSION_ID=0 AND BLOCKED.BLOCKING_SESSION_ID!=0 GROUP BY BLOCKED.CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,BLOCKED.COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,BLOCKER.COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,BLOCKER.LOGIN_TIME,BLOCKER.DATABASE_NAME,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT ORDER BY BLOCKED.COLLECTION_TIME ASC END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY BLOCKED.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAIN_DETAIL@INSTANCE_NAME SYSNAME,@BLOCKING_TIME_STR VARCHAR(40),@HEAD_BLOCKER_SESSION_ID INT AS BEGIN SET NOCOUNT ON;DECLARE@BLOCKING_START_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_END_TIME DATETIMEOFFSET(7)DECLARE@BLOCKING_TIME DATETIMEOFFSET(7)SET@BLOCKING_TIME=SWITCHOFFSET(CAST(@BLOCKING_TIME_STR AS DATETIMEOFFSET(7)),<str>)DECLARE@BLOCKING_END_SNAPSHOT_ID INT DECLARE@BLOCKING_END_SOURCE_ID INT DECLARE@HOUR_COUNT INT SET@HOUR_COUNT=-1 WHILE(@BLOCKING_START_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<DATEADD(HOUR,@HOUR_COUNT+1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND@BLOCKING_TIME AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME DESC END ELSE BEGIN SELECT@BLOCKING_START_TIME=ISNULL(DATEADD(SECOND,-10,MIN(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT-1 END SELECT TOP 1@BLOCKING_START_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>@BLOCKING_START_TIME ORDER BY R.COLLECTION_TIME ASC SET@HOUR_COUNT=1 WHILE(@BLOCKING_END_TIME IS NULL)BEGIN IF EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME>DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME))BEGIN SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(HOUR,@HOUR_COUNT-1,@BLOCKING_TIME)AND DATEADD(HOUR,@HOUR_COUNT,@BLOCKING_TIME)AND NOT EXISTS(SELECT*FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R.SNAPSHOT_ID=R2.SNAPSHOT_ID AND R.COLLECTION_TIME=R2.COLLECTION_TIME AND R2.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID)ORDER BY R.COLLECTION_TIME ASC END ELSE BEGIN SELECT@BLOCKING_END_TIME=ISNULL(DATEADD(SECOND,10,MAX(R.COLLECTION_TIME)),GETUTCDATE())FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME END SET@HOUR_COUNT=@HOUR_COUNT+1 END SELECT TOP 1@BLOCKING_END_TIME=R.COLLECTION_TIME,@BLOCKING_END_SNAPSHOT_ID=R.SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID=S.SOURCE_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME<@BLOCKING_END_TIME ORDER BY R.COLLECTION_TIME DESC DECLARE@INTERVAL_SEC INT SET@INTERVAL_SEC=DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)/10 CREATE TABLE#SAMPLE_COLLECTION_TIMES(SNAPSHOT_ID INT,SOURCE_ID INT,COLLECTION_TIME DATETIMEOFFSET(7))DECLARE@I INT SET@I=0 WHILE(@I<9)BEGIN INSERT INTO#SAMPLE_COLLECTION_TIMES SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC SET@I=@I+1 END INSERT INTO#SAMPLE_COLLECTION_TIMES VALUES(@BLOCKING_END_SNAPSHOT_ID,@BLOCKING_END_SOURCE_ID,@BLOCKING_END_TIME);WITH BLOCKING_HIERARCHY AS(SELECT T.COLLECTION_TIME,T.SNAPSHOT_ID,T.SOURCE_ID,0 AS LEVEL,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.REQUEST_STATUS,R.COMMAND,R.BLOCKING_SESSION_ID,R.BLOCKING_EXEC_CONTEXT_ID,R.WAIT_TYPE,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.RESOURCE_DESCRIPTION,R.LOGIN_NAME,R.LOGIN_TIME,R.PROGRAM_NAME,R.HOST_NAME,R.DATABASE_NAME,R.OPEN_TRANSACTION_COUNT,R.TRANSACTION_ISOLATION_LEVEL,R.REQUEST_CPU_TIME,R.REQUEST_TOTAL_ELAPSED_TIME,R.REQUEST_START_TIME,R.MEMORY_USAGE,R.SESSION_CPU_TIME,R.SESSION_TOTAL_SCHEDULED_TIME,R.SESSION_ROW_COUNT,R.PENDING_IO_COUNT,R.PREV_ERROR,R.SESSION_LAST_REQUEST_START_TIME,R.SESSION_LAST_REQUEST_END_TIME,R.OPEN_RESULTSETS,R.PLAN_HANDLE,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET FROM#SAMPLE_COLLECTION_TIMES AS T INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R ON T.SNAPSHOT_ID=R.SNAPSHOT_ID AND T.COLLECTION_TIME=R.COLLECTION_TIME WHERE R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID AND ISNULL(R.EXEC_CONTEXT_ID,0)IN(-1,0)UNION ALL SELECT R2.COLLECTION_TIME,R2.SNAPSHOT_ID,PARENT.SOURCE_ID,PARENT.LEVEL+1 AS LEVEL,R2.SESSION_ID,R2.REQUEST_ID,R2.EXEC_CONTEXT_ID,R2.REQUEST_STATUS,R2.COMMAND,R2.BLOCKING_SESSION_ID,R2.BLOCKING_EXEC_CONTEXT_ID,R2.WAIT_TYPE,R2.WAIT_DURATION_MS,R2.WAIT_RESOURCE,R2.RESOURCE_DESCRIPTION,R2.LOGIN_NAME,R2.LOGIN_TIME,R2.PROGRAM_NAME,R2.HOST_NAME,R2.DATABASE_NAME,R2.OPEN_TRANSACTION_COUNT,R2.TRANSACTION_ISOLATION_LEVEL,R2.REQUEST_CPU_TIME,R2.REQUEST_TOTAL_ELAPSED_TIME,R2.REQUEST_START_TIME,R2.MEMORY_USAGE,R2.SESSION_CPU_TIME,R2.SESSION_TOTAL_SCHEDULED_TIME,R2.SESSION_ROW_COUNT,R2.PENDING_IO_COUNT,R2.PREV_ERROR,R2.SESSION_LAST_REQUEST_START_TIME,R2.SESSION_LAST_REQUEST_END_TIME,R2.OPEN_RESULTSETS,R2.PLAN_HANDLE,R2.SQL_HANDLE,R2.STATEMENT_START_OFFSET,R2.STATEMENT_END_OFFSET FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 INNER JOIN BLOCKING_HIERARCHY AS PARENT ON PARENT.SNAPSHOT_ID=R2.SNAPSHOT_ID AND PARENT.COLLECTION_TIME=R2.COLLECTION_TIME AND PARENT.SESSION_ID=R2.BLOCKING_SESSION_ID)SELECT*INTO#BLOCKING_HIERARCHY FROM BLOCKING_HIERARCHY SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,DATEDIFF(SECOND,@BLOCKING_START_TIME,@BLOCKING_END_TIME)AS BLOCKING_DURATION,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(@BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_END_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.CHART_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKED.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>),126)AS COLLECTION_TIME_STR,@HEAD_BLOCKER_SESSION_ID AS HEAD_BLOCKER_SESSION_ID,COUNT(DISTINCT BLOCKED.SESSION_ID)AS BLOCKED_SESSION_COUNT,SUM(BLOCKED.WAIT_DURATION_MS)AS TOTAL_WAIT_TIME,AVG(BLOCKED.WAIT_DURATION_MS)AS AVG_WAIT_TIME,(SELECT TOP 1 RESOURCE_DESCRIPTION FROM#BLOCKING_HIERARCHY BH WHERE BH.COLLECTION_TIME=BLOCKED.COLLECTION_TIME AND BH.SNAPSHOT_ID=BLOCKED.SNAPSHOT_ID AND BH.BLOCKING_SESSION_ID=@HEAD_BLOCKER_SESSION_ID GROUP BY RESOURCE_DESCRIPTION ORDER BY SUM(WAIT_DURATION_MS)DESC)AS PRIMARY_WAIT_RESOURCE_DESCRIPTION,ISNULL(BLOCKER.COMMAND,<str>)AS COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKER.LOGIN_TIME AS DATETIMEOFFSET(7)),<str>))AS LOGIN_TIME,BLOCKER.DATABASE_NAME,MAX(BLOCKER.OPEN_TRANSACTION_COUNT)AS OPEN_TRANSACTION_COUNT,MAX(BLOCKER.TRANSACTION_ISOLATION_LEVEL)AS TRANSACTION_ISOLATION_LEVEL,MAX(BLOCKER.REQUEST_CPU_TIME)AS REQUEST_CPU_TIME,MAX(BLOCKER.REQUEST_TOTAL_ELAPSED_TIME)AS REQUEST_TOTAL_ELAPSED_TIME,MIN(BLOCKER.REQUEST_START_TIME)AS REQUEST_START_TIME,MAX(BLOCKER.MEMORY_USAGE)AS MEMORY_USAGE,MAX(BLOCKER.SESSION_CPU_TIME)AS SESSION_CPU_TIME,MAX(BLOCKER.SESSION_TOTAL_SCHEDULED_TIME)AS SESSION_TOTAL_SCHEDULED_TIME,MAX(BLOCKER.SESSION_ROW_COUNT)AS SESSION_ROW_COUNT,MAX(BLOCKER.PENDING_IO_COUNT)AS PENDING_IO_COUNT,MAX(BLOCKER.PREV_ERROR)AS PREV_ERROR,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_START_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(MAX(BLOCKER.SESSION_LAST_REQUEST_END_TIME)AS DATETIMEOFFSET(7)),<str>))AS SESSION_LAST_REQUEST_END_TIME,MAX(BLOCKER.OPEN_RESULTSETS)AS OPEN_RESULTSETS,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(BLOCKER.PLAN_HANDLE)AS PLAN_HANDLE_STR,MASTER.FN_VARBINTOHEXSTR(BLOCKER.SQL_HANDLE)AS SQL_HANDLE_STR,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(SQL_TEXT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT FROM(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID!=0)AS BLOCKED INNER JOIN(SELECT*,COLLECTION_TIME AS CHART_COLLECTION_TIME,0 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0 UNION ALL SELECT*,DATEADD(SECOND,10,COLLECTION_TIME)AS CHART_COLLECTION_TIME,1 AS CHART_ONLY FROM#BLOCKING_HIERARCHY WHERE BLOCKING_SESSION_ID=0)AS BLOCKER ON BLOCKED.COLLECTION_TIME=BLOCKER.COLLECTION_TIME AND BLOCKED.SNAPSHOT_ID=BLOCKER.SNAPSHOT_ID AND BLOCKED.CHART_COLLECTION_TIME=BLOCKER.CHART_COLLECTION_TIME OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(BLOCKER.SOURCE_ID,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET)AS SQL_TEXT LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON BLOCKER.WAIT_TYPE=WT.WAIT_TYPE WHERE BLOCKER.BLOCKING_SESSION_ID=0 AND BLOCKED.BLOCKING_SESSION_ID!=0 GROUP BY BLOCKED.CHART_COLLECTION_TIME,BLOCKED.CHART_ONLY,BLOCKED.COLLECTION_TIME,BLOCKED.SNAPSHOT_ID,BLOCKER.COMMAND,BLOCKER.REQUEST_STATUS,WT.CATEGORY_NAME,BLOCKER.WAIT_TYPE,BLOCKER.WAIT_DURATION_MS,BLOCKER.WAIT_RESOURCE,BLOCKER.RESOURCE_DESCRIPTION,BLOCKER.PROGRAM_NAME,BLOCKER.HOST_NAME,BLOCKER.LOGIN_NAME,BLOCKER.LOGIN_TIME,BLOCKER.DATABASE_NAME,BLOCKER.PLAN_HANDLE,BLOCKER.SQL_HANDLE,BLOCKER.STATEMENT_START_OFFSET,BLOCKER.STATEMENT_END_OFFSET,SQL_TEXT.OBJECT_ID,SQL_TEXT.OBJECT_NAME,SQL_TEXT.QUERY_TEXT ORDER BY BLOCKED.COLLECTION_TIME ASC END GO
DataCollector	[snapshots].[rpt_blocking_chain_detail]	Warning	InsertSelectWithOrderBy	Insert Select with Order By clause used without order by	r.collection_time ASC	SELECT TOP 1 R.SNAPSHOT_ID,S.SOURCE_ID,R.COLLECTION_TIME FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R INNER JOIN CORE.SNAPSHOTS AS S ON S.SNAPSHOT_ID=R.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R.COLLECTION_TIME BETWEEN DATEADD(SECOND,@INTERVAL_SEC*@I,@BLOCKING_START_TIME)AND DATEADD(SECOND,@INTERVAL_SEC*(@I+1)-1,@BLOCKING_START_TIME)AND R.SESSION_ID=@HEAD_BLOCKER_SESSION_ID ORDER BY R.COLLECTION_TIME ASC
DataCollector	[snapshots].[rpt_blocking_chains]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R1.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_BLOCKING_CHAINS@INSTANCE_NAME SYSNAME,@START_TIME DATETIME=NULL,@END_TIME DATETIME,@WINDOWSIZE INT=NULL AS BEGIN SET NOCOUNT ON;SET@END_TIME=DATEADD(SECOND,1,@END_TIME)IF@START_TIME IS NULL SET@START_TIME=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME)SELECT DISTINCT R1.COLLECTION_TIME,R1.SNAPSHOT_ID,DENSE_RANK()OVER(ORDER BY R1.COLLECTION_TIME)AS COLLECTION_TIME_ID INTO#COLLECTION_TIMES FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R1 INNER JOIN CORE.SNAPSHOTS S ON S.SNAPSHOT_ID=R1.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND R1.COLLECTION_TIME BETWEEN@START_TIME AND@END_TIME DECLARE@MAX_COLLECTION_TIME DATETIMEOFFSET(7)SELECT@MAX_COLLECTION_TIME=MAX(COLLECTION_TIME)FROM#COLLECTION_TIMES SELECT R1.*,TIMES.COLLECTION_TIME_ID INTO#BLOCKING_PARTICIPANTS FROM#COLLECTION_TIMES AS TIMES LEFT OUTER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R1 ON R1.COLLECTION_TIME=TIMES.COLLECTION_TIME AND R1.SNAPSHOT_ID=TIMES.SNAPSHOT_ID WHERE R1.BLOCKING_SESSION_ID=0 AND SESSION_ID IN(SELECT DISTINCT BLOCKING_SESSION_ID FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R2 WHERE R2.BLOCKING_SESSION_ID!=0 AND R2.COLLECTION_TIME=R1.COLLECTION_TIME AND R2.SNAPSHOT_ID=R1.SNAPSHOT_ID)CREATE NONCLUSTERED INDEX IDX1_BLOCKING_PARTICIPANTS ON#BLOCKING_PARTICIPANTS(SESSION_ID,COLLECTION_TIME_ID,BLOCKING_SESSION_ID)SELECT MIN(HEAD_BLOCKERS.COLLECTION_TIME)AS BLOCKING_START_TIME,DATEADD(SECOND,5,ISNULL(MAX(BLOCKING_END_TIMES.COLLECTION_TIME),@MAX_COLLECTION_TIME))AS BLOCKING_END_TIME,DATEDIFF(SECOND,MIN(HEAD_BLOCKERS.COLLECTION_TIME),ISNULL(MAX(BLOCKING_END_TIMES.COLLECTION_TIME),@MAX_COLLECTION_TIME))AS BLOCKING_DURATION_SEC,HEAD_BLOCKERS.SESSION_ID AS HEAD_BLOCKER_SESSION_ID,MIN(HEAD_BLOCKERS.PROGRAM_NAME)AS PROGRAM_NAME,MIN(HEAD_BLOCKERS.DATABASE_NAME)AS DATABASE_NAME,COUNT(*)AS OBSERVED_SAMPLE_COUNT,CASE WHEN MAX(BLOCKING_END_TIMES.COLLECTION_TIME)IS NULL THEN 1 ELSE 0 END AS STILL_ACTIVE INTO#BLOCKING_CHAINS FROM(SELECT(SELECT MIN(COLLECTION_TIME_ID)FROM#COLLECTION_TIMES AS TIMES1 WHERE TIMES1.COLLECTION_TIME_ID>BLOCKERS_START.COLLECTION_TIME_ID AND TIMES1.COLLECTION_TIME_ID<=@END_TIME AND NOT EXISTS(SELECT*FROM#BLOCKING_PARTICIPANTS AS BLK1 WHERE BLK1.SESSION_ID=BLOCKERS_START.SESSION_ID AND BLK1.PROGRAM_NAME=BLOCKERS_START.PROGRAM_NAME AND BLK1.LOGIN_TIME=BLOCKERS_START.LOGIN_TIME AND BLK1.COLLECTION_TIME_ID=TIMES1.COLLECTION_TIME_ID AND BLK1.BLOCKING_SESSION_ID=0))AS BLOCKING_END_COLLECTION_TIME_ID,*FROM#BLOCKING_PARTICIPANTS AS BLOCKERS_START WHERE BLOCKERS_START.BLOCKING_SESSION_ID=0)AS HEAD_BLOCKERS LEFT OUTER JOIN#COLLECTION_TIMES AS BLOCKING_END_TIMES ON BLOCKING_END_TIMES.COLLECTION_TIME_ID=HEAD_BLOCKERS.BLOCKING_END_COLLECTION_TIME_ID-1 GROUP BY HEAD_BLOCKERS.SESSION_ID,HEAD_BLOCKERS.BLOCKING_END_COLLECTION_TIME_ID ORDER BY MIN(HEAD_BLOCKERS.COLLECTION_TIME)SELECT BLOCKING_CHAIN_NUMBER,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(BLOCKING_END_TIME AS DATETIMEOFFSET(7)),<str>))AS BLOCKING_END_TIME,BLOCKING_DURATION_SEC,HEAD_BLOCKER_SESSION_ID,PROGRAM_NAME,DATABASE_NAME,OBSERVED_SAMPLE_COUNT,STILL_ACTIVE,CONVERT(VARCHAR(40),SWITCHOFFSET(CAST(BLOCKING_START_TIME AS DATETIMEOFFSET(7)),<str>),126)AS BLOCKING_START_TIME_STR,CONVERT(DATETIME,SWITCHOFFSET(CAST(CHART_TIME AS DATETIMEOFFSET(7)),<str>))AS CHART_TIME,CHART_DATA_ONLY FROM(SELECT TOP 10 ROW_NUMBER()OVER(ORDER BY BLOCKING_DURATION_SEC DESC)AS BLOCKING_CHAIN_NUMBER,*,BLOCKING_START_TIME AS CHART_TIME,0 AS CHART_DATA_ONLY FROM#BLOCKING_CHAINS ORDER BY BLOCKING_DURATION_SEC DESC UNION ALL SELECT TOP 10 ROW_NUMBER()OVER(ORDER BY BLOCKING_DURATION_SEC DESC)AS BLOCKING_CHAIN_NUMBER,*,BLOCKING_END_TIME AS CHART_TIME,1 AS CHART_DATA_ONLY FROM#BLOCKING_CHAINS ORDER BY BLOCKING_DURATION_SEC DESC)AS T ORDER BY BLOCKING_CHAIN_NUMBER,CHART_DATA_ONLY END GO
DataCollector	[snapshots].[rpt_blocking_chains]	Information	SelectIntoWithOrderBy	Select Into with Order By clause	MIN(head_blockers.collection_time)	SELECT MIN(HEAD_BLOCKERS.COLLECTION_TIME)AS BLOCKING_START_TIME,DATEADD(SECOND,5,ISNULL(MAX(BLOCKING_END_TIMES.COLLECTION_TIME),@MAX_COLLECTION_TIME))AS BLOCKING_END_TIME,DATEDIFF(SECOND,MIN(HEAD_BLOCKERS.COLLECTION_TIME),ISNULL(MAX(BLOCKING_END_TIMES.COLLECTION_TIME),@MAX_COLLECTION_TIME))AS BLOCKING_DURATION_SEC,HEAD_BLOCKERS.SESSION_ID AS HEAD_BLOCKER_SESSION_ID,MIN(HEAD_BLOCKERS.PROGRAM_NAME)AS PROGRAM_NAME,MIN(HEAD_BLOCKERS.DATABASE_NAME)AS DATABASE_NAME,COUNT(*)AS OBSERVED_SAMPLE_COUNT,CASE WHEN MAX(BLOCKING_END_TIMES.COLLECTION_TIME)IS NULL THEN 1 ELSE 0 END AS STILL_ACTIVE INTO#BLOCKING_CHAINS FROM(SELECT(SELECT MIN(COLLECTION_TIME_ID)FROM#COLLECTION_TIMES AS TIMES1 WHERE TIMES1.COLLECTION_TIME_ID>BLOCKERS_START.COLLECTION_TIME_ID AND TIMES1.COLLECTION_TIME_ID<=@END_TIME AND NOT EXISTS(SELECT*FROM#BLOCKING_PARTICIPANTS AS BLK1 WHERE BLK1.SESSION_ID=BLOCKERS_START.SESSION_ID AND BLK1.PROGRAM_NAME=BLOCKERS_START.PROGRAM_NAME AND BLK1.LOGIN_TIME=BLOCKERS_START.LOGIN_TIME AND BLK1.COLLECTION_TIME_ID=TIMES1.COLLECTION_TIME_ID AND BLK1.BLOCKING_SESSION_ID=0))AS BLOCKING_END_COLLECTION_TIME_ID,*FROM#BLOCKING_PARTICIPANTS AS BLOCKERS_START WHERE BLOCKERS_START.BLOCKING_SESSION_ID=0)AS HEAD_BLOCKERS LEFT OUTER JOIN#COLLECTION_TIMES AS BLOCKING_END_TIMES ON BLOCKING_END_TIMES.COLLECTION_TIME_ID=HEAD_BLOCKERS.BLOCKING_END_COLLECTION_TIME_ID-1 GROUP BY HEAD_BLOCKERS.SESSION_ID,HEAD_BLOCKERS.BLOCKING_END_COLLECTION_TIME_ID ORDER BY MIN(HEAD_BLOCKERS.COLLECTION_TIME)
DataCollector	[snapshots].[rpt_cpu_counters_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,SERIES	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_CPU_COUNTERS_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT N<str>+CONVERT(NVARCHAR(10),ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>))AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME!=<str>ORDER BY PC.COLLECTION_TIME,SERIES OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)END;GO
DataCollector	[snapshots].[rpt_cpu_queues_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,SERIES	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_CPU_QUEUES_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT CASE PC.PERFORMANCE_COUNTER_NAME WHEN<str>THEN N<str>ELSE N<str>+CONVERT(NVARCHAR(10),ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>))END AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND((PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME!=<str>AND ISNUMERIC(PC.PERFORMANCE_INSTANCE_NAME)=1)OR(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>))ORDER BY PC.COLLECTION_TIME,SERIES END;GO
DataCollector	[snapshots].[rpt_cpu_usage]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,SERIES	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_CPU_USAGE@INSTANCE_NAME SYSNAME,@START_TIME DATETIME=NULL,@END_TIME DATETIME=NULL,@TIME_WINDOW_SIZE SMALLINT=NULL,@TIME_INTERVAL_MIN SMALLINT=NULL AS BEGIN SET NOCOUNT ON;IF(@END_TIME IS NULL)SET@END_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));IF(@START_TIME IS NULL)BEGIN IF@TIME_WINDOW_SIZE IS NOT NULL AND@TIME_INTERVAL_MIN IS NOT NULL BEGIN SET@START_TIME=DATEADD(MINUTE,@TIME_WINDOW_SIZE*@TIME_INTERVAL_MIN*-1.0,@END_TIME);END ELSE BEGIN SET@START_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MIN(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));END END DECLARE@END_SNAPSHOT_TIME_ID INT;SELECT@END_SNAPSHOT_TIME_ID=MAX(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME<=@END_TIME;DECLARE@START_SNAPSHOT_TIME_ID INT;SELECT@START_SNAPSHOT_TIME_ID=MIN(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME>=@START_TIME;DECLARE@CPU_COUNT SMALLINT SELECT@CPU_COUNT=COUNT(DISTINCT PC.PERFORMANCE_INSTANCE_NAME)FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON S.SNAPSHOT_ID=PC.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME!=<str>AND S.SNAPSHOT_TIME_ID BETWEEN@START_SNAPSHOT_TIME_ID AND@END_SNAPSHOT_TIME_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND PC.COLLECTION_TIME=(SELECT TOP 1 COLLECTION_TIME FROM SNAPSHOTS.PERFORMANCE_COUNTER_VALUES PCV2 WHERE PCV2.SNAPSHOT_ID=S.SNAPSHOT_ID)SELECT CASE PC.PERFORMANCE_OBJECT_NAME WHEN<str>THEN<str>ELSE<str>END AS SERIES,S.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(S.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,CASE PC.PERFORMANCE_OBJECT_NAME WHEN<str>THEN PC.FORMATTED_VALUE ELSE PC.FORMATTED_VALUE/@CPU_COUNT END AS FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID BETWEEN@START_SNAPSHOT_TIME_ID AND@END_SNAPSHOT_TIME_ID AND((PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)OR(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>))ORDER BY PC.COLLECTION_TIME,SERIES OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)END;GO
DataCollector	[snapshots].[rpt_disk_queues_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME,ISNULL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_DISK_QUEUES_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)AS DISK_LETTER,PC.PERFORMANCE_COUNTER_NAME AS COUNTER,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>,<str>)AND PC.PERFORMANCE_INSTANCE_NAME!=<str>ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME,ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)END;GO
DataCollector	[snapshots].[rpt_disk_ratios_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME,ISNULL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_DISK_RATIOS_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)AS DISK_LETTER,PC.PERFORMANCE_COUNTER_NAME AS COUNTER,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>)AND PC.PERFORMANCE_INSTANCE_NAME!=<str>ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME,ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)END;GO
DataCollector	[snapshots].[rpt_disk_speed_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME,ISNULL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_DISK_SPEED_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)AS DISK_LETTER,PC.PERFORMANCE_COUNTER_NAME AS COUNTER,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE AS FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>)AND PC.PERFORMANCE_INSTANCE_NAME!=<str>ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME,ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)END;GO
DataCollector	[snapshots].[rpt_generic_perfmon_pivot]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('SNAPSHOTS.RPT_GENERIC_PERFMON_PIVOT')IS NULL EXEC('CREATE PROCEDURE SNAPSHOTS.RPT_GENERIC_PERFMON_PIVOT AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE SNAPSHOTS.RPT_GENERIC_PERFMON_PIVOT@SERVERNAME SYSNAME,@ENDTIME DATETIME,@WINDOWSIZE INT,@DATAGROUPID NVARCHAR(128),@COLLECTIONSETUID VARCHAR(64),@INTERVAL_COUNT INT=1 AS BEGIN SET NOCOUNT ON;CREATE TABLE#COUNTERVALUES(COUNTER_SUBGROUP_ID NVARCHAR(512),SERIES_NAME NVARCHAR(1024),INTERVAL_ID INT,INTERVAL_END_TIME DATETIME,PERFORMANCE_COUNTER_NAME NVARCHAR(2048),AVG_FORMATTED_VALUE BIGINT,MAX_FORMATTED_VALUE BIGINT,MIN_FORMATTED_VALUE BIGINT,MULTI_INSTANCE_AVG_FORMATTED_VALUE BIGINT)SET@DATAGROUPID=@DATAGROUPID+'PIVOT'INSERT INTO#COUNTERVALUES EXEC SNAPSHOTS.RPT_GENERIC_PERFMON@SERVERNAME,@ENDTIME,@WINDOWSIZE,@DATAGROUPID,@COLLECTIONSETUID,@INTERVAL_COUNT IF EXISTS(SELECT*FROM#COUNTERVALUES)BEGIN DECLARE@COUNTERLIST NVARCHAR(MAX)DECLARE@COLUMNLIST_MIN_INNER NVARCHAR(MAX)DECLARE@COLUMNLIST_MAX_INNER NVARCHAR(MAX)DECLARE@COLUMNLIST_MIN_OUTER NVARCHAR(MAX)DECLARE@COLUMNLIST_MAX_OUTER NVARCHAR(MAX)SET@COUNTERLIST=''SET@COLUMNLIST_MIN_INNER=''SET@COLUMNLIST_MIN_OUTER=''SET@COLUMNLIST_MAX_INNER=''SET@COLUMNLIST_MAX_OUTER=''SELECT@COUNTERLIST=@COUNTERLIST+','+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+'',@COLUMNLIST_MIN_OUTER=@COLUMNLIST_MIN_OUTER+','+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+'_MIN',@COLUMNLIST_MIN_INNER=@COLUMNLIST_MIN_INNER+','+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+''+'AS'+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+'_MIN',@COLUMNLIST_MAX_OUTER=@COLUMNLIST_MAX_OUTER+','+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+'_MAX',@COLUMNLIST_MAX_INNER=@COLUMNLIST_MAX_INNER+','+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+''+'AS'+REPLACE(PERFORMANCE_COUNTER_NAME,'','')+'_MAX'FROM(SELECT DISTINCT PERFORMANCE_COUNTER_NAME FROM#COUNTERVALUES)AS T GROUP BY PERFORMANCE_COUNTER_NAME OPTION(MAXDOP 1)SET@COUNTERLIST=SUBSTRING(@COUNTERLIST,3,LEN(@COUNTERLIST)-2)SET@COLUMNLIST_MIN_INNER=SUBSTRING(@COLUMNLIST_MIN_INNER,3,LEN(@COLUMNLIST_MIN_INNER)-2)SET@COLUMNLIST_MIN_OUTER=SUBSTRING(@COLUMNLIST_MIN_OUTER,3,LEN(@COLUMNLIST_MIN_OUTER)-2)SET@COLUMNLIST_MAX_INNER=SUBSTRING(@COLUMNLIST_MAX_INNER,3,LEN(@COLUMNLIST_MAX_INNER)-2)SET@COLUMNLIST_MAX_OUTER=SUBSTRING(@COLUMNLIST_MAX_OUTER,3,LEN(@COLUMNLIST_MAX_OUTER)-2)DECLARE@SQL NVARCHAR(MAX)SET@SQL='SELECT AVG_PIVOT.*,'+@COLUMNLIST_MIN_OUTER+','+@COLUMNLIST_MAX_OUTER+'FROM(SELECT SERIES_NAME,INTERVAL_END_TIME,'+@COUNTERLIST+'FROM(SELECT SERIES_NAME,INTERVAL_END_TIME,PERFORMANCE_COUNTER_NAME,AVG_FORMATTED_VALUE FROM#COUNTERVALUES)AS SOURCETABLE PIVOT(AVG(AVG_FORMATTED_VALUE)FOR PERFORMANCE_COUNTER_NAME IN('+@COUNTERLIST+'))AS PIVOTTABLE)AS AVG_PIVOT INNER JOIN(SELECT SERIES_NAME,INTERVAL_END_TIME,'+@COLUMNLIST_MIN_INNER+'FROM(SELECT SERIES_NAME,INTERVAL_END_TIME,PERFORMANCE_COUNTER_NAME,MIN_FORMATTED_VALUE FROM#COUNTERVALUES)AS SOURCETABLE PIVOT(MIN(MIN_FORMATTED_VALUE)FOR PERFORMANCE_COUNTER_NAME IN('+@COUNTERLIST+'))AS PIVOTTABLE)AS MIN_PIVOT ON MIN_PIVOT.SERIES_NAME=AVG_PIVOT.SERIES_NAME AND MIN_PIVOT.INTERVAL_END_TIME=AVG_PIVOT.INTERVAL_END_TIME INNER JOIN(SELECT SERIES_NAME,INTERVAL_END_TIME,'+@COLUMNLIST_MAX_INNER+'FROM(SELECT SERIES_NAME,INTERVAL_END_TIME,PERFORMANCE_COUNTER_NAME,MAX_FORMATTED_VALUE FROM#COUNTERVALUES)AS SOURCETABLE PIVOT(MAX(MAX_FORMATTED_VALUE)FOR PERFORMANCE_COUNTER_NAME IN('+@COUNTERLIST+'))AS PIVOTTABLE)AS MAX_PIVOT ON MAX_PIVOT.SERIES_NAME=AVG_PIVOT.SERIES_NAME AND MAX_PIVOT.INTERVAL_END_TIME=AVG_PIVOT.INTERVAL_END_TIME'EXEC SP_EXECUTESQL@SQL END END;GO
DataCollector	[snapshots].[rpt_interval_collection_times]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT=NULL,@TARGETCOLLECTIONTABLE SYSNAME,@COLLECTIONSETUID VARCHAR(64),@INTERVAL_COUNT INT=40,@INCLUDE_SNAPSHOT_DETAIL BIT=0 AS BEGIN SET NOCOUNT ON;DECLARE@START_TIME_INTERNAL DATETIMEOFFSET(7);DECLARE@END_TIME_INTERNAL DATETIMEOFFSET(7);IF(@ENDTIME IS NOT NULL)BEGIN SET@END_TIME_INTERNAL=CAST(@ENDTIME AS DATETIMEOFFSET(7));END ELSE BEGIN SELECT@END_TIME_INTERNAL=MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS WHERE INSTANCE_NAME=@SERVERNAME AND COLLECTION_SET_UID=@COLLECTIONSETUID END SET@START_TIME_INTERNAL=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME_INTERNAL);DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(T.SNAPSHOT_ID)FROM(SELECT TOP 2 S.SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME<@START_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID DESC)AS T SELECT@END_SNAPSHOT_ID=MAX(T.SNAPSHOT_ID)FROM(SELECT TOP 2 SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME>=@END_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID ASC)AS T IF@START_SNAPSHOT_ID IS NULL SELECT@START_SNAPSHOT_ID=MIN(SNAPSHOT_ID)FROM CORE.SNAPSHOTS IF@END_SNAPSHOT_ID IS NULL SELECT@END_SNAPSHOT_ID=MAX(SNAPSHOT_ID)FROM CORE.SNAPSHOTS DECLARE@GROUP_INTERVAL_MIN INT SET@GROUP_INTERVAL_MIN=ROUND(DATEDIFF(SECOND,@START_TIME_INTERNAL,@END_TIME_INTERNAL)/60.0/@INTERVAL_COUNT,0)IF@GROUP_INTERVAL_MIN=0 SET@GROUP_INTERVAL_MIN=1 IF(ISNULL(PARSENAME(@TARGETCOLLECTIONTABLE,2),<str>)IN(<str>,<str>))BEGIN CREATE TABLE#SNAPSHOTS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),SOURCE_ID INT,SNAPSHOT_ID INT)DECLARE@SQL NVARCHAR(4000)SET@SQL=<str><str><str><str><str><str><str><str><str><str><str><str><str>+ISNULL(QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,2)),<str>)+<str>+QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,1))+<str>EXEC SP_EXECUTESQL@SQL,N<str>,@SERVERNAME=@SERVERNAME,@COLLECTIONSETUID=@COLLECTIONSETUID,@START_TIME_INTERNAL=@START_TIME_INTERNAL,@END_TIME_INTERNAL=@END_TIME_INTERNAL,@GROUP_INTERVAL_MIN=@GROUP_INTERVAL_MIN,@START_SNAPSHOT_ID=@START_SNAPSHOT_ID,@END_SNAPSHOT_ID=@END_SNAPSHOT_ID IF(@INCLUDE_SNAPSHOT_DETAIL=0)BEGIN SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID,NULL AS SOURCE_ID,NULL AS SNAPSHOT_ID,NULL AS COLLECTION_TIME,NULL AS COLLECTION_TIME_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID ORDER BY INTERVAL_TIME_ID END ELSE BEGIN SELECT INTERVAL_INFO.*,#SNAPSHOTS.SOURCE_ID,#SNAPSHOTS.SNAPSHOT_ID,#SNAPSHOTS.COLLECTION_TIME,DENSE_RANK()OVER(ORDER BY#SNAPSHOTS.COLLECTION_TIME)AS COLLECTION_TIME_ID FROM(SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID)AS INTERVAL_INFO INNER JOIN#SNAPSHOTS ON INTERVAL_INFO.INTERVAL_TIME_ID=#SNAPSHOTS.INTERVAL_TIME_ID ORDER BY INTERVAL_INFO.INTERVAL_TIME_ID,#SNAPSHOTS.COLLECTION_TIME END END ELSE BEGIN RAISERROR(21055,16,-1,@TARGETCOLLECTIONTABLE,<str>)END END;GO
DataCollector	[snapshots].[rpt_interval_collection_times]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT=NULL,@TARGETCOLLECTIONTABLE SYSNAME,@COLLECTIONSETUID VARCHAR(64),@INTERVAL_COUNT INT=40,@INCLUDE_SNAPSHOT_DETAIL BIT=0 AS BEGIN SET NOCOUNT ON;DECLARE@START_TIME_INTERNAL DATETIMEOFFSET(7);DECLARE@END_TIME_INTERNAL DATETIMEOFFSET(7);IF(@ENDTIME IS NOT NULL)BEGIN SET@END_TIME_INTERNAL=CAST(@ENDTIME AS DATETIMEOFFSET(7));END ELSE BEGIN SELECT@END_TIME_INTERNAL=MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS WHERE INSTANCE_NAME=@SERVERNAME AND COLLECTION_SET_UID=@COLLECTIONSETUID END SET@START_TIME_INTERNAL=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME_INTERNAL);DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(T.SNAPSHOT_ID)FROM(SELECT TOP 2 S.SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME<@START_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID DESC)AS T SELECT@END_SNAPSHOT_ID=MAX(T.SNAPSHOT_ID)FROM(SELECT TOP 2 SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME>=@END_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID ASC)AS T IF@START_SNAPSHOT_ID IS NULL SELECT@START_SNAPSHOT_ID=MIN(SNAPSHOT_ID)FROM CORE.SNAPSHOTS IF@END_SNAPSHOT_ID IS NULL SELECT@END_SNAPSHOT_ID=MAX(SNAPSHOT_ID)FROM CORE.SNAPSHOTS DECLARE@GROUP_INTERVAL_MIN INT SET@GROUP_INTERVAL_MIN=ROUND(DATEDIFF(SECOND,@START_TIME_INTERNAL,@END_TIME_INTERNAL)/60.0/@INTERVAL_COUNT,0)IF@GROUP_INTERVAL_MIN=0 SET@GROUP_INTERVAL_MIN=1 IF(ISNULL(PARSENAME(@TARGETCOLLECTIONTABLE,2),<str>)IN(<str>,<str>))BEGIN CREATE TABLE#SNAPSHOTS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),SOURCE_ID INT,SNAPSHOT_ID INT)DECLARE@SQL NVARCHAR(4000)SET@SQL=<str><str><str><str><str><str><str><str><str><str><str><str><str>+ISNULL(QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,2)),<str>)+<str>+QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,1))+<str>EXEC SP_EXECUTESQL@SQL,N<str>,@SERVERNAME=@SERVERNAME,@COLLECTIONSETUID=@COLLECTIONSETUID,@START_TIME_INTERNAL=@START_TIME_INTERNAL,@END_TIME_INTERNAL=@END_TIME_INTERNAL,@GROUP_INTERVAL_MIN=@GROUP_INTERVAL_MIN,@START_SNAPSHOT_ID=@START_SNAPSHOT_ID,@END_SNAPSHOT_ID=@END_SNAPSHOT_ID IF(@INCLUDE_SNAPSHOT_DETAIL=0)BEGIN SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID,NULL AS SOURCE_ID,NULL AS SNAPSHOT_ID,NULL AS COLLECTION_TIME,NULL AS COLLECTION_TIME_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID ORDER BY INTERVAL_TIME_ID END ELSE BEGIN SELECT INTERVAL_INFO.*,#SNAPSHOTS.SOURCE_ID,#SNAPSHOTS.SNAPSHOT_ID,#SNAPSHOTS.COLLECTION_TIME,DENSE_RANK()OVER(ORDER BY#SNAPSHOTS.COLLECTION_TIME)AS COLLECTION_TIME_ID FROM(SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID)AS INTERVAL_INFO INNER JOIN#SNAPSHOTS ON INTERVAL_INFO.INTERVAL_TIME_ID=#SNAPSHOTS.INTERVAL_TIME_ID ORDER BY INTERVAL_INFO.INTERVAL_TIME_ID,#SNAPSHOTS.COLLECTION_TIME END END ELSE BEGIN RAISERROR(21055,16,-1,@TARGETCOLLECTIONTABLE,<str>)END END;GO
DataCollector	[snapshots].[rpt_interval_collection_times]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY INTERVAL_INFO.INTERVAL_TIME_ID,#SNAPSHOTS.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT=NULL,@TARGETCOLLECTIONTABLE SYSNAME,@COLLECTIONSETUID VARCHAR(64),@INTERVAL_COUNT INT=40,@INCLUDE_SNAPSHOT_DETAIL BIT=0 AS BEGIN SET NOCOUNT ON;DECLARE@START_TIME_INTERNAL DATETIMEOFFSET(7);DECLARE@END_TIME_INTERNAL DATETIMEOFFSET(7);IF(@ENDTIME IS NOT NULL)BEGIN SET@END_TIME_INTERNAL=CAST(@ENDTIME AS DATETIMEOFFSET(7));END ELSE BEGIN SELECT@END_TIME_INTERNAL=MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS WHERE INSTANCE_NAME=@SERVERNAME AND COLLECTION_SET_UID=@COLLECTIONSETUID END SET@START_TIME_INTERNAL=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME_INTERNAL);DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(T.SNAPSHOT_ID)FROM(SELECT TOP 2 S.SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME<@START_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID DESC)AS T SELECT@END_SNAPSHOT_ID=MAX(T.SNAPSHOT_ID)FROM(SELECT TOP 2 SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME>=@END_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID ASC)AS T IF@START_SNAPSHOT_ID IS NULL SELECT@START_SNAPSHOT_ID=MIN(SNAPSHOT_ID)FROM CORE.SNAPSHOTS IF@END_SNAPSHOT_ID IS NULL SELECT@END_SNAPSHOT_ID=MAX(SNAPSHOT_ID)FROM CORE.SNAPSHOTS DECLARE@GROUP_INTERVAL_MIN INT SET@GROUP_INTERVAL_MIN=ROUND(DATEDIFF(SECOND,@START_TIME_INTERNAL,@END_TIME_INTERNAL)/60.0/@INTERVAL_COUNT,0)IF@GROUP_INTERVAL_MIN=0 SET@GROUP_INTERVAL_MIN=1 IF(ISNULL(PARSENAME(@TARGETCOLLECTIONTABLE,2),<str>)IN(<str>,<str>))BEGIN CREATE TABLE#SNAPSHOTS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),SOURCE_ID INT,SNAPSHOT_ID INT)DECLARE@SQL NVARCHAR(4000)SET@SQL=<str><str><str><str><str><str><str><str><str><str><str><str><str>+ISNULL(QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,2)),<str>)+<str>+QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,1))+<str>EXEC SP_EXECUTESQL@SQL,N<str>,@SERVERNAME=@SERVERNAME,@COLLECTIONSETUID=@COLLECTIONSETUID,@START_TIME_INTERNAL=@START_TIME_INTERNAL,@END_TIME_INTERNAL=@END_TIME_INTERNAL,@GROUP_INTERVAL_MIN=@GROUP_INTERVAL_MIN,@START_SNAPSHOT_ID=@START_SNAPSHOT_ID,@END_SNAPSHOT_ID=@END_SNAPSHOT_ID IF(@INCLUDE_SNAPSHOT_DETAIL=0)BEGIN SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID,NULL AS SOURCE_ID,NULL AS SNAPSHOT_ID,NULL AS COLLECTION_TIME,NULL AS COLLECTION_TIME_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID ORDER BY INTERVAL_TIME_ID END ELSE BEGIN SELECT INTERVAL_INFO.*,#SNAPSHOTS.SOURCE_ID,#SNAPSHOTS.SNAPSHOT_ID,#SNAPSHOTS.COLLECTION_TIME,DENSE_RANK()OVER(ORDER BY#SNAPSHOTS.COLLECTION_TIME)AS COLLECTION_TIME_ID FROM(SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID)AS INTERVAL_INFO INNER JOIN#SNAPSHOTS ON INTERVAL_INFO.INTERVAL_TIME_ID=#SNAPSHOTS.INTERVAL_TIME_ID ORDER BY INTERVAL_INFO.INTERVAL_TIME_ID,#SNAPSHOTS.COLLECTION_TIME END END ELSE BEGIN RAISERROR(21055,16,-1,@TARGETCOLLECTIONTABLE,<str>)END END;GO
DataCollector	[snapshots].[rpt_interval_collection_times]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES')IS NULL EXEC('CREATE PROCEDURE SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT=NULL,@TARGETCOLLECTIONTABLE SYSNAME,@COLLECTIONSETUID VARCHAR(64),@INTERVAL_COUNT INT=40,@INCLUDE_SNAPSHOT_DETAIL BIT=0 AS BEGIN SET NOCOUNT ON;DECLARE@START_TIME_INTERNAL DATETIMEOFFSET(7);DECLARE@END_TIME_INTERNAL DATETIMEOFFSET(7);IF(@ENDTIME IS NOT NULL)BEGIN SET@END_TIME_INTERNAL=CAST(@ENDTIME AS DATETIMEOFFSET(7));END ELSE BEGIN SELECT@END_TIME_INTERNAL=MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS WHERE INSTANCE_NAME=@SERVERNAME AND COLLECTION_SET_UID=@COLLECTIONSETUID END SET@START_TIME_INTERNAL=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME_INTERNAL);DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(T.SNAPSHOT_ID)FROM(SELECT TOP 2 S.SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME<@START_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID DESC)AS T SELECT@END_SNAPSHOT_ID=MAX(T.SNAPSHOT_ID)FROM(SELECT TOP 2 SNAPSHOT_ID FROM CORE.SNAPSHOTS AS S WHERE S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID AND S.SNAPSHOT_TIME>=@END_TIME_INTERNAL ORDER BY S.SNAPSHOT_ID ASC)AS T IF@START_SNAPSHOT_ID IS NULL SELECT@START_SNAPSHOT_ID=MIN(SNAPSHOT_ID)FROM CORE.SNAPSHOTS IF@END_SNAPSHOT_ID IS NULL SELECT@END_SNAPSHOT_ID=MAX(SNAPSHOT_ID)FROM CORE.SNAPSHOTS DECLARE@GROUP_INTERVAL_MIN INT SET@GROUP_INTERVAL_MIN=ROUND(DATEDIFF(SECOND,@START_TIME_INTERNAL,@END_TIME_INTERNAL)/60.0/@INTERVAL_COUNT,0)IF@GROUP_INTERVAL_MIN=0 SET@GROUP_INTERVAL_MIN=1 IF(ISNULL(PARSENAME(@TARGETCOLLECTIONTABLE,2),'SNAPSHOTS')IN('SNAPSHOTS','CUSTOM_SNAPSHOTS'))BEGIN CREATE TABLE#SNAPSHOTS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),SOURCE_ID INT,SNAPSHOT_ID INT)DECLARE@SQL NVARCHAR(4000)SET@SQL='INSERT INTO#SNAPSHOTS SELECT DISTINCT DATEDIFF(MINUTE,''20000101'',DATATABLE.COLLECTION_TIME)/@GROUP_INTERVAL_MIN AS INTERVAL_TIME_ID,DATEADD(MINUTE,(DATEDIFF(MINUTE,''20000101'',DATATABLE.COLLECTION_TIME)/@GROUP_INTERVAL_MIN)*@GROUP_INTERVAL_MIN,''20000101'')AS INTERVAL_START_TIME,DATEADD(MINUTE,(DATEDIFF(MINUTE,''20000101'',DATATABLE.COLLECTION_TIME)/@GROUP_INTERVAL_MIN+1)*@GROUP_INTERVAL_MIN,''20000101'')AS INTERVAL_END_TIME,DENSE_RANK()OVER(ORDER BY DATEDIFF(MINUTE,''20000101'',DATATABLE.COLLECTION_TIME)/@GROUP_INTERVAL_MIN)AS INTERVAL_ID,DATATABLE.COLLECTION_TIME,S.SOURCE_ID,S.SNAPSHOT_ID FROM'+ISNULL(QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,2)),'SNAPSHOTS')+'.'+QUOTENAME(PARSENAME(@TARGETCOLLECTIONTABLE,1))+'AS DATATABLE INNER JOIN CORE.SNAPSHOTS AS S ON DATATABLE.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE DATATABLE.COLLECTION_TIME BETWEEN@START_TIME_INTERNAL AND@END_TIME_INTERNAL AND S.SNAPSHOT_ID BETWEEN@START_SNAPSHOT_ID AND@END_SNAPSHOT_ID AND S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=@COLLECTIONSETUID'EXEC SP_EXECUTESQL@SQL,N'@SERVERNAME SYSNAME,@COLLECTIONSETUID NVARCHAR(64),@START_TIME_INTERNAL DATETIMEOFFSET(7),@END_TIME_INTERNAL DATETIMEOFFSET(7),@GROUP_INTERVAL_MIN INT,@START_SNAPSHOT_ID INT,@END_SNAPSHOT_ID INT',@SERVERNAME=@SERVERNAME,@COLLECTIONSETUID=@COLLECTIONSETUID,@START_TIME_INTERNAL=@START_TIME_INTERNAL,@END_TIME_INTERNAL=@END_TIME_INTERNAL,@GROUP_INTERVAL_MIN=@GROUP_INTERVAL_MIN,@START_SNAPSHOT_ID=@START_SNAPSHOT_ID,@END_SNAPSHOT_ID=@END_SNAPSHOT_ID IF(@INCLUDE_SNAPSHOT_DETAIL=0)BEGIN SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID,NULL AS SOURCE_ID,NULL AS SNAPSHOT_ID,NULL AS COLLECTION_TIME,NULL AS COLLECTION_TIME_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID ORDER BY INTERVAL_TIME_ID END ELSE BEGIN SELECT INTERVAL_INFO.*,#SNAPSHOTS.SOURCE_ID,#SNAPSHOTS.SNAPSHOT_ID,#SNAPSHOTS.COLLECTION_TIME,DENSE_RANK()OVER(ORDER BY#SNAPSHOTS.COLLECTION_TIME)AS COLLECTION_TIME_ID FROM(SELECT INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID,MIN(COLLECTION_TIME)AS FIRST_COLLECTION_TIME,MAX(COLLECTION_TIME)AS LAST_COLLECTION_TIME,MIN(SNAPSHOT_ID)AS FIRST_SNAPSHOT_ID,MAX(SNAPSHOT_ID)AS LAST_SNAPSHOT_ID FROM#SNAPSHOTS GROUP BY INTERVAL_TIME_ID,INTERVAL_START_TIME,INTERVAL_END_TIME,INTERVAL_ID)AS INTERVAL_INFO INNER JOIN#SNAPSHOTS ON INTERVAL_INFO.INTERVAL_TIME_ID=#SNAPSHOTS.INTERVAL_TIME_ID ORDER BY INTERVAL_INFO.INTERVAL_TIME_ID,#SNAPSHOTS.COLLECTION_TIME END END ELSE BEGIN RAISERROR(21055,16,-1,@TARGETCOLLECTIONTABLE,'@TARGETCOLLECTIONTABLE')END END;GO
DataCollector	[snapshots].[rpt_io_virtual_file_stats]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T.DATABASE_NAME,T.LOGICAL_FILE_NAME,T.LAST_COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_IO_VIRTUAL_FILE_STATS@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT,@LOGICALDISK NVARCHAR(255)=NULL,@DATABASE NVARCHAR(255)=NULL AS BEGIN SET NOCOUNT ON;IF@LOGICALDISK=<str>SET@LOGICALDISK=NULL IF@DATABASE=<str>SET@DATABASE=NULL CREATE TABLE#INTERVALS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,FIRST_COLLECTION_TIME DATETIMEOFFSET(7),LAST_COLLECTION_TIME DATETIMEOFFSET(7),FIRST_SNAPSHOT_ID INT,LAST_SNAPSHOT_ID INT,SOURCE_ID INT,SNAPSHOT_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),COLLECTION_TIME_ID INT)INSERT INTO#INTERVALS EXEC SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME,@ENDTIME,@WINDOWSIZE,<str>,<str>,40,0 DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(FIRST_SNAPSHOT_ID)FROM#INTERVALS SELECT@END_SNAPSHOT_ID=MAX(LAST_SNAPSHOT_ID)FROM#INTERVALS SELECT COLL.INTERVAL_ID,COLL.INTERVAL_TIME_ID,COLL.INTERVAL_START_TIME,COLL.INTERVAL_END_TIME,COLL.FIRST_COLLECTION_TIME,COLL.LAST_COLLECTION_TIME,COLL.FIRST_SNAPSHOT_ID,COLL.LAST_SNAPSHOT_ID,FS.*INTO#FILE_STATS FROM SNAPSHOTS.IO_VIRTUAL_FILE_STATS AS FS INNER JOIN#INTERVALS AS COLL ON COLL.LAST_SNAPSHOT_ID=FS.SNAPSHOT_ID AND COLL.LAST_COLLECTION_TIME=FS.COLLECTION_TIME WHERE FS.LOGICAL_DISK=ISNULL(@LOGICALDISK,FS.LOGICAL_DISK)AND FS.DATABASE_NAME=ISNULL(@DATABASE,FS.DATABASE_NAME)SELECT T.*,T.NUM_OF_READS_DELTA+T.NUM_OF_WRITES_DELTA AS NUM_OF_TRANSFERS_DELTA,T.NUM_OF_READS_CUMULATIVE+T.NUM_OF_WRITES_CUMULATIVE AS NUM_OF_TRANSFERS_CUMULATIVE,T.NUM_OF_MB_READ_DELTA+T.NUM_OF_MB_WRITTEN_DELTA AS NUM_OF_MB_TRANSFERRED_DELTA,T.NUM_OF_MB_READ_CUMULATIVE+T.NUM_OF_MB_WRITTEN_CUMULATIVE AS NUM_OF_MB_TRANSFERRED_CUMULATIVE,T.IO_STALL_READ_MS_DELTA+T.IO_STALL_WRITE_MS_DELTA AS IO_STALL_MS_DELTA,T.IO_STALL_READ_MS_CUMULATIVE+T.IO_STALL_WRITE_MS_CUMULATIVE AS IO_STALL_MS_CUMULATIVE,CASE WHEN T.NUM_OF_READS_DELTA=0 THEN 0 ELSE T.IO_STALL_READ_MS_DELTA/T.NUM_OF_READS_DELTA END AS IO_STALL_MS_PER_READ_DELTA,CASE WHEN T.NUM_OF_READS_CUMULATIVE=0 THEN 0 ELSE T.IO_STALL_READ_MS_CUMULATIVE/T.NUM_OF_READS_CUMULATIVE END AS IO_STALL_MS_PER_READ_CUMULATIVE,CASE WHEN T.NUM_OF_WRITES_DELTA=0 THEN 0 ELSE T.IO_STALL_WRITE_MS_DELTA/T.NUM_OF_WRITES_DELTA END AS IO_STALL_MS_PER_WRITE_DELTA,CASE WHEN T.NUM_OF_WRITES_CUMULATIVE=0 THEN 0 ELSE T.IO_STALL_WRITE_MS_CUMULATIVE/T.NUM_OF_WRITES_CUMULATIVE END AS IO_STALL_MS_PER_WRITE_CUMULATIVE,CASE WHEN(T.NUM_OF_READS_DELTA+T.NUM_OF_WRITES_DELTA)=0 THEN 0 ELSE(T.IO_STALL_READ_MS_DELTA+T.IO_STALL_WRITE_MS_DELTA)/(T.NUM_OF_READS_DELTA+T.NUM_OF_WRITES_DELTA)END AS IO_STALL_MS_PER_TRANSFER_DELTA,CASE WHEN(T.NUM_OF_READS_CUMULATIVE+T.NUM_OF_WRITES_CUMULATIVE)=0 THEN 0 ELSE(T.IO_STALL_READ_MS_CUMULATIVE+T.IO_STALL_WRITE_MS_CUMULATIVE)/(T.NUM_OF_READS_CUMULATIVE+T.NUM_OF_WRITES_CUMULATIVE)END AS IO_STALL_MS_PER_TRANSFER_CUMULATIVE FROM(SELECT FS1.INTERVAL_ID,FS1.INTERVAL_TIME_ID,FS1.FIRST_SNAPSHOT_ID,FS1.LAST_SNAPSHOT_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(FS1.FIRST_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS FIRST_COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(FS2.FIRST_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS LAST_COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(FS1.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(FS2.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,FS2.DATABASE_NAME,FS2.DATABASE_ID,FS2.LOGICAL_FILE_NAME,FS2.FILE_ID,FS2.TYPE_DESC,FS2.LOGICAL_DISK,CASE WHEN(FS2.NUM_OF_READS-FS1.NUM_OF_READS)<0 THEN FS2.NUM_OF_READS ELSE(FS2.NUM_OF_READS-FS1.NUM_OF_READS)END AS NUM_OF_READS_DELTA,FS2.NUM_OF_READS AS NUM_OF_READS_CUMULATIVE,CASE WHEN(FS2.NUM_OF_BYTES_READ-FS1.NUM_OF_BYTES_READ)<0 THEN FS2.NUM_OF_BYTES_READ ELSE(FS2.NUM_OF_BYTES_READ-FS1.NUM_OF_BYTES_READ)END/1024/1024 AS NUM_OF_MB_READ_DELTA,FS2.NUM_OF_BYTES_READ/1024/1024 AS NUM_OF_MB_READ_CUMULATIVE,CASE WHEN(FS2.IO_STALL_READ_MS-FS1.IO_STALL_READ_MS)<0 THEN FS2.IO_STALL_READ_MS ELSE(FS2.IO_STALL_READ_MS-FS1.IO_STALL_READ_MS)END AS IO_STALL_READ_MS_DELTA,FS2.IO_STALL_READ_MS AS IO_STALL_READ_MS_CUMULATIVE,CASE WHEN(FS2.NUM_OF_WRITES-FS1.NUM_OF_WRITES)<0 THEN FS2.NUM_OF_WRITES ELSE(FS2.NUM_OF_WRITES-FS1.NUM_OF_WRITES)END AS NUM_OF_WRITES_DELTA,FS2.NUM_OF_WRITES AS NUM_OF_WRITES_CUMULATIVE,CASE WHEN(FS2.NUM_OF_BYTES_WRITTEN-FS1.NUM_OF_BYTES_WRITTEN)<0 THEN FS2.NUM_OF_BYTES_WRITTEN ELSE(FS2.NUM_OF_BYTES_WRITTEN-FS1.NUM_OF_BYTES_WRITTEN)END/1024/1024 AS NUM_OF_MB_WRITTEN_DELTA,FS2.NUM_OF_BYTES_WRITTEN/1024/1024 AS NUM_OF_MB_WRITTEN_CUMULATIVE,CASE WHEN(FS2.IO_STALL_WRITE_MS-FS1.IO_STALL_WRITE_MS)<0 THEN FS2.IO_STALL_WRITE_MS ELSE(FS2.IO_STALL_WRITE_MS-FS1.IO_STALL_WRITE_MS)END AS IO_STALL_WRITE_MS_DELTA,FS2.IO_STALL_WRITE_MS AS IO_STALL_WRITE_MS_CUMULATIVE,FS1.SIZE_ON_DISK_BYTES/1024/1024 AS SIZE_ON_DISK_MB_INTERVAL_START,FS2.SIZE_ON_DISK_BYTES/1024/1024 AS SIZE_ON_DISK_MB_INTERVAL_END FROM#FILE_STATS AS FS1 INNER JOIN#FILE_STATS AS FS2 ON FS1.DATABASE_ID=FS2.DATABASE_ID AND FS1.FILE_ID=FS2.FILE_ID AND FS1.INTERVAL_ID=FS2.INTERVAL_ID-1)AS T ORDER BY T.DATABASE_NAME,T.LOGICAL_FILE_NAME,T.LAST_COLLECTION_TIME END GO
DataCollector	[snapshots].[rpt_memory_counters_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,SERIES	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_MEMORY_COUNTERS_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT PC.PERFORMANCE_COUNTER_NAME AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.COLLECTION_TIME,PC.FORMATTED_VALUE/(1024*1024)AS FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND((PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>))OR(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>))ORDER BY PC.COLLECTION_TIME,SERIES END;GO
DataCollector	[snapshots].[rpt_memory_rates_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,SERIES	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_MEMORY_RATES_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT PC.PERFORMANCE_COUNTER_NAME AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>,<str>,<str>)ORDER BY PC.COLLECTION_TIME,SERIES END;GO
DataCollector	[snapshots].[rpt_plan_cache_hit_ratio]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,ISNULL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_PLAN_CACHE_HIT_RATIO@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME LIKE<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME!=<str>ORDER BY PC.COLLECTION_TIME,ISNULL(PC.PERFORMANCE_INSTANCE_NAME,N<str>)END;GO
DataCollector	[snapshots].[rpt_requests_and_compilations]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_REQUESTS_AND_COMPILATIONS@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT PC.PERFORMANCE_COUNTER_NAME AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME LIKE<str>AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>,<str>,<str>,<str>)ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME END;GO
DataCollector	[snapshots].[rpt_sampled_waits]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R.CATEGORY_NAME,R.INTERVAL_ID,COUNT	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_SAMPLED_WAITS@SERVERNAME SYSNAME,@ENDTIME DATETIME,@WINDOWSIZE INT,@CATEGORYNAME NVARCHAR(20)=NULL,@WAITTYPE NVARCHAR(45)=NULL,@PROGRAMNAME NVARCHAR(50)=NULL,@SQLHANDLESTR VARCHAR(130)=NULL,@STATEMENTSTARTOFFSET INT=NULL,@STATEMENTENDOFFSET INT=NULL,@SESSIONID INT=NULL,@DATABASE NVARCHAR(255)=NULL AS BEGIN SET NOCOUNT ON;DECLARE@START_TIME_INTERNAL DATETIMEOFFSET(7);DECLARE@END_TIME_INTERNAL DATETIMEOFFSET(7);IF@CATEGORYNAME=<str>SET@CATEGORYNAME=NULL IF@WAITTYPE=<str>SET@WAITTYPE=NULL IF@PROGRAMNAME=<str>SET@PROGRAMNAME=NULL IF@SQLHANDLESTR=<str>SET@SQLHANDLESTR=NULL IF@DATABASE=<str>SET@DATABASE=NULL IF@STATEMENTSTARTOFFSET<-1 SET@STATEMENTSTARTOFFSET=NULL IF@STATEMENTENDOFFSET<-1 SET@STATEMENTSTARTOFFSET=NULL IF@SESSIONID<-1 SET@SESSIONID=NULL IF(@ENDTIME IS NOT NULL)BEGIN SET@END_TIME_INTERNAL=CAST(@ENDTIME AS DATETIMEOFFSET(7));END ELSE BEGIN SELECT@END_TIME_INTERNAL=MAX(AR.COLLECTION_TIME)FROM CORE.SNAPSHOTS AS S INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS AR ON S.SNAPSHOT_ID=AR.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@SERVERNAME END SET@START_TIME_INTERNAL=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME_INTERNAL);DECLARE@SQL_HANDLE VARBINARY(64)IF LEN(@SQLHANDLESTR)>0 BEGIN SET@SQL_HANDLE=SNAPSHOTS.FN_HEXSTRTOVARBIN(@SQLHANDLESTR)END CREATE TABLE#INTERVALS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,FIRST_COLLECTION_TIME DATETIMEOFFSET(7),LAST_COLLECTION_TIME DATETIMEOFFSET(7),FIRST_SNAPSHOT_ID INT,LAST_SNAPSHOT_ID INT,SOURCE_ID INT,SNAPSHOT_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),COLLECTION_TIME_ID INT)INSERT INTO#INTERVALS EXEC SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME,@ENDTIME,@WINDOWSIZE,<str>,<str>,40,1 SELECT TI.INTERVAL_ID,TI.INTERVAL_TIME_ID,TI.INTERVAL_START_TIME,TI.INTERVAL_END_TIME,TI.COLLECTION_TIME,TI.COLLECTION_TIME_ID,R.ROW_ID,R.SNAPSHOT_ID,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.LOGIN_TIME,R.PROGRAM_NAME,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET,R.PLAN_HANDLE,R.DATABASE_NAME,R.TASK_STATE,TI.SOURCE_ID,WT.IGNORE,CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE IS NOT NULL THEN<str>ELSE WT.CATEGORY_NAME END AS CATEGORY_NAME,CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE=<str>THEN<str>WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE!=<str>THEN<str>ELSE R.WAIT_TYPE END AS WAIT_TYPE INTO#WAITING_TASKS FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON WT.WAIT_TYPE=R.WAIT_TYPE INNER JOIN#INTERVALS AS TI ON R.COLLECTION_TIME=TI.COLLECTION_TIME AND R.SNAPSHOT_ID=TI.SNAPSHOT_ID WHERE R.COLLECTION_TIME BETWEEN@START_TIME_INTERNAL AND@END_TIME_INTERNAL AND R.COMMAND!=<str>AND R.REQUEST_ID!=-1 AND(R.PROGRAM_NAME=@PROGRAMNAME OR@PROGRAMNAME IS NULL)AND(R.SQL_HANDLE=@SQL_HANDLE OR@SQLHANDLESTR IS NULL)AND(R.DATABASE_NAME=@DATABASE OR@DATABASE IS NULL)AND(R.STATEMENT_START_OFFSET=@STATEMENTSTARTOFFSET OR@SQLHANDLESTR IS NULL)AND(R.STATEMENT_END_OFFSET=@STATEMENTENDOFFSET OR@SQLHANDLESTR IS NULL)AND(R.SESSION_ID=@SESSIONID OR@SESSIONID IS NULL)AND((@CATEGORYNAME=CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE IS NOT NULL THEN<str>ELSE WT.CATEGORY_NAME END)OR(@CATEGORYNAME IS NULL AND ISNULL(WT.IGNORE,0)=0))AND((@WAITTYPE=CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE=<str>THEN<str>WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE!=<str>THEN<str>ELSE R.WAIT_TYPE END)OR@WAITTYPE IS NULL)OPTION(RECOMPILE);SELECT R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LEFT(LTRIM(QT.QUERY_TEXT),100),CHAR(9),<str>),CHAR(10),<str>),CHAR(13),<str>),<str>,<str>),<str>,<str>),<str>,<str>)AS FLAT_QUERY_TEXT INTO#QUERIES FROM(SELECT DISTINCT SOURCE_ID,SQL_HANDLE,STATEMENT_START_OFFSET,STATEMENT_END_OFFSET FROM#WAITING_TASKS WHERE CATEGORY_NAME IS NOT NULL)AS R OUTER APPLY SNAPSHOTS.FN_GET_QUERY_TEXT(R.SOURCE_ID,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET)AS QT SELECT CONVERT(DATETIME,SWITCHOFFSET(R.INTERVAL_START_TIME,<str>))AS INTERVAL_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(R.INTERVAL_END_TIME,<str>))AS INTERVAL_END_TIME,R.INTERVAL_ID,R.INTERVAL_TIME_ID,R.SOURCE_ID,R.CATEGORY_NAME,R.WAIT_TYPE,R.PROGRAM_NAME,R.DATABASE_NAME,COUNT(*)AS WAIT_COUNT,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET,MASTER.FN_VARBINTOHEXSTR(R.SQL_HANDLE)AS SQL_HANDLE_STR,Q.FLAT_QUERY_TEXT FROM#WAITING_TASKS AS R LEFT OUTER JOIN#QUERIES AS Q ON R.SQL_HANDLE=Q.SQL_HANDLE AND R.STATEMENT_START_OFFSET=Q.STATEMENT_START_OFFSET AND R.STATEMENT_END_OFFSET=Q.STATEMENT_END_OFFSET WHERE R.CATEGORY_NAME IS NOT NULL GROUP BY R.INTERVAL_START_TIME,R.INTERVAL_END_TIME,R.INTERVAL_ID,R.INTERVAL_TIME_ID,R.CATEGORY_NAME,R.WAIT_TYPE,R.PROGRAM_NAME,R.DATABASE_NAME,R.SQL_HANDLE,R.SOURCE_ID,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET,Q.FLAT_QUERY_TEXT ORDER BY R.CATEGORY_NAME,R.INTERVAL_ID,COUNT(*)DESC END GO
DataCollector	[snapshots].[rpt_sampled_waits_longest]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY R1.WAIT_DURATION_MS	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_SAMPLED_WAITS_LONGEST@SERVERNAME SYSNAME,@ENDTIME DATETIME,@WINDOWSIZE INT,@CATEGORYNAME NVARCHAR(20)=NULL,@WAITTYPE NVARCHAR(45)=NULL,@PROGRAMNAME NVARCHAR(50)=NULL,@SQLHANDLESTR VARCHAR(130)=NULL,@STATEMENTSTARTOFFSET INT=NULL,@STATEMENTENDOFFSET INT=NULL,@SESSIONID INT=NULL,@DATABASE NVARCHAR(255)=NULL AS BEGIN SET NOCOUNT ON;DECLARE@START_TIME_INTERNAL DATETIMEOFFSET(7);DECLARE@END_TIME_INTERNAL DATETIMEOFFSET(7);IF@CATEGORYNAME=<str>SET@CATEGORYNAME=NULL IF@WAITTYPE=<str>SET@WAITTYPE=NULL IF@PROGRAMNAME=<str>SET@PROGRAMNAME=NULL IF@SQLHANDLESTR=<str>SET@SQLHANDLESTR=NULL IF@DATABASE=<str>SET@DATABASE=NULL IF@STATEMENTSTARTOFFSET<-1 SET@STATEMENTSTARTOFFSET=NULL IF@STATEMENTENDOFFSET<-1 SET@STATEMENTSTARTOFFSET=NULL IF@SESSIONID<-1 SET@SESSIONID=NULL IF(@ENDTIME IS NOT NULL)BEGIN SET@END_TIME_INTERNAL=CAST(@ENDTIME AS DATETIMEOFFSET(7));END ELSE BEGIN SELECT@END_TIME_INTERNAL=MAX(AR.COLLECTION_TIME)FROM CORE.SNAPSHOTS AS S INNER JOIN SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS AR ON S.SNAPSHOT_ID=AR.SNAPSHOT_ID WHERE S.INSTANCE_NAME=@SERVERNAME END SET@START_TIME_INTERNAL=DATEADD(MINUTE,-1*@WINDOWSIZE,@END_TIME_INTERNAL);DECLARE@SQL_HANDLE VARBINARY(64)IF LEN(@SQLHANDLESTR)>0 BEGIN SET@SQL_HANDLE=SNAPSHOTS.FN_HEXSTRTOVARBIN(@SQLHANDLESTR)END CREATE TABLE#INTERVALS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,FIRST_COLLECTION_TIME DATETIMEOFFSET(7),LAST_COLLECTION_TIME DATETIMEOFFSET(7),FIRST_SNAPSHOT_ID INT,LAST_SNAPSHOT_ID INT,SOURCE_ID INT,SNAPSHOT_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),COLLECTION_TIME_ID INT)INSERT INTO#INTERVALS EXEC SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME,@ENDTIME,@WINDOWSIZE,<str>,<str>,40,1 SELECT TI.INTERVAL_ID,TI.INTERVAL_TIME_ID,TI.INTERVAL_START_TIME,TI.INTERVAL_END_TIME,TI.COLLECTION_TIME,TI.COLLECTION_TIME_ID,R.ROW_ID,R.SNAPSHOT_ID,R.SESSION_ID,R.REQUEST_ID,R.EXEC_CONTEXT_ID,R.WAIT_DURATION_MS,R.WAIT_RESOURCE,R.LOGIN_TIME,R.PROGRAM_NAME,R.SQL_HANDLE,R.STATEMENT_START_OFFSET,R.STATEMENT_END_OFFSET,R.PLAN_HANDLE,R.DATABASE_NAME,R.TASK_STATE,TI.SOURCE_ID,WT.IGNORE,CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE IS NOT NULL THEN<str>ELSE WT.CATEGORY_NAME END AS CATEGORY_NAME,CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE=<str>THEN<str>WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE!=<str>THEN<str>ELSE R.WAIT_TYPE END AS WAIT_TYPE INTO#WAITING_TASKS FROM SNAPSHOTS.ACTIVE_SESSIONS_AND_REQUESTS AS R LEFT OUTER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON WT.WAIT_TYPE=R.WAIT_TYPE INNER JOIN#INTERVALS AS TI ON R.COLLECTION_TIME=TI.COLLECTION_TIME AND R.SNAPSHOT_ID=TI.SNAPSHOT_ID WHERE R.COLLECTION_TIME BETWEEN@START_TIME_INTERNAL AND@END_TIME_INTERNAL AND R.COMMAND!=<str>AND R.REQUEST_ID!=-1 AND(R.PROGRAM_NAME=@PROGRAMNAME OR@PROGRAMNAME IS NULL)AND(R.SQL_HANDLE=@SQL_HANDLE OR@SQLHANDLESTR IS NULL)AND(R.DATABASE_NAME=@DATABASE OR@DATABASE IS NULL)AND(R.STATEMENT_START_OFFSET=@STATEMENTSTARTOFFSET OR@SQLHANDLESTR IS NULL)AND(R.STATEMENT_END_OFFSET=@STATEMENTENDOFFSET OR@SQLHANDLESTR IS NULL)AND(R.SESSION_ID=@SESSIONID OR@SESSIONID IS NULL)AND((@CATEGORYNAME=CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE IS NOT NULL THEN<str>ELSE WT.CATEGORY_NAME END)OR(@CATEGORYNAME IS NULL AND ISNULL(WT.IGNORE,0)=0))AND((@WAITTYPE=CASE WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE=<str>THEN<str>WHEN R.WAIT_TYPE=<str>AND R.TASK_STATE!=<str>THEN<str>ELSE R.WAIT_TYPE END)OR@WAITTYPE IS NULL)OPTION(RECOMPILE);CREATE INDEX IDX1 ON#WAITING_TASKS(COLLECTION_TIME_ID,SESSION_ID)SELECT TOP 10 CONVERT(DATETIME,SWITCHOFFSET(R1.COLLECTION_TIME,<str>))AS COLLECTION_TIME,CONVERT(VARCHAR(30),CONVERT(DATETIME,SWITCHOFFSET(R1.COLLECTION_TIME,<str>)),126)AS COLLECTION_TIME_STR,R1.SNAPSHOT_ID,R1.ROW_ID,R1.SESSION_ID,R1.REQUEST_ID,R1.EXEC_CONTEXT_ID,R1.WAIT_RESOURCE,R1.SOURCE_ID,R1.CATEGORY_NAME,R1.WAIT_TYPE,R1.WAIT_DURATION_MS,R1.DATABASE_NAME,R1.PROGRAM_NAME,R1.SQL_HANDLE,R1.STATEMENT_START_OFFSET,R1.STATEMENT_END_OFFSET,R1.PLAN_HANDLE FROM#WAITING_TASKS AS R1 LEFT OUTER JOIN#WAITING_TASKS AS R2 ON R2.COLLECTION_TIME_ID=R1.COLLECTION_TIME_ID+1 AND R2.SESSION_ID=R1.SESSION_ID AND R2.REQUEST_ID=R1.REQUEST_ID AND R2.EXEC_CONTEXT_ID=R1.EXEC_CONTEXT_ID AND R2.LOGIN_TIME=R1.LOGIN_TIME WHERE(R2.SESSION_ID IS NULL OR R2.WAIT_DURATION_MS<(DATEDIFF(SECOND,R1.COLLECTION_TIME,R2.COLLECTION_TIME)*1000))AND NOT EXISTS(SELECT*FROM#WAITING_TASKS AS R3 WHERE R3.COLLECTION_TIME_ID=R1.COLLECTION_TIME_ID AND R3.WAIT_DURATION_MS>R1.WAIT_DURATION_MS OR(R3.WAIT_DURATION_MS=R1.WAIT_DURATION_MS AND R3.ROW_ID>R1.ROW_ID))ORDER BY R1.WAIT_DURATION_MS DESC END GO
DataCollector	[snapshots].[rpt_server_activity]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,SERIES	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_SERVER_ACTIVITY@INSTANCE_NAME SYSNAME,@START_TIME DATETIME=NULL,@END_TIME DATETIME=NULL,@TIME_WINDOW_SIZE SMALLINT=NULL,@TIME_INTERVAL_MIN SMALLINT=NULL AS BEGIN SET NOCOUNT ON;IF(@END_TIME IS NULL)SET@END_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));IF(@START_TIME IS NULL)BEGIN IF@TIME_WINDOW_SIZE IS NOT NULL AND@TIME_INTERVAL_MIN IS NOT NULL BEGIN SET@START_TIME=DATEADD(MINUTE,@TIME_WINDOW_SIZE*@TIME_INTERVAL_MIN*-1.0,@END_TIME);END ELSE BEGIN SET@START_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MIN(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));END END DECLARE@END_SNAPSHOT_TIME_ID INT;SELECT@END_SNAPSHOT_TIME_ID=MAX(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME<=@END_TIME;DECLARE@START_SNAPSHOT_TIME_ID INT;SELECT@START_SNAPSHOT_TIME_ID=MIN(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME>=@START_TIME;SELECT SUBSTRING(PC.PATH,CHARINDEX(N<str>,PC.PATH,2)+1,LEN(PC.PATH)-CHARINDEX(N<str>,PC.PATH,2))AS SERIES,S.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(S.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID BETWEEN@START_SNAPSHOT_TIME_ID AND@END_SNAPSHOT_TIME_ID AND(PC.PERFORMANCE_OBJECT_NAME LIKE<str>OR PC.PERFORMANCE_OBJECT_NAME LIKE<str>)AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>,<str>,<str>,<str>,<str>,<str>)ORDER BY PC.COLLECTION_TIME,SERIES OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)END;GO
DataCollector	[snapshots].[rpt_sql_memory_counters_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_SQL_MEMORY_COUNTERS_ONE_SNAPSHOT@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT PC.PERFORMANCE_COUNTER_NAME AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND PC.PERFORMANCE_OBJECT_NAME LIKE<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME END;GO
DataCollector	[snapshots].[rpt_sql_process_and_system_memory]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY COLL.LAST_COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_SQL_PROCESS_AND_SYSTEM_MEMORY@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT AS BEGIN SET NOCOUNT ON;CREATE TABLE#INTERVALS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,FIRST_COLLECTION_TIME DATETIMEOFFSET(7),LAST_COLLECTION_TIME DATETIMEOFFSET(7),FIRST_SNAPSHOT_ID INT,LAST_SNAPSHOT_ID INT,SOURCE_ID INT,SNAPSHOT_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),COLLECTION_TIME_ID INT)INSERT INTO#INTERVALS EXEC SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME,@ENDTIME,@WINDOWSIZE,<str>,<str>,40,0 DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(FIRST_SNAPSHOT_ID)FROM#INTERVALS SELECT@END_SNAPSHOT_ID=MAX(LAST_SNAPSHOT_ID)FROM#INTERVALS SELECT COLL.INTERVAL_TIME_ID,COLL.INTERVAL_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(COLL.LAST_COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(COLL.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(COLL.INTERVAL_END_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END_TIME,COLL.LAST_SNAPSHOT_ID,AVG(SQL_PHYSICAL_MEMORY_IN_USE_KB)AS AVG_SQL_PHYSICAL_MEMORY_IN_USE_KB,MAX(SQL_PHYSICAL_MEMORY_IN_USE_KB)AS MAX_SQL_PHYSICAL_MEMORY_IN_USE_KB,MIN(SQL_PHYSICAL_MEMORY_IN_USE_KB)AS MIN_SQL_PHYSICAL_MEMORY_IN_USE_KB,AVG(SQL_TOTAL_VIRTUAL_ADDRESS_SPACE_KB)AS AVG_SQL_TOTAL_VIRTUAL_ADDRESS_SPACE_KB,AVG(SQL_VIRTUAL_ADDRESS_SPACE_RESERVED_KB)AS AVG_SQL_VIRTUAL_ADDRESS_SPACE_RESERVED_KB,AVG(SQL_VIRTUAL_ADDRESS_SPACE_COMMITTED_KB)AS AVG_SQL_VIRTUAL_ADDRESS_SPACE_COMMITTED_KB,AVG(SQL_VIRTUAL_ADDRESS_SPACE_AVAILABLE_KB)AS AVG_SQL_VIRTUAL_ADDRESS_SPACE_AVAILABLE_KB,MAX(SQL_VIRTUAL_ADDRESS_SPACE_AVAILABLE_KB)AS MAX_SQL_VIRTUAL_ADDRESS_SPACE_AVAILABLE_KB,MIN(SQL_VIRTUAL_ADDRESS_SPACE_AVAILABLE_KB)AS MIN_SQL_VIRTUAL_ADDRESS_SPACE_AVAILABLE_KB,AVG(SQL_MEMORY_UTILIZATION_PERCENTAGE)AS AVG_SQL_MEMORY_UTILIZATION_PERCENTAGE,MIN(SQL_MEMORY_UTILIZATION_PERCENTAGE)AS MIN_SQL_MEMORY_UTILIZATION_PERCENTAGE,AVG(SQL_AVAILABLE_COMMIT_LIMIT_KB)AS AVG_SQL_AVAILABLE_COMMIT_LIMIT_KB,MIN(SQL_AVAILABLE_COMMIT_LIMIT_KB)AS MIN_SQL_AVAILABLE_COMMIT_LIMIT_KB,AVG(SQL_LARGE_PAGE_ALLOCATIONS_KB)AS AVG_SQL_LARGE_PAGE_ALLOCATIONS_KB,AVG(SQL_LOCKED_PAGE_ALLOCATIONS_KB)AS AVG_SQL_LOCKED_PAGE_ALLOCATIONS_KB,SUM(CAST(SQL_PROCESS_PHYSICAL_MEMORY_LOW AS INT))AS SQL_PROCESS_PHYSICAL_MEMORY_LOW_COUNT,SUM(CAST(SQL_PROCESS_VIRTUAL_MEMORY_LOW AS INT))AS SQL_PROCESS_VIRTUAL_MEMORY_LOW_COUNT,MAX(SQL_PAGE_FAULT_COUNT)-MIN(SQL_PAGE_FAULT_COUNT)AS INTERVAL_SQL_PAGE_FAULT_COUNT,AVG(SYSTEM_TOTAL_PHYSICAL_MEMORY_KB)AS SYSTEM_TOTAL_PHYSICAL_MEMORY_KB,AVG(SYSTEM_AVAILABLE_PHYSICAL_MEMORY_KB)AS AVG_SYSTEM_AVAILABLE_PHYSICAL_MEMORY_KB,MAX(SYSTEM_AVAILABLE_PHYSICAL_MEMORY_KB)AS MAX_SYSTEM_AVAILABLE_PHYSICAL_MEMORY_KB,MIN(SYSTEM_AVAILABLE_PHYSICAL_MEMORY_KB)AS MIN_SYSTEM_AVAILABLE_PHYSICAL_MEMORY_KB,AVG(SYSTEM_TOTAL_PAGE_FILE_KB)AS AVG_SYSTEM_TOTAL_PAGE_FILE_KB,AVG(SYSTEM_AVAILABLE_PAGE_FILE_KB)AS AVG_SYSTEM_AVAILABLE_PAGE_FILE_KB,MIN(SYSTEM_AVAILABLE_PAGE_FILE_KB)AS MIN_SYSTEM_AVAILABLE_PAGE_FILE_KB,AVG(SYSTEM_CACHE_KB)AS AVG_SYSTEM_CACHE_KB,AVG(SYSTEM_KERNEL_PAGED_POOL_KB)AS AVG_SYSTEM_KERNEL_PAGED_POOL_KB,AVG(SYSTEM_KERNEL_NONPAGED_POOL_KB)AS AVG_SYSTEM_KERNEL_NONPAGED_POOL_KB,SUM(CAST(SYSTEM_HIGH_MEMORY_SIGNAL_STATE AS INT))AS SYSTEM_HIGH_MEMORY_SIGNAL_STATE_COUNT,SUM(CAST(SYSTEM_LOW_MEMORY_SIGNAL_STATE AS INT))AS SYSTEM_LOW_MEMORY_SIGNAL_STATE_COUNT,AVG(BPOOL_COMMIT_TARGET)AS AVG_BPOOL_COMMIT_TARGET,MAX(BPOOL_COMMIT_TARGET)AS MAX_BPOOL_COMMIT_TARGET,MIN(BPOOL_COMMIT_TARGET)AS MIN_BPOOL_COMMIT_TARGET,AVG(BPOOL_COMMITTED)AS AVG_BPOOL_COMMITTED,MAX(BPOOL_COMMITTED)AS MAX_BPOOL_COMMITTED,MIN(BPOOL_COMMITTED)AS MIN_BPOOL_COMMITTED,AVG(BPOOL_VISIBLE)AS AVG_BPOOL_VISIBLE,MAX(BPOOL_VISIBLE)AS MAX_BPOOL_VISIBLE,MIN(BPOOL_VISIBLE)AS MIN_BPOOL_VISIBLE FROM SNAPSHOTS.SQL_PROCESS_AND_SYSTEM_MEMORY AS PM INNER JOIN#INTERVALS AS COLL ON COLL.LAST_SNAPSHOT_ID=PM.SNAPSHOT_ID AND COLL.LAST_COLLECTION_TIME=PM.COLLECTION_TIME GROUP BY COLL.INTERVAL_START_TIME,COLL.INTERVAL_END_TIME,COLL.INTERVAL_TIME_ID,COLL.LAST_COLLECTION_TIME,COLL.INTERVAL_ID,COLL.LAST_SNAPSHOT_ID ORDER BY COLL.LAST_COLLECTION_TIME ASC;END GO
DataCollector	[snapshots].[rpt_tempdb]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_TEMPDB@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT AS BEGIN SET NOCOUNT ON;SELECT PC.PERFORMANCE_COUNTER_NAME AS SERIES,CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,PC.FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS PC INNER JOIN CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@INSTANCE_NAME AND S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID AND(PC.PERFORMANCE_OBJECT_NAME LIKE<str>OR PC.PERFORMANCE_OBJECT_NAME LIKE<str>)AND PC.PERFORMANCE_COUNTER_NAME IN(<str>,<str>)ORDER BY PC.COLLECTION_TIME,PC.PERFORMANCE_COUNTER_NAME END;GO
DataCollector	[snapshots].[rpt_wait_stats]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_WAIT_STATS@SERVERNAME SYSNAME,@ENDTIME DATETIME=NULL,@WINDOWSIZE INT,@CATEGORYNAME NVARCHAR(20)=NULL,@WAITTYPE NVARCHAR(45)=NULL AS BEGIN SET NOCOUNT ON;IF@CATEGORYNAME=<str>SET@CATEGORYNAME=NULL IF@WAITTYPE=<str>SET@WAITTYPE=NULL CREATE TABLE#INTERVALS(INTERVAL_TIME_ID INT,INTERVAL_START_TIME DATETIMEOFFSET(7),INTERVAL_END_TIME DATETIMEOFFSET(7),INTERVAL_ID INT,FIRST_COLLECTION_TIME DATETIMEOFFSET(7),LAST_COLLECTION_TIME DATETIMEOFFSET(7),FIRST_SNAPSHOT_ID INT,LAST_SNAPSHOT_ID INT,SOURCE_ID INT,SNAPSHOT_ID INT,COLLECTION_TIME DATETIMEOFFSET(7),COLLECTION_TIME_ID INT)INSERT INTO#INTERVALS EXEC SNAPSHOTS.RPT_INTERVAL_COLLECTION_TIMES@SERVERNAME,@ENDTIME,@WINDOWSIZE,<str>,<str>,40,0 DECLARE@START_SNAPSHOT_ID INT;DECLARE@END_SNAPSHOT_ID INT;SELECT@START_SNAPSHOT_ID=MIN(FIRST_SNAPSHOT_ID)FROM#INTERVALS SELECT@END_SNAPSHOT_ID=MAX(LAST_SNAPSHOT_ID)FROM#INTERVALS SELECT COLL.INTERVAL_TIME_ID,COLL.INTERVAL_ID,LAST_COLLECTION_TIME AS COLLECTION_TIME,COLL.INTERVAL_START_TIME,COLL.INTERVAL_END_TIME,COLL.LAST_SNAPSHOT_ID,WT.CATEGORY_NAME,WS.WAIT_TYPE,WS.WAITING_TASKS_COUNT,ISNULL(WS.SIGNAL_WAIT_TIME_MS,0)AS SIGNAL_WAIT_TIME_MS,ISNULL(WS.WAIT_TIME_MS,0)-ISNULL(WS.SIGNAL_WAIT_TIME_MS,0)AS WAIT_TIME_MS,WAIT_TIME_MS AS RAW_WAIT_TIME_MS,ISNULL(WS.WAIT_TIME_MS,0)AS WAIT_TIME_MS_CUMULATIVE INTO#WAIT_STATS FROM SNAPSHOTS.OS_WAIT_STATS AS WS INNER JOIN#INTERVALS AS COLL ON COLL.LAST_SNAPSHOT_ID=WS.SNAPSHOT_ID AND COLL.LAST_COLLECTION_TIME=WS.COLLECTION_TIME INNER JOIN CORE.WAIT_TYPES_CATEGORIZED AS WT ON WT.WAIT_TYPE=WS.WAIT_TYPE WHERE WT.CATEGORY_NAME=ISNULL(@CATEGORYNAME,WT.CATEGORY_NAME)AND WT.WAIT_TYPE=ISNULL(@WAITTYPE,WT.WAIT_TYPE)AND WT.IGNORE!=1 SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,W2.CATEGORY_NAME,W2.WAIT_TYPE,CASE WHEN(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)<0 THEN W2.WAITING_TASKS_COUNT ELSE(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)END AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(W2.RAW_WAIT_TIME_MS-W1.RAW_WAIT_TIME_MS)<0 THEN W2.WAIT_TIME_MS ELSE(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)END AS RESOURCE_WAIT_TIME_DELTA,CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM#WAIT_STATS AS W1 INNER JOIN#WAIT_STATS AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.INTERVAL_ID=W2.INTERVAL_ID-1 UNION ALL SELECT MAX(CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>)))AS COLLECTION_TIME,MIN(CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>)))AS INTERVAL_START,MAX(CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>)))AS INTERVAL_END,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,SUM(CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL AS WAIT_TIME_MS_CUMULATIVE FROM#WAIT_STATS AS W1 INNER JOIN#WAIT_STATS AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.INTERVAL_ID=W2.INTERVAL_ID-1 WHERE(@CATEGORYNAME IS NULL OR@CATEGORYNAME=<str>)GROUP BY W1.INTERVAL_START_TIME,W2.INTERVAL_START_TIME,W1.INTERVAL_END_TIME,W2.INTERVAL_END_TIME,W1.COLLECTION_TIME,W2.COLLECTION_TIME UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.INTERVAL_START_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)*10*(SELECT TOP 1 FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON PC.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>AND PC.COLLECTION_TIME<=W2.COLLECTION_TIME AND S.INSTANCE_NAME=@SERVERNAME AND S.COLLECTION_SET_UID=<str>AND S.SNAPSHOT_ID BETWEEN@START_SNAPSHOT_ID AND@END_SNAPSHOT_ID ORDER BY PC.COLLECTION_TIME DESC)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL AS WAIT_TIME_MS_CUMULATIVE FROM#WAIT_STATS AS W1 INNER JOIN#WAIT_STATS AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.INTERVAL_ID=W2.INTERVAL_ID-1 WHERE(@CATEGORYNAME IS NULL OR@CATEGORYNAME=<str>)GROUP BY W1.INTERVAL_START_TIME,W2.INTERVAL_START_TIME,W1.INTERVAL_END_TIME,W2.INTERVAL_END_TIME,W1.COLLECTION_TIME,W2.COLLECTION_TIME ORDER BY CATEGORY_NAME,COLLECTION_TIME,WAIT_TYPE OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390);END GO
DataCollector	[snapshots].[rpt_wait_stats_by_category_by_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY WS.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_WAIT_STATS_BY_CATEGORY_BY_SNAPSHOT@INSTANCE_NAME SYSNAME,@START_TIME DATETIME=NULL,@END_TIME DATETIME=NULL,@TIME_WINDOW_SIZE SMALLINT=NULL,@TIME_INTERVAL_MIN SMALLINT=NULL,@CATEGORY_NAME NVARCHAR(20)=NULL AS BEGIN SET NOCOUNT ON;IF(@END_TIME IS NULL)SET@END_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));IF(@START_TIME IS NULL)BEGIN IF@TIME_WINDOW_SIZE IS NOT NULL AND@TIME_INTERVAL_MIN IS NOT NULL BEGIN SET@START_TIME=DATEADD(MINUTE,@TIME_WINDOW_SIZE*@TIME_INTERVAL_MIN*-1.0,@END_TIME);END ELSE BEGIN SET@START_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MIN(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));END END DECLARE@END_SNAPSHOT_TIME_ID INT;SELECT@END_SNAPSHOT_TIME_ID=MAX(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME<=@END_TIME;DECLARE@START_SNAPSHOT_TIME_ID INT;SELECT@START_SNAPSHOT_TIME_ID=MIN(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME>=@START_TIME;DECLARE@GROUP_INTERVAL_MIN INT IF DATEDIFF(MINUTE,@START_TIME,@END_TIME)>60 BEGIN SET@GROUP_INTERVAL_MIN=15 END ELSE BEGIN SET@GROUP_INTERVAL_MIN=5 END;WITH WAIT_TIMES AS(SELECT S.SNAPSHOT_ID,S.SNAPSHOT_TIME_ID,S.SNAPSHOT_TIME,DENSE_RANK()OVER(ORDER BY WS.COLLECTION_TIME)AS RANK,WS.COLLECTION_TIME,WT.CATEGORY_NAME,WS.WAIT_TYPE,WS.WAITING_TASKS_COUNT,ISNULL(WS.SIGNAL_WAIT_TIME_MS,0)AS SIGNAL_WAIT_TIME_MS,ISNULL(WS.WAIT_TIME_MS,0)-ISNULL(WS.SIGNAL_WAIT_TIME_MS,0)AS WAIT_TIME_MS,ISNULL(WS.WAIT_TIME_MS,0)AS WAIT_TIME_MS_CUMULATIVE FROM SNAPSHOTS.OS_WAIT_STATS AS WS INNER JOIN CORE.WAIT_TYPES_CATEGORIZED WT ON WT.WAIT_TYPE=WS.WAIT_TYPE INNER JOIN CORE.SNAPSHOTS S ON WS.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE S.SNAPSHOT_TIME_ID BETWEEN@START_SNAPSHOT_TIME_ID AND@END_SNAPSHOT_TIME_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND WT.CATEGORY_NAME=ISNULL(@CATEGORY_NAME,WT.CATEGORY_NAME)AND WT.IGNORE!=1 AND WS.COLLECTION_TIME IN(SELECT MAX(COLLECTION_TIME)FROM SNAPSHOTS.OS_WAIT_STATS WS2 WHERE WS2.COLLECTION_TIME BETWEEN@START_TIME AND@END_TIME GROUP BY DATEDIFF(MINUTE,<str>,WS2.COLLECTION_TIME)/@GROUP_INTERVAL_MIN))SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,W2.CATEGORY_NAME,W2.WAIT_TYPE,CASE WHEN(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)<0 THEN W2.WAITING_TASKS_COUNT ELSE(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)END AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)<0 THEN W2.WAIT_TIME_MS ELSE(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))<0 THEN SUM(W2.SIGNAL_WAIT_TIME_MS)ELSE(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,W2.WAIT_TIME_MS_CUMULATIVE UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,10*(SELECT TOP 1 FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON PC.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>AND S.SNAPSHOT_TIME_ID<=@END_SNAPSHOT_TIME_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND PC.SNAPSHOT_ID<W2.SNAPSHOT_ID ORDER BY PC.SNAPSHOT_ID DESC)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,W2.SNAPSHOT_ID ORDER BY COLLECTION_TIME,CATEGORY_NAME,WAIT_TYPE OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390);END GO
DataCollector	[snapshots].[rpt_wait_stats_by_category_by_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.SNAPSHOT_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_WAIT_STATS_BY_CATEGORY_BY_SNAPSHOT@INSTANCE_NAME SYSNAME,@START_TIME DATETIME=NULL,@END_TIME DATETIME=NULL,@TIME_WINDOW_SIZE SMALLINT=NULL,@TIME_INTERVAL_MIN SMALLINT=NULL,@CATEGORY_NAME NVARCHAR(20)=NULL AS BEGIN SET NOCOUNT ON;IF(@END_TIME IS NULL)SET@END_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MAX(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));IF(@START_TIME IS NULL)BEGIN IF@TIME_WINDOW_SIZE IS NOT NULL AND@TIME_INTERVAL_MIN IS NOT NULL BEGIN SET@START_TIME=DATEADD(MINUTE,@TIME_WINDOW_SIZE*@TIME_INTERVAL_MIN*-1.0,@END_TIME);END ELSE BEGIN SET@START_TIME=CONVERT(DATETIME,SWITCHOFFSET(CAST((SELECT MIN(SNAPSHOT_TIME)FROM CORE.SNAPSHOTS)AS DATETIMEOFFSET(7)),<str>));END END DECLARE@END_SNAPSHOT_TIME_ID INT;SELECT@END_SNAPSHOT_TIME_ID=MAX(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME<=@END_TIME;DECLARE@START_SNAPSHOT_TIME_ID INT;SELECT@START_SNAPSHOT_TIME_ID=MIN(SNAPSHOT_TIME_ID)FROM CORE.SNAPSHOTS WHERE SNAPSHOT_TIME>=@START_TIME;DECLARE@GROUP_INTERVAL_MIN INT IF DATEDIFF(MINUTE,@START_TIME,@END_TIME)>60 BEGIN SET@GROUP_INTERVAL_MIN=15 END ELSE BEGIN SET@GROUP_INTERVAL_MIN=5 END;WITH WAIT_TIMES AS(SELECT S.SNAPSHOT_ID,S.SNAPSHOT_TIME_ID,S.SNAPSHOT_TIME,DENSE_RANK()OVER(ORDER BY WS.COLLECTION_TIME)AS RANK,WS.COLLECTION_TIME,WT.CATEGORY_NAME,WS.WAIT_TYPE,WS.WAITING_TASKS_COUNT,ISNULL(WS.SIGNAL_WAIT_TIME_MS,0)AS SIGNAL_WAIT_TIME_MS,ISNULL(WS.WAIT_TIME_MS,0)-ISNULL(WS.SIGNAL_WAIT_TIME_MS,0)AS WAIT_TIME_MS,ISNULL(WS.WAIT_TIME_MS,0)AS WAIT_TIME_MS_CUMULATIVE FROM SNAPSHOTS.OS_WAIT_STATS AS WS INNER JOIN CORE.WAIT_TYPES_CATEGORIZED WT ON WT.WAIT_TYPE=WS.WAIT_TYPE INNER JOIN CORE.SNAPSHOTS S ON WS.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE S.SNAPSHOT_TIME_ID BETWEEN@START_SNAPSHOT_TIME_ID AND@END_SNAPSHOT_TIME_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND WT.CATEGORY_NAME=ISNULL(@CATEGORY_NAME,WT.CATEGORY_NAME)AND WT.IGNORE!=1 AND WS.COLLECTION_TIME IN(SELECT MAX(COLLECTION_TIME)FROM SNAPSHOTS.OS_WAIT_STATS WS2 WHERE WS2.COLLECTION_TIME BETWEEN@START_TIME AND@END_TIME GROUP BY DATEDIFF(MINUTE,<str>,WS2.COLLECTION_TIME)/@GROUP_INTERVAL_MIN))SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,W2.CATEGORY_NAME,W2.WAIT_TYPE,CASE WHEN(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)<0 THEN W2.WAITING_TASKS_COUNT ELSE(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)END AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)<0 THEN W2.WAIT_TIME_MS ELSE(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))<0 THEN SUM(W2.SIGNAL_WAIT_TIME_MS)ELSE(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,W2.WAIT_TIME_MS_CUMULATIVE UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.SNAPSHOT_TIME AS DATETIMEOFFSET(7)),<str>))AS SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,CONVERT(DATETIME,SWITCHOFFSET(CAST(W1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_START,CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS INTERVAL_END,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,10*(SELECT TOP 1 FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON PC.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>AND S.SNAPSHOT_TIME_ID<=@END_SNAPSHOT_TIME_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND PC.SNAPSHOT_ID<W2.SNAPSHOT_ID ORDER BY PC.SNAPSHOT_ID DESC)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_TIME,W2.SNAPSHOT_TIME_ID,W2.SNAPSHOT_ID ORDER BY COLLECTION_TIME,CATEGORY_NAME,WAIT_TYPE OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390);END GO
DataCollector	[snapshots].[rpt_wait_stats_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_TIME_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><strstr>))AS COLLECTION_TIME,W2.CATEGORY_NAME,W2.WAIT_TYPE,CASE WHEN(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)<0 THEN W2.WAITING_TASKS_COUNT ELSE(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)END AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)<0 THEN W2.WAIT_TIME_MS ELSE(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))<0 THEN SUM(W2.SIGNAL_WAIT_TIME_MS)ELSE(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.WAIT_TIME_MS_CUMULATIVE UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,10*(SELECT TOP 1 FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON PC.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>AND S.SNAPSHOT_ID<@CURRENT_SNAPSHOT_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND PC.SNAPSHOT_ID<W2.SNAPSHOT_ID ORDER BY PC.SNAPSHOT_ID DESC)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_ID ORDER BY COLLECTION_TIME,CATEGORY_NAME,WAIT_TYPE OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390);END;GO
DataCollector	[snapshots].[rpt_wait_stats_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_TIME_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><strstr>))AS COLLECTION_TIME,W2.CATEGORY_NAME,W2.WAIT_TYPE,CASE WHEN(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)<0 THEN W2.WAITING_TASKS_COUNT ELSE(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)END AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)<0 THEN W2.WAIT_TIME_MS ELSE(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))<0 THEN SUM(W2.SIGNAL_WAIT_TIME_MS)ELSE(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.WAIT_TIME_MS_CUMULATIVE UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,10*(SELECT TOP 1 FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON PC.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>AND S.SNAPSHOT_ID<@CURRENT_SNAPSHOT_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND PC.SNAPSHOT_ID<W2.SNAPSHOT_ID ORDER BY PC.SNAPSHOT_ID DESC)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_ID ORDER BY COLLECTION_TIME,CATEGORY_NAME,WAIT_TYPE OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390);END;GO
DataCollector	[snapshots].[rpt_wait_stats_one_snapshot]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.SNAPSHOT_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><strstr>))AS COLLECTION_TIME,W2.CATEGORY_NAME,W2.WAIT_TYPE,CASE WHEN(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)<0 THEN W2.WAITING_TASKS_COUNT ELSE(W2.WAITING_TASKS_COUNT-W1.WAITING_TASKS_COUNT)END AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)<0 THEN W2.WAIT_TIME_MS ELSE(W2.WAIT_TIME_MS-W1.WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,CASE WHEN(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)<0 THEN W2.SIGNAL_WAIT_TIME_MS ELSE(W2.SIGNAL_WAIT_TIME_MS-W1.SIGNAL_WAIT_TIME_MS)END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,CASE WHEN(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))<0 THEN SUM(W2.SIGNAL_WAIT_TIME_MS)ELSE(SUM(W2.SIGNAL_WAIT_TIME_MS)-SUM(W1.SIGNAL_WAIT_TIME_MS))END/CAST(DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,W2.WAIT_TIME_MS_CUMULATIVE FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.WAIT_TIME_MS_CUMULATIVE UNION ALL SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(W2.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,<str>AS CATEGORY_NAME,<str>AS WAIT_TYPE,0 AS WAITING_TASKS_COUNT_DELTA,10*(SELECT TOP 1 FORMATTED_VALUE FROM SNAPSHOTS.PERFORMANCE_COUNTERS AS PC INNER JOIN CORE.SNAPSHOTS S ON PC.SNAPSHOT_ID=S.SNAPSHOT_ID WHERE PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>AND S.SNAPSHOT_ID<@CURRENT_SNAPSHOT_ID AND S.INSTANCE_NAME=@INSTANCE_NAME AND PC.SNAPSHOT_ID<W2.SNAPSHOT_ID ORDER BY PC.SNAPSHOT_ID DESC)AS RESOURCE_WAIT_TIME_DELTA,0 AS RESOURCE_SIGNAL_TIME_DELTA,DATEDIFF(SECOND,W1.COLLECTION_TIME,W2.COLLECTION_TIME)AS INTERVAL_SEC,NULL FROM WAIT_TIMES AS W1 INNER JOIN WAIT_TIMES AS W2 ON W1.WAIT_TYPE=W2.WAIT_TYPE AND W1.RANK=W2.RANK-1 WHERE(@CATEGORY_NAME IS NULL OR@CATEGORY_NAME=<str>)GROUP BY W1.COLLECTION_TIME,W2.COLLECTION_TIME,W2.SNAPSHOT_ID ORDER BY COLLECTION_TIME,CATEGORY_NAME,WAIT_TYPE OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390);END;GO
DataCollector	[snapshots].[rpt_wait_stats_one_snapshot_one_category]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY WS1.COLLECTION_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SNAPSHOTS.RPT_WAIT_STATS_ONE_SNAPSHOT_ONE_CATEGORY@INSTANCE_NAME SYSNAME,@SNAPSHOT_TIME_ID INT,@CATEGORY_NAME NVARCHAR(20)AS BEGIN SET NOCOUNT ON;WITH WAIT_TIMES AS(SELECT DENSE_RANK()OVER(ORDER BY WS1.COLLECTION_TIME)AS RANK,S.SNAPSHOT_TIME_ID,WS1.COLLECTION_TIME,CT.CATEGORY_NAME,EV.WAIT_TYPE,WS1.WAITING_TASKS_COUNT,WS1.WAIT_TIME_MS-WS1.SIGNAL_WAIT_TIME_MS AS RESOURCE_WAIT_TIME_MS FROM CORE.SNAPSHOTS S JOIN SNAPSHOTS.OS_WAIT_STATS WS1 ON(WS1.SNAPSHOT_ID=S.SNAPSHOT_ID)JOIN CORE.WAIT_TYPES EV ON(EV.WAIT_TYPE=WS1.WAIT_TYPE)JOIN CORE.WAIT_CATEGORIES CT ON(CT.CATEGORY_ID=EV.CATEGORY_ID)WHERE CT.CATEGORY_NAME=@CATEGORY_NAME AND S.INSTANCE_NAME=@INSTANCE_NAME AND(S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID OR S.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID-1))SELECT CONVERT(DATETIME,SWITCHOFFSET(CAST(T1.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))AS COLLECTION_TIME,T1.WAIT_TYPE,(T1.WAITING_TASKS_COUNT-T2.WAITING_TASKS_COUNT)AS WAITING_TASKS_COUNT_DELTA,(T1.RESOURCE_WAIT_TIME_MS-ISNULL(T2.RESOURCE_WAIT_TIME_MS,0))/CAST(DATEDIFF(SECOND,T2.COLLECTION_TIME,T1.COLLECTION_TIME)AS DECIMAL)AS RESOURCE_WAIT_TIME_DELTA FROM WAIT_TIMES T1 LEFT OUTER JOIN WAIT_TIMES T2 ON(T2.RANK=T1.RANK-1 AND T2.WAIT_TYPE=T1.WAIT_TYPE)WHERE T1.SNAPSHOT_TIME_ID=@SNAPSHOT_TIME_ID ORDER BY COLLECTION_TIME,WAIT_TYPE END;GO
DataCollector	[sysutility_ucp_core].[sp_purge_cache_tables]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('SYSUTILITY_UCP_CORE.SP_PURGE_CACHE_TABLES')IS NULL EXEC('CREATE PROCEDURE SYSUTILITY_UCP_CORE.SP_PURGE_CACHE_TABLES AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE SYSUTILITY_UCP_CORE.SP_PURGE_CACHE_TABLES AS BEGIN DECLARE@ROWS_AFFECTED BIGINT;DECLARE@DELETE_BATCH_SIZE VARCHAR(30);SET@DELETE_BATCH_SIZE=500;SET@ROWS_AFFECTED=-1;DECLARE@DAYS_TO_RETAIN_MINUTE_DATA INT;DECLARE@DAYS_TO_RETAIN_HOUR_DATA INT;DECLARE@DAYS_TO_RETAIN_DAY_DATA INT;SELECT@DAYS_TO_RETAIN_MINUTE_DATA=CONVERT(INT,CURRENT_VALUE)FROM MSDB.DBO.SYSUTILITY_UCP_CONFIGURATION_INTERNAL WHERE NAME='MDWRETENTIONLENGTHINDAYSFORMINUTESHISTORY';SELECT@DAYS_TO_RETAIN_HOUR_DATA=CONVERT(INT,CURRENT_VALUE)FROM MSDB.DBO.SYSUTILITY_UCP_CONFIGURATION_INTERNAL WHERE NAME='MDWRETENTIONLENGTHINDAYSFORHOURSHISTORY';SELECT@DAYS_TO_RETAIN_DAY_DATA=CONVERT(INT,CURRENT_VALUE)FROM MSDB.DBO.SYSUTILITY_UCP_CONFIGURATION_INTERNAL WHERE NAME='MDWRETENTIONLENGTHINDAYSFORDAYSHISTORY';DECLARE@DATE_THRESHOLD_MINUTE_DATA DATETIMEOFFSET(7)=DATEADD(DAY,-@DAYS_TO_RETAIN_MINUTE_DATA,SYSDATETIMEOFFSET());DECLARE@DATE_THRESHOLD_HOUR_DATA DATETIMEOFFSET(7)=DATEADD(DAY,-@DAYS_TO_RETAIN_HOUR_DATA,SYSDATETIMEOFFSET());DECLARE@DATE_THRESHOLD_DAY_DATA DATETIMEOFFSET(7)=DATEADD(DAY,-@DAYS_TO_RETAIN_DAY_DATA,SYSDATETIMEOFFSET());DECLARE@SCHEMA SYSNAME DECLARE@NAME SYSNAME DECLARE@QUERY NVARCHAR(MAX)DECLARE DIMENSIONS_CURSOR CURSOR FOR SELECT OBJECT_SCHEMA,OBJECT_NAME FROM SYSUTILITY_UCP_MISC.UTILITY_OBJECTS_INTERNAL WHERE UTILITY_OBJECT_TYPE='DIMENSION';OPEN DIMENSIONS_CURSOR;FETCH NEXT FROM DIMENSIONS_CURSOR INTO@SCHEMA,@NAME;WHILE(@@FETCH_STATUS<>-1)BEGIN SET@ROWS_AFFECTED=-1;WHILE(@ROWS_AFFECTED!=0)BEGIN SET@QUERY='DELETE TOP('+@DELETE_BATCH_SIZE+')FROM'+QUOTENAME(@SCHEMA)+'.'+QUOTENAME(@NAME)+'WHERE PROCESSING_TIME<@DATE_THRESHOLD';EXEC SP_EXECUTESQL@QUERY,N'@DATE_THRESHOLD DATETIMEOFFSET(7)',@DATE_THRESHOLD=@DATE_THRESHOLD_MINUTE_DATA;SET@ROWS_AFFECTED=@@ROWCOUNT;END;FETCH NEXT FROM DIMENSIONS_CURSOR INTO@SCHEMA,@NAME;END;CLOSE DIMENSIONS_CURSOR;DEALLOCATE DIMENSIONS_CURSOR;DECLARE MEASURES_CURSOR CURSOR FOR SELECT OBJECT_SCHEMA,OBJECT_NAME FROM SYSUTILITY_UCP_MISC.UTILITY_OBJECTS_INTERNAL WHERE UTILITY_OBJECT_TYPE='MEASURE';OPEN MEASURES_CURSOR;FETCH NEXT FROM MEASURES_CURSOR INTO@SCHEMA,@NAME;WHILE(@@FETCH_STATUS<>-1)BEGIN SET@ROWS_AFFECTED=-1;WHILE(@ROWS_AFFECTED!=0)BEGIN SET@QUERY='DELETE TOP('+@DELETE_BATCH_SIZE+')FROM'+QUOTENAME(@SCHEMA)+'.'+QUOTENAME(@NAME)+'WHERE PROCESSING_TIME<@DATE_THRESHOLD AND AGGREGATION_TYPE=0';EXEC SP_EXECUTESQL@QUERY,N'@DATE_THRESHOLD DATETIMEOFFSET(7)',@DATE_THRESHOLD=@DATE_THRESHOLD_MINUTE_DATA;SET@ROWS_AFFECTED=@@ROWCOUNT;END;FETCH NEXT FROM MEASURES_CURSOR INTO@SCHEMA,@NAME;END;CLOSE MEASURES_CURSOR;OPEN MEASURES_CURSOR;FETCH NEXT FROM MEASURES_CURSOR INTO@SCHEMA,@NAME;WHILE(@@FETCH_STATUS<>-1)BEGIN SET@ROWS_AFFECTED=-1;WHILE(@ROWS_AFFECTED!=0)BEGIN SET@QUERY='DELETE TOP('+@DELETE_BATCH_SIZE+')FROM'+QUOTENAME(@SCHEMA)+'.'+QUOTENAME(@NAME)+'WHERE PROCESSING_TIME<@DATE_THRESHOLD AND AGGREGATION_TYPE=1';EXEC SP_EXECUTESQL@QUERY,N'@DATE_THRESHOLD DATETIMEOFFSET(7)',@DATE_THRESHOLD=@DATE_THRESHOLD_HOUR_DATA;SET@ROWS_AFFECTED=@@ROWCOUNT;END;FETCH NEXT FROM MEASURES_CURSOR INTO@SCHEMA,@NAME;END;CLOSE MEASURES_CURSOR;OPEN MEASURES_CURSOR;FETCH NEXT FROM MEASURES_CURSOR INTO@SCHEMA,@NAME;WHILE(@@FETCH_STATUS<>-1)BEGIN SET@ROWS_AFFECTED=-1;WHILE(@ROWS_AFFECTED!=0)BEGIN SET@QUERY='DELETE TOP('+@DELETE_BATCH_SIZE+')FROM'+QUOTENAME(@SCHEMA)+'.'+QUOTENAME(@NAME)+'WHERE PROCESSING_TIME<@DATE_THRESHOLD AND AGGREGATION_TYPE=2';EXEC SP_EXECUTESQL@QUERY,N'@DATE_THRESHOLD DATETIMEOFFSET(7)',@DATE_THRESHOLD=@DATE_THRESHOLD_DAY_DATA;SET@ROWS_AFFECTED=@@ROWCOUNT;END;FETCH NEXT FROM MEASURES_CURSOR INTO@SCHEMA,@NAME;END;CLOSE MEASURES_CURSOR;DEALLOCATE MEASURES_CURSOR;END;GO
DataCollector	[sysutility_ucp_staging].[sp_copy_live_table_data_into_cache_tables]	Warning	Execute	Using dynamic SQL	EXEC(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE SYSUTILITY_UCP_STAGING.SP_COPY_LIVE_TABLE_DATA_INTO_CACHE_TABLES AS BEGIN SET NOCOUNT ON;SET TRANSACTION ISOLATION LEVEL SNAPSHOT;DECLARE@MAX_SNAPSHOT_ID INT,@NUM_SNAPSHOTS_PARTITIONS INT SELECT@MAX_SNAPSHOT_ID=ISNULL(MAX(SNAPSHOT_ID),0)FROM CORE.SNAPSHOTS SELECT@NUM_SNAPSHOTS_PARTITIONS=COUNT(*)FROM MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL DECLARE@TASK_START_TIME DATETIME=GETUTCDATE();DECLARE@TASK_ELAPSED_MS INT;DECLARE@ROW_COUNT INT;IF(@NUM_SNAPSHOTS_PARTITIONS=0)BEGIN INSERT INTO MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL VALUES(2,0)INSERT INTO MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL VALUES(1,0)INSERT INTO MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL VALUES(0,0)END DECLARE@PROCESSING_TIME_CURRENT DATETIMEOFFSET(7)=SYSDATETIMEOFFSET();EXEC SYSUTILITY_UCP_STAGING.SP_GET_CONSISTENT_BATCHES SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.COMPUTERS_INTERNAL(VIRTUAL_SERVER_NAME,IS_CLUSTERED_SERVER,PHYSICAL_SERVER_NAME,NUM_PROCESSORS,CPU_NAME,CPU_CAPTION,CPU_FAMILY,CPU_ARCHITECTURE,CPU_MAX_CLOCK_SPEED,CPU_CLOCK_SPEED,L2_CACHE_SIZE,L3_CACHE_SIZE,PERCENT_TOTAL_CPU_UTILIZATION,BATCH_TIME,PROCESSING_TIME,URN,POWERSHELL_PATH)SELECT VIRTUAL_SERVER_NAME,IS_CLUSTERED_SERVER,PHYSICAL_SERVER_NAME,NUM_PROCESSORS,CPU_NAME,CPU_CAPTION,CPU_FAMILY,CPU_ARCHITECTURE,CPU_MAX_CLOCK_SPEED,CPU_CLOCK_SPEED,L2_CACHE_SIZE,L3_CACHE_SIZE,SERVER_PROCESSOR_USAGE,SWITCHOFFSET(BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,URN,POWERSHELL_PATH FROM SYSUTILITY_UCP_STAGING.LATEST_COMPUTER_CPU_MEMORY_CONFIGURATION SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.DACS_INTERNAL(SERVER_INSTANCE_NAME,DAC_NAME,PHYSICAL_SERVER_NAME,DAC_DEPLOY_DATE,DAC_DESCRIPTION,DAC_PERCENT_TOTAL_CPU_UTILIZATION,BATCH_TIME,PROCESSING_TIME,URN,POWERSHELL_PATH)SELECT SERVER_INSTANCE_NAME,DAC_NAME,PHYSICAL_SERVER_NAME,DAC_DEPLOY_DATE,DAC_DESCRIPTION,LATEST_CPU_PCT,SWITCHOFFSET(BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,URN,POWERSHELL_PATH FROM SYSUTILITY_UCP_STAGING.LATEST_DAC_CPU_UTILIZATION SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.VOLUMES_INTERNAL(VIRTUAL_SERVER_NAME,PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID,VOLUME_NAME,TOTAL_SPACE_AVAILABLE,FREE_SPACE,POWERSHELL_PATH,BATCH_TIME,PROCESSING_TIME)SELECT VIRTUAL_SERVER_NAME,PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID,VOLUME_NAME,TOTAL_SPACE_AVAILABLE,FREE_SPACE,POWERSHELL_PATH,SWITCHOFFSET(BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME FROM SYSUTILITY_UCP_STAGING.LATEST_VOLUMES SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.SMO_SERVERS_INTERNAL(URN,POWERSHELL_PATH,PROCESSING_TIME,BATCH_TIME,AUDITLEVEL,BACKUPDIRECTORY,BROWSERSERVICEACCOUNT,BROWSERSTARTMODE,BUILDCLRVERSIONSTRING,BUILDNUMBER,COLLATION,COLLATIONID,COMPARISONSTYLE,COMPUTERNAMEPHYSICALNETBIOS,DEFAULTFILE,DEFAULTLOG,EDITION,ENGINEEDITION,ERRORLOGPATH,FILESTREAMSHARENAME,INSTALLDATADIRECTORY,INSTALLSHAREDDIRECTORY,INSTANCENAME,ISCASESENSITIVE,ISCLUSTERED,ISFULLTEXTINSTALLED,ISSINGLEUSER,LANGUAGE,MAILPROFILE,MASTERDBLOGPATH,MASTERDBPATH,MAXPRECISION,NAME,NAMEDPIPESENABLED,NETNAME,NUMBEROFLOGFILES,OSVERSION,PERFMONMODE,PHYSICALMEMORY,PLATFORM,PROCESSORS,PROCESSORUSAGE,PRODUCT,PRODUCTLEVEL,RESOURCEVERSIONSTRING,ROOTDIRECTORY,SERVERTYPE,SERVICEACCOUNT,SERVICEINSTANCEID,SERVICENAME,SERVICESTARTMODE,SQLCHARSET,SQLCHARSETNAME,SQLDOMAINGROUP,SQLSORTORDER,SQLSORTORDERNAME,STATUS,TAPELOADWAITTIME,TCPENABLED,VERSIONMAJOR,VERSIONMINOR,VERSIONSTRING)SELECT URN,CONVERT(NVARCHAR(MAX),POWERSHELL_PATH)AS POWERSHELL_PATH,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,SWITCHOFFSET(BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,CONVERT(SMALLINT,AUDITLEVEL)AS AUDITLEVEL,CONVERT(NVARCHAR(260),BACKUPDIRECTORY)AS BACKUPDIRECTORY,CONVERT(NVARCHAR(128),BROWSERSERVICEACCOUNT)AS BROWSERSERVICEACCOUNT,CONVERT(SMALLINT,BROWSERSTARTMODE)AS BROWSERSTARTMODE,CONVERT(NVARCHAR(20),BUILDCLRVERSIONSTRING)AS BUILDCLRVERSIONSTRING,CONVERT(INT,BUILDNUMBER)AS BUILDNUMBER,CONVERT(NVARCHAR(128),COLLATION)AS COLLATION,CONVERT(INT,COLLATIONID)AS COLLATIONID,CONVERT(INT,COMPARISONSTYLE)AS COMPARISONSTYLE,CONVERT(NVARCHAR(128),COMPUTERNAMEPHYSICALNETBIOS)AS COMPUTERNAMEPHYSICALNETBIOS,CONVERT(NVARCHAR(260),DEFAULTFILE)AS DEFAULTFILE,CONVERT(NVARCHAR(260),DEFAULTLOG)AS DEFAULTLOG,CONVERT(NVARCHAR(64),EDITION)AS EDITION,CONVERT(SMALLINT,ENGINEEDITION)AS ENGINEEDITION,CONVERT(NVARCHAR(260),ERRORLOGPATH)AS ERRORLOGPATH,CONVERT(NVARCHAR(260),FILESTREAMSHARENAME)AS FILESTREAMSHARENAME,CONVERT(NVARCHAR(260),INSTALLDATADIRECTORY)AS INSTALLDATADIRECTORY,CONVERT(NVARCHAR(260),INSTALLSHAREDDIRECTORY)AS INSTALLSHAREDDIRECTORY,CONVERT(NVARCHAR(128),INSTANCENAME)AS INSTANCENAME,CONVERT(BIT,ISCASESENSITIVE)AS ISCASESENSITIVE,CONVERT(BIT,ISCLUSTERED)AS ISCLUSTERED,CONVERT(BIT,ISFULLTEXTINSTALLED)AS ISFULLTEXTINSTALLED,CONVERT(BIT,ISSINGLEUSER)AS ISSINGLEUSER,CONVERT(NVARCHAR(64),LANGUAGE)AS LANGUAGE,CONVERT(NVARCHAR(128),MAILPROFILE)AS MAILPROFILE,CONVERT(NVARCHAR(260),MASTERDBLOGPATH)AS MASTERDBLOGPATH,CONVERT(NVARCHAR(260),MASTERDBPATH)AS MASTERDBPATH,CONVERT(TINYINT,MAXPRECISION)AS MAXPRECISION,CONVERT(NVARCHAR(128),NAME)AS NAME,CONVERT(BIT,NAMEDPIPESENABLED)AS NAMEDPIPESENABLED,CONVERT(NVARCHAR(128),NETNAME)AS NETNAME,CONVERT(INT,NUMBEROFLOGFILES)AS NUMBEROFLOGFILES,CONVERT(NVARCHAR(32),OSVERSION)AS OSVERSION,CONVERT(SMALLINT,PERFMONMODE)AS PERFMONMODE,CONVERT(INT,PHYSICALMEMORY)AS PHYSICALMEMORY,CONVERT(NVARCHAR(32),PLATFORM)AS PLATFORM,CONVERT(SMALLINT,PROCESSORS)AS PROCESSORS,CONVERT(INT,PROCESSORUSAGE)AS PROCESSORUSAGE,CONVERT(NVARCHAR(48),PRODUCT)AS PRODUCT,CONVERT(NVARCHAR(32),PRODUCTLEVEL)AS PRODUCTLEVEL,CONVERT(NVARCHAR(32),RESOURCEVERSIONSTRING)AS RESOURCEVERSIONSTRING,CONVERT(NVARCHAR(260),ROOTDIRECTORY)AS ROOTDIRECTORY,CONVERT(SMALLINT,SERVERTYPE)AS SERVERTYPE,CONVERT(NVARCHAR(128),SERVICEACCOUNT)AS SERVICEACCOUNT,CONVERT(NVARCHAR(64),SERVICEINSTANCEID)AS SERVICEINSTANCEID,CONVERT(NVARCHAR(64),SERVICENAME)AS SERVICENAME,CONVERT(SMALLINT,SERVICESTARTMODE)AS SERVICESTARTMODE,CONVERT(SMALLINT,SQLCHARSET)AS SQLCHARSET,CONVERT(NVARCHAR(32),SQLCHARSETNAME)AS SQLCHARSETNAME,CONVERT(NVARCHAR(128),SQLDOMAINGROUP)AS SQLDOMAINGROUP,CONVERT(SMALLINT,SQLSORTORDER)AS SQLSORTORDER,CONVERT(NVARCHAR(64),SQLSORTORDERNAME)AS SQLSORTORDERNAME,CONVERT(SMALLINT,STATUS)AS STATUS,CONVERT(INT,TAPELOADWAITTIME)AS TAPELOADWAITTIME,CONVERT(BIT,TCPENABLED)AS TCPENABLED,CONVERT(INT,VERSIONMAJOR)AS VERSIONMAJOR,CONVERT(INT,VERSIONMINOR)AS VERSIONMINOR,CONVERT(NVARCHAR(32),VERSIONSTRING)AS VERSIONSTRING FROM(SELECT URN,PROPERTY_NAME,PROPERTY_VALUE,BATCH_TIME FROM SYSUTILITY_UCP_STAGING.LATEST_SMO_PROPERTIES WHERE OBJECT_TYPE=1)PROPS PIVOT(MAX(PROPERTY_VALUE)FOR PROPERTY_NAME IN(POWERSHELL_PATH,AUDITLEVEL,BACKUPDIRECTORY,BROWSERSERVICEACCOUNT,BROWSERSTARTMODE,BUILDCLRVERSIONSTRING,BUILDNUMBER,COLLATION,COLLATIONID,COMPARISONSTYLE,COMPUTERNAMEPHYSICALNETBIOS,DEFAULTFILE,DEFAULTLOG,EDITION,ENGINEEDITION,ERRORLOGPATH,FILESTREAMSHARENAME,INSTALLDATADIRECTORY,INSTALLSHAREDDIRECTORY,INSTANCENAME,ISCASESENSITIVE,ISCLUSTERED,ISFULLTEXTINSTALLED,ISSINGLEUSER,LANGUAGE,MAILPROFILE,MASTERDBLOGPATH,MASTERDBPATH,MAXPRECISION,NAME,NAMEDPIPESENABLED,NETNAME,NUMBEROFLOGFILES,OSVERSION,PERFMONMODE,PHYSICALMEMORY,PLATFORM,PROCESSORS,PROCESSORUSAGE,PRODUCT,PRODUCTLEVEL,RESOURCEVERSIONSTRING,ROOTDIRECTORY,SERVERTYPE,SERVICEACCOUNT,SERVICEINSTANCEID,SERVICENAME,SERVICESTARTMODE,SQLCHARSET,SQLCHARSETNAME,SQLDOMAINGROUP,SQLSORTORDER,SQLSORTORDERNAME,STATUS,TAPELOADWAITTIME,TCPENABLED,VERSIONMAJOR,VERSIONMINOR,VERSIONSTRING))AS PVT SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.DATABASES_INTERNAL(URN,POWERSHELL_PATH,PROCESSING_TIME,BATCH_TIME,SERVER_INSTANCE_NAME,PARENT_URN,COLLATION,COMPATIBILITYLEVEL,CREATEDATE,ENCRYPTIONENABLED,NAME,RECOVERYMODEL,TRUSTWORTHY,STATE)SELECT URN,CONVERT(NVARCHAR(MAX),POWERSHELL_PATH)AS POWERSHELL_PATH,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,SWITCHOFFSET(BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,SERVER_INSTANCE_NAME,LEFT(URN,CHARINDEX(<str>,URN,1)-1)AS PARENT_URN,CONVERT(NVARCHAR(128),COLLATION)AS COLLATION,CONVERT(SMALLINT,COMPATIBILITYLEVEL)AS COMPATIBILITYLEVEL,CONVERT(DATETIME,CREATEDATE,MSDB.FN_SYSUTILITY_GET_CULTURE_INVARIANT_CONVERSION_STYLE_INTERNAL(<str>))AS CREATEDATE,CONVERT(BIT,ENCRYPTIONENABLED)AS ENCRYPTIONENABLED,CONVERT(SYSNAME,NAME)AS NAME,CONVERT(SMALLINT,RECOVERYMODEL)AS RECOVERYMODEL,CONVERT(BIT,TRUSTWORTHY)AS TRUSTWORTHY,0 AS STATE FROM(SELECT URN,SERVER_INSTANCE_NAME,PROPERTY_NAME,PROPERTY_VALUE,BATCH_TIME FROM SYSUTILITY_UCP_STAGING.LATEST_SMO_PROPERTIES WHERE OBJECT_TYPE=2)PROPS PIVOT(MAX(PROPERTY_VALUE)FOR PROPERTY_NAME IN(POWERSHELL_PATH,ID,COLLATION,COMPATIBILITYLEVEL,CREATEDATE,ENCRYPTIONENABLED,NAME,RECOVERYMODEL,TRUSTWORTHY))AS PVT SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.FILEGROUPS_INTERNAL(URN,POWERSHELL_PATH,PROCESSING_TIME,BATCH_TIME,SERVER_INSTANCE_NAME,DATABASE_NAME,PARENT_URN,NAME)SELECT URN,CONVERT(NVARCHAR(MAX),POWERSHELL_PATH)AS POWERSHELL_PATH,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,SWITCHOFFSET(BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,SERVER_INSTANCE_NAME,CONVERT(SYSNAME,PARENT_NAME)AS DATABASE_NAME,LEFT(URN,CHARINDEX(<str>,URN,1)-1)AS PARENT_URN,CONVERT(SYSNAME,NAME)AS NAME FROM(SELECT URN,SERVER_INSTANCE_NAME,PROPERTY_NAME,PROPERTY_VALUE,BATCH_TIME FROM SYSUTILITY_UCP_STAGING.LATEST_SMO_PROPERTIES WHERE OBJECT_TYPE=4)PROPS PIVOT(MAX(PROPERTY_VALUE)FOR PROPERTY_NAME IN(POWERSHELL_PATH,PARENT_NAME,ID,NAME))AS PVT SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.DATAFILES_INTERNAL(URN,POWERSHELL_PATH,PROCESSING_TIME,BATCH_TIME,SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME,PARENT_URN,GROWTH,GROWTHTYPE,MAXSIZE,NAME,SIZE,USEDSPACE,FILENAME,VOLUMEFREESPACE,VOLUME_NAME,VOLUME_DEVICE_ID,PHYSICAL_SERVER_NAME)SELECT URN,CONVERT(NVARCHAR(MAX),PVT.POWERSHELL_PATH)AS POWERSHELL_PATH,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,SWITCHOFFSET(PVT.BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,PVT.SERVER_INSTANCE_NAME,CONVERT(SYSNAME,GRANDPARENT_NAME)AS DATABASE_NAME,CONVERT(SYSNAME,PARENT_NAME)AS FILEGROUP_NAME,LEFT(URN,CHARINDEX(<str>,URN,1)-1)AS PARENT_URN,CONVERT(REAL,GROWTH)AS GROWTH,CONVERT(SMALLINT,GROWTHTYPE)AS GROWTHTYPE,CONVERT(REAL,MAXSIZE)AS MAXSIZE,CONVERT(SYSNAME,NAME)AS NAME,CONVERT(REAL,SIZE)AS SIZE,CONVERT(REAL,USEDSPACE)AS USEDSPACE,CONVERT(NVARCHAR(260),FILENAME)AS FILENAME,ISNULL(V.FREE_SPACE,0.0)*1024 AS VOLUMEFREESPACE,ISNULL(V.VOLUME_NAME,N<str>)AS VOLUME_NAME,V.VOLUME_DEVICE_ID AS VOLUME_DEVICE_ID,PVT.PHYSICAL_SERVER_NAME FROM(SELECT URN,PHYSICAL_SERVER_NAME,SERVER_INSTANCE_NAME,PROPERTY_NAME,PROPERTY_VALUE,BATCH_TIME FROM SYSUTILITY_UCP_STAGING.LATEST_SMO_PROPERTIES WHERE OBJECT_TYPE=5)PROPS PIVOT(MAX(PROPERTY_VALUE)FOR PROPERTY_NAME IN(POWERSHELL_PATH,PARENT_NAME,GRANDPARENT_NAME,ID,GROWTH,GROWTHTYPE,MAXSIZE,NAME,SIZE,USEDSPACE,FILENAME,VOLUME_DEVICE_ID))AS PVT LEFT OUTER JOIN SYSUTILITY_UCP_CORE.VOLUMES_INTERNAL V ON V.PHYSICAL_SERVER_NAME=PVT.PHYSICAL_SERVER_NAME AND CONVERT(SYSNAME,PVT.VOLUME_DEVICE_ID)=V.VOLUME_DEVICE_ID WHERE V.PROCESSING_TIME=@PROCESSING_TIME_CURRENT SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.LOGFILES_INTERNAL(URN,POWERSHELL_PATH,PROCESSING_TIME,BATCH_TIME,SERVER_INSTANCE_NAME,DATABASE_NAME,PARENT_URN,GROWTH,GROWTHTYPE,MAXSIZE,NAME,SIZE,USEDSPACE,FILENAME,VOLUMEFREESPACE,VOLUME_NAME,VOLUME_DEVICE_ID,PHYSICAL_SERVER_NAME)SELECT URN,CONVERT(NVARCHAR(MAX),PVT.POWERSHELL_PATH)AS POWERSHELL_PATH,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,SWITCHOFFSET(PVT.BATCH_TIME,DATENAME(TZOFFSET,SYSDATETIMEOFFSET()))AS BATCH_TIME,PVT.SERVER_INSTANCE_NAME,CONVERT(SYSNAME,PARENT_NAME)AS DATABASE_NAME,LEFT(URN,CHARINDEX(<str>,URN,1)-1)AS PARENT_URN,CONVERT(REAL,GROWTH)AS GROWTH,CONVERT(SMALLINT,GROWTHTYPE)AS GROWTHTYPE,CONVERT(REAL,MAXSIZE)AS MAXSIZE,CONVERT(SYSNAME,NAME)AS NAME,CONVERT(REAL,SIZE)AS SIZE,ISNULL(CONVERT(REAL,USEDSPACE),0.0)AS USEDSPACE,CONVERT(NVARCHAR(260),FILENAME)AS FILENAME,ISNULL(V.FREE_SPACE,0.0)*1024 AS VOLUMEFREESPACE,ISNULL(V.VOLUME_NAME,N<str>)AS VOLUME_NAME,V.VOLUME_DEVICE_ID AS VOLUME_DEVICE_ID,PVT.PHYSICAL_SERVER_NAME FROM(SELECT URN,PHYSICAL_SERVER_NAME,SERVER_INSTANCE_NAME,PROPERTY_NAME,PROPERTY_VALUE,BATCH_TIME FROM SYSUTILITY_UCP_STAGING.LATEST_SMO_PROPERTIES WHERE OBJECT_TYPE=3)PROPS PIVOT(MAX(PROPERTY_VALUE)FOR PROPERTY_NAME IN(POWERSHELL_PATH,PARENT_NAME,ID,GROWTH,GROWTHTYPE,MAXSIZE,NAME,SIZE,USEDSPACE,FILENAME,VOLUME_DEVICE_ID))AS PVT LEFT OUTER JOIN SYSUTILITY_UCP_CORE.VOLUMES_INTERNAL V ON V.PHYSICAL_SERVER_NAME=PVT.PHYSICAL_SERVER_NAME AND CONVERT(SYSNAME,PVT.VOLUME_DEVICE_ID)=V.VOLUME_DEVICE_ID WHERE V.PROCESSING_TIME=@PROCESSING_TIME_CURRENT SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();UPDATE SYSUTILITY_UCP_CORE.DATABASES_INTERNAL SET STATE=1 FROM SYSUTILITY_UCP_CORE.DATABASES_INTERNAL AS DB WHERE EXISTS(SELECT*FROM SYSUTILITY_UCP_CORE.LOGFILES_INTERNAL AS LF WHERE LF.SERVER_INSTANCE_NAME=DB.SERVER_INSTANCE_NAME AND LF.DATABASE_NAME=DB.NAME AND LF.SIZE=0 AND LF.PROCESSING_TIME=@PROCESSING_TIME_CURRENT)OR NOT EXISTS(SELECT*FROM SYSUTILITY_UCP_CORE.FILEGROUPS_INTERNAL AS FG WHERE FG.SERVER_INSTANCE_NAME=DB.SERVER_INSTANCE_NAME AND FG.DATABASE_NAME=DB.NAME AND FG.PROCESSING_TIME=@PROCESSING_TIME_CURRENT);SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.CPU_UTILIZATION_INTERNAL(AGGREGATION_TYPE,OBJECT_TYPE,PROCESSING_TIME,PHYSICAL_SERVER_NAME,SERVER_INSTANCE_NAME,DATABASE_NAME,PERCENT_TOTAL_CPU_UTILIZATION)SELECT 0,1,@PROCESSING_TIME_CURRENT,PHYSICAL_SERVER_NAME,N<str>,N<str>,PERCENT_TOTAL_CPU_UTILIZATION FROM SYSUTILITY_UCP_CORE.COMPUTERS_INTERNAL WHERE PROCESSING_TIME=@PROCESSING_TIME_CURRENT UNION ALL SELECT 0,3,@PROCESSING_TIME_CURRENT,N<str>,SERVER_INSTANCE_NAME,N<str>,INSTANCE_PROCESSOR_USAGE FROM SYSUTILITY_UCP_STAGING.LATEST_INSTANCE_CPU_UTILIZATION UNION ALL SELECT 0,4,@PROCESSING_TIME_CURRENT,N<str>,SERVER_INSTANCE_NAME,DAC_NAME,DAC_PERCENT_TOTAL_CPU_UTILIZATION FROM SYSUTILITY_UCP_CORE.DACS_INTERNAL WHERE PROCESSING_TIME=@PROCESSING_TIME_CURRENT SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);SET@TASK_START_TIME=GETUTCDATE();INSERT INTO SYSUTILITY_UCP_CORE.SPACE_UTILIZATION_INTERNAL(AGGREGATION_TYPE,OBJECT_TYPE,PROCESSING_TIME,VIRTUAL_SERVER_NAME,VOLUME_DEVICE_ID,SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME,DBFILE_NAME,TOTAL_SPACE_BYTES,ALLOCATED_SPACE_BYTES,USED_SPACE_BYTES,AVAILABLE_SPACE_BYTES)SELECT 0 AS AGGREGATION_TYPE,CASE WHEN GROUP_ID=0 AND FILEGROUP_NAME=N<str>THEN 7 WHEN GROUP_ID=0 THEN 6 WHEN GROUP_ID=1 THEN 5 WHEN GROUP_ID=3 THEN 4 WHEN GROUP_ID=7 THEN 3 ELSE NULL END AS OBJECT_TYPE,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,N<str>AS VIRTUAL_SERVER_NAME,N<str>AS VOLUME_DEVICE_ID,ISNULL(SERVER_INSTANCE_NAME,N<str>),ISNULL(DATABASE_NAME,N<str>),ISNULL(FILEGROUP_NAME,N<str>),ISNULL(DBFILE_NAME,N<str>),CASE WHEN GROUP_ID=0 THEN TOTAL_SPACE_KB*1024 ELSE NULL END,CASE WHEN GROUP_ID=0 THEN ALLOCATED_SPACE_KB*1024 ELSE NULL END,USED_SPACE_KB*1024,CASE WHEN GROUP_ID=0 THEN AVAILABLE_SPACE_KB*1024 ELSE NULL END FROM(SELECT SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME,DBFILE_NAME,SUM(MAXSIZE)AS TOTAL_SPACE_KB,SUM(SIZE)AS ALLOCATED_SPACE_KB,SUM(USEDSPACE)AS USED_SPACE_KB,SUM(AVAILABLE_SPACE)AS AVAILABLE_SPACE_KB,GROUPING_ID(SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME,DBFILE_NAME)AS GROUP_ID FROM(SELECT SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME,NAME AS DBFILE_NAME,MAXSIZE,SIZE,USEDSPACE,SYSUTILITY_UCP_MISC.FN_GET_MAX_SIZE_AVAILABLE(SIZE,MAXSIZE,GROWTH,GROWTHTYPE,VOLUMEFREESPACE)AS AVAILABLE_SPACE FROM SYSUTILITY_UCP_CORE.DATAFILES_INTERNAL WHERE PROCESSING_TIME=@PROCESSING_TIME_CURRENT UNION ALL SELECT SERVER_INSTANCE_NAME,DATABASE_NAME,N<str>AS FILEGROUP_NAME,NAME AS DBFILE_NAME,MAXSIZE,SIZE,USEDSPACE,SYSUTILITY_UCP_MISC.FN_GET_MAX_SIZE_AVAILABLE(SIZE,MAXSIZE,GROWTH,GROWTHTYPE,VOLUMEFREESPACE)AS AVAILABLE_SPACE FROM SYSUTILITY_UCP_CORE.LOGFILES_INTERNAL WHERE PROCESSING_TIME=@PROCESSING_TIME_CURRENT)AS DBFILES GROUP BY GROUPING SETS((SERVER_INSTANCE_NAME),(SERVER_INSTANCE_NAME,DATABASE_NAME),(SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME),(SERVER_INSTANCE_NAME,DATABASE_NAME,FILEGROUP_NAME,DBFILE_NAME)))AS INSTANCE_SPACE_UTILIZATIONS UNION ALL SELECT 0 AS AGGREGATION_TYPE,CASE WHEN GROUPING_ID(VIRTUAL_SERVER_NAME,VOLUME_DEVICE_ID)=3 THEN 0 WHEN GROUPING_ID(VIRTUAL_SERVER_NAME,VOLUME_DEVICE_ID)=1 THEN 1 WHEN GROUPING_ID(VIRTUAL_SERVER_NAME,VOLUME_DEVICE_ID)=0 THEN 2 ELSE NULL END AS OBJECT_TYPE,@PROCESSING_TIME_CURRENT AS PROCESSING_TIME,ISNULL(VIRTUAL_SERVER_NAME,N<str>),ISNULL(VOLUME_DEVICE_ID,N<str>)AS VOLUME_DEVICE_ID,N<str>AS SERVER_INSTANCE_NAME,N<str>AS DATABASE_NAME,N<str>AS FILEGROUP_NAME,N<str>AS DBFILE_NAME,SUM(TOTAL_SPACE_AVAILABLE)*1048576 AS TOTAL_SPACE_BYTES,SUM(TOTAL_SPACE_AVAILABLE)*1048576 AS ALLOCATED_SPACE_BYTES,SUM(TOTAL_SPACE_AVAILABLE-FREE_SPACE)*1048576 AS USED_SPACE_BYTES,SUM(FREE_SPACE)*1048576 AS AVAILABLE_SPACE_BYTES FROM SYSUTILITY_UCP_CORE.VOLUMES_INTERNAL WHERE PROCESSING_TIME=@PROCESSING_TIME_CURRENT GROUP BY GROUPING SETS((),(VIRTUAL_SERVER_NAME),(VIRTUAL_SERVER_NAME,VOLUME_DEVICE_ID))SET@ROW_COUNT=@@ROWCOUNT;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@ROW_COUNT,@TASK_ELAPSED_MS);UPDATE MSDB.DBO.SYSUTILITY_UCP_PROCESSING_STATE_INTERNAL SET LATEST_PROCESSING_TIME=@PROCESSING_TIME_CURRENT UPDATE MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL SET LATEST_CONSISTENT_SNAPSHOT_ID=(SELECT TOP 1 LATEST_CONSISTENT_SNAPSHOT_ID FROM MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL WHERE TIME_ID=1)WHERE TIME_ID=2 UPDATE MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL SET LATEST_CONSISTENT_SNAPSHOT_ID=(SELECT TOP 1 LATEST_CONSISTENT_SNAPSHOT_ID FROM MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL WHERE TIME_ID=0)WHERE TIME_ID=1 UPDATE MSDB.DBO.SYSUTILITY_UCP_SNAPSHOT_PARTITIONS_INTERNAL SET LATEST_CONSISTENT_SNAPSHOT_ID=@MAX_SNAPSHOT_ID WHERE TIME_ID=0 SET@TASK_START_TIME=GETUTCDATE();UPDATE STATISTICS MSDB.DBO.SYSUTILITY_UCP_PROCESSING_STATE_INTERNAL;DECLARE@SCHEMA SYSNAME DECLARE@NAME SYSNAME DECLARE@QUERY NVARCHAR(MAX)DECLARE CACHE_TABLES CURSOR FOR SELECT OBJECT_SCHEMA,OBJECT_NAME FROM SYSUTILITY_UCP_MISC.UTILITY_OBJECTS_INTERNAL WHERE UTILITY_OBJECT_TYPE IN(<str>,<str>);OPEN CACHE_TABLES;FETCH NEXT FROM CACHE_TABLES INTO@SCHEMA,@NAME;WHILE(@@FETCH_STATUS<>-1)BEGIN SET@QUERY=<str>+QUOTENAME(@SCHEMA)+<str>+QUOTENAME(@NAME);EXEC(@QUERY);FETCH NEXT FROM CACHE_TABLES INTO@SCHEMA,@NAME;END;CLOSE CACHE_TABLES;DEALLOCATE CACHE_TABLES;SET@TASK_ELAPSED_MS=DATEDIFF(MS,@TASK_START_TIME,GETUTCDATE());RAISERROR(<str>,0,1,@TASK_ELAPSED_MS);END GO
DataCollector	[sysutility_ucp_staging].[latest_computer_cpu_memory_configuration]	Warning	AbsolutePath	Hardcoded absolute path	:\	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('SYSUTILITY_UCP_STAGING.LATEST_COMPUTER_CPU_MEMORY_CONFIGURATION')IS NULL EXEC('CREATE VIEW SYSUTILITY_UCP_STAGING.LATEST_COMPUTER_CPU_MEMORY_CONFIGURATION AS/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/SELECT 0 C1')GO ALTER VIEW SYSUTILITY_UCP_STAGING.LATEST_COMPUTER_CPU_MEMORY_CONFIGURATION AS SELECT*FROM(SELECT ROW_NUMBER()OVER(PARTITION BY T.PHYSICAL_SERVER_NAME ORDER BY T.BATCH_TIME DESC)AS RANK,VIRTUAL_SERVER_NAME,IS_CLUSTERED_SERVER,PHYSICAL_SERVER_NAME,NUM_PROCESSORS,CPU_NAME,CPU_CAPTION,CPU_FAMILY,CPU_ARCHITECTURE,CPU_MAX_CLOCK_SPEED,CPU_CLOCK_SPEED,L2_CACHE_SIZE,L3_CACHE_SIZE,SERVER_PROCESSOR_USAGE,T.BATCH_TIME,N'UTILITY@NAME='''+CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))+N'''/COMPUTER@NAME='''+T.PHYSICAL_SERVER_NAME+N''''AS URN,N'SQLSERVER:\UTILITY\'+CASE WHEN 0=CHARINDEX(N'\',CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME')),1)THEN CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))+N'\DEFAULT'ELSE@@SERVERNAME END+N'\COMPUTERS\'+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(T.PHYSICAL_SERVER_NAME)AS POWERSHELL_PATH FROM SNAPSHOTS.SYSUTILITY_UCP_CPU_MEMORY_CONFIGURATIONS_INTERNAL AS T INNER JOIN SYSUTILITY_UCP_STAGING.CONSISTENT_BATCH_MANIFESTS_INTERNAL CB ON T.SERVER_INSTANCE_NAME=CB.SERVER_INSTANCE_NAME AND T.BATCH_TIME=CB.BATCH_TIME)AS S WHERE S.RANK=1 GO
DataCollector	[sysutility_ucp_staging].[latest_computer_cpu_memory_configuration]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T.BATCH_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER VIEW SYSUTILITY_UCP_STAGING.LATEST_COMPUTER_CPU_MEMORY_CONFIGURATION AS SELECT*FROM(SELECT ROW_NUMBER()OVER(PARTITION BY T.PHYSICAL_SERVER_NAME ORDER BY T.BATCH_TIME DESC)AS RANK,VIRTUAL_SERVER_NAME,IS_CLUSTERED_SERVER,PHYSICAL_SERVER_NAME,NUM_PROCESSORS,CPU_NAME,CPU_CAPTION,CPU_FAMILY,CPU_ARCHITECTURE,CPU_MAX_CLOCK_SPEED,CPU_CLOCK_SPEED,L2_CACHE_SIZE,L3_CACHE_SIZE,SERVER_PROCESSOR_USAGE,T.BATCH_TIME,N<str><str>+CONVERT(SYSNAME,SERVERPROPERTY(N<str>))+N<str><str><str>+T.PHYSICAL_SERVER_NAME+N<str><str>AS URN,N<str>+CASE WHEN 0=CHARINDEX(N<str>,CONVERT(SYSNAME,SERVERPROPERTY(N<str>)),1)THEN CONVERT(SYSNAME,SERVERPROPERTY(N<str>))+N<str>ELSE@@SERVERNAME END+N<str>+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(T.PHYSICAL_SERVER_NAME)AS POWERSHELL_PATH FROM SNAPSHOTS.SYSUTILITY_UCP_CPU_MEMORY_CONFIGURATIONS_INTERNAL AS T INNER JOIN SYSUTILITY_UCP_STAGING.CONSISTENT_BATCH_MANIFESTS_INTERNAL CB ON T.SERVER_INSTANCE_NAME=CB.SERVER_INSTANCE_NAME AND T.BATCH_TIME=CB.BATCH_TIME)AS S WHERE S.RANK=1 GO
DataCollector	[sysutility_ucp_staging].[latest_dac_cpu_utilization]	Warning	AbsolutePath	Hardcoded absolute path	:\	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('SYSUTILITY_UCP_STAGING.LATEST_DAC_CPU_UTILIZATION')IS NULL EXEC('CREATE VIEW SYSUTILITY_UCP_STAGING.LATEST_DAC_CPU_UTILIZATION AS/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/SELECT 0 C1')GO ALTER VIEW SYSUTILITY_UCP_STAGING.LATEST_DAC_CPU_UTILIZATION AS SELECT PHYSICAL_SERVER_NAME,DS.SERVER_INSTANCE_NAME,DAC_DB,DAC_DEPLOY_DATE,DAC_DESCRIPTION,DAC_NAME,LIFETIME_CPU_TIME_MS,INTERVAL_CPU_PCT AS LATEST_CPU_PCT,INTERVAL_CPU_TIME_MS AS LATEST_INTERVAL_CPU_TIME_MS,INTERVAL_START_TIME AS LATEST_INTERVAL_START_TIME,INTERVAL_END_TIME AS LATEST_INTERVAL_END_TIME,DS.BATCH_TIME,N'UTILITY@NAME='''+CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))+N'''/DEPLOYEDDAC@NAME='''+DS.DAC_NAME+N'''AND@SERVERINSTANCENAME='''+DS.SERVER_INSTANCE_NAME+N''''AS URN,N'SQLSERVER:\UTILITY\'+CASE WHEN 0=CHARINDEX(N'\',CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME')),1)THEN CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))+N'\DEFAULT'ELSE CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))END+N'\DEPLOYEDDACS\'+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(DS.DAC_NAME+'.'+DS.SERVER_INSTANCE_NAME)AS POWERSHELL_PATH FROM SNAPSHOTS.SYSUTILITY_UCP_DAC_COLLECTED_EXECUTION_STATISTICS_INTERNAL DS INNER JOIN SYSUTILITY_UCP_STAGING.CONSISTENT_BATCH_MANIFESTS_INTERNAL CB ON DS.SERVER_INSTANCE_NAME=CB.SERVER_INSTANCE_NAME AND DS.BATCH_TIME=CB.BATCH_TIME GO
DataCollector	[sysutility_ucp_staging].[latest_volumes]	Warning	AbsolutePath	Hardcoded absolute path	:\	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('SYSUTILITY_UCP_STAGING.LATEST_VOLUMES')IS NULL EXEC('CREATE VIEW SYSUTILITY_UCP_STAGING.LATEST_VOLUMES AS/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/SELECT 0 C1')GO ALTER VIEW SYSUTILITY_UCP_STAGING.LATEST_VOLUMES AS SELECT VIRTUAL_SERVER_NAME,PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID,VOLUME_NAME,TOTAL_SPACE_AVAILABLE,FREE_SPACE,N'SQLSERVER:\UTILITY\'+CASE WHEN 0=CHARINDEX(N'\',CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME')),1)THEN CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))+N'\DEFAULT'ELSE CONVERT(SYSNAME,SERVERPROPERTY(N'SERVERNAME'))END+N'\COMPUTERS\'+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(PHYSICAL_SERVER_NAME)+N'\VOLUMES\'+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(VOLUME_NAME)AS POWERSHELL_PATH,BATCH_TIME,SNAPSHOT_ID FROM(SELECT VIRTUAL_SERVER_NAME,PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID,VOLUME_NAME,TOTAL_SPACE_AVAILABLE,FREE_SPACE,V.BATCH_TIME,SNAPSHOT_ID,ROW_NUMBER()OVER(PARTITION BY PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID ORDER BY V.BATCH_TIME DESC)RK FROM SNAPSHOTS.SYSUTILITY_UCP_VOLUMES_INTERNAL AS V INNER JOIN SYSUTILITY_UCP_STAGING.CONSISTENT_BATCH_MANIFESTS_INTERNAL CB ON V.SERVER_INSTANCE_NAME=CB.SERVER_INSTANCE_NAME AND V.BATCH_TIME=CB.BATCH_TIME)AS T WHERE T.RK=1 GO
DataCollector	[sysutility_ucp_staging].[latest_volumes]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY V.BATCH_TIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER VIEW SYSUTILITY_UCP_STAGING.LATEST_VOLUMES AS SELECT VIRTUAL_SERVER_NAME,PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID,VOLUME_NAME,TOTAL_SPACE_AVAILABLE,FREE_SPACE,N<str>+CASE WHEN 0=CHARINDEX(N<str>,CONVERT(SYSNAME,SERVERPROPERTY(N<str>)),1)THEN CONVERT(SYSNAME,SERVERPROPERTY(N<str>))+N<str>ELSE CONVERT(SYSNAME,SERVERPROPERTY(N<str>))END+N<str>+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(PHYSICAL_SERVER_NAME)+N<str>+MSDB.FN_ENCODE_SQLNAME_FOR_POWERSHELL(VOLUME_NAME)AS POWERSHELL_PATH,BATCH_TIME,SNAPSHOT_ID FROM(SELECT VIRTUAL_SERVER_NAME,PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID,VOLUME_NAME,TOTAL_SPACE_AVAILABLE,FREE_SPACE,V.BATCH_TIME,SNAPSHOT_ID,ROW_NUMBER()OVER(PARTITION BY PHYSICAL_SERVER_NAME,VOLUME_DEVICE_ID ORDER BY V.BATCH_TIME DESC)RK FROM SNAPSHOTS.SYSUTILITY_UCP_VOLUMES_INTERNAL AS V INNER JOIN SYSUTILITY_UCP_STAGING.CONSISTENT_BATCH_MANIFESTS_INTERNAL CB ON V.SERVER_INSTANCE_NAME=CB.SERVER_INSTANCE_NAME AND V.BATCH_TIME=CB.BATCH_TIME)AS T WHERE T.RK=1 GO
ERP_V12	[dbo].[MAT004_19_01]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SD3.D3_EMISSAO,SD3.D3_NUMSEQ,SD3.D3_CHAVE,SD3.D3_COD,SD3.R_E_C_N_O_	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.MAT004_19_01(@IN_FILIALCOR CHAR(2),@IN_MV_NIVALT CHAR(01),@IN_MV_LOCPROC CHAR(2),@IN_MV_PAR1 CHAR(08),@IN_MV_PAR09 INTEGER,@IN_MV_PAR11 INTEGER,@IN_MV_PAR14 INTEGER,@IN_MV_CUSFIFO CHAR(01),@IN_MV_RASTRO CHAR(01),@IN_MV_LOCALIZ CHAR(01),@IN_MV_CQ CHAR(2),@IN_DINICIO CHAR(08),@IN_TAM_TRB_DOC INTEGER,@IN_COPCOES CHAR(04),@IN_CUSUNIF CHAR(01),@IN_MV_PRODPR0 INTEGER,@IN_DDATABASE CHAR(08),@IN_MV_NEGESTR CHAR(01),@IN_RECNOSMO INTEGER,@IN_MV_PAR18 INTEGER,@IN_CPAISLOC CHAR(03),@IN_FILSEQ INTEGER,@IN_MV_PRODMNT CHAR(15),@IN_MV_MOEDACM CHAR(5),@IN_MV_D3SERVI CHAR(01),@IN_INTDL CHAR(01),@IN_MV_CUSREP CHAR(01),@IN_MV_PAR15 INTEGER,@IN_USAFILTRF CHAR(01),@IN_SEQ500 CHAR(01),@IN_MVULMES CHAR(08),@IN_MV_WMSNEW CHAR(01),@IN_MV_PRODMOD CHAR(01),@IN_MV_SEQREBE CHAR(03),@IN_MV_330JCM1 CHAR(05),@IN_MV_PROCQE6 CHAR(01),@IN_FILIALPROC CHAR(2),@OUT_RESULTADO CHAR(01)OUTPUT)AS DECLARE@CFIL_AFN CHAR(2)DECLARE@CFIL_SD1 CHAR(2)DECLARE@CFIL_SD2 CHAR(2)DECLARE@CFIL_SD3 CHAR(2)DECLARE@CFIL_SF4 CHAR(2)DECLARE@CFIL_SG1 CHAR(2)DECLARE@CFIL_SB1 CHAR(2)DECLARE@CEXECUTOU CHAR(01)DECLARE@VCONTADOR INTEGER DECLARE@VRECNOD1 INTEGER DECLARE@VRECNOMNT INTEGER DECLARE@CF4_PODER3 CHAR(1)DECLARE@CF4_ESTOQUE CHAR(1)DECLARE@CD1_COD CHAR(15)DECLARE@CD1_TIPO CHAR(1)DECLARE@CD1_OP CHAR(13)DECLARE@CD1_NUMSEQ CHAR(6)DECLARE@CD1_LOCAL CHAR(2)DECLARE@CD1_DOC CHAR(9)DECLARE@CD1_SERIE CHAR(3)DECLARE@CD1_FORNECE CHAR(14)DECLARE@CD1_LOJA CHAR(4)DECLARE@CD1_ITEM CHAR(4)DECLARE@CD1_TIPODOC CHAR(2)DECLARE@VRECNOD2 INTEGER DECLARE@CD2_COD CHAR(15)DECLARE@CD2_LOCAL CHAR(2)DECLARE@CD2_TIPO CHAR(1)DECLARE@CD2_TIPODOC CHAR(2)DECLARE@VRECNOD3 INTEGER DECLARE@VRECNOD7 INTEGER DECLARE@CD3_COD CHAR(15)DECLARE@CD3_LOCAL CHAR(2)DECLARE@CD3_CF CHAR(3)DECLARE@CD3_NUMSEQ CHAR(6)DECLARE@CD3_DOC CHAR(9)DECLARE@CD3_ESTORNO CHAR(1)DECLARE@CD3_LOTECTL CHAR(10)DECLARE@CD3_NUMLOTE CHAR(6)DECLARE@CD3_PROJPMS CHAR(10)DECLARE@CD3_OP CHAR(14)DECLARE@CD3_IDENT CHAR(6)DECLARE@CD3_EMISSAO CHAR(8)DECLARE@CD3_CHAVE CHAR(2)DECLARE@NRECTRB INTEGER DECLARE@IRECCOUNT INTEGER DECLARE@MV_PAR14 INTEGER DECLARE@CMDIA CHAR(01)DECLARE@CAUX VARCHAR(3)DECLARE@CAUX1 VARCHAR(3)DECLARE@NAUX INTEGER DECLARE@NAPTMPMS INTEGER DECLARE@NAPTMPMSTMP INTEGER DECLARE@ITRA_RECNO INTEGER DECLARE@CTRANSF CHAR(01)DECLARE@NRECNOSD3 INTEGER DECLARE@CD3_STATUS VARCHAR(2)DECLARE@FIM_CUR INTEGER DECLARE@CMV_PAR1 CHAR(08)DECLARE@CDINICIO CHAR(08)DECLARE@CMV_PRODMNT CHAR(15)DECLARE@CFILIALCOR CHAR(2)DECLARE@CMV_CQ CHAR(2)DECLARE@CB1_CCCUSTO CHAR(9)DECLARE@NCONSD3 CHAR(01)BEGIN SET@CMV_PAR1=@IN_MV_PAR1 SET@CDINICIO=@IN_DINICIO SET@CMV_PRODMNT=@IN_MV_PRODMNT SET@CFILIALCOR=@IN_FILIALCOR SET@CMV_CQ=@IN_MV_CQ SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_AFN OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SD1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SD2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SD3 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SF4 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SG1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SB1 OUTPUT SET@OUT_RESULTADO=<str>SET@CEXECUTOU=<str>SET@VRECNOD3=0 SET@VRECNOD7=0 SET@CD3_ESTORNO=<str>SET@MV_PAR14=@IN_MV_PAR14 SET@CTRANSF=<str>SET@NAPTMPMS=0 SET@NAPTMPMSTMP=0 SET@CD3_STATUS=<str>SET@VRECNOD1=0 SET@CB1_CCCUSTO=<str>SET@NCONSD3=<str>SET@CAUX=<str>EXEC MAT007_19_01@CFILIALCOR,@CAUX,@CDINICIO,@IN_MV_LOCPROC,@IN_COPCOES,@IN_CUSUNIF,@IN_DDATABASE,@IN_MV_NEGESTR,@IN_MV_MOEDACM,@IN_MV_PAR1,@IN_MV_CUSFIFO,@CMV_PRODMNT,@IN_MV_D3SERVI,@IN_INTDL,@CMV_CQ,@IN_MVULMES,@IN_MV_WMSNEW,@IN_MV_PRODMOD,@CEXECUTOU OUTPUT DECLARE SD1_CURSOR INSENSITIVE CURSOR FOR SELECT SD1.R_E_C_N_O_,SF4.F4_PODER3,D1_COD,D1_TIPO,D1_OP,D1_NUMSEQ,D1_DOC,D1_SERIE,D1_FORNECE,D1_LOJA,D1_ITEM,D1_TIPODOC,D1_LOCAL,SF4.F4_ESTOQUE FROM SD1010 SD1,SF4010 SF4 WHERE SD1.D1_FILIAL=@CFIL_SD1 AND SF4.F4_FILIAL=@CFIL_SF4 AND SD1.D1_DTDIGIT>=@CDINICIO AND SD1.D1_DTDIGIT<=@CMV_PAR1 AND SD1.D1_TES=SF4.F4_CODIGO AND SF4.F4_ESTOQUE=<str>AND SD1.D1_ORIGLAN<><str>AND SD1.D1_REMITO=<str>AND SD1.D_E_L_E_T_=<str>AND SF4.D_E_L_E_T_=<str>FOR READ ONLY OPEN SD1_CURSOR FETCH SD1_CURSOR INTO@VRECNOD1,@CF4_PODER3,@CD1_COD,@CD1_TIPO,@CD1_OP,@CD1_NUMSEQ,@CD1_DOC,@CD1_SERIE,@CD1_FORNECE,@CD1_LOJA,@CD1_ITEM,@CD1_TIPODOC,@CD1_LOCAL,@CF4_ESTOQUE WHILE(@@FETCH_STATUS=0)BEGIN SET@NRECNOSD3=0 SET@CB1_CCCUSTO=<str>IF(@CD1_OP<><str>)AND(@CF4_ESTOQUE=<str>)AND(@CF4_PODER3 NOT IN(<str>,<str>))BEGIN SELECT@NRECNOSD3=COALESCE(R_E_C_N_O_,0)FROM SD3010 SD3 WHERE SD3.D3_FILIAL=@CFIL_SD3 AND(((@CMV_CQ=@CD1_LOCAL)AND(SD3.D3_IDENT=@CD1_NUMSEQ))OR((@CMV_CQ<>@CD1_LOCAL)AND(SD3.D3_NUMSEQ=@CD1_NUMSEQ)))AND SD3.D3_EMISSAO>=@CDINICIO AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_CF=<str>AND SD3.D3_COD=@CD1_COD AND SD3.D3_OP=@CD1_OP AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>END IF@NRECNOSD3 IS NULL BEGIN SET@NRECNOSD3=0 END IF(@CD1_TIPO<><str>)BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX=<str>EXEC MAT042_19_01@CFILIALCOR,@CAUX,@CMV_PAR1,@IN_MV_PAR14,@VRECNOD1,@CDINICIO,@CMDIA OUTPUT IF(@CMDIA=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@NRECNOSD3=0 BEGIN SET@CAUX=<str>SET@NAUX=0 IF(@CD1_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END ELSE BEGIN IF(@CD1_TIPO=<str>)BEGIN SET@CAUX=<str>EXEC MAT042_19_01@CFILIALCOR,@CAUX,@CMV_PAR1,@IN_MV_PAR14,@VRECNOD1,@CDINICIO,@CMDIA OUTPUT SET@CAUX=<str>SET@NAUX=0 IF(@CMDIA=<str>)BEGIN IF(@CD1_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN IF(@CD1_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END IF((@CD1_OP<><str>)OR(@NAPTMPMS>0))AND(@CF4_PODER3 NOT IN(<str>,<str>))BEGIN SELECT@NAPTMPMS=COALESCE(COUNT(*),0)FROM AFN010 AFN WHERE AFN_FILIAL=@CFIL_AFN AND AFN_DOC=@CD1_DOC AND AFN_SERIE=@CD1_SERIE AND AFN_FORNEC=@CD1_FORNECE AND AFN_LOJA=@CD1_LOJA AND AFN_ITEM=@CD1_ITEM AND AFN_ESTOQU<><str>AND D_E_L_E_T_=<str>SELECT@NRECTRB=MAX(R_E_C_N_O_)FROM TRB01SP WHERE TRB_FILIAL=@CFILIALCOR IF@NRECTRB IS NULL BEGIN SET@NRECTRB=0 END SET@NCONSD3=<str>DECLARE SD3_CURSOR01 INSENSITIVE CURSOR FOR SELECT SD3.R_E_C_N_O_,D3_COD,D3_NUMSEQ,D3_LOCAL,D3_LOTECTL,D3_NUMLOTE,D3_DOC,D3_ESTORNO,COALESCE(SB1.B1_CCCUSTO,<str>)FROM SD3010 SD3 LEFT JOIN SB1010 SB1 ON SB1.B1_FILIAL=@CFIL_SB1 AND SB1.B1_COD=SD3.D3_COD AND SB1.D_E_L_E_T_=<str>WHERE SD3.D3_FILIAL=@CFIL_SD3 AND(((SD3.D3_IDENT=@CD1_NUMSEQ))OR((@CMV_CQ<>@CD1_LOCAL)AND(SD3.D3_NUMSEQ=@CD1_NUMSEQ)))AND SD3.D3_EMISSAO>=@CDINICIO AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_CF=<str>AND SD3.D3_COD=@CD1_COD AND SD3.D3_OP=@CD1_OP AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>FOR READ ONLY OPEN SD3_CURSOR01 FETCH SD3_CURSOR01 INTO@VRECNOD3,@CD3_COD,@CD3_NUMSEQ,@CD3_LOCAL,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_DOC,@CD3_ESTORNO,@CB1_CCCUSTO WHILE(@@FETCH_STATUS=0)BEGIN IF(@VRECNOD3 IS NULL)BEGIN SET@VRECNOD3=0 END IF(@NCONSD3=<str>)BEGIN IF@CMV_CQ=@CD1_LOCAL BEGIN SET@NCONSD3=<str>END IF(@CD1_TIPO<><str>)BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX=<str>EXEC MAT042_19_01@CFILIALCOR,@CAUX,@CMV_PAR1,@IN_MV_PAR14,@VRECNOD1,@CDINICIO,@CMDIA OUTPUT IF(@CMDIA=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END BEGIN TRAN UPDATE TRB01SP WITH(ROWLOCK)SET TRB_RECSD1=@VRECNOD3 WHERE R_E_C_N_O_=@NRECTRB COMMIT TRAN END ELSE BEGIN IF(@CF4_PODER3<><str>)BEGIN IF(@NAPTMPMS>0)BEGIN SET@VCONTADOR=@NAPTMPMS WHILE((@VCONTADOR>0))BEGIN SET@CAUX1=<str>SET@CAUX=<str>SET@NRECTRB=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@VRECNOD3,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,<str>,@IN_FILIALPROC SELECT@NRECTRB=MAX(R_E_C_N_O_)FROM TRB01SP WHERE TRB_FILIAL=@CFILIALCOR IF@NRECTRB IS NULL BEGIN SET@NRECTRB=0 END SET@CAUX1=<str>SET@CAUX=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC SET@VCONTADOR=@VCONTADOR-1 END END ELSE BEGIN SET@CAUX1=<str>SET@CAUX=<str>SET@NAUX=0 SET@NRECTRB=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD1,@NAUX,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,<str>,@IN_FILIALPROC SELECT@NRECTRB=MAX(R_E_C_N_O_)FROM TRB01SP WHERE TRB_FILIAL=@CFILIALCOR IF@NRECTRB IS NULL BEGIN SET@NRECTRB=0 END SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END SET@FIM_CUR=0 FETCH SD3_CURSOR01 INTO@VRECNOD3,@CD3_COD,@CD3_NUMSEQ,@CD3_LOCAL,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_DOC,@CD3_ESTORNO,@CB1_CCCUSTO END CLOSE SD3_CURSOR01 DEALLOCATE SD3_CURSOR01 END SET@FIM_CUR=0 FETCH SD1_CURSOR INTO@VRECNOD1,@CF4_PODER3,@CD1_COD,@CD1_TIPO,@CD1_OP,@CD1_NUMSEQ,@CD1_DOC,@CD1_SERIE,@CD1_FORNECE,@CD1_LOJA,@CD1_ITEM,@CD1_TIPODOC,@CD1_LOCAL,@CF4_ESTOQUE END CLOSE SD1_CURSOR DEALLOCATE SD1_CURSOR SET@NAPTMPMSTMP=0 SET@CAUX=<str>DECLARE SD2_CURSOR INSENSITIVE CURSOR FOR SELECT SD2.R_E_C_N_O_,D2_COD,D2_LOCAL,D2_TIPO,F4_PODER3,D2_TIPODOC FROM SD2010 SD2,SF4010 SF4 WHERE SD2.D2_FILIAL=@CFIL_SD2 AND SF4.F4_FILIAL=@CFIL_SF4 AND SD2.D2_EMISSAO>=@CDINICIO AND SD2.D2_EMISSAO<=@CMV_PAR1 AND SD2.D2_TES=SF4.F4_CODIGO AND SD2.D2_ORIGLAN<><str>AND(SD2.D2_REMITO=<str>OR SD2.D2_REMITO<><str>AND SD2.D2_TPDCENV IN(<str>,<str>))AND SF4.F4_ESTOQUE=<str>AND SD2.D_E_L_E_T_=<str>AND SF4.D_E_L_E_T_=<str>FOR READ ONLY OPEN SD2_CURSOR FETCH SD2_CURSOR INTO@VRECNOD2,@CD2_COD,@CD2_LOCAL,@CD2_TIPO,@CF4_PODER3,@CD2_TIPODOC WHILE((@@FETCH_STATUS=0))BEGIN SET@CB1_CCCUSTO=<str>IF(@CD2_TIPO<><str>)BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX1=@IN_MV_SEQREBE EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD2_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END ELSE BEGIN IF(@CD2_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SELECT@VRECNOD1=COALESCE(SD1.R_E_C_N_O_,0),@CD1_LOCAL=SD1.D1_LOCAL FROM SD1010 SD1,SD2010 SD2 WHERE SD1.D1_FILIAL=@CFIL_SD1 AND SD2.D2_FILIAL=@CFIL_SD2 AND SD1.D1_DOC=SD2.D2_NFORI AND SD1.D1_SERIE=SD2.D2_SERIORI AND SD1.D1_FORNECE=SD2.D2_CLIENTE AND SD1.D1_LOJA=SD2.D2_LOJA AND SD1.D1_COD=SD2.D2_COD AND SD1.D1_ITEM=SD2.D2_ITEMORI AND SD2.R_E_C_N_O_=@VRECNOD2 AND SD1.D_E_L_E_T_=<str>AND SD2.D_E_L_E_T_=<str>IF@VRECNOD1=0 OR(@VRECNOD1>0 AND(@CD1_LOCAL=@CD2_LOCAL OR@CD1_LOCAL<>@CMV_CQ))BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@VRECNOD1>0 AND(@CD1_LOCAL<>@CD2_LOCAL AND@CD1_LOCAL=@CMV_CQ)BEGIN SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END SET@FIM_CUR=0 FETCH SD2_CURSOR INTO@VRECNOD2,@CD2_COD,@CD2_LOCAL,@CD2_TIPO,@CF4_PODER3,@CD2_TIPODOC END CLOSE SD2_CURSOR DEALLOCATE SD2_CURSOR SET@CF4_PODER3=<str>DECLARE SD3_CURSOR INSENSITIVE CURSOR FOR SELECT COALESCE(SD3.R_E_C_N_O_,0)R_E_C_N_O_,D3_COD,D3_LOCAL,D3_CF,D3_NUMSEQ,D3_DOC,D3_ESTORNO,D3_LOTECTL,D3_NUMLOTE,D3_PROJPMS,D3_OP,D3_IDENT,D3_EMISSAO,D3_CHAVE,COALESCE(SB1.B1_CCCUSTO,<str>)FROM SD3010 SD3 LEFT JOIN SB1010 SB1 ON SB1.B1_FILIAL=@CFIL_SB1 AND SB1.B1_COD=SD3.D3_COD AND SB1.D_E_L_E_T_=<str>WHERE SD3.D3_FILIAL=@CFIL_SD3 AND SD3.D3_EMISSAO>=@CDINICIO AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>ORDER BY SD3.D3_EMISSAO,SD3.D3_NUMSEQ,SD3.D3_CHAVE,SD3.D3_COD,SD3.R_E_C_N_O_ FOR READ ONLY OPEN SD3_CURSOR FETCH SD3_CURSOR INTO@VRECNOD3,@CD3_COD,@CD3_LOCAL,@CD3_CF,@CD3_NUMSEQ,@CD3_DOC,@CD3_ESTORNO,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_PROJPMS,@CD3_OP,@CD3_IDENT,@CD3_EMISSAO,@CD3_CHAVE,@CB1_CCCUSTO WHILE(@@FETCH_STATUS=0)BEGIN IF(@VRECNOD3 IS NULL)BEGIN SET@VRECNOD3=0 END IF(@CD3_CF IN(<str>,<str>))BEGIN SET@IRECCOUNT=0 SELECT@IRECCOUNT=COALESCE(R_E_C_N_O_,0)FROM TRB01SP WHERE TRB_RECNO=@VRECNOD3 AND TRB_ALIAS=<str>IF@IRECCOUNT IS NULL BEGIN SET@IRECCOUNT=0 END IF@IRECCOUNT=0 BEGIN IF@CD3_IDENT<><str>BEGIN SET@VRECNOD1=0 SELECT@VRECNOD1=COALESCE(R_E_C_N_O_,0)FROM SD1010 WHERE D1_FILIAL=@CFIL_SD1 AND D1_NUMSEQ=@CD3_IDENT AND D_E_L_E_T_=<str>END ELSE BEGIN SET@VRECNOD1=0 END IF@VRECNOD1=0 BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END ELSE BEGIN IF(@CD3_CF IN(<str>,<str>))BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@CD3_PROJPMS<><str>BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD3_CF=<str>)AND(@CD3_OP=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD3_CF=<str>OR@CD3_CF=<str>)AND@CD3_ESTORNO=<str>BEGIN SET@ITRA_RECNO=0 SELECT@ITRA_RECNO=COALESCE(MAX(R_E_C_N_O_),0)FROM TRA01SP WHERE TRA_FILIAL=@CFILIALCOR AND TRA_NUMSEQ=@CD3_NUMSEQ AND TRA_CF=@CD3_CF AND TRA_COD=@CD3_COD AND D_E_L_E_T_=<str>IF@ITRA_RECNO=0 BEGIN BEGIN TRAN INSERT INTO TRA01SP(TRA_FILIAL,TRA_NUMSEQ,TRA_CF,TRA_COD)VALUES(@CFILIALCOR,@CD3_NUMSEQ,@CD3_CF,@CD3_COD);COMMIT TRAN SET@CTRANSF=<str>END ELSE BEGIN SET@CTRANSF=<str>END SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD3_CF=<str>OR@CD3_CF=<str>)BEGIN SELECT@VRECNOD7=COALESCE(MAX(R_E_C_N_O_),0)FROM SD7010 WHERE D7_FILIAL=@CFILIALCOR AND D7_PRODUTO=@CD3_COD AND D7_NUMSEQ=@CD3_NUMSEQ AND D7_NUMERO=@CD3_DOC AND D7_ORIGLAN=<str>AND D_E_L_E_T_=<str>IF@CD3_LOCAL=@CMV_CQ AND@VRECNOD7>0 BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@VRECNOD7>0 BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@IN_MV_CUSREP=<str>BEGIN SELECT@CD3_STATUS=COALESCE(SD3.D3_STATUS,<str>)FROM SD3010 SD3 WHERE SD3.R_E_C_N_O_=@VRECNOD3 AND SD3.D_E_L_E_T_=<str>IF@CD3_STATUS=<str>BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN IF@IN_CPAISLOC=<str>BEGIN SELECT@CD3_STATUS=COALESCE(SD3.D3_STATUS,<str>)FROM SD3010 SD3 WHERE SD3.R_E_C_N_O_=@VRECNOD3 AND SD3.D_E_L_E_T_=<str>IF@CD3_STATUS=<str>BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END ELSE BEGIN IF(@CD3_CF=<str>OR@CD3_CF=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_01@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END END END SET@FIM_CUR=0 FETCH SD3_CURSOR INTO@VRECNOD3,@CD3_COD,@CD3_LOCAL,@CD3_CF,@CD3_NUMSEQ,@CD3_DOC,@CD3_ESTORNO,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_PROJPMS,@CD3_OP,@CD3_IDENT,@CD3_EMISSAO,@CD3_CHAVE,@CB1_CCCUSTO END CLOSE SD3_CURSOR DEALLOCATE SD3_CURSOR IF(@CMV_PRODMNT<><str>)BEGIN SELECT@VRECNOMNT=COALESCE(COUNT(*),0)FROM SB1010 WHERE B1_FILIAL=@CFIL_SB1 AND B1_COD=@CMV_PRODMNT AND D_E_L_E_T_=<str>IF@VRECNOMNT>0 BEGIN BEGIN TRAN DELETE FROM TRB01SP WHERE TRB_COD=@CMV_PRODMNT COMMIT TRAN END END SET@OUT_RESULTADO=<str>END GO
ERP_V12	[dbo].[MAT004_19_02]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SD3.D3_EMISSAO,SD3.D3_NUMSEQ,SD3.D3_CHAVE,SD3.D3_COD,SD3.R_E_C_N_O_	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.MAT004_19_02(@IN_FILIALCOR CHAR(2),@IN_MV_NIVALT CHAR(01),@IN_MV_LOCPROC CHAR(2),@IN_MV_PAR1 CHAR(08),@IN_MV_PAR09 INTEGER,@IN_MV_PAR11 INTEGER,@IN_MV_PAR14 INTEGER,@IN_MV_CUSFIFO CHAR(01),@IN_MV_RASTRO CHAR(01),@IN_MV_LOCALIZ CHAR(01),@IN_MV_CQ CHAR(2),@IN_DINICIO CHAR(08),@IN_TAM_TRB_DOC INTEGER,@IN_COPCOES CHAR(04),@IN_CUSUNIF CHAR(01),@IN_MV_PRODPR0 INTEGER,@IN_DDATABASE CHAR(08),@IN_MV_NEGESTR CHAR(01),@IN_RECNOSMO INTEGER,@IN_MV_PAR18 INTEGER,@IN_CPAISLOC CHAR(03),@IN_FILSEQ INTEGER,@IN_MV_PRODMNT CHAR(15),@IN_MV_MOEDACM CHAR(5),@IN_MV_D3SERVI CHAR(01),@IN_INTDL CHAR(01),@IN_MV_CUSREP CHAR(01),@IN_MV_PAR15 INTEGER,@IN_USAFILTRF CHAR(01),@IN_SEQ500 CHAR(01),@IN_MVULMES CHAR(08),@IN_MV_WMSNEW CHAR(01),@IN_MV_PRODMOD CHAR(01),@IN_MV_SEQREBE CHAR(03),@IN_MV_330JCM1 CHAR(05),@IN_MV_PROCQE6 CHAR(01),@IN_FILIALPROC CHAR(2),@OUT_RESULTADO CHAR(01)OUTPUT)AS DECLARE@CFIL_AFN CHAR(2)DECLARE@CFIL_SD1 CHAR(2)DECLARE@CFIL_SD2 CHAR(2)DECLARE@CFIL_SD3 CHAR(2)DECLARE@CFIL_SF4 CHAR(2)DECLARE@CFIL_SG1 CHAR(2)DECLARE@CFIL_SB1 CHAR(2)DECLARE@CEXECUTOU CHAR(01)DECLARE@VCONTADOR INTEGER DECLARE@VRECNOD1 INTEGER DECLARE@VRECNOMNT INTEGER DECLARE@CF4_PODER3 CHAR(1)DECLARE@CF4_ESTOQUE CHAR(1)DECLARE@CD1_COD CHAR(15)DECLARE@CD1_TIPO CHAR(1)DECLARE@CD1_OP CHAR(13)DECLARE@CD1_NUMSEQ CHAR(6)DECLARE@CD1_LOCAL CHAR(2)DECLARE@CD1_DOC CHAR(8)DECLARE@CD1_SERIE CHAR(3)DECLARE@CD1_FORNECE CHAR(14)DECLARE@CD1_LOJA CHAR(4)DECLARE@CD1_ITEM CHAR(4)DECLARE@CD1_TIPODOC CHAR(2)DECLARE@VRECNOD2 INTEGER DECLARE@CD2_COD CHAR(15)DECLARE@CD2_LOCAL CHAR(2)DECLARE@CD2_TIPO CHAR(1)DECLARE@CD2_TIPODOC CHAR(2)DECLARE@VRECNOD3 INTEGER DECLARE@VRECNOD7 INTEGER DECLARE@CD3_COD CHAR(15)DECLARE@CD3_LOCAL CHAR(2)DECLARE@CD3_CF CHAR(3)DECLARE@CD3_NUMSEQ CHAR(6)DECLARE@CD3_DOC CHAR(8)DECLARE@CD3_ESTORNO CHAR(1)DECLARE@CD3_LOTECTL CHAR(10)DECLARE@CD3_NUMLOTE CHAR(6)DECLARE@CD3_PROJPMS CHAR(10)DECLARE@CD3_OP CHAR(14)DECLARE@CD3_IDENT CHAR(6)DECLARE@CD3_EMISSAO CHAR(8)DECLARE@CD3_CHAVE CHAR(2)DECLARE@NRECTRB INTEGER DECLARE@IRECCOUNT INTEGER DECLARE@MV_PAR14 INTEGER DECLARE@CMDIA CHAR(01)DECLARE@CAUX VARCHAR(3)DECLARE@CAUX1 VARCHAR(3)DECLARE@NAUX INTEGER DECLARE@NAPTMPMS INTEGER DECLARE@NAPTMPMSTMP INTEGER DECLARE@ITRA_RECNO INTEGER DECLARE@CTRANSF CHAR(01)DECLARE@NRECNOSD3 INTEGER DECLARE@CD3_STATUS VARCHAR(2)DECLARE@FIM_CUR INTEGER DECLARE@CMV_PAR1 CHAR(08)DECLARE@CDINICIO CHAR(08)DECLARE@CMV_PRODMNT CHAR(15)DECLARE@CFILIALCOR CHAR(2)DECLARE@CMV_CQ CHAR(2)DECLARE@CB1_CCCUSTO CHAR(9)DECLARE@NCONSD3 CHAR(01)BEGIN SET@CMV_PAR1=@IN_MV_PAR1 SET@CDINICIO=@IN_DINICIO SET@CMV_PRODMNT=@IN_MV_PRODMNT SET@CFILIALCOR=@IN_FILIALCOR SET@CMV_CQ=@IN_MV_CQ SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_AFN OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SD1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SD2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SD3 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SF4 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SG1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SB1 OUTPUT SET@OUT_RESULTADO=<str>SET@CEXECUTOU=<str>SET@VRECNOD3=0 SET@VRECNOD7=0 SET@CD3_ESTORNO=<str>SET@MV_PAR14=@IN_MV_PAR14 SET@CTRANSF=<str>SET@NAPTMPMS=0 SET@NAPTMPMSTMP=0 SET@CD3_STATUS=<str>SET@VRECNOD1=0 SET@CB1_CCCUSTO=<str>SET@NCONSD3=<str>SET@CAUX=<str>EXEC MAT007_19_02@CFILIALCOR,@CAUX,@CDINICIO,@IN_MV_LOCPROC,@IN_COPCOES,@IN_CUSUNIF,@IN_DDATABASE,@IN_MV_NEGESTR,@IN_MV_MOEDACM,@IN_MV_PAR1,@IN_MV_CUSFIFO,@CMV_PRODMNT,@IN_MV_D3SERVI,@IN_INTDL,@CMV_CQ,@IN_MVULMES,@IN_MV_WMSNEW,@IN_MV_PRODMOD,@CEXECUTOU OUTPUT DECLARE SD1_CURSOR INSENSITIVE CURSOR FOR SELECT SD1.R_E_C_N_O_,SF4.F4_PODER3,D1_COD,D1_TIPO,D1_OP,D1_NUMSEQ,D1_DOC,D1_SERIE,D1_FORNECE,D1_LOJA,D1_ITEM,D1_TIPODOC,D1_LOCAL,SF4.F4_ESTOQUE FROM SD1030 SD1,SF4030 SF4 WHERE SD1.D1_FILIAL=@CFIL_SD1 AND SF4.F4_FILIAL=@CFIL_SF4 AND SD1.D1_DTDIGIT>=@CDINICIO AND SD1.D1_DTDIGIT<=@CMV_PAR1 AND SD1.D1_TES=SF4.F4_CODIGO AND SF4.F4_ESTOQUE=<str>AND SD1.D1_ORIGLAN<><str>AND SD1.D1_REMITO=<str>AND SD1.D_E_L_E_T_=<str>AND SF4.D_E_L_E_T_=<str>FOR READ ONLY OPEN SD1_CURSOR FETCH SD1_CURSOR INTO@VRECNOD1,@CF4_PODER3,@CD1_COD,@CD1_TIPO,@CD1_OP,@CD1_NUMSEQ,@CD1_DOC,@CD1_SERIE,@CD1_FORNECE,@CD1_LOJA,@CD1_ITEM,@CD1_TIPODOC,@CD1_LOCAL,@CF4_ESTOQUE WHILE(@@FETCH_STATUS=0)BEGIN SET@NRECNOSD3=0 SET@CB1_CCCUSTO=<str>IF(@CD1_OP<><str>)AND(@CF4_ESTOQUE=<str>)AND(@CF4_PODER3 NOT IN(<str>,<str>))BEGIN SELECT@NRECNOSD3=COALESCE(R_E_C_N_O_,0)FROM SD3030 SD3 WHERE SD3.D3_FILIAL=@CFIL_SD3 AND(((@CMV_CQ=@CD1_LOCAL)AND(SD3.D3_IDENT=@CD1_NUMSEQ))OR((@CMV_CQ<>@CD1_LOCAL)AND(SD3.D3_NUMSEQ=@CD1_NUMSEQ)))AND SD3.D3_EMISSAO>=@CDINICIO AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_CF=<str>AND SD3.D3_COD=@CD1_COD AND SD3.D3_OP=@CD1_OP AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>END IF@NRECNOSD3 IS NULL BEGIN SET@NRECNOSD3=0 END IF(@CD1_TIPO<><str>)BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX=<str>EXEC MAT042_19_02@CFILIALCOR,@CAUX,@CMV_PAR1,@IN_MV_PAR14,@VRECNOD1,@CDINICIO,@CMDIA OUTPUT IF(@CMDIA=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@NRECNOSD3=0 BEGIN SET@CAUX=<str>SET@NAUX=0 IF(@CD1_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END ELSE BEGIN IF(@CD1_TIPO=<str>)BEGIN SET@CAUX=<str>EXEC MAT042_19_02@CFILIALCOR,@CAUX,@CMV_PAR1,@IN_MV_PAR14,@VRECNOD1,@CDINICIO,@CMDIA OUTPUT SET@CAUX=<str>SET@NAUX=0 IF(@CMDIA=<str>)BEGIN IF(@CD1_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN IF(@CD1_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NRECNOSD3,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END IF((@CD1_OP<><str>)OR(@NAPTMPMS>0))AND(@CF4_PODER3 NOT IN(<str>,<str>))BEGIN SELECT@NAPTMPMS=COALESCE(COUNT(*),0)FROM AFN030 AFN WHERE AFN_FILIAL=@CFIL_AFN AND AFN_DOC=@CD1_DOC AND AFN_SERIE=@CD1_SERIE AND AFN_FORNEC=@CD1_FORNECE AND AFN_LOJA=@CD1_LOJA AND AFN_ITEM=@CD1_ITEM AND AFN_ESTOQU<><str>AND D_E_L_E_T_=<str>SELECT@NRECTRB=MAX(R_E_C_N_O_)FROM TRB02SP WHERE TRB_FILIAL=@CFILIALCOR IF@NRECTRB IS NULL BEGIN SET@NRECTRB=0 END SET@NCONSD3=<str>DECLARE SD3_CURSOR01 INSENSITIVE CURSOR FOR SELECT SD3.R_E_C_N_O_,D3_COD,D3_NUMSEQ,D3_LOCAL,D3_LOTECTL,D3_NUMLOTE,D3_DOC,D3_ESTORNO,COALESCE(SB1.B1_CCCUSTO,<str>)FROM SD3030 SD3 LEFT JOIN SB1030 SB1 ON SB1.B1_FILIAL=@CFIL_SB1 AND SB1.B1_COD=SD3.D3_COD AND SB1.D_E_L_E_T_=<str>WHERE SD3.D3_FILIAL=@CFIL_SD3 AND(((SD3.D3_IDENT=@CD1_NUMSEQ))OR((@CMV_CQ<>@CD1_LOCAL)AND(SD3.D3_NUMSEQ=@CD1_NUMSEQ)))AND SD3.D3_EMISSAO>=@CDINICIO AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_CF=<str>AND SD3.D3_COD=@CD1_COD AND SD3.D3_OP=@CD1_OP AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>FOR READ ONLY OPEN SD3_CURSOR01 FETCH SD3_CURSOR01 INTO@VRECNOD3,@CD3_COD,@CD3_NUMSEQ,@CD3_LOCAL,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_DOC,@CD3_ESTORNO,@CB1_CCCUSTO WHILE(@@FETCH_STATUS=0)BEGIN IF(@VRECNOD3 IS NULL)BEGIN SET@VRECNOD3=0 END IF(@NCONSD3=<str>)BEGIN IF@CMV_CQ=@CD1_LOCAL BEGIN SET@NCONSD3=<str>END IF(@CD1_TIPO<><str>)BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX=<str>EXEC MAT042_19_02@CFILIALCOR,@CAUX,@CMV_PAR1,@IN_MV_PAR14,@VRECNOD1,@CDINICIO,@CMDIA OUTPUT IF(@CMDIA=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END BEGIN TRAN UPDATE TRB02SP WITH(ROWLOCK)SET TRB_RECSD1=@VRECNOD3 WHERE R_E_C_N_O_=@NRECTRB COMMIT TRAN END ELSE BEGIN IF(@CF4_PODER3<><str>)BEGIN IF(@NAPTMPMS>0)BEGIN SET@VCONTADOR=@NAPTMPMS WHILE((@VCONTADOR>0))BEGIN SET@CAUX1=<str>SET@CAUX=<str>SET@NRECTRB=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@VRECNOD3,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,<str>,@IN_FILIALPROC SELECT@NRECTRB=MAX(R_E_C_N_O_)FROM TRB02SP WHERE TRB_FILIAL=@CFILIALCOR IF@NRECTRB IS NULL BEGIN SET@NRECTRB=0 END SET@CAUX1=<str>SET@CAUX=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC SET@VCONTADOR=@VCONTADOR-1 END END ELSE BEGIN SET@CAUX1=<str>SET@CAUX=<str>SET@NAUX=0 SET@NRECTRB=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD1,@NAUX,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,<str>,@IN_FILIALPROC SELECT@NRECTRB=MAX(R_E_C_N_O_)FROM TRB02SP WHERE TRB_FILIAL=@CFILIALCOR IF@NRECTRB IS NULL BEGIN SET@NRECTRB=0 END SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NRECTRB,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END SET@FIM_CUR=0 FETCH SD3_CURSOR01 INTO@VRECNOD3,@CD3_COD,@CD3_NUMSEQ,@CD3_LOCAL,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_DOC,@CD3_ESTORNO,@CB1_CCCUSTO END CLOSE SD3_CURSOR01 DEALLOCATE SD3_CURSOR01 END SET@FIM_CUR=0 FETCH SD1_CURSOR INTO@VRECNOD1,@CF4_PODER3,@CD1_COD,@CD1_TIPO,@CD1_OP,@CD1_NUMSEQ,@CD1_DOC,@CD1_SERIE,@CD1_FORNECE,@CD1_LOJA,@CD1_ITEM,@CD1_TIPODOC,@CD1_LOCAL,@CF4_ESTOQUE END CLOSE SD1_CURSOR DEALLOCATE SD1_CURSOR SET@NAPTMPMSTMP=0 SET@CAUX=<str>DECLARE SD2_CURSOR INSENSITIVE CURSOR FOR SELECT SD2.R_E_C_N_O_,D2_COD,D2_LOCAL,D2_TIPO,F4_PODER3,D2_TIPODOC FROM SD2030 SD2,SF4030 SF4 WHERE SD2.D2_FILIAL=@CFIL_SD2 AND SF4.F4_FILIAL=@CFIL_SF4 AND SD2.D2_EMISSAO>=@CDINICIO AND SD2.D2_EMISSAO<=@CMV_PAR1 AND SD2.D2_TES=SF4.F4_CODIGO AND SD2.D2_ORIGLAN<><str>AND(SD2.D2_REMITO=<str>OR SD2.D2_REMITO<><str>AND SD2.D2_TPDCENV IN(<str>,<str>))AND SF4.F4_ESTOQUE=<str>AND SD2.D_E_L_E_T_=<str>AND SF4.D_E_L_E_T_=<str>FOR READ ONLY OPEN SD2_CURSOR FETCH SD2_CURSOR INTO@VRECNOD2,@CD2_COD,@CD2_LOCAL,@CD2_TIPO,@CF4_PODER3,@CD2_TIPODOC WHILE((@@FETCH_STATUS=0))BEGIN SET@CB1_CCCUSTO=<str>IF(@CD2_TIPO<><str>)BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CF4_PODER3=<str>)BEGIN SET@CAUX1=@IN_MV_SEQREBE EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD2_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END ELSE BEGIN IF(@CD2_TIPODOC>=<str>)BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SELECT@VRECNOD1=COALESCE(SD1.R_E_C_N_O_,0),@CD1_LOCAL=SD1.D1_LOCAL FROM SD1030 SD1,SD2030 SD2 WHERE SD1.D1_FILIAL=@CFIL_SD1 AND SD2.D2_FILIAL=@CFIL_SD2 AND SD1.D1_DOC=SD2.D2_NFORI AND SD1.D1_SERIE=SD2.D2_SERIORI AND SD1.D1_FORNECE=SD2.D2_CLIENTE AND SD1.D1_LOJA=SD2.D2_LOJA AND SD1.D1_COD=SD2.D2_COD AND SD1.D1_ITEM=SD2.D2_ITEMORI AND SD2.R_E_C_N_O_=@VRECNOD2 AND SD1.D_E_L_E_T_=<str>AND SD2.D_E_L_E_T_=<str>IF@VRECNOD1=0 OR(@VRECNOD1>0 AND(@CD1_LOCAL=@CD2_LOCAL OR@CD1_LOCAL<>@CMV_CQ))BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@VRECNOD1>0 AND(@CD1_LOCAL<>@CD2_LOCAL AND@CD1_LOCAL=@CMV_CQ)BEGIN SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD2,@NAPTMPMSTMP,@NAPTMPMSTMP,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END SET@FIM_CUR=0 FETCH SD2_CURSOR INTO@VRECNOD2,@CD2_COD,@CD2_LOCAL,@CD2_TIPO,@CF4_PODER3,@CD2_TIPODOC END CLOSE SD2_CURSOR DEALLOCATE SD2_CURSOR SET@CF4_PODER3=<str>DECLARE SD3_CURSOR INSENSITIVE CURSOR FOR SELECT COALESCE(SD3.R_E_C_N_O_,0)R_E_C_N_O_,D3_COD,D3_LOCAL,D3_CF,D3_NUMSEQ,D3_DOC,D3_ESTORNO,D3_LOTECTL,D3_NUMLOTE,D3_PROJPMS,D3_OP,D3_IDENT,D3_EMISSAO,D3_CHAVE,COALESCE(SB1.B1_CCCUSTO,<str>)FROM SD3030 SD3 LEFT JOIN SB1030 SB1 ON SB1.B1_FILIAL=@CFIL_SB1 AND SB1.B1_COD=SD3.D3_COD AND SB1.D_E_L_E_T_=<str>WHERE SD3.D3_FILIAL=@CFIL_SD3 AND SD3.D3_EMISSAO>=@CDINICIO AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>ORDER BY SD3.D3_EMISSAO,SD3.D3_NUMSEQ,SD3.D3_CHAVE,SD3.D3_COD,SD3.R_E_C_N_O_ FOR READ ONLY OPEN SD3_CURSOR FETCH SD3_CURSOR INTO@VRECNOD3,@CD3_COD,@CD3_LOCAL,@CD3_CF,@CD3_NUMSEQ,@CD3_DOC,@CD3_ESTORNO,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_PROJPMS,@CD3_OP,@CD3_IDENT,@CD3_EMISSAO,@CD3_CHAVE,@CB1_CCCUSTO WHILE(@@FETCH_STATUS=0)BEGIN IF(@VRECNOD3 IS NULL)BEGIN SET@VRECNOD3=0 END IF(@CD3_CF IN(<str>,<str>))BEGIN SET@IRECCOUNT=0 SELECT@IRECCOUNT=COALESCE(R_E_C_N_O_,0)FROM TRB02SP WHERE TRB_RECNO=@VRECNOD3 AND TRB_ALIAS=<str>IF@IRECCOUNT IS NULL BEGIN SET@IRECCOUNT=0 END IF@IRECCOUNT=0 BEGIN IF@CD3_IDENT<><str>BEGIN SET@VRECNOD1=0 SELECT@VRECNOD1=COALESCE(R_E_C_N_O_,0)FROM SD1030 WHERE D1_FILIAL=@CFIL_SD1 AND D1_NUMSEQ=@CD3_IDENT AND D_E_L_E_T_=<str>END ELSE BEGIN SET@VRECNOD1=0 END IF@VRECNOD1=0 BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@VRECNOD1,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END ELSE BEGIN IF(@CD3_CF IN(<str>,<str>))BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@CD3_PROJPMS<><str>BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD3_CF=<str>)AND(@CD3_OP=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD3_CF=<str>OR@CD3_CF=<str>)AND@CD3_ESTORNO=<str>BEGIN SET@ITRA_RECNO=0 SELECT@ITRA_RECNO=COALESCE(MAX(R_E_C_N_O_),0)FROM TRA02SP WHERE TRA_FILIAL=@CFILIALCOR AND TRA_NUMSEQ=@CD3_NUMSEQ AND TRA_CF=@CD3_CF AND TRA_COD=@CD3_COD AND D_E_L_E_T_=<str>IF@ITRA_RECNO=0 BEGIN BEGIN TRAN INSERT INTO TRA02SP(TRA_FILIAL,TRA_NUMSEQ,TRA_CF,TRA_COD)VALUES(@CFILIALCOR,@CD3_NUMSEQ,@CD3_CF,@CD3_COD);COMMIT TRAN SET@CTRANSF=<str>END ELSE BEGIN SET@CTRANSF=<str>END SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF(@CD3_CF=<str>OR@CD3_CF=<str>)BEGIN SELECT@VRECNOD7=COALESCE(MAX(R_E_C_N_O_),0)FROM SD7030 WHERE D7_FILIAL=@CFILIALCOR AND D7_PRODUTO=@CD3_COD AND D7_NUMSEQ=@CD3_NUMSEQ AND D7_NUMERO=@CD3_DOC AND D7_ORIGLAN=<str>AND D_E_L_E_T_=<str>IF@CD3_LOCAL=@CMV_CQ AND@VRECNOD7>0 BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@VRECNOD7>0 BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN IF@IN_MV_CUSREP=<str>BEGIN SELECT@CD3_STATUS=COALESCE(SD3.D3_STATUS,<str>)FROM SD3030 SD3 WHERE SD3.R_E_C_N_O_=@VRECNOD3 AND SD3.D_E_L_E_T_=<str>IF@CD3_STATUS=<str>BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN IF@IN_CPAISLOC=<str>BEGIN SELECT@CD3_STATUS=COALESCE(SD3.D3_STATUS,<str>)FROM SD3030 SD3 WHERE SD3.R_E_C_N_O_=@VRECNOD3 AND SD3.D_E_L_E_T_=<str>IF@CD3_STATUS=<str>BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END ELSE BEGIN IF(@CD3_CF=<str>OR@CD3_CF=<str>)BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END ELSE BEGIN SET@CAUX=<str>SET@CAUX1=<str>SET@NAUX=0 EXEC MAT009_19_02@CAUX,@CAUX1,@VRECNOD3,@NAUX,@NAUX,@MV_PAR14,@CMV_PAR1,@IN_MV_PRODPR0,@CFILIALCOR,@IN_RECNOSMO,@CTRANSF,@IN_CPAISLOC,@IN_USAFILTRF,@IN_SEQ500,@IN_MV_PRODMOD,@CMV_CQ,@IN_MV_PAR11,@IN_MV_PAR18,@IN_MV_330JCM1,@IN_MV_PROCQE6,@CB1_CCCUSTO,@IN_FILIALPROC END END END END END END END SET@FIM_CUR=0 FETCH SD3_CURSOR INTO@VRECNOD3,@CD3_COD,@CD3_LOCAL,@CD3_CF,@CD3_NUMSEQ,@CD3_DOC,@CD3_ESTORNO,@CD3_LOTECTL,@CD3_NUMLOTE,@CD3_PROJPMS,@CD3_OP,@CD3_IDENT,@CD3_EMISSAO,@CD3_CHAVE,@CB1_CCCUSTO END CLOSE SD3_CURSOR DEALLOCATE SD3_CURSOR IF(@CMV_PRODMNT<><str>)BEGIN SELECT@VRECNOMNT=COALESCE(COUNT(*),0)FROM SB1030 WHERE B1_FILIAL=@CFIL_SB1 AND B1_COD=@CMV_PRODMNT AND D_E_L_E_T_=<str>IF@VRECNOMNT>0 BEGIN BEGIN TRAN DELETE FROM TRB02SP WHERE TRB_COD=@CMV_PRODMNT COMMIT TRAN END END SET@OUT_RESULTADO=<str>END GO
ERP_V12	[dbo].[MAT007_19_01]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SB2.B2_FILIAL,SB2.B2_COD,SB2.B2_LOCAL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.MAT007_19_01(@IN_FILIALCOR CHAR(2),@IN_CFILAUX CHAR(2),@IN_DINICIO CHAR(08),@IN_MV_LOCPROC CHAR(2),@IN_COPCOES CHAR(04),@IN_CUSUNIF CHAR(01),@IN_DDATABASE CHAR(08),@IN_MV_NEGESTR CHAR(01),@IN_MV_MOEDACM CHAR(05),@IN_MV_PAR1 CHAR(08),@IN_MV_CUSFIFO CHAR(01),@IN_MV_PRODMNT CHAR(15),@IN_MV_D3SERVI CHAR(01),@IN_INTDL CHAR(01),@IN_MV_CQ CHAR(2),@IN_MVULMES CHAR(08),@IN_MV_WMSNEW CHAR(2),@IN_MV_PRODMOD CHAR(01),@OUT_RESULTADO CHAR(01)OUTPUT)AS DECLARE@CCOD CHAR(15)DECLARE@CLOCAL CHAR(2)DECLARE@CLOCALORI CHAR(2)DECLARE@CFIL_SB2 CHAR(2)DECLARE@CFIL_SB1 CHAR(2)DECLARE@CFIL_SC2 CHAR(2)DECLARE@CFIL_SB9 CHAR(2)DECLARE@CFIL_SD1 CHAR(2)DECLARE@CFIL_SD2 CHAR(2)DECLARE@CFIL_SD3 CHAR(2)DECLARE@CFIL_SF4 CHAR(2)DECLARE@CCODORIMOD CHAR(15)DECLARE@CB1_CC CHAR(01)DECLARE@CFILAUX CHAR(2)DECLARE@CCUSFILAUX CHAR(2)DECLARE@CFILTRA CHAR(01)DECLARE@CEXECUTOU CHAR(01)DECLARE@CAUX VARCHAR(03)DECLARE@OUTRESULT VARCHAR(01)DECLARE@NSALDO01 DECIMAL(12,2)DECLARE@NSALDO02 DECIMAL(14,2)DECLARE@NSALDO03 DECIMAL(14,2)DECLARE@NSALDO04 DECIMAL(14,2)DECLARE@NSALDO05 DECIMAL(14,2)DECLARE@NSALDO06 DECIMAL(14,2)DECLARE@NSALDO07 DECIMAL(12,2)DECLARE@NVFIM01 FLOAT DECLARE@NVFIM02 FLOAT DECLARE@NVFIM03 FLOAT DECLARE@NVFIM04 FLOAT DECLARE@NVFIM05 FLOAT DECLARE@NQFIM01 FLOAT DECLARE@NQFIM02 FLOAT DECLARE@NQFIM03 FLOAT DECLARE@NQFIM04 FLOAT DECLARE@NQFIM05 FLOAT DECLARE@NTRB_QFIM FLOAT DECLARE@NQTD FLOAT DECLARE@NQSALDOATUFF FLOAT DECLARE@NCUSTOATUFF01 FLOAT DECLARE@NCUSTOATUFF02 FLOAT DECLARE@NCUSTOATUFF03 FLOAT DECLARE@NCUSTOATUFF04 FLOAT DECLARE@NCUSTOATUFF05 FLOAT DECLARE@NQT2UMFF FLOAT DECLARE@NB2_CM1 DECIMAL(14,4)DECLARE@NB2_CM2 DECIMAL(14,4)DECLARE@NB2_CM3 DECIMAL(14,4)DECLARE@NB2_CM4 DECIMAL(14,4)DECLARE@NB2_CM5 DECIMAL(14,4)DECLARE@NB9_CM1 DECIMAL(14,4)DECLARE@NB9_CM2 DECIMAL(14,4)DECLARE@NB9_CM3 DECIMAL(14,4)DECLARE@NB9_CM4 DECIMAL(14,4)DECLARE@NB9_CM5 DECIMAL(14,4)DECLARE@NB9_CMRP1 DECIMAL(14,4)DECLARE@NB9_CMRP2 DECIMAL(14,4)DECLARE@NB9_CMRP3 DECIMAL(14,4)DECLARE@NB9_CMRP4 DECIMAL(14,4)DECLARE@NB9_CMRP5 DECIMAL(14,4)DECLARE@NB9_VINIRP1 DECIMAL(14,2)DECLARE@NB9_VINIRP2 DECIMAL(14,2)DECLARE@NB9_VINIRP3 DECIMAL(14,2)DECLARE@NB9_VINIRP4 DECIMAL(14,2)DECLARE@NB9_VINIRP5 DECIMAL(14,2)DECLARE@NB2_QFIM DECIMAL(12,2)DECLARE@NB2_VFIM1 DECIMAL(14,2)DECLARE@NB2_VFIM2 DECIMAL(14,2)DECLARE@NB2_VFIM3 DECIMAL(14,2)DECLARE@NB2_VFIM4 DECIMAL(14,2)DECLARE@NB2_VFIM5 DECIMAL(14,2)DECLARE@NB2_QFIM2 DECIMAL(12,2)DECLARE@NB2_QFIMFF DECIMAL(12,2)DECLARE@NB2_CMFF1 DECIMAL(14,4)DECLARE@NB2_CMFF2 DECIMAL(14,4)DECLARE@NB2_CMFF3 DECIMAL(14,4)DECLARE@NB2_CMFF4 DECIMAL(14,4)DECLARE@NB2_CMFF5 DECIMAL(14,4)DECLARE@NB2_VFIMFF1 DECIMAL(14,2)DECLARE@NB2_VFIMFF2 DECIMAL(14,2)DECLARE@NB2_VFIMFF3 DECIMAL(14,2)DECLARE@NB2_VFIMFF4 DECIMAL(14,2)DECLARE@NB2_VFIMFF5 DECIMAL(14,2)DECLARE@NTRB_VFIM1 DECIMAL(14,2)DECLARE@NTRB_VFIM2 DECIMAL(14,2)DECLARE@NTRB_VFIM3 DECIMAL(14,2)DECLARE@NTRB_VFIM4 DECIMAL(14,2)DECLARE@NTRB_VFIM5 DECIMAL(14,2)DECLARE@NTRB_CM1 DECIMAL(14,4)DECLARE@NTRB_CM2 DECIMAL(14,4)DECLARE@NTRB_CM3 DECIMAL(14,4)DECLARE@NTRB_CM4 DECIMAL(14,4)DECLARE@NTRB_CM5 DECIMAL(14,4)DECLARE@NCM1AUX DECIMAL(14,4)DECLARE@NCM2AUX DECIMAL(14,4)DECLARE@NCM3AUX DECIMAL(14,4)DECLARE@NCM4AUX DECIMAL(14,4)DECLARE@NCM5AUX DECIMAL(14,4)DECLARE@NQTMOD DECIMAL(12,2)DECLARE@NTOTCM1 DECIMAL(14,4)DECLARE@NREC INTEGER DECLARE@NRECANT INTEGER DECLARE@NMAXRECNOSC2 INTEGER DECLARE@IRECNOTRT INTEGER DECLARE@IRECNO_AUX INTEGER DECLARE@ITRANCOUNT INTEGER DECLARE@IPOS INTEGER DECLARE@IRECNO INTEGER DECLARE@NRECNO INTEGER DECLARE@NCHKSB2 INTEGER DECLARE@CFILIALCOR CHAR(2)DECLARE@DDTINICIO CHAR(08)DECLARE@CMV_PAR1 CHAR(08)DECLARE@CMVULMES CHAR(08)DECLARE@CB1_CCCUSTO CHAR(9)BEGIN SET@CFILIALCOR=@IN_FILIALCOR SET@DDTINICIO=@IN_DINICIO SET@CMV_PAR1=@IN_MV_PAR1 SET@CMVULMES=@IN_MVULMES IF@IN_CUSUNIF=<str>BEGIN SET@CCUSFILAUX=@IN_FILIALCOR END ELSE BEGIN SET@CCUSFILAUX=<str>END SET@OUT_RESULTADO=<str>SET@CFILAUX=@IN_CFILAUX IF@CFILAUX IS NULL BEGIN SET@CFILAUX=<str>END SET@CB1_CC=<str>SET@NB2_QFIM=0 SET@NB2_CM1=0 SET@NB2_CM2=0 SET@NB2_CM3=0 SET@NB2_CM4=0 SET@NB2_CM5=0 SET@NB9_CM1=0 SET@NB9_CM2=0 SET@NB9_CM3=0 SET@NB9_CM4=0 SET@NB9_CM5=0 SET@NB9_CMRP1=0 SET@NB9_CMRP2=0 SET@NB9_CMRP3=0 SET@NB9_CMRP4=0 SET@NB9_CMRP5=0 SET@NB9_VINIRP1=0 SET@NB9_VINIRP2=0 SET@NB9_VINIRP3=0 SET@NB9_VINIRP4=0 SET@NB9_VINIRP5=0 SET@NB2_QFIM2=0 SET@NB2_VFIM1=0 SET@NB2_VFIM2=0 SET@NB2_VFIM3=0 SET@NB2_VFIM4=0 SET@NB2_VFIM5=0 SET@NTRB_CM1=0 SET@NTRB_CM2=0 SET@NTRB_CM3=0 SET@NTRB_CM4=0 SET@NTRB_CM5=0 SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SB1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SB2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SB9 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SF4 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SC2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SD1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SD2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_01@CAUX,@CFILIALCOR,@CFIL_SD3 OUTPUT SET@CCODORIMOD=<str>SET@CFILTRA=<str>DECLARE CUR_A330INI INSENSITIVE CURSOR FOR SELECT SB2.B2_FILIAL,SB2.B2_COD,SB2.B2_LOCAL,SB2.R_E_C_N_O_,SB2.B2_QFIM,SB2.B2_VFIM1,SB2.B2_VFIM2,SB2.B2_VFIM3,SB2.B2_VFIM4,SB2.B2_VFIM5,SB2.B2_QFIM2,SB2.B2_CM1,SB2.B2_CM2,SB2.B2_CM3,SB2.B2_CM4,SB2.B2_CM5,SB1.B1_CCCUSTO FROM SB2010 SB2,SB1010 SB1 WHERE SB2.B2_FILIAL=@CFIL_SB2 AND SB1.B1_FILIAL=@CFIL_SB1 AND SB2.B2_COD=SB1.B1_COD AND SB2.D_E_L_E_T_=<str>AND SB1.D_E_L_E_T_=<str>AND(SB2.B2_QFIM<>0 OR SB2.B2_VFIM1<>0 OR SB2.B2_VFIM2<>0 OR SB2.B2_VFIM3<>0 OR SB2.B2_VFIM4<>0 OR SB2.B2_VFIM5<>0 OR(SUBSTRING(SB1.B1_COD,1,3)=<str>OR SB1.B1_CCCUSTO<><str>)OR EXISTS(SELECT 1 FROM SB9010 SB9 WHERE SB9.B9_FILIAL=@CFIL_SB9 AND SB9.B9_COD=SB2.B2_COD AND SB9.B9_LOCAL=SB2.B2_LOCAL AND(SB9.B9_DATA=@CMVULMES OR SB9.B9_DATA=<str>)AND SB9.D_E_L_E_T_=<str>AND(SB9.B9_QINI<>0 OR SB9.B9_VINI1<>0 OR SB9.B9_VINI2<>0 OR SB9.B9_VINI3<>0 OR SB9.B9_VINI4<>0 OR SB9.B9_VINI5<>0))OR EXISTS(SELECT 1 FROM SD1010 SD1,SF4010 SF4 WHERE SD1.D1_FILIAL=@CFIL_SD1 AND SD1.D1_COD=SB2.B2_COD AND SD1.D1_LOCAL=SB2.B2_LOCAL AND SD1.D1_DTDIGIT>(SELECT CONVERT(CHAR(08),DATEADD(DAY,1,MAX(B9_DATA)),112)FROM SB9010 WHERE B9_FILIAL=@CFIL_SB9 AND B9_COD=SD1.D1_COD AND B9_LOCAL=SD1.D1_LOCAL AND B9_DATA<@DDTINICIO AND D_E_L_E_T_=<str>)AND SD1.D1_DTDIGIT<=@CMV_PAR1 AND SD1.D1_ORIGLAN<><str>AND SF4.F4_FILIAL=@CFIL_SF4 AND SF4.F4_CODIGO=SD1.D1_TES AND SF4.F4_ESTOQUE=<str>AND SF4.D_E_L_E_T_=<str>AND SD1.D_E_L_E_T_=<str>)OR EXISTS(SELECT 1 FROM SD2010 SD2,SF4010 SF4 WHERE SD2.D2_FILIAL=@CFIL_SD2 AND SD2.D2_COD=SB2.B2_COD AND SD2.D2_LOCAL=SB2.B2_LOCAL AND SD2.D2_EMISSAO>(SELECT CONVERT(CHAR(08),DATEADD(DAY,1,MAX(B9_DATA)),112)FROM SB9010 WHERE B9_FILIAL=@CFIL_SB9 AND B9_COD=SD2.D2_COD AND B9_LOCAL=SD2.D2_LOCAL AND B9_DATA<@DDTINICIO AND D_E_L_E_T_=<str>)AND SD2.D2_EMISSAO<=@CMV_PAR1 AND SD2.D2_ORIGLAN<><str>AND SF4.F4_FILIAL=@CFIL_SF4 AND SF4.F4_CODIGO=SD2.D2_TES AND SF4.F4_ESTOQUE=<str>AND SF4.D_E_L_E_T_=<str>AND SD2.D_E_L_E_T_=<str>)OR EXISTS(SELECT 1 FROM SD3010 SD3 WHERE SD3.D3_FILIAL=@CFIL_SD3 AND SD3.D3_COD=SB2.B2_COD AND SD3.D3_LOCAL=SB2.B2_LOCAL AND SD3.D3_EMISSAO>(SELECT CONVERT(CHAR(08),DATEADD(DAY,1,MAX(B9_DATA)),112)FROM SB9010 WHERE B9_FILIAL=@CFIL_SB9 AND B9_COD=SD3.D3_COD AND B9_LOCAL=SD3.D3_LOCAL AND B9_DATA<@DDTINICIO AND D_E_L_E_T_=<str>)AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>))ORDER BY SB2.B2_FILIAL,SB2.B2_COD,SB2.B2_LOCAL FOR READ ONLY OPEN CUR_A330INI FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO WHILE((@@FETCH_STATUS=0))BEGIN IF@IN_MV_PRODMNT=@CCOD BEGIN FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO CONTINUE END IF@CB1_CCCUSTO=<str>BEGIN SET@CB1_CC=<str>END ELSE BEGIN SET@CB1_CC=<str>END SET@CFILTRA=<str>EXEC MA330AL_01@CFILIALCOR,@CCOD,@CLOCAL,@NRECNO,@CFILTRA OUTPUT IF@CFILTRA=<str>BEGIN FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO CONTINUE END SET@NTRB_VFIM1=0 SET@NTRB_VFIM2=0 SET@NTRB_VFIM3=0 SET@NTRB_VFIM4=0 SET@NTRB_VFIM5=0 SET@NTRB_QFIM=0 SET@NVFIM01=0 SET@NVFIM02=0 SET@NVFIM03=0 SET@NVFIM04=0 SET@NVFIM05=0 SET@NQFIM01=0 SET@NQFIM02=0 SET@NQFIM03=0 SET@NQFIM04=0 SET@NQFIM05=0 SET@NB9_CM1=0 SET@NB9_CM2=0 SET@NB9_CM3=0 SET@NB9_CM4=0 SET@NB9_CM5=0 SET@NB9_CMRP1=0 SET@NB9_CMRP2=0 SET@NB9_CMRP3=0 SET@NB9_CMRP4=0 SET@NB9_CMRP5=0 SET@NB9_VINIRP1=0 SET@NB9_VINIRP2=0 SET@NB9_VINIRP3=0 SET@NB9_VINIRP4=0 SET@NB9_VINIRP5=0 SET@CLOCALORI=@CLOCAL IF(@IN_MV_PRODMOD=<str>AND@CB1_CCCUSTO<><str>)OR((SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>)BEGIN EXEC MAT006_19_01@CCOD,@CLOCAL,@DDTINICIO,@CFILAUX,@IN_MV_LOCPROC,@CFILIALCOR,@IN_MV_D3SERVI,@IN_INTDL,@IN_MV_CQ,@IN_MV_WMSNEW,<str>,@NSALDO01 OUTPUT,@NSALDO02 OUTPUT,@NSALDO03 OUTPUT,@NSALDO04 OUTPUT,@NSALDO05 OUTPUT,@NSALDO06 OUTPUT,@NSALDO07 OUTPUT,@NB9_CM1 OUTPUT,@NB9_CM2 OUTPUT,@NB9_CM3 OUTPUT,@NB9_CM4 OUTPUT,@NB9_CM5 OUTPUT,@NB9_CMRP1 OUTPUT,@NB9_CMRP2 OUTPUT,@NB9_CMRP3 OUTPUT,@NB9_CMRP4 OUTPUT,@NB9_CMRP5 OUTPUT,@NB9_VINIRP1 OUTPUT,@NB9_VINIRP2 OUTPUT,@NB9_VINIRP3 OUTPUT,@NB9_VINIRP4 OUTPUT,@NB9_VINIRP5 OUTPUT IF@IN_CUSUNIF IN(<str>,<str>)BEGIN IF@CCOD<>@CCODORIMOD BEGIN SET@CCODORIMOD=@CCOD END END ELSE BEGIN SET@CCODORIMOD=<str>END END ELSE BEGIN IF SUBSTRING(@IN_COPCOES,1,1)=<str>BEGIN SET@CCODORIMOD=<str>SET@NSALDO01=@NB2_QFIM SET@NSALDO02=@NB2_VFIM1 SET@NSALDO03=@NB2_VFIM2 SET@NSALDO04=@NB2_VFIM3 SET@NSALDO05=@NB2_VFIM4 SET@NSALDO06=@NB2_VFIM5 SET@NSALDO07=@NB2_QFIM2 END ELSE BEGIN IF@IN_CUSUNIF IN(<str>,<str>)BEGIN IF@CCOD<>@CCODORIMOD BEGIN SET@CCODORIMOD=@CCOD END END ELSE BEGIN SET@CCODORIMOD=<str>END SET@NSALDO01=0 SET@NSALDO02=0 SET@NSALDO03=0 SET@NSALDO04=0 SET@NSALDO05=0 SET@NSALDO06=0 SET@NSALDO07=0 END END SET@NSALDO01=COALESCE(@NSALDO01,0)SET@NSALDO02=COALESCE(@NSALDO02,0)SET@NSALDO03=COALESCE(@NSALDO03,0)SET@NSALDO04=COALESCE(@NSALDO04,0)SET@NSALDO05=COALESCE(@NSALDO05,0)SET@NSALDO06=COALESCE(@NSALDO06,0)SET@NSALDO07=COALESCE(@NSALDO07,0)SET@NB9_CM1=COALESCE(@NB9_CM1,0)SET@NB9_CM2=COALESCE(@NB9_CM2,0)SET@NB9_CM3=COALESCE(@NB9_CM3,0)SET@NB9_CM4=COALESCE(@NB9_CM4,0)SET@NB9_CM5=COALESCE(@NB9_CM5,0)SET@NB9_CMRP1=COALESCE(@NB9_CMRP1,0)SET@NB9_CMRP2=COALESCE(@NB9_CMRP2,0)SET@NB9_CMRP3=COALESCE(@NB9_CMRP3,0)SET@NB9_CMRP4=COALESCE(@NB9_CMRP4,0)SET@NB9_CMRP5=COALESCE(@NB9_CMRP5,0)SET@NB9_VINIRP1=COALESCE(@NB9_VINIRP1,0)SET@NB9_VINIRP2=COALESCE(@NB9_VINIRP2,0)SET@NB9_VINIRP3=COALESCE(@NB9_VINIRP3,0)SET@NB9_VINIRP4=COALESCE(@NB9_VINIRP4,0)SET@NB9_VINIRP5=COALESCE(@NB9_VINIRP5,0)IF(@NSALDO01>0)BEGIN SET@NVFIM01=@NSALDO02 SET@NVFIM02=@NSALDO03 SET@NVFIM03=@NSALDO04 SET@NVFIM04=@NSALDO05 SET@NVFIM05=@NSALDO06 SET@NQFIM01=@NSALDO01 SET@NQFIM02=@NSALDO01 SET@NQFIM03=@NSALDO01 SET@NQFIM04=@NSALDO01 SET@NQFIM05=@NSALDO01 IF@NVFIM01<=0 BEGIN SET@NVFIM01=COALESCE(@NB2_CM1,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM01=COALESCE(@NB9_CM1,0)END SET@NQFIM01=1 END IF@NVFIM02<=0 BEGIN SET@NVFIM02=COALESCE(@NB2_CM2,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM02=COALESCE(@NB9_CM2,0)END SET@NQFIM02=1 END IF@NVFIM03<=0 BEGIN SET@NVFIM03=COALESCE(@NB2_CM3,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM03=COALESCE(@NB9_CM3,0)END SET@NQFIM03=1 END IF@NVFIM04<=0 BEGIN SET@NVFIM04=COALESCE(@NB2_CM4,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM04=COALESCE(@NB9_CM4,0)END SET@NQFIM04=1 END IF@NVFIM05<=0 BEGIN SET@NVFIM05=COALESCE(@NB2_CM5,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM05=COALESCE(@NB9_CM5,0)END SET@NQFIM05=1 END IF@NQFIM01=0 BEGIN SET@NQFIM01=1 END IF@NQFIM02=0 BEGIN SET@NQFIM02=1 END IF@NQFIM03=0 BEGIN SET@NQFIM03=1 END IF@NQFIM04=0 BEGIN SET@NQFIM04=1 END IF@NQFIM05=0 BEGIN SET@NQFIM05=1 END SET@NB2_CM1=@NVFIM01/@NQFIM01 SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM2=@NVFIM02/@NQFIM02 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM3=@NVFIM03/@NQFIM03 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM4=@NVFIM04/@NQFIM04 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM5=@NVFIM05/@NQFIM05 END BEGIN TRANSACTION UPDATE SB2010 WITH(ROWLOCK)SET B2_QFIM=@NSALDO01,B2_VFIM1=@NSALDO02,B2_CMFIM1=@NB2_CM1,B2_QFIM2=@NSALDO07,B2_CMRP1=@NB9_CMRP1,B2_VFRP1=@NB9_VINIRP1 WHERE R_E_C_N_O_=@NRECNO SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM2=@NSALDO03,B2_CMFIM2=@NB2_CM2,B2_CMRP2=@NB9_CMRP2,B2_VFRP2=@NB9_VINIRP2 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM3=@NSALDO04,B2_CMFIM3=@NB2_CM3,B2_CMRP3=@NB9_CMRP3,B2_VFRP3=@NB9_VINIRP3 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM4=@NSALDO05,B2_CMFIM4=@NB2_CM4,B2_CMRP4=@NB9_CMRP4,B2_VFRP4=@NB9_VINIRP4 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM5=@NSALDO06,B2_CMFIM5=@NB2_CM5,B2_CMRP5=@NB9_CMRP5,B2_VFRP5=@NB9_VINIRP5 WHERE R_E_C_N_O_=@NRECNO END COMMIT TRANSACTION END ELSE BEGIN BEGIN TRANSACTION IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_QFIM=@NSALDO01,B2_VFIM1=@NSALDO02,B2_QFIM2=@NSALDO07,B2_CMFIM1=@NB9_CM1,B2_CMRP1=@NB9_CMRP1,B2_VFRP1=@NB9_VINIRP1 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_QFIM=@NSALDO01,B2_VFIM1=@NSALDO02,B2_QFIM2=@NSALDO07 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM2=@NSALDO03,B2_CMFIM2=@NB9_CM2,B2_CMRP2=@NB9_CMRP2,B2_VFRP2=@NB9_VINIRP2 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM2=@NSALDO03 WHERE R_E_C_N_O_=@NRECNO END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM3=@NSALDO04,B2_CMFIM3=@NB9_CM3,B2_CMRP3=@NB9_CMRP3,B2_VFRP3=@NB9_VINIRP3 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM3=@NSALDO04 WHERE R_E_C_N_O_=@NRECNO END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM4=@NSALDO05,B2_CMFIM4=@NB9_CM4,B2_CMRP4=@NB9_CMRP4,B2_VFRP4=@NB9_VINIRP4 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM4=@NSALDO05 WHERE R_E_C_N_O_=@NRECNO END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM5=@NSALDO06,B2_CMFIM5=@NB9_CM5,B2_CMRP5=@NB9_CMRP5,B2_VFRP5=@NB9_VINIRP5 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIM5=@NSALDO06 WHERE R_E_C_N_O_=@NRECNO END END IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NB2_CM1=@NB9_CM1 SET@NB2_CM2=@NB9_CM2 SET@NB2_CM3=@NB9_CM3 SET@NB2_CM4=@NB9_CM4 SET@NB2_CM5=@NB9_CM5 END COMMIT TRANSACTION END IF@IN_CUSUNIF IN(<str>,<str>)BEGIN SET@IRECNOTRT=0 SELECT@IRECNOTRT=COALESCE(R_E_C_N_O_,0),@NTRB_QFIM=TRB_QFIM FROM TRT01SP WHERE TRB_FILIAL=@CCUSFILAUX AND TRB_COD=@CCOD IF COALESCE(@IRECNOTRT,0)=0 BEGIN INSERT INTO TRT01SP(TRB_FILIAL,TRB_COD)VALUES(@CCUSFILAUX,@CCOD);SELECT@IRECNOTRT=MAX(R_E_C_N_O_)FROM TRT01SP WHERE TRB_FILIAL=@CCUSFILAUX AND TRB_COD=@CCOD END IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SELECT@NCHKSB2=R_E_C_N_O_ FROM SB2010 WHERE B2_FILIAL=@CCUSFILAUX AND B2_COD=@CCOD AND B2_LOCAL=@CLOCAL AND B2_QATU=0 AND B2_CMFIM1=0 AND D_E_L_E_T_=<str>IF COALESCE(@NCHKSB2,0)>0 BEGIN SELECT@NQTMOD=TRB_QTDMOD,@NTOTCM1=TRB_TOTCM1 FROM TRT01SP WHERE R_E_C_N_O_=@IRECNOTRT IF@NQTMOD>0 AND@NB2_CM1=0 BEGIN SET@NB2_CM1=@NTOTCM1/@NQTMOD END END UPDATE TRT01SP WITH(ROWLOCK)SET TRB_QFIM=TRB_QFIM+@NSALDO01,TRB_QFIM2=TRB_QFIM2+@NSALDO07,TRB_VFIM1=TRB_VFIM1+@NSALDO02,TRB_QTDMOD=TRB_QTDMOD+1,TRB_TOTCM1=TRB_TOTCM1+@NB2_CM1 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_QFIM=TRB_QFIM,@NTRB_VFIM1=TRB_VFIM1 FROM TRT01SP WHERE R_E_C_N_O_=@IRECNOTRT SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_VFIM2=TRB_VFIM2+@NSALDO03,TRB_TOTCM2=TRB_TOTCM2+@NB2_CM2 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM2=TRB_VFIM2 FROM TRT01SP WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_VFIM3=TRB_VFIM3+@NSALDO04,TRB_TOTCM3=TRB_TOTCM3+@NB2_CM3 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM3=TRB_VFIM3 FROM TRT01SP WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_VFIM4=TRB_VFIM4+@NSALDO05,TRB_TOTCM4=TRB_TOTCM4+@NB2_CM4 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM4=TRB_VFIM4 FROM TRT01SP WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_VFIM5=TRB_VFIM5+@NSALDO06,TRB_TOTCM5=TRB_TOTCM5+@NB2_CM5 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM5=TRB_VFIM5 FROM TRT01SP WHERE R_E_C_N_O_=@IRECNOTRT END END IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN IF@NTRB_VFIM1>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM1=TRB_VFIM1/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM1=TRB_TOTCM1/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM2>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM2=TRB_VFIM2/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM2=TRB_TOTCM2/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM3>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM3=TRB_VFIM3/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM3=TRB_TOTCM3/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM4>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM4=TRB_VFIM4/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM4=TRB_TOTCM4/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM5>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM5=TRB_VFIM5/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM5=TRB_TOTCM5/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END END ELSE BEGIN IF(SUBSTRING(@IN_COPCOES,1,1)<><str>)BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_QTDMOD=TRB_QTDMOD+1,TRB_TOTCM1=TRB_TOTCM1+@NB2_CM1 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM1=TRB_TOTCM1/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_TOTCM2=TRB_TOTCM2+@NB2_CM2 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM2=TRB_TOTCM2/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_TOTCM3=TRB_TOTCM3+@NB2_CM3 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM3=TRB_TOTCM3/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_TOTCM4=TRB_TOTCM4+@NB2_CM4 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM4=TRB_TOTCM4/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_TOTCM5=TRB_TOTCM5+@NB2_CM5 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM5=TRB_TOTCM5/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END END END EXEC M330INB2CP_01@CFILIALCOR,@DDTINICIO,@IN_CUSUNIF,@CCOD,@CLOCAL,@NRECNO IF@IN_MV_CUSFIFO=<str>BEGIN EXEC MAT049_19_01@CCOD,@CLOCAL,@DDTINICIO,@CFILIALCOR,@NQSALDOATUFF OUTPUT,@NCUSTOATUFF01 OUTPUT,@NCUSTOATUFF02 OUTPUT,@NCUSTOATUFF03 OUTPUT,@NCUSTOATUFF04 OUTPUT,@NCUSTOATUFF05 OUTPUT,@NQT2UMFF OUTPUT SET@NB2_QFIMFF=@NQSALDOATUFF SET@NB2_VFIMFF1=0 SET@NB2_VFIMFF2=0 SET@NB2_VFIMFF3=0 SET@NB2_VFIMFF4=0 SET@NB2_VFIMFF5=0 SET@NB2_CMFF1=0 SET@NB2_CMFF2=0 SET@NB2_CMFF3=0 SET@NB2_CMFF4=0 SET@NB2_CMFF5=0 SET@NB2_VFIMFF1=@NCUSTOATUFF01 IF(@NSALDO01>0)AND(@NCUSTOATUFF01>0)BEGIN SET@NB2_CMFF1=@NB2_VFIMFF1/@NSALDO01 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF2=@NCUSTOATUFF02 IF(@NSALDO01>0)AND(@NB2_VFIMFF2>0)BEGIN SET@NB2_CMFF2=@NB2_VFIMFF2/@NSALDO01 END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF3=@NCUSTOATUFF03 IF(@NSALDO01>0)AND(@NB2_VFIMFF3>0)BEGIN SET@NB2_CMFF3=@NB2_VFIMFF3/@NSALDO01 END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF4=@NCUSTOATUFF04 IF(@NSALDO01>0)AND(@NB2_VFIMFF4>0)BEGIN SET@NB2_CMFF4=@NB2_VFIMFF4/@NSALDO01 END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF5=@NCUSTOATUFF05 IF(@NSALDO01>0)AND(@NB2_VFIMFF5>0)BEGIN SET@NB2_CMFF5=@NB2_VFIMFF5/@NSALDO01 END END UPDATE SB2010 WITH(ROWLOCK)SET B2_VFIMFF1=@NB2_VFIMFF1,B2_CMFF1=@NB2_CMFF1,B2_VFIMFF2=@NB2_VFIMFF2,B2_CMFF2=@NB2_CMFF2,B2_VFIMFF3=@NB2_VFIMFF3,B2_CMFF3=@NB2_CMFF3,B2_VFIMFF4=@NB2_VFIMFF4,B2_CMFF4=@NB2_CMFF4,B2_VFIMFF5=@NB2_VFIMFF5,B2_CMFF5=@NB2_CMFF5,B2_QFIMFF=@NB2_QFIMFF WHERE R_E_C_N_O_=@NRECNO END FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO IF@IN_CUSUNIF IN(<str>,<str>)BEGIN EXEC MAT043_19_01@CFILIALCOR,@CCODORIMOD,@IN_MV_NEGESTR,@OUTRESULT OUTPUT IF(@OUTRESULT=<str>)BEGIN SELECT@NCM1AUX=TRB_CM1,@NCM2AUX=TRB_CM2,@NCM3AUX=TRB_CM3,@NCM4AUX=TRB_CM4,@NCM5AUX=TRB_CM5 FROM TRT01SP WHERE TRB_FILIAL=@CCUSFILAUX AND TRB_COD=@CCODORIMOD EXEC M330CMU_01@CFILIALCOR,@CCODORIMOD,@IN_DDATABASE,@NCM1AUX,@NCM2AUX,@NCM3AUX,@NCM4AUX,@NCM5AUX,@NTRB_CM1 OUTPUT,@NTRB_CM2 OUTPUT,@NTRB_CM3 OUTPUT,@NTRB_CM4 OUTPUT,@NTRB_CM5 OUTPUT,@CEXECUTOU OUTPUT IF(@CEXECUTOU=<str>)BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM1=COALESCE(@NTRB_CM1,0)WHERE R_E_C_N_O_=@IRECNOTRT SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM2=COALESCE(@NTRB_CM2,0)WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM3=COALESCE(@NTRB_CM3,0)WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM4=COALESCE(@NTRB_CM4,0)WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT01SP WITH(ROWLOCK)SET TRB_CM5=COALESCE(@NTRB_CM5,0)WHERE R_E_C_N_O_=@IRECNOTRT END END END END END CLOSE CUR_A330INI DEALLOCATE CUR_A330INI BEGIN TRANSACTION UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIM1=C2_VINI1,C2_APRFIM1=C2_APRINI1,C2_VFIMRP1=C2_APRINI1,C2_APRFRP1=C2_APRIRP1 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIM2=C2_VINI2,C2_APRFIM2=C2_APRINI2,C2_VFIMRP2=C2_APRINI2,C2_APRFRP2=C2_APRIRP2 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIM3=C2_VINI3,C2_APRFIM3=C2_APRINI3,C2_VFIMRP3=C2_APRINI3,C2_APRFRP3=C2_APRIRP3 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIM4=C2_VINI4,C2_APRFIM4=C2_APRINI4,C2_VFIMRP4=C2_APRINI4,C2_APRFRP4=C2_APRIRP4 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIM5=C2_VINI5,C2_APRFIM5=C2_APRINI5,C2_VFIMRP5=C2_APRINI5,C2_APRFRP5=C2_APRIRP5 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END IF@IN_MV_CUSFIFO=<str>BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIMFF1=C2_VINIFF1,C2_APFIFF1=C2_APINFF1 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIMFF2=C2_VINIFF2,C2_APFIFF2=C2_APINFF2 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIMFF3=C2_VINIFF3,C2_APFIFF3=C2_APINFF3 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIMFF4=C2_VINIFF4,C2_APFIFF4=C2_APINFF4 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2010 WITH(ROWLOCK)SET C2_VFIMFF5=C2_VINIFF5,C2_APFIFF5=C2_APINFF5 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END END COMMIT TRANSACTION EXEC M330INC2CP_01@CFILIALCOR EXEC MAT054_19_01@CFILIALCOR,@IN_CFILAUX,@DDTINICIO,@IN_MV_MOEDACM,@CMV_PAR1,@IN_MV_CUSFIFO,@OUTRESULT OUTPUT IF(@OUTRESULT=<str>)BEGIN SET@OUT_RESULTADO=<str>END END GO
ERP_V12	[dbo].[MAT007_19_02]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SB2.B2_FILIAL,SB2.B2_COD,SB2.B2_LOCAL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.MAT007_19_02(@IN_FILIALCOR CHAR(2),@IN_CFILAUX CHAR(2),@IN_DINICIO CHAR(08),@IN_MV_LOCPROC CHAR(2),@IN_COPCOES CHAR(04),@IN_CUSUNIF CHAR(01),@IN_DDATABASE CHAR(08),@IN_MV_NEGESTR CHAR(01),@IN_MV_MOEDACM CHAR(05),@IN_MV_PAR1 CHAR(08),@IN_MV_CUSFIFO CHAR(01),@IN_MV_PRODMNT CHAR(15),@IN_MV_D3SERVI CHAR(01),@IN_INTDL CHAR(01),@IN_MV_CQ CHAR(2),@IN_MVULMES CHAR(08),@IN_MV_WMSNEW CHAR(2),@IN_MV_PRODMOD CHAR(01),@OUT_RESULTADO CHAR(01)OUTPUT)AS DECLARE@CCOD CHAR(15)DECLARE@CLOCAL CHAR(2)DECLARE@CLOCALORI CHAR(2)DECLARE@CFIL_SB2 CHAR(2)DECLARE@CFIL_SB1 CHAR(2)DECLARE@CFIL_SC2 CHAR(2)DECLARE@CFIL_SB9 CHAR(2)DECLARE@CFIL_SD1 CHAR(2)DECLARE@CFIL_SD2 CHAR(2)DECLARE@CFIL_SD3 CHAR(2)DECLARE@CFIL_SF4 CHAR(2)DECLARE@CCODORIMOD CHAR(15)DECLARE@CB1_CC CHAR(01)DECLARE@CFILAUX CHAR(2)DECLARE@CCUSFILAUX CHAR(2)DECLARE@CFILTRA CHAR(01)DECLARE@CEXECUTOU CHAR(01)DECLARE@CAUX VARCHAR(03)DECLARE@OUTRESULT VARCHAR(01)DECLARE@NSALDO01 DECIMAL(12,2)DECLARE@NSALDO02 DECIMAL(14,2)DECLARE@NSALDO03 DECIMAL(14,2)DECLARE@NSALDO04 DECIMAL(14,2)DECLARE@NSALDO05 DECIMAL(14,2)DECLARE@NSALDO06 DECIMAL(14,2)DECLARE@NSALDO07 DECIMAL(12,2)DECLARE@NVFIM01 FLOAT DECLARE@NVFIM02 FLOAT DECLARE@NVFIM03 FLOAT DECLARE@NVFIM04 FLOAT DECLARE@NVFIM05 FLOAT DECLARE@NQFIM01 FLOAT DECLARE@NQFIM02 FLOAT DECLARE@NQFIM03 FLOAT DECLARE@NQFIM04 FLOAT DECLARE@NQFIM05 FLOAT DECLARE@NTRB_QFIM FLOAT DECLARE@NQTD FLOAT DECLARE@NQSALDOATUFF FLOAT DECLARE@NCUSTOATUFF01 FLOAT DECLARE@NCUSTOATUFF02 FLOAT DECLARE@NCUSTOATUFF03 FLOAT DECLARE@NCUSTOATUFF04 FLOAT DECLARE@NCUSTOATUFF05 FLOAT DECLARE@NQT2UMFF FLOAT DECLARE@NB2_CM1 DECIMAL(14,4)DECLARE@NB2_CM2 DECIMAL(14,4)DECLARE@NB2_CM3 DECIMAL(14,4)DECLARE@NB2_CM4 DECIMAL(14,4)DECLARE@NB2_CM5 DECIMAL(14,4)DECLARE@NB9_CM1 DECIMAL(14,4)DECLARE@NB9_CM2 DECIMAL(14,4)DECLARE@NB9_CM3 DECIMAL(14,4)DECLARE@NB9_CM4 DECIMAL(14,4)DECLARE@NB9_CM5 DECIMAL(14,4)DECLARE@NB9_CMRP1 DECIMAL(14,4)DECLARE@NB9_CMRP2 DECIMAL(14,4)DECLARE@NB9_CMRP3 DECIMAL(14,4)DECLARE@NB9_CMRP4 DECIMAL(14,4)DECLARE@NB9_CMRP5 DECIMAL(14,4)DECLARE@NB9_VINIRP1 DECIMAL(14,2)DECLARE@NB9_VINIRP2 DECIMAL(14,2)DECLARE@NB9_VINIRP3 DECIMAL(14,2)DECLARE@NB9_VINIRP4 DECIMAL(14,2)DECLARE@NB9_VINIRP5 DECIMAL(14,2)DECLARE@NB2_QFIM DECIMAL(12,2)DECLARE@NB2_VFIM1 DECIMAL(14,2)DECLARE@NB2_VFIM2 DECIMAL(14,2)DECLARE@NB2_VFIM3 DECIMAL(14,2)DECLARE@NB2_VFIM4 DECIMAL(14,2)DECLARE@NB2_VFIM5 DECIMAL(14,2)DECLARE@NB2_QFIM2 DECIMAL(12,2)DECLARE@NB2_QFIMFF DECIMAL(12,2)DECLARE@NB2_CMFF1 DECIMAL(14,4)DECLARE@NB2_CMFF2 DECIMAL(14,4)DECLARE@NB2_CMFF3 DECIMAL(14,4)DECLARE@NB2_CMFF4 DECIMAL(14,4)DECLARE@NB2_CMFF5 DECIMAL(14,4)DECLARE@NB2_VFIMFF1 DECIMAL(14,2)DECLARE@NB2_VFIMFF2 DECIMAL(14,2)DECLARE@NB2_VFIMFF3 DECIMAL(14,2)DECLARE@NB2_VFIMFF4 DECIMAL(14,2)DECLARE@NB2_VFIMFF5 DECIMAL(14,2)DECLARE@NTRB_VFIM1 DECIMAL(14,2)DECLARE@NTRB_VFIM2 DECIMAL(14,2)DECLARE@NTRB_VFIM3 DECIMAL(14,2)DECLARE@NTRB_VFIM4 DECIMAL(14,2)DECLARE@NTRB_VFIM5 DECIMAL(14,2)DECLARE@NTRB_CM1 DECIMAL(14,4)DECLARE@NTRB_CM2 DECIMAL(14,4)DECLARE@NTRB_CM3 DECIMAL(14,4)DECLARE@NTRB_CM4 DECIMAL(14,4)DECLARE@NTRB_CM5 DECIMAL(14,4)DECLARE@NCM1AUX DECIMAL(14,4)DECLARE@NCM2AUX DECIMAL(14,4)DECLARE@NCM3AUX DECIMAL(14,4)DECLARE@NCM4AUX DECIMAL(14,4)DECLARE@NCM5AUX DECIMAL(14,4)DECLARE@NQTMOD DECIMAL(12,2)DECLARE@NTOTCM1 DECIMAL(14,4)DECLARE@NREC INTEGER DECLARE@NRECANT INTEGER DECLARE@NMAXRECNOSC2 INTEGER DECLARE@IRECNOTRT INTEGER DECLARE@IRECNO_AUX INTEGER DECLARE@ITRANCOUNT INTEGER DECLARE@IPOS INTEGER DECLARE@IRECNO INTEGER DECLARE@NRECNO INTEGER DECLARE@NCHKSB2 INTEGER DECLARE@CFILIALCOR CHAR(2)DECLARE@DDTINICIO CHAR(08)DECLARE@CMV_PAR1 CHAR(08)DECLARE@CMVULMES CHAR(08)DECLARE@CB1_CCCUSTO CHAR(9)BEGIN SET@CFILIALCOR=@IN_FILIALCOR SET@DDTINICIO=@IN_DINICIO SET@CMV_PAR1=@IN_MV_PAR1 SET@CMVULMES=@IN_MVULMES IF@IN_CUSUNIF=<str>BEGIN SET@CCUSFILAUX=@IN_FILIALCOR END ELSE BEGIN SET@CCUSFILAUX=<str>END SET@OUT_RESULTADO=<str>SET@CFILAUX=@IN_CFILAUX IF@CFILAUX IS NULL BEGIN SET@CFILAUX=<str>END SET@CB1_CC=<str>SET@NB2_QFIM=0 SET@NB2_CM1=0 SET@NB2_CM2=0 SET@NB2_CM3=0 SET@NB2_CM4=0 SET@NB2_CM5=0 SET@NB9_CM1=0 SET@NB9_CM2=0 SET@NB9_CM3=0 SET@NB9_CM4=0 SET@NB9_CM5=0 SET@NB9_CMRP1=0 SET@NB9_CMRP2=0 SET@NB9_CMRP3=0 SET@NB9_CMRP4=0 SET@NB9_CMRP5=0 SET@NB9_VINIRP1=0 SET@NB9_VINIRP2=0 SET@NB9_VINIRP3=0 SET@NB9_VINIRP4=0 SET@NB9_VINIRP5=0 SET@NB2_QFIM2=0 SET@NB2_VFIM1=0 SET@NB2_VFIM2=0 SET@NB2_VFIM3=0 SET@NB2_VFIM4=0 SET@NB2_VFIM5=0 SET@NTRB_CM1=0 SET@NTRB_CM2=0 SET@NTRB_CM3=0 SET@NTRB_CM4=0 SET@NTRB_CM5=0 SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SB1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SB2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SB9 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SF4 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SC2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SD1 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SD2 OUTPUT SET@CAUX=<str>EXEC XFILIAL_19_02@CAUX,@CFILIALCOR,@CFIL_SD3 OUTPUT SET@CCODORIMOD=<str>SET@CFILTRA=<str>DECLARE CUR_A330INI INSENSITIVE CURSOR FOR SELECT SB2.B2_FILIAL,SB2.B2_COD,SB2.B2_LOCAL,SB2.R_E_C_N_O_,SB2.B2_QFIM,SB2.B2_VFIM1,SB2.B2_VFIM2,SB2.B2_VFIM3,SB2.B2_VFIM4,SB2.B2_VFIM5,SB2.B2_QFIM2,SB2.B2_CM1,SB2.B2_CM2,SB2.B2_CM3,SB2.B2_CM4,SB2.B2_CM5,SB1.B1_CCCUSTO FROM SB2030 SB2,SB1030 SB1 WHERE SB2.B2_FILIAL=@CFIL_SB2 AND SB1.B1_FILIAL=@CFIL_SB1 AND SB2.B2_COD=SB1.B1_COD AND SB2.D_E_L_E_T_=<str>AND SB1.D_E_L_E_T_=<str>AND(SB2.B2_QFIM<>0 OR SB2.B2_VFIM1<>0 OR SB2.B2_VFIM2<>0 OR SB2.B2_VFIM3<>0 OR SB2.B2_VFIM4<>0 OR SB2.B2_VFIM5<>0 OR(SUBSTRING(SB1.B1_COD,1,3)=<str>OR SB1.B1_CCCUSTO<><str>)OR EXISTS(SELECT 1 FROM SB9030 SB9 WHERE SB9.B9_FILIAL=@CFIL_SB9 AND SB9.B9_COD=SB2.B2_COD AND SB9.B9_LOCAL=SB2.B2_LOCAL AND(SB9.B9_DATA=@CMVULMES OR SB9.B9_DATA=<str>)AND SB9.D_E_L_E_T_=<str>AND(SB9.B9_QINI<>0 OR SB9.B9_VINI1<>0 OR SB9.B9_VINI2<>0 OR SB9.B9_VINI3<>0 OR SB9.B9_VINI4<>0 OR SB9.B9_VINI5<>0))OR EXISTS(SELECT 1 FROM SD1030 SD1,SF4030 SF4 WHERE SD1.D1_FILIAL=@CFIL_SD1 AND SD1.D1_COD=SB2.B2_COD AND SD1.D1_LOCAL=SB2.B2_LOCAL AND SD1.D1_DTDIGIT>(SELECT CONVERT(CHAR(08),DATEADD(DAY,1,MAX(B9_DATA)),112)FROM SB9030 WHERE B9_FILIAL=@CFIL_SB9 AND B9_COD=SD1.D1_COD AND B9_LOCAL=SD1.D1_LOCAL AND B9_DATA<@DDTINICIO AND D_E_L_E_T_=<str>)AND SD1.D1_DTDIGIT<=@CMV_PAR1 AND SD1.D1_ORIGLAN<><str>AND SF4.F4_FILIAL=@CFIL_SF4 AND SF4.F4_CODIGO=SD1.D1_TES AND SF4.F4_ESTOQUE=<str>AND SF4.D_E_L_E_T_=<str>AND SD1.D_E_L_E_T_=<str>)OR EXISTS(SELECT 1 FROM SD2030 SD2,SF4030 SF4 WHERE SD2.D2_FILIAL=@CFIL_SD2 AND SD2.D2_COD=SB2.B2_COD AND SD2.D2_LOCAL=SB2.B2_LOCAL AND SD2.D2_EMISSAO>(SELECT CONVERT(CHAR(08),DATEADD(DAY,1,MAX(B9_DATA)),112)FROM SB9030 WHERE B9_FILIAL=@CFIL_SB9 AND B9_COD=SD2.D2_COD AND B9_LOCAL=SD2.D2_LOCAL AND B9_DATA<@DDTINICIO AND D_E_L_E_T_=<str>)AND SD2.D2_EMISSAO<=@CMV_PAR1 AND SD2.D2_ORIGLAN<><str>AND SF4.F4_FILIAL=@CFIL_SF4 AND SF4.F4_CODIGO=SD2.D2_TES AND SF4.F4_ESTOQUE=<str>AND SF4.D_E_L_E_T_=<str>AND SD2.D_E_L_E_T_=<str>)OR EXISTS(SELECT 1 FROM SD3030 SD3 WHERE SD3.D3_FILIAL=@CFIL_SD3 AND SD3.D3_COD=SB2.B2_COD AND SD3.D3_LOCAL=SB2.B2_LOCAL AND SD3.D3_EMISSAO>(SELECT CONVERT(CHAR(08),DATEADD(DAY,1,MAX(B9_DATA)),112)FROM SB9030 WHERE B9_FILIAL=@CFIL_SB9 AND B9_COD=SD3.D3_COD AND B9_LOCAL=SD3.D3_LOCAL AND B9_DATA<@DDTINICIO AND D_E_L_E_T_=<str>)AND SD3.D3_EMISSAO<=@CMV_PAR1 AND SD3.D3_ESTORNO=<str>AND SD3.D_E_L_E_T_=<str>))ORDER BY SB2.B2_FILIAL,SB2.B2_COD,SB2.B2_LOCAL FOR READ ONLY OPEN CUR_A330INI FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO WHILE((@@FETCH_STATUS=0))BEGIN IF@IN_MV_PRODMNT=@CCOD BEGIN FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO CONTINUE END IF@CB1_CCCUSTO=<str>BEGIN SET@CB1_CC=<str>END ELSE BEGIN SET@CB1_CC=<str>END SET@CFILTRA=<str>EXEC MA330AL_02@CFILIALCOR,@CCOD,@CLOCAL,@NRECNO,@CFILTRA OUTPUT IF@CFILTRA=<str>BEGIN FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO CONTINUE END SET@NTRB_VFIM1=0 SET@NTRB_VFIM2=0 SET@NTRB_VFIM3=0 SET@NTRB_VFIM4=0 SET@NTRB_VFIM5=0 SET@NTRB_QFIM=0 SET@NVFIM01=0 SET@NVFIM02=0 SET@NVFIM03=0 SET@NVFIM04=0 SET@NVFIM05=0 SET@NQFIM01=0 SET@NQFIM02=0 SET@NQFIM03=0 SET@NQFIM04=0 SET@NQFIM05=0 SET@NB9_CM1=0 SET@NB9_CM2=0 SET@NB9_CM3=0 SET@NB9_CM4=0 SET@NB9_CM5=0 SET@NB9_CMRP1=0 SET@NB9_CMRP2=0 SET@NB9_CMRP3=0 SET@NB9_CMRP4=0 SET@NB9_CMRP5=0 SET@NB9_VINIRP1=0 SET@NB9_VINIRP2=0 SET@NB9_VINIRP3=0 SET@NB9_VINIRP4=0 SET@NB9_VINIRP5=0 SET@CLOCALORI=@CLOCAL IF(@IN_MV_PRODMOD=<str>AND@CB1_CCCUSTO<><str>)OR((SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>)BEGIN EXEC MAT006_19_02@CCOD,@CLOCAL,@DDTINICIO,@CFILAUX,@IN_MV_LOCPROC,@CFILIALCOR,@IN_MV_D3SERVI,@IN_INTDL,@IN_MV_CQ,@IN_MV_WMSNEW,<str>,@NSALDO01 OUTPUT,@NSALDO02 OUTPUT,@NSALDO03 OUTPUT,@NSALDO04 OUTPUT,@NSALDO05 OUTPUT,@NSALDO06 OUTPUT,@NSALDO07 OUTPUT,@NB9_CM1 OUTPUT,@NB9_CM2 OUTPUT,@NB9_CM3 OUTPUT,@NB9_CM4 OUTPUT,@NB9_CM5 OUTPUT,@NB9_CMRP1 OUTPUT,@NB9_CMRP2 OUTPUT,@NB9_CMRP3 OUTPUT,@NB9_CMRP4 OUTPUT,@NB9_CMRP5 OUTPUT,@NB9_VINIRP1 OUTPUT,@NB9_VINIRP2 OUTPUT,@NB9_VINIRP3 OUTPUT,@NB9_VINIRP4 OUTPUT,@NB9_VINIRP5 OUTPUT IF@IN_CUSUNIF IN(<str>,<str>)BEGIN IF@CCOD<>@CCODORIMOD BEGIN SET@CCODORIMOD=@CCOD END END ELSE BEGIN SET@CCODORIMOD=<str>END END ELSE BEGIN IF SUBSTRING(@IN_COPCOES,1,1)=<str>BEGIN SET@CCODORIMOD=<str>SET@NSALDO01=@NB2_QFIM SET@NSALDO02=@NB2_VFIM1 SET@NSALDO03=@NB2_VFIM2 SET@NSALDO04=@NB2_VFIM3 SET@NSALDO05=@NB2_VFIM4 SET@NSALDO06=@NB2_VFIM5 SET@NSALDO07=@NB2_QFIM2 END ELSE BEGIN IF@IN_CUSUNIF IN(<str>,<str>)BEGIN IF@CCOD<>@CCODORIMOD BEGIN SET@CCODORIMOD=@CCOD END END ELSE BEGIN SET@CCODORIMOD=<str>END SET@NSALDO01=0 SET@NSALDO02=0 SET@NSALDO03=0 SET@NSALDO04=0 SET@NSALDO05=0 SET@NSALDO06=0 SET@NSALDO07=0 END END SET@NSALDO01=COALESCE(@NSALDO01,0)SET@NSALDO02=COALESCE(@NSALDO02,0)SET@NSALDO03=COALESCE(@NSALDO03,0)SET@NSALDO04=COALESCE(@NSALDO04,0)SET@NSALDO05=COALESCE(@NSALDO05,0)SET@NSALDO06=COALESCE(@NSALDO06,0)SET@NSALDO07=COALESCE(@NSALDO07,0)SET@NB9_CM1=COALESCE(@NB9_CM1,0)SET@NB9_CM2=COALESCE(@NB9_CM2,0)SET@NB9_CM3=COALESCE(@NB9_CM3,0)SET@NB9_CM4=COALESCE(@NB9_CM4,0)SET@NB9_CM5=COALESCE(@NB9_CM5,0)SET@NB9_CMRP1=COALESCE(@NB9_CMRP1,0)SET@NB9_CMRP2=COALESCE(@NB9_CMRP2,0)SET@NB9_CMRP3=COALESCE(@NB9_CMRP3,0)SET@NB9_CMRP4=COALESCE(@NB9_CMRP4,0)SET@NB9_CMRP5=COALESCE(@NB9_CMRP5,0)SET@NB9_VINIRP1=COALESCE(@NB9_VINIRP1,0)SET@NB9_VINIRP2=COALESCE(@NB9_VINIRP2,0)SET@NB9_VINIRP3=COALESCE(@NB9_VINIRP3,0)SET@NB9_VINIRP4=COALESCE(@NB9_VINIRP4,0)SET@NB9_VINIRP5=COALESCE(@NB9_VINIRP5,0)IF(@NSALDO01>0)BEGIN SET@NVFIM01=@NSALDO02 SET@NVFIM02=@NSALDO03 SET@NVFIM03=@NSALDO04 SET@NVFIM04=@NSALDO05 SET@NVFIM05=@NSALDO06 SET@NQFIM01=@NSALDO01 SET@NQFIM02=@NSALDO01 SET@NQFIM03=@NSALDO01 SET@NQFIM04=@NSALDO01 SET@NQFIM05=@NSALDO01 IF@NVFIM01<=0 BEGIN SET@NVFIM01=COALESCE(@NB2_CM1,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM01=COALESCE(@NB9_CM1,0)END SET@NQFIM01=1 END IF@NVFIM02<=0 BEGIN SET@NVFIM02=COALESCE(@NB2_CM2,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM02=COALESCE(@NB9_CM2,0)END SET@NQFIM02=1 END IF@NVFIM03<=0 BEGIN SET@NVFIM03=COALESCE(@NB2_CM3,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM03=COALESCE(@NB9_CM3,0)END SET@NQFIM03=1 END IF@NVFIM04<=0 BEGIN SET@NVFIM04=COALESCE(@NB2_CM4,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM04=COALESCE(@NB9_CM4,0)END SET@NQFIM04=1 END IF@NVFIM05<=0 BEGIN SET@NVFIM05=COALESCE(@NB2_CM5,0)IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NVFIM05=COALESCE(@NB9_CM5,0)END SET@NQFIM05=1 END IF@NQFIM01=0 BEGIN SET@NQFIM01=1 END IF@NQFIM02=0 BEGIN SET@NQFIM02=1 END IF@NQFIM03=0 BEGIN SET@NQFIM03=1 END IF@NQFIM04=0 BEGIN SET@NQFIM04=1 END IF@NQFIM05=0 BEGIN SET@NQFIM05=1 END SET@NB2_CM1=@NVFIM01/@NQFIM01 SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM2=@NVFIM02/@NQFIM02 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM3=@NVFIM03/@NQFIM03 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM4=@NVFIM04/@NQFIM04 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_CM5=@NVFIM05/@NQFIM05 END BEGIN TRANSACTION UPDATE SB2030 WITH(ROWLOCK)SET B2_QFIM=@NSALDO01,B2_VFIM1=@NSALDO02,B2_CMFIM1=@NB2_CM1,B2_QFIM2=@NSALDO07,B2_CMRP1=@NB9_CMRP1,B2_VFRP1=@NB9_VINIRP1 WHERE R_E_C_N_O_=@NRECNO SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM2=@NSALDO03,B2_CMFIM2=@NB2_CM2,B2_CMRP2=@NB9_CMRP2,B2_VFRP2=@NB9_VINIRP2 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM3=@NSALDO04,B2_CMFIM3=@NB2_CM3,B2_CMRP3=@NB9_CMRP3,B2_VFRP3=@NB9_VINIRP3 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM4=@NSALDO05,B2_CMFIM4=@NB2_CM4,B2_CMRP4=@NB9_CMRP4,B2_VFRP4=@NB9_VINIRP4 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM5=@NSALDO06,B2_CMFIM5=@NB2_CM5,B2_CMRP5=@NB9_CMRP5,B2_VFRP5=@NB9_VINIRP5 WHERE R_E_C_N_O_=@NRECNO END COMMIT TRANSACTION END ELSE BEGIN BEGIN TRANSACTION IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_QFIM=@NSALDO01,B2_VFIM1=@NSALDO02,B2_QFIM2=@NSALDO07,B2_CMFIM1=@NB9_CM1,B2_CMRP1=@NB9_CMRP1,B2_VFRP1=@NB9_VINIRP1 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_QFIM=@NSALDO01,B2_VFIM1=@NSALDO02,B2_QFIM2=@NSALDO07 WHERE R_E_C_N_O_=@NRECNO END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM2=@NSALDO03,B2_CMFIM2=@NB9_CM2,B2_CMRP2=@NB9_CMRP2,B2_VFRP2=@NB9_VINIRP2 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM2=@NSALDO03 WHERE R_E_C_N_O_=@NRECNO END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM3=@NSALDO04,B2_CMFIM3=@NB9_CM3,B2_CMRP3=@NB9_CMRP3,B2_VFRP3=@NB9_VINIRP3 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM3=@NSALDO04 WHERE R_E_C_N_O_=@NRECNO END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM4=@NSALDO05,B2_CMFIM4=@NB9_CM4,B2_CMRP4=@NB9_CMRP4,B2_VFRP4=@NB9_VINIRP4 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM4=@NSALDO05 WHERE R_E_C_N_O_=@NRECNO END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM5=@NSALDO06,B2_CMFIM5=@NB9_CM5,B2_CMRP5=@NB9_CMRP5,B2_VFRP5=@NB9_VINIRP5 WHERE R_E_C_N_O_=@NRECNO END ELSE BEGIN UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIM5=@NSALDO06 WHERE R_E_C_N_O_=@NRECNO END END IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SET@NB2_CM1=@NB9_CM1 SET@NB2_CM2=@NB9_CM2 SET@NB2_CM3=@NB9_CM3 SET@NB2_CM4=@NB9_CM4 SET@NB2_CM5=@NB9_CM5 END COMMIT TRANSACTION END IF@IN_CUSUNIF IN(<str>,<str>)BEGIN SET@IRECNOTRT=0 SELECT@IRECNOTRT=COALESCE(R_E_C_N_O_,0),@NTRB_QFIM=TRB_QFIM FROM TRT02SP WHERE TRB_FILIAL=@CCUSFILAUX AND TRB_COD=@CCOD IF COALESCE(@IRECNOTRT,0)=0 BEGIN INSERT INTO TRT02SP(TRB_FILIAL,TRB_COD)VALUES(@CCUSFILAUX,@CCOD);SELECT@IRECNOTRT=MAX(R_E_C_N_O_)FROM TRT02SP WHERE TRB_FILIAL=@CCUSFILAUX AND TRB_COD=@CCOD END IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN SELECT@NCHKSB2=R_E_C_N_O_ FROM SB2030 WHERE B2_FILIAL=@CCUSFILAUX AND B2_COD=@CCOD AND B2_LOCAL=@CLOCAL AND B2_QATU=0 AND B2_CMFIM1=0 AND D_E_L_E_T_=<str>IF COALESCE(@NCHKSB2,0)>0 BEGIN SELECT@NQTMOD=TRB_QTDMOD,@NTOTCM1=TRB_TOTCM1 FROM TRT02SP WHERE R_E_C_N_O_=@IRECNOTRT IF@NQTMOD>0 AND@NB2_CM1=0 BEGIN SET@NB2_CM1=@NTOTCM1/@NQTMOD END END UPDATE TRT02SP WITH(ROWLOCK)SET TRB_QFIM=TRB_QFIM+@NSALDO01,TRB_QFIM2=TRB_QFIM2+@NSALDO07,TRB_VFIM1=TRB_VFIM1+@NSALDO02,TRB_QTDMOD=TRB_QTDMOD+1,TRB_TOTCM1=TRB_TOTCM1+@NB2_CM1 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_QFIM=TRB_QFIM,@NTRB_VFIM1=TRB_VFIM1 FROM TRT02SP WHERE R_E_C_N_O_=@IRECNOTRT SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_VFIM2=TRB_VFIM2+@NSALDO03,TRB_TOTCM2=TRB_TOTCM2+@NB2_CM2 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM2=TRB_VFIM2 FROM TRT02SP WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_VFIM3=TRB_VFIM3+@NSALDO04,TRB_TOTCM3=TRB_TOTCM3+@NB2_CM3 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM3=TRB_VFIM3 FROM TRT02SP WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_VFIM4=TRB_VFIM4+@NSALDO05,TRB_TOTCM4=TRB_TOTCM4+@NB2_CM4 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM4=TRB_VFIM4 FROM TRT02SP WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_VFIM5=TRB_VFIM5+@NSALDO06,TRB_TOTCM5=TRB_TOTCM5+@NB2_CM5 WHERE R_E_C_N_O_=@IRECNOTRT SELECT@NTRB_VFIM5=TRB_VFIM5 FROM TRT02SP WHERE R_E_C_N_O_=@IRECNOTRT END END IF(SUBSTRING(@CCOD,1,3)<><str>)AND COALESCE(@CB1_CC,<str>)=<str>BEGIN IF@NTRB_VFIM1>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM1=TRB_VFIM1/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM1=TRB_TOTCM1/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM2>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM2=TRB_VFIM2/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM2=TRB_TOTCM2/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM3>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM3=TRB_VFIM3/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM3=TRB_TOTCM3/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM4>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM4=TRB_VFIM4/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM4=TRB_TOTCM4/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN IF@NTRB_VFIM5>0 AND@NTRB_QFIM>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM5=TRB_VFIM5/@NTRB_QFIM WHERE R_E_C_N_O_=@IRECNOTRT END ELSE BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM5=TRB_TOTCM5/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END END ELSE BEGIN IF(SUBSTRING(@IN_COPCOES,1,1)<><str>)BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_QTDMOD=TRB_QTDMOD+1,TRB_TOTCM1=TRB_TOTCM1+@NB2_CM1 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM1=TRB_TOTCM1/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_TOTCM2=TRB_TOTCM2+@NB2_CM2 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM2=TRB_TOTCM2/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_TOTCM3=TRB_TOTCM3+@NB2_CM3 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM3=TRB_TOTCM3/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_TOTCM4=TRB_TOTCM4+@NB2_CM4 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM4=TRB_TOTCM4/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_TOTCM5=TRB_TOTCM5+@NB2_CM5 WHERE R_E_C_N_O_=@IRECNOTRT UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM5=TRB_TOTCM5/TRB_QTDMOD WHERE R_E_C_N_O_=@IRECNOTRT END END END END EXEC M330INB2CP_02@CFILIALCOR,@DDTINICIO,@IN_CUSUNIF,@CCOD,@CLOCAL,@NRECNO IF@IN_MV_CUSFIFO=<str>BEGIN EXEC MAT049_19_02@CCOD,@CLOCAL,@DDTINICIO,@CFILIALCOR,@NQSALDOATUFF OUTPUT,@NCUSTOATUFF01 OUTPUT,@NCUSTOATUFF02 OUTPUT,@NCUSTOATUFF03 OUTPUT,@NCUSTOATUFF04 OUTPUT,@NCUSTOATUFF05 OUTPUT,@NQT2UMFF OUTPUT SET@NB2_QFIMFF=@NQSALDOATUFF SET@NB2_VFIMFF1=0 SET@NB2_VFIMFF2=0 SET@NB2_VFIMFF3=0 SET@NB2_VFIMFF4=0 SET@NB2_VFIMFF5=0 SET@NB2_CMFF1=0 SET@NB2_CMFF2=0 SET@NB2_CMFF3=0 SET@NB2_CMFF4=0 SET@NB2_CMFF5=0 SET@NB2_VFIMFF1=@NCUSTOATUFF01 IF(@NSALDO01>0)AND(@NCUSTOATUFF01>0)BEGIN SET@NB2_CMFF1=@NB2_VFIMFF1/@NSALDO01 END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF2=@NCUSTOATUFF02 IF(@NSALDO01>0)AND(@NB2_VFIMFF2>0)BEGIN SET@NB2_CMFF2=@NB2_VFIMFF2/@NSALDO01 END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF3=@NCUSTOATUFF03 IF(@NSALDO01>0)AND(@NB2_VFIMFF3>0)BEGIN SET@NB2_CMFF3=@NB2_VFIMFF3/@NSALDO01 END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF4=@NCUSTOATUFF04 IF(@NSALDO01>0)AND(@NB2_VFIMFF4>0)BEGIN SET@NB2_CMFF4=@NB2_VFIMFF4/@NSALDO01 END END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN SET@NB2_VFIMFF5=@NCUSTOATUFF05 IF(@NSALDO01>0)AND(@NB2_VFIMFF5>0)BEGIN SET@NB2_CMFF5=@NB2_VFIMFF5/@NSALDO01 END END UPDATE SB2030 WITH(ROWLOCK)SET B2_VFIMFF1=@NB2_VFIMFF1,B2_CMFF1=@NB2_CMFF1,B2_VFIMFF2=@NB2_VFIMFF2,B2_CMFF2=@NB2_CMFF2,B2_VFIMFF3=@NB2_VFIMFF3,B2_CMFF3=@NB2_CMFF3,B2_VFIMFF4=@NB2_VFIMFF4,B2_CMFF4=@NB2_CMFF4,B2_VFIMFF5=@NB2_VFIMFF5,B2_CMFF5=@NB2_CMFF5,B2_QFIMFF=@NB2_QFIMFF WHERE R_E_C_N_O_=@NRECNO END FETCH CUR_A330INI INTO@CFIL_SB2,@CCOD,@CLOCAL,@NRECNO,@NB2_QFIM,@NB2_VFIM1,@NB2_VFIM2,@NB2_VFIM3,@NB2_VFIM4,@NB2_VFIM5,@NB2_QFIM2,@NB2_CM1,@NB2_CM2,@NB2_CM3,@NB2_CM4,@NB2_CM5,@CB1_CCCUSTO IF@IN_CUSUNIF IN(<str>,<str>)BEGIN EXEC MAT043_19_02@CFILIALCOR,@CCODORIMOD,@IN_MV_NEGESTR,@OUTRESULT OUTPUT IF(@OUTRESULT=<str>)BEGIN SELECT@NCM1AUX=TRB_CM1,@NCM2AUX=TRB_CM2,@NCM3AUX=TRB_CM3,@NCM4AUX=TRB_CM4,@NCM5AUX=TRB_CM5 FROM TRT02SP WHERE TRB_FILIAL=@CCUSFILAUX AND TRB_COD=@CCODORIMOD EXEC M330CMU_02@CFILIALCOR,@CCODORIMOD,@IN_DDATABASE,@NCM1AUX,@NCM2AUX,@NCM3AUX,@NCM4AUX,@NCM5AUX,@NTRB_CM1 OUTPUT,@NTRB_CM2 OUTPUT,@NTRB_CM3 OUTPUT,@NTRB_CM4 OUTPUT,@NTRB_CM5 OUTPUT,@CEXECUTOU OUTPUT IF(@CEXECUTOU=<str>)BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM1=COALESCE(@NTRB_CM1,0)WHERE R_E_C_N_O_=@IRECNOTRT SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM2=COALESCE(@NTRB_CM2,0)WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM3=COALESCE(@NTRB_CM3,0)WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM4=COALESCE(@NTRB_CM4,0)WHERE R_E_C_N_O_=@IRECNOTRT END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE TRT02SP WITH(ROWLOCK)SET TRB_CM5=COALESCE(@NTRB_CM5,0)WHERE R_E_C_N_O_=@IRECNOTRT END END END END END CLOSE CUR_A330INI DEALLOCATE CUR_A330INI BEGIN TRANSACTION UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIM1=C2_VINI1,C2_APRFIM1=C2_APRINI1,C2_VFIMRP1=C2_APRINI1,C2_APRFRP1=C2_APRIRP1 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIM2=C2_VINI2,C2_APRFIM2=C2_APRINI2,C2_VFIMRP2=C2_APRINI2,C2_APRFRP2=C2_APRIRP2 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIM3=C2_VINI3,C2_APRFIM3=C2_APRINI3,C2_VFIMRP3=C2_APRINI3,C2_APRFRP3=C2_APRIRP3 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIM4=C2_VINI4,C2_APRFIM4=C2_APRINI4,C2_VFIMRP4=C2_APRINI4,C2_APRFRP4=C2_APRIRP4 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIM5=C2_VINI5,C2_APRFIM5=C2_APRINI5,C2_VFIMRP5=C2_APRINI5,C2_APRFRP5=C2_APRIRP5 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END IF@IN_MV_CUSFIFO=<str>BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIMFF1=C2_VINIFF1,C2_APFIFF1=C2_APINFF1 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIMFF2=C2_VINIFF2,C2_APFIFF2=C2_APINFF2 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIMFF3=C2_VINIFF3,C2_APFIFF3=C2_APINFF3 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIMFF4=C2_VINIFF4,C2_APFIFF4=C2_APINFF4 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END SET@IPOS=CHARINDEX(<str>,@IN_MV_MOEDACM)IF@IPOS>0 BEGIN UPDATE SC2030 WITH(ROWLOCK)SET C2_VFIMFF5=C2_VINIFF5,C2_APFIFF5=C2_APINFF5 WHERE C2_FILIAL=@CFIL_SC2 AND D_E_L_E_T_=<str>AND(C2_DATRF=<str>OR C2_DATRF>=@DDTINICIO)END END COMMIT TRANSACTION EXEC M330INC2CP_02@CFILIALCOR EXEC MAT054_19_02@CFILIALCOR,@IN_CFILAUX,@DDTINICIO,@IN_MV_MOEDACM,@CMV_PAR1,@IN_MV_CUSFIFO,@OUTRESULT OUTPUT IF(@OUTRESULT=<str>)BEGIN SET@OUT_RESULTADO=<str>END END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_CODI_USUA VARCHAR(30),@P_USUA_CALC VARCHAR(30),@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_MENSAJE_ID NUMERIC(18),@P_ORIGEN VARCHAR(30),@P_ASUNTO VARCHAR(80),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@DIAV_ALAR NUMERIC(9,0),@FEAV_ALAR DATETIME,@FEAS_ALAR DATETIME,@INDI_ALUS NUMERIC(22,0),@COMP_ALUS VARCHAR(10),@VALO_ALUS NUMERIC(22,0),@CODI_USUA VARCHAR(30),@MAIL_USUA VARCHAR(80),@ESTA_ALUS VARCHAR(12),@DIAV_ALUS NUMERIC(9,0),@FEAS_ALUS DATETIME,@FEAV_ALUS DATETIME,@OBJECT_NAME VARCHAR(12),@STAT_ALUS VARCHAR(12),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SET@P_ORIGEN='DBSOFT@DBNET.CL'SET@P_CODI_USUA=DBO.DBNET_GET_USUA()SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE ALARMAS_ACTIVAS_POR_ROL CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,DIAV_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,FEAV_ALAR,FEAS_ALAR FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND FREC_ALAR!=CASE WHEN@P_TIPO_EJEC='AUTOMATICO'THEN'PERMANENTE'ELSE'99'END AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='ROL'AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_CALCULAR CURSOR FOR SELECT DISTINCT CODI_USUA FROM SYS_USRO U,SYS_ALRI A WHERE U.CODI_ROUS=A.CODI_ROUS;DECLARE ESTADO_ALARMA_POR_USUARIO CURSOR FOR SELECT CODI_ALAR,INDI_ALUS,COMP_ALUS,VALO_ALUS,CODI_USUA FROM SYS_ALUS WHERE ESTA_ALUS='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALUS,@P_FECH_ALAR)AND CODI_ALAR LIKE ISNULL(@P_CODI_ALAR,'%');DECLARE USUARIOS_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS R,USUA_SIST U WHERE R.ESTA_ALUS='ACTIVADA'AND A.ESTA_ALAR='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN R.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND R.CODI_USUA=U.CODI_USUA AND@P_FECH_ALAR>=ISNULL(R.FEAS_ALUS,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALUS='S'AND R.ORIG_ALUS='AVISAR';DECLARE ALARMAS_ANORMALES_DEL_USUARIO CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,U.ESTA_ALUS,ISNULL(A.VALO_ALAR,U.VALO_ALUS)VALO_ALUS,U.DIAV_ALUS,U.FEAS_ALUS,U.FEAV_ALUS,A.OBJECT_NAME,U.STAT_ALUS,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_ALUS U WHERE A.ESTA_ALAR='ACTIVADA'AND U.ESTA_ALUS='ACTIVADA'AND CASE WHEN A.CODI_USUA IS NULL THEN U.STAT_ALUS ELSE A.STAT_ALAR END='ANORMAL'AND U.ORIG_ALUS='AVISAR'AND A.CODI_ALAR=U.CODI_ALAR AND@P_FECH_ALAR>=ISNULL(U.FEAS_ALUS,@P_FECH_ALAR)AND@P_CODI_USUA=U.CODI_USUA AND U.MAIL_ALUS='S';DECLARE ROLES_A_AVISAR CURSOR FOR SELECT DISTINCT U.CODI_USUA,U.MAIL_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R,USUA_SIST U WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND U.CODI_USUA=UR.CODI_USUA AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND U.MAIL_USUA IS NOT NULL AND R.MAIL_ALRO='S'AND NOT EXISTS(SELECT CODI_USUA FROM SYS_ALUS S WHERE U.CODI_USUA=S.CODI_USUA AND S.ORIG_ALUS='AVISAR');DECLARE ALARMAS_ANORMALES_USUARIO_ROL CURSOR FOR SELECT DISTINCT A.CODI_ALAR,A.DESC_ALAR,A.ESTA_ALAR,A.VALO_ALAR VALO_ALUS,A.DIAV_ALAR,A.FEAS_ALAR,A.OBJECT_NAME,A.STAT_ALAR,A.CODI_USUA FROM SYS_ALAR_ALUS A,SYS_USRO UR,SYS_ALRO R WHERE A.ESTA_ALAR='ACTIVADA'AND A.STAT_ALAR='ANORMAL'AND A.CODI_ALAR=R.CODI_ALAR AND UR.CODI_ROUS=R.CODI_ROUS AND@P_FECH_ALAR>=ISNULL(A.FEAS_ALAR,@P_FECH_ALAR)AND@P_CODI_USUA=UR.CODI_USUA AND R.MAIL_ALRO='S';DECLARE CURSOR_UPDATE_SYS_ALUS CURSOR FOR SELECT FREC_ALAR,COMP_ALUS,VALO_ALAR,FECH_ALAR,FESI_ALAR FROM SYS_ALAR A,SYS_ALUS B WHERE B.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR;OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO OPEN ALARMAS_ACTIVAS_POR_ROL FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO SYS_ALUS(CODI_ALAR,CODI_USUA,ORIG_ALUS,PRIO_ALUS,FREC_ALUS,ESTA_ALUS,INDI_ALUS,COMP_ALUS,VALO_ALUS,FECH_ALUS,FESI_ALUS,FEAV_ALUS,DIAV_ALUS,FEAS_ALUS,STAT_ALUS,ERRO_ALUS)SELECT A.CODI_ALAR,R.CODI_USUA,'CALCULAR',PRIO_ALAR,FREC_ALAR,ESTA_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,FESI_ALAR,FEAV_ALAR,DIAV_ALAR,FEAS_ALAR,STAT_ALAR,ERRO_ALAR FROM SYS_USRO R,SYS_ALRI AR,SYS_ALAR A WHERE@CODI_ALAR=AR.CODI_ALAR AND R.CODI_ROUS=AR.CODI_ROUS AND A.CODI_ALAR=AR.CODI_ALAR AND NOT EXISTS(SELECT CODI_ALAR FROM SYS_ALUS A WHERE CODI_USUA=R.CODI_USUA AND ORIG_ALUS='CALCULAR'AND CODI_ALAR=@CODI_ALAR)UPDATE SYS_ALUS SET INDI_ALUS=@INDI_ALAR,FECH_ALUS=@FECH_ALAR,FEAV_ALUS=@FEAV_ALAR,FEAS_ALUS=@FEAS_ALAR,DIAV_ALUS=@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND ORIG_ALUS='CALCULAR'EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT OPEN USUARIOS_A_CALCULAR FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@P_VALO_ALAR+@COMP_ALAR+@INDI_ALAR;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET VALO_ALUS=@P_VALO_ALAR,FESI_ALUS=@P_FESI_ALAR,FECH_ALUS=@P_FECH_ALAR,STAT_ALUS=@P_STAT_ALAR,ERRO_ALUS=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC END ELSE UPDATE SYS_ALUS SET ERRO_ALUS=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_USUA_CALC FETCH NEXT FROM USUARIOS_A_CALCULAR INTO@P_USUA_CALC END CLOSE USUARIOS_A_CALCULAR UPDATE SYS_ALAR SET FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR WHERE CODI_ALAR=@CODI_ALAR FETCH NEXT FROM ALARMAS_ACTIVAS_POR_ROL INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@DIAV_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@FEAV_ALAR,@FEAS_ALAR END CLOSE ALARMAS_ACTIVAS_POR_ROL DEALLOCATE USUARIOS_A_CALCULAR DEALLOCATE ALARMAS_ACTIVAS_POR_ROL OPEN CURSOR_UPDATE_SYS_ALUS FETCH NEXT FROM CURSOR_UPDATE_SYS_ALUS INTO@FREC_ALAR,@COMP_ALUS,@VALO_ALAR,@FECH_ALAR,@FESI_ALAR WHILE@@FETCH_STATUS=0 BEGIN UPDATE SYS_ALUS SET FREC_ALUS=@FREC_ALAR,COMP_ALUS=@COMP_ALUS,VALO_ALUS=@VALO_ALAR,FECH_ALUS=@FECH_ALAR,FESI_ALUS=@FESI_ALAR WHERE ORIG_ALUS='AVISAR'AND ESTA_ALUS='ACTIVADA'AND EXISTS(SELECT CODI_ALAR FROM SYS_ALAR A WHERE SYS_ALUS.CODI_ALAR=A.CODI_ALAR AND ESTA_ALAR='ACTIVADA'AND FECH_ALAR=@P_FECH_ALAR)END CLOSE CURSOR_UPDATE_SYS_ALUS DEALLOCATE CURSOR_UPDATE_SYS_ALUS OPEN ESTADO_ALARMA_POR_USUARIO FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+@VALO_ALUS+@COMP_ALUS+@INDI_ALUS;EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='1'BEGIN SET@P_STAT_ALAR='ANORMAL';END ELSE SET@P_STAT_ALAR='NORMAL';UPDATE SYS_ALUS SET STAT_ALUS=@P_STAT_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@CODI_USUA AND ORIG_ALUS='AVISAR';FETCH NEXT FROM ESTADO_ALARMA_POR_USUARIO INTO@CODI_ALAR,@INDI_ALUS,@COMP_ALUS,@VALO_ALUS,@CODI_USUA END CLOSE ESTADO_ALARMA_POR_USUARIO DEALLOCATE ESTADO_ALARMA_POR_USUARIO OPEN USUARIOS_A_AVISAR FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_DEL_USUARIO FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+@VALO_ALUS+CHAR(10);END ELSE SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+@VALO_ALUS+CHAR(10);UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALUS WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_DEL_USUARIO INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALUS,@VALO_ALUS,@DIAV_ALUS,@FEAS_ALUS,@FEAV_ALUS,@OBJECT_NAME,@STAT_ALUS,@CODI_USUA END CLOSE ALARMAS_ANORMALES_DEL_USUARIO SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM USUARIOS_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA END CLOSE USUARIOS_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_DEL_USUARIO DEALLOCATE USUARIOS_A_AVISAR OPEN ROLES_A_AVISAR FETCH NEXT FROM ROLES_A_AVISAR INTO@P_CODI_USUA,@MAIL_USUA WHILE@@FETCH_STATUS=0 BEGIN SET@P_MENSAJE='';OPEN ALARMAS_ANORMALES_USUARIO_ROL FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA WHILE@@FETCH_STATUS=0 BEGIN PRINT'2'IF@CODI_USUA IS NOT NULL BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'PARA USUARIO'+@CODI_USUA+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END ELSE BEGIN SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+'VALOR :'+CONVERT(VARCHAR,@VALO_ALUS)+CHAR(10);END UPDATE SYS_ALAR SET FEAV_ALAR=@P_FECH_ALAR,FEAS_ALAR=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR;UPDATE SYS_ALUS SET FEAV_ALUS=@P_FECH_ALAR,FEAS_ALUS=@P_FECH_ALAR+@DIAV_ALAR WHERE CODI_ALAR=@CODI_ALAR AND CODI_USUA=@P_CODI_USUA;FETCH NEXT FROM ALARMAS_ANORMALES_USUARIO_ROL INTO@CODI_ALAR,@DESC_ALAR,@ESTA_ALAR,@VALO_ALUS,@DIAV_ALAR,@FEAS_ALAR,@OBJECT_NAME,@STAT_ALAR,@CODI_USUA END CLOSE ALARMAS_ANORMALES_USUARIO_ROL SET@P_ASUNTO='ALARMA DE DBSOFT';SET@P_DESTINO=@MAIL_USUA;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT FETCH NEXT FROM ROLES_A_AVISAR INTO@CODI_USUA,@MAIL_USUA END CLOSE ROLES_A_AVISAR DEALLOCATE ALARMAS_ANORMALES_USUARIO_ROL DEALLOCATE ROLES_A_AVISAR END GO
facture	[dbo].[alar_ejec_suite]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	isnull	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ALAR_EJEC_SUITE')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_EJEC_SUITE AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_EJEC_SUITE(@P_FECH_ALAR DATETIME,@P_TIPO_EJEC VARCHAR(200),@P_CODI_ALAR VARCHAR(200),@P_ERRO VARCHAR(1)OUTPUT,@P_MENS VARCHAR(200)OUTPUT)AS BEGIN DECLARE@P_VALO_ALAR NUMERIC(22,0),@P_VALO_ALAR1 NUMERIC(22),@P_ERRO_ALAR VARCHAR(300),@P_ERRO_ALAR1 VARCHAR(300),@P_STAT VARCHAR(1),@EXISTE VARCHAR(1),@MENSAJE VARCHAR(200),@P_MENSAJE_ID NUMERIC(18),@P_FESI_ALAR DATETIME,@P_SQL VARCHAR(200),@P_STAT_ALAR VARCHAR(12),@P_MENSAJE VARCHAR(2000),@P_ORIGEN VARCHAR(80),@P_ASUNTO VARCHAR(100),@P_DESTINO VARCHAR(80),@P_NUME_REGI INTEGER,@CODI_ALAR VARCHAR(30),@CODI_ALAR2 VARCHAR(30),@DESC_ALAR VARCHAR(80),@SQLC_ALAR VARCHAR(2000),@SQLI_ALAR VARCHAR(2000),@FREC_ALAR VARCHAR(10),@INDI_ALAR NUMERIC(22),@COMP_ALAR VARCHAR(10),@VALO_ALAR NUMERIC(22),@FECH_ALAR DATETIME,@STAT_ALAR VARCHAR(10),@ERRO_ALAR VARCHAR(300),@MAIL_INFO VARCHAR(300),@ESTA_ALAR VARCHAR(12),@FESI_ALAR DATETIME SELECT@P_FECH_ALAR=CONVERT(DATETIME,LPAD(CONVERT(VARCHAR,DATEPART(DAY,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(MONTH,@P_FECH_ALAR)),2,'0')+'-'+LPAD(CONVERT(VARCHAR,DATEPART(YEAR,@P_FECH_ALAR)),4,'0'),105)DECLARE ALARMAS_ACTIVAS_POR_PROCESO CURSOR FOR SELECT CODI_ALAR,DESC_ALAR,SQLC_ALAR,SQLI_ALAR,FREC_ALAR,INDI_ALAR,COMP_ALAR,VALO_ALAR,FECH_ALAR,STAT_ALAR,ERRO_ALAR,MAIL_INFO FROM SYS_ALAR WHERE ESTA_ALAR='ACTIVADA'AND@P_FECH_ALAR>=ISNULL(FESI_ALAR,@P_FECH_ALAR)AND TIPO_ALAR='PROCESO'OPEN ALARMAS_ACTIVAS_POR_PROCESO FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@MAIL_INFO WHILE@@FETCH_STATUS=0 BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR='N';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLC_ALAR,@P_VALO_ALAR OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_STAT='S'BEGIN EXECUTE ALAR_FECH_SIGU@FECH_ALAR,@FREC_ALAR,@P_FESI_ALAR OUTPUT,@EXISTE OUTPUT,@MENSAJE OUTPUT SET@P_SQL='SELECT COUNT(*)FROM DUAL WHERE';SET@P_SQL=@P_SQL+CONVERT(VARCHAR,@P_VALO_ALAR)+@COMP_ALAR+CONVERT(VARCHAR,@INDI_ALAR);EXECUTE ALAR_SQL_DYN@P_SQL,@P_VALO_ALAR1 OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT IF@P_VALO_ALAR1='0'SET@P_STAT_ALAR='NORMAL';ELSE BEGIN SET@P_STAT_ALAR='ANORMAL';IF@SQLI_ALAR IS NOT NULL BEGIN SET@P_STAT='S';SET@P_ERRO_ALAR1='';EXECUTE ALAR_SQL_DYN@SQLI_ALAR,@P_NUME_REGI OUTPUT,@P_STAT OUTPUT,@P_ERRO_ALAR OUTPUT END END UPDATE SYS_ALAR SET VALO_ALAR=@P_VALO_ALAR,FESI_ALAR=@P_FESI_ALAR,FECH_ALAR=@P_FECH_ALAR,STAT_ALAR=@P_STAT_ALAR,ERRO_ALAR=@P_ERRO_ALAR1 WHERE CODI_ALAR=@CODI_ALAR END ELSE BEGIN UPDATE SYS_ALAR SET ERRO_ALAR=@P_ERRO_ALAR WHERE CODI_ALAR=@CODI_ALAR;END IF@P_VALO_ALAR1!='0'BEGIN SELECT@P_ORIGEN=VALO_PAEM FROM PARA_EMPR WHERE CODI_EMPR=1 AND CODI_PAEM='EGME'IF(@@ERROR<>0)BEGIN SET@P_ORIGEN='CLIENTE_SIN_EMAIL_EMPR@DBSOFT.CL'END SET@P_MENSAJE=''SET@P_MENSAJE=@P_MENSAJE+''+@DESC_ALAR+CHAR(10)+'.REVISAR ALARMA EN SUITE ELECTRONICA';SET@P_ASUNTO='ALARMA DE SUITE-'+@DESC_ALAR;SET@P_DESTINO=@MAIL_INFO;EXECUTE PUT_EMAIL@P_ORIGEN,@P_DESTINO,NULL,@P_ASUNTO,@P_MENSAJE,@P_MENSAJE_ID OUTPUT END FETCH NEXT FROM ALARMAS_ACTIVAS_POR_PROCESO INTO@CODI_ALAR,@DESC_ALAR,@SQLC_ALAR,@SQLI_ALAR,@FREC_ALAR,@INDI_ALAR,@COMP_ALAR,@VALO_ALAR,@FECH_ALAR,@STAT_ALAR,@ERRO_ALAR,@MAIL_INFO END CLOSE ALARMAS_ACTIVAS_POR_PROCESO DEALLOCATE ALARMAS_ACTIVAS_POR_PROCESO END GO
facture	[dbo].[alar_sql_dyn]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID('DBO.ALAR_SQL_DYN')IS NULL EXEC('CREATE PROCEDURE DBO.ALAR_SQL_DYN AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ALAR_SQL_DYN@P_SQL VARCHAR(4000),@P_NRO INT OUTPUT,@P_STAT VARCHAR(10)OUTPUT,@P_MSG VARCHAR(100)OUTPUT AS DECLARE@SQL NVARCHAR(4000),@SQL_DYN INT,@VERROR NVARCHAR(4000)BEGIN BEGIN SET@P_STAT='S'SET@P_MSG=NULL IF(UPPER(SUBSTRING(@P_SQL,1,1))='S')BEGIN SELECT@SQL=N'SELECT@P_NRO=('+@P_SQL+')'EXECUTE@SQL_DYN=SP_EXECUTESQL@SQL,N'@P_NRO INT OUTPUT',@P_NRO OUTPUT SET@VERROR=CONVERT(VARCHAR,@@ERROR);END ELSE BEGIN SELECT@SQL=@P_SQL SET@SQL=@SQL+'SET@P_NRO=@@ROWCOUNT'EXECUTE@SQL_DYN=SP_EXECUTESQL@SQL,N'@P_NRO INT OUTPUT',@P_NRO OUTPUT SET@VERROR=CONVERT(VARCHAR,@@ERROR);END END IF@VERROR<>0 OR@SQL_DYN=1 BEGIN SET@P_STAT='N'SET@P_MSG='ERROR:'+@VERROR END END GO
facture	[dbo].[dbnet_cmd]	Warning	Xp_cmdshell	Using Xp_cmdshell	Xp_cmdshell	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID('DBO.DBNET_CMD')IS NULL EXEC('CREATE PROCEDURE DBO.DBNET_CMD AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBNET_CMD@COMANDO VARCHAR(200),@PARAMETROS VARCHAR(200)AS DECLARE@CMD VARCHAR(400)BEGIN SET@CMD=@COMANDO+''+@PARAMETROS EXEC MASTER..XP_CMDSHELL@CMD END GO
facture	[dbo].[dbnet_ejec_cmd]	Warning	Xp_cmdshell	Using Xp_cmdshell	Xp_cmdshell	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID('DBO.DBNET_EJEC_CMD')IS NULL EXEC('CREATE PROCEDURE DBO.DBNET_EJEC_CMD AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBNET_EJEC_CMD@P_COMANDO VARCHAR(255),@P_PARAMETRO VARCHAR(255),@P_ENTORNO VARCHAR(255),@P_ERROR VARCHAR(1)OUTPUT,@P_MENSAJE VARCHAR(255)OUTPUT AS DECLARE@V_COMANDO VARCHAR(255)BEGIN SET@P_ERROR='N'SET@V_COMANDO='%'+@P_ENTORNO+'%\BIN\'+@P_COMANDO+''+@P_PARAMETRO+'-H'+@P_ENTORNO PRINT@V_COMANDO EXEC MASTER..XP_CMDSHELL@V_COMANDO END GO
facture	[dbo].[dte_dequeue_arch]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_ARCH@CODISERV VARCHAR(30)AS SET NOCOUNT ON;WITH CTE AS(SELECT TOP(1)CODI_ARCH,ESTA_ARCH,TMST_PROC_ARCH,CONT_PROC_ARCH FROM DBQ_ARCH WITH(ROWLOCK,READPAST,INDEX=DBQ_ARCH_PROCESOS)WHERE CODI_SERV=@CODISERV AND ISNULL(CONT_PROC_ARCH,0)<=50 AND((ESTA_ARCH=<str>AND TMST_PROC_ARCH<GETDATE())OR(ESTA_ARCH IN(<str>,<str>)AND DATEDIFF(MINUTE,TMST_PROC_ARCH,GETDATE())>5))ORDER BY CODI_ARCH,TMST_REGI_ARCH)UPDATE CTE SET ESTA_ARCH=<str>,TMST_PROC_ARCH=GETDATE()+(2.0/(24.0*60.0)),CONT_PROC_ARCH=ISNULL(CONT_PROC_ARCH,0)+1 OUTPUT INSERTED.CODI_ARCH;GO
facture	[dbo].[dte_dequeue_arch_grpo]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_ARCH_GRPO@CODIGRPO VARCHAR(30)AS SET NOCOUNT ON;SELECT CODI_ARCH,NOMB_ARCH,EXTE_ARCH,TIPO_ARCH,PK01_TABL,PK02_TABL FROM DBQ_ARCH WITH(READPAST)WHERE CODI_GRPO=@CODIGRPO ORDER BY CODI_ARCH,TMST_REGI_ARCH GO
facture	[dbo].[dte_dequeue_cana]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_CANA@TRANCANA VARCHAR(10)AS SET NOCOUNT ON;WITH CTE AS(SELECT TOP(1)CODI_CANA,ESTA_CANA,TMST_PROC_CANA FROM DBQ_CANA WITH(ROWLOCK,READPAST)WHERE TRAN_CANA=@TRANCANA AND((ESTA_CANA=<str>AND DATEDIFF(SECOND,TMST_PROC_CANA,GETDATE())>5)OR(ESTA_CANA=<str>AND DATEDIFF(MINUTE,TMST_PROC_CANA,GETDATE())>3))AND VIGE_CANA=<str>ORDER BY TMST_PROC_CANA ASC)UPDATE CTE SET ESTA_CANA=<str>,TMST_PROC_CANA=GETDATE()+(2.0/(24.0*240.0))OUTPUT INSERTED.CODI_CANA;GO
facture	[dbo].[dte_dequeue_grpo]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_GRPO@CODISERV VARCHAR(30)AS SET NOCOUNT ON;WITH CTE AS(SELECT TOP(1)CODI_GRPO,ESTA_GRPO,TMST_PROC_GRPO,CONT_PROC_GRPO FROM DBQ_GRPO WITH(ROWLOCK,READPAST)WHERE CODI_SERV=@CODISERV AND ISNULL(CONT_PROC_GRPO,0)<=50 AND((ESTA_GRPO=<str>AND TMST_PROC_GRPO<GETDATE())OR(ESTA_GRPO=<str>AND DATEDIFF(MINUTE,TMST_PROC_GRPO,GETDATE())>5))ORDER BY CODI_GRPO,TMST_REGI_GRPO)UPDATE CTE SET ESTA_GRPO=<str>,TMST_PROC_GRPO=GETDATE()+(2.0/(24.0*60.0)),CONT_PROC_GRPO=ISNULL(CONT_PROC_GRPO,0)+1 OUTPUT INSERTED.CODI_GRPO;GO
facture	[dbo].[dte_dequeue_grpo_cana]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_GRPO_CANA@CODISERV VARCHAR(30),@NOMBCANA VARCHAR(30)AS SET NOCOUNT ON;UPDATE DBQ_CANA SET TMST_PROC_CANA=GETDATE()+(2.0/(24.0*60.0))WHERE NOMB_CANA=@NOMBCANA;WITH CTE AS(SELECT TOP(1)CODI_GRPO,ESTA_GRPO,TMST_PROC_GRPO,CONT_PROC_GRPO FROM DBQ_GRPO WITH(ROWLOCK,READPAST)WHERE CODI_SERV=@CODISERV AND NOMB_CANA=@NOMBCANA AND ISNULL(CONT_PROC_GRPO,0)<=50 AND((ESTA_GRPO=<str>AND TMST_PROC_GRPO<GETDATE())OR(ESTA_GRPO=<str>AND DATEDIFF(MINUTE,TMST_PROC_GRPO,GETDATE())>5))ORDER BY CODI_GRPO,TMST_REGI_GRPO)UPDATE CTE SET ESTA_GRPO=<str>,TMST_PROC_GRPO=GETDATE()+(2.0/(24.0*60.0)),CONT_PROC_GRPO=ISNULL(CONT_PROC_GRPO,0)+1 OUTPUT INSERTED.CODI_GRPO;GO
facture	[dbo].[dte_dequeue_qse]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_QSE@CODISERV VARCHAR(30)AS SET NOCOUNT ON;WITH CTE AS(SELECT TOP(1)CODI_DOPR,ESTA_PROC,TIME_PROC,CANT_PROC FROM QSE_DOCU_SERV WITH(ROWLOCK,READPAST)WHERE CODI_SERV=@CODISERV AND ISNULL(CANT_PROC,0)<50 AND((ESTA_PROC=<str>AND TIME_PROC<GETDATE())OR(ESTA_PROC IN(<str>,<str>)AND DATEDIFF(MINUTE,TIME_PROC,GETDATE())>10))ORDER BY CODI_EMPR,TIPO_DOCU,FOLI_DOCU)UPDATE CTE SET ESTA_PROC=<str>,TIME_PROC=GETDATE()+(2.0/(24.0*60.0)),CANT_PROC=ISNULL(CANT_PROC,0)+1 OUTPUT INSERTED.CODI_DOPR;GO
facture	[dbo].[dte_dequeue_qse_cana]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_QSE_CANA@CODISERV VARCHAR(30),@NOMBCANA VARCHAR(30)AS SET NOCOUNT ON;UPDATE DBQ_CANA SET TMST_PROC_CANA=GETDATE()WHERE NOMB_CANA=@NOMBCANA;WITH CTE AS(SELECT TOP(1)CODI_DOPR,ESTA_PROC,TIME_PROC,CANT_PROC FROM QSE_DOCU_SERV WITH(ROWLOCK,READPAST)WHERE CODI_SERV=@CODISERV AND TABL_ESTA=@NOMBCANA AND ISNULL(CANT_PROC,0)<50 AND((ESTA_PROC=<str>AND TIME_PROC<GETDATE())OR(ESTA_PROC=<str>AND DATEDIFF(MINUTE,TIME_PROC,GETDATE())>5))ORDER BY CODI_EMPR,TIPO_DOCU,FOLI_DOCU)UPDATE CTE SET ESTA_PROC=<str>,TIME_PROC=GETDATE()+(2.0/(24.0*60.0)),CANT_PROC=ISNULL(CANT_PROC,0)+1 OUTPUT INSERTED.CODI_DOPR;GO
facture	[dbo].[dte_dequeue_qse_esta]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_QSE_ESTA@CODISERV VARCHAR(30),@ESTAPROC VARCHAR(30),@NUMDIFF NUMERIC(10),@CANTPROC NUMERIC(5)AS SET NOCOUNT ON;WITH CTE AS(SELECT TOP(1)CODI_DOPR,ESTA_PROC,TIME_PROC,CANT_PROC FROM QSE_DOCU_SERV WITH(ROWLOCK,READPAST)WHERE CODI_SERV=@CODISERV AND ISNULL(CANT_PROC,0)<=@CANTPROC AND ESTA_PROC=@ESTAPROC AND DATEDIFF(MINUTE,TIME_PROC,GETDATE())>=@NUMDIFF ORDER BY CODI_EMPR,TIPO_DOCU,FOLI_DOCU)UPDATE CTE SET ESTA_PROC=<str>,TIME_PROC=GETDATE()+(2.0/(24.0*60.0)),CANT_PROC=ISNULL(CANT_PROC,0)+1 OUTPUT INSERTED.CODI_DOPR;GO
facture	[dbo].[dte_dequeue_recl]	Warning	UnsupportedHint	READPAST hint	READPAST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DTE_DEQUEUE_RECL AS SET NOCOUNT ON;WITH CTE AS(SELECT TOP(1)CORR_EVNT,ESTA_EVNT,FECH_PROC_EVNT,CONT_PROC_EVNT FROM DTE_PROC_EVNT WITH(ROWLOCK,READPAST)WHERE((ESTA_EVNT=<str>AND DATEDIFF(MINUTE,FECH_PROC_EVNT,GETDATE())>5)OR(ESTA_EVNT IN(<str>)AND DATEDIFF(MINUTE,FECH_PROC_EVNT,GETDATE())>10))AND ISNULL(CONT_PROC_EVNT,0)<=50 ORDER BY CORR_EVNT,FECH_EVNT)UPDATE CTE SET ESTA_EVNT=<str>,FECH_PROC_EVNT=GETDATE()+(2.0/(24.0*60.0)),CONT_PROC_EVNT=ISNULL(CONT_PROC_EVNT,0)+1 OUTPUT INSERTED.CORR_EVNT;GO
facture	[dbo].[PRC_ACTU_DOCU]	Warning	Execute	Using dynamic SQL	EXEC(@SENT_SQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.PRC_ACTU_DOCU@P_CORR NUMERIC,@P_WHERE VARCHAR,@P_CODI_ERRO VARCHAR OUTPUT,@P_MENS_ERRO VARCHAR OUTPUT AS DECLARE@SENT_SQL VARCHAR(1000)DECLARE@V_CODI_ERRO VARCHAR(1)DECLARE@V_MENS_ERRO VARCHAR(100)BEGIN SET@V_CODI_ERRO=<str>SET@V_MENS_ERRO=<str>BEGIN BEGIN TRANSACTION SELECT@SENT_SQL=<str>+CONVERT(VARCHAR,@P_CORR)+<str>+@P_WHERE EXEC(@SENT_SQL)COMMIT IF@@TRANCOUNT>0 BEGIN ROLLBACK SET@V_CODI_ERRO=<str>SET@V_MENS_ERRO=<str>END END SET@P_CODI_ERRO=@V_CODI_ERRO SET@P_MENS_ERRO=@V_MENS_ERRO END GO
facture	[dbo].[PRC_ACTUALIZA_QSE_ERN]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY B.ESTA_ENVI,A.CODI_EMEX	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.PRC_ACTUALIZA_QSE_ERN AS BEGIN IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME=<str>)DROP TABLE TABLATEMP SELECT A.CODI_EMEX,A.CODI_EMPR,A.TIPO_DOCU,A.FOLI_DOCU,A.ESTA_DOCU,A.MENS_ESTA,A.FECH_EMIS,B.ESTA_ENVI,B.MENS_ENVI,B.NUME_ATEN,B.FEHO_ENVI,B.CORR_ENVI,Q.CODI_SERV,Q.ESTA_PROC INTO TABLATEMP FROM DTE_ENCA_DOCU A,DTE_ENVI_DOCU B,QSE_DOCU_SERV Q WHERE A.CORR_ENVI=B.CORR_ENVI AND Q.CODI_EMEX=A.CODI_EMEX AND Q.CODI_EMPR=A.CODI_EMPR AND A.TIPO_DOCU=Q.TIPO_DOCU AND A.FOLI_DOCU=Q.FOLI_DOCU AND FECH_EMIS><str>AND Q.ESTA_PROC=<str>AND Q.CODI_SERV=<str>AND ESTA_DOCU NOT IN(<str>,<str>,<str>)AND ESTA_ENVI IN(<str>,<str>)ORDER BY B.ESTA_ENVI,A.CODI_EMEX UPDATE QSE_DOCU_SERV SET ESTA_PROC=<str>,ULTI_ERRO=MENS_ENVI FROM QSE_DOCU_SERV A INNER JOIN TABLATEMP B ON A.CODI_EMEX=B.CODI_EMEX AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU DROP TABLE TABLATEMP END GO
facture	[dbo].[PRC_ACTUALIZA_QSE_ERN]	Information	SelectIntoWithOrderBy	Select Into with Order By clause	b.esta_envi, ; ; ; a.codi_emex	SELECT A.CODI_EMEX,A.CODI_EMPR,A.TIPO_DOCU,A.FOLI_DOCU,A.ESTA_DOCU,A.MENS_ESTA,A.FECH_EMIS,B.ESTA_ENVI,B.MENS_ENVI,B.NUME_ATEN,B.FEHO_ENVI,B.CORR_ENVI,Q.CODI_SERV,Q.ESTA_PROC INTO TABLATEMP FROM DTE_ENCA_DOCU A,DTE_ENVI_DOCU B,QSE_DOCU_SERV Q WHERE A.CORR_ENVI=B.CORR_ENVI AND Q.CODI_EMEX=A.CODI_EMEX AND Q.CODI_EMPR=A.CODI_EMPR AND A.TIPO_DOCU=Q.TIPO_DOCU AND A.FOLI_DOCU=Q.FOLI_DOCU AND FECH_EMIS>'2012-08-01'AND Q.ESTA_PROC='ESP'AND Q.CODI_SERV='DTE_ENVI_SII'AND ESTA_DOCU NOT IN('DOK','RPR','RLV')AND ESTA_ENVI IN('RCT','RSC')ORDER BY B.ESTA_ENVI,A.CODI_EMEX
facture	[dbo].[PRC_ACTUALIZA_QSE_ERN_CLIE]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY B.ESTA_ENVI,A.CODI_EMEX	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.PRC_ACTUALIZA_QSE_ERN_CLIE AS BEGIN IF EXISTS(SELECT NAME FROM SYSOBJECTS WHERE NAME=<str>)DROP TABLE TABLATEMP SELECT A.CODI_EMEX,A.CODI_EMPR,A.TIPO_DOCU,A.FOLI_DOCU,A.ESTA_DOCU1,A.FECH_EMIS,Q.CODI_SERV,Q.ESTA_PROC INTO TABLATEMP FROM DTE_ENCA_DOCU A,QSE_DOCU_SERV Q WHERE Q.CODI_EMEX=A.CODI_EMEX AND Q.CODI_EMPR=A.CODI_EMPR AND A.TIPO_DOCU=Q.TIPO_DOCU AND A.FOLI_DOCU=Q.FOLI_DOCU AND FECH_EMIS><str>AND Q.ESTA_PROC=<str>AND Q.CODI_SERV=<str>AND ESTA_DOCU1 IN(<str>,<str>,<str>,<str>,<str>)UPDATE QSE_DOCU_SERV SET ESTA_PROC=<str>FROM QSE_DOCU_SERV A INNER JOIN TABLATEMP B ON A.CODI_EMEX=B.CODI_EMEX AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU DELETE QSE_DOCU_SERV WHERE ESTA_PROC=<str>DROP TABLE TABLATEMP SELECT A.CODI_EMEX,A.CODI_EMPR,A.TIPO_DOCU,A.FOLI_DOCU,A.ESTA_DOCU1,A.FECH_EMIS,Q.CODI_SERV,Q.ESTA_PROC INTO TABLATEMP FROM DTE_ENCA_DOCU A,QSE_DOCU_SERV Q WHERE Q.CODI_EMEX=A.CODI_EMEX AND Q.CODI_EMPR=A.CODI_EMPR AND A.TIPO_DOCU=Q.TIPO_DOCU AND A.FOLI_DOCU=Q.FOLI_DOCU AND FECH_EMIS><str>AND Q.ESTA_PROC=<str>AND Q.CODI_SERV=<str>AND A.ESTA_DOCU1 IN(<str>,<str>,<str>,<str>)UPDATE QSE_DOCU_SERV SET ESTA_PROC=<str>,ULTI_ERRO=B.ESTA_DOCU1 FROM QSE_DOCU_SERV A INNER JOIN TABLATEMP B ON A.CODI_EMEX=B.CODI_EMEX AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU DROP TABLE TABLATEMP SELECT A.CODI_EMEX,A.CODI_EMPR,A.TIPO_DOCU,A.FOLI_DOCU,A.ESTA_DOCU1,A.MENS_ESTA,A.FECH_EMIS,B.ESTA_ENVI,B.MENS_ENVI,B.NUME_ATEN,B.FEHO_ENVI,B.CORR_ENVI,Q.CODI_SERV,Q.ESTA_PROC INTO TABLATEMP FROM DTE_ENCA_DOCU A,DTE_ENVI_DOCU B,QSE_DOCU_SERV Q WHERE A.CORR_ENVI1=B.CORR_ENVI AND Q.CODI_EMEX=A.CODI_EMEX AND Q.CODI_EMPR=A.CODI_EMPR AND A.TIPO_DOCU=Q.TIPO_DOCU AND A.FOLI_DOCU=Q.FOLI_DOCU AND FECH_EMIS><str>AND Q.ESTA_PROC=<str>AND Q.CODI_SERV=<str>AND A.ESTA_DOCU1 NOT IN(<str>)AND B.ESTA_ENVI IN(<str>,<str>,<str>,<str>,<str>,<str>)ORDER BY B.ESTA_ENVI,A.CODI_EMEX UPDATE QSE_DOCU_SERV SET ESTA_PROC=<str>,ULTI_ERRO=B.MENS_ENVI FROM QSE_DOCU_SERV A INNER JOIN TABLATEMP B ON A.CODI_EMEX=B.CODI_EMEX AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU DROP TABLE TABLATEMP END GO
facture	[dbo].[PRC_ACTUALIZA_QSE_ERN_CLIE]	Information	SelectIntoWithOrderBy	Select Into with Order By clause	b.esta_envi, ; ; ; a.codi_emex	SELECT A.CODI_EMEX,A.CODI_EMPR,A.TIPO_DOCU,A.FOLI_DOCU,A.ESTA_DOCU1,A.MENS_ESTA,A.FECH_EMIS,B.ESTA_ENVI,B.MENS_ENVI,B.NUME_ATEN,B.FEHO_ENVI,B.CORR_ENVI,Q.CODI_SERV,Q.ESTA_PROC INTO TABLATEMP FROM DTE_ENCA_DOCU A,DTE_ENVI_DOCU B,QSE_DOCU_SERV Q WHERE A.CORR_ENVI1=B.CORR_ENVI AND Q.CODI_EMEX=A.CODI_EMEX AND Q.CODI_EMPR=A.CODI_EMPR AND A.TIPO_DOCU=Q.TIPO_DOCU AND A.FOLI_DOCU=Q.FOLI_DOCU AND FECH_EMIS>'2012-08-01'AND Q.ESTA_PROC='ESP'AND Q.CODI_SERV='DTE_ENVI_CLIE'AND A.ESTA_DOCU1 NOT IN('DOK')AND B.ESTA_ENVI IN('ROC','SCM','RRE','FRM','RRA','ERR')ORDER BY B.ESTA_ENVI,A.CODI_EMEX
facture	[dbo].[prc_list_dyn]	Warning	Execute	Using dynamic SQL	EXEC(@LSSQL1	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.PRC_LIST_DYN(@TSSQL VARCHAR(8000),@TNPAGINA AS INTEGER,@TNREGPAG AS INTEGER)AS DECLARE@LSSQL1 AS VARCHAR(8000)DECLARE@LSPAGINA AS VARCHAR(15)DECLARE@LSREGPAG AS VARCHAR(15)DECLARE@LSSQLVAR1 AS VARCHAR(4000)DECLARE@LSSQLVAR2 AS VARCHAR(4000)BEGIN SET@LSPAGINA=CONVERT(VARCHAR(15),@TNPAGINA)SET@LSREGPAG=CONVERT(VARCHAR(15),@TNREGPAG)SET@LSSQL1=<str>+@LSREGPAG+<str>+@TSSQL+<str>+@LSREGPAG+<str>+@TSSQL+<str>+@TSSQL+<str>+STR((@TNPAGINA-1)*@TNREGPAG+1)+<str>+STR(@TNPAGINA*@TNREGPAG);SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,<str>,<str>)SET@LSSQL1=REPLACE(@LSSQL1,CHAR(10)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(10)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(10)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(13)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(13)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(13)+CHAR(9),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(10),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(10),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(10),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(13),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(13),CHAR(9))SET@LSSQL1=REPLACE(@LSSQL1,CHAR(9)+CHAR(13),CHAR(9))EXEC(@LSSQL1)END GO
facture	[dbo].[prc_resu_boel]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY A.TIPO_DOCU,A.FOLI_DOCU	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.PRC_RESU_BOEL(@P_CODI_EMPR VARCHAR(9),@P_RUTT_ENVI VARCHAR(10),@P_DIGI_ENVI VARCHAR(1),@P_FECH_INIC VARCHAR(10),@P_FECH_FINA VARCHAR(10),@LUGAR VARCHAR(200)OUTPUT,@P_CODI_ERRI VARCHAR(1)OUTPUT,@P_MENS_ERRO VARCHAR(200)OUTPUT)AS BEGIN BEGIN TRANSACTION DECLARE@V_RUTT_PERS NUMERIC(9),@V_DGTO_PERS VARCHAR(1),@V_FECH_INIC VARCHAR(10),@V_FECH_FINA VARCHAR(10),@V_SECU_ENVI NUMERIC(3),@V_RUTT_EMPR NUMERIC(9),@V_DIGI_EMPR VARCHAR(1),@V_CORRE_RESU NUMERIC(9),@V_FECH_RESO VARCHAR(30),@V_NUME_RESO VARCHAR(10),@V_FOL_INI NUMERIC(10),@V_FOL_ACTUAL NUMERIC(10),@V_TIPO_DOCU NUMERIC(3),@V_CANT_BOL NUMERIC(9),@V_CANT_NOT NUMERIC(9),@V_CANT_TOT NUMERIC(9),@FECH_ACTUAL VARCHAR(10),@FECH_ACTUAL2 VARCHAR(10),@CED_TIPO_DOCU NUMERIC(3),@CED_FOLI_DOCU NUMERIC(10),@CEN_TIPO_DOCU NUMERIC(3),@CEN_FOLI_DOCU NUMERIC(10),@CFA_TIPO_DOCU NUMERIC(3),@CFA_FOLI_ANUL NUMERIC(10),@RESUL NUMERIC(10)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>SET@LUGAR=<str>IF@P_CODI_EMPR IS NULL BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END ELSE BEGIN IF(@P_FECH_INIC IS NULL)OR(@P_FECH_FINA IS NULL)BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FECH_INIC=CONVERT(CHAR(10),GETDATE(),120)SET@V_FECH_FINA=CONVERT(CHAR(10),GETDATE(),120)SET@P_MENS_ERRO=@V_FECH_FINA END ELSE BEGIN SET@V_FECH_INIC=@P_FECH_INIC SET@V_FECH_FINA=@P_FECH_FINA SET@LUGAR=<str>PRINT(@LUGAR)END BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_CANT_BOL=COUNT(FOLI_DOCU)FROM BEL_ENCA_DOCU WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA SET@LUGAR=<str>+CONVERT(VARCHAR(9),@V_CANT_BOL)PRINT(@LUGAR)SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_CANT_NOT=COUNT(A.FOLI_DOCU)FROM DTE_ENCA_DOCU A,DTE_DOCU_REFE B WHERE A.CODI_EMPR=@P_CODI_EMPR AND A.TIPO_DOCU=61 AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU AND A.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND B.TIPO_REFE IN(39,41)SET@V_CANT_TOT=@V_CANT_BOL+@V_CANT_NOT IF(@@ERROR<>0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>+CONVERT(VARCHAR,@@ERROR)PRINT(@LUGAR)END END IF@P_RUTT_ENVI IS NULL BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_RUTT_PERS=RUTT_PERS,@V_DGTO_PERS=DGTO_PERS FROM PERSONAS A,DTE_AUTO_PERS B WHERE A.CODI_PERS=B.CODI_PERS AND B.ESTA_AUTO=<str>AND B.DEFE_AUTO=1 AND B.TIPO_AUTO=<str>AND B.CODI_EMPR=CONVERT(NUMERIC,@P_CODI_EMPR)IF(@@ROWCOUNT=0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END END ELSE BEGIN SET@V_RUTT_PERS=@P_RUTT_ENVI SET@V_DGTO_PERS=@P_DIGI_ENVI END IF@P_CODI_ERRI<><str>BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_SECU_ENVI=ISNULL(MAX(ISNULL(SECU_ENVI,0)),0)FROM BEL_CONS_CARA WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_INIC=@V_FECH_INIC SET@V_SECU_ENVI=@V_SECU_ENVI+1 SET@LUGAR=<str>PRINT(@LUGAR)BEGIN SELECT@V_RUTT_EMPR=RUTT_EMPR,@V_DIGI_EMPR=DIGI_EMPR FROM EMPR WHERE CODI_EMPR=@P_CODI_EMPR IF(@@ROWCOUNT=0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END END END IF@P_CODI_ERRI<><str>BEGIN SET@LUGAR=<str>PRINT(@LUGAR)BEGIN SELECT@V_FECH_RESO=VALO_PAEM FROM PARA_EMPR WHERE CODI_EMPR=@P_CODI_EMPR AND CODI_PAEM=<str>SELECT@V_NUME_RESO=VALO_PAEM FROM PARA_EMPR WHERE CODI_EMPR=@P_CODI_EMPR AND CODI_PAEM=<str>IF(@@ROWCOUNT=0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END END END IF@P_CODI_ERRI<><str>BEGIN SET@LUGAR=<str>PRINT(@LUGAR)EXECUTE GET_BOEL_RESU@V_CORRE_RESU OUT SET@P_MENS_ERRO=@V_CORRE_RESU SET@LUGAR=<str>PRINT(@LUGAR)SET@FECH_ACTUAL2=CONVERT(CHAR(10),GETDATE(),120)INSERT INTO BEL_CONS_CARA(CODI_EMPR,CORR_CONS,ESTA_ENVI,RUTT_EMIS,DIGI_EMIS,RUTT_ENVI,DIGI_ENVI,FECH_RESO,NUME_RESU,FECH_INIC,FECH_FINA,SECU_ENVI,FEHO_ENVI)VALUES(@P_CODI_EMPR,@V_CORRE_RESU,<str>,@V_RUTT_EMPR,@V_DIGI_EMPR,@V_RUTT_PERS,@V_DGTO_PERS,@V_FECH_RESO,@V_NUME_RESO,@V_FECH_INIC,@V_FECH_FINA,@V_SECU_ENVI,@FECH_ACTUAL2+<str>+CONVERT(CHAR,GETDATE(),108))SET@LUGAR=<str>PRINT(@LUGAR)IF@V_CANT_TOT>0 BEGIN INSERT INTO BEL_CONS_RESU(CODI_EMPR,CORR_CONS,TIPO_DOCU,TOTA_NETO,TOTA_IVAG,TASA_IVAG,TOTA_EXEN,MONT_TOTA,CANT_EMIT,CANT_ANUL,CANT_UTIL)SELECT CODI_EMPR,@V_CORRE_RESU,TIPO_DOCU,CASE SUM(ISNULL(MONT_NETO,0))WHEN 0 THEN ROUND((SUM(ISNULL(MONT_TOTA,0)-ISNULL(MONT_EXEN,0)))/(1+(MAX(TASA_VAAG)/100)),0)ELSE SUM(ISNULL(MONT_NETO,0))END,SUM(ISNULL(MONT_TOTA,0)-ISNULL(MONT_EXEN,0))-CASE SUM(ISNULL(MONT_NETO,0))WHEN 0 THEN ROUND((SUM(ISNULL(MONT_TOTA,0)-ISNULL(MONT_EXEN,0)))/(1+(MAX(TASA_VAAG)/100)),0)ELSE SUM(ISNULL(MONT_NETO,0))END,MAX(TASA_VAAG),SUM(MONT_EXEN),SUM(MONT_TOTA),COUNT(ISNULL(FOLI_DOCU,0)),0,0 FROM BEL_ENCA_DOCU A WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND FOLI_DOCU NOT IN(SELECT FOLI_ANUL FROM BEL_FOLI_ANUL B WHERE A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU)GROUP BY A.CODI_EMPR,A.TIPO_DOCU UNION ALL SELECT A.CODI_EMPR,@V_CORRE_RESU,A.TIPO_DOCU,SUM(A.MONT_NETO),SUM(A.IMPU_VAAG),MAX(A.TASA_VAAG),SUM(A.MONT_EXEN),SUM(A.MONT_TOTA),COUNT(ISNULL(A.FOLI_DOCU,0)),0,0 FROM DTE_ENCA_DOCU A,DTE_DOCU_REFE B WHERE A.CODI_EMPR=@P_CODI_EMPR AND A.TIPO_DOCU=61 AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU AND A.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND B.TIPO_REFE IN(39,41)GROUP BY A.CODI_EMPR,A.TIPO_DOCU SET@RESUL=0 SELECT@RESUL=COUNT(*)FROM BEL_CONS_RESU WHERE CORR_CONS=@V_CORRE_RESU IF@RESUL=0 BEGIN INSERT INTO BEL_CONS_RESU(CODI_EMPR,CORR_CONS,TIPO_DOCU,TOTA_NETO,TOTA_IVAG,TASA_IVAG,TOTA_EXEN,MONT_TOTA,CANT_EMIT,CANT_ANUL,CANT_UTIL)VALUES(1,@V_CORRE_RESU,39,0,0,0,0,0,0,0,0)END UPDATE BEL_CONS_RESU SET CANT_ANUL=(SELECT COUNT(FOLI_ANUL)FROM BEL_FOLI_ANUL B WHERE BEL_CONS_RESU.CODI_EMPR=B.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=B.TIPO_DOCU AND B.FECH_ANUL BETWEEN@V_FECH_INIC AND@V_FECH_FINA)WHERE CODI_EMPR=@P_CODI_EMPR AND CORR_CONS=@V_CORRE_RESU UPDATE BEL_CONS_RESU SET CANT_UTIL=(SELECT COUNT(B.FOLI_DOCU)FROM BEL_ENCA_DOCU B WHERE BEL_CONS_RESU.CODI_EMPR=B.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=B.TIPO_DOCU AND B.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND FOLI_DOCU NOT IN(SELECT FOLI_ANUL FROM BEL_FOLI_ANUL BEL WHERE BEL.CODI_EMPR=B.CODI_EMPR AND BEL.TIPO_DOCU=B.TIPO_DOCU)UNION SELECT COUNT(A.FOLI_DOCU)FROM DTE_ENCA_DOCU A,DTE_DOCU_REFE C WHERE BEL_CONS_RESU.CODI_EMPR=A.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=A.TIPO_DOCU AND A.CODI_EMPR=C.CODI_EMPR AND A.TIPO_DOCU=C.TIPO_DOCU AND A.FOLI_DOCU=C.FOLI_DOCU AND C.TIPO_REFE IN(39,41)AND A.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA)+(SELECT COUNT(FOLI_ANUL)FROM BEL_FOLI_ANUL B WHERE BEL_CONS_RESU.CODI_EMPR=B.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=B.TIPO_DOCU AND B.FECH_ANUL BETWEEN@V_FECH_INIC AND@V_FECH_FINA)WHERE CODI_EMPR=@P_CODI_EMPR AND CORR_CONS=@V_CORRE_RESU SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FOL_INI=0 SET@V_FOL_ACTUAL=0 DECLARE CUR_ENCA_DOCU CURSOR FOR SELECT A.TIPO_DOCU,A.FOLI_DOCU FROM BEL_ENCA_DOCU A WHERE A.CODI_EMPR=@P_CODI_EMPR AND A.FECH_EMIS BETWEEN@P_FECH_INIC AND@P_FECH_FINA AND A.FOLI_DOCU NOT IN(SELECT BEL.FOLI_ANUL FROM BEL_FOLI_ANUL BEL WHERE BEL.CODI_EMPR=A.CODI_EMPR AND BEL.TIPO_DOCU=A.TIPO_DOCU)ORDER BY A.TIPO_DOCU,A.FOLI_DOCU OPEN CUR_ENCA_DOCU FETCH NEXT FROM CUR_ENCA_DOCU INTO@CED_TIPO_DOCU,@CED_FOLI_DOCU WHILE@@FETCH_STATUS=0 BEGIN SET@LUGAR=<str>PRINT(@LUGAR)IF@V_FOL_INI=0 BEGIN SET@V_TIPO_DOCU=@CED_TIPO_DOCU SET@V_FOL_INI=@CED_FOLI_DOCU SET@V_FOL_ACTUAL=@CED_FOLI_DOCU END ELSE BEGIN IF(@V_FOL_ACTUAL+1=@CED_FOLI_DOCU)AND(@V_TIPO_DOCU=@CED_TIPO_DOCU)SET@V_FOL_ACTUAL=@CED_FOLI_DOCU ELSE BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)SET@V_FOL_INI=@CED_FOLI_DOCU SET@V_FOL_ACTUAL=@CED_FOLI_DOCU SET@V_TIPO_DOCU=@CED_TIPO_DOCU END END FETCH NEXT FROM CUR_ENCA_DOCU INTO@CED_TIPO_DOCU,@CED_FOLI_DOCU END CLOSE CUR_ENCA_DOCU DEALLOCATE CUR_ENCA_DOCU IF@V_FOL_ACTUAL>0 BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)END SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FOL_INI=0 SET@V_FOL_ACTUAL=0 DECLARE CUR_ENCA_NOTA CURSOR FOR SELECT A.TIPO_DOCU,A.FOLI_DOCU FROM DTE_ENCA_DOCU AS A,DTE_DOCU_REFE AS B WHERE A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU AND A.CODI_EMPR=@P_CODI_EMPR AND A.TIPO_DOCU=61 AND A.FECH_EMIS BETWEEN@P_FECH_INIC AND@P_FECH_FINA AND B.TIPO_REFE IN(39,41)ORDER BY A.TIPO_DOCU,A.FOLI_DOCU OPEN CUR_ENCA_NOTA FETCH NEXT FROM CUR_ENCA_NOTA INTO@CEN_TIPO_DOCU,@CEN_FOLI_DOCU WHILE@@FETCH_STATUS=0 BEGIN IF@V_FOL_INI=0 BEGIN SET@V_TIPO_DOCU=@CEN_TIPO_DOCU SET@V_FOL_INI=@CEN_FOLI_DOCU SET@V_FOL_ACTUAL=@CEN_FOLI_DOCU END ELSE BEGIN IF(@V_FOL_ACTUAL+1=@CEN_FOLI_DOCU)AND(@V_TIPO_DOCU=@CEN_TIPO_DOCU)BEGIN SET@V_FOL_ACTUAL=@CEN_FOLI_DOCU END ELSE BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)SET@V_FOL_INI=@CEN_FOLI_DOCU SET@V_FOL_ACTUAL=@CEN_FOLI_DOCU SET@V_TIPO_DOCU=@CEN_TIPO_DOCU END END FETCH NEXT FROM CUR_ENCA_NOTA INTO@CEN_TIPO_DOCU,@CEN_FOLI_DOCU END CLOSE CUR_ENCA_NOTA DEALLOCATE CUR_ENCA_NOTA IF@V_FOL_ACTUAL>0 BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)END SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FOL_INI=0 SET@V_FOL_ACTUAL=0 DECLARE CUR_FOLI_ANUL CURSOR FOR SELECT TIPO_DOCU,FOLI_ANUL FROM BEL_FOLI_ANUL WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_ANUL BETWEEN@P_FECH_INIC AND@P_FECH_FINA ORDER BY TIPO_DOCU,FOLI_ANUL OPEN CUR_FOLI_ANUL FETCH NEXT FROM CUR_FOLI_ANUL INTO@CFA_TIPO_DOCU,@CFA_FOLI_ANUL WHILE@@FETCH_STATUS=0 BEGIN IF@V_FOL_INI=0 BEGIN SET@V_TIPO_DOCU=@CFA_TIPO_DOCU SET@V_FOL_INI=@CFA_FOLI_ANUL SET@V_FOL_ACTUAL=@CFA_FOLI_ANUL END ELSE BEGIN IF(@V_FOL_ACTUAL+1=@CFA_FOLI_ANUL)AND(@V_TIPO_DOCU=@CFA_TIPO_DOCU)BEGIN SET@V_FOL_ACTUAL=@CFA_FOLI_ANUL END ELSE BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)SET@V_FOL_INI=@CFA_FOLI_ANUL SET@V_FOL_ACTUAL=@CFA_FOLI_ANUL SET@V_TIPO_DOCU=@CFA_TIPO_DOCU END END FETCH NEXT FROM CUR_FOLI_ANUL INTO@CFA_TIPO_DOCU,@CFA_FOLI_ANUL END CLOSE CUR_FOLI_ANUL DEALLOCATE CUR_FOLI_ANUL IF@V_FOL_ACTUAL>0 BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)END IF(@@ERROR<>0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>+@LUGAR+CONVERT(VARCHAR,@@ERROR)END END ELSE BEGIN SET@LUGAR=<str>PRINT(@LUGAR)INSERT INTO BEL_CONS_RESU(CODI_EMPR,CORR_CONS,TIPO_DOCU,TOTA_NETO,TOTA_IVAG,TASA_IVAG,TOTA_EXEN,MONT_TOTA,CANT_EMIT,CANT_ANUL,CANT_UTIL)VALUES(@P_CODI_EMPR,@V_CORRE_RESU,39,0,0,19,0,0,0,0,0)IF(@@ERROR<>0)BEGIN ROLLBACK TRANSACTION SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>+@LUGAR+CONVERT(VARCHAR,@@ERROR)END END END END END COMMIT TRANSACTION END GO
facture	[dbo].[prc_resu_boel]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY A.TIPO_DOCU,A.FOLI_DOCU	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.PRC_RESU_BOEL(@P_CODI_EMPR VARCHAR(9),@P_RUTT_ENVI VARCHAR(10),@P_DIGI_ENVI VARCHAR(1),@P_FECH_INIC VARCHAR(10),@P_FECH_FINA VARCHAR(10),@LUGAR VARCHAR(200)OUTPUT,@P_CODI_ERRI VARCHAR(1)OUTPUT,@P_MENS_ERRO VARCHAR(200)OUTPUT)AS BEGIN BEGIN TRANSACTION DECLARE@V_RUTT_PERS NUMERIC(9),@V_DGTO_PERS VARCHAR(1),@V_FECH_INIC VARCHAR(10),@V_FECH_FINA VARCHAR(10),@V_SECU_ENVI NUMERIC(3),@V_RUTT_EMPR NUMERIC(9),@V_DIGI_EMPR VARCHAR(1),@V_CORRE_RESU NUMERIC(9),@V_FECH_RESO VARCHAR(30),@V_NUME_RESO VARCHAR(10),@V_FOL_INI NUMERIC(10),@V_FOL_ACTUAL NUMERIC(10),@V_TIPO_DOCU NUMERIC(3),@V_CANT_BOL NUMERIC(9),@V_CANT_NOT NUMERIC(9),@V_CANT_TOT NUMERIC(9),@FECH_ACTUAL VARCHAR(10),@FECH_ACTUAL2 VARCHAR(10),@CED_TIPO_DOCU NUMERIC(3),@CED_FOLI_DOCU NUMERIC(10),@CEN_TIPO_DOCU NUMERIC(3),@CEN_FOLI_DOCU NUMERIC(10),@CFA_TIPO_DOCU NUMERIC(3),@CFA_FOLI_ANUL NUMERIC(10),@RESUL NUMERIC(10)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>SET@LUGAR=<str>IF@P_CODI_EMPR IS NULL BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END ELSE BEGIN IF(@P_FECH_INIC IS NULL)OR(@P_FECH_FINA IS NULL)BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FECH_INIC=CONVERT(CHAR(10),GETDATE(),120)SET@V_FECH_FINA=CONVERT(CHAR(10),GETDATE(),120)SET@P_MENS_ERRO=@V_FECH_FINA END ELSE BEGIN SET@V_FECH_INIC=@P_FECH_INIC SET@V_FECH_FINA=@P_FECH_FINA SET@LUGAR=<str>PRINT(@LUGAR)END BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_CANT_BOL=COUNT(FOLI_DOCU)FROM BEL_ENCA_DOCU WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA SET@LUGAR=<str>+CONVERT(VARCHAR(9),@V_CANT_BOL)PRINT(@LUGAR)SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_CANT_NOT=COUNT(A.FOLI_DOCU)FROM DTE_ENCA_DOCU A,DTE_DOCU_REFE B WHERE A.CODI_EMPR=@P_CODI_EMPR AND A.TIPO_DOCU=61 AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU AND A.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND B.TIPO_REFE IN(39,41)SET@V_CANT_TOT=@V_CANT_BOL+@V_CANT_NOT IF(@@ERROR<>0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>+CONVERT(VARCHAR,@@ERROR)PRINT(@LUGAR)END END IF@P_RUTT_ENVI IS NULL BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_RUTT_PERS=RUTT_PERS,@V_DGTO_PERS=DGTO_PERS FROM PERSONAS A,DTE_AUTO_PERS B WHERE A.CODI_PERS=B.CODI_PERS AND B.ESTA_AUTO=<str>AND B.DEFE_AUTO=1 AND B.TIPO_AUTO=<str>AND B.CODI_EMPR=CONVERT(NUMERIC,@P_CODI_EMPR)IF(@@ROWCOUNT=0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END END ELSE BEGIN SET@V_RUTT_PERS=@P_RUTT_ENVI SET@V_DGTO_PERS=@P_DIGI_ENVI END IF@P_CODI_ERRI<><str>BEGIN SET@LUGAR=<str>PRINT(@LUGAR)SELECT@V_SECU_ENVI=ISNULL(MAX(ISNULL(SECU_ENVI,0)),0)FROM BEL_CONS_CARA WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_INIC=@V_FECH_INIC SET@V_SECU_ENVI=@V_SECU_ENVI+1 SET@LUGAR=<str>PRINT(@LUGAR)BEGIN SELECT@V_RUTT_EMPR=RUTT_EMPR,@V_DIGI_EMPR=DIGI_EMPR FROM EMPR WHERE CODI_EMPR=@P_CODI_EMPR IF(@@ROWCOUNT=0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END END END IF@P_CODI_ERRI<><str>BEGIN SET@LUGAR=<str>PRINT(@LUGAR)BEGIN SELECT@V_FECH_RESO=VALO_PAEM FROM PARA_EMPR WHERE CODI_EMPR=@P_CODI_EMPR AND CODI_PAEM=<str>SELECT@V_NUME_RESO=VALO_PAEM FROM PARA_EMPR WHERE CODI_EMPR=@P_CODI_EMPR AND CODI_PAEM=<str>IF(@@ROWCOUNT=0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>PRINT(@LUGAR)END END END IF@P_CODI_ERRI<><str>BEGIN SET@LUGAR=<str>PRINT(@LUGAR)EXECUTE GET_BOEL_RESU@V_CORRE_RESU OUT SET@P_MENS_ERRO=@V_CORRE_RESU SET@LUGAR=<str>PRINT(@LUGAR)SET@FECH_ACTUAL2=CONVERT(CHAR(10),GETDATE(),120)INSERT INTO BEL_CONS_CARA(CODI_EMPR,CORR_CONS,ESTA_ENVI,RUTT_EMIS,DIGI_EMIS,RUTT_ENVI,DIGI_ENVI,FECH_RESO,NUME_RESU,FECH_INIC,FECH_FINA,SECU_ENVI,FEHO_ENVI)VALUES(@P_CODI_EMPR,@V_CORRE_RESU,<str>,@V_RUTT_EMPR,@V_DIGI_EMPR,@V_RUTT_PERS,@V_DGTO_PERS,@V_FECH_RESO,@V_NUME_RESO,@V_FECH_INIC,@V_FECH_FINA,@V_SECU_ENVI,@FECH_ACTUAL2+<str>+CONVERT(CHAR,GETDATE(),108))SET@LUGAR=<str>PRINT(@LUGAR)IF@V_CANT_TOT>0 BEGIN INSERT INTO BEL_CONS_RESU(CODI_EMPR,CORR_CONS,TIPO_DOCU,TOTA_NETO,TOTA_IVAG,TASA_IVAG,TOTA_EXEN,MONT_TOTA,CANT_EMIT,CANT_ANUL,CANT_UTIL)SELECT CODI_EMPR,@V_CORRE_RESU,TIPO_DOCU,CASE SUM(ISNULL(MONT_NETO,0))WHEN 0 THEN ROUND((SUM(ISNULL(MONT_TOTA,0)-ISNULL(MONT_EXEN,0)))/(1+(MAX(TASA_VAAG)/100)),0)ELSE SUM(ISNULL(MONT_NETO,0))END,SUM(ISNULL(MONT_TOTA,0)-ISNULL(MONT_EXEN,0))-CASE SUM(ISNULL(MONT_NETO,0))WHEN 0 THEN ROUND((SUM(ISNULL(MONT_TOTA,0)-ISNULL(MONT_EXEN,0)))/(1+(MAX(TASA_VAAG)/100)),0)ELSE SUM(ISNULL(MONT_NETO,0))END,MAX(TASA_VAAG),SUM(MONT_EXEN),SUM(MONT_TOTA),COUNT(ISNULL(FOLI_DOCU,0)),0,0 FROM BEL_ENCA_DOCU A WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND FOLI_DOCU NOT IN(SELECT FOLI_ANUL FROM BEL_FOLI_ANUL B WHERE A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU)GROUP BY A.CODI_EMPR,A.TIPO_DOCU UNION ALL SELECT A.CODI_EMPR,@V_CORRE_RESU,A.TIPO_DOCU,SUM(A.MONT_NETO),SUM(A.IMPU_VAAG),MAX(A.TASA_VAAG),SUM(A.MONT_EXEN),SUM(A.MONT_TOTA),COUNT(ISNULL(A.FOLI_DOCU,0)),0,0 FROM DTE_ENCA_DOCU A,DTE_DOCU_REFE B WHERE A.CODI_EMPR=@P_CODI_EMPR AND A.TIPO_DOCU=61 AND A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU AND A.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND B.TIPO_REFE IN(39,41)GROUP BY A.CODI_EMPR,A.TIPO_DOCU SET@RESUL=0 SELECT@RESUL=COUNT(*)FROM BEL_CONS_RESU WHERE CORR_CONS=@V_CORRE_RESU IF@RESUL=0 BEGIN INSERT INTO BEL_CONS_RESU(CODI_EMPR,CORR_CONS,TIPO_DOCU,TOTA_NETO,TOTA_IVAG,TASA_IVAG,TOTA_EXEN,MONT_TOTA,CANT_EMIT,CANT_ANUL,CANT_UTIL)VALUES(1,@V_CORRE_RESU,39,0,0,0,0,0,0,0,0)END UPDATE BEL_CONS_RESU SET CANT_ANUL=(SELECT COUNT(FOLI_ANUL)FROM BEL_FOLI_ANUL B WHERE BEL_CONS_RESU.CODI_EMPR=B.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=B.TIPO_DOCU AND B.FECH_ANUL BETWEEN@V_FECH_INIC AND@V_FECH_FINA)WHERE CODI_EMPR=@P_CODI_EMPR AND CORR_CONS=@V_CORRE_RESU UPDATE BEL_CONS_RESU SET CANT_UTIL=(SELECT COUNT(B.FOLI_DOCU)FROM BEL_ENCA_DOCU B WHERE BEL_CONS_RESU.CODI_EMPR=B.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=B.TIPO_DOCU AND B.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA AND FOLI_DOCU NOT IN(SELECT FOLI_ANUL FROM BEL_FOLI_ANUL BEL WHERE BEL.CODI_EMPR=B.CODI_EMPR AND BEL.TIPO_DOCU=B.TIPO_DOCU)UNION SELECT COUNT(A.FOLI_DOCU)FROM DTE_ENCA_DOCU A,DTE_DOCU_REFE C WHERE BEL_CONS_RESU.CODI_EMPR=A.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=A.TIPO_DOCU AND A.CODI_EMPR=C.CODI_EMPR AND A.TIPO_DOCU=C.TIPO_DOCU AND A.FOLI_DOCU=C.FOLI_DOCU AND C.TIPO_REFE IN(39,41)AND A.FECH_EMIS BETWEEN@V_FECH_INIC AND@V_FECH_FINA)+(SELECT COUNT(FOLI_ANUL)FROM BEL_FOLI_ANUL B WHERE BEL_CONS_RESU.CODI_EMPR=B.CODI_EMPR AND BEL_CONS_RESU.TIPO_DOCU=B.TIPO_DOCU AND B.FECH_ANUL BETWEEN@V_FECH_INIC AND@V_FECH_FINA)WHERE CODI_EMPR=@P_CODI_EMPR AND CORR_CONS=@V_CORRE_RESU SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FOL_INI=0 SET@V_FOL_ACTUAL=0 DECLARE CUR_ENCA_DOCU CURSOR FOR SELECT A.TIPO_DOCU,A.FOLI_DOCU FROM BEL_ENCA_DOCU A WHERE A.CODI_EMPR=@P_CODI_EMPR AND A.FECH_EMIS BETWEEN@P_FECH_INIC AND@P_FECH_FINA AND A.FOLI_DOCU NOT IN(SELECT BEL.FOLI_ANUL FROM BEL_FOLI_ANUL BEL WHERE BEL.CODI_EMPR=A.CODI_EMPR AND BEL.TIPO_DOCU=A.TIPO_DOCU)ORDER BY A.TIPO_DOCU,A.FOLI_DOCU OPEN CUR_ENCA_DOCU FETCH NEXT FROM CUR_ENCA_DOCU INTO@CED_TIPO_DOCU,@CED_FOLI_DOCU WHILE@@FETCH_STATUS=0 BEGIN SET@LUGAR=<str>PRINT(@LUGAR)IF@V_FOL_INI=0 BEGIN SET@V_TIPO_DOCU=@CED_TIPO_DOCU SET@V_FOL_INI=@CED_FOLI_DOCU SET@V_FOL_ACTUAL=@CED_FOLI_DOCU END ELSE BEGIN IF(@V_FOL_ACTUAL+1=@CED_FOLI_DOCU)AND(@V_TIPO_DOCU=@CED_TIPO_DOCU)SET@V_FOL_ACTUAL=@CED_FOLI_DOCU ELSE BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)SET@V_FOL_INI=@CED_FOLI_DOCU SET@V_FOL_ACTUAL=@CED_FOLI_DOCU SET@V_TIPO_DOCU=@CED_TIPO_DOCU END END FETCH NEXT FROM CUR_ENCA_DOCU INTO@CED_TIPO_DOCU,@CED_FOLI_DOCU END CLOSE CUR_ENCA_DOCU DEALLOCATE CUR_ENCA_DOCU IF@V_FOL_ACTUAL>0 BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)END SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FOL_INI=0 SET@V_FOL_ACTUAL=0 DECLARE CUR_ENCA_NOTA CURSOR FOR SELECT A.TIPO_DOCU,A.FOLI_DOCU FROM DTE_ENCA_DOCU AS A,DTE_DOCU_REFE AS B WHERE A.CODI_EMPR=B.CODI_EMPR AND A.TIPO_DOCU=B.TIPO_DOCU AND A.FOLI_DOCU=B.FOLI_DOCU AND A.CODI_EMPR=@P_CODI_EMPR AND A.TIPO_DOCU=61 AND A.FECH_EMIS BETWEEN@P_FECH_INIC AND@P_FECH_FINA AND B.TIPO_REFE IN(39,41)ORDER BY A.TIPO_DOCU,A.FOLI_DOCU OPEN CUR_ENCA_NOTA FETCH NEXT FROM CUR_ENCA_NOTA INTO@CEN_TIPO_DOCU,@CEN_FOLI_DOCU WHILE@@FETCH_STATUS=0 BEGIN IF@V_FOL_INI=0 BEGIN SET@V_TIPO_DOCU=@CEN_TIPO_DOCU SET@V_FOL_INI=@CEN_FOLI_DOCU SET@V_FOL_ACTUAL=@CEN_FOLI_DOCU END ELSE BEGIN IF(@V_FOL_ACTUAL+1=@CEN_FOLI_DOCU)AND(@V_TIPO_DOCU=@CEN_TIPO_DOCU)BEGIN SET@V_FOL_ACTUAL=@CEN_FOLI_DOCU END ELSE BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)SET@V_FOL_INI=@CEN_FOLI_DOCU SET@V_FOL_ACTUAL=@CEN_FOLI_DOCU SET@V_TIPO_DOCU=@CEN_TIPO_DOCU END END FETCH NEXT FROM CUR_ENCA_NOTA INTO@CEN_TIPO_DOCU,@CEN_FOLI_DOCU END CLOSE CUR_ENCA_NOTA DEALLOCATE CUR_ENCA_NOTA IF@V_FOL_ACTUAL>0 BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)END SET@LUGAR=<str>PRINT(@LUGAR)SET@V_FOL_INI=0 SET@V_FOL_ACTUAL=0 DECLARE CUR_FOLI_ANUL CURSOR FOR SELECT TIPO_DOCU,FOLI_ANUL FROM BEL_FOLI_ANUL WHERE CODI_EMPR=@P_CODI_EMPR AND FECH_ANUL BETWEEN@P_FECH_INIC AND@P_FECH_FINA ORDER BY TIPO_DOCU,FOLI_ANUL OPEN CUR_FOLI_ANUL FETCH NEXT FROM CUR_FOLI_ANUL INTO@CFA_TIPO_DOCU,@CFA_FOLI_ANUL WHILE@@FETCH_STATUS=0 BEGIN IF@V_FOL_INI=0 BEGIN SET@V_TIPO_DOCU=@CFA_TIPO_DOCU SET@V_FOL_INI=@CFA_FOLI_ANUL SET@V_FOL_ACTUAL=@CFA_FOLI_ANUL END ELSE BEGIN IF(@V_FOL_ACTUAL+1=@CFA_FOLI_ANUL)AND(@V_TIPO_DOCU=@CFA_TIPO_DOCU)BEGIN SET@V_FOL_ACTUAL=@CFA_FOLI_ANUL END ELSE BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)SET@V_FOL_INI=@CFA_FOLI_ANUL SET@V_FOL_ACTUAL=@CFA_FOLI_ANUL SET@V_TIPO_DOCU=@CFA_TIPO_DOCU END END FETCH NEXT FROM CUR_FOLI_ANUL INTO@CFA_TIPO_DOCU,@CFA_FOLI_ANUL END CLOSE CUR_FOLI_ANUL DEALLOCATE CUR_FOLI_ANUL IF@V_FOL_ACTUAL>0 BEGIN INSERT INTO BEL_CONS_RANG VALUES(@P_CODI_EMPR,@V_TIPO_DOCU,@V_CORRE_RESU,<str>,@V_FOL_INI,@V_FOL_ACTUAL)END IF(@@ERROR<>0)BEGIN SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>+@LUGAR+CONVERT(VARCHAR,@@ERROR)END END ELSE BEGIN SET@LUGAR=<str>PRINT(@LUGAR)INSERT INTO BEL_CONS_RESU(CODI_EMPR,CORR_CONS,TIPO_DOCU,TOTA_NETO,TOTA_IVAG,TASA_IVAG,TOTA_EXEN,MONT_TOTA,CANT_EMIT,CANT_ANUL,CANT_UTIL)VALUES(@P_CODI_EMPR,@V_CORRE_RESU,39,0,0,19,0,0,0,0,0)IF(@@ERROR<>0)BEGIN ROLLBACK TRANSACTION SET@P_CODI_ERRI=<str>SET@P_MENS_ERRO=<str>+@LUGAR+CONVERT(VARCHAR,@@ERROR)END END END END END COMMIT TRANSACTION END GO
harvest	[dbo].[DF__harreposi__notco__21ABE3BC]	Information	MultiPartObjectName	Using 4 or 5 part names	'	ALTER TABLE [dbo].[harrepository] ADD CONSTRAINT [DF__harreposi__notco__21ABE3BC] DEFAULT ('.zip.jpg.gif.asf.ram.mp3.wav.cab') FOR [notcompext]
harvest	[dbo].[DF__harreposi__notco__21ABE3BC]	Information	MultiPartObjectName	Using 4 or 5 part names	if	ALTER TABLE [dbo].[harrepository] ADD CONSTRAINT [DF__harreposi__notco__21ABE3BC] DEFAULT ('.zip.jpg.gif.asf.ram.mp3.wav.cab') FOR [notcompext]
harvest	[dbo].[hex]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_VARBINTOHEXSTR	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.HEX(@S VARBINARY(16))RETURNS VARCHAR(64)AS BEGIN DECLARE@OUT VARCHAR(64)DECLARE@VERNUM VARCHAR(4)SELECT@VERNUM=CAST(SERVERPROPERTY(<str>)AS VARCHAR)IF LEFT(@VERNUM,1)=<str>EXEC MASTER..XP_VARBINTOHEXSTR@S,@OUT OUTPUT ELSE SET@OUT=MASTER.FN_VARBINTOHEXSTR(@S)SELECT@OUT=RIGHT(@OUT,32)RETURN@OUT END GO
harvest	[dbo].[SELECT_UND_ANIMATION_IP]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T.DT_START	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SELECT_UND_ANIMATION_IP(@INJOBID INTEGER)AS DECLARE@F_IP NVARCHAR(80),@T_IP NVARCHAR(80),@DATE_START DATETIME,@DATE_STOP DATETIME DECLARE ANIMATION_CURSOR CURSOR FOR SELECT DISTINCT T.FROM_IP,T.TO_IP,T.DT_START,T.DT_STOP FROM UND_TRANSACTION T WHERE T.JOB_ID=@INJOBID GROUP BY T.FROM_IP,T.TO_IP,T.DT_START,T.DT_STOP ORDER BY T.DT_START ASC OPEN ANIMATION_CURSOR FETCH NEXT FROM AUTHORS_CURSOR INTO@F_IP,@T_IP,@DATE_START,@DATE_STOP WHILE@@FETCH_STATUS=0 BEGIN FETCH NEXT FROM ANIMATION_CURSOR INTO@F_IP,@T_IP,@DATE_START,@DATE_STOP END CLOSE ANIMATION_CURSOR DEALLOCATE ANIMATION_CURSOR GO
harvest	[dbo].[SELECT_UND_ANIMATION_MAC]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T.DT_START	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SELECT_UND_ANIMATION_MAC(@INJOBID INTEGER)AS DECLARE@F_MAC NVARCHAR(80),@T_MAC NVARCHAR(80),@DATE_START DATETIME,@DATE_STOP DATETIME DECLARE ANIMATION_MAC_CURSOR CURSOR FOR SELECT DISTINCT T.FROM_MAC,T.TO_MAC,T.DT_START,T.DT_STOP FROM UND_TRANSACTION T WHERE T.JOB_ID=@INJOBID GROUP BY T.FROM_MAC,T.TO_MAC,T.DT_START,T.DT_STOP ORDER BY T.DT_START ASC OPEN ANIMATION_MAC_CURSOR FETCH NEXT FROM AUTHORS_CURSOR INTO@F_MAC,@T_MAC,@DATE_START,@DATE_STOP WHILE@@FETCH_STATUS=0 BEGIN FETCH NEXT FROM ANIMATION_MAC_CURSOR INTO@F_MAC,@T_MAC,@DATE_START,@DATE_STOP END CLOSE ANIMATION_MAC_CURSOR DEALLOCATE ANIMATION_MAC_CURSOR GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY O.OTDENUME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY HH.PACKAGEOBJID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORESPROYECTOS@DMESCONSULTA VARCHAR(2),@DAÑOCONSULTA VARCHAR(4)AS DECLARE@DFECHAINICIOCONSULTA DATETIME,@DFECHAFINCONSULTA DATETIME,@INUMERADOR INT,@IDENOMINADOR INT,@FRENDIMIENTO FLOAT SELECT@DFECHAINICIOCONSULTA=CONVERT(DATETIME,@DMESCONSULTA+<str>+@DAÑOCONSULTA)SELECT@DFECHAFINCONSULTA=DATEADD(MS,-3,DATEADD(MM,DATEDIFF(M,0,@DFECHAINICIOCONSULTA)+1,0));CREATE TABLE#TMP_PROY(OTID INT IDENTITY,OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTFRECEP DATETIME,OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTDEFINI DATETIME,OTFTERES DATETIME,OTFETERR DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTFEACPR DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30))CREATE TABLE#TMP_PROY1(OTPAKGID VARCHAR(40),OTPKGNME VARCHAR(128),OTDENUME VARCHAR(40),OTDETIPO VARCHAR(16),OTDEREQU VARCHAR(255),OTDEUSRC VARCHAR(40),OTDEFREQ DATETIME,OTASJEFE VARCHAR(128),OTASINGP VARCHAR(128),OTFTERES DATETIME,OTFEREPR DATETIME,OTFEACPE DATETIME,OTESTADO VARCHAR(40),OTDEFPRO VARCHAR(30),)CREATE TABLE#TMP_FECHAS_PROY(OTDENUME VARCHAR(40),OTFRECEP DATETIME,OTDEFINI DATETIME,OTFETERR DATETIME,OTFEACEP DATETIME,OTFENTOP DATETIME,OTFEPROD DATETIME,OTPAKGID VARCHAR(40))CREATE TABLE#TMP_FECHA_ESTADO_ACTUAL(CPKGID VARCHAR(40),CFECHAMAXPKG DATETIME)CREATE TABLE#TMP_ESTADO_ACTUAL(CPKGID VARCHAR(40),VCESTADO VARCHAR(40))CREATE TABLE#TMP_NOMBRE_PAQUETE(CPKGID VARCHAR(40),VCNOMBREPKG VARCHAR(128))CREATE TABLE#TMP_FILTRO_TIPO(CTIPO CHAR(16))CREATE TABLE#TMP_FILTRO_ESTADO(CESTADO CHAR(40))CREATE TABLE#TMP_FILTRO_JEFE(CNOMBREJEFE CHAR(128))CREATE TABLE#TMP_FILTRO_INGENIERO(CNOMBREINGENIERO CHAR(128))CREATE TABLE#TMP_HISTORY(ID INT IDENTITY,IDPAK VARCHAR(40),ACTION VARCHAR(40),FECHA DATETIME,ESTADO VARCHAR(40))CREATE TABLE#TMP_NCICLOS(ID INT IDENTITY,IDPAK VARCHAR(40),NCICLOS INT)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_TIPO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_ESTADO VALUES(<str>)INSERT#TMP_FILTRO_JEFE SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FILTRO_INGENIERO SELECT REALNAME FROM HARUSER HU,HARUSERSINGROUP HIG,HARUSERGROUP HUG WHERE HU.USROBJID=HIG.USROBJID AND HIG.USRGRPOBJID=HUG.USRGRPOBJID AND USERGROUPNAME=<str>INSERT#TMP_FECHA_ESTADO_ACTUAL SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID INSERT#TMP_ESTADO_ACTUAL SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID INSERT#TMP_NOMBRE_PAQUETE SELECT PACKAGEOBJID,PACKAGENAME FROM HARPACKAGE INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT INTO#TMP_PROY1 SELECT O.OTPAKGID<str>,TNP.VCNOMBREPKG<str>,O.OTDENUME<str>,O.OTDETIPO<str>,O.OTDEREQU<str>,O.OTDEUSRC<str>,O.OTDEFREQ<str>,O.OTASJEFE<str>,O.OTASINGP<str>,O.OTREFTE1<str>,ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))<str>,O.OTREFTE2<str>,TEA.VCESTADO<str>,O.OTDEFPRO<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC INSERT INTO#TMP_FECHAS_PROY SELECT O.OTDENUME<str>,MAX(HFRE.EXECDTIME)<str>,MAX(HFI.EXECDTIME)<str>,MAX(HFCTR.EXECDTIME)<str>,MAX(HFAR.EXECDTIME)<str>,MAX(HFEO.EXECDTIME)<str>,MAX(HFEP.EXECDTIME)<str>,O.OTPAKGID<str>FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME=<str>AND HFRE.ACTION=<str>LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME=<str>AND HFI.ACTION=<str>LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME=<str>AND HFCTR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME=<str>AND HFAR.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME=<str>AND HFEO.ACTION=<str>LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME=<str>AND HFEP.ACTION=<str>WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC INSERT#TMP_PROY SELECT TP1.OTPAKGID<str>,TP1.OTPKGNME<str>,TP1.OTDENUME<str>,TP1.OTDETIPO<str>,TP1.OTDEREQU<str>,TF.OTFRECEP<str>,TP1.OTDEUSRC<str>,TP1.OTDEFREQ<str>,TP1.OTASJEFE<str>,TP1.OTASINGP<str>,TF.OTDEFINI<str>,TP1.OTFTERES<str>,TF.OTFETERR<str>,TP1.OTFEREPR<str>,TP1.OTFEACPE<str>,TF.OTFEACEP<str>,TF.OTFENTOP<str>,TF.OTFEPROD<str>,TP1.OTESTADO<str>,TP1.OTDEFPRO<str>FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFEPROD<=OTDEFREQ AND OTFEPROD BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTDEFREQ BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(*)FROM#TMP_PROY WHERE OTFETERR<=OTFTERES AND OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(*)FROM#TMP_PROY WHERE OTFTERES BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>INSERT#TMP_HISTORY SELECT HH.PACKAGEOBJID<str>,HH.ACTION<str>,HH.EXECDTIME<str>,HH.STATENAME<str>FROM HARPKGHISTORY AS HH WHERE(HH.ACTION=<str>OR HH.ACTION=<str>)ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC INSERT#TMP_NCICLOS SELECT IDPAK<str>,COUNT(ESTADO)<str>FROM#TMP_HISTORY WHERE ESTADO=<str>GROUP BY IDPAK ORDER BY IDPAK DESC SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=1 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS=2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>SELECT@INUMERADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TC.NCICLOS>2 AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA SELECT@IDENOMINADOR=COUNT(TC.IDPAK)FROM#TMP_PROY TP,#TMP_NCICLOS TC WHERE TP.OTPAKGID=TC.IDPAK AND TP.OTFEACPR BETWEEN@DFECHAINICIOCONSULTA AND@DFECHAFINCONSULTA IF@IDENOMINADOR>0 SELECT@FRENDIMIENTO=(CONVERT(FLOAT,@INUMERADOR)*100)/CONVERT(FLOAT,@IDENOMINADOR)ELSE SELECT@FRENDIMIENTO=0 SELECT@INUMERADOR<str>,@IDENOMINADOR<str>,@FRENDIMIENTO<str>DROP TABLE#TMP_PROY1 DROP TABLE#TMP_FECHA_ESTADO_ACTUAL DROP TABLE#TMP_ESTADO_ACTUAL DROP TABLE#TMP_NOMBRE_PAQUETE DROP TABLE#TMP_FECHAS_PROY DROP TABLE#TMP_FILTRO_TIPO DROP TABLE#TMP_FILTRO_JEFE DROP TABLE#TMP_FILTRO_INGENIERO DROP TABLE#TMP_PROY DROP TABLE#TMP_HISTORY DROP TABLE#TMP_NCICLOS GO
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	packageobjid	SELECT PACKAGEOBJID,MAX(EXECDTIME)FROM HARPKGHISTORY GROUP BY PACKAGEOBJID ORDER BY PACKAGEOBJID
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	packageobjid	SELECT PACKAGEOBJID,STATENAME FROM HARPKGHISTORY,#TMP_FECHA_ESTADO_ACTUAL WHERE PACKAGEOBJID=CPKGID AND EXECDTIME=CFECHAMAXPKG GROUP BY PACKAGEOBJID,STATENAME ORDER BY PACKAGEOBJID
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTPAKGID"ID PAQUETE",TNP.VCNOMBREPKG"NOMBRE PAQUETE",O.OTDENUME"OT",O.OTDETIPO"TIPO REQUERIMIENTO",O.OTDEREQU"DESCRIPCIÓN",O.OTDEUSRC"EMISOR",O.OTDEFREQ"FECHA REQUERIDA",O.OTASJEFE"JPY",O.OTASINGP"IPY",O.OTREFTE1"FECHA TERMINO CONSTRUCCIÓN ESTIMADO",ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))"FECHA REPROGRAMACIÓN",O.OTREFTE2"FECHA ACEPTACIÓN ESTIMADO",TEA.VCESTADO"ESTADO",O.OTDEFPRO"FAMILIA"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTDENUME"OT",MAX(HFRE.EXECDTIME)"FECHA RECIBIDA EL",MAX(HFI.EXECDTIME)"FECHA INICIO",MAX(HFCTR.EXECDTIME)"FECHA TERMINO CONSTRUCCIÓN REAL",MAX(HFAR.EXECDTIME)"FECHA ACEPTACIÓN REAL",MAX(HFEO.EXECDTIME)"FECHA ENTREGA OPERACIONES",MAX(HFEP.EXECDTIME)"FECHA PUESTA EN PRODUCCION",O.OTPAKGID"ID PAQUETE"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME='ASIGNACION DE REQUERIMIENTOS'AND HFRE.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME='DISEÑO'AND HFI.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME='ASEGURAMIENTO DE CALIDAD'AND HFCTR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME='ACEPTACION USUARIO'AND HFAR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME='PUESTA EN PRODUCCION'AND HFEO.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME='PRODUCCION'AND HFEP.ACTION='PROMOTE'WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTPAKGID"ID PAQUETE",TNP.VCNOMBREPKG"NOMBRE PAQUETE",O.OTDENUME"OT",O.OTDETIPO"TIPO REQUERIMIENTO",O.OTDEREQU"DESCRIPCIÓN",O.OTDEUSRC"EMISOR",O.OTDEFREQ"FECHA REQUERIDA",O.OTASJEFE"JPY",O.OTASINGP"IPY",O.OTREFTE1"FECHA TERMINO CONSTRUCCIÓN ESTIMADO",ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))"FECHA REPROGRAMACIÓN",O.OTREFTE2"FECHA ACEPTACIÓN ESTIMADO",TEA.VCESTADO"ESTADO",O.OTDEFPRO"FAMILIA"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTDENUME"OT",MAX(HFRE.EXECDTIME)"FECHA RECIBIDA EL",MAX(HFI.EXECDTIME)"FECHA INICIO",MAX(HFCTR.EXECDTIME)"FECHA TERMINO CONSTRUCCIÓN REAL",MAX(HFAR.EXECDTIME)"FECHA ACEPTACIÓN REAL",MAX(HFEO.EXECDTIME)"FECHA ENTREGA OPERACIONES",MAX(HFEP.EXECDTIME)"FECHA PUESTA EN PRODUCCION",O.OTPAKGID"ID PAQUETE"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME='ASIGNACION DE REQUERIMIENTOS'AND HFRE.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME='DISEÑO'AND HFI.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME='ASEGURAMIENTO DE CALIDAD'AND HFCTR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME='ACEPTACION USUARIO'AND HFAR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME='PUESTA EN PRODUCCION'AND HFEO.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME='PRODUCCION'AND HFEP.ACTION='PROMOTE'WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTPAKGID"ID PAQUETE",TNP.VCNOMBREPKG"NOMBRE PAQUETE",O.OTDENUME"OT",O.OTDETIPO"TIPO REQUERIMIENTO",O.OTDEREQU"DESCRIPCIÓN",O.OTDEUSRC"EMISOR",O.OTDEFREQ"FECHA REQUERIDA",O.OTASJEFE"JPY",O.OTASINGP"IPY",O.OTREFTE1"FECHA TERMINO CONSTRUCCIÓN ESTIMADO",ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))"FECHA REPROGRAMACIÓN",O.OTREFTE2"FECHA ACEPTACIÓN ESTIMADO",TEA.VCESTADO"ESTADO",O.OTDEFPRO"FAMILIA"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTDENUME"OT",MAX(HFRE.EXECDTIME)"FECHA RECIBIDA EL",MAX(HFI.EXECDTIME)"FECHA INICIO",MAX(HFCTR.EXECDTIME)"FECHA TERMINO CONSTRUCCIÓN REAL",MAX(HFAR.EXECDTIME)"FECHA ACEPTACIÓN REAL",MAX(HFEO.EXECDTIME)"FECHA ENTREGA OPERACIONES",MAX(HFEP.EXECDTIME)"FECHA PUESTA EN PRODUCCION",O.OTPAKGID"ID PAQUETE"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME='ASIGNACION DE REQUERIMIENTOS'AND HFRE.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME='DISEÑO'AND HFI.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME='ASEGURAMIENTO DE CALIDAD'AND HFCTR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME='ACEPTACION USUARIO'AND HFAR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME='PUESTA EN PRODUCCION'AND HFEO.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME='PRODUCCION'AND HFEP.ACTION='PROMOTE'WHERE O.OTPAKGID=TEA.CPKGID AND HFRE.STATENAME='ASIGNACION DE REQUERIMIENTOS'AND HFRE.ACTION='PROMOTE'AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IS NULL AND O.OTASINGP IN(SELECT CNOMBREINGENIERO FROM#TMP_FILTRO_INGENIERO)GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTPAKGID"ID PAQUETE",TNP.VCNOMBREPKG"NOMBRE PAQUETE",O.OTDENUME"OT",O.OTDETIPO"TIPO REQUERIMIENTO",O.OTDEREQU"DESCRIPCIÓN",O.OTDEUSRC"EMISOR",O.OTDEFREQ"FECHA REQUERIDA",O.OTASJEFE"JPY",O.OTASINGP"IPY",O.OTREFTE1"FECHA TERMINO CONSTRUCCIÓN ESTIMADO",ISNULL(O.OTREFRE3,ISNULL(O.OTREFRE2,O.OTREFRE1))"FECHA REPROGRAMACIÓN",O.OTREFTE2"FECHA ACEPTACIÓN ESTIMADO",TEA.VCESTADO"ESTADO",O.OTDEFPRO"FAMILIA"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA,#TMP_NOMBRE_PAQUETE TNP WHERE O.OTPAKGID=TEA.CPKGID AND TNP.CPKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTPAKGID,TNP.VCNOMBREPKG,O.OTDENUME,O.OTDETIPO,O.OTDEREQU,O.OTDEUSRC,O.OTDEFREQ,O.OTASJEFE,O.OTASINGP,O.OTREFTE1,O.OTREFRE1,O.OTREFRE2,O.OTREFRE3,O.OTREFTE2,TEA.VCESTADO,O.OTDEFPRO ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	o.OTDENUME DESC	SELECT O.OTDENUME"OT",MAX(HFRE.EXECDTIME)"FECHA RECIBIDA EL",MAX(HFI.EXECDTIME)"FECHA INICIO",MAX(HFCTR.EXECDTIME)"FECHA TERMINO CONSTRUCCIÓN REAL",MAX(HFAR.EXECDTIME)"FECHA ACEPTACIÓN REAL",MAX(HFEO.EXECDTIME)"FECHA ENTREGA OPERACIONES",MAX(HFEP.EXECDTIME)"FECHA PUESTA EN PRODUCCION",O.OTPAKGID"ID PAQUETE"FROM OT1SINAC O,#TMP_ESTADO_ACTUAL TEA LEFT JOIN HARPKGHISTORY HFRE ON O.OTPAKGID=HFRE.PACKAGEOBJID AND HFRE.STATENAME='ASIGNACION DE REQUERIMIENTOS'AND HFRE.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFI ON O.OTPAKGID=HFI.PACKAGEOBJID AND HFI.STATENAME='DISEÑO'AND HFI.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFCTR ON O.OTPAKGID=HFCTR.PACKAGEOBJID AND HFCTR.STATENAME='ASEGURAMIENTO DE CALIDAD'AND HFCTR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFAR ON O.OTPAKGID=HFAR.PACKAGEOBJID AND HFAR.STATENAME='ACEPTACION USUARIO'AND HFAR.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEO ON O.OTPAKGID=HFEO.PACKAGEOBJID AND HFEO.STATENAME='PUESTA EN PRODUCCION'AND HFEO.ACTION='PROMOTE'LEFT JOIN HARPKGHISTORY HFEP ON O.OTPAKGID=HFEP.PACKAGEOBJID AND HFEP.STATENAME='PRODUCCION'AND HFEP.ACTION='PROMOTE'WHERE O.OTPAKGID=TEA.CPKGID AND O.OTDETIPO IN(SELECT CTIPO FROM#TMP_FILTRO_TIPO)AND TEA.VCESTADO IN(SELECT CESTADO FROM#TMP_FILTRO_ESTADO)AND O.OTASJEFE IN(SELECT CNOMBREJEFE FROM#TMP_FILTRO_JEFE)AND O.OTASINGP IS NULL GROUP BY O.OTDENUME,O.OTPAKGID ORDER BY O.OTDENUME DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Warning	InsertSelectWithOrderBy	Insert Select with Order By clause used without order by	tp1.OTPAKGID DESC	SELECT TP1.OTPAKGID"ID PAQUETE",TP1.OTPKGNME"NOMBRE PAQUETE",TP1.OTDENUME"OT",TP1.OTDETIPO"TIPO REQUERIMIENTO",TP1.OTDEREQU"DESCRIPCIÓN",TF.OTFRECEP"RECIBIDA EL",TP1.OTDEUSRC"EMISOR",TP1.OTDEFREQ"FECHA REQUERIDA",TP1.OTASJEFE"JPY",TP1.OTASINGP"IPY",TF.OTDEFINI"FECHA INICIO",TP1.OTFTERES"FECHA TERMINO CONSTRUCCIÓN ESTIMADO",TF.OTFETERR"FECHA TERMINO CONSTRUCCIÓN REAL",TP1.OTFEREPR"FECHA REPROGRAMACIÓN",TP1.OTFEACPE"FECHA ACEPTACIÓN ESTIMADO",TF.OTFEACEP"FECHA ACEPTACIÓN REAL",TF.OTFENTOP"FECHA ENTREGA OPERACIONES",TF.OTFEPROD"FECHA ENTREGA PRODUCCIÓN",TP1.OTESTADO"ESTADO",TP1.OTDEFPRO"FAMILIA"FROM#TMP_PROY1 TP1,#TMP_FECHAS_PROY TF WHERE TP1.OTDENUME=TF.OTDENUME AND TP1.OTPAKGID=TF.OTPAKGID ORDER BY TP1.OTPAKGID DESC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	hh.packageobjid desc, ; ; ; hh.execdtime ASC	SELECT HH.PACKAGEOBJID"ID PAQUETE",HH.ACTION"ACCION",HH.EXECDTIME"FECHA",HH.STATENAME"ESTADO"FROM HARPKGHISTORY AS HH WHERE(HH.ACTION='DEMOTE'OR HH.ACTION='PROMOTE')ORDER BY HH.PACKAGEOBJID DESC,HH.EXECDTIME ASC
harvest	[dbo].[spConsultaIndicadoresProyectos]	Warning	InsertSelectWithOrderBy	Insert Select with Order By clause used without order by	idpak DESC	SELECT IDPAK"ID PAQUETE",COUNT(ESTADO)"CICLOS QA"FROM#TMP_HISTORY WHERE ESTADO='ASEGURAMIENTO DE CALIDAD'GROUP BY IDPAK ORDER BY IDPAK DESC
harvest	[dbo].[tng_add_auth]	Information	MultiPartObjectName	Using 4 or 5 part names	*	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[tng_add_auth]') IS NULL EXEC('CREATE PROCEDURE [dbo].[tng_add_auth] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[tng_add_auth]( @name varchar(20),        @access char(1),       @mask varchar(15)='*.*.*.*',       @status_on tinyint=0  )as   insert into tng_auth ( name,  access, mask )values ( @name, @access, @mask )if @@error !=0 begin if @status_on=1 raiserror ('MSG:(90024) Insert tng_auth error, @name=%s, @access=%s.', 16, -1, @name, @access)return end GO
harvest	[dbo].[tng_start_service]	Warning	Xp_cmdshell	Using Xp_cmdshell	Xp_cmdshell	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.TNG_START_SERVICE')IS NULL EXEC('CREATE PROCEDURE DBO.TNG_START_SERVICE AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.TNG_START_SERVICE(@SERVICENAME VARCHAR(64))AS DECLARE@CMDLINE VARCHAR(255)SELECT@CMDLINE='NET START'+@SERVICENAME EXEC TNG_MASTER..XP_CMDSHELL@CMDLINE,NO_OUTPUT GO
harvest	[dbo].[tng_stop_service]	Warning	Xp_cmdshell	Using Xp_cmdshell	Xp_cmdshell	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.TNG_STOP_SERVICE')IS NULL EXEC('CREATE PROCEDURE DBO.TNG_STOP_SERVICE AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.TNG_STOP_SERVICE(@SERVICENAME VARCHAR(64))AS DECLARE@CMDLINE VARCHAR(255)SELECT@CMDLINE='NET STOP'+@SERVICENAME EXEC TNG_MASTER..XP_CMDSHELL@CMDLINE,NO_OUTPUT GO
harvest	[dbo].[ujo_get_eoid]	Warning	UnsupportedHint	UPDLOCK hint	UPDLOCK	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.UJO_GET_EOID AS DECLARE@DIGIT0 VARCHAR(1),@DIGIT1 VARCHAR(1),@DIGIT2 VARCHAR(1),@DIGIT3 VARCHAR(1),@DIGIT4 VARCHAR(1),@DIGIT5 VARCHAR(1),@DIGIT6 VARCHAR(1),@LAST_EOID VARCHAR(12),@EOID VARCHAR(12),@TEST0 INT,@TEST1 INT,@TEST2 INT,@TEST3 INT,@TEST4 INT,@TEST5 INT,@TEST6 INT BEGIN TRANSACTION SET@LAST_EOID=(SELECT COUNTER FROM UJO_LAST_EOID_COUNTER(UPDLOCK))SET@DIGIT0=SUBSTRING(@LAST_EOID,1,1)SET@DIGIT1=SUBSTRING(@LAST_EOID,2,1)SET@DIGIT2=SUBSTRING(@LAST_EOID,3,1)SET@DIGIT3=SUBSTRING(@LAST_EOID,4,1)SET@DIGIT4=SUBSTRING(@LAST_EOID,5,1)SET@DIGIT5=SUBSTRING(@LAST_EOID,6,1)SET@DIGIT6=SUBSTRING(@LAST_EOID,7,1)EXEC UJO_BUMP_DIGIT@DIGIT6,@DIGIT6 OUTPUT,@TEST6 OUTPUT IF@TEST6=1 BEGIN EXEC UJO_BUMP_DIGIT@DIGIT5,@DIGIT5 OUTPUT,@TEST5 OUTPUT IF@TEST5=1 BEGIN EXEC UJO_BUMP_DIGIT@DIGIT4,@DIGIT4 OUTPUT,@TEST4 OUTPUT IF@TEST4=1 BEGIN EXEC UJO_BUMP_DIGIT@DIGIT3,@DIGIT3 OUTPUT,@TEST3 OUTPUT IF@TEST3=1 BEGIN EXEC UJO_BUMP_DIGIT@DIGIT2,@DIGIT2 OUTPUT,@TEST2 OUTPUT IF@TEST2=1 BEGIN EXEC UJO_BUMP_DIGIT@DIGIT1,@DIGIT1 OUTPUT,@TEST1 OUTPUT IF@TEST1=1 BEGIN EXEC UJO_BUMP_DIGIT@DIGIT0,@DIGIT0 OUTPUT,@TEST0 OUTPUT IF@TEST0=1 BEGIN SET@DIGIT0=<str>SET@DIGIT1=<str>SET@DIGIT2=<str>SET@DIGIT3=<str>SET@DIGIT4=<str>SET@DIGIT5=<str>SET@DIGIT6=<str>END END END END END END END SET@EOID=@DIGIT0+@DIGIT1+@DIGIT2+@DIGIT3+@DIGIT4+@DIGIT5+@DIGIT6 UPDATE UJO_LAST_EOID_COUNTER SET COUNTER=@EOID COMMIT TRANSACTION SELECT@EOID RETURN-999 GO
harvest	[dbo].[ujo_setNget_status]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY D.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.UJO_SETNGET_STATUS@I_PID INT,@I_TIME_STAMP INT,@I_HOSTNAME VARCHAR(255),@I_DESIGNATOR VARCHAR(20),@I_STATUS VARCHAR(20),@I_STATE VARCHAR(20)AS DECLARE@L_HA_DESIGNATOR_ID INT DECLARE@L_HA_STATUS_ID INT DECLARE@L_HA_STATE_ID INT DECLARE@L_NUM_ROWS INT DECLARE@L_CURRENT_STATE VARCHAR(20)DECLARE@L_PID DECIMAL(16)DECLARE@L_TIME_STAMP DECIMAL(16)DECLARE@L_HOSTNAME VARCHAR(255)DECLARE@L_DNAME VARCHAR(20)DECLARE@L_SNAME VARCHAR(20)DECLARE@L_STATE VARCHAR(20)SELECT@L_NUM_ROWS=0 SELECT@L_HA_DESIGNATOR_ID=ID FROM UJO_HA_DESIGNATOR WHERE NAME=@I_DESIGNATOR IF(@@ROWCOUNT=0)BEGIN PRINT<str>RETURN 1 END SELECT@L_HA_STATUS_ID=ID FROM UJO_HA_STATUS WHERE NAME=@I_STATUS IF(@@ROWCOUNT=0)BEGIN PRINT<str>RETURN 1 END SELECT@L_HA_STATE_ID=ID FROM UJO_HA_STATE WHERE NAME=@I_STATE IF(@@ROWCOUNT=0)BEGIN PRINT<str>RETURN 1 END IF(SELECT TOP 1 1 FROM UJO_HA_PROCESS WHERE HA_DESIGNATOR_ID=@L_HA_DESIGNATOR_ID)>0 BEGIN UPDATE UJO_HA_PROCESS SET PID=@I_PID,TIME_STAMP=@I_TIME_STAMP,HOSTNAME=@I_HOSTNAME,HA_STATUS_ID=@L_HA_STATUS_ID WHERE HA_DESIGNATOR_ID=@L_HA_DESIGNATOR_ID END ELSE BEGIN INSERT INTO UJO_HA_PROCESS(PID,TIME_STAMP,HOSTNAME,HA_DESIGNATOR_ID,HA_STATUS_ID)VALUES(@I_PID,@I_TIME_STAMP,@I_HOSTNAME,@L_HA_DESIGNATOR_ID,@L_HA_STATUS_ID)END COMMIT SELECT@L_CURRENT_STATE=H.NAME FROM UJO_SYS_HA_STATE SYS,UJO_HA_STATE H WHERE SYS.HA_STATE_ID=H.ID IF(@L_CURRENT_STATE=<str>AND@I_STATE=<str>)OR(@L_CURRENT_STATE=<str>AND@I_STATE=<str>)OR(@L_CURRENT_STATE=<str>AND@I_STATE=<str>)OR(@L_CURRENT_STATE=<str>AND@I_STATE=<str>)BEGIN UPDATE UJO_SYS_HA_STATE SET HA_STATE_ID=@L_HA_STATE_ID SELECT@L_STATE=@I_STATE END ELSE BEGIN SELECT@L_STATE=@L_CURRENT_STATE END COMMIT SELECT P.PID,P.TIME_STAMP,P.HOSTNAME,D.NAME,S.NAME FROM UJO_HA_PROCESS P,UJO_HA_DESIGNATOR D,UJO_HA_STATUS S WHERE P.HA_DESIGNATOR_ID=D.ID AND P.HA_STATUS_ID=S.ID ORDER BY D.NAME COMMIT RETURN 0 GO
harvest	[dbo].[usd_act_appl_cmpname_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CMP.LANNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ACT_APPL_CMPNAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT APP.OBJECTID FROM USD_APPLIC APP,USD_V_TARGET CMP WHERE APP.TARGET=CMP.OBJECTID AND ACTIVITY=@KEY_VALUE ORDER BY CMP.LANNAME END GO
harvest	[dbo].[usd_act_cmp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY C.LANNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ACT_CMP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LAC.COMP FROM USD_LINK_ACT_CMP LAC,USD_V_TARGET C WHERE LAC.COMP=C.OBJECTID AND LAC.ACT=@KEY_VALUE ORDER BY C.LANNAME END GO
harvest	[dbo].[usd_act_grp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY AG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ACT_GRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LAG.GRP FROM USD_LINK_ACT_GRP LAG,USD_V_COMMON_GRP AG WHERE LAG.GRP=AG.OBJECTID AND LAG.ACT=@KEY_VALUE ORDER BY AG.NAME END GO
harvest	[dbo].[usd_act_inst_instoid_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LAI.INSTALLATION	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ACT_INST_INSTOID_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LAI.INSTALLATION FROM USD_LINK_ACT_INST LAI WHERE LAI.ACTIVITY=@KEY_VALUE ORDER BY LAI.INSTALLATION END GO
harvest	[dbo].[usd_act_jc_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY JC.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ACT_JC_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LJCA.JCONT FROM USD_LINK_JC_ACT LJCA,USD_JOB_CONT JC WHERE LJCA.JCONT=JC.OBJECTID AND LJCA.ACTIVITY=@KEY_VALUE ORDER BY JC.NAME,(CAST(JC.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_ap_swfold_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SWF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_AP_SWFOLD_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LAPG.PROCGRP FROM USD_LINK_GRP_PROC LAPG,USD_SWFOLD SWF WHERE LAPG.PROCGRP=SWF.OBJECTID AND LAPG.AP=@KEY_VALUE ORDER BY SWF.NAME,(CAST(SWF.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_assetgrp_cmp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY C.LANNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ASSETGRP_CMP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.MEMBER_UUID FROM CA_GROUP_MEMBER GM,USD_V_TARGET C WHERE GM.MEMBER_UUID=C.OBJECTID AND GM.GROUP_UUID=@KEY_VALUE AND(GM.MEMBER_TYPE=1 OR GM.MEMBER_TYPE=4)ORDER BY C.LANNAME END GO
harvest	[dbo].[usd_assetgrp_jc_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY J.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ASSETGRP_JC_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT J.OBJECTID FROM USD_JOB_CONT J WHERE J.QTEMPLFOLD=@KEY_VALUE ORDER BY J.NAME,(CAST(J.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_assetgrp_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY AG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ASSETGRP_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.MEMBER_UUID FROM CA_GROUP_MEMBER GM,USD_V_ASSET_GRP AG WHERE GM.MEMBER_UUID=AG.OBJECTID AND GM.GROUP_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY AG.NAME END GO
harvest	[dbo].[usd_assetgrp_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY AG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_ASSETGRP_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.GROUP_UUID FROM CA_GROUP_MEMBER GM,USD_V_ASSET_GRP AG WHERE GM.GROUP_UUID=AG.OBJECTID AND GM.MEMBER_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY AG.NAME END GO
harvest	[dbo].[usd_cfold_cont_disttime_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY C.DISTTIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CFOLD_CONT_DISTTIME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCFC.CONT FROM USD_LINK_CFOLD_CONT LCFC,USD_CONT C WHERE LCFC.CONT=C.OBJECTID AND LCFC.CONTFOLD=@KEY_VALUE ORDER BY C.DISTTIME END GO
harvest	[dbo].[usd_cfold_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CFOLD_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCF.CFOLD_CHILD FROM USD_LINK_CONTFOLD LCF,USD_CONTFOLD CF WHERE LCF.CFOLD_CHILD=CF.OBJECTID AND LCF.CFOLD_PARENT=@KEY_VALUE ORDER BY CF.NAME END GO
harvest	[dbo].[usd_cfold_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CFOLD_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCF.CFOLD_PARENT FROM USD_LINK_CONTFOLD LCF,USD_CONTFOLD CF WHERE LCF.CFOLD_PARENT=CF.OBJECTID AND LCF.CFOLD_CHILD=@KEY_VALUE ORDER BY CF.NAME END GO
harvest	[dbo].[usd_cmp_applic_actprocid_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY AP.OBJECTID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMP_APPLIC_ACTPROCID_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT A.OBJECTID FROM USD_APPLIC A,USD_ACTPROC AP WHERE A.ACTPROC=AP.OBJECTID AND A.TARGET=@KEY_VALUE AND((A.TASK=0X00000001 AND A.STATUS!=10 AND A.STATUS!=15 AND A.STATUS!=16)OR(A.TASK=0X00000010 AND A.STATUS!=5 AND A.STATUS!=6))AND A.UNINSTALLSTATE<>2 ORDER BY AP.OBJECTID END GO
harvest	[dbo].[usd_cmp_applic_actprocid_cltn_ro]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY AP.OBJECTID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMP_APPLIC_ACTPROCID_CLTN_RO(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT A.OBJECTID,A.VERSION,A.TARGET,A.ACTPROC,A.ACTIVITY,A.INSTALLATION,A.STATUS,A.ERRORCAUSE,A.ERRORPARAM,A.CREATIONTIME,A.ACTIVATIONTIME,A.COMPLETIONTIME,A.ADMINISTRATOR,A.APPLICATIONID,A.COMMENT,A.TASK,A.PERCENTSENT,A.RETENTIONTIME,A.RENEWSTATUS,A.FIRSTRENEW,A.NEXTRENEW,A.APPLICATIONGROUP,A.USERPARAMS,A.UUID,A.RACASSOC,A.UNINSTALLSTATE,A.PERMMASK,A.STARTTIME,A.UUID2 FROM USD_APPLIC A,USD_ACTPROC AP WHERE A.ACTPROC=AP.OBJECTID AND A.TARGET=@KEY_VALUE AND((A.TASK=0X00000001 AND A.STATUS!=10 AND A.STATUS!=15 AND A.STATUS!=16)OR(A.TASK=0X00000010 AND A.STATUS!=5 AND A.STATUS!=6))AND A.UNINSTALLSTATE<>2 ORDER BY AP.OBJECTID END GO
harvest	[dbo].[usd_cmp_applic_itemname_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY RSW.ITEMNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMP_APPLIC_ITEMNAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT APP.OBJECTID FROM USD_APPLIC APP,USD_ACTPROC ACP,USD_RSW RSW WHERE APP.ACTPROC=ACP.OBJECTID AND ACP.RSW=RSW.OBJECTID AND APP.TARGET=@KEY_VALUE ORDER BY RSW.ITEMNAME END GO
harvest	[dbo].[usd_cmp_comp_ssname_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CMP.LANNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMP_COMP_SSNAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT CMP.OBJECTID FROM USD_V_TARGET CMP WHERE CMP.OBJECTID=CMP.SSID AND CMP.SSID=@KEY_VALUE ORDER BY CMP.LANNAME END GO
harvest	[dbo].[usd_cmp_group_groupname_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMP_GROUP_GROUPNAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCCG.GRP FROM USD_LINK_GRP_CMP LCCG,USD_CMP_GRP CG WHERE LCCG.GRP=CG.OBJECTID AND LCCG.COMP=@KEY_VALUE ORDER BY CG.NAME,(CAST(CG.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_cmpgrp_cmp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY C.LANNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMPGRP_CMP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCCG.COMP FROM USD_LINK_GRP_CMP LCCG,USD_V_TARGET C WHERE LCCG.COMP=C.OBJECTID AND LCCG.GRP=@KEY_VALUE ORDER BY C.LANNAME END GO
harvest	[dbo].[usd_cmpgrp_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMPGRP_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCG.GRPCHILD FROM USD_LINK_CMPGRP LCG,USD_CMP_GRP CG WHERE LCG.GRPCHILD=CG.OBJECTID AND LCG.GRPPARENT=@KEY_VALUE ORDER BY CG.NAME,(CAST(CG.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_cmpgrp_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CMPGRP_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCG.GRPPARENT FROM USD_LINK_CMPGRP LCG,USD_CMP_GRP CG WHERE LCG.GRPPARENT=CG.OBJECTID AND LCG.GRPCHILD=@KEY_VALUE ORDER BY CG.NAME,(CAST(CG.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_cont_cfold_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY CF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_CONT_CFOLD_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LCFC.CONTFOLD FROM USD_LINK_CFOLD_CONT LCFC,USD_CONTFOLD CF WHERE LCFC.CONTFOLD=CF.OBJECTID AND LCFC.CONT=@KEY_VALUE ORDER BY CF.NAME END GO
harvest	[dbo].[usd_jc_act_order_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY A.ORDERNUMB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_JC_ACT_ORDER_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LJCA.ACTIVITY FROM USD_LINK_JC_ACT LJCA,USD_ACTIVITY A WHERE LJCA.ACTIVITY=A.OBJECTID AND LJCA.JCONT=@KEY_VALUE ORDER BY A.ORDERNUMB END GO
harvest	[dbo].[usd_jc_distemp_time_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY DT.DISTTIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_JC_DISTEMP_TIME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT DT.OBJECTID FROM USD_DISTTEMPL DT,USD_JOB_CONT JC WHERE DT.TEMPLATE=JC.OBJECTID AND JC.OBJECTID=@KEY_VALUE ORDER BY DT.DISTTIME END GO
harvest	[dbo].[usd_jc_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY JC.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_JC_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LJC.JCCHILD FROM USD_LINK_JC LJC,USD_JOB_CONT JC WHERE LJC.JCCHILD=JC.OBJECTID AND LJC.JCPARENT=@KEY_VALUE ORDER BY JC.NAME,(CAST(JC.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_jc_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY JC.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_JC_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LJC.JCPARENT FROM USD_LINK_JC LJC,USD_JOB_CONT JC WHERE LJC.JCPARENT=JC.OBJECTID AND LJC.JCCHILD=@KEY_VALUE ORDER BY JC.NAME,(CAST(JC.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_jcappgr_appl_nosort_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY AC.ORDERNUMB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_JCAPPGR_APPL_NOSORT_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT AP.OBJECTID FROM USD_APPLIC AP,USD_ACTIVITY AC WHERE AC.OBJECTID=AP.ACTIVITY AND AP.APPLICATIONGROUP=@KEY_VALUE ORDER BY AC.ORDERNUMB END GO
harvest	[dbo].[usd_ls_distemp_time_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY DT.DISTTIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LS_DISTEMP_TIME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT DT.OBJECTID FROM USD_DISTTEMPL DT,USD_V_LS LS WHERE DT.DOMAIN=LS.OBJECTID AND LS.OBJECTID=@KEY_VALUE ORDER BY DT.DISTTIME END GO
harvest	[dbo].[usd_ls_distsw_namever_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SW.ITEMNAME,SW.ITEMVERSION	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LS_DISTSW_NAMEVER_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT DSW.OBJECTID FROM USD_DISTSW DSW,USD_RSW SW WHERE DSW.RSW=SW.OBJECTID AND DSW.LOCALSITE=@KEY_VALUE ORDER BY SW.ITEMNAME,SW.ITEMVERSION END GO
harvest	[dbo].[usd_ls_fitems_nametime_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY FIO.FINAME,FI.FETCHTIME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LS_FITEMS_NAMETIME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT FI.OBJECTID FROM USD_FITEM FI,USD_FIO FIO WHERE FI.FIO=FIO.OBJECTID AND FI.LOCALSITE=@KEY_VALUE ORDER BY FIO.FINAME,FI.FETCHTIME END GO
harvest	[dbo].[usd_ls_lsg_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LSG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LS_LSG_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.GROUP_UUID FROM CA_GROUP_MEMBER GM,USD_V_LSG LSG WHERE GM.GROUP_UUID=LSG.OBJECTID AND GM.MEMBER_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY LSG.NAME END GO
harvest	[dbo].[usd_lsgrp_ls_siteid_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LS.SITEID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LSGRP_LS_SITEID_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.MEMBER_UUID FROM CA_GROUP_MEMBER GM,USD_V_LS LS WHERE GM.MEMBER_UUID=LS.OBJECTID AND GM.GROUP_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=5 ORDER BY LS.SITEID END GO
harvest	[dbo].[usd_lsgrp_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LSG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LSGRP_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.MEMBER_UUID FROM CA_GROUP_MEMBER GM,USD_V_LSG LSG WHERE GM.MEMBER_UUID=LSG.OBJECTID AND GM.GROUP_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY LSG.NAME END GO
harvest	[dbo].[usd_lsgrp_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LSG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_LSGRP_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.GROUP_UUID FROM CA_GROUP_MEMBER GM,USD_V_LSG LSG WHERE GM.GROUP_UUID=LSG.OBJECTID AND GM.MEMBER_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY LSG.NAME END GO
harvest	[dbo].[usd_rsw_fold_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SWF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_RSW_FOLD_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LSWG.SWG FROM USD_LINK_SWG_SW LSWG,USD_SWFOLD SWF WHERE LSWG.SWG=SWF.OBJECTID AND LSWG.SW=@KEY_VALUE ORDER BY SWF.NAME,(CAST(SWF.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_servgrp_srv_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY C.LANNAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_SERVGRP_SRV_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT C.OBJECTID FROM CA_GROUP_MEMBER GM,USD_V_TARGET C,CA_SERVER S WHERE GM.MEMBER_UUID=S.SERVER_UUID AND C.OBJECTID=S.DIS_HW_UUID AND GM.GROUP_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=7 ORDER BY C.LANNAME END GO
harvest	[dbo].[usd_servgrp_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_SERVGRP_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.MEMBER_UUID FROM CA_GROUP_MEMBER GM,USD_V_SERVER_GRP SG WHERE GM.MEMBER_UUID=SG.OBJECTID AND GM.GROUP_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY SG.NAME END GO
harvest	[dbo].[usd_servgrp_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SG.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_SERVGRP_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT GM.GROUP_UUID FROM CA_GROUP_MEMBER GM,USD_V_SERVER_GRP SG WHERE GM.GROUP_UUID=SG.OBJECTID AND GM.MEMBER_UUID=@KEY_VALUE AND GM.MEMBER_TYPE=0 ORDER BY SG.NAME END GO
harvest	[dbo].[usd_swfld_subgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SWF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_SWFLD_SUBGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LSWG.GRPCHILD FROM USD_LINK_SWGRP LSWG,USD_SWFOLD SWF WHERE LSWG.GRPCHILD=SWF.OBJECTID AND LSWG.GRPPARENT=@KEY_VALUE ORDER BY SWF.NAME,(CAST(SWF.ATTRIBUTES AS INT)&0X00000004)END GO
harvest	[dbo].[usd_swfld_supgrp_name_cltn]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY SWF.NAME	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USD_SWFLD_SUPGRP_NAME_CLTN(@KEY_VALUE AS BINARY(16))AS BEGIN SELECT LSWG.GRPPARENT FROM USD_LINK_SWGRP LSWG,USD_SWFOLD SWF WHERE LSWG.GRPPARENT=SWF.OBJECTID AND LSWG.GRPCHILD=@KEY_VALUE ORDER BY SWF.NAME,(CAST(SWF.ATTRIBUTES AS INT)&0X00000004)END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_AddWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_ADDWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_ADDWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_ADDWORKINGDAYS(@STARTDATE DATETIME,@DAYS INT)RETURNS DATETIME AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DOW INT DECLARE@WORKING TINYINT DECLARE@CODIGO INT IF@DAYS>0 BEGIN WHILE@DAYS>0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE+1 END END ELSE BEGIN WHILE@DAYS<0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END SET@STARTDATE=@STARTDATE-1 SET@DAYS=@DAYS+@WORKING END SET@WORKING=0 WHILE@WORKING=0 BEGIN SET@WORKING=1 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@WORKING=0 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@WORKING=0 END IF@WORKING=0 SET@STARTDATE=@STARTDATE-1 END END RETURN@STARTDATE END GO
ISOKEYNET	[dbo].[ik_getWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_GETWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_GETWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_GETWORKINGDAYS(@STARTDATE DATETIME,@ENDDATE DATETIME)RETURNS INT AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DAYS INT SET@DAYS=DATEDIFF(DAY,@STARTDATE,@ENDDATE)IF@DAYS<0 RETURN 0 DECLARE@DOW INT DECLARE@NOTWORKING TINYINT DECLARE@CODIGO INT WHILE DATEDIFF(DAY,@ENDDATE,@STARTDATE)<>0 BEGIN SET@NOTWORKING=0 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@NOTWORKING=1 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@NOTWORKING=1 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@NOTWORKING END RETURN@DAYS END GO
ISOKEYNET	[dbo].[ik_getWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_GETWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_GETWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_GETWORKINGDAYS(@STARTDATE DATETIME,@ENDDATE DATETIME)RETURNS INT AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DAYS INT SET@DAYS=DATEDIFF(DAY,@STARTDATE,@ENDDATE)IF@DAYS<0 RETURN 0 DECLARE@DOW INT DECLARE@NOTWORKING TINYINT DECLARE@CODIGO INT WHILE DATEDIFF(DAY,@ENDDATE,@STARTDATE)<>0 BEGIN SET@NOTWORKING=0 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@NOTWORKING=1 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@NOTWORKING=1 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@NOTWORKING END RETURN@DAYS END GO
ISOKEYNET	[dbo].[ik_getWorkingDays]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	DATEPART	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.IK_GETWORKINGDAYS')IS NULL EXEC('CREATE FUNCTION DBO.IK_GETWORKINGDAYS()RETURNS INT AS BEGIN/*TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED*/RETURN 0 END')GO ALTER FUNCTION DBO.IK_GETWORKINGDAYS(@STARTDATE DATETIME,@ENDDATE DATETIME)RETURNS INT AS BEGIN DECLARE@SATURDAY INT,@SUNDAY INT DECLARE@SATDATE DATETIME DECLARE@SUNDATE DATETIME SET@SATDATE='2006-08-26'SET@SUNDATE='2006-08-27'SET@SATURDAY=(SELECT DATEPART(WEEKDAY,@SATDATE))SET@SUNDAY=(SELECT DATEPART(WEEKDAY,@SUNDATE))DECLARE@DAYS INT SET@DAYS=DATEDIFF(DAY,@STARTDATE,@ENDDATE)IF@DAYS<0 RETURN 0 DECLARE@DOW INT DECLARE@NOTWORKING TINYINT DECLARE@CODIGO INT WHILE DATEDIFF(DAY,@ENDDATE,@STARTDATE)<>0 BEGIN SET@NOTWORKING=0 SET@DOW=DATEPART(WEEKDAY,@STARTDATE)IF(@DOW=@SATURDAY OR@DOW=@SUNDAY)SET@NOTWORKING=1 ELSE BEGIN SET@CODIGO=(SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE DATEPART(DAY,FECHA)=DATEPART(DAY,@STARTDATE)AND DATEPART(MONTH,FECHA)=DATEPART(MONTH,@STARTDATE)AND DATEPART(YEAR,FECHA)=DATEPART(YEAR,@STARTDATE))IF NOT@CODIGO IS NULL SET@NOTWORKING=1 END SET@STARTDATE=@STARTDATE+1 SET@DAYS=@DAYS-@NOTWORKING END RETURN@DAYS END GO
ISOKEYNET	[dbo].[fn_usr_getDocsDistrib]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	NOMBRE	SELECT CODIGO,NOMBRE,CODIGOISO,REVISION,C_REVISION,CODIGODISTRIBUCION,MIN(TIPO_DISTRIBUCION)FROM(SELECT CODIGO,NOMBRE,CODIGOISO,REVISION,C_REVISION,CODIGODISTRIBUCION,DIS.TIPO_DISTRIBUCION FROM DOCUMENTOS DOC JOIN@DISTRI DIS ON(DOC.CODIGO=DIS.CODIGODOC)WHERE L_ISSURVEY=0 AND ESTADO=2 AND DIS.TIPO_DISTRIBUCION<10 AND(@L_INCLUDE_RUNNING_DISTRIBUTIONS=1 OR(@L_INCLUDE_RUNNING_DISTRIBUTIONS=0 AND CODIGO NOT IN(SELECT CODIGODOCUMENTO FROM VISTA_CONDOCTAREASUSUARIOS WHERE CODIGOUSUARIO=@IKCDU)))UNION SELECT CODIGO,NOMBRE,CODIGOISO,REVISION,C_REVISION,CODIGODISTRIBUCION,DIS.TIPO_DISTRIBUCION FROM DOCUMENTOS DOC JOIN@DISTRI DIS ON(DOC.CODIGODISTRIBUCION=DIS.CODIGODOC)WHERE L_ISSURVEY=0 AND ESTADO=2 AND DIS.TIPO_DISTRIBUCION<10 AND(@L_INCLUDE_RUNNING_DISTRIBUTIONS=1 OR(@L_INCLUDE_RUNNING_DISTRIBUTIONS=0 AND CODIGO NOT IN(SELECT CODIGODOCUMENTO FROM VISTA_CONDOCTAREASUSUARIOS WHERE CODIGOUSUARIO=@IKCDU))))DATA GROUP BY CODIGO,NOMBRE,CODIGOISO,REVISION,C_REVISION,CODIGODISTRIBUCION ORDER BY NOMBRE
ISOKEYNET	[dbo].[ax_robot_Reports_ExtraData_CustomFields]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.AX_ROBOT_REPORTS_EXTRADATA_CUSTOMFIELDS@RPT_UID UNIQUEIDENTIFIER,@TEMP_TABLE NVARCHAR(200)AS BEGIN SET NOCOUNT ON;DECLARE@CUSTOM_FIELDS_XML XML;SELECT@CUSTOM_FIELDS_XML=ISNULL(CUSTOM_FIELDS_XML,<str>)FROM ROBOTS_REPORTS_EXTRADATA WHERE ROBOTS_REPORTS_EXTRADATA.RPT_UID=@RPT_UID;SELECT TAB.COL.VALUE(<str>,<str>)AS NAME,TAB.COL.VALUE(<str>,<str>)AS VALUE INTO#TEMP_DICTIONARY FROM@CUSTOM_FIELDS_XML.NODES(<str>)TAB(COL);DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX);SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(#TEMP_DICTIONARY.NAME)FROM#TEMP_DICTIONARY FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>);DECLARE@COLSINS NVARCHAR(MAX);SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>;SET@QUERY=<str>+@TEMP_TABLE+<str>+@COLSINS;EXECUTE(@QUERY);SET@QUERY=<str>+@TEMP_TABLE+<str>+@COLS+<str>+@COLS+<str>+<str>+@COLS+<str>EXECUTE(@QUERY);END GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesDeadlinesBCToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESDEADLINESBCTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS SELECT CODIGONC,ETAPA,MAX(FECHALIMITE)AS FECHALIMITE_ETAPA INTO#TEMP_FECHASLIMITE_ETAPAS FROM NCTAREAS JOIN NCMAINPROD ON NCMAINPROD.CODIGO=NCTAREAS.CODIGONC WHERE NCTAREAS.L_CUMPLIDA=0 AND NCMAINPROD.TIPO=@MODULEID GROUP BY CODIGONC,ETAPA DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesDeadlinesCSSToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESDEADLINESCSSTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS SELECT CODIGONC,ETAPA,MAX(FECHALIMITE)AS FECHALIMITE_ETAPA INTO#TEMP_FECHASLIMITE_ETAPAS FROM NCTAREAS JOIN NCMAINPROD ON NCMAINPROD.CODIGO=NCTAREAS.CODIGONC WHERE NCTAREAS.L_CUMPLIDA=0 AND NCMAINPROD.TIPO=@MODULEID GROUP BY CODIGONC,ETAPA DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesDeadlinesFCToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESDEADLINESFCTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS SELECT CODIGONC,ETAPA,MAX(FECHALIMITE)AS FECHALIMITE_ETAPA INTO#TEMP_FECHASLIMITE_ETAPAS FROM NCTAREAS JOIN NCMAINPROD ON NCMAINPROD.CODIGO=NCTAREAS.CODIGONC WHERE NCTAREAS.L_CUMPLIDA=0 AND NCMAINPROD.TIPO=@MODULEID GROUP BY CODIGONC,ETAPA DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesDeadlinesToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESDEADLINESTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesDescripToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESDESCRIPTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str><str><str><str><str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesRespsPositionIdsToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESRESPSPOSITIONIDSTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesRespsPositionToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESRESPSPOSITIONTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_addIssueClassStagesRespsUserToTable]	Warning	Execute	Using dynamic SQL	EXECUTE(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADDISSUECLASSSTAGESRESPSUSERTOTABLE(@MODULEID INT,@TMP_TABLE NVARCHAR(500))AS DECLARE@COLS AS NVARCHAR(MAX),@QUERY AS NVARCHAR(MAX)SELECT@COLS=STUFF((SELECT<str>+QUOTENAME(<str>+CONVERT(NVARCHAR(10),NCDEFINICIONETAPAS.ETAPA))FROM NCDEFINICIONETAPAS WHERE TIPO=@MODULEID AND NCDEFINICIONETAPAS.L_EXCLUIDA=0 GROUP BY NCDEFINICIONETAPAS.DESCRIPCIONCORTA,NCDEFINICIONETAPAS.ETAPA ORDER BY NCDEFINICIONETAPAS.ETAPA FOR XML PATH(<str>),TYPE).VALUE(<str>,<str>),1,1,<str>)DECLARE@COLSINS NVARCHAR(MAX)SET@COLSINS=REPLACE(@COLS,<str>,<str>)+<str>SET@QUERY=<str>+@TMP_TABLE+<str>+@COLSINS EXECUTE(@QUERY);SET@QUERY=<str>+@TMP_TABLE+<str>+@COLS+<str><str><str><str><str>+CONVERT(NVARCHAR(20),@MODULEID)+<str>+@COLS+<str>EXECUTE(@QUERY);RETURN GO
ISOKEYNET	[dbo].[ik_adm_users]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_ADM_USERS(@PARAMETERS NVARCHAR(1000)=<str>,@SORT NVARCHAR(50))AS BEGIN SET NOCOUNT ON;DECLARE@STRSQL VARCHAR(4000)SET@STRSQL=<str>+<str>+<str><str><str>+<str><str><str>+<str>+<str>+<str><str><str>+<str><str><str>+<str>+<str>+<str><str><str>+<str><str><str>+<str><str><str>+<str><str><str>+<str><str><str>+<str>+<str>+<str><str><str>+<str><str><str>+<str><str><str>+<str><str><str>+<str>+<str>+<str><str><str>+<str><str><str>+<str><str><str>+<str><str><str>+<str>+<str>+<str><str><str><str><str>+<str>+<str>+<str>+<str>IF@PARAMETERS<><str>BEGIN SET@STRSQL=@STRSQL+<str>+@PARAMETERS END IF@SORT<><str>BEGIN SET@STRSQL=@STRSQL+<str>+@SORT END ELSE BEGIN SET@STRSQL=@STRSQL+<str>END EXEC(@STRSQL)END GO
ISOKEYNET	[dbo].[ik_BS_FORMULA]	Warning	Execute	Using dynamic SQL	EXEC(@SQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_BS_FORMULA(@BS_INDICATORSID INT,@TIME_PERIOD INT,@RV_FORMULA VARCHAR(MAX),@PV_FORMULA VARCHAR(MAX),@CS_INVOLVED_INDICATORS VARCHAR(300),@SJOINS VARCHAR(MAX),@SWHERE VARCHAR(MAX))AS SET NOCOUNT ON SET DATEFORMAT YMD SET DATEFIRST 7 CREATE TABLE#TEMP_INDICATOR(PERIODO INT,PLANNED_VALUE FLOAT,ACTUAL_VALUE FLOAT,SRC_INDICATOR INT)DECLARE@SQL VARCHAR(MAX)DECLARE@GROUP_EXP VARCHAR(1000)DECLARE@FECHA_EXP VARCHAR(1000)SET@GROUP_EXP=<str>+LTRIM(STR(@TIME_PERIOD))+<str>SET@FECHA_EXP=<str>+LTRIM(STR(@TIME_PERIOD))+<str>SET@SQL=<str>+@GROUP_EXP+<str>+LTRIM(STR(@BS_INDICATORSID))+<str>+@CS_INVOLVED_INDICATORS+<str>+@GROUP_EXP EXEC(@SQL)SET@SQL=<str>+@RV_FORMULA+<str>+@PV_FORMULA+<str>+@FECHA_EXP+<str>+@SJOINS+<str>+@SWHERE EXEC(@SQL)DROP TABLE#TEMP_INDICATOR RETURN GO
ISOKEYNET	[dbo].[ik_BS_GroupBy_SUM_Forced_Data]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	1 DESC	SELECT MSR_DATE,IK_BS_PERIODS_GROUPING(@BS_TIMEPERIOD,MSR_DATE)AS PERIOD,SUM(MSR_REAL_VALUE)AS ACTUAL_VALUE,SUM(MSR_PLANNED_VALUE)AS PLANNED_VALUE FROM BS_INDICATORSDATA WHERE BS_INDICATORSID=@BS_INDICATORSID AND IK_BS_PERIODS_GROUPING(@BS_TIMEPERIOD,MSR_DATE)BETWEEN@STARTVALUE AND@ENDVALUE GROUP BY IK_BS_PERIODS_GROUPING(@BS_TIMEPERIOD,MSR_DATE),MSR_DATE ORDER BY 1 DESC
ISOKEYNET	[dbo].[ik_bsindicators_4userinput]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_BSINDICATORS_4USERINPUT(@PARAMETERS NVARCHAR(500)=<str>,@SORT NVARCHAR(50),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT)AS DECLARE@STRSQL VARCHAR(4000)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str><str><str><str><str><str><str><str><str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str><str><str><str><str><str><str><str><str>ELSE<str><str><str><str><str><str><str><str><str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@STRSQL=@STRSQL+<str>+@PARAMETERS END IF@SORT<><str>BEGIN SET@STRSQL=@STRSQL+<str>+@SORT END ELSE BEGIN SET@STRSQL=@STRSQL+<str>END END EXEC(@STRSQL)RETURN GO
ISOKEYNET	[dbo].[ik_bsindicators_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_BSINDICATORS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRSQL VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str><str><str><str><str><str><str><str><str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str><str><str><str><str><str><str><str><str>ELSE<str><str><str><str><str><str><str><str><str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END EXEC(@STRSQL+@WHERE+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_bsindicatorsIds_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_BSINDICATORSIDS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT,@TMP_TABLE NVARCHAR(500)=<str>,@L_RETURN_DATA INT=1)AS SET DATEFORMAT YMD DECLARE@STRSQL VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str>ELSE<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END BEGIN TRY EXEC(<str>+@TMP_TABLE+<str>+<str>+@TMP_TABLE+<str>+@STRSQL+@WHERE+@PARAMETERS+@SORT)END TRY BEGIN CATCH END CATCH IF@L_RETURN_DATA=1 BEGIN EXEC(@STRSQL+@WHERE+@PARAMETERS+@SORT)END RETURN GO
ISOKEYNET	[dbo].[ik_bsstratplans_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_BSSTRATPLANS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRDOC VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRDOC=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str><str><str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str><str><str>ELSE<str><str><str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END EXEC(@STRDOC+@WHERE+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_bsstratplansIds_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_BSSTRATPLANSIDS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT,@TMP_TABLE NVARCHAR(500)=<str>,@L_RETURN_DATA INT=1)AS SET DATEFORMAT YMD DECLARE@STRSQL VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str>ELSE<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END BEGIN TRY EXEC(<str>+@TMP_TABLE+<str>+<str>+@TMP_TABLE+<str>+@STRSQL+@WHERE+@PARAMETERS+@SORT)END TRY BEGIN CATCH END CATCH IF@L_RETURN_DATA=1 BEGIN EXEC(@STRSQL+@WHERE+@PARAMETERS+@SORT)END RETURN GO
ISOKEYNET	[dbo].[ik_dc_AvgOfSurveyQuestion]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DC_AVGOFSURVEYQUESTION(@TIME_PERIOD AS TINYINT,@SURVEYID AS INT,@QUESTION AS TINYINT)AS SET DATEFORMAT YMD SET DATEFIRST 7 SET NOCOUNT ON IF NOT EXISTS(SELECT*FROM SYSCOLUMNS WHERE NAME LIKE<str>+LTRIM(STR(@QUESTION))AND ID IN(SELECT ID FROM SYSOBJECTS WHERE NAME LIKE<str>+LTRIM(STR(@SURVEYID))))BEGIN SELECT<str>AS IK_ERROR RETURN END DECLARE@STRSQL VARCHAR(8000)SET@STRSQL=<str>+LTRIM(STR(@QUESTION))+<str>+LTRIM(STR(@SURVEYID))+<str>+LTRIM(STR(@TIME_PERIOD))+<str>+LTRIM(STR(@TIME_PERIOD))+<str>EXEC(@STRSQL)RETURN GO
ISOKEYNET	[dbo].[ik_delete_TBL_GENERIC]	Warning	Execute	Using dynamic SQL	EXEC(@SQLCOMMAND	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DELETE_TBL_GENERIC(@RECORDID INT,@TABLENAME NVARCHAR(200),@USERID INT,@USERNAME NVARCHAR(50))AS DECLARE@SQLCOMMAND NVARCHAR(300)SET@SQLCOMMAND=<str>+@TABLENAME+<str>+LTRIM(STR(@RECORDID))EXEC(@SQLCOMMAND)IF@@ERROR<>0 BEGIN ROLLBACK TRANSACTION RAISERROR(<str>,16,1)RETURN(-1)END RETURN(0)GO
ISOKEYNET	[dbo].[ik_doc_allgroups_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DOC_ALLGROUPS_WITHACCESS(@IKPDO INT,@IKCAT INT,@IKCDU INT,@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100)=<str>)AS SET DATEFORMAT YMD DECLARE@STRDOC VARCHAR(4000)IF LEN(@PARAMETERS)=0 SET@PARAMETERS=<str>SELECT@STRDOC=CASE WHEN@IKCAT=0 OR@IKPDO=2 THEN<str>WHEN@IKCAT=4 OR@IKPDO=0 THEN<str>ELSE<str>+CONVERT(NVARCHAR(5),@IKCDU)+<str>+CONVERT(NVARCHAR(5),@IKCDU)+<str>+CONVERT(NVARCHAR(5),@IKCDU)+<str>END IF NOT(@IKCAT=0 OR@IKPDO=2)BEGIN IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END EXEC(@STRDOC+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_docs_groups_for_new]	Warning	Execute	Using dynamic SQL	EXEC(@SQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DOCS_GROUPS_FOR_NEW(@CODUSER INT,@IKPDO INT,@IKCAT INT,@IKGLST NVARCHAR(500))AS IF@IKCAT=4 OR@IKPDO=0 BEGIN SELECT CODIGO,CAMINO AS DESCRIPCION,ORDEN FROM TBL_CATEGORIASDOCUMENTOS ORDER BY ORDEN RETURN END IF LTRIM(RTRIM(@IKGLST))=<str>BEGIN SELECT DISTINCT T.CODIGO,T.CAMINO AS DESCRIPCION,T.ORDEN FROM TBL_CATEGORIASDOCUMENTOS T INNER JOIN NCMODULESECURITYLEVELS N ON T.CODIGO=N.CODIGOTIPONC-300000 WHERE N.CODIGOUSUARIO=@CODUSER AND N.L_PUEDENUEVOS=1 ORDER BY ORDEN END ELSE BEGIN DECLARE@ALL VARCHAR(500)DECLARE@SQL VARCHAR(1000)SET@ALL=@IKGLST+<str>+LTRIM(STR(@CODUSER))SET@SQL=<str>+@ALL+<str>EXEC(@SQL)END RETURN GO
ISOKEYNET	[dbo].[ik_docs_types_for_new]	Warning	Execute	Using dynamic SQL	EXEC(@SQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DOCS_TYPES_FOR_NEW(@CODUSER INT,@IKPDO INT,@IKCAT INT,@IKGLST NVARCHAR(500))AS IF@IKCAT=4 OR@IKPDO=0 BEGIN SELECT CODIGO,DESCRIPCION,CONCAT3(RTRIM(TIPO),<str>,RTRIM(DESCRIPCION))AS TIPO FROM TIPOSDOCUMENTOS ORDER BY TIPO RETURN END IF(@IKGLST IS NULL)OR(LTRIM(RTRIM(@IKGLST))=<str>)BEGIN SELECT DISTINCT T.CODIGO,T.DESCRIPCION,CONCAT3(RTRIM(T.TIPO),<str>,RTRIM(T.DESCRIPCION))AS TIPO FROM TIPOSDOCUMENTOS T LEFT OUTER JOIN TBL_RESTRICTED_AM_DOCTYPES R ON T.CODIGO=R.DOCTYPEID WHERE R.CODIGO IS NULL OR USERID=@CODUSER ORDER BY TIPO END ELSE BEGIN DECLARE@ALL VARCHAR(500)DECLARE@SQL VARCHAR(1000)SET@ALL=@IKGLST+<str>+LTRIM(STR(@CODUSER))SET@SQL=<str><str><str>+@ALL+<str>EXEC(@SQL)END RETURN GO
ISOKEYNET	[dbo].[ik_document_groups_in_document]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T.DESCRIPCION	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DOCUMENT_GROUPS_IN_DOCUMENT(@CODUSER INT,@CODDOCUMENT INT,@IKPDO INT,@IKCAT INT,@IKGLST NVARCHAR(500))AS SELECT T.CODIGO AS CODIGO,T.DESCRIPCION FROM DOCUMENTOSCATEGORIAS D INNER JOIN TBL_CATEGORIASDOCUMENTOS T ON D.CODIGOCATEGORIA=T.CODIGO WHERE D.CODIGODOCUMENTO=@CODDOCUMENT ORDER BY T.DESCRIPCION RETURN GO
ISOKEYNET	[dbo].[ik_documents_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DOCUMENTS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@IKPDO INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRDOC VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRDOC=CASE WHEN@IKCAT=0 OR@IKPDO=2 THEN<str><str>WHEN@IKCAT=4 OR@IKPDO=0 THEN<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>/*SELECT ALL*/ELSE<str>+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@IKPDO=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END ELSE BEGIN SET@PARAMETERS=<str>SET@SORT=<str>END EXEC(@STRDOC+@WHERE+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_documentsgroups_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_DOCUMENTSGROUPS_WITHACCESS(@IKPDO INT,@IKCAT INT,@IKCDU INT)AS DECLARE@STRDOC VARCHAR(4000)SELECT@STRDOC=CASE WHEN@IKCAT=0 OR@IKPDO=2 THEN<str>WHEN@IKCAT=4 OR@IKPDO=0 THEN<str>ELSE<str>+LTRIM(STR(@IKCDU))+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END EXEC(@STRDOC)RETURN GO
ISOKEYNET	[dbo].[ik_ForumSearchInvolded]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_FORUMSEARCHINVOLDED@TEXTOBUSQUEDA NVARCHAR(1000),@IKCDU INT AS BEGIN SET NOCOUNT ON;DECLARE@STRSQL NVARCHAR(4000);SET@TEXTOBUSQUEDA=REPLACE(@TEXTOBUSQUEDA,<str><str>,<str><str><str>);CREATE TABLE#TMP(KEY INT,RANK INT);SET@STRSQL=CONCAT3(<str><str>,@TEXTOBUSQUEDA,<str><str>)EXEC(@STRSQL)SELECT TOP 100 RANK,CODIGO,CODIGO AS KEY,DESCRIPCION,INSTRUCCIONES,CASE WHEN NCPCODE IS NULL THEN<str>ELSE CONCAT(<str>,LTRIM(STR(NCPCODE)))END AS NCPCODE,CASE WHEN NCTCODE IS NULL THEN<str>ELSE CONCAT(<str>,LTRIM(STR(NCTCODE)))END AS NCTCODE,CASE WHEN DOCCODE IS NULL THEN<str>ELSE CONCAT(<str>,LTRIM(STR(DOCCODE)))END AS DOCCODE,CASE WHEN IKACTIONID IS NULL THEN<str>ELSE CONCAT(<str>,LTRIM(STR(IKACTIONID)))END AS IKACTIONID,USUARIO,FECHA,URL_NCPCODE,URL_FORUM,URL_FORUMMESSAGE,URL_TASK,URL_DOC,URL_IKACTION FROM VISTA_IKFOROSSEARCHINVOLVED JOIN#TMP TBLSEARCH ON VISTA_IKFOROSSEARCHINVOLVED.CODIGO=TBLSEARCH.KEY WHERE((SUSCRIPTOR=@IKCDU AND NOT DESCRIPCION LIKE<str>))ORDER BY RANK DESC,CODIGO DESC;END GO
ISOKEYNET	[dbo].[ik_GET_RP_AREAS]	Warning	Execute	Using dynamic SQL	EXEC(@SQLST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_GET_RP_AREAS(@NODOPADRE INT)AS CREATE TABLE#TABLAT(CODIGO INT,NOMBRE NVARCHAR(400),DESCRIPCION NVARCHAR(4000))DECLARE@CODIGON INT DECLARE@PADRE INT DECLARE@DESCRIPCION NVARCHAR(4000)DECLARE@DESC NVARCHAR(400)DECLARE@NOMBRE NVARCHAR(400)DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_AREA_CAUSAS WHERE CODIGO_PADRE=@NODOPADRE AND(L_BORRADO=0 OR L_BORRADO IS NULL)OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGON DECLARE@CODIGO_FIRST_NODE INT SELECT@CODIGO_FIRST_NODE=CODIGO FROM TBL_AREA_CAUSAS WHERE CODIGO_PADRE=-1 WHILE@@FETCH_STATUS=0 BEGIN SELECT@PADRE=CODIGO_PADRE,@DESCRIPCION=DESCRIPCION,@NOMBRE=DESCRIPCION FROM TBL_AREA_CAUSAS WHERE CODIGO=@CODIGON WHILE(@PADRE<>@CODIGO_FIRST_NODE)BEGIN SELECT@DESC=DESCRIPCION FROM TBL_AREA_CAUSAS WHERE CODIGO=@PADRE SET@DESCRIPCION=CONCAT3(@DESC,<str>,@DESCRIPCION)SELECT@PADRE=CODIGO_PADRE FROM TBL_AREA_CAUSAS WHERE CODIGO=@PADRE END INSERT INTO#TABLAT(CODIGO,DESCRIPCION,NOMBRE)VALUES(@CODIGON,@DESCRIPCION,@NOMBRE)FETCH NEXT FROM CURNODOS INTO@CODIGON END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE@SQLST VARCHAR(8000)SET@SQLST=<str>EXEC(@SQLST)GO
ISOKEYNET	[dbo].[ik_GET_RP_PROCESOS]	Warning	Execute	Using dynamic SQL	EXEC(@SQLST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_GET_RP_PROCESOS(@NODOPADRE INT)AS CREATE TABLE#TABLAT(CODIGO INT,NOMBRE NVARCHAR(400),DESCRIPCION NVARCHAR(4000))DECLARE@CODIGON INT DECLARE@PADRE INT DECLARE@DESCRIPCION NVARCHAR(4000)DECLARE@DESC NVARCHAR(400)DECLARE@NOMBRE NVARCHAR(400)DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT PROC_NODESID AS CODIGO FROM PROC_NODES WHERE PROC_NODESID_PARENT=@NODOPADRE OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGON DECLARE@STR_NOMBRE_PLAN NVARCHAR(100)DECLARE@CODIGO_FIRST_NODE INT SELECT@CODIGO_FIRST_NODE=T1.PROC_NODESID,@STR_NOMBRE_PLAN=T2.DESCRIPTION FROM PROC_NODES T1 INNER JOIN PROC_PLANS T2 ON T1.PROC_PLANSID=T2.PROC_PLANSID WHERE T1.PROC_NODESID_PARENT IS NULL WHILE@@FETCH_STATUS=0 BEGIN SELECT@PADRE=PROC_NODESID_PARENT,@DESCRIPCION=DESCRIPTION,@NOMBRE=DESCRIPTION FROM PROC_NODES WHERE PROC_NODESID=@CODIGON WHILE(@PADRE<>@CODIGO_FIRST_NODE)BEGIN SELECT@DESC=DESCRIPTION FROM PROC_NODES WHERE PROC_NODESID=@PADRE SET@DESCRIPCION=CONCAT3(@DESC,<str>,@DESCRIPCION)SELECT@PADRE=PROC_NODESID_PARENT FROM PROC_NODES WHERE PROC_NODESID=@PADRE END SET@DESCRIPCION=CONCAT3(@STR_NOMBRE_PLAN,<str>,@DESCRIPCION)INSERT INTO#TABLAT(CODIGO,DESCRIPCION,NOMBRE)VALUES(@CODIGON,@DESCRIPCION,@NOMBRE)FETCH NEXT FROM CURNODOS INTO@CODIGON END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE@SQLST VARCHAR(8000)SET@SQLST=<str>EXEC(@SQLST)GO
ISOKEYNET	[dbo].[ik_GET_RP_REQUISITOS]	Warning	Execute	Using dynamic SQL	EXEC(@SQLST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_GET_RP_REQUISITOS(@NODOPADRE INT)AS CREATE TABLE#TABLAT(CODIGO INT,NOMBRE NVARCHAR(400),DESCRIPCION NVARCHAR(4000))DECLARE@CODIGON INT DECLARE@PADRE INT DECLARE@DESCRIPCION NVARCHAR(4000)DECLARE@DESC NVARCHAR(400)DECLARE@NOMBRE NVARCHAR(400)DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO_PADRE=@NODOPADRE OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGON DECLARE@CODIGO_FIRST_NODE INT SELECT@CODIGO_FIRST_NODE=CODIGO FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO_PADRE=-1 WHILE@@FETCH_STATUS=0 BEGIN SELECT@PADRE=CODIGO_PADRE,@DESCRIPCION=DESCRIPCION,@NOMBRE=DESCRIPCION FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=@CODIGON WHILE(@PADRE<>@CODIGO_FIRST_NODE)BEGIN SELECT@DESC=DESCRIPCION FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=@PADRE SET@DESCRIPCION=CONCAT3(@DESC,<str>,@DESCRIPCION)SELECT@PADRE=CODIGO_PADRE FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=@PADRE END INSERT INTO#TABLAT(CODIGO,DESCRIPCION,NOMBRE)VALUES(@CODIGON,@DESCRIPCION,@NOMBRE)FETCH NEXT FROM CURNODOS INTO@CODIGON END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE@SQLST VARCHAR(8000)SET@SQLST=<str>EXEC(@SQLST)GO
ISOKEYNET	[dbo].[ik_get_ruta_padre]	Warning	Execute	Using dynamic SQL	EXEC(@SQLST	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_GET_RUTA_PADRE(@NODOPADRE INT)AS CREATE TABLE#TABLAT(CODIGO INT,NOMBRE NVARCHAR(400),DESCRIPCION NVARCHAR(4000))DECLARE@CODIGON INT DECLARE@PADRE INT DECLARE@DESCRIPCION NVARCHAR(4000)DECLARE@DESC NVARCHAR(400)DECLARE@NOMBRE NVARCHAR(400)DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_CAUSAS WHERE CODIGO_PADRE=@NODOPADRE OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGON DECLARE@CODIGO_FIRST_NODE INT SELECT@CODIGO_FIRST_NODE=CODIGO FROM TBL_NCCC_CAUSAS WHERE CODIGO_PADRE=-1 WHILE@@FETCH_STATUS=0 BEGIN SELECT@PADRE=CODIGO_PADRE,@DESCRIPCION=DESCRIPCION,@NOMBRE=DESCRIPCION FROM TBL_NCCC_CAUSAS WHERE CODIGO=@CODIGON WHILE(@PADRE<>@CODIGO_FIRST_NODE)BEGIN SELECT@DESC=DESCRIPCION FROM TBL_NCCC_CAUSAS WHERE CODIGO=@PADRE SET@DESCRIPCION=CONCAT3(@DESC,<str>,@DESCRIPCION)SELECT@PADRE=CODIGO_PADRE FROM TBL_NCCC_CAUSAS WHERE CODIGO=@PADRE END INSERT INTO#TABLAT(CODIGO,DESCRIPCION,NOMBRE)VALUES(@CODIGON,@DESCRIPCION,@NOMBRE)FETCH NEXT FROM CURNODOS INTO@CODIGON END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE@SQLST VARCHAR(8000)SET@SQLST=<str>EXEC(@SQLST)GO
ISOKEYNET	[dbo].[ik_IssuesIds_withaccess]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	CODIGOTIPONC, ; ; ; NIVELACCESO	SELECT NC.CODIGO FROM#TMP_SEC_LEVELS JOIN NCMAINPROD NC ON NC.TIPO=#TMP_SEC_LEVELS.CODIGOTIPONC LEFT JOIN#TMP_ISSUES_INVOLVED ON#TMP_ISSUES_INVOLVED.CODIGONC=NC.CODIGO WHERE#TMP_SEC_LEVELS.NIVELACCESO>0 AND((#TMP_SEC_LEVELS.NIVELACCESO=2 AND NOT#TMP_ISSUES_INVOLVED.CODIGONC IS NULL)OR(#TMP_SEC_LEVELS.NIVELACCESO>2))ORDER BY CODIGOTIPONC,NIVELACCESO
ISOKEYNET	[dbo].[ik_IssuesIds_withCoordAccess]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	CODIGOTIPONC, ; ; ; NIVELACCESO	SELECT NC.CODIGO FROM#TMP_SEC_LEVELS JOIN NCMAINPROD NC ON NC.TIPO=#TMP_SEC_LEVELS.CODIGOTIPONC LEFT JOIN#TMP_ISSUES_INVOLVED ON#TMP_ISSUES_INVOLVED.CODIGONC=NC.CODIGO WHERE#TMP_SEC_LEVELS.NIVELACCESO>0 AND((#TMP_SEC_LEVELS.NIVELACCESO>=2 AND NOT#TMP_ISSUES_INVOLVED.CODIGONC IS NULL)OR(#TMP_SEC_LEVELS.NIVELACCESO=5))ORDER BY CODIGOTIPONC,NIVELACCESO
ISOKEYNET	[dbo].[ik_IssuesIds_withCoordSupervAccess]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	CODIGOTIPONC, ; ; ; NIVELACCESO	SELECT NC.CODIGO FROM#TMP_SEC_LEVELS JOIN NCMAINPROD NC ON NC.TIPO=#TMP_SEC_LEVELS.CODIGOTIPONC LEFT JOIN#TMP_ISSUES_INVOLVED ON#TMP_ISSUES_INVOLVED.CODIGONC=NC.CODIGO WHERE#TMP_SEC_LEVELS.NIVELACCESO>0 AND((#TMP_SEC_LEVELS.NIVELACCESO=2 AND NOT#TMP_ISSUES_INVOLVED.CODIGONC IS NULL)OR(#TMP_SEC_LEVELS.NIVELACCESO>=4))ORDER BY CODIGOTIPONC,NIVELACCESO
ISOKEYNET	[dbo].[ik_localized_select]	Warning	Execute	Using dynamic SQL	EXEC(@SELECTSTATEMENT	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_LOCALIZED_SELECT@SELECTSTATEMENT VARCHAR(8000),@DOTNET_SHORTDATEPATTERN VARCHAR(10)AS DECLARE@FORMATO VARCHAR(3)DECLARE@LARGO INT DECLARE@A INT DECLARE@M INT DECLARE@D INT DECLARE@Y INT DECLARE@CC VARCHAR(1)DECLARE@TA VARCHAR(1)SET@LARGO=LEN(@DOTNET_SHORTDATEPATTERN)SET@A=1 SET@M=0 SET@D=0 SET@Y=0 SET@FORMATO=<str>WHILE(@A<=@LARGO)BEGIN SET@CC=UPPER(SUBSTRING(@DOTNET_SHORTDATEPATTERN,@A,1))SET@TA=<str>IF(@CC=<str>AND@Y=0)BEGIN SET@TA=<str>SET@Y=1 END IF(@CC=<str>AND@M=0)BEGIN SET@TA=<str>SET@M=1 END IF(@CC=<str>AND@D=0)BEGIN SET@TA=<str>SET@D=1 END SET@FORMATO=@FORMATO+@TA SET@A=@A+1 END SET DATEFORMAT@FORMATO EXEC(@SELECTSTATEMENT)GO
ISOKEYNET	[dbo].[ik_mt_BSIndicators]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_MT_BSINDICATORS(@IKCDU INT,@STRORDER VARCHAR(50))AS SET NOCOUNT ON IF LEN(@STRORDER)=0 BEGIN SET@STRORDER=<str>END DECLARE@IKCAT INT DECLARE@BSCAT INT SELECT@IKCAT=CATEGORIA,@BSCAT=PERMISOSBSPROC FROM USUARIOS WHERE CODIGO=@IKCDU DECLARE@STRSQL VARCHAR(2000)IF@IKCAT=0 OR@BSCAT=2 BEGIN SET@STRSQL=<str><str><str><str><str><str><str>EXEC(@STRSQL)RETURN END IF@IKCAT=4 OR@BSCAT=0 BEGIN SET@STRSQL=<str><str><str><str><str><str><str>+STR(@IKCDU)+<str>+STR(@IKCDU)+<str>+@STRORDER EXEC(@STRSQL)RETURN END ELSE BEGIN SET@STRSQL=<str><str><str><str><str><str><str>+STR(@IKCDU)+<str>+STR(@IKCDU)+<str>+STR(@IKCDU)+<str>+@STRORDER EXEC(@STRSQL)RETURN END RETURN GO
ISOKEYNET	[dbo].[ik_mt_DocsWithNews]	Warning	SelectIntoWithOrderBy	Select Into with Order By clause used without order by	CASE  ; ; ;   WHEN @STRORDER = 'CODIGO' THEN DOCCODE ; ; ; END, ; ; ; CASE  ; ; ;   WHEN @STRORDER = 'NAME' THEN NOMBRE ; ; ;   WHEN @STRORDER = 'CODIGOISO' THEN CODIGOISO ; ; ; END	SELECT*,CASE WHEN ISNULL(NMCANT,0)>0 AND ISNULL(NUCANT,0)>0 THEN CONVERT(VARCHAR,NMCANT)+'{LOC-LOC_MESSAGE_MESSAGES}&NBSP;<SPAN CLASS="CAPTIONVARIABLENICOBLIGATORIA"TITLE="({LOC-URGENT})">*</SPAN>'WHEN ISNULL(NMCANT,0)>0 THEN CONVERT(VARCHAR,NMCANT)+'{LOC-LOC_MESSAGE_MESSAGES}'ELSE''END AS NEWMESSAGES,CASE WHEN ISNULL(NFCANT,0)>0 THEN'<BR>'+CONVERT(VARCHAR,NFCANT)+'{LOC-LOC_FILE_FILES}'ELSE''END AS NEWFILES,CASE WHEN ISNULL(NMCANT,0)>0 OR ISNULL(NFCANT,0)>0 THEN'<BR>'+CASE WHEN ISNULL(NUCANT,0)>0 AND ISNULL(NRCANT,0)>0 THEN CONVERT(VARCHAR,NRCANT)+'{LOC-LOC_REMINDERS}&NBSP;<SPAN CLASS="CAPTIONVARIABLENICOBLIGATORIA"TITLE="({LOC-URGENT})">*</SPAN>'WHEN ISNULL(NRCANT,0)>0 THEN CONVERT(VARCHAR,NRCANT)+'{LOC-LOC_REMINDERS}'ELSE''END ELSE CASE WHEN ISNULL(NUCANT,0)>0 AND ISNULL(NRCANT,0)>0 THEN CONVERT(VARCHAR,NRCANT)+'{LOC-LOC_REMINDERS}&NBSP;<SPAN CLASS="CAPTIONVARIABLENICOBLIGATORIA"TITLE="({LOC-URGENT})">*</SPAN>'WHEN ISNULL(NRCANT,0)>0 THEN CONVERT(VARCHAR,NRCANT)+'{LOC-LOC_REMINDERS}'ELSE''END END AS NEWREMINDERS,CASE WHEN ESTADO=0 OR ESTADO=1 THEN'IMAGES\DOC_DEVELOPMENT.GIF'WHEN ESTADO=2 THEN'IMAGES\DOC_CURRENT.GIF'WHEN ESTADO=3 THEN'IMAGES\DOC_OBSOLETE.GIF'END AS DOCICON,CASE WHEN ESTADO=0 OR ESTADO=1 THEN'{LOC-LOC_DEVELOPMENT}'WHEN ESTADO=2 THEN'{LOC-LOC_CURRENT}'WHEN ESTADO=3 THEN'{LOC-LOC_OBSOLETE}'END AS LOCSTATUS INTO#ITASKS FROM(SELECT CODIGO AS DOCCODE,ESTADO,NOMBRE,CODIGOISO,C_REVISION,REVISION,CODIGOFORODESARROLLO,CODIGOFOROCRITICAS,NM.MENSAJES AS NMCANT,NM.ARCHIVOS AS NFCANT,NM.RECORDATORIOS AS NRCANT,NM.URGENTES AS NUCANT,'{LOC-LOC_FORUM_DEVELOPMENT}'AS FORUM,'DOCDEVFORUM'AS FORUMVIEW,ISNULL(NM.LASTNEW,0)AS LASTNEW,D.CODIGOFORODESARROLLO AS CODIGOFORO FROM DOCUMENTOS D LEFT JOIN#TMP_FOROS NM ON NM.CODIGOFORO=D.CODIGOFORODESARROLLO WHERE((ISNULL(NM.MENSAJES,0)>0)OR(ISNULL(NM.ARCHIVOS,0)>0)OR(ISNULL(NM.RECORDATORIOS,0)>0))UNION SELECT CODIGO AS DOCCODE,ESTADO,NOMBRE,CODIGOISO,C_REVISION,REVISION,CODIGOFORODESARROLLO,CODIGOFOROCRITICAS,NM.MENSAJES AS NMCANT,NM.ARCHIVOS AS NFCANT,NM.RECORDATORIOS AS NRCANT,NM.URGENTES AS NUCANT,'{LOC-LOC_CRITICS}'AS FORUM,'DOCCRITFORUM'AS FORUMVIEW,ISNULL(NM.LASTNEW,0)AS LASTNEW,D.CODIGOFOROCRITICAS AS CODIGOFORO FROM DOCUMENTOS D LEFT JOIN#TMP_FOROS NM ON NM.CODIGOFORO=D.CODIGOFOROCRITICAS WHERE((ISNULL(NM.MENSAJES,0)>0)OR(ISNULL(NM.ARCHIVOS,0)>0)OR(ISNULL(NM.RECORDATORIOS,0)>0)))AS ITASKS ORDER BY CASE WHEN@STRORDER='CODIGO'THEN DOCCODE END,CASE WHEN@STRORDER='NAME'THEN NOMBRE WHEN@STRORDER='CODIGOISO'THEN CODIGOISO END
ISOKEYNET	[dbo].[ik_mt_getBanner2Show]	Warning	Execute	Using dynamic SQL	EXEC(@STR_SQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_MT_GETBANNER2SHOW(@IKCDU INT)AS SET NOCOUNT ON DECLARE CURFNS CURSOR LOCAL FAST_FORWARD FOR SELECT FN_CALL,CONTENT,CONTENT_TYPE FROM TBL_MT_FNS_GETBANNER2SHOW ORDER BY FN_EXECUTION_ORDER DECLARE@FN_CALL NVARCHAR(1000)DECLARE@CONTENT NVARCHAR(1000)DECLARE@CONTENT_TYPE INT OPEN CURFNS FETCH NEXT FROM CURFNS INTO@FN_CALL,@CONTENT,@CONTENT_TYPE CREATE TABLE#TMP(CONTENT NVARCHAR(1000),CONTENT_TYPE INT)WHILE@@FETCH_STATUS=0 BEGIN DECLARE@STR_SQL NVARCHAR(4000)SET@STR_SQL=<str>SET@STR_SQL=@STR_SQL+<str>SET@STR_SQL=@STR_SQL+<str>+STR(@IKCDU)SET@STR_SQL=@STR_SQL+<str>SET@STR_SQL=@STR_SQL+<str>SET@STR_SQL=@STR_SQL+<str>+@FN_CALL+<str>SET@STR_SQL=@STR_SQL+<str>SET@STR_SQL=@STR_SQL+<str><str>+@CONTENT+<str><str>+STR(@CONTENT_TYPE)+<str>SET@STR_SQL=@STR_SQL+<str>EXEC(@STR_SQL)IF EXISTS(SELECT*FROM#TMP)BEGIN BREAK END FETCH NEXT FROM CURFNS INTO@FN_CALL,@CONTENT,@CONTENT_TYPE END CLOSE CURFNS DEALLOCATE CURFNS IF EXISTS(SELECT*FROM#TMP)BEGIN SELECT TOP 1*FROM#TMP END ELSE BEGIN SELECT<str>AS CONTENT,1 AS CONTENT_TYPE END RETURN GO
ISOKEYNET	[dbo].[ik_NC_Corte_Evolucion]	Warning	Execute	Using dynamic SQL	EXEC(@STR	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_NC_CORTE_EVOLUCION(@CORTE NVARCHAR(400)=<str>,@FILTRO_CARACTER NVARCHAR(400)=<str>,@FILTRO_AREA NVARCHAR(400)=<str>,@FILTRO_PROCESO NVARCHAR(400)=<str>,@FILTRO_CAUSA1 NVARCHAR(400)=<str>,@FILTRO_CAUSA2 NVARCHAR(400)=<str>,@FILTRO_CAUSA3 NVARCHAR(400)=<str>,@FILTRO_COL_MATRIZ NVARCHAR(400)=<str>,@FILTRO_FILA_MATRIZ NVARCHAR(400)=<str>,@FILTRO_CONTENIDO_MATRIZ NVARCHAR(400)=<str>)AS SET NOCOUNT ON IF@CORTE IS NULL OR LEN(@CORTE)=0 SET@CORTE=<str>DECLARE@ASTERISCO NVARCHAR(400)SET@ASTERISCO=<str>DECLARE@CARACTER NVARCHAR(400)IF@FILTRO_CARACTER IS NULL OR LEN(@FILTRO_CARACTER)=0 SET@FILTRO_CARACTER=@ASTERISCO DECLARE@AREA NVARCHAR(400)IF@FILTRO_AREA IS NULL OR LEN(@FILTRO_AREA)=0 SET@FILTRO_AREA=@ASTERISCO DECLARE@PROCESO NVARCHAR(400)IF@FILTRO_PROCESO IS NULL OR LEN(@FILTRO_PROCESO)=0 SET@FILTRO_PROCESO=@ASTERISCO DECLARE@CAUSA1 NVARCHAR(400)IF@FILTRO_CAUSA1 IS NULL OR LEN(@FILTRO_CAUSA1)=0 SET@FILTRO_CAUSA1=@ASTERISCO DECLARE@CAUSA2 NVARCHAR(400)IF@FILTRO_CAUSA2 IS NULL OR LEN(@FILTRO_CAUSA2)=0 SET@FILTRO_CAUSA2=@ASTERISCO DECLARE@CAUSA3 NVARCHAR(400)IF@FILTRO_CAUSA3 IS NULL OR LEN(@FILTRO_CAUSA3)=0 SET@FILTRO_CAUSA3=@ASTERISCO DECLARE@AREAPERDIDA NVARCHAR(400)IF@FILTRO_COL_MATRIZ IS NULL OR LEN(@FILTRO_COL_MATRIZ)=0 SET@FILTRO_COL_MATRIZ=@ASTERISCO DECLARE@CLASIFICACION NVARCHAR(400)IF@FILTRO_FILA_MATRIZ IS NULL OR LEN(@FILTRO_FILA_MATRIZ)=0 SET@FILTRO_FILA_MATRIZ=@ASTERISCO DECLARE@MATRIZ NVARCHAR(400)IF@FILTRO_CONTENIDO_MATRIZ IS NULL OR LEN(@FILTRO_CONTENIDO_MATRIZ)=0 SET@FILTRO_CONTENIDO_MATRIZ=@ASTERISCO CREATE TABLE#TABLAT(CODIGO INT,DESCRIPCION NVARCHAR(4000),DESC_NIVEL1 NVARCHAR(4000),DESC_NIVEL2 NVARCHAR(4000))DECLARE@CODIGO INT DECLARE@PADRE INT DECLARE@DESCRIPCION NVARCHAR(4000)DECLARE@CODIGOH INT DECLARE@NOMBRE NVARCHAR(400)DECLARE@NIVEL INT INSERT INTO#TABLAT(CODIGO,DESCRIPCION,DESC_NIVEL1,DESC_NIVEL2)SELECT CODIGO,DESCRIPCION,<str>,<str>FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE NIVEL=3 UNION SELECT CODIGO,<str>,<str>,DESCRIPCION FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE NIVEL=2 UNION SELECT CODIGO,<str>,DESCRIPCION,<str>FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE NIVEL=1 DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE NIVEL=3 OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESCRIPCION FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=@CODIGO)UPDATE#TABLAT SET DESC_NIVEL2=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS INTO@CODIGO END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE NIVEL=2 OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESCRIPCION FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=@CODIGO)UPDATE#TABLAT SET DESC_NIVEL1=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS INTO@CODIGO END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE NIVEL=3 OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESC_NIVEL1 FROM#TABLAT WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=@CODIGO)UPDATE#TABLAT SET DESC_NIVEL1=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS INTO@CODIGO END DECLARE@STR NVARCHAR(4000)SELECT@STR=<str>IF(@CORTE=<str>)OR(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)BEGIN CREATE TABLE#TABLAC(CODIGO INT,DESCRIPCION NVARCHAR(4000),)INSERT INTO#TABLAC(CODIGO,DESCRIPCION)SELECT DISTINCT VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGONC,TBL_CONSECUENCIAS_COLUMNAS.DESCRIPCION FROM TBL_CONSECUENCIAS_COLUMNAS LEFT OUTER JOIN TBL_TABLASCONSECUENCIAS ON TBL_CONSECUENCIAS_COLUMNAS.CODIGO=TBL_TABLASCONSECUENCIAS.CODIGO_CUADRO_COLUMNA LEFT OUTER JOIN VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES ON TBL_TABLASCONSECUENCIAS.CODIGO=VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGO_REGISTRO_MATRIZ SET@STR=@STR+<str>END IF(@CORTE=<str>)BEGIN CREATE TABLE#TABLAA(CODIGO INT,DESCRIPCION NVARCHAR(4000),)INSERT INTO#TABLAA(CODIGO,DESCRIPCION)SELECT DISTINCT VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGONC,TBL_CONSECUENCIAS_FILAS.DESCRIPCION FROM TBL_CONSECUENCIAS_FILAS LEFT OUTER JOIN TBL_TABLASCONSECUENCIAS ON TBL_CONSECUENCIAS_FILAS.CODIGO=TBL_TABLASCONSECUENCIAS.CODIGO_CUADRO_FILA LEFT OUTER JOIN VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES ON TBL_TABLASCONSECUENCIAS.CODIGO=VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGO_REGISTRO_MATRIZ SET@STR=@STR+<str>END IF(@CORTE=<str>)BEGIN SET@STR=@STR+<str>END SET@STR=@STR+<str>IF(@FILTRO_COL_MATRIZ<><str>)BEGIN CREATE TABLE#TABLAM(CODIGO_COL INT,CODIGO INT,DESCRIPCION NVARCHAR(4000),)INSERT INTO#TABLAM(CODIGO_COL,CODIGO,DESCRIPCION)SELECT DISTINCT TBL_CONSECUENCIAS_COLUMNAS.CODIGO,VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGONC,TBL_CONSECUENCIAS_COLUMNAS.DESCRIPCION FROM TBL_CONSECUENCIAS_COLUMNAS LEFT OUTER JOIN TBL_TABLASCONSECUENCIAS ON TBL_CONSECUENCIAS_COLUMNAS.CODIGO=TBL_TABLASCONSECUENCIAS.CODIGO_CUADRO_COLUMNA LEFT OUTER JOIN VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES ON TBL_TABLASCONSECUENCIAS.CODIGO=VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGO_REGISTRO_MATRIZ SET@STR=@STR+<str>+@FILTRO_COL_MATRIZ+<str>END IF(@FILTRO_FILA_MATRIZ<><str>)BEGIN CREATE TABLE#TABLAFM(CODIGO_FILA INT,CODIGO INT,DESCRIPCION NVARCHAR(4000),)INSERT INTO#TABLAFM(CODIGO_FILA,CODIGO,DESCRIPCION)SELECT DISTINCT TBL_CONSECUENCIAS_FILAS.CODIGO,VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGONC,TBL_CONSECUENCIAS_FILAS.DESCRIPCION FROM TBL_CONSECUENCIAS_FILAS LEFT OUTER JOIN TBL_TABLASCONSECUENCIAS ON TBL_CONSECUENCIAS_FILAS.CODIGO=TBL_TABLASCONSECUENCIAS.CODIGO_CUADRO_FILA LEFT OUTER JOIN VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES ON TBL_TABLASCONSECUENCIAS.CODIGO=VARCHILD_REGISTROMATRIZ_NOCONFORMIDADES.CODIGO_REGISTRO_MATRIZ SET@STR=@STR+<str>+@FILTRO_FILA_MATRIZ+<str>END IF(@FILTRO_CARACTER<><str>)SET@STR=@STR+<str>+@FILTRO_CARACTER IF(@FILTRO_AREA<><str>)SET@STR=@STR+<str>+@FILTRO_AREA+<str>IF(@FILTRO_PROCESO<><str>)SET@STR=@STR+<str>+@FILTRO_PROCESO+<str>IF(@FILTRO_CONTENIDO_MATRIZ<><str>)SET@STR=@STR+<str>+@FILTRO_CONTENIDO_MATRIZ+<str>IF(@FILTRO_CAUSA3<><str>)SET@STR=@STR+<str>+@FILTRO_CAUSA3+<str>IF(@FILTRO_CAUSA2<><str>)SET@STR=@STR+<str>+@FILTRO_CAUSA2+<str>+@FILTRO_CAUSA2+<str>IF(@FILTRO_CAUSA1<><str>)BEGIN CREATE TABLE#TABLACAUSA(CODIGO INT,DESCRIPCION NVARCHAR(4000))DECLARE@CODIGOC INT DECLARE@DESCC NVARCHAR(4000)INSERT INTO#TABLACAUSA(CODIGO,DESCRIPCION)SELECT CODIGO,DESCRIPCION FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO IN(2)DECLARE CURNODOS1 CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO_PADRE IN(2)OPEN CURNODOS1 FETCH NEXT FROM CURNODOS1 INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO#TABLACAUSA(CODIGO,DESCRIPCION)SELECT CODIGO,DESCRIPCION FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=@CODIGO DECLARE CURNODOS2 CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO_PADRE=@CODIGO OPEN CURNODOS2 FETCH NEXT FROM CURNODOS2 INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN INSERT INTO#TABLACAUSA(CODIGO,DESCRIPCION)SELECT CODIGO,DESCRIPCION FROM TBL_NO_CONFORMIDADES_CAUSAS WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS2 INTO@CODIGO END CLOSE CURNODOS2 DEALLOCATE CURNODOS2 FETCH NEXT FROM CURNODOS1 INTO@CODIGO END CLOSE CURNODOS1 DEALLOCATE CURNODOS1 SET@STR=@STR+<str>END EXEC(@STR)RETURN GO
ISOKEYNET	[dbo].[ik_NC_Corte_Evolucion_arbol]	Warning	Execute	Using dynamic SQL	EXEC(@STR	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_NC_CORTE_EVOLUCION_ARBOL(@CORTE NVARCHAR(400)=<str>,@FILTRO_CARACTER NVARCHAR(400)=<str>,@FILTRO_AREA NVARCHAR(400)=<str>,@FILTRO_PROCESO NVARCHAR(400)=<str>,@FILTRO_CAUSA NVARCHAR(400)=<str>,@FILTRO_REQUISITO NVARCHAR(400)=<str>)AS SET NOCOUNT ON IF@CORTE IS NULL OR LEN(@CORTE)=0 SET@CORTE=<str>DECLARE@ASTERISCO NVARCHAR(400)SET@ASTERISCO=<str>DECLARE@CARACTER NVARCHAR(400)IF@FILTRO_CARACTER IS NULL OR LEN(@FILTRO_CARACTER)=0 SET@FILTRO_CARACTER=@ASTERISCO DECLARE@AREA NVARCHAR(400)IF@FILTRO_AREA IS NULL OR LEN(@FILTRO_AREA)=0 SET@FILTRO_AREA=@ASTERISCO DECLARE@PROCESO NVARCHAR(400)IF@FILTRO_PROCESO IS NULL OR LEN(@FILTRO_PROCESO)=0 SET@FILTRO_PROCESO=@ASTERISCO DECLARE@CAUSA NVARCHAR(400)IF@FILTRO_CAUSA IS NULL OR LEN(@FILTRO_CAUSA)=0 SET@FILTRO_CAUSA=@ASTERISCO DECLARE@REQUISITO NVARCHAR(400)IF@FILTRO_REQUISITO IS NULL OR LEN(@FILTRO_REQUISITO)=0 SET@FILTRO_REQUISITO=@ASTERISCO CREATE TABLE#TABLAT(CODIGO INT,DESCRIPCION NVARCHAR(4000),DESC_NIVEL1 NVARCHAR(4000),DESC_NIVEL2 NVARCHAR(4000))DECLARE@CODIGO INT DECLARE@PADRE INT DECLARE@DESCRIPCION NVARCHAR(4000)DECLARE@CODIGOH INT DECLARE@NOMBRE NVARCHAR(400)DECLARE@NIVEL INT INSERT INTO#TABLAT(CODIGO,DESCRIPCION,DESC_NIVEL1,DESC_NIVEL2)SELECT CODIGO,DESCRIPCION,<str>,<str>FROM TBL_NCCC_CAUSAS WHERE NIVEL=3 UNION SELECT CODIGO,<str>,<str>,DESCRIPCION FROM TBL_NCCC_CAUSAS WHERE NIVEL=2 UNION SELECT CODIGO,<str>,DESCRIPCION,<str>FROM TBL_NCCC_CAUSAS WHERE NIVEL=1 DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_CAUSAS WHERE NIVEL=3 OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESCRIPCION FROM TBL_NCCC_CAUSAS WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NCCC_CAUSAS WHERE CODIGO=@CODIGO)UPDATE#TABLAT SET DESC_NIVEL2=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS INTO@CODIGO END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_CAUSAS WHERE NIVEL=2 OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESCRIPCION FROM TBL_NCCC_CAUSAS WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NCCC_CAUSAS WHERE CODIGO=@CODIGO)UPDATE#TABLAT SET DESC_NIVEL1=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS INTO@CODIGO END CLOSE CURNODOS DEALLOCATE CURNODOS DECLARE CURNODOS CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_CAUSAS WHERE NIVEL=3 OPEN CURNODOS FETCH NEXT FROM CURNODOS INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESC_NIVEL1 FROM#TABLAT WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NCCC_CAUSAS WHERE CODIGO=@CODIGO)UPDATE#TABLAT SET DESC_NIVEL1=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOS INTO@CODIGO END CREATE TABLE#TABLAREQ(CODIGO INT,DESCRIPCION NVARCHAR(4000),DESC_NIVEL1 NVARCHAR(4000),DESC_NIVEL2 NVARCHAR(4000))INSERT INTO#TABLAREQ(CODIGO,DESCRIPCION,DESC_NIVEL1,DESC_NIVEL2)SELECT CODIGO,DESCRIPCION,<str>,<str>FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE NIVEL=3 UNION SELECT CODIGO,<str>,<str>,DESCRIPCION FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE NIVEL=2 UNION SELECT CODIGO,<str>,DESCRIPCION,<str>FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE NIVEL=1 DECLARE CURNODOSREQ CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE NIVEL=3 OPEN CURNODOSREQ FETCH NEXT FROM CURNODOSREQ INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESCRIPCION FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=@CODIGO)UPDATE#TABLAREQ SET DESC_NIVEL2=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOSREQ INTO@CODIGO END CLOSE CURNODOSREQ DEALLOCATE CURNODOSREQ DECLARE CURNODOSREQ CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE NIVEL=2 OPEN CURNODOSREQ FETCH NEXT FROM CURNODOSREQ INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESCRIPCION FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=@CODIGO)UPDATE#TABLAREQ SET DESC_NIVEL1=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOSREQ INTO@CODIGO END CLOSE CURNODOSREQ DEALLOCATE CURNODOSREQ DECLARE CURNODOSREQ CURSOR LOCAL FAST_FORWARD FOR SELECT CODIGO FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE NIVEL=3 OPEN CURNODOSREQ FETCH NEXT FROM CURNODOSREQ INTO@CODIGO WHILE@@FETCH_STATUS=0 BEGIN SELECT@DESCRIPCION=DESC_NIVEL1 FROM#TABLAREQ WHERE CODIGO=(SELECT CODIGO_PADRE FROM TBL_NCCC_REQUISITOSNORMATIVOS WHERE CODIGO=@CODIGO)UPDATE#TABLAREQ SET DESC_NIVEL1=@DESCRIPCION WHERE CODIGO=@CODIGO FETCH NEXT FROM CURNODOSREQ INTO@CODIGO END DECLARE@STR NVARCHAR(4000)SELECT@STR=<str>IF(@CORTE=<str>)OR(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>IF(@CORTE=<str>)SET@STR=@STR+<str>SET@STR=@STR+<str>IF(@FILTRO_CARACTER<><str>)SET@STR=@STR+<str>+@FILTRO_CARACTER IF(@FILTRO_AREA<><str>)SET@STR=@STR+<str>+@FILTRO_AREA+<str>IF(@FILTRO_PROCESO<><str>)SET@STR=@STR+<str>+@FILTRO_PROCESO+<str>IF(@FILTRO_CAUSA<><str>)SET@STR=@STR+<str>+@FILTRO_CAUSA+<str>IF(@FILTRO_REQUISITO<><str>)SET@STR=@STR+<str>+@FILTRO_REQUISITO+<str>EXEC(@STR)RETURN GO
ISOKEYNET	[dbo].[ik_PersonsIds_withaccess]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	CODIGOTIPONC, ; ; ; NIVELACCESO	SELECT PE.CODIGO FROM#TMP_SEC_LEVELS JOIN PERSONAS PE ON 98=#TMP_SEC_LEVELS.CODIGOTIPONC LEFT JOIN#TMP_PERSONS_INVOLVED ON#TMP_PERSONS_INVOLVED.IKPERSONID=PE.CODIGO WHERE#TMP_SEC_LEVELS.NIVELACCESO>0 AND((#TMP_SEC_LEVELS.NIVELACCESO=2 AND NOT#TMP_PERSONS_INVOLVED.IKPERSONID IS NULL)OR(#TMP_SEC_LEVELS.NIVELACCESO>2))ORDER BY CODIGOTIPONC,NIVELACCESO
ISOKEYNET	[dbo].[ik_procnodesreldocs_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_PROCNODESRELDOCS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRDOC VARCHAR(4000),@WHERE VARCHAR(100)SET@STRDOC=<str>+CONVERT(NVARCHAR(5),@IKCDU)+<str>+CONVERT(NVARCHAR(5),@BSPROCCAT)+<str>+CONVERT(NVARCHAR(5),@IKCAT)+<str>+CONVERT(NVARCHAR(5),@IKCDU)+<str><str><str>SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END EXEC(@STRDOC+@WHERE+@PARAMETERS+@SORT)END ELSE BEGIN EXEC(@STRDOC)END RETURN GO
ISOKEYNET	[dbo].[ik_procplans_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_PROCPLANS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRDOC VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRDOC=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str><str><str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str><str><str>ELSE<str><str><str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END EXEC(@STRDOC+@WHERE+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_procplansIds_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_PROCPLANSIDS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT,@TMP_TABLE NVARCHAR(500)=<str>,@L_RETURN_DATA INT=1)AS SET DATEFORMAT YMD DECLARE@STRSQL VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str>ELSE<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END BEGIN TRY EXEC(<str>+@TMP_TABLE+<str>+<str>+@TMP_TABLE+<str>+@STRSQL+@WHERE+@PARAMETERS+@SORT)END TRY BEGIN CATCH END CATCH IF@L_RETURN_DATA=1 BEGIN EXEC(@STRSQL+@WHERE+@PARAMETERS+@SORT)END RETURN GO
ISOKEYNET	[dbo].[ik_search_global_groups_only]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	1 DESC	SELECT 1 AS ORDEN,COUNT(*)AS CANT,MAX(#TMP_SEARCH_GLOBAL.ENTITY_GROUP_DESC)AS ENTITY_GROUP_DESC,#TMP_SEARCH_GLOBAL.ENTITY_GROUP_ID,MAX(#TMP_SEARCH_GLOBAL.ENTITY_GROUP_ICON)AS ENTITY_GROUP_ICON FROM#TMP_SEARCH_GLOBAL GROUP BY#TMP_SEARCH_GLOBAL.ENTITY_GROUP_ID ORDER BY 1 DESC
ISOKEYNET	[dbo].[ik_search_terms_matches]	Warning	Execute	Using dynamic SQL	EXEC(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_SEARCH_TERMS_MATCHES@IKLANG NVARCHAR(10),@STR2SEARCH NVARCHAR(2000),@TMP_TABLE NVARCHAR(500)=<str>,@L_RETURN_DATA INT=1 AS DECLARE@LANG NVARCHAR(100)IF(@IKLANG=<str>OR@IKLANG=<str>)BEGIN SET@LANG=<str>END IF(@IKLANG=<str>)BEGIN SET@LANG=<str>END IF(@IKLANG=<str>)BEGIN SET@LANG=<str>END DECLARE@STR2SEARCH_CLEAN NVARCHAR(500)SET@STR2SEARCH_CLEAN=LTRIM(@STR2SEARCH)SET@STR2SEARCH_CLEAN=RTRIM(@STR2SEARCH_CLEAN)SET@STR2SEARCH_CLEAN=<str>+REPLACE(@STR2SEARCH_CLEAN,<str>,<str>)+<str>DECLARE@LCID INT SELECT@LCID=LCID FROM SYS.FULLTEXT_LANGUAGES WHERE NAME=@LANG CREATE TABLE#TMP_MATCHES(DISPLAY_TERM NVARCHAR(MAX))BEGIN TRY IF(OBJECT_ID(<str>)IS NOT NULL)BEGIN INSERT INTO#TMP_MATCHES SELECT DISPLAY_TERM FROM SYS.DM_FTS_PARSER(@STR2SEARCH_CLEAN,@LCID,0,0)WHERE SPECIAL_TERM=<str>AND NOT DISPLAY_TERM LIKE<str>END ELSE BEGIN DECLARE@TMP_STR NVARCHAR(500)SET@TMP_STR=REPLACE(@STR2SEARCH,<str>,<str>)INSERT INTO#TMP_MATCHES SELECT VALUE FROM IK_SPLITINTOTABLE(@TMP_STR,<str>)END END TRY BEGIN CATCH END CATCH BEGIN TRY DECLARE@QUERY NVARCHAR(MAX)SET@QUERY=<str>+@TMP_TABLE+<str>+@TMP_TABLE+<str>EXEC(@QUERY)END TRY BEGIN CATCH END CATCH IF@L_RETURN_DATA=1 BEGIN BEGIN TRY SELECT DISPLAY_TERM FROM#TMP_MATCHES END TRY BEGIN CATCH END CATCH END RETURN GO
ISOKEYNET	[dbo].[ik_surveys_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRDOC	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_SURVEYS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@IKPDO INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRDOC VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRDOC=CASE WHEN@IKCAT=0 OR@IKPDO=2 THEN<str>WHEN@IKCAT=4 OR@IKPDO=0 THEN<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>/*SELECT ALL*/ELSE<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>+LTRIM(STR(@IKCDU))+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@IKPDO=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END EXEC(@STRDOC+@WHERE+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_svgs_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_SVGS_WITHACCESS(@PARAMETERS VARCHAR(8000)=<str>,@SORT NVARCHAR(100),@BSPROCCAT INT,@IKCAT INT,@IKCDU INT)AS SET DATEFORMAT YMD DECLARE@STRSQL VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str>ELSE<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END SET@WHERE=<str>IF NOT(@IKCAT=0 OR@BSPROCCAT=2)BEGIN IF@PARAMETERS<><str>BEGIN SET@WHERE=<str>END IF@SORT<><str>BEGIN SET@SORT=<str>+@SORT END ELSE BEGIN SET@SORT=<str>END END EXEC(@STRSQL+@WHERE+@PARAMETERS+@SORT)RETURN GO
ISOKEYNET	[dbo].[ik_svgsIds_withaccess]	Warning	Execute	Using dynamic SQL	EXEC(@STRSQL	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_SVGSIDS_WITHACCESS(@BSPROCCAT INT,@IKCAT INT,@IKCDU INT,@TMP_TABLE NVARCHAR(500)=<str>,@L_RETURN_DATA INT=1)AS SET DATEFORMAT YMD DECLARE@STRSQL VARCHAR(4000),@WHERE VARCHAR(100)SELECT@STRSQL=CASE WHEN@IKCAT=0 OR@BSPROCCAT=2 THEN<str>WHEN@IKCAT=4 OR@BSPROCCAT=0 THEN<str>ELSE<str>+LTRIM(STR(@IKCDU))+<str>+LTRIM(STR(@IKCDU))+<str>END BEGIN TRY EXEC(<str>+@TMP_TABLE+<str>+<str>+@TMP_TABLE+<str>+@STRSQL)END TRY BEGIN CATCH END CATCH IF@L_RETURN_DATA=1 BEGIN EXEC(@STRSQL)END RETURN GO
ISOKEYNET	[dbo].[ik_TMP_TBL_IDS_fromXML]	Warning	Execute	Using dynamic SQL	EXEC(@QUERY	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_TMP_TBL_IDS_FROMXML(@VALIDXMLINPUT XML,@TMP_TABLE NVARCHAR(500)=<str>,@L_RETURN_DATA INT=0)AS BEGIN SELECT COL.VALUE(<str>,<str>)AS RECORDID INTO#TMP_TBL_IDS_FRON_XML FROM@VALIDXMLINPUT.NODES(<str>)TAB(COL)BEGIN TRY DECLARE@QUERY NVARCHAR(3000)SET@QUERY=<str>+@TMP_TABLE+<str>EXEC(@QUERY)END TRY BEGIN CATCH END CATCH IF@L_RETURN_DATA=1 BEGIN SELECT*FROM#TMP_TBL_IDS_FRON_XML END DROP TABLE#TMP_TBL_IDS_FRON_XML END GO
ISOKEYNET	[dbo].[ik_usrIns_DocGroupsByPerm]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY M.ORDEN	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_USRINS_DOCGROUPSBYPERM@CODIGOUSUARIO INT,@NIVELACCESO INT AS BEGIN IF(@NIVELACCESO=-1)SELECT DISTINCT M.DESCRIPCION,M.CODIGO,CASE WHEN L_PUEDENUEVOS=1 THEN M.CAMINO+<str>ELSE M.CAMINO END AS CAMINO,<str>AS SMALLGIF,M.ORDEN FROM TBL_CATEGORIASDOCUMENTOS M JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.CODIGO+300000 WHERE CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.ORDEN ELSE SELECT DISTINCT M.DESCRIPCION,M.CODIGO,CASE WHEN L_PUEDENUEVOS=1 THEN M.CAMINO+<str>ELSE M.CAMINO END AS CAMINO,<str>AS SMALLGIF,M.ORDEN FROM TBL_CATEGORIASDOCUMENTOS M JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.CODIGO+300000 WHERE NIVELACCESO=@NIVELACCESO AND CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.ORDEN END GO
ISOKEYNET	[dbo].[ik_usrIns_DocGroupsByPerm]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY M.ORDEN	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_USRINS_DOCGROUPSBYPERM@CODIGOUSUARIO INT,@NIVELACCESO INT AS BEGIN IF(@NIVELACCESO=-1)SELECT DISTINCT M.DESCRIPCION,M.CODIGO,CASE WHEN L_PUEDENUEVOS=1 THEN M.CAMINO+<str>ELSE M.CAMINO END AS CAMINO,<str>AS SMALLGIF,M.ORDEN FROM TBL_CATEGORIASDOCUMENTOS M JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.CODIGO+300000 WHERE CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.ORDEN ELSE SELECT DISTINCT M.DESCRIPCION,M.CODIGO,CASE WHEN L_PUEDENUEVOS=1 THEN M.CAMINO+<str>ELSE M.CAMINO END AS CAMINO,<str>AS SMALLGIF,M.ORDEN FROM TBL_CATEGORIASDOCUMENTOS M JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.CODIGO+300000 WHERE NIVELACCESO=@NIVELACCESO AND CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.ORDEN END GO
ISOKEYNET	[dbo].[ik_usrIns_ModulesByPermissions]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY M.DESCRIPTION	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_USRINS_MODULESBYPERMISSIONS@CODIGOUSUARIO INT,@NIVELACCESO INT AS BEGIN IF(@NIVELACCESO=-1)SELECT DISTINCT M.MODULEID,M.DESCRIPTION,G.SMALLGIF FROM XML_MODULE_DEFINITIONS M JOIN XML_MODULEGROUP_DEFINITIONS G ON G.MODULEGROUPID=M.MODULEGROUPID JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.MODULEID WHERE CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.DESCRIPTION ELSE SELECT DISTINCT M.MODULEID,M.DESCRIPTION,G.SMALLGIF FROM XML_MODULE_DEFINITIONS M JOIN XML_MODULEGROUP_DEFINITIONS G ON G.MODULEGROUPID=M.MODULEGROUPID JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.MODULEID WHERE NIVELACCESO=@NIVELACCESO AND CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.DESCRIPTION END GO
ISOKEYNET	[dbo].[ik_usrIns_ModulesByPermissions]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY M.DESCRIPTION	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_USRINS_MODULESBYPERMISSIONS@CODIGOUSUARIO INT,@NIVELACCESO INT AS BEGIN IF(@NIVELACCESO=-1)SELECT DISTINCT M.MODULEID,M.DESCRIPTION,G.SMALLGIF FROM XML_MODULE_DEFINITIONS M JOIN XML_MODULEGROUP_DEFINITIONS G ON G.MODULEGROUPID=M.MODULEGROUPID JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.MODULEID WHERE CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.DESCRIPTION ELSE SELECT DISTINCT M.MODULEID,M.DESCRIPTION,G.SMALLGIF FROM XML_MODULE_DEFINITIONS M JOIN XML_MODULEGROUP_DEFINITIONS G ON G.MODULEGROUPID=M.MODULEGROUPID JOIN NCMODULESECURITYLEVELS P ON P.CODIGOTIPONC=M.MODULEID WHERE NIVELACCESO=@NIVELACCESO AND CODIGOUSUARIO=@CODIGOUSUARIO ORDER BY M.DESCRIPTION END GO
ISOKEYNET	[dbo].[ik_wf_setWFNodesPredictedDates]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY D.WF_SCHEDDATES_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_WF_SETWFNODESPREDICTEDDATES(@WF_ID INT,@FROMDATE DATETIME)AS SET NOCOUNT ON SET DATEFORMAT YMD IF(SELECT IK_GETWORKINGDAYS(@FROMDATE,@FROMDATE+1))=0 BEGIN SET@FROMDATE=GETDATE()+1 END IF(SELECT IK_GETWORKINGDAYS(@FROMDATE,@FROMDATE+1))=0 BEGIN SET@FROMDATE=GETDATE()+1 END DECLARE@RESULT_DATES TABLE(WF_XMLNODE_ID NVARCHAR(100),WF_SCHEDDATES_STARTDATE_CALC DATETIME,WF_SCHEDDATES_ENDDATE_CALC DATETIME)DECLARE@WF_SCHEDDATES_STARTDATE_REAL DATETIME DECLARE@WF_SCHEDDATES_DATE_REAL DATETIME DECLARE@WF_SCHEDDATES_NODEPARALLEL NVARCHAR(100)DECLARE@WF_SCHEDDATES_DAYSFROMSTART INT DECLARE@WF_NODE_STATE INT DECLARE@WF_XMLNODE_ID VARCHAR(100)DECLARE@LASTPARALLEL NVARCHAR(100)SET@LASTPARALLEL=<str>DECLARE@LAST_PARALLEL_ENDDATE DATETIME SET@LAST_PARALLEL_ENDDATE=NULL DECLARE@LAST_NODE_ENDDATE DATETIME SET@LAST_NODE_ENDDATE=@FROMDATE DECLARE@LAST_NODE_STARTDATE DATETIME SET@LAST_NODE_STARTDATE=@FROMDATE DECLARE@MAX_PARALLEL_ENDDATE DATETIME SET@MAX_PARALLEL_ENDDATE=NULL DECLARE CURNODEDATES CURSOR FOR SELECT D.WF_SCHEDDATES_STARTDATE_REAL,D.WF_SCHEDDATES_DATE_REAL,D.WF_SCHEDDATES_NODEPARALLEL,D.WF_SCHEDDATES_DAYSFROMSTART,N.WF_NODE_STATE,D.WF_XMLNODE_ID FROM WF_SCHEDDATES D LEFT JOIN WF_NODE N ON N.WF_ID=D.WF_ID AND D.WF_XMLNODE_ID=N.WF_NODE_XMLNODE_ID WHERE D.WF_ID=@WF_ID AND D.WF_SCHEDDATES_ENABLED=1 ORDER BY D.WF_SCHEDDATES_ID BEGIN TRAN OPEN CURNODEDATES FETCH NEXT FROM CURNODEDATES INTO@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DATE_REAL,@WF_SCHEDDATES_NODEPARALLEL,@WF_SCHEDDATES_DAYSFROMSTART,@WF_NODE_STATE,@WF_XMLNODE_ID WHILE@@FETCH_STATUS=0 BEGIN IF@WF_SCHEDDATES_NODEPARALLEL=<str>BEGIN IF@LASTPARALLEL<><str>BEGIN SET@LAST_NODE_ENDDATE=@MAX_PARALLEL_ENDDATE SET@LASTPARALLEL=<str>END SET@LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE SET@LAST_NODE_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))UPDATE WF_SCHEDDATES SET WF_SCHEDDATES_STARTDATE=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_STARTDATE))),WF_SCHEDDATES_DATE=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_ENDDATE)))WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID PRINT<str>+@WF_XMLNODE_ID+<str>+CONVERT(VARCHAR(100),@LAST_NODE_ENDDATE)END ELSE BEGIN IF@WF_SCHEDDATES_NODEPARALLEL=@LASTPARALLEL BEGIN SET@LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE SET@LAST_PARALLEL_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))UPDATE WF_SCHEDDATES SET WF_SCHEDDATES_STARTDATE=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_STARTDATE))),WF_SCHEDDATES_DATE=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_PARALLEL_ENDDATE)))WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID PRINT<str>+@WF_XMLNODE_ID+<str>+CONVERT(VARCHAR(100),@LAST_PARALLEL_ENDDATE)SET@LASTPARALLEL=@WF_SCHEDDATES_NODEPARALLEL IF@LAST_PARALLEL_ENDDATE>@MAX_PARALLEL_ENDDATE BEGIN SET@MAX_PARALLEL_ENDDATE=@LAST_PARALLEL_ENDDATE END END ELSE BEGIN IF@LASTPARALLEL<><str>BEGIN SET@LAST_NODE_ENDDATE=@MAX_PARALLEL_ENDDATE END SET@LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE SET@LAST_PARALLEL_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))UPDATE WF_SCHEDDATES SET WF_SCHEDDATES_STARTDATE=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_STARTDATE))),WF_SCHEDDATES_DATE=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_PARALLEL_ENDDATE)))WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID SET@MAX_PARALLEL_ENDDATE=@LAST_PARALLEL_ENDDATE PRINT<str>+@WF_XMLNODE_ID+<str>+CONVERT(VARCHAR(100),@LAST_PARALLEL_ENDDATE)SET@LASTPARALLEL=@WF_SCHEDDATES_NODEPARALLEL END END FETCH NEXT FROM CURNODEDATES INTO@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DATE_REAL,@WF_SCHEDDATES_NODEPARALLEL,@WF_SCHEDDATES_DAYSFROMSTART,@WF_NODE_STATE,@WF_XMLNODE_ID END CLOSE CURNODEDATES DEALLOCATE CURNODEDATES COMMIT TRAN RETURN GO
ISOKEYNET	[dbo].[ik_wf_setWFNodesProyTMPDates]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY D.WF_SCHEDDATES_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.IK_WF_SETWFNODESPROYTMPDATES(@WF_ID INT,@FROMDATE DATETIME)AS SET NOCOUNT ON SET DATEFORMAT YMD IF(SELECT IK_GETWORKINGDAYS(@FROMDATE,@FROMDATE+1))=0 BEGIN SET@FROMDATE=GETDATE()+1 END IF(SELECT IK_GETWORKINGDAYS(@FROMDATE,@FROMDATE+1))=0 BEGIN SET@FROMDATE=GETDATE()+1 END DECLARE@HOY DATETIME SET@HOY=GETDATE()IF(SELECT IK_GETWORKINGDAYS(@HOY,@HOY+1))=0 BEGIN SET@HOY=GETDATE()+1 END IF(SELECT IK_GETWORKINGDAYS(@HOY,@HOY+1))=0 BEGIN SET@HOY=GETDATE()+1 END DECLARE@RESULT_DATES TABLE(WF_XMLNODE_ID NVARCHAR(100),WF_SCHEDDATES_STARTDATE_CALC DATETIME,WF_SCHEDDATES_ENDDATE_CALC DATETIME)DECLARE@WF_SCHEDDATES_STARTDATE_REAL DATETIME DECLARE@WF_SCHEDDATES_DATE_REAL DATETIME DECLARE@WF_SCHEDDATES_NODEPARALLEL NVARCHAR(100)DECLARE@WF_SCHEDDATES_DAYSFROMSTART INT DECLARE@WF_NODE_STATE INT DECLARE@WF_XMLNODE_ID VARCHAR(100)DECLARE@LASTPARALLEL NVARCHAR(100)SET@LASTPARALLEL=<str>DECLARE@LAST_PARALLEL_ENDDATE DATETIME SET@LAST_PARALLEL_ENDDATE=NULL DECLARE@LAST_NODE_ENDDATE DATETIME SET@LAST_NODE_ENDDATE=@FROMDATE DECLARE@LAST_NODE_STARTDATE DATETIME SET@LAST_NODE_STARTDATE=@FROMDATE DECLARE@MAX_PARALLEL_ENDDATE DATETIME SET@MAX_PARALLEL_ENDDATE=NULL DECLARE CURNODEDATES CURSOR FOR SELECT D.WF_SCHEDDATES_STARTDATE_REAL,D.WF_SCHEDDATES_DATE_REAL,D.WF_SCHEDDATES_NODEPARALLEL,D.WF_SCHEDDATES_DAYSFROMSTART,N.WF_NODE_STATE,D.WF_XMLNODE_ID FROM WF_SCHEDDATES D LEFT JOIN WF_NODE N ON N.WF_ID=D.WF_ID AND D.WF_XMLNODE_ID=N.WF_NODE_XMLNODE_ID WHERE D.WF_ID=@WF_ID AND D.WF_SCHEDDATES_ENABLED=1 ORDER BY D.WF_SCHEDDATES_ID BEGIN TRAN OPEN CURNODEDATES FETCH NEXT FROM CURNODEDATES INTO@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DATE_REAL,@WF_SCHEDDATES_NODEPARALLEL,@WF_SCHEDDATES_DAYSFROMSTART,@WF_NODE_STATE,@WF_XMLNODE_ID WHILE@@FETCH_STATUS=0 BEGIN IF@WF_SCHEDDATES_NODEPARALLEL=<str>BEGIN IF@LASTPARALLEL<><str>BEGIN SET@LAST_NODE_ENDDATE=@MAX_PARALLEL_ENDDATE SET@LASTPARALLEL=<str>END IF@WF_NODE_STATE IS NULL OR@WF_NODE_STATE<=2 OR@WF_NODE_STATE=6 BEGIN SET@LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE IF DATEDIFF(DAY,@HOY,@LAST_NODE_STARTDATE)<0 BEGIN SET@LAST_NODE_STARTDATE=@HOY END SET@LAST_NODE_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@LAST_NODE_STARTDATE,@WF_SCHEDDATES_DAYSFROMSTART))END IF@WF_NODE_STATE>2 AND@WF_NODE_STATE<=4 BEGIN SET@LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL SET@LAST_NODE_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DAYSFROMSTART))IF DATEDIFF(DAY,@HOY,@LAST_NODE_ENDDATE)<0 BEGIN SET@LAST_NODE_ENDDATE=@HOY END END IF@WF_NODE_STATE=5 BEGIN SET@LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL SET@LAST_NODE_ENDDATE=@WF_SCHEDDATES_DATE_REAL END UPDATE WF_SCHEDDATES SET WF_SCHEDDATES_STARTDATE_PROYECTED_TMP=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_STARTDATE))),WF_SCHEDDATES_DATE_PROYECTED_TMP=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_ENDDATE)))WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID PRINT<str>+@WF_XMLNODE_ID+<str>+CONVERT(VARCHAR(100),@LAST_NODE_ENDDATE)END ELSE BEGIN IF@WF_SCHEDDATES_NODEPARALLEL=@LASTPARALLEL BEGIN IF@WF_NODE_STATE IS NULL OR@WF_NODE_STATE<=2 OR@WF_NODE_STATE=6 BEGIN SET@LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE IF DATEDIFF(DAY,@HOY,@LAST_NODE_STARTDATE)<0 BEGIN SET@LAST_NODE_STARTDATE=@HOY END SET@LAST_PARALLEL_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))END IF@WF_NODE_STATE>2 AND@WF_NODE_STATE<=4 BEGIN SET@LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL SET@LAST_PARALLEL_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DAYSFROMSTART))IF DATEDIFF(DAY,@HOY,@LAST_PARALLEL_ENDDATE)<0 BEGIN SET@LAST_PARALLEL_ENDDATE=@HOY END END IF@WF_NODE_STATE=5 BEGIN SET@LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL SET@LAST_PARALLEL_ENDDATE=@WF_SCHEDDATES_DATE_REAL END UPDATE WF_SCHEDDATES SET WF_SCHEDDATES_STARTDATE_PROYECTED_TMP=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_STARTDATE))),WF_SCHEDDATES_DATE_PROYECTED_TMP=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_PARALLEL_ENDDATE)))WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID PRINT<str>+@WF_XMLNODE_ID+<str>+CONVERT(VARCHAR(100),@LAST_PARALLEL_ENDDATE)SET@LASTPARALLEL=@WF_SCHEDDATES_NODEPARALLEL IF@LAST_PARALLEL_ENDDATE>@MAX_PARALLEL_ENDDATE BEGIN SET@MAX_PARALLEL_ENDDATE=@LAST_PARALLEL_ENDDATE END END ELSE BEGIN IF@LASTPARALLEL<><str>BEGIN SET@LAST_NODE_ENDDATE=@MAX_PARALLEL_ENDDATE END IF@WF_NODE_STATE IS NULL OR@WF_NODE_STATE<=2 OR@WF_NODE_STATE=6 BEGIN SET@LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE IF DATEDIFF(DAY,@HOY,@LAST_NODE_STARTDATE)<0 BEGIN SET@LAST_NODE_STARTDATE=@HOY END SET@LAST_PARALLEL_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))END IF@WF_NODE_STATE>2 AND@WF_NODE_STATE<=4 BEGIN SET@LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL SET@LAST_PARALLEL_ENDDATE=(SELECT IK_ADDWORKINGDAYS(@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DAYSFROMSTART))IF DATEDIFF(DAY,@HOY,@LAST_PARALLEL_ENDDATE)<0 BEGIN SET@LAST_PARALLEL_ENDDATE=@HOY END END IF@WF_NODE_STATE=5 BEGIN SET@LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL SET@LAST_PARALLEL_ENDDATE=@WF_SCHEDDATES_DATE_REAL END UPDATE WF_SCHEDDATES SET WF_SCHEDDATES_STARTDATE_PROYECTED_TMP=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_NODE_STARTDATE))),WF_SCHEDDATES_DATE_PROYECTED_TMP=CONVERT(DATETIME,FLOOR(CONVERT(FLOAT,@LAST_PARALLEL_ENDDATE)))WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID SET@MAX_PARALLEL_ENDDATE=@LAST_PARALLEL_ENDDATE PRINT<str>+@WF_XMLNODE_ID+<str>+CONVERT(VARCHAR(100),@LAST_PARALLEL_ENDDATE)SET@LASTPARALLEL=@WF_SCHEDDATES_NODEPARALLEL END END FETCH NEXT FROM CURNODEDATES INTO@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DATE_REAL,@WF_SCHEDDATES_NODEPARALLEL,@WF_SCHEDDATES_DAYSFROMSTART,@WF_NODE_STATE,@WF_XMLNODE_ID END CLOSE CURNODEDATES DEALLOCATE CURNODEDATES COMMIT TRAN RETURN GO
ISOKEYNET	[dbo].[ik_trig_DOCUMENTOS_Validate_Id]	Information	SystemExtendedStoredProcedures	Accessing the registry	XP_REGREAD	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NOT NULL EXEC(<str>)GO CREATE TRIGGER DBO.IK_TRIG_DOCUMENTOS_VALIDATE_ID ON DBO.DOCUMENTOS FOR INSERT,UPDATE AS IF(@@ROWCOUNT=1)BEGIN IF UPDATE(CODIGOISO)BEGIN DECLARE@ERRORDESC VARCHAR(200)DECLARE@CODIGOISO VARCHAR(50)SET@CODIGOISO=(SELECT CODIGOISO FROM INSERTED)IF(LEFT(@CODIGOISO,1)=<str>)BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END IF(RIGHT(@CODIGOISO,1)=<str>)BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END SET@CODIGOISO=(SELECT RTRIM(LTRIM(CODIGOISO))FROM INSERTED)DECLARE@REVISION INT SET@REVISION=(SELECT ISNULL(REVISION,0)FROM INSERTED)DECLARE@CODIGO INT SET@CODIGO=(SELECT ISNULL(CODIGO,-1)FROM INSERTED)DECLARE@CODIGOBASADOEN INT SET@CODIGOBASADOEN=(SELECT ISNULL(CODIGOBASADOEN,0)FROM INSERTED)IF(@CODIGOBASADOEN=0)BEGIN SET@CODIGOBASADOEN=(SELECT ISNULL(CODIGOBASADOEN,0)FROM DOCUMENTOS WHERE CODIGO=@CODIGO)END IF(SELECT COUNT(*)FROM DELETED WHERE CODIGO=@CODIGO AND RTRIM(LTRIM(CODIGOISO))=RTRIM(LTRIM(@CODIGOISO))AND REVISION=@REVISION)=1 BEGIN RETURN END CREATE TABLE#AUX_KEY(VALUE NVARCHAR(50),DATA INT)IF(SELECT ISNULL(PROCESO,0)FROM DOCUMENTOS WHERE CODIGO=@CODIGO)!=0 BEGIN DECLARE@ALLOWISOIDCHANGEAFTERREVISION INT INSERT INTO#AUX_KEY VALUES(<str>,1)BEGIN TRY INSERT INTO#AUX_KEY EXEC MASTER.XP_REGREAD<str>,<str>,<str>END TRY BEGIN CATCH END CATCH SELECT@ALLOWISOIDCHANGEAFTERREVISION=MAX(ISNULL(DATA,0))FROM#AUX_KEY WHERE VALUE=<str>IF@ALLOWISOIDCHANGEAFTERREVISION=0 BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END IF(SELECT ESTADO FROM DOCUMENTOS WHERE CODIGO=@CODIGO)!=1 BEGIN DECLARE@ALLOWISOIDCHANGEONCURRENT INT INSERT INTO#AUX_KEY VALUES(<str>,1)BEGIN TRY INSERT INTO#AUX_KEY EXEC MASTER.XP_REGREAD<str>,<str>,<str>END TRY BEGIN CATCH END CATCH SELECT@ALLOWISOIDCHANGEONCURRENT=MAX(ISNULL(DATA,0))FROM#AUX_KEY WHERE VALUE=<str>IF@ALLOWISOIDCHANGEONCURRENT=0 BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO)>0 BEGIN IF(@CODIGOBASADOEN>0)BEGIN DECLARE@CODIGOISO_BASADOEN VARCHAR(50)SELECT@CODIGOISO_BASADOEN=RTRIM(LTRIM(CODIGOISO))FROM DOCUMENTOS WHERE CODIGO=@CODIGOBASADOEN IF@CODIGOISO_BASADOEN=@CODIGOISO BEGIN IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO AND REVISION>=@REVISION)>0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO+<str>+LTRIM(STR(@REVISION))RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END ELSE BEGIN IF(SELECT ESTADO FROM DOCUMENTOS WHERE CODIGO=@CODIGO)!=1 BEGIN IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO AND ESTADO=1)>0 BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END RETURN END END END DECLARE@CODIGO_TIPO_DOC INT SET@CODIGO_TIPO_DOC=(SELECT CODIGOTIPO FROM INSERTED)DECLARE@L_AUTOCOD INT SET@L_AUTOCOD=(SELECT L_AUTOCOD FROM TIPOSDOCUMENTOS WHERE CODIGO=@CODIGO_TIPO_DOC)IF@L_AUTOCOD=1 BEGIN DECLARE@MAX_TRIES INT SET@MAX_TRIES=256 DECLARE@TRY_COUNT INT SET@TRY_COUNT=0 WHILE((@TRY_COUNT<@MAX_TRIES)AND(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND REVISION>=@REVISION AND CODIGO!=ISNULL(@CODIGO,-1))>0)BEGIN UPDATE TIPOSDOCUMENTOS SET CANT=CANT+1 WHERE CODIGO=@CODIGO_TIPO_DOC SET@CODIGOISO=(SELECT IK_DOC_GETISOIDFROMMASK(@CODIGO_TIPO_DOC))SET@TRY_COUNT=@TRY_COUNT+1 END UPDATE DOCUMENTOS SET CODIGOISO=@CODIGOISO WHERE CODIGO=@CODIGO END ELSE BEGIN DECLARE@ALLOWISOIDRECYCLE INT INSERT INTO#AUX_KEY VALUES(<str>,1)BEGIN TRY INSERT INTO#AUX_KEY EXEC MASTER.XP_REGREAD<str>,<str>,<str>END TRY BEGIN CATCH END CATCH SELECT@ALLOWISOIDRECYCLE=MAX(ISNULL(DATA,0))FROM#AUX_KEY WHERE VALUE=<str>IF@ALLOWISOIDRECYCLE=0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END ELSE BEGIN IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE ESTADO!=3 AND CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO)>0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO AND REVISION>=@REVISION)>0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO+<str>+LTRIM(STR(@REVISION))RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END END END END END GO
ISOKEYNET	[dbo].[ik_trig_DOCUMENTOS_Validate_Id]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_REGREAD	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NOT NULL EXEC(<str>)GO CREATE TRIGGER DBO.IK_TRIG_DOCUMENTOS_VALIDATE_ID ON DBO.DOCUMENTOS FOR INSERT,UPDATE AS IF(@@ROWCOUNT=1)BEGIN IF UPDATE(CODIGOISO)BEGIN DECLARE@ERRORDESC VARCHAR(200)DECLARE@CODIGOISO VARCHAR(50)SET@CODIGOISO=(SELECT CODIGOISO FROM INSERTED)IF(LEFT(@CODIGOISO,1)=<str>)BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END IF(RIGHT(@CODIGOISO,1)=<str>)BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END SET@CODIGOISO=(SELECT RTRIM(LTRIM(CODIGOISO))FROM INSERTED)DECLARE@REVISION INT SET@REVISION=(SELECT ISNULL(REVISION,0)FROM INSERTED)DECLARE@CODIGO INT SET@CODIGO=(SELECT ISNULL(CODIGO,-1)FROM INSERTED)DECLARE@CODIGOBASADOEN INT SET@CODIGOBASADOEN=(SELECT ISNULL(CODIGOBASADOEN,0)FROM INSERTED)IF(@CODIGOBASADOEN=0)BEGIN SET@CODIGOBASADOEN=(SELECT ISNULL(CODIGOBASADOEN,0)FROM DOCUMENTOS WHERE CODIGO=@CODIGO)END IF(SELECT COUNT(*)FROM DELETED WHERE CODIGO=@CODIGO AND RTRIM(LTRIM(CODIGOISO))=RTRIM(LTRIM(@CODIGOISO))AND REVISION=@REVISION)=1 BEGIN RETURN END CREATE TABLE#AUX_KEY(VALUE NVARCHAR(50),DATA INT)IF(SELECT ISNULL(PROCESO,0)FROM DOCUMENTOS WHERE CODIGO=@CODIGO)!=0 BEGIN DECLARE@ALLOWISOIDCHANGEAFTERREVISION INT INSERT INTO#AUX_KEY VALUES(<str>,1)BEGIN TRY INSERT INTO#AUX_KEY EXEC MASTER.XP_REGREAD<str>,<str>,<str>END TRY BEGIN CATCH END CATCH SELECT@ALLOWISOIDCHANGEAFTERREVISION=MAX(ISNULL(DATA,0))FROM#AUX_KEY WHERE VALUE=<str>IF@ALLOWISOIDCHANGEAFTERREVISION=0 BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END IF(SELECT ESTADO FROM DOCUMENTOS WHERE CODIGO=@CODIGO)!=1 BEGIN DECLARE@ALLOWISOIDCHANGEONCURRENT INT INSERT INTO#AUX_KEY VALUES(<str>,1)BEGIN TRY INSERT INTO#AUX_KEY EXEC MASTER.XP_REGREAD<str>,<str>,<str>END TRY BEGIN CATCH END CATCH SELECT@ALLOWISOIDCHANGEONCURRENT=MAX(ISNULL(DATA,0))FROM#AUX_KEY WHERE VALUE=<str>IF@ALLOWISOIDCHANGEONCURRENT=0 BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO)>0 BEGIN IF(@CODIGOBASADOEN>0)BEGIN DECLARE@CODIGOISO_BASADOEN VARCHAR(50)SELECT@CODIGOISO_BASADOEN=RTRIM(LTRIM(CODIGOISO))FROM DOCUMENTOS WHERE CODIGO=@CODIGOBASADOEN IF@CODIGOISO_BASADOEN=@CODIGOISO BEGIN IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO AND REVISION>=@REVISION)>0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO+<str>+LTRIM(STR(@REVISION))RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END ELSE BEGIN IF(SELECT ESTADO FROM DOCUMENTOS WHERE CODIGO=@CODIGO)!=1 BEGIN IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO AND ESTADO=1)>0 BEGIN SET@ERRORDESC=<str>RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END RETURN END END END DECLARE@CODIGO_TIPO_DOC INT SET@CODIGO_TIPO_DOC=(SELECT CODIGOTIPO FROM INSERTED)DECLARE@L_AUTOCOD INT SET@L_AUTOCOD=(SELECT L_AUTOCOD FROM TIPOSDOCUMENTOS WHERE CODIGO=@CODIGO_TIPO_DOC)IF@L_AUTOCOD=1 BEGIN DECLARE@MAX_TRIES INT SET@MAX_TRIES=256 DECLARE@TRY_COUNT INT SET@TRY_COUNT=0 WHILE((@TRY_COUNT<@MAX_TRIES)AND(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND REVISION>=@REVISION AND CODIGO!=ISNULL(@CODIGO,-1))>0)BEGIN UPDATE TIPOSDOCUMENTOS SET CANT=CANT+1 WHERE CODIGO=@CODIGO_TIPO_DOC SET@CODIGOISO=(SELECT IK_DOC_GETISOIDFROMMASK(@CODIGO_TIPO_DOC))SET@TRY_COUNT=@TRY_COUNT+1 END UPDATE DOCUMENTOS SET CODIGOISO=@CODIGOISO WHERE CODIGO=@CODIGO END ELSE BEGIN DECLARE@ALLOWISOIDRECYCLE INT INSERT INTO#AUX_KEY VALUES(<str>,1)BEGIN TRY INSERT INTO#AUX_KEY EXEC MASTER.XP_REGREAD<str>,<str>,<str>END TRY BEGIN CATCH END CATCH SELECT@ALLOWISOIDRECYCLE=MAX(ISNULL(DATA,0))FROM#AUX_KEY WHERE VALUE=<str>IF@ALLOWISOIDRECYCLE=0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END ELSE BEGIN IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE ESTADO!=3 AND CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO)>0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END IF(SELECT COUNT(*)FROM DOCUMENTOS WHERE CODIGOISO LIKE@CODIGOISO AND CODIGO!=@CODIGO AND REVISION>=@REVISION)>0 BEGIN SET@ERRORDESC=<str>+@CODIGOISO+<str>+LTRIM(STR(@REVISION))RAISERROR(@ERRORDESC,16,1,@CODIGOISO,<str>)RETURN END END END END END END GO
master	[dbo].[usp_SearchAllLogs]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_ENUMERRORLOGS	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USP_SEARCHALLLOGS(@LOGTYPE INT=1,@FILTERSTR NVARCHAR(4000)=<str>)AS BEGIN DECLARE@LOGLIST TABLE(LOGNUMBER INT,STARTDATE DATETIME,SIZEINBYTES INT)DECLARE@ALLLOGROWS TABLE(LOGDATE DATETIME,PROCESSINFO NVARCHAR(4000),TEST NVARCHAR(4000))INSERT INTO@LOGLIST EXEC XP_ENUMERRORLOGS@LOGTYPE DECLARE@IDX INT=0 WHILE@IDX<=(SELECT MAX(LOGNUMBER)FROM@LOGLIST)BEGIN INSERT INTO@ALLLOGROWS EXEC XP_READERRORLOG@IDX,@LOGTYPE,@FILTERSTR,@FILTERSTR SET@IDX+=1 END SELECT*FROM@ALLLOGROWS ORDER BY LOGDATE DESC END GO
master	[dbo].[usp_SearchAllLogs]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_ENUMERRORLOGS	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.USP_SEARCHALLLOGS(@LOGTYPE INT=1,@FILTERSTR NVARCHAR(4000)=<str>)AS BEGIN DECLARE@LOGLIST TABLE(LOGNUMBER INT,STARTDATE DATETIME,SIZEINBYTES INT)DECLARE@ALLLOGROWS TABLE(LOGDATE DATETIME,PROCESSINFO NVARCHAR(4000),TEST NVARCHAR(4000))INSERT INTO@LOGLIST EXEC XP_ENUMERRORLOGS@LOGTYPE DECLARE@IDX INT=0 WHILE@IDX<=(SELECT MAX(LOGNUMBER)FROM@LOGLIST)BEGIN INSERT INTO@ALLLOGROWS EXEC XP_READERRORLOG@IDX,@LOGTYPE,@FILTERSTR,@FILTERSTR SET@IDX+=1 END SELECT*FROM@ALLLOGROWS ORDER BY LOGDATE DESC END GO
Monitor	[dbo].[Adm_Start_Audit]	Warning	AbsolutePath	Hardcoded absolute path	:\	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ADM_START_AUDIT')IS NULL EXEC('CREATE PROCEDURE DBO.ADM_START_AUDIT AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ADM_START_AUDIT AS BEGIN DECLARE@TRAC_ID INT DECLARE@FECHA VARCHAR(30)DECLARE@PATH NVARCHAR(200)DECLARE@RESULTADO INT DECLARE@VON BIT DECLARE@TAMANO BIGINT SET@TAMANO=50 SET@FECHA=CONVERT(VARCHAR,GETDATE(),120)SET@FECHA=REPLACE(@FECHA,':','')SET@FECHA=REPLACE(@FECHA,'-','')SET@FECHA=REPLACE(@FECHA,'','')SET@PATH='C:\TRACE\ATLAS_'+@FECHA EXEC@RESULTADO=SP_TRACE_CREATE@TRAC_ID OUTPUT,@OPTIONS=2,@TRACEFILE=@PATH,@MAXFILESIZE=@TAMANO IF@RESULTADO<>0 RETURN(-1)SET@VON=CAST(1 AS BIT)EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETSTATUS@TRACEID=1,@STATUS=1 IF@@ERROR<>0 RETURN(-1)END;GO
Monitor	[dbo].[DBA_Alerta_Backup_Log]	Warning	SelectIntoWithOrderBy	Select Into with Order By clause used without order by	FechaHora desc	SELECT DB.NAME NAMEBD,RES.DATABASE_NAME,TIPO_BACKUP=CASE RES.TYPE WHEN'D'THEN'DATABASE'WHEN'I'THEN'DATABASE DIFFERENTIAL'WHEN'L'THEN'LOG'WHEN'F'THEN'FILE OR FILEGROUP'END,MAX(RES.BACKUP_START_DATE)FECHAHORA INTO TEMP_ALERTA_BACKUP_LOG FROM MASTER..SYSDATABASES DB LEFT OUTER JOIN MSDB..BACKUPSET RES ON DB.NAME=RES.DATABASE_NAME AND RES.TYPE='L'GROUP BY DB.NAME,RES.DATABASE_NAME,TYPE ORDER BY FECHAHORA DESC
Monitor	[dbo].[DBA_Alerta_Espacio_BD]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DBA_ALERTA_ESPACIO_BD AS SET NOCOUNT ON DECLARE@NAME SYSNAME DECLARE@MYSQL NVARCHAR(2048)DECLARE@DATO NVARCHAR(20)DECLARE@USADO NVARCHAR(20)DECLARE@PORCENUSADO INT DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@MENSAJE NVARCHAR(2048)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@MEN VARCHAR(50)CREATE TABLE#TMPDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str>DECLARE DBSPACE CURSOR FOR SELECT DBNAME,FLFILESIZEMB,FLSPACEUSEDMB,(CONVERT(INT,FLSPACEUSEDMB)*100)/CONVERT(INT,FLFILESIZEMB)PERC FROM#TMPDBSIZE WHERE(CONVERT(INT,FLSPACEUSEDMB)*100)/CONVERT(INT,FLFILESIZEMB)>85.0 SET@ENVIAR_MENSAJE=<str>IF(SELECT COUNT(1)FROM#TMPDBSIZE WHERE(CONVERT(INT,FLSPACEUSEDMB)*100)/CONVERT(INT,FLFILESIZEMB)>85.0)>0 BEGIN SET@ENVIAR_MENSAJE=<str>END SET@MENSAJE=<str>+@@SERVERNAME+<str>SET@MENSAJE=@MENSAJE+<str>+<str>OPEN DBSPACE FETCH NEXT FROM DBSPACE INTO@NAME,@DATO,@USADO,@PORCENUSADO WHILE@@FETCH_STATUS=0 BEGIN SET@MENSAJE=@MENSAJE+<str>+@NAME+<str>+CONVERT(VARCHAR(20),@DATO)+<str>+CONVERT(VARCHAR(20),@USADO)+<str>+CONVERT(VARCHAR(20),@PORCENUSADO)+<str>+CONVERT(VARCHAR(50),GETDATE(),113)+<str>FETCH NEXT FROM DBSPACE INTO@NAME,@DATO,@USADO,@PORCENUSADO END CLOSE DBSPACE DEALLOCATE DBSPACE SET@MENSAJE=N<str>+@MENSAJE+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>IF@ENVIAR_MENSAJE=<str>BEGIN SET@HTML_MENSAJE=@MENSAJE+N<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=<str>,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=N<str>,@BODY=@HTML_MENSAJE,@BODY_FORMAT=N<str>END GO
Monitor	[dbo].[DBA_Alerta_Espacio_TLog]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.DBA_ALERTA_ESPACIO_TLOG')IS NULL EXEC('CREATE PROCEDURE DBO.DBA_ALERTA_ESPACIO_TLOG AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBA_ALERTA_ESPACIO_TLOG AS SET NOCOUNT ON DECLARE@XX NVARCHAR(1024)DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@MENSAJE NVARCHAR(2048)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@DB SYSNAME DECLARE@MEN VARCHAR(50)DECLARE@PORCEN_USED DECIMAL TRUNCATE TABLE SPACELOG SET@XX='DBCC SQLPERF(LOGSPACE)'INSERT INTO SPACELOG(DB,LOGSIZE,PORCEN_USED,STATUS)EXEC MASTER..SP_EXECUTESQL@XX INSERT INTO SPACELOG_HIST(DB,LOGSIZE,PORCEN_USED,STATUS,FECHA)SELECT DB,LOGSIZE,PORCEN_USED,STATUS,GETDATE()FROM SPACELOG DECLARE CONSULTA_LOG CURSOR FOR SELECT DB,PORCEN_USED FROM SPACELOG WHERE PORCEN_USED>80 SET@ENVIAR_MENSAJE='N'SET@MENSAJE='<HTML><HEAD><TITLE>DEPARTMENT REPORT</TITLE></HEAD><BODY><P><FONT STYLE="FONT-FAMILY:TAHOMA;FONT-WEIGHT: BOLD;FONT-SIZE: 13PX;COLOR:#023962">ALERTA DE ESPACIO EN LOG TRANSACTION,SERVIDOR:<TABLE WIDTH="70%"STYLE="BORDER-COLLAPSE: COLLAPSE;BORDER-TOP: 2PX SOLID#466577"><TR><TD></TD></TR></TABLE></FONT>'+@@SERVERNAME+'</P>'OPEN CONSULTA_LOG FETCH NEXT FROM CONSULTA_LOG INTO@DB,@PORCEN_USED SET@MENSAJE=@MENSAJE+'<BR>'+'<TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#FFFFFF;FONT-FAMILY:TAHOMA;BACKGROUND-COLOR:#466577;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>%DE USO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA/HORA</STRONG></TD></TR>'WHILE@@FETCH_STATUS=0 BEGIN IF@PORCEN_USED>80 AND@PORCEN_USED<=95 SET@MEN='WARNING:'+@DB ELSE SET@MEN='CRITICAL ERROR:'+@DB SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR STYLE="FONT-SIZE: 10PX;COLOR:#023962;FONT-FAMILY:TAHOMA;TEXT-ALIGN: CENTER"><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(20),@PORCEN_USED)+'</TD><TD>'+CONVERT(VARCHAR(50),GETDATE(),113)+'</TD></TR>'FETCH NEXT FROM CONSULTA_LOG INTO@DB,@PORCEN_USED END IF@ENVIAR_MENSAJE='Y'BEGIN SET@HTML_MENSAJE=N'<HTML><P>'+@MENSAJE+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME='AJAX',@RECIPIENTS=N'AREA_BASE_DATOS@SINACOFI.CL',@IMPORTANCE=N'HIGH',@SUBJECT=N'ALERTA DE ESPACIO EN TRANSACTION LOG',@BODY=@HTML_MENSAJE,@BODY_FORMAT=N'HTML'END CLOSE CONSULTA_LOG DEALLOCATE CONSULTA_LOG GO
Monitor	[dbo].[DBA_CREA_INFO_BKP]	Warning	SelectIntoWithOrderBy	Select Into with Order By clause used without order by	database_name, ; ; ; backup_start_date	SELECT DATABASE_NAME,TIPO_BACKUP=CASE TYPE WHEN'D'THEN'DATABASE'WHEN'I'THEN'DATABASE DIFFERENTIAL'WHEN'L'THEN'LOG'WHEN'F'THEN'FILE OR FILEGROUP'END,BACKUP_START_DATE,BACKUP_FINISH_DATE,NAME INTO TEMPORAL FROM MSDB..BACKUPSET WHERE CONVERT(CHAR(8),BACKUP_START_DATE,112)>=@DIA1 AND CONVERT(CHAR(8),BACKUP_START_DATE,112)<=@DIA2 AND TYPE<>'L'ORDER BY DATABASE_NAME,BACKUP_START_DATE
Monitor	[dbo].[DBA_SpaceDisc]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.DBA_SPACEDISC')IS NULL EXEC('CREATE PROCEDURE DBO.DBA_SPACEDISC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBA_SPACEDISC AS SET NOCOUNT ON DECLARE@MYSQL NVARCHAR(1024)DECLARE@DISCO CHAR(1)DECLARE@MB INT DECLARE@ASIG INT DECLARE@PORCENUSADO INT DECLARE@MEN NVARCHAR(1024)DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@MENSAJE VARCHAR(4048)SET@MENSAJE=''SET@HTML_MENSAJE=''SET@MYSQL='EXEC MASTER..XP_FIXEDDRIVES'IF EXISTS(SELECT*FROM SYS.OBJECTS WHERE OBJECT_ID=OBJECT_ID(N'DBO.TMP_DRIVES')AND TYPE IN(N'U'))TRUNCATE TABLE DBO.TMP_DRIVES INSERT INTO TMP_DRIVES(DISCO,SIZEREALMB)EXEC SP_EXECUTESQL@MYSQL DECLARE DISCO CURSOR FOR SELECT DISCO,SIZEREALMB FROM TMP_DRIVES OPEN DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB WHILE@@FETCH_STATUS=0 BEGIN UPDATE TB_DRIVES SET SIZEREALMB=@MB,FECHA=GETDATE()WHERE DISCO=@DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB END CLOSE DISCO DEALLOCATE DISCO DECLARE DISCSPACE CURSOR FOR SELECT DISCO,SIZEINICIAL,SIZEREALMB FROM TB_DRIVES SET@ENVIAR_MENSAJE='N'SET@MENSAJE='<HTML><HEAD><TITLE>DEPARTMENT REPORT</TITLE></HEAD><BODY><P><FONT STYLE="FONT-FAMILY:TAHOMA;FONT-WEIGHT: BOLD;FONT-SIZE: 13PX;COLOR:#023962">ALERTA DE ESPACIO EN DISCO,SERVIDOR<TABLE WIDTH="70%"STYLE="BORDER-COLLAPSE: COLLAPSE;BORDER-TOP: 3PX SOLID#CCE49D"><TR><TD></TD></TR></TABLE></FONT>'+@@SERVERNAME+'</P>'OPEN DISCSPACE FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB SET@MENSAJE=@MENSAJE+'<BR>'+'<TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#023962;FONT-FAMILY:TAHOMA;BACKGROUND-COLOR:#CCE49D;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>%DE ESPACIO OCUPADO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA</STRONG></TD></TR>'WHILE@@FETCH_STATUS=0 BEGIN SELECT@PORCENUSADO=(@ASIG-@MB)*100/@ASIG IF@PORCENUSADO>80 BEGIN SET@MEN='WARNING EN DISCO VALIDANDO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END ELSE IF@PORCENUSADO>85 BEGIN SET@MEN='CRITICAL ERROR EN DISCO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB END IF@ENVIAR_MENSAJE='Y'BEGIN SET@HTML_MENSAJE=N'<HTML><P>'+@MENSAJE+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME='AJAX',@RECIPIENTS='AREA_BASE_DATOS@SINACOFI.CL',@SUBJECT='ALERTA DE ESPACIO EN DISCOS',@BODY=@HTML_MENSAJE,@BODY_FORMAT='HTML',@IMPORTANCE='HIGH',@SENSITIVITY='NORMAL'END CLOSE DISCSPACE DEALLOCATE DISCSPACE GO
Monitor	[dbo].[SP_CPUMONITOR]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	record_id DESC	SELECT TOP 1 DATEADD(MS,-1*(@TS_NOW-TIMESTAMP),GETDATE())AS MONITORTIME,SQLPROCESSUTILIZATION,SYSTEMIDLE,100-SYSTEMIDLE-SQLPROCESSUTILIZATION AS OTHERPROCESSUTILIZATION FROM(SELECT RECORD.VALUE('(./RECORD/@ID)1','INT')AS RECORD_ID,RECORD.VALUE('(./RECORD/SCHEDULERMONITOREVENT/SYSTEMHEALTH/SYSTEMIDLE)1','INT')AS SYSTEMIDLE,RECORD.VALUE('(./RECORD/SCHEDULERMONITOREVENT/SYSTEMHEALTH/PROCESSUTILIZATION)1','INT')AS SQLPROCESSUTILIZATION,TIMESTAMP FROM(SELECT TIMESTAMP,CONVERT(XML,RECORD)AS RECORD FROM SYS.DM_OS_RING_BUFFERS WHERE RING_BUFFER_TYPE=N'RING_BUFFER_SCHEDULER_MONITOR'AND RECORD LIKE'%<SYSTEMHEALTH>%')AS X)AS Y ORDER BY RECORD_ID DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_CPUMONITOR]	Warning	InsertSelectWithOrderBy	Insert Select with Order By clause used without order by	[Buffer Size (MB)] DESC	SELECT GETDATE()FECHA,DATABASE_NAME=CASE DATABASE_ID WHEN 32767 THEN'MSSQL SYSTEM RESOURCE DB'ELSE DB_NAME(DATABASE_ID)END,DB_BUFFER_PAGES AS BUFFER COUNT(8KB PAGES),BUFFER SIZE(MB)=DB_BUFFER_PAGES/128,BUFFER SIZE(%)=CONVERT(DECIMAL(6,3),DB_BUFFER_PAGES*100.0/@TOTAL_BUFFER)FROM BUFCOUNT ORDER BY BUFFER SIZE(MB)DESC
Monitor	[dbo].[SP_CPUMONITOR]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	COUNT(session_id) DESC	SELECT GETDATE()FECHA,COUNT(SESSION_ID)NSESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_HEALTHREPORT]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_HEALTHREPORT AS DECLARE@VCPROFILENAME VARCHAR(50)DECLARE@VCDATABASE VARCHAR(30)DECLARE@VCLOGINNAME VARCHAR(30)DECLARE@VCHOSTNAME VARCHAR(30)DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICANTIDADSESIONES INT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT DECLARE@VCVOL VARCHAR(5)DECLARE@FLFREESPACEMB FLOAT DECLARE@FLTOTALSPACE FLOAT DECLARE@FLAVAILABLESPACE FLOAT DECLARE@FLFILESIZEMB FLOAT DECLARE@FLSPACEUSEDMB FLOAT DECLARE@FLPERCENTAGEAVAILABLE FLOAT DECLARE@FLPORCENTAJEUSADO FLOAT DECLARE@VCVOLUMEN VARCHAR(10)DECLARE@FLUSED FLOAT DECLARE@VCREPORTECPU VARCHAR(2500)DECLARE@VCREPORTEMEMORIA VARCHAR(2500)DECLARE@VCREPORTEDISCO VARCHAR(MAX)DECLARE@VCREPORTESESIONES VARCHAR(MAX)DECLARE@VCHTML_MENSAJE VARCHAR(MAX)DECLARE@FLAVGCPUIDLE FLOAT,@FLAVGCPUIDLE30 FLOAT,@FLAVGCPUIDLE60 FLOAT DECLARE@FLAVGCPUUSED FLOAT,@FLAVGCPUUSED30 FLOAT,@FLAVGCPUUSED60 FLOAT DECLARE@FLAVGOTHERPROCESS FLOAT,@FLAVGOTHERPROCESS30 FLOAT,@FLAVGOTHERPROCESS60 FLOAT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>DECLARE CURSESSION CURSOR FOR SELECT LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLAVGOTHERPROCESS=AVG(IOTHERPROCESS),@FLAVGCPUUSED=AVG(ISQLCPUUSE),@FLAVGCPUIDLE=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-10,GETDATE())SELECT@FLAVGOTHERPROCESS30=AVG(IOTHERPROCESS),@FLAVGCPUUSED30=AVG(ISQLCPUUSE),@FLAVGCPUIDLE30=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-30,GETDATE())SELECT@FLAVGOTHERPROCESS60=AVG(IOTHERPROCESS),@FLAVGCPUUSED60=AVG(ISQLCPUUSE),@FLAVGCPUIDLE60=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-60,GETDATE())SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;CREATE TABLE#TMPDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;DECLARE CURSPACE CURSOR FOR SELECT DBNAME,ROUND(FLFILESIZEMB,2)AS FILESIZEMB,ROUND(FLSPACEUSEDMB,2)AS SPACEUSEDMB,ROUND(FLFREESPACEMB,2)AS FREESPACEMB,ROUND((FLSPACEUSEDMB*100/FLFILESIZEMB),2)AS PORCENTAJEUSADO FROM#TMPDBSIZE ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEDISCO=<str>+<str>SET@VCREPORTESESIONES=<str>+<str>SET@VCREPORTECPU=<str>+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED30)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED60)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS60)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE60)+<str>SET@VCREPORTEMEMORIA=<str>+<str>+CONVERT(VARCHAR(10),@FLTOTALMEMORY)+<str>+CONVERT(VARCHAR(10),@FLSQLSERVERUSED)+<str>+CONVERT(VARCHAR(10),@FLAVAILABLEMEMORY)+<str>OPEN CURSPACE FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEDISCO=@VCREPORTEDISCO+<str>+@VCDATABASE+<str>+CONVERT(VARCHAR(20),@FLFILESIZEMB)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSEDMB)+<str>+CONVERT(VARCHAR(20),@FLFREESPACEMB)+<str>+CONVERT(VARCHAR(20),@FLPORCENTAJEUSADO)+<str>FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO END CLOSE CURSPACE DEALLOCATE CURSPACE OPEN CURSESSION FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTESESIONES=@VCREPORTESESIONES+<str>+@VCLOGINNAME+<str>+@VCHOSTNAME+<str>+CONVERT(VARCHAR(20),@ICANTIDADSESIONES)+<str>FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES END CLOSE CURSESSION DEALLOCATE CURSESSION SET@VCHTML_MENSAJE=N<str>+@VCREPORTECPU+N<str>+@VCREPORTEMEMORIA+N<str>+@VCREPORTESESIONES+N<str>+@VCREPORTEDISCO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCHTML_MENSAJE,@BODY_FORMAT=N<str>GO
Monitor	[dbo].[SP_HEALTHREPORT_20141204]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_HEALTHREPORT_20141204 AS DECLARE@VCPROFILENAME VARCHAR(50)DECLARE@VCDATABASE VARCHAR(30)DECLARE@VCLOGINNAME VARCHAR(30)DECLARE@VCHOSTNAME VARCHAR(30)DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICANTIDADSESIONES INT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT DECLARE@VCVOL VARCHAR(5)DECLARE@FLFREESPACEMB FLOAT DECLARE@FLTOTALSPACE FLOAT DECLARE@FLAVAILABLESPACE FLOAT DECLARE@FLFILESIZEMB FLOAT DECLARE@FLSPACEUSEDMB FLOAT DECLARE@FLPERCENTAGEAVAILABLE FLOAT DECLARE@FLPORCENTAJEUSADO FLOAT DECLARE@VCVOLUMEN VARCHAR(10)DECLARE@FLUSED FLOAT DECLARE@VCREPORTECPU VARCHAR(2500)DECLARE@VCREPORTEMEMORIA VARCHAR(2500)DECLARE@VCREPORTEDISCO VARCHAR(MAX)DECLARE@VCREPORTESESIONES VARCHAR(MAX)DECLARE@VCHTML_MENSAJE VARCHAR(MAX)DECLARE@FLAVGCPUIDLE FLOAT,@FLAVGCPUIDLE30 FLOAT,@FLAVGCPUIDLE60 FLOAT DECLARE@FLAVGCPUUSED FLOAT,@FLAVGCPUUSED30 FLOAT,@FLAVGCPUUSED60 FLOAT DECLARE@FLAVGOTHERPROCESS FLOAT,@FLAVGOTHERPROCESS30 FLOAT,@FLAVGOTHERPROCESS60 FLOAT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>DECLARE CURSESSION CURSOR FOR SELECT LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLAVGOTHERPROCESS=AVG(IOTHERPROCESS),@FLAVGCPUUSED=AVG(ISQLCPUUSE),@FLAVGCPUIDLE=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-10,GETDATE())SELECT@FLAVGOTHERPROCESS30=AVG(IOTHERPROCESS),@FLAVGCPUUSED30=AVG(ISQLCPUUSE),@FLAVGCPUIDLE30=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-30,GETDATE())SELECT@FLAVGOTHERPROCESS60=AVG(IOTHERPROCESS),@FLAVGCPUUSED60=AVG(ISQLCPUUSE),@FLAVGCPUIDLE60=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-60,GETDATE())SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;CREATE TABLE TBL_ESPACIO_REPORTE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB,VCVOLUMEN,FLTOTALSPACE,FLAVAILABLESPACE,FLPERCENTAGEAVAILABLE)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;DECLARE CURSPACE CURSOR FOR SELECT DBNAME,ROUND(FLFILESIZEMB,2)AS FILESIZEMB,ROUND(FLSPACEUSEDMB,2)AS SPACEUSEDMB,ROUND(FLFREESPACEMB,2)AS FREESPACEMB,ROUND((FLSPACEUSEDMB*100/FLFILESIZEMB),2)AS PORCENTAJEUSADO,VCVOLUMEN,ROUND(FLTOTALSPACE,2),ROUND(FLAVAILABLESPACE,2),ROUND(FLPERCENTAGEAVAILABLE,2)FROM#TMPDBSIZE ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEDISCO=<str>+<str>SET@VCREPORTESESIONES=<str>+<str>SET@VCREPORTECPU=<str>+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED30)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED60)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS60)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE60)+<str>SET@VCREPORTEMEMORIA=<str>+<str>+CONVERT(VARCHAR(10),@FLTOTALMEMORY)+<str>+CONVERT(VARCHAR(10),@FLSQLSERVERUSED)+<str>+CONVERT(VARCHAR(10),@FLAVAILABLEMEMORY)+<str>OPEN CURSPACE FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO,@VCVOLUMEN,@FLTOTALSPACE,@FLAVAILABLESPACE,@FLPERCENTAGEAVAILABLE WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEDISCO=@VCREPORTEDISCO+<str>+@VCDATABASE+<str>+CONVERT(VARCHAR(20),@FLFILESIZEMB)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSEDMB)+<str>+CONVERT(VARCHAR(20),@FLFREESPACEMB)+<str>+CONVERT(VARCHAR(20),@FLPORCENTAJEUSADO)+<str>+@VCVOLUMEN+<str>+CONVERT(VARCHAR(20),@FLTOTALSPACE)+<str>+CONVERT(VARCHAR(20),@FLAVAILABLESPACE)+<str>+CONVERT(VARCHAR(20),@FLPERCENTAGEAVAILABLE)+<str>FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO,@VCVOLUMEN,@FLTOTALSPACE,@FLAVAILABLESPACE,@FLPERCENTAGEAVAILABLE END CLOSE CURSPACE DEALLOCATE CURSPACE OPEN CURSESSION FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTESESIONES=@VCREPORTESESIONES+<str>+@VCLOGINNAME+<str>+@VCHOSTNAME+<str>+CONVERT(VARCHAR(20),@ICANTIDADSESIONES)+<str>FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES END CLOSE CURSESSION DEALLOCATE CURSESSION SET@VCHTML_MENSAJE=N<str>+@VCREPORTECPU+N<str>+@VCREPORTEMEMORIA+N<str>+@VCREPORTESESIONES+N<str>+@VCREPORTEDISCO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCHTML_MENSAJE,@BODY_FORMAT=N<str>GO
Monitor	[dbo].[SP_HEALTHREPORT_20150522]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_HEALTHREPORT_20150522 AS DECLARE@VCPROFILENAME VARCHAR(50)DECLARE@VCDATABASE VARCHAR(30)DECLARE@VCLOGINNAME VARCHAR(30)DECLARE@VCHOSTNAME VARCHAR(30)DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICANTIDADSESIONES INT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT DECLARE@VCVOL VARCHAR(5)DECLARE@FLFREESPACEMB FLOAT DECLARE@FLTOTALSPACE FLOAT DECLARE@FLAVAILABLESPACE FLOAT DECLARE@FLFILESIZEMB FLOAT DECLARE@FLSPACEUSEDMB FLOAT DECLARE@FLPERCENTAGEAVAILABLE FLOAT DECLARE@FLPORCENTAJEUSADO FLOAT DECLARE@VCVOLUMEN VARCHAR(10)DECLARE@FLUSED FLOAT DECLARE@VCREPORTECPU VARCHAR(2500)DECLARE@VCREPORTEMEMORIA VARCHAR(2500)DECLARE@VCREPORTEDISCO VARCHAR(MAX)DECLARE@VCREPORTESESIONES VARCHAR(MAX)DECLARE@VCHTML_MENSAJE VARCHAR(MAX)DECLARE@FLAVGCPUIDLE FLOAT,@FLAVGCPUIDLE30 FLOAT,@FLAVGCPUIDLE60 FLOAT DECLARE@FLAVGCPUUSED FLOAT,@FLAVGCPUUSED30 FLOAT,@FLAVGCPUUSED60 FLOAT DECLARE@FLAVGOTHERPROCESS FLOAT,@FLAVGOTHERPROCESS30 FLOAT,@FLAVGOTHERPROCESS60 FLOAT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>DECLARE CURSESSION CURSOR FOR SELECT LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLAVGOTHERPROCESS=AVG(IOTHERPROCESS),@FLAVGCPUUSED=AVG(ISQLCPUUSE),@FLAVGCPUIDLE=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-10,GETDATE())SELECT@FLAVGOTHERPROCESS30=AVG(IOTHERPROCESS),@FLAVGCPUUSED30=AVG(ISQLCPUUSE),@FLAVGCPUIDLE30=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-30,GETDATE())SELECT@FLAVGOTHERPROCESS60=AVG(IOTHERPROCESS),@FLAVGCPUUSED60=AVG(ISQLCPUUSE),@FLAVGCPUIDLE60=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-60,GETDATE())SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;CREATE TABLE#TMPDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10));INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str>DECLARE CURSPACE CURSOR FOR SELECT DBNAME,ROUND(FLFILESIZEMB,2)AS FILESIZEMB,ROUND(FLSPACEUSEDMB,2)AS SPACEUSEDMB,ROUND(FLFREESPACEMB,2)AS FREESPACEMB,ROUND((FLSPACEUSEDMB*100/FLFILESIZEMB),2)AS PORCENTAJEUSADO FROM#TMPDBSIZE ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEDISCO=<str>+<str>SET@VCREPORTESESIONES=<str>+<str>SET@VCREPORTECPU=<str>+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED30)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED60)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS60)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE60)+<str>SET@VCREPORTEMEMORIA=<str>+<str>+CONVERT(VARCHAR(10),@FLTOTALMEMORY)+<str>+CONVERT(VARCHAR(10),@FLSQLSERVERUSED)+<str>+CONVERT(VARCHAR(10),@FLAVAILABLEMEMORY)+<str>OPEN CURSPACE FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEDISCO=@VCREPORTEDISCO+<str>+@VCDATABASE+<str>+CONVERT(VARCHAR(20),@FLFILESIZEMB)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSEDMB)+<str>+CONVERT(VARCHAR(20),@FLFREESPACEMB)+<str>+CONVERT(VARCHAR(20),@FLPORCENTAJEUSADO)+<str>FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO END CLOSE CURSPACE DEALLOCATE CURSPACE OPEN CURSESSION FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTESESIONES=@VCREPORTESESIONES+<str>+@VCLOGINNAME+<str>+@VCHOSTNAME+<str>+CONVERT(VARCHAR(20),@ICANTIDADSESIONES)+<str>FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES END CLOSE CURSESSION DEALLOCATE CURSESSION SET@VCHTML_MENSAJE=N<str>+@VCREPORTECPU+N<str>+@VCREPORTEMEMORIA+N<str>+@VCREPORTESESIONES+N<str>+@VCREPORTEDISCO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCHTML_MENSAJE,@BODY_FORMAT=N<str>GO
Monitor	[dbo].[SP_HEALTHREPORT_DATOS]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_HEALTHREPORT_DATOS AS DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT INSERT INTO TBLRD_SESIONES(FECHA,LOGIN_NAME,HOST_NAME,CANTIDAD_SESIONES)SELECT GETDATE()FECHA,LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)CANTIDAD_SESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;INSERT INTO TBLRD_MEMORIA(FECHA,TOTAL,EN_USO,DISPONIBLE)VALUES(GETDATE(),@FLTOTALMEMORY,@FLSQLSERVERUSED,@FLAVAILABLEMEMORY)INSERT INTO TBLRD_TAMANNOBD(FECHA,DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str>GO
Monitor	[dbo].[SP_HEALTHREPORT_DATOS]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	COUNT(session_id) DESC	SELECT GETDATE()FECHA,LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)CANTIDAD_SESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_MonitorErrorLog]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_MONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
Monitor	[dbo].[SP_MonitorErrorLog]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_MONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
Monitor	[dbo].[SP_Nagios_ObtieneCPU]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,TIPO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_NAGIOS_OBTIENECPU AS DECLARE@DTFECHAINI DATETIME DECLARE@DTFECHAFIN DATETIME DECLARE@SICPUCOUNT SMALLINT DECLARE@READ FLOAT DECLARE@WRITE FLOAT DECLARE@VCSERVERNAME VARCHAR(20)SELECT@DTFECHAINI=DATEADD(MI,-1,GETDATE())SELECT@DTFECHAFIN=DATEADD(MI,-0,GETDATE())SELECT@VCSERVERNAME=@@SERVERNAME SELECT CASE PC.PERFORMANCE_OBJECT_NAME WHEN<str>THEN<str>ELSE<str>END AS TIPO,CASE PC.PERFORMANCE_OBJECT_NAME WHEN<str>THEN ROUND(PC.FORMATTED_VALUE,2)ELSE ROUND(PC.FORMATTED_VALUE/@SICPUCOUNT,2)END AS PERCPU FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND PC.COLLECTION_TIME BETWEEN@DTFECHAINI AND@DTFECHAFIN AND((PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)OR(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>))ORDER BY PC.COLLECTION_TIME,TIPO GO
Monitor	[dbo].[SP_Nagios_ObtieneIO]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_TIME_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_NAGIOS_OBTIENEIO AS DECLARE@DTFECHAINI DATETIME DECLARE@DTFECHAFIN DATETIME DECLARE@READ FLOAT DECLARE@WRITE FLOAT DECLARE@VCSERVERNAME VARCHAR(20)SELECT@DTFECHAINI=DATEADD(MI,-1,GETDATE())SELECT@DTFECHAFIN=DATEADD(MI,-0,GETDATE())SELECT@VCSERVERNAME=@@SERVERNAME SELECT@READ=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT@WRITE=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT CONVERT(VARCHAR(20),@WRITE)SELECT CONVERT(VARCHAR(20),@READ)OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)GO
Monitor	[dbo].[SP_Nagios_ObtieneIO]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_TIME_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_NAGIOS_OBTIENEIO AS DECLARE@DTFECHAINI DATETIME DECLARE@DTFECHAFIN DATETIME DECLARE@READ FLOAT DECLARE@WRITE FLOAT DECLARE@VCSERVERNAME VARCHAR(20)SELECT@DTFECHAINI=DATEADD(MI,-1,GETDATE())SELECT@DTFECHAFIN=DATEADD(MI,-0,GETDATE())SELECT@VCSERVERNAME=@@SERVERNAME SELECT@READ=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT@WRITE=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT CONVERT(VARCHAR(20),@WRITE)SELECT CONVERT(VARCHAR(20),@READ)OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)GO
Monitor	[dbo].[sp_ObtieneLoginFailed]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LO.DTFECHA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_OBTIENELOGINFAILED AS BEGIN TRAN SELECT ISNULL(MAX(LO.DTFECHA),<str>)DTFECHA,ULT.VCINSTANCIA INTO#TMPMAXFECINSTANCIAS FROM TBLLOGINFAILED LO RIGHT JOIN TBLLOGINFAILEDULTREGISTRO ULT ON LO.VCINSTANCIA=ULT.VCINSTANCIA GROUP BY ULT.VCINSTANCIA SELECT LO.*FROM TBLLOGINFAILED LO,TBLLOGINFAILEDULTREGISTRO ULT,#TMPMAXFECINSTANCIAS MAXI WHERE LO.DTFECHA>ULT.DTFECHA AND LO.VCINSTANCIA=ULT.VCINSTANCIA AND LO.DTFECHA<=MAXI.DTFECHA AND LO.VCINSTANCIA=MAXI.VCINSTANCIA ORDER BY LO.DTFECHA DELETE TBLLOGINFAILEDULTREGISTRO INSERT INTO TBLLOGINFAILEDULTREGISTRO SELECT*FROM#TMPMAXFECINSTANCIAS COMMIT GO
Monitor	[dbo].[sp_ObtieneLoginFailedFTP]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY LO.DTFECHA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_OBTIENELOGINFAILEDFTP AS PRINT<str>SET NOCOUNT ON SELECT ISNULL(MAX(LO.DTFECHA),<str>)DTFECHA,ULT.VCINSTANCIA INTO#TMPMAXFECINSTANCIAS FROM TBLLOGINFAILED LO RIGHT JOIN TBLLOGINFAILEDULTFTP ULT ON LO.VCINSTANCIA=ULT.VCINSTANCIA GROUP BY ULT.VCINSTANCIA SELECT LO.*FROM TBLLOGINFAILED LO,TBLLOGINFAILEDULTFTP ULT,#TMPMAXFECINSTANCIAS MAXI WHERE LO.DTFECHA>ULT.DTFECHA AND LO.VCINSTANCIA=ULT.VCINSTANCIA AND LO.DTFECHA<=MAXI.DTFECHA AND LO.VCINSTANCIA=MAXI.VCINSTANCIA ORDER BY LO.DTFECHA UPDATE TBLLOGINFAILEDULTFTP SET DTFECHA=TMP.DTFECHA FROM#TMPMAXFECINSTANCIAS TMP,TBLLOGINFAILEDULTFTP ULT WHERE TMP.VCINSTANCIA=ULT.VCINSTANCIA GO
Snman2000	[dbo].[USUARIOS_bkp]	Information	TableBackup	Backup Table	[dbo].[USUARIOS_bkp]	[dbo].[USUARIOS_bkp] (21 Rows, 0,1 MB)
