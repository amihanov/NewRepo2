SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ik_wf_setWFNodesProyTMPDates]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ik_wf_setWFNodesProyTMPDates] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[ik_wf_setWFNodesProyTMPDates]
(
@WF_ID int,
@FROMDATE datetime		
)
AS

SET NOCOUNT ON 
SET DATEFORMAT YMD


IF (SELECT dbo.ik_getWorkingDays(@FROMDATE,@FROMDATE+1))=0
BEGIN
	SET @FROMDATE=GETDATE()+1
END
IF (SELECT dbo.ik_getWorkingDays(@FROMDATE,@FROMDATE+1))=0
BEGIN
	SET @FROMDATE=GETDATE()+1
END



DECLARE @HOY datetime
SET @HOY=GETDATE()

IF (SELECT dbo.ik_getWorkingDays(@HOY,@HOY+1))=0
BEGIN
	SET @HOY=GETDATE()+1
END

IF (SELECT dbo.ik_getWorkingDays(@HOY,@HOY+1))=0
BEGIN
	SET @HOY=GETDATE()+1
END


DECLARE @RESULT_DATES TABLE(
	WF_XMLNODE_ID nvarchar(100), 
	WF_SCHEDDATES_STARTDATE_CALC datetime, 
	WF_SCHEDDATES_ENDDATE_CALC datetime
)	

DECLARE	@WF_SCHEDDATES_STARTDATE_REAL datetime
DECLARE	@WF_SCHEDDATES_DATE_REAL datetime
DECLARE	@WF_SCHEDDATES_NODEPARALLEL nvarchar(100)
DECLARE @WF_SCHEDDATES_DAYSFROMSTART int
DECLARE @WF_NODE_STATE int
DECLARE @WF_XMLNODE_ID varchar(100)

DECLARE @LASTPARALLEL nvarchar(100)
SET @LASTPARALLEL=''

DECLARE @LAST_PARALLEL_ENDDATE datetime
SET @LAST_PARALLEL_ENDDATE=NULL


DECLARE @LAST_NODE_ENDDATE datetime
SET @LAST_NODE_ENDDATE=@FROMDATE

DECLARE @LAST_NODE_STARTDATE datetime
SET @LAST_NODE_STARTDATE=@FROMDATE

DECLARE @MAX_PARALLEL_ENDDATE datetime
SET @MAX_PARALLEL_ENDDATE=NULL

DECLARE curNodeDates CURSOR FOR
SELECT 
	D.WF_SCHEDDATES_STARTDATE_REAL,
	D.WF_SCHEDDATES_DATE_REAL,
	D.WF_SCHEDDATES_NODEPARALLEL,
	D.WF_SCHEDDATES_DAYSFROMSTART,
	N.WF_NODE_STATE,
	D.WF_XMLNODE_ID

FROM WF_SCHEDDATES D 
LEFT JOIN WF_NODE N ON N.WF_ID=D.WF_ID AND D.WF_XMLNODE_ID=N.WF_NODE_XMLNODE_ID
WHERE D.WF_ID=@WF_ID AND D.WF_SCHEDDATES_ENABLED=1
ORDER BY D.WF_SCHEDDATES_ID

BEGIN TRAN

OPEN curNodeDates
FETCH NEXT FROM curNodeDates INTO 
	@WF_SCHEDDATES_STARTDATE_REAL,
	@WF_SCHEDDATES_DATE_REAL,
	@WF_SCHEDDATES_NODEPARALLEL,
	@WF_SCHEDDATES_DAYSFROMSTART,
	@WF_NODE_STATE,
	@WF_XMLNODE_ID
	
WHILE @@FETCH_STATUS = 0
BEGIN

	IF @WF_SCHEDDATES_NODEPARALLEL = ''--Single node
	BEGIN
	
		IF @LASTPARALLEL<>''
		BEGIN
			SET @LAST_NODE_ENDDATE=@MAX_PARALLEL_ENDDATE
			SET @LASTPARALLEL=''
		END
		
		
		IF @WF_NODE_STATE IS NULL OR @WF_NODE_STATE <=2 OR @WF_NODE_STATE =6 --Nodo no creado o sin iniciar
		BEGIN
			SET @LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE

			IF DATEDIFF(day,@HOY,@LAST_NODE_STARTDATE)<0
			BEGIN
				SET @LAST_NODE_STARTDATE=@HOY
			END
			
			SET @LAST_NODE_ENDDATE = (SELECT dbo.ik_AddWorkingDays(@LAST_NODE_STARTDATE,@WF_SCHEDDATES_DAYSFROMSTART))
		END

		IF @WF_NODE_STATE >2 AND @WF_NODE_STATE <=4 --Nodo creado iniciado, sin finalizar
		BEGIN
			SET @LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL
			SET @LAST_NODE_ENDDATE = (SELECT dbo.ik_AddWorkingDays(@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DAYSFROMSTART))
			
			IF DATEDIFF(day,@HOY,@LAST_NODE_ENDDATE)<0
			BEGIN
				SET @LAST_NODE_ENDDATE = @HOY
			END
		END
		IF @WF_NODE_STATE =5 --Nodo creado finalizado
		BEGIN
			SET @LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL
			SET @LAST_NODE_ENDDATE = @WF_SCHEDDATES_DATE_REAL
		END
		
		UPDATE WF_SCHEDDATES SET 
			WF_SCHEDDATES_STARTDATE_PROYECTED_TMP= CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, @LAST_NODE_STARTDATE))) ,
			WF_SCHEDDATES_DATE_PROYECTED_TMP= CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, @LAST_NODE_ENDDATE))) 			
		WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID

		
		PRINT 'SINGLE NODE: '	+ @WF_XMLNODE_ID + ' : ENDDATE: ' + CONVERT(varchar(100),@LAST_NODE_ENDDATE)
		
	END
	ELSE
	BEGIN
		IF @WF_SCHEDDATES_NODEPARALLEL = @LASTPARALLEL--Mismo parallel q anterior
		BEGIN
			IF @WF_NODE_STATE IS NULL OR @WF_NODE_STATE <=2 OR @WF_NODE_STATE =6 --Nodo no creado o sin iniciar
			BEGIN
				SET @LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE
				IF DATEDIFF(day,@HOY,@LAST_NODE_STARTDATE)<0
				BEGIN
					SET @LAST_NODE_STARTDATE=@HOY
				END

				SET @LAST_PARALLEL_ENDDATE = (SELECT dbo.ik_AddWorkingDays(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))
			END
			IF @WF_NODE_STATE >2 AND @WF_NODE_STATE <=4 --Nodo creado iniciado, sin finalizar
			BEGIN
				SET @LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL
				SET @LAST_PARALLEL_ENDDATE =  (SELECT dbo.ik_AddWorkingDays(@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DAYSFROMSTART))
				
				IF DATEDIFF(day,@HOY,@LAST_PARALLEL_ENDDATE)<0
				BEGIN
					SET @LAST_PARALLEL_ENDDATE = @HOY
				END
			END
			IF @WF_NODE_STATE =5 --Nodo creado finalizado
			BEGIN
				SET @LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL
				SET @LAST_PARALLEL_ENDDATE = @WF_SCHEDDATES_DATE_REAL
			END
			
			
			UPDATE WF_SCHEDDATES SET 
				WF_SCHEDDATES_STARTDATE_PROYECTED_TMP= CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, @LAST_NODE_STARTDATE))),
				WF_SCHEDDATES_DATE_PROYECTED_TMP=CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, @LAST_PARALLEL_ENDDATE )))
			WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID

			PRINT 'SAME PARALLEL NODE: '	+ @WF_XMLNODE_ID + ' : ENDDATE: ' + CONVERT(varchar(100),@LAST_PARALLEL_ENDDATE)
			SET @LASTPARALLEL=@WF_SCHEDDATES_NODEPARALLEL 
			
			IF @LAST_PARALLEL_ENDDATE>@MAX_PARALLEL_ENDDATE
			BEGIN
				SET @MAX_PARALLEL_ENDDATE=@LAST_PARALLEL_ENDDATE				
			END
		END
		ELSE --Nuevo parallel
		BEGIN
			IF 	@LASTPARALLEL<>''
			BEGIN
				SET @LAST_NODE_ENDDATE=@MAX_PARALLEL_ENDDATE
			END
			
			IF @WF_NODE_STATE IS NULL OR @WF_NODE_STATE <=2 OR @WF_NODE_STATE =6 --Nodo no creado o sin iniciar
			BEGIN
				SET @LAST_NODE_STARTDATE=@LAST_NODE_ENDDATE
				IF DATEDIFF(day,@HOY,@LAST_NODE_STARTDATE)<0
				BEGIN
					SET @LAST_NODE_STARTDATE=@HOY
				END

				SET @LAST_PARALLEL_ENDDATE = (SELECT dbo.ik_AddWorkingDays(@LAST_NODE_ENDDATE,@WF_SCHEDDATES_DAYSFROMSTART))
			END
			IF @WF_NODE_STATE >2 AND @WF_NODE_STATE <=4 --Nodo creado iniciado, sin finalizar
			BEGIN
				SET @LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL
				SET @LAST_PARALLEL_ENDDATE = (SELECT dbo.ik_AddWorkingDays(@WF_SCHEDDATES_STARTDATE_REAL,@WF_SCHEDDATES_DAYSFROMSTART))
				IF DATEDIFF(day,@HOY,@LAST_PARALLEL_ENDDATE)<0
				BEGIN
					SET @LAST_PARALLEL_ENDDATE = @HOY
				END

			END
			IF @WF_NODE_STATE =5 --Nodo creado finalizado
			BEGIN
				SET @LAST_NODE_STARTDATE=@WF_SCHEDDATES_STARTDATE_REAL
				SET @LAST_PARALLEL_ENDDATE = @WF_SCHEDDATES_DATE_REAL
			END

			UPDATE WF_SCHEDDATES SET 
				WF_SCHEDDATES_STARTDATE_PROYECTED_TMP= CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, @LAST_NODE_STARTDATE))),
				WF_SCHEDDATES_DATE_PROYECTED_TMP=CONVERT(DATETIME, FLOOR(CONVERT(FLOAT, @LAST_PARALLEL_ENDDATE )))
			WHERE WF_ID=@WF_ID AND WF_XMLNODE_ID=@WF_XMLNODE_ID

			
			SET @MAX_PARALLEL_ENDDATE=@LAST_PARALLEL_ENDDATE

			PRINT 'FIRST PARALLEL NODE: '	+ @WF_XMLNODE_ID + ' : ENDDATE: ' + CONVERT(varchar(100),@LAST_PARALLEL_ENDDATE)				
			
			SET @LASTPARALLEL=@WF_SCHEDDATES_NODEPARALLEL 
		END
	END
	


	FETCH NEXT FROM curNodeDates INTO 
		@WF_SCHEDDATES_STARTDATE_REAL,
		@WF_SCHEDDATES_DATE_REAL,
		@WF_SCHEDDATES_NODEPARALLEL,
		@WF_SCHEDDATES_DAYSFROMSTART,
		@WF_NODE_STATE,
		@WF_XMLNODE_ID

END


CLOSE curNodeDates
DEALLOCATE curNodeDates


COMMIT TRAN	 
RETURN
GO
