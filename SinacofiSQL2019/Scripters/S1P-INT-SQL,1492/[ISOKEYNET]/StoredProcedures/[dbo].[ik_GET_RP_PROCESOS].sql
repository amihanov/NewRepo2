SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ik_GET_RP_PROCESOS]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ik_GET_RP_PROCESOS] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- ik_GET_RP_PROCESOS 1
ALTER PROCEDURE [dbo].[ik_GET_RP_PROCESOS]
(@Nodopadre int)
AS
	CREATE TABLE #TablaT (
    CODIGO int,	
	NOMBRE nvarchar(400),
	DESCRIPCION nvarchar(4000)
	)

	DECLARE @CODIGON int
	DECLARE @PADRE INT
	DECLARE @DESCRIPCION NVARCHAR(4000)
	DECLARE @DESC NVARCHAR(400)
	DECLARE @NOMBRE NVARCHAR(400)

	DECLARE CurNodos CURSOR LOCAL FAST_FORWARD for 
	SELECT	PROC_NODESID AS CODIGO
	FROM	PROC_NODES 
	WHERE	PROC_NODESID_PARENT = @Nodopadre

--SELECT	PROC_PLANSID, PROC_NODESID, PROC_NODE_TYPESID, DESCRIPTION, PROC_NODESID_PARENT
--FROM	PROC_NODES	

    open CurNodos
	fetch next from CurNodos into @CODIGON

	DECLARE @STR_NOMBRE_PLAN NVARCHAR(100)
	DECLARE @CODIGO_FIRST_NODE INT
	SELECT 	@CODIGO_FIRST_NODE = T1.PROC_NODESID, @STR_NOMBRE_PLAN = T2.DESCRIPTION
	FROM	PROC_NODES T1 
				INNER JOIN PROC_PLANS T2
					ON T1.PROC_PLANSID = T2.PROC_PLANSID
	WHERE	T1.PROC_NODESID_PARENT IS NULL

	while @@FETCH_STATUS = 0
	begin
	
		SELECT	@PADRE = PROC_NODESID_PARENT, @DESCRIPCION = DESCRIPTION, @NOMBRE = DESCRIPTION 
		FROM	PROC_NODES 
		WHERE	PROC_NODESID = @CODIGON

        WHILE (@PADRE <> @CODIGO_FIRST_NODE)
		BEGIN
			SELECT	@DESC = DESCRIPTION FROM PROC_NODES WHERE PROC_NODESID = @PADRE
			SET @DESCRIPCION = dbo.CONCAT3(@DESC, '\', @DESCRIPCION)
			SELECT @PADRE = PROC_NODESID_PARENT  FROM PROC_NODES WHERE PROC_NODESID = @PADRE
		END 
		SET @DESCRIPCION = dbo.CONCAT3(@STR_NOMBRE_PLAN, '\', @DESCRIPCION)
		INSERT INTO #TablaT(CODIGO, DESCRIPCION, NOMBRE) 
		VALUES (@CODIGON, @DESCRIPCION, @NOMBRE)
		fetch next from CurNodos into @CODIGON
	end

	close CurNodos
	deallocate CurNodos

declare @sqlst varchar(8000)
set @sqlst = ' SELECT * FROM #TablaT '

EXEC(@sqlst)
GO
