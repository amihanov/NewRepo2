SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ik_getWorkingDays]') IS NULL EXEC('CREATE FUNCTION [dbo].[ik_getWorkingDays] () RETURNS int AS BEGIN /*TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED*/ RETURN 0 END')
GO
ALTER FUNCTION [dbo].[ik_getWorkingDays]
(
	@STARTDATE datetime,
	@ENDDATE datetime
	)
RETURNS int
AS
BEGIN


DECLARE @Saturday int, @Sunday int
DECLARE @satDate datetime
DECLARE @sunDate datetime

SET @satDate = '2006-08-26'
SET @sunDate = '2006-08-27'

SET @Saturday = (select datepart(weekday,@satDate))
SET @Sunday = (select datepart(weekday,@sunDate))

/*
IF @@DATEFIRST = 1
BEGIN
	SET @Saturday = 6
	SET @Sunday = 7
END
ELSE
BEGIN
	SET @Saturday = 7
	SET @Sunday = 1
END
*/

DECLARE @DAYS int
SET @DAYS=DATEDIFF(day, @STARTDATE, @ENDDATE)

IF @DAYS<0 RETURN 0


DECLARE @DOW int
DECLARE @NOTWORKING tinyint
DECLARE @CODIGO int

WHILE DATEDIFF(day, @ENDDATE, @STARTDATE)<> 0
BEGIN
	SET @NOTWORKING = 0
	SET @DOW = DATEPART(WEEKDAY,@STARTDATE)
	IF (@DOW = @Saturday OR @DOW = @Sunday) SET @NOTWORKING = 1
	ELSE
		BEGIN
		SET @CODIGO = (SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE
					   DATEPART(day,FECHA) = DATEPART(day,@STARTDATE) AND
					   DATEPART(month,FECHA) = DATEPART(month,@STARTDATE) AND
					   DATEPART(year,FECHA) = DATEPART(year,@STARTDATE))
		IF NOT @CODIGO IS NULL SET @NOTWORKING = 1
		END
	SET @STARTDATE = @STARTDATE + 1
	SET @DAYS = @DAYS - @NOTWORKING
END

/*SET @WORKING = 0
WHILE @WORKING = 0
BEGIN
	SET @WORKING = 1
	SET @DOW = DATEPART(WEEKDAY,@STARTDATE)
	IF (@DOW = @Saturday OR @DOW = @Sunday) SET @WORKING = 0
	ELSE
		BEGIN
		SET @CODIGO = (SELECT CODIGO FROM NCTASKS_NOT_WORKING_DAYS WHERE
					   DATEPART(day,FECHA) = DATEPART(day,@STARTDATE) AND
					   DATEPART(month,FECHA) = DATEPART(month,@STARTDATE) AND
					   DATEPART(year,FECHA) = DATEPART(year,@STARTDATE))
		IF NOT @CODIGO IS NULL SET @WORKING = 0
		END
	IF @WORKING=0 SET @STARTDATE = @STARTDATE + 1
END
*/

RETURN @DAYS

END
GO
