Database	Object Name	Type	Rule Name	Description	Highlight	Code
AdmDBA	[dbo].[spBackupDatabases]	Warning	BackupRestore	Using Backup	Backup	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPBACKUPDATABASES AS DECLARE@DTFECHA DATETIME DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCDATABASENAME VARCHAR(30)DECLARE@VCFILENAME VARCHAR(500)DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCREPORTEBACKUP VARCHAR(MAX)DECLARE@MAILSUBJECT VARCHAR(MAX)DECLARE@DTSTARTIME DATETIME DECLARE@DTENDTIME DATETIME DECLARE@ISEG INT DECLARE@ISIRESPALDO INT SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@DTFECHA=CONVERT(VARCHAR(26),GETDATE(),109)SET@VCASUNTO=<str>+@@SERVERNAME+<str>DECLARE CURDATABASES CURSOR FOR SELECT NAME FROM MASTER..SYSDATABASES WHERE STATUS&512=0 AND NAME NOT IN(<str>)ORDER BY NAME ASC;SET@VCREPORTEBACKUP=<str>OPEN CURDATABASES FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME WHILE@@FETCH_STATUS=0 BEGIN SET@ISIRESPALDO=(SELECT MASTER.SYS.FN_HADR_BACKUP_IS_PREFERRED_REPLICA(@VCDATABASENAME))IF(@ISIRESPALDO=1)BEGIN SET@DTSTARTIME=GETDATE()SET@VCFILENAME=<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR(23),GETDATE(),112)+<str>BACKUP DATABASE@VCDATABASENAME TO DISK=@VCFILENAME WITH COMPRESSION,CHECKSUM,CONTINUE_AFTER_ERROR;RESTORE VERIFYONLY FROM DISK=@VCFILENAME SET@DTENDTIME=GETDATE()SET@ISEG=DATEDIFF(SS,@DTSTARTIME,@DTENDTIME)SET@VCREPORTEBACKUP=@VCREPORTEBACKUP+<str>+CONVERT(VARCHAR,@DTFECHA)+<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR,@ISEG)+<str>+@VCFILENAME+<str>END FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME END CLOSE CURDATABASES DEALLOCATE CURDATABASES SET@VCREPORTEBACKUP=N<str>+@VCREPORTEBACKUP+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEBACKUP,@BODY_FORMAT=N<str>GO
AdmDBA	[dbo].[spBackupDatabases]	Warning	BackupRestore	Using Restore	Restore	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPBACKUPDATABASES AS DECLARE@DTFECHA DATETIME DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCDATABASENAME VARCHAR(30)DECLARE@VCFILENAME VARCHAR(500)DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCREPORTEBACKUP VARCHAR(MAX)DECLARE@MAILSUBJECT VARCHAR(MAX)DECLARE@DTSTARTIME DATETIME DECLARE@DTENDTIME DATETIME DECLARE@ISEG INT DECLARE@ISIRESPALDO INT SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@DTFECHA=CONVERT(VARCHAR(26),GETDATE(),109)SET@VCASUNTO=<str>+@@SERVERNAME+<str>DECLARE CURDATABASES CURSOR FOR SELECT NAME FROM MASTER..SYSDATABASES WHERE STATUS&512=0 AND NAME NOT IN(<str>)ORDER BY NAME ASC;SET@VCREPORTEBACKUP=<str>OPEN CURDATABASES FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME WHILE@@FETCH_STATUS=0 BEGIN SET@ISIRESPALDO=(SELECT MASTER.SYS.FN_HADR_BACKUP_IS_PREFERRED_REPLICA(@VCDATABASENAME))IF(@ISIRESPALDO=1)BEGIN SET@DTSTARTIME=GETDATE()SET@VCFILENAME=<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR(23),GETDATE(),112)+<str>BACKUP DATABASE@VCDATABASENAME TO DISK=@VCFILENAME WITH COMPRESSION,CHECKSUM,CONTINUE_AFTER_ERROR;RESTORE VERIFYONLY FROM DISK=@VCFILENAME SET@DTENDTIME=GETDATE()SET@ISEG=DATEDIFF(SS,@DTSTARTIME,@DTENDTIME)SET@VCREPORTEBACKUP=@VCREPORTEBACKUP+<str>+CONVERT(VARCHAR,@DTFECHA)+<str>+@VCDATABASENAME+<str>+CONVERT(VARCHAR,@ISEG)+<str>+@VCFILENAME+<str>END FETCH NEXT FROM CURDATABASES INTO@VCDATABASENAME END CLOSE CURDATABASES DEALLOCATE CURDATABASES SET@VCREPORTEBACKUP=N<str>+@VCREPORTEBACKUP+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEBACKUP,@BODY_FORMAT=N<str>GO
AdmDBA	[dbo].[spBackupDatabases]	Warning	AbsolutePath	Hardcoded absolute path	:\	
AdmDBA	[dbo].[spMonitorErrorLog]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorErrorLog]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorEspacioBD]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORESPACIOBD AS DECLARE@VCREPORTEESPACIO VARCHAR(MAX)DECLARE@VCPROFILENAME VARCHAR(255)DECLARE@VCDBNAME VARCHAR(255)DECLARE@FLFILESIZE FLOAT DECLARE@FLSPACEUSED FLOAT DECLARE@FLPERUSED FLOAT DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICOUNT INT=0 DECLARE@IUMBRAL INT=60 SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@VCASUNTO=<str>+@@SERVERNAME+<str>+CONVERT(VARCHAR(20),@IUMBRAL)+<str>CREATE TABLE#TBLDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TBLDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB,VCVOLUMEN,FLTOTALSPACE,FLAVAILABLESPACE,FLPERCENTAGEAVAILABLE)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;SET@VCREPORTEESPACIO=<str>DECLARE CURDBSPACE CURSOR FOR SELECT DBNAME,FLFILESIZEMB,FLSPACEUSEDMB,(FLSPACEUSEDMB*100)/FLFILESIZEMB PERC FROM#TBLDBSIZE WHERE(FLSPACEUSEDMB*100)/FLFILESIZEMB>0 OPEN CURDBSPACE FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLSPACEUSED,@FLPERUSED WHILE@@FETCH_STATUS=0 BEGIN IF@FLPERUSED>80 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+<str>+@VCDBNAME+<str>+CONVERT(VARCHAR(20),@FLFILESIZE)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSED)+<str>+CONVERT(VARCHAR(20),@FLPERUSED)+<str>+CONVERT(VARCHAR(50),GETDATE(),113)+<str>SET@ICOUNT=@ICOUNT+1;END FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLSPACEUSED,@FLPERUSED END CLOSE CURDBSPACE DEALLOCATE CURDBSPACE SET@VCREPORTEESPACIO=N<str>+@VCREPORTEESPACIO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>IF@ICOUNT>0 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+N<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEESPACIO,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorEspacioBDLog]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SPMONITORESPACIOBDLOG')IS NULL EXEC('CREATE PROCEDURE DBO.SPMONITORESPACIOBDLOG AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SPMONITORESPACIOBDLOG AS DECLARE@VCREPORTEESPACIO VARCHAR(MAX)DECLARE@VCPROFILENAME VARCHAR(255)DECLARE@VCDBNAME VARCHAR(255)DECLARE@FLFILESIZE FLOAT DECLARE@FLSPACEUSED FLOAT DECLARE@FLPERUSED FLOAT DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICOUNT INT=0 DECLARE@IUMBRAL INT=50 DECLARE@NVCDBCC NVARCHAR(1024)SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@VCASUNTO=''+@@SERVERNAME+'UMBRAL DE ESPACIO SUPERADO'+CONVERT(VARCHAR(20),@IUMBRAL)+'%'SET@NVCDBCC='DBCC SQLPERF(LOGSPACE)'CREATE TABLE#TBLDBLOGSIZE(DBNAME SYSNAME,FLFILESIZEMB FLOAT DEFAULT(0),FLPERSPACEUSED FLOAT DEFAULT(0),ISTATUS INT);INSERT INTO#TBLDBLOGSIZE EXEC MASTER..SP_EXECUTESQL@NVCDBCC SET@VCREPORTEESPACIO='<DIV STYLE="FONT-FAMILY:VERDANA;FONT-SIZE:18PX"><P>UMBRAL DE ESPACIO SUPERADO PARA LOG BD</P><TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#FFFFFF;FONT-FAMILY:VERDANA;BACKGROUND-COLOR: BLACK;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>TAMAÑO LOG BASE MB</STRONG></TD><TD WIDTH="15%"><STRONG>%DE USO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA/HORA</STRONG></TD></TR>'DECLARE CURDBSPACE CURSOR FOR SELECT DBNAME,FLFILESIZEMB,FLPERSPACEUSED FROM#TBLDBLOGSIZE WHERE FLPERSPACEUSED>@IUMBRAL OPEN CURDBSPACE FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLPERUSED WHILE@@FETCH_STATUS=0 BEGIN IF@FLPERUSED>60 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+'<TR STYLE="FONT-SIZE: 10PX;COLOR:#023962;FONT-FAMILY:TAHOMA;TEXT-ALIGN: CENTER"><TD>'+@VCDBNAME+'</TD><TD>'+CONVERT(VARCHAR(20),@FLFILESIZE)+'</TD><TD>'+CONVERT(VARCHAR(20),@FLPERUSED)+'</TD><TD>'+CONVERT(VARCHAR(50),GETDATE(),113)+'</TD></TR>'SET@ICOUNT=@ICOUNT+1;END FETCH NEXT FROM CURDBSPACE INTO@VCDBNAME,@FLFILESIZE,@FLFILESIZE END CLOSE CURDBSPACE DEALLOCATE CURDBSPACE SET@VCREPORTEESPACIO=N'<HTML><P>'+@VCREPORTEESPACIO+N'</P></TABLE></HTML><HR>'+'<P>'+'<DIV STYLE="FONT-FAMILY:VERDANA;FONT-SIZE:10PX">'+'<FONT COLOR="GREEN">ESTE MENSAJE HA SIDO GENERADO AUTOMATICAMENTE DESDE'+@@SERVERNAME+''+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+'.'+'</P>'IF@ICOUNT>0 BEGIN SET@VCREPORTEESPACIO=@VCREPORTEESPACIO+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS='BASEDATOS.CHILE@EXPERIAN.COM',@IMPORTANCE=N'HIGH',@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEESPACIO,@BODY_FORMAT=N'HTML'END GO
AdmDBA	[dbo].[spMonitorLoginFail]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORLOGINFAIL AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-5,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>4 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@COPY_RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spMonitorLoginFail]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPMONITORLOGINFAIL AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-5,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>4 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@COPY_RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
AdmDBA	[dbo].[spSpaceDisc]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SPSPACEDISC')IS NULL EXEC('CREATE PROCEDURE DBO.SPSPACEDISC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SPSPACEDISC AS SET NOCOUNT ON DECLARE@MYSQL NVARCHAR(1024)DECLARE@DISCO CHAR(1)DECLARE@MB INT DECLARE@ASIG INT DECLARE@PORCENUSADO INT DECLARE@MEN NVARCHAR(1024)DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@MENSAJE VARCHAR(4048)DECLARE@VCPROFILENAME VARCHAR(255)SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE SET@MENSAJE=''SET@HTML_MENSAJE=''SET@MYSQL='EXEC MASTER..XP_FIXEDDRIVES'IF EXISTS(SELECT*FROM SYS.OBJECTS WHERE OBJECT_ID=OBJECT_ID(N'DBO.TMP_DRIVES')AND TYPE IN(N'U'))TRUNCATE TABLE DBO.TMP_DRIVES INSERT INTO TMP_DRIVES(DISCO,SIZEREALMB)EXEC SP_EXECUTESQL@MYSQL DECLARE DISCO CURSOR FOR SELECT DISCO,SIZEREALMB FROM TMP_DRIVES OPEN DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB WHILE@@FETCH_STATUS=0 BEGIN UPDATE TB_DRIVES SET SIZEREALMB=@MB,FECHA=GETDATE()WHERE DISCO=@DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB END CLOSE DISCO DEALLOCATE DISCO DECLARE DISCSPACE CURSOR FOR SELECT DISCO,SIZEINICIAL,SIZEREALMB FROM TB_DRIVES SET@ENVIAR_MENSAJE='N'SET@MENSAJE='<HTML><HEAD><TITLE>DEPARTMENT REPORT</TITLE></HEAD><BODY><P><FONT STYLE="FONT-FAMILY:TAHOMA;FONT-WEIGHT: BOLD;FONT-SIZE: 13PX;COLOR:#023962">ALERTA DE ESPACIO EN DISCO,SERVIDOR<TABLE WIDTH="70%"STYLE="BORDER-COLLAPSE: COLLAPSE;BORDER-TOP: 3PX SOLID#CCE49D"><TR><TD></TD></TR></TABLE></FONT>'+@@SERVERNAME+'</P>'OPEN DISCSPACE FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB SET@MENSAJE=@MENSAJE+'<BR>'+'<TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#023962;FONT-FAMILY:TAHOMA;BACKGROUND-COLOR:#CCE49D;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>%DE ESPACIO OCUPADO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA</STRONG></TD></TR>'WHILE@@FETCH_STATUS=0 BEGIN SELECT@PORCENUSADO=(@ASIG-@MB)*100/@ASIG IF@PORCENUSADO>80 BEGIN SET@MEN='WARNING EN DISCO VALIDANDO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END ELSE IF@PORCENUSADO>85 BEGIN SET@MEN='CRITICAL ERROR EN DISCO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB END IF@ENVIAR_MENSAJE='Y'BEGIN SET@HTML_MENSAJE=N'<HTML><P>'+@MENSAJE+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N'BASEDATOS.CHILE@EXPERIAN.COM',@SUBJECT='ALERTA DE ESPACIO EN DISCOS',@BODY=@HTML_MENSAJE,@BODY_FORMAT='HTML',@IMPORTANCE='HIGH',@SENSITIVITY='NORMAL'END CLOSE DISCSPACE DEALLOCATE DISCSPACE GO
ft3	[dbo].[spESBEjecutaProcedimiento]	Warning	Execute	Using dynamic SQL	EXECUTE(@VCINVOCACION	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPESBEJECUTAPROCEDIMIENTO@VCINVOCACION VARCHAR(4096)AS IF RTRIM(@VCINVOCACION)IS NULL RETURN-1 ELSE BEGIN EXECUTE(@VCINVOCACION)IF@@ERROR<>0 RETURN-1 END RETURN 0 GO
ft3	[dbo].[spESBObtieneRegistroFT3FT]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY A.FEC_RECE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPESBOBTIENEREGISTROFT3FT@INSTENVIO VARCHAR(4),@TIPOARCHIVO VARCHAR(20),@FECHAINICIO VARCHAR(25),@FECHAFIN VARCHAR(25)AS SELECT TOP 1 ISNULL(B.NOM_MSG,@TIPOARCHIVO)AS TIPOARCHIVO,CONVERT(VARCHAR,A.FEC_RECE,112)AS FECHAENVIO,CONVERT(VARCHAR,A.FEC_RECE,108)AS HORAENVIO,CONVERT(VARCHAR,B.FEC_RESC,112)AS FECHARECEPCION,CONVERT(VARCHAR,B.FEC_RESC,108)AS HORARECEPCION,A.CAS_ORIG AS USUARIOENVIO FROM TBL_TARC A INNER JOIN TBL_CASI C ON C.COD_CASI=A.CAS_ORIG LEFT JOIN TBL_RESC B ON A.CAS_DEST=B.CAS_DEST AND A.CAS_ORIG=B.CAS_ORIG AND A.NOM_ARCC=B.NOM_ARCH AND B.EST_RESC=<str>AND B.EST_FRES=<str>WHERE C.COD_INST=@INSTENVIO AND A.CAS_DEST=<str>AND UPPER(A.NOM_ARCC)LIKE CONCAT(<str>,CONCAT(UPPER(@TIPOARCHIVO),<str>))ORDER BY A.FEC_RECE DESC GO
ft3	[dbo].[spFT3ConsultaAlertas]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY A.VCCODIGOPARAMETRO	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAALERTAS@ERROR VARCHAR(255)OUTPUT,@VCCODIGOPARAMETRO VARCHAR(10)AS BEGIN IF(@VCCODIGOPARAMETRO=<str>)BEGIN SELECT A.VCCODIGOPARAMETRO,A.VCDESCRIPCIONPARAMETRO,A.VCVALORPARAMETRO,B.VCMSGASUNTO,B.VCMSGTEXTO,B.VCMSGFIRMA FROM TBLPARAMETRO AS A,TBLMSALERTA AS B WHERE A.VCCODIGOPARAMETRO LIKE<str>AND B.VCCODIGOPARAMETRO=A.VCCODIGOPARAMETRO ORDER BY A.VCCODIGOPARAMETRO END ELSE BEGIN SELECT A.VCCODIGOPARAMETRO,A.VCDESCRIPCIONPARAMETRO,A.VCVALORPARAMETRO,B.VCMSGASUNTO,B.VCMSGTEXTO,B.VCMSGFIRMA FROM TBLPARAMETRO AS A,TBLMSALERTA AS B WHERE LOWER(A.VCCODIGOPARAMETRO)LIKE RTRIM(LOWER(CAST(COALESCE(<str>+NULLIF(LTRIM(NULLIF(RTRIM(@VCCODIGOPARAMETRO),<str>)),<str>)+<str>,<str>)AS NVARCHAR(4000))))AND B.VCCODIGOPARAMETRO=A.VCCODIGOPARAMETRO ORDER BY A.VCCODIGOPARAMETRO END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 END GO
ft3	[dbo].[spFT3ConsultaAlertas]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY A.VCCODIGOPARAMETRO	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAALERTAS@ERROR VARCHAR(255)OUTPUT,@VCCODIGOPARAMETRO VARCHAR(10)AS BEGIN IF(@VCCODIGOPARAMETRO=<str>)BEGIN SELECT A.VCCODIGOPARAMETRO,A.VCDESCRIPCIONPARAMETRO,A.VCVALORPARAMETRO,B.VCMSGASUNTO,B.VCMSGTEXTO,B.VCMSGFIRMA FROM TBLPARAMETRO AS A,TBLMSALERTA AS B WHERE A.VCCODIGOPARAMETRO LIKE<str>AND B.VCCODIGOPARAMETRO=A.VCCODIGOPARAMETRO ORDER BY A.VCCODIGOPARAMETRO END ELSE BEGIN SELECT A.VCCODIGOPARAMETRO,A.VCDESCRIPCIONPARAMETRO,A.VCVALORPARAMETRO,B.VCMSGASUNTO,B.VCMSGTEXTO,B.VCMSGFIRMA FROM TBLPARAMETRO AS A,TBLMSALERTA AS B WHERE LOWER(A.VCCODIGOPARAMETRO)LIKE RTRIM(LOWER(CAST(COALESCE(<str>+NULLIF(LTRIM(NULLIF(RTRIM(@VCCODIGOPARAMETRO),<str>)),<str>)+<str>,<str>)AS NVARCHAR(4000))))AND B.VCCODIGOPARAMETRO=A.VCCODIGOPARAMETRO ORDER BY A.VCCODIGOPARAMETRO END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 END GO
ft3	[dbo].[spFT3ConsultaArchivoAResponder]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.GROUP_EXPR	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAARCHIVOARESPONDER@ERROR VARCHAR(255)OUTPUT,@VCCODIGOINSTITUCION VARCHAR(4),@VCCODIGOTIPOARCHIVO VARCHAR(6)AS BEGIN SELECT T1.GROUP_EXPR$1 AS VCFECHAENVIO,T1.GROUP_EXPR$2 AS VCHORAENVIO,T1.GROUP_EXPR$3 AS VCCODIGOINSTITUCIONORIGEN,T1.GROUP_EXPR$4 AS VCCODIGOINSTITUCIONDESTINO,T1.GROUP_EXPR$5 AS VCCODIGOCASILLA,T1.GROUP_EXPR$6 AS VCCODIGOTIPOARCHIVO,T1.GROUP_EXPR$7 AS VCNOMBREARCHIVO,AGG_EXPR$1 FROM(SELECT TA.INUMERORESPUESTAS AS COL$1,TE.VCFECHAENVIO AS GROUP_EXPR$1,TE.VCHORAENVIO AS GROUP_EXPR$2,TE.VCCODIGOINSTITUCIONORIGEN AS GROUP_EXPR$3,TE.VCCODIGOINSTITUCIONDESTINO AS GROUP_EXPR$4,TE.VCCODIGOCASILLA AS GROUP_EXPR$5,TA.VCCODIGOTIPOARCHIVO AS GROUP_EXPR$6,TE.VCNOMBREARCHIVO AS GROUP_EXPR$7 FROM TBLTRANSENVIO AS TE,TBLTIPOARCHIVO AS TA)AS T1 INNER JOIN(SELECT COUNT(TR.VCFECHAENVIOFK)AS AGG_EXPR$1,COUNT(TR.VCFECHAENVIOFK)AS AGG_EXPR$2,TE.VCFECHAENVIO AS GROUP_EXPR$1,TE.VCHORAENVIO AS GROUP_EXPR$2,TE.VCCODIGOINSTITUCIONORIGEN AS GROUP_EXPR$3,TE.VCCODIGOINSTITUCIONDESTINO AS GROUP_EXPR$4,TE.VCCODIGOCASILLA AS GROUP_EXPR$5,TA.VCCODIGOTIPOARCHIVO AS GROUP_EXPR$6,TE.VCNOMBREARCHIVO AS GROUP_EXPR$7 FROM TBLTIPOARCHIVO AS TA,TBLTRANSENVIO AS TE LEFT OUTER JOIN TBLTRANSRESPUESTA AS TR ON TR.VCFECHAENVIOFK=TE.VCFECHAENVIO AND TR.VCHORAENVIOFK=TE.VCHORAENVIO AND TR.VCCODIGOINSTITUCIONORIGENFK=TE.VCCODIGOINSTITUCIONORIGEN AND TR.VCCODIGOINSTITUCIONDESTINOFK=TE.VCCODIGOINSTITUCIONDESTINO AND TR.VCCODIGOCASILLAFK=TE.VCCODIGOCASILLA AND TR.VCCODIGOTIPOARCHIVOFK=TE.VCCODIGOTIPOARCHIVO AND TR.VCNOMBREARCHIVOFK=TE.VCNOMBREARCHIVO WHERE TE.VCCODIGOINSTITUCIONDESTINO=@VCCODIGOINSTITUCION AND TE.VCCODIGOTIPOARCHIVO=@VCCODIGOTIPOARCHIVO AND TE.VCCODIGOTIPOARCHIVO=TA.VCCODIGOTIPOARCHIVO AND TE.VCESTADOENVIO=<str>AND TE.VCESTADORESCATE=<str>GROUP BY TE.VCFECHAENVIO,TE.VCHORAENVIO,TE.VCCODIGOINSTITUCIONORIGEN,TE.VCCODIGOINSTITUCIONDESTINO,TE.VCCODIGOCASILLA,TA.VCCODIGOTIPOARCHIVO,TE.VCNOMBREARCHIVO)AS T2 ON T1.GROUP_EXPR$1=T2.GROUP_EXPR$1 AND T1.GROUP_EXPR$2=T2.GROUP_EXPR$2 AND T1.GROUP_EXPR$3=T2.GROUP_EXPR$3 AND T1.GROUP_EXPR$4=T2.GROUP_EXPR$4 AND T1.GROUP_EXPR$5=T2.GROUP_EXPR$5 AND T1.GROUP_EXPR$6=T2.GROUP_EXPR$6 AND T1.GROUP_EXPR$7=T2.GROUP_EXPR$7 WHERE COL$1>AGG_EXPR$2 ORDER BY T1.GROUP_EXPR$3,T1.GROUP_EXPR$7 END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaDestinataEmailFT3]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY U.VCCODIGOUSUARIO	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTADESTINATAEMAILFT3@ERROR VARCHAR(255)OUTPUT,@VCCODIGOCASILLA VARCHAR(8)AS BEGIN SELECT U.VCCODIGOUSUARIO,U.VCNOMBREUSUARIO,U.VCDIRECCIONEMAIL,U.VCCODIGOINSTITUCION FROM TBLUSUARIO AS U,TBL_INST AS I,TBL_CASI AS C WHERE C.COD_CASI=@VCCODIGOCASILLA AND I.COD_INST=C.COD_INST AND U.VCCODIGOINSTITUCION=I.COD_INST ORDER BY U.VCCODIGOUSUARIO END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaDestinatarioEmail]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY U.VCCODIGOUSUARIO	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTADESTINATARIOEMAIL@ERROR VARCHAR(255)OUTPUT,@VCCODIGOINSTITUCION VARCHAR(4),@VCCODIGOTIPOARCHIVO VARCHAR(6)AS BEGIN SELECT U.VCCODIGOUSUARIO,U.VCNOMBREUSUARIO,U.VCDIRECCIONEMAIL,U.VCCODIGOINSTITUCION FROM TBLUSUARIO AS U,TBLRELTIPOARCHIVOUSUARIO AS TAU WHERE U.VCCODIGOINSTITUCION=@VCCODIGOINSTITUCION AND U.VCCODIGOUSUARIO=TAU.VCCODIGOUSUARIO AND TAU.VCCODIGOTIPOARCHIVO=@VCCODIGOTIPOARCHIVO ORDER BY U.VCCODIGOUSUARIO END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaDestinatarios]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY I.COD_INST,C.COD_CASI	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTADESTINATARIOS@ERROR VARCHAR(255)OUTPUT,@VCCODIGOTIPOARCHIVO VARCHAR(6)AS BEGIN SELECT DISTINCT I.COD_INST,I.NOM_INST,C.COD_CASI FROM TBLRELTIPOARCHIVOUSUARIO AS TAU,TBLUSUARIO AS U,TBL_INST AS I,TBL_CASI AS C WHERE TAU.VCCODIGOTIPOARCHIVO=@VCCODIGOTIPOARCHIVO AND TAU.VCCODIGOUSUARIO=U.VCCODIGOUSUARIO AND U.VCCODIGOINSTITUCION=I.COD_INST AND I.COD_INST=C.COD_INST ORDER BY I.COD_INST,C.COD_CASI END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaInstitucCasilla]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY I.NOM_INST,C.COD_CASI	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAINSTITUCCASILLA@ERROR VARCHAR(255)OUTPUT AS BEGIN SELECT I.COD_INST AS VCCODIGOINSTITUCION,I.NOM_INST AS VC_NOM_INST,C.COD_CASI,C.USU_CNXN FROM TBL_INST AS I,TBL_CASI AS C WHERE I.COD_INST=C.COD_INST ORDER BY I.NOM_INST,C.COD_CASI END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaPerfilPrivilegio]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PR.VCCODIGOPRIVILEGIO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAPERFILPRIVILEGIO@ERROR VARCHAR(255)OUT,@VCCODIGOPERFIL VARCHAR(2)AS BEGIN SELECT PR.VCCODIGOPRIVILEGIO,PR.VCDESCRIPCIONPRIVILEGIO,PR.VCDIRECCIONHTTP,PR.INIVELURL,PR.VCCODPRIVPADRE FROM TBLPERFIL PE,TBLRELPRIVILEGIOPERFIL RPP,TBLPRIVILEGIO PR WHERE PE.VCCODIGOPERFIL=@VCCODIGOPERFIL AND RPP.VCCODIGOPRIVILEGIO=PR.VCCODIGOPRIVILEGIO AND RPP.VCCODIGOPERFIL=PE.VCCODIGOPERFIL ORDER BY PR.VCCODIGOPRIVILEGIO END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaPrivilegiosPerfil]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY RPP.VCCODIGOPERFIL	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAPRIVILEGIOSPERFIL@ERROR VARCHAR(255)OUTPUT,@VCCODIGOPRIVILEGIO VARCHAR(10)AS BEGIN SELECT RPP.VCCODIGOPERFIL,PE.VCDESCRIPCIONPERFIL FROM TBLRELPRIVILEGIOPERFIL AS RPP,TBLPRIVILEGIO AS PR,TBLPERFIL AS PE WHERE RPP.VCCODIGOPRIVILEGIO=@VCCODIGOPRIVILEGIO AND PR.VCCODIGOPRIVILEGIO=RPP.VCCODIGOPRIVILEGIO AND PE.VCCODIGOPERFIL=RPP.VCCODIGOPERFIL ORDER BY RPP.VCCODIGOPERFIL END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaPrivilegiosSFT3]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY RPP.VCCODIGOPERFIL	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAPRIVILEGIOSSFT3@ERROR VARCHAR(255)OUTPUT AS BEGIN SELECT P.VCDIRECCIONHTTP,RPP.VCCODIGOPERFIL FROM TBLPRIVILEGIO AS P,TBLRELPRIVILEGIOPERFIL AS RPP WHERE P.VCCODIGOPRIVILEGIO=RPP.VCCODIGOPRIVILEGIO ORDER BY RPP.VCCODIGOPERFIL END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 GO
ft3	[dbo].[spFT3ConsultaUsuaTipoArchivo]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY I.NOM_INST	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAUSUATIPOARCHIVO@ERROR VARCHAR(255)OUTPUT,@VCCODIGOTIPOARCHIVO VARCHAR(6)AS BEGIN IF(@VCCODIGOTIPOARCHIVO=<str>)BEGIN SELECT TAU.VCCODIGOUSUARIO AS VCCODIGOUSUARIO,U.VCCODIGOINSTITUCION AS VCCODIGOINSTITUCION,I.NOM_INST AS VC_NOM_INST,TAU.VCCODIGOTIPOARCHIVO AS VCCODIGOTIPOARCHIVO FROM TBLRELTIPOARCHIVOUSUARIO AS TAU,TBLUSUARIO AS U,TBL_INST AS I WHERE TAU.VCCODIGOUSUARIO=U.VCCODIGOUSUARIO AND U.VCCODIGOINSTITUCION=I.COD_INST ORDER BY I.NOM_INST END ELSE BEGIN SELECT TAU.VCCODIGOUSUARIO AS VCCODIGOUSUARIO,U.VCCODIGOINSTITUCION AS VCCODIGOINSTITUCION,I.NOM_INST AS VC_NOM_INST,TAU.VCCODIGOTIPOARCHIVO AS VCCODIGOTIPOARCHIVO FROM TBLRELTIPOARCHIVOUSUARIO AS TAU,TBLUSUARIO AS U,TBL_INST AS I WHERE TAU.VCCODIGOTIPOARCHIVO=@VCCODIGOTIPOARCHIVO AND TAU.VCCODIGOUSUARIO=U.VCCODIGOUSUARIO AND U.VCCODIGOINSTITUCION=I.COD_INST ORDER BY I.NOM_INST END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 END GO
ft3	[dbo].[spFT3ConsultaUsuaTipoArchivo]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY I.NOM_INST	SET ANSI_NULLS OFF SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPFT3CONSULTAUSUATIPOARCHIVO@ERROR VARCHAR(255)OUTPUT,@VCCODIGOTIPOARCHIVO VARCHAR(6)AS BEGIN IF(@VCCODIGOTIPOARCHIVO=<str>)BEGIN SELECT TAU.VCCODIGOUSUARIO AS VCCODIGOUSUARIO,U.VCCODIGOINSTITUCION AS VCCODIGOINSTITUCION,I.NOM_INST AS VC_NOM_INST,TAU.VCCODIGOTIPOARCHIVO AS VCCODIGOTIPOARCHIVO FROM TBLRELTIPOARCHIVOUSUARIO AS TAU,TBLUSUARIO AS U,TBL_INST AS I WHERE TAU.VCCODIGOUSUARIO=U.VCCODIGOUSUARIO AND U.VCCODIGOINSTITUCION=I.COD_INST ORDER BY I.NOM_INST END ELSE BEGIN SELECT TAU.VCCODIGOUSUARIO AS VCCODIGOUSUARIO,U.VCCODIGOINSTITUCION AS VCCODIGOINSTITUCION,I.NOM_INST AS VC_NOM_INST,TAU.VCCODIGOTIPOARCHIVO AS VCCODIGOTIPOARCHIVO FROM TBLRELTIPOARCHIVOUSUARIO AS TAU,TBLUSUARIO AS U,TBL_INST AS I WHERE TAU.VCCODIGOTIPOARCHIVO=@VCCODIGOTIPOARCHIVO AND TAU.VCCODIGOUSUARIO=U.VCCODIGOUSUARIO AND U.VCCODIGOINSTITUCION=I.COD_INST ORDER BY I.NOM_INST END IF@@ROWCOUNT<1 BEGIN SELECT@ERROR=<str>RETURN 1 END SELECT@ERROR=<str>RETURN 0 END GO
intercajas	[dbo].[spConsultaIndicadores]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY INSTORIGEN.VCNOMBRECORTO,INSTDESTINO.VCNOMBRECORTO,CTIPODEUDOR	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORES@VCTIPOINDICADOR VARCHAR(3)=<str>,@ITIPOCONSULTA INT,@NPERIODOINICIAL NUMERIC(6,0)=0,@NPERIODOFINAL NUMERIC(6,0)=0,@VCCRITERIO VARCHAR(3)=<str>,@VCUBICADOS VARCHAR(3)=<str>,@VCRECAUDADOS VARCHAR(2)=<str>,@IPERIODOMORA INT=<str>,@CTIPODEUDOR CHAR(1)=<str>,@NIDCAJAORIGEN AS NUMERIC(4,0)=0,@NIDCAJADESTINO AS NUMERIC(4,0)=0,@ICODERROR INT OUT,@VCMSJERROR VARCHAR(50)OUT AS BEGIN SET@ICODERROR=0;SET@VCMSJERROR=<str>;BEGIN TRY IF@ITIPOCONSULTA=1 BEGIN SELECT TBLINSTITUCION.NIDINSTITUCION AS IDCAJAORIGEN,TBLINSTITUCION.VCNOMBRECORTO AS CAJAORIGEN,NPERIODO AS PERIODO,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN LEFT JOIN TBLINSTITUCION ON TBLINDICADORRESUMEN.NIDCAJAORIGEN=TBLINSTITUCION.NIDINSTITUCION WHERE TBLINDICADORRESUMEN.NPERIODO BETWEEN@NPERIODOINICIAL AND@NPERIODOFINAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>OR TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS))OR(TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR@VCRECAUDADOS=<str>)AND TBLINDICADORRESUMEN.VCRECAUDADOS=<str>))AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@VCUBICADOS=<str>OR@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND((@VCCRITERIO=<str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA=-1)OR(@VCCRITERIO<><str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1))GROUP BY TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR ORDER BY TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=2 BEGIN SELECT TBLPERIODOMORA.IIDPERIODOMORA AS IDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA AS PERIODOMORA,TBLINSTITUCION.NIDINSTITUCION AS IDCAJA,TBLINSTITUCION.VCNOMBRECORTO AS CAJA,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN INNER JOIN TBLINSTITUCION ON TBLINDICADORRESUMEN.NIDCAJAORIGEN=TBLINSTITUCION.NIDINSTITUCION INNER JOIN TBLPERIODOMORA ON TBLINDICADORRESUMEN.IIDPERIODOMORA=TBLPERIODOMORA.IIDPERIODOMORA WHERE TBLINDICADORRESUMEN.NPERIODO=@NPERIODOINICIAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>OR TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS))OR(TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR@VCRECAUDADOS=<str>)AND TBLINDICADORRESUMEN.VCRECAUDADOS=<str>))AND(@IPERIODOMORA=0 OR TBLINDICADORRESUMEN.IIDPERIODOMORA=@IPERIODOMORA)AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@VCUBICADOS=<str>OR@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1 GROUP BY TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR,TBLPERIODOMORA.IIDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA ORDER BY TBLPERIODOMORA.IIDPERIODOMORA,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-2;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=3 BEGIN SELECT INSTORIGEN.NIDINSTITUCION AS IDCAJAORIGEN,INSTORIGEN.VCNOMBRECORTO AS CAJAORIGEN,INSTDESTINO.NIDINSTITUCION AS IDCAJADESTINO,INSTDESTINO.VCNOMBRECORTO AS CAJADESTINO,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN LEFT JOIN TBLINSTITUCION INSTORIGEN ON TBLINDICADORRESUMEN.NIDCAJAORIGEN=INSTORIGEN.NIDINSTITUCION LEFT JOIN TBLINSTITUCION INSTDESTINO ON TBLINDICADORRESUMEN.NIDCAJADESTINO=INSTDESTINO.NIDINSTITUCION WHERE TBLINDICADORRESUMEN.NPERIODO=@NPERIODOINICIAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>OR TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS)))AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND((@VCCRITERIO=<str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA=-1)OR(@VCCRITERIO<><str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1))GROUP BY INSTORIGEN.NIDINSTITUCION,INSTORIGEN.VCNOMBRECORTO,INSTDESTINO.NIDINSTITUCION,INSTDESTINO.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR ORDER BY INSTORIGEN.VCNOMBRECORTO,INSTDESTINO.VCNOMBRECORTO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-3;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=4 BEGIN SELECT TBLPERIODOMORA.IIDPERIODOMORA AS IDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA AS PERIODOMORA,TBLINSTITUCION.NIDINSTITUCION AS IDCAJA,TBLINSTITUCION.VCNOMBRECORTO AS CAJA,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN LEFT JOIN TBLINSTITUCION ON TBLINDICADORRESUMEN.NIDCAJADESTINO=TBLINSTITUCION.NIDINSTITUCION LEFT JOIN TBLPERIODOMORA ON TBLINDICADORRESUMEN.IIDPERIODOMORA=TBLPERIODOMORA.IIDPERIODOMORA WHERE TBLINDICADORRESUMEN.NPERIODO=@NPERIODOINICIAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>AND TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS)))AND(@IPERIODOMORA=0 OR TBLINDICADORRESUMEN.IIDPERIODOMORA=@IPERIODOMORA)AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1 GROUP BY TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR,TBLPERIODOMORA.IIDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA ORDER BY TBLPERIODOMORA.IIDPERIODOMORA,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-3;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=5 BEGIN SELECT TABLATMP.NIDINSTITUCION AS IDCAJA,TABLATMP.VCNOMBRECORTO AS CAJA,COUNT(TBLCIERREFUERAPLAZO.IIDCIERREPLAZO)AS VALOR,TABLATMP.NPERIODO AS PERIODO FROM TBLCIERREFUERAPLAZO RIGHT OUTER JOIN(SELECT TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLPERIODO.NPERIODO FROM TBLINSTITUCION,TBLPERIODO WHERE TBLINSTITUCION.BPARTICIPA=1 AND TBLINSTITUCION.IIDESTADO=11 AND(@NIDCAJAORIGEN=0 OR TBLINSTITUCION.NIDINSTITUCION=@NIDCAJAORIGEN)AND TBLPERIODO.NPERIODO BETWEEN@NPERIODOINICIAL AND@NPERIODOFINAL)TABLATMP ON TBLCIERREFUERAPLAZO.NIDINSTITUCION=TABLATMP.NIDINSTITUCION AND TBLCIERREFUERAPLAZO.NPERIODO=TABLATMP.NPERIODO GROUP BY TABLATMP.NIDINSTITUCION,TABLATMP.VCNOMBRECORTO,TABLATMP.NPERIODO ORDER BY TABLATMP.NIDINSTITUCION,TABLATMP.VCNOMBRECORTO,TABLATMP.NPERIODO IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-3;SET@VCMSJERROR=<str>;END RETURN END END TRY BEGIN CATCH SET@ICODERROR=-4;SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();RETURN END CATCH END GO
intercajas	[dbo].[spConsultaIndicadores]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TABLATMP.NIDINSTITUCION,TABLATMP.VCNOMBRECORTO,TABLATMP.NPERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPCONSULTAINDICADORES@VCTIPOINDICADOR VARCHAR(3)=<str>,@ITIPOCONSULTA INT,@NPERIODOINICIAL NUMERIC(6,0)=0,@NPERIODOFINAL NUMERIC(6,0)=0,@VCCRITERIO VARCHAR(3)=<str>,@VCUBICADOS VARCHAR(3)=<str>,@VCRECAUDADOS VARCHAR(2)=<str>,@IPERIODOMORA INT=<str>,@CTIPODEUDOR CHAR(1)=<str>,@NIDCAJAORIGEN AS NUMERIC(4,0)=0,@NIDCAJADESTINO AS NUMERIC(4,0)=0,@ICODERROR INT OUT,@VCMSJERROR VARCHAR(50)OUT AS BEGIN SET@ICODERROR=0;SET@VCMSJERROR=<str>;BEGIN TRY IF@ITIPOCONSULTA=1 BEGIN SELECT TBLINSTITUCION.NIDINSTITUCION AS IDCAJAORIGEN,TBLINSTITUCION.VCNOMBRECORTO AS CAJAORIGEN,NPERIODO AS PERIODO,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN LEFT JOIN TBLINSTITUCION ON TBLINDICADORRESUMEN.NIDCAJAORIGEN=TBLINSTITUCION.NIDINSTITUCION WHERE TBLINDICADORRESUMEN.NPERIODO BETWEEN@NPERIODOINICIAL AND@NPERIODOFINAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>OR TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS))OR(TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR@VCRECAUDADOS=<str>)AND TBLINDICADORRESUMEN.VCRECAUDADOS=<str>))AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@VCUBICADOS=<str>OR@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND((@VCCRITERIO=<str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA=-1)OR(@VCCRITERIO<><str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1))GROUP BY TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR ORDER BY TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=2 BEGIN SELECT TBLPERIODOMORA.IIDPERIODOMORA AS IDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA AS PERIODOMORA,TBLINSTITUCION.NIDINSTITUCION AS IDCAJA,TBLINSTITUCION.VCNOMBRECORTO AS CAJA,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN INNER JOIN TBLINSTITUCION ON TBLINDICADORRESUMEN.NIDCAJAORIGEN=TBLINSTITUCION.NIDINSTITUCION INNER JOIN TBLPERIODOMORA ON TBLINDICADORRESUMEN.IIDPERIODOMORA=TBLPERIODOMORA.IIDPERIODOMORA WHERE TBLINDICADORRESUMEN.NPERIODO=@NPERIODOINICIAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>OR TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS))OR(TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR@VCRECAUDADOS=<str>)AND TBLINDICADORRESUMEN.VCRECAUDADOS=<str>))AND(@IPERIODOMORA=0 OR TBLINDICADORRESUMEN.IIDPERIODOMORA=@IPERIODOMORA)AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@VCUBICADOS=<str>OR@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1 GROUP BY TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR,TBLPERIODOMORA.IIDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA ORDER BY TBLPERIODOMORA.IIDPERIODOMORA,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-2;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=3 BEGIN SELECT INSTORIGEN.NIDINSTITUCION AS IDCAJAORIGEN,INSTORIGEN.VCNOMBRECORTO AS CAJAORIGEN,INSTDESTINO.NIDINSTITUCION AS IDCAJADESTINO,INSTDESTINO.VCNOMBRECORTO AS CAJADESTINO,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN LEFT JOIN TBLINSTITUCION INSTORIGEN ON TBLINDICADORRESUMEN.NIDCAJAORIGEN=INSTORIGEN.NIDINSTITUCION LEFT JOIN TBLINSTITUCION INSTDESTINO ON TBLINDICADORRESUMEN.NIDCAJADESTINO=INSTDESTINO.NIDINSTITUCION WHERE TBLINDICADORRESUMEN.NPERIODO=@NPERIODOINICIAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>OR TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS)))AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND((@VCCRITERIO=<str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA=-1)OR(@VCCRITERIO<><str>AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1))GROUP BY INSTORIGEN.NIDINSTITUCION,INSTORIGEN.VCNOMBRECORTO,INSTDESTINO.NIDINSTITUCION,INSTDESTINO.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR ORDER BY INSTORIGEN.VCNOMBRECORTO,INSTDESTINO.VCNOMBRECORTO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-3;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=4 BEGIN SELECT TBLPERIODOMORA.IIDPERIODOMORA AS IDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA AS PERIODOMORA,TBLINSTITUCION.NIDINSTITUCION AS IDCAJA,TBLINSTITUCION.VCNOMBRECORTO AS CAJA,CASE WHEN CTIPODEUDOR=<str>THEN<str>WHEN CTIPODEUDOR=<str>THEN<str>END AS TIPODEUDOR,SUM(NVALOR)AS VALOR FROM TBLINDICADORRESUMEN LEFT JOIN TBLINSTITUCION ON TBLINDICADORRESUMEN.NIDCAJADESTINO=TBLINSTITUCION.NIDINSTITUCION LEFT JOIN TBLPERIODOMORA ON TBLINDICADORRESUMEN.IIDPERIODOMORA=TBLPERIODOMORA.IIDPERIODOMORA WHERE TBLINDICADORRESUMEN.NPERIODO=@NPERIODOINICIAL AND TBLINDICADORRESUMEN.VCTIPOINDICADOR=@VCTIPOINDICADOR AND TBLINDICADORRESUMEN.VCCRITERIO=@VCCRITERIO AND(@VCUBICADOS=<str>AND TBLINDICADORRESUMEN.VCUBICADOS=@VCUBICADOS)AND((TBLINDICADORRESUMEN.VCUBICADOS=<str>AND(@VCRECAUDADOS=<str>OR TBLINDICADORRESUMEN.VCRECAUDADOS=@VCRECAUDADOS)))AND(@IPERIODOMORA=0 OR TBLINDICADORRESUMEN.IIDPERIODOMORA=@IPERIODOMORA)AND(@NIDCAJAORIGEN=0 OR TBLINDICADORRESUMEN.NIDCAJAORIGEN=@NIDCAJAORIGEN)AND(@NIDCAJADESTINO=0 OR TBLINDICADORRESUMEN.NIDCAJADESTINO=@NIDCAJADESTINO)AND(@CTIPODEUDOR=<str>OR TBLINDICADORRESUMEN.CTIPODEUDOR=@CTIPODEUDOR)AND TBLINDICADORRESUMEN.IIDPERIODOMORA>-1 GROUP BY TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR,TBLPERIODOMORA.IIDPERIODOMORA,TBLPERIODOMORA.VCPERIODOMORA ORDER BY TBLPERIODOMORA.IIDPERIODOMORA,TBLINSTITUCION.VCNOMBRECORTO,NPERIODO,CTIPODEUDOR IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-3;SET@VCMSJERROR=<str>;END RETURN END IF@ITIPOCONSULTA=5 BEGIN SELECT TABLATMP.NIDINSTITUCION AS IDCAJA,TABLATMP.VCNOMBRECORTO AS CAJA,COUNT(TBLCIERREFUERAPLAZO.IIDCIERREPLAZO)AS VALOR,TABLATMP.NPERIODO AS PERIODO FROM TBLCIERREFUERAPLAZO RIGHT OUTER JOIN(SELECT TBLINSTITUCION.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLPERIODO.NPERIODO FROM TBLINSTITUCION,TBLPERIODO WHERE TBLINSTITUCION.BPARTICIPA=1 AND TBLINSTITUCION.IIDESTADO=11 AND(@NIDCAJAORIGEN=0 OR TBLINSTITUCION.NIDINSTITUCION=@NIDCAJAORIGEN)AND TBLPERIODO.NPERIODO BETWEEN@NPERIODOINICIAL AND@NPERIODOFINAL)TABLATMP ON TBLCIERREFUERAPLAZO.NIDINSTITUCION=TABLATMP.NIDINSTITUCION AND TBLCIERREFUERAPLAZO.NPERIODO=TABLATMP.NPERIODO GROUP BY TABLATMP.NIDINSTITUCION,TABLATMP.VCNOMBRECORTO,TABLATMP.NPERIODO ORDER BY TABLATMP.NIDINSTITUCION,TABLATMP.VCNOMBRECORTO,TABLATMP.NPERIODO IF@@ROWCOUNT=0 BEGIN SET@ICODERROR=-3;SET@VCMSJERROR=<str>;END RETURN END END TRY BEGIN CATCH SET@ICODERROR=-4;SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();RETURN END CATCH END GO
intercajas	[dbo].[spDespliegaMenu]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TABMENU.MENU	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPDESPLIEGAMENU@IRUT INT AS BEGIN SET NOCOUNT ON;SELECT DISTINCT MENU,VCMENU,VCURL AS LINK,LEN(MENU)-LEN(REPLACE(MENU,<str>,<str>))AS NIVEL FROM(SELECT NIV2.IIDMENU,REPLACE(CAST(COALESCE(NIV0.IORDEN,<str>)AS VARCHAR(10))+<str>+CAST(COALESCE(NIV1.IORDEN,<str>)AS VARCHAR(10))+<str>+CAST(COALESCE(NIV2.IORDEN,<str>)AS VARCHAR(10)),<str>,<str>)AS MENU FROM TBLMENU NIV2 LEFT JOIN TBLMENU NIV1 ON NIV1.IIDMENU=NIV2.IIDMENUPADRE LEFT JOIN TBLMENU NIV0 ON NIV0.IIDMENU=NIV1.IIDMENUPADRE)TABMENU INNER JOIN TBLMENU ON TBLMENU.IIDMENU=TABMENU.IIDMENU LEFT JOIN TBLPAGINA ON TBLMENU.IIDPAGINALINK=TBLPAGINA.IIDPAGINA INNER JOIN TBLREL_FUNCMENU ON TBLREL_FUNCMENU.IIDMENU=TBLMENU.IIDMENU INNER JOIN TBLFUNCIONALIDAD ON TBLFUNCIONALIDAD.IIDFUNCIONALIDAD=TBLREL_FUNCMENU.IIDFUNCIONALIDAD INNER JOIN TBLREL_PERFILFUNC ON TBLREL_PERFILFUNC.IIDFUNCIONALIDAD=TBLFUNCIONALIDAD.IIDFUNCIONALIDAD INNER JOIN TBLPERFIL ON TBLPERFIL.IIDPERFIL=TBLREL_PERFILFUNC.IIDPERFIL INNER JOIN TBLREL_USUARIOPERFIL ON TBLREL_USUARIOPERFIL.IIDPERFIL=TBLPERFIL.IIDPERFIL INNER JOIN TBLUSUARIO ON TBLUSUARIO.IRUT=TBLREL_USUARIOPERFIL.IRUT WHERE TBLUSUARIO.IRUT=@IRUT AND TBLFUNCIONALIDAD.IIDESTADO=1 ORDER BY TABMENU.MENU;END GO
intercajas	[dbo].[spGeneraIndicadoresCompraCartera]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.IIDPERIODOMORA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESCOMPRACARTERA@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,8,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=5 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOOFERTACOLOCACION)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>;UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresCompraCartera]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.NIDCAJAORIGEN	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESCOMPRACARTERA@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,8,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=5 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOOFERTACOLOCACION)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>;UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresCompraCartera]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.IIDPERIODOMORA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESCOMPRACARTERA@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,8,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=5 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOOFERTACOLOCACION)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>;UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresCompraCartera]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.IIDPERIODOMORA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESCOMPRACARTERA@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,8,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA=0 OR TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=5 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOFINALCOMPRA=0 OR NMONTOFINALCOMPRA IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDCAJADESTINO AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOOFERTA,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONCARTERADETALLE.NMONTOFINALCOMPRA>0 AND TBLCONSOLIDACIONCARTERADETALLE.VCFECHACOMPRA IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDCAJADESTINO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOOFERTACOLOCACION)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOOFERTACOLOCACION)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONCARTERADETALLE WHERE TBLCONSOLIDACIONCARTERADETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONCARTERADETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONCARTERADETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONCARTERADETALLE.VCNUMPAGARE,TBLCONSOLIDACIONCARTERADETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONCARTERADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>;UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresRecaudacion]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.IIDPERIODOMORA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESRECAUDACION@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,7,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=7 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOCOBRAR)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresRecaudacion]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.NIDCAJAORIGEN	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESRECAUDACION@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,7,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=7 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOCOBRAR)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresRecaudacion]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.IIDPERIODOMORA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESRECAUDACION@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,7,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=7 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOCOBRAR)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGeneraIndicadoresRecaudacion]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY TBLTABLA1.IIDPERIODOMORA	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPGENERAINDICADORESRECAUDACION@NPERIODO NUMERIC(6,0),@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(100)=<str>OUT AS DECLARE@IIDINDICADOR INT=0,@IFILASPROCESADAS INT=0,@IIDCONTROLPROCESO INT=0,@ICANTREGISTROS INT=0,@DFECHACONSOLIDACION DATE=NULL,@VCMENSAJECONTROPROC VARCHAR(100)=<str>BEGIN SET DATEFORMAT YMD BEGIN TRY SELECT@DFECHACONSOLIDACION=DATEADD(MM,DATEDIFF(MM,-1,CONVERT(DATE,CONVERT(VARCHAR,@NPERIODO)+<str>,112)),0)-1 IF@DFECHACONSOLIDACION=NULL BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>+@NPERIODO;RETURN END SELECT@ICANTREGISTROS=COUNT(*)FROM TBLPERIODO WHERE NPERIODO=@NPERIODO IF@ICANTREGISTROS=0 BEGIN SET@ICODERROR=-1;SET@VCMSJERROR=<str>;RETURN END SET@ICODERROR=-2;BEGIN SELECT@IIDCONTROLPROCESO=COALESCE(MAX(NIDCONTROLPROCESO)+1,1)FROM TBLCONTROLPROCESO WHERE(NPERIODO=@NPERIODO)INSERT INTO TBLCONTROLPROCESO(NIDCONTROLPROCESO,NPERIODO,DFECHAINICIO,DFECHAFIN,IIDESTADO,IIDTIPOCONTROLPROCESO,VCDETALLE)VALUES(@IIDCONTROLPROCESO,@NPERIODO,GETDATE(),GETDATE(),22,7,<str>)END SET@ICODERROR=1 SET@VCMENSAJECONTROPROC=<str>WHILE(1=1)BEGIN BEGIN TRAN T1 DELETE TOP(1000)TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO AND VCTIPOINDICADOR=<str>SET@IFILASPROCESADAS=@@ROWCOUNT IF@IFILASPROCESADAS=0 BEGIN COMMIT TRAN T1 BREAK END COMMIT TRAN T1 END SET@ICODERROR=2 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=3 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=4 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=22 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=23 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,CASE WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT(TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR+CONVERT(VARCHAR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)))WHEN CSUJETODESCUENTO=<str>THEN COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCRUTAVAL)END AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=24 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.NIDCAJAORIGEN ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,-1 AS IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT(CONVERT(VARCHAR,TBLTABLA1.VCIDENTIFICADORDEUDOR)+CONVERT(VARCHAR,TBLTABLA1.TIDTIPOIDENTIFICADOR)))AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<strstr>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=6 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,COUNT(DISTINCT TBLCONSOLIDACIONDETALLE.VCNUMPAGARE)AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=7 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,COUNT(DISTINCT TBLTABLA1.VCNUMPAGARE)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN COMMIT TRAN SET@ICODERROR=8 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NMONTOPAGADO=0 OR NMONTOPAGADO IS NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=9 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLPERIODOMORA.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN AS NIDCAJAORIGEN,NIDINSTITUCION AS NIDCAJADESTINO,CSUJETODESCUENTO,SUM(COALESCE(NMONTOCOBRAR,0))AS VALOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE TBLCONSOLIDACIONDETALLE.NMONTOPAGADO>0 AND TBLCONSOLIDACIONDETALLE.VCFECHAPAGO IS NOT NULL AND NPERIODO=@NPERIODO GROUP BY NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,NIDCAJAORIGEN,CSUJETODESCUENTO COMMIT TRAN SET@ICODERROR=10 SET@VCMENSAJECONTROPROC=<str>BEGIN TRAN SELECT@IIDINDICADOR=COALESCE(MAX(IIDINDICADORRESUMEN),0)FROM TBLINDICADORRESUMEN WHERE NPERIODO=@NPERIODO INSERT INTO TBLINDICADORRESUMEN(IIDINDICADORRESUMEN,NPERIODO,VCTIPOINDICADOR,VCCRITERIO,VCUBICADOS,VCRECAUDADOS,IIDPERIODOMORA,NIDCAJAORIGEN,NIDCAJADESTINO,CTIPODEUDOR,NVALOR)SELECT@IIDINDICADOR+ROW_NUMBER()OVER(ORDER BY TBLTABLA1.IIDPERIODOMORA ASC)AS IIDINDICADORRESUMEN,@NPERIODO AS NPERIODO,<str>AS VCTIPOINDICADOR,<str>AS VCCRITERIO,<str>AS VCUBICADO,<str>AS VCRECUADADO,TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN AS NIDCAJAORIGEN,NULL AS NIDCAJADESTINO,<str>AS CSUJETODESCUENTO,SUM(TBLTABLA1.NMONTOCOBRAR)AS VALOR FROM(SELECT TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR AS DEUDORESTOTAL,TBLHISTDEUDADETALLE.NIDINSTITUCION AS NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR FROM TBLHISTDEUDADETALLE INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLHISTDEUDADETALLE.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLHISTDEUDADETALLE.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLHISTDEUDADETALLE.ICORRELATIVO LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,CASE WHEN ISDATE(TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)=1 THEN CONVERT(DATE,TBLHISTDEUDADETALLE.VCFECHAPRIMERIMPAGO)ELSE NULL END,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=@NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.IIDESTADO=15 AND VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>GROUP BY TBLHISTDEUDADETALLE.NIDINSTITUCION,TBLPERIODOMORA.IIDPERIODOMORA,TBLHISTDEUDADETALLE.VCNUMPAGARE,TBLHISTDEUDADETALLE.VCIDENTIFICADORDEUDOR,TBLHISTDEUDADETALLE.TIDTIPOIDENTIFICADOR,TBLHISTDEUDADETALLE.NMONTOCOBRAR)TBLTABLA1 LEFT JOIN(SELECT NIDCAJAORIGEN AS NIDCAJAORIGEN,VCIDENTIFICADORDEUDOR AS DEUDORESENCONTRADOS,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR FROM(SELECT*FROM TBLCONSOLIDACIONDETALLE WHERE TBLCONSOLIDACIONDETALLE.NPERIODO=@NPERIODO)AS TBLCONSOLIDACIONDETALLE LEFT OUTER JOIN TBLPERIODOMORA ON COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)>=TBLPERIODOMORA.ILIMITEINFERIOR AND(TBLPERIODOMORA.ILIMITESUPERIOR=-1 OR COALESCE(DATEDIFF(DAY,TBLCONSOLIDACIONDETALLE.DFECHAPRIMERIMPAGO,@DFECHACONSOLIDACION),0)<TBLPERIODOMORA.ILIMITESUPERIOR)WHERE NPERIODO=@NPERIODO GROUP BY NIDCAJAORIGEN,TBLPERIODOMORA.IIDPERIODOMORA,TBLCONSOLIDACIONDETALLE.VCNUMPAGARE,TBLCONSOLIDACIONDETALLE.VCIDENTIFICADORDEUDOR,TBLCONSOLIDACIONDETALLE.TIDTIPOIDENTIFICADOR)TBLTABLA2 ON TBLTABLA1.NIDCAJAORIGEN=TBLTABLA2.NIDCAJAORIGEN AND TBLTABLA1.IIDPERIODOMORA=TBLTABLA2.IIDPERIODOMORA AND TBLTABLA1.VCIDENTIFICADORDEUDOR=TBLTABLA2.VCIDENTIFICADORDEUDOR AND TBLTABLA1.TIDTIPOIDENTIFICADOR=TBLTABLA2.TIDTIPOIDENTIFICADOR AND TBLTABLA1.VCNUMPAGARE=TBLTABLA2.VCNUMPAGARE WHERE DEUDORESENCONTRADOS IS NULL GROUP BY TBLTABLA1.IIDPERIODOMORA,TBLTABLA1.NIDCAJAORIGEN,TBLTABLA1.VCIDENTIFICADORDEUDOR,TBLTABLA1.VCNUMPAGARE COMMIT TRAN SET@ICODERROR=-3 SET@VCMENSAJECONTROPROC=<str>UPDATE TBLCONTROLPROCESO SET IIDESTADO=24,VCDETALLE=<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO SET@ICODERROR=0 SET@VCMSJERROR=<str>END TRY BEGIN CATCH SELECT@VCMSJERROR=ERROR_NUMBER()+<str>+ERROR_MESSAGE();UPDATE TBLCONTROLPROCESO SET IIDESTADO=25,VCDETALLE=@VCMENSAJECONTROPROC+<str>+@VCMSJERROR+<str>,DFECHAFIN=GETDATE()WHERE NIDCONTROLPROCESO=@IIDCONTROLPROCESO AND NPERIODO=@NPERIODO RETURN END CATCH END GO
intercajas	[dbo].[spGetStaleFiles]	Information	UsingFunctionsOnWhereCondition	Using a function over a column in a where statement	Datediff	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SPGETSTALEFILES')IS NULL EXEC('CREATE PROCEDURE DBO.SPGETSTALEFILES AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SPGETSTALEFILES@ICODERROR INT=0 OUT,@VCMSJERROR VARCHAR(50)='OK'OUT AS BEGIN TRY BEGIN SELECT VCNOMBREARCHIVO FROM INTERCAJAS.DBO.TBLAFILIADOCABECERA WHERE DATEDIFF(YEAR,DFECHAING,GETDATE())<=5 SET@ICODERROR=0;SET@VCMSJERROR='OK';END END TRY BEGIN CATCH SET@ICODERROR=-1;SET@VCMSJERROR=ERROR_MESSAGE()END CATCH GO
intercajas	[dbo].[spListaArchivosSubidos]	Warning	OrderByWithAlias	Order By could be using column aliases	ORDER BY ARCHIVOS.DFECHAING	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPLISTAARCHIVOSSUBIDOS@IPERIODO INT,@IINSTITUCION INT,@VCTIPOARCHIVOS VARCHAR(2)AS DECLARE@IAA_HISTORICA INT,@IAD_HISTORICA INT,@IAR_HISTORICA INT,@ICC_HISTORICA INT,@ICD INT,@ICR INT,@ICC INT,@DFECHAREGISTRO AS DATETIME,@NPERIODOACTUAL NUMERIC(6,0),@NDIFPERIODO INT BEGIN SET NOCOUNT ON;SELECT@NPERIODOACTUAL=MAX(NPERIODO)FROM TBLPERIODO SELECT@NDIFPERIODO=((CONVERT(INT,@NPERIODOACTUAL)/100)-(@IPERIODO/100))*12+((CONVERT(INT,@NPERIODOACTUAL)%100)-(@IPERIODO%100))SET@IAA_HISTORICA=0 SET@IAD_HISTORICA=0 SET@IAR_HISTORICA=0 SET@ICC_HISTORICA=0 SET@ICD=0 SET@ICR=0 SET@ICC=0 IF@NDIFPERIODO>0 BEGIN SET@IAA_HISTORICA=1 SET@IAD_HISTORICA=1 SET@DFECHAREGISTRO=NULL SELECT@DFECHAREGISTRO=MAX(DFECHAREGISTRO)FROM TBLREGISTROCONSOLIDACION WHERE NPERIODO=@IPERIODO AND IIDESTADO=27 AND VCTIPOCONSOLIDACION=<str>IF@DFECHAREGISTRO IS NOT NULL SET@ICD=1 END IF@NDIFPERIODO>2 BEGIN SET@IAR_HISTORICA=1 SET@DFECHAREGISTRO=NULL SELECT@DFECHAREGISTRO=MAX(DFECHAREGISTRO)FROM TBLREGISTROCONSOLIDACION WHERE NPERIODO=@IPERIODO AND IIDESTADO=27 AND VCTIPOCONSOLIDACION=<str>IF@DFECHAREGISTRO IS NOT NULL SET@ICR=1 END IF@NDIFPERIODO>1 BEGIN SET@ICC_HISTORICA=1 SET@DFECHAREGISTRO=NULL SELECT@DFECHAREGISTRO=MAX(DFECHAREGISTRO)FROM TBLREGISTROCONSOLIDACION WHERE NPERIODO=@IPERIODO AND IIDESTADO=27 AND VCTIPOCONSOLIDACION=<str>IF@DFECHAREGISTRO IS NOT NULL SET@ICC=1 END SELECT*FROM(SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLAFILIADOCABECERA.NPERIODO AS PERIODO,TBLAFILIADOCABECERA.ICORRELATIVO AS CORRELATIVO,TBLAFILIADOCABECERA.VCNOMBREARCHIVO,TBLAFILIADOCABECERA.DFECHAING,TBLAFILIADOCABECERA.NTOTALREGISTROS,TBLAFILIADOCABECERA.IRUTUSUARIOENV,TBLAFILIADOCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLAFILIADOCABECERA.NIDINSTITUCION,COUNT(TBLAFILIADOERROR.NNUMREGISTRO)AS NERRORES,TBLAFILIADOCABECERA.NTOTALREGISTROS-COUNT(TBLAFILIADOERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLAFILIADOCABECERA.NTOTALREGISTROS>0 THEN 1.0*COUNT(TBLAFILIADOERROR.NNUMREGISTRO)/TBLAFILIADOCABECERA.NTOTALREGISTROS*1.0 ELSE 0 END AS PORCENTAJE_ERROR,TBLAFILIADOCABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLAFILIADOCABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLAFILIADOCABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLAFILIADOCABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLAFILIADOERROR ON TBLAFILIADOCABECERA.NIDINSTITUCION=TBLAFILIADOERROR.NIDINSTITUCION AND TBLAFILIADOCABECERA.NPERIODO=TBLAFILIADOERROR.NPERIODO AND TBLAFILIADOCABECERA.ICORRELATIVO=TBLAFILIADOERROR.ICORRELATIVO WHERE((TBLAFILIADOCABECERA.NPERIODO=@IPERIODO)AND(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLAFILIADOCABECERA.NIDINSTITUCION=@IINSTITUCION)OR(TBLAFILIADOCABECERA.NPERIODO=@IPERIODO)AND(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(@IINSTITUCION=0))AND@IAA_HISTORICA=0 GROUP BY TBLAFILIADOCABECERA.ICORRELATIVO,TBLAFILIADOCABECERA.NPERIODO,TBLAFILIADOCABECERA.VCNOMBREARCHIVO,TBLAFILIADOCABECERA.DFECHAING,TBLAFILIADOCABECERA.NTOTALREGISTROS,TBLAFILIADOCABECERA.IRUTUSUARIOENV,TBLAFILIADOCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLAFILIADOCABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLAFILIADOCABECERA.VCLINKERROR UNION ALL SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLAFILIADOCABECERA.NPERIODO AS PERIODO,TBLAFILIADOCABECERA.ICORRELATIVO AS CORRELATIVO,TBLAFILIADOCABECERA.VCNOMBREARCHIVO,TBLAFILIADOCABECERA.DFECHAING,TBLAFILIADOCABECERA.NTOTALREGISTROS,TBLAFILIADOCABECERA.IRUTUSUARIOENV,TBLAFILIADOCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLAFILIADOCABECERA.NIDINSTITUCION,COUNT(TBLHISTAFILIADOERROR.NNUMREGISTRO)AS NERRORES,TBLAFILIADOCABECERA.NTOTALREGISTROS-COUNT(TBLHISTAFILIADOERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLAFILIADOCABECERA.NTOTALREGISTROS>0 THEN 1.0*COUNT(TBLHISTAFILIADOERROR.NNUMREGISTRO)/TBLAFILIADOCABECERA.NTOTALREGISTROS*1.0 ELSE 0 END AS PORCENTAJE_ERROR,TBLAFILIADOCABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLAFILIADOCABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLAFILIADOCABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLAFILIADOCABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLHISTAFILIADOERROR ON TBLAFILIADOCABECERA.NIDINSTITUCION=TBLHISTAFILIADOERROR.NIDINSTITUCION AND TBLAFILIADOCABECERA.NPERIODO=TBLHISTAFILIADOERROR.NPERIODO AND TBLAFILIADOCABECERA.ICORRELATIVO=TBLHISTAFILIADOERROR.ICORRELATIVO INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLAFILIADOCABECERA.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLAFILIADOCABECERA.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLAFILIADOCABECERA.ICORRELATIVO WHERE((TBLAFILIADOCABECERA.NPERIODO=@IPERIODO)AND(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLAFILIADOCABECERA.NIDINSTITUCION=@IINSTITUCION)OR(TBLAFILIADOCABECERA.NPERIODO=@IPERIODO)AND(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(@IINSTITUCION=0))AND@IAA_HISTORICA=1 AND@ICD=1 GROUP BY TBLAFILIADOCABECERA.ICORRELATIVO,TBLAFILIADOCABECERA.NPERIODO,TBLAFILIADOCABECERA.VCNOMBREARCHIVO,TBLAFILIADOCABECERA.DFECHAING,TBLAFILIADOCABECERA.NTOTALREGISTROS,TBLAFILIADOCABECERA.IRUTUSUARIOENV,TBLAFILIADOCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLAFILIADOCABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLAFILIADOCABECERA.VCLINKERROR UNION ALL SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLDEUDACABECERA.NPERIODO AS PERIODO,TBLDEUDACABECERA.ICORRELATIVO AS CORRELATIVO,TBLDEUDACABECERA.VCNOMBREARCHIVO,TBLDEUDACABECERA.DFECHAING,TBLDEUDACABECERA.NTOTALREG,TBLDEUDACABECERA.IRUTUSUARIOENV,TBLDEUDACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLDEUDACABECERA.NIDINSTITUCION,COUNT(TBLDEUDAERROR.NNUMREGISTRO)AS NERRORES,TBLDEUDACABECERA.NTOTALREG-COUNT(TBLDEUDAERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLDEUDACABECERA.NTOTALREG>0 THEN 1.0*COUNT(TBLDEUDAERROR.NNUMREGISTRO)/TBLDEUDACABECERA.NTOTALREG ELSE 0 END AS PORCENTAJE_ERROR,TBLDEUDACABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLDEUDACABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLDEUDACABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLDEUDACABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLDEUDAERROR ON TBLDEUDACABECERA.NIDINSTITUCION=TBLDEUDAERROR.NINSTITUCION AND TBLDEUDACABECERA.NPERIODO=TBLDEUDAERROR.NPERIODO AND TBLDEUDACABECERA.ICORRELATIVO=TBLDEUDAERROR.ICORRELATIVO WHERE((@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLDEUDACABECERA.NPERIODO=@IPERIODO)AND(TBLDEUDACABECERA.NIDINSTITUCION=@IINSTITUCION)OR(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(@IINSTITUCION=0)AND(TBLDEUDACABECERA.NPERIODO=@IPERIODO))AND@IAD_HISTORICA=0 GROUP BY TBLDEUDACABECERA.ICORRELATIVO,TBLDEUDACABECERA.NPERIODO,TBLDEUDACABECERA.VCNOMBREARCHIVO,TBLDEUDACABECERA.DFECHAING,TBLDEUDACABECERA.NTOTALREG,TBLDEUDACABECERA.IRUTUSUARIOENV,TBLDEUDACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLDEUDACABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLDEUDACABECERA.VCLINKERROR UNION ALL SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLDEUDACABECERA.NPERIODO AS PERIODO,TBLDEUDACABECERA.ICORRELATIVO AS CORRELATIVO,TBLDEUDACABECERA.VCNOMBREARCHIVO,TBLDEUDACABECERA.DFECHAING,TBLDEUDACABECERA.NTOTALREG,TBLDEUDACABECERA.IRUTUSUARIOENV,TBLDEUDACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLDEUDACABECERA.NIDINSTITUCION,COUNT(TBLHISTDEUDAERROR.NNUMREGISTRO)AS NERRORES,TBLDEUDACABECERA.NTOTALREG-COUNT(TBLHISTDEUDAERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLDEUDACABECERA.NTOTALREG>0 THEN 1.0*COUNT(TBLHISTDEUDAERROR.NNUMREGISTRO)/TBLDEUDACABECERA.NTOTALREG ELSE 0 END AS PORCENTAJE_ERROR,TBLDEUDACABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLDEUDACABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLDEUDACABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLDEUDACABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLHISTDEUDAERROR ON TBLDEUDACABECERA.NIDINSTITUCION=TBLHISTDEUDAERROR.NINSTITUCION AND TBLDEUDACABECERA.NPERIODO=TBLHISTDEUDAERROR.NPERIODO AND TBLDEUDACABECERA.ICORRELATIVO=TBLHISTDEUDAERROR.ICORRELATIVO INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLDEUDACABECERA.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLDEUDACABECERA.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLDEUDACABECERA.ICORRELATIVO WHERE((@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLDEUDACABECERA.NPERIODO=@IPERIODO)AND(TBLDEUDACABECERA.NIDINSTITUCION=@IINSTITUCION)OR(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(@IINSTITUCION=0)AND(TBLDEUDACABECERA.NPERIODO=@IPERIODO))AND@IAD_HISTORICA=1 AND@ICD=1 GROUP BY TBLDEUDACABECERA.ICORRELATIVO,TBLDEUDACABECERA.NPERIODO,TBLDEUDACABECERA.VCNOMBREARCHIVO,TBLDEUDACABECERA.DFECHAING,TBLDEUDACABECERA.NTOTALREG,TBLDEUDACABECERA.IRUTUSUARIOENV,TBLDEUDACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLDEUDACABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLDEUDACABECERA.VCLINKERROR UNION ALL SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLRECAUDACIONCABECERA.NPERIODO AS PERIODO,TBLRECAUDACIONCABECERA.ICORRELATIVO AS CORRELATIVO,TBLRECAUDACIONCABECERA.VCNOMBREARCHIVO,TBLRECAUDACIONCABECERA.DFECHAINGRESO,TBLRECAUDACIONCABECERA.NTOTALREGISTROS,TBLRECAUDACIONCABECERA.IRUTUSUARIOENV,TBLRECAUDACIONCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLRECAUDACIONCABECERA.NIDINSTITUCION,COUNT(TBLRECAUDACIONERROR.NNUMREGISTRO)AS NERRORES,TBLRECAUDACIONCABECERA.NTOTALREGISTROS-COUNT(TBLRECAUDACIONERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLRECAUDACIONCABECERA.NTOTALREGISTROS>0 THEN 1.0*COUNT(TBLRECAUDACIONERROR.NNUMREGISTRO)/TBLRECAUDACIONCABECERA.NTOTALREGISTROS ELSE 0 END AS PORCENTAJE_ERROR,TBLRECAUDACIONCABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLRECAUDACIONCABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLRECAUDACIONCABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLRECAUDACIONCABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLRECAUDACIONERROR ON TBLRECAUDACIONCABECERA.NIDINSTITUCION=TBLRECAUDACIONERROR.NIDINSTITUCION AND TBLRECAUDACIONCABECERA.NPERIODO=TBLRECAUDACIONERROR.NPERIODO AND TBLRECAUDACIONCABECERA.ICORRELATIVO=TBLRECAUDACIONERROR.ICORRELATIVO WHERE((@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLRECAUDACIONCABECERA.NPERIODO=@IPERIODO)AND(TBLRECAUDACIONCABECERA.NIDINSTITUCION=@IINSTITUCION)OR(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLRECAUDACIONCABECERA.NPERIODO=@IPERIODO)AND(@IINSTITUCION=0))AND@IAR_HISTORICA=0 GROUP BY TBLRECAUDACIONCABECERA.ICORRELATIVO,TBLRECAUDACIONCABECERA.NPERIODO,TBLRECAUDACIONCABECERA.VCNOMBREARCHIVO,TBLRECAUDACIONCABECERA.DFECHAINGRESO,TBLRECAUDACIONCABECERA.NTOTALREGISTROS,TBLRECAUDACIONCABECERA.IRUTUSUARIOENV,TBLRECAUDACIONCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLRECAUDACIONCABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLRECAUDACIONCABECERA.VCLINKERROR UNION ALL SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLRECAUDACIONCABECERA.NPERIODO AS PERIODO,TBLRECAUDACIONCABECERA.ICORRELATIVO AS CORRELATIVO,TBLRECAUDACIONCABECERA.VCNOMBREARCHIVO,TBLRECAUDACIONCABECERA.DFECHAINGRESO,TBLRECAUDACIONCABECERA.NTOTALREGISTROS,TBLRECAUDACIONCABECERA.IRUTUSUARIOENV,TBLRECAUDACIONCABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLRECAUDACIONCABECERA.NIDINSTITUCION,COUNT(TBLHISTRECAUDACIONERROR.NNUMREGISTRO)AS NERRORES,TBLRECAUDACIONCABECERA.NTOTALREGISTROS-COUNT(TBLHISTRECAUDACIONERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLRECAUDACIONCABECERA.NTOTALREGISTROS>0 THEN 1.0*COUNT(TBLHISTRECAUDACIONERROR.NNUMREGISTRO)/TBLRECAUDACIONCABECERA.NTOTALREGISTROS ELSE 0 END AS PORCENTAJE_ERROR,TBLRECAUDACIONCABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLRECAUDACIONCABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLRECAUDACIONCABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLRECAUDACIONCABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLHISTRECAUDACIONERROR ON TBLRECAUDACIONCABECERA.NIDINSTITUCION=TBLHISTRECAUDACIONERROR.NIDINSTITUCION AND TBLRECAUDACIONCABECERA.NPERIODO=TBLHISTRECAUDACIONERROR.NPERIODO AND TBLRECAUDACIONCABECERA.ICORRELATIVO=TBLHISTRECAUDACIONERROR.ICORRELATIVO INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLRECAUDACIONCABECERA.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLRECAUDACIONCABECERA.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLRECAUDACIONCABECERA.ICORRELATIVO WHERE((@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLRECAUDACIONCABECERA.NPERIODO=@IPERIODO)AND(TBLRECAUDACIONCABECERA.NIDINSTITUCION=@IINSTITUCION)OR(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<strstr>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLCARTERACOMPRADACABECERA.NPERIODO AS PERIODO,TBLCARTERACOMPRADACABECERA.ICORRELATIVO AS CORRELATIVO,TBLCARTERACOMPRADACABECERA.VCNOMBREARCHIVO,TBLCARTERACOMPRADACABECERA.DFECHAINGRESO,TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS,TBLCARTERACOMPRADACABECERA.IRUTUSUARIOENV,TBLCARTERACOMPRADACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLCARTERACOMPRADACABECERA.NIDINSTITUCION,COUNT(TBLCARTERACOMPRADAERROR.NNUMREGISTRO)AS NERRORES,TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS-COUNT(TBLCARTERACOMPRADAERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS>0 THEN 1.0*COUNT(TBLCARTERACOMPRADAERROR.NNUMREGISTRO)/TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS ELSE 0 END AS PORCENTAJE_ERROR,TBLCARTERACOMPRADACABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLCARTERACOMPRADACABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLCARTERACOMPRADACABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLCARTERACOMPRADACABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLCARTERACOMPRADAERROR ON TBLCARTERACOMPRADACABECERA.NIDINSTITUCION=TBLCARTERACOMPRADAERROR.NIDINSTITUCION AND TBLCARTERACOMPRADACABECERA.NPERIODO=TBLCARTERACOMPRADAERROR.NPERIODO AND TBLCARTERACOMPRADACABECERA.ICORRELATIVO=TBLCARTERACOMPRADAERROR.ICORRELATIVO WHERE((@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLCARTERACOMPRADACABECERA.NPERIODO=@IPERIODO)AND(TBLCARTERACOMPRADACABECERA.NIDINSTITUCION=@IINSTITUCION)OR(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLCARTERACOMPRADACABECERA.NPERIODO=@IPERIODO)AND(@IINSTITUCION=0))AND@ICC_HISTORICA=0 GROUP BY TBLCARTERACOMPRADACABECERA.ICORRELATIVO,TBLCARTERACOMPRADACABECERA.NPERIODO,TBLCARTERACOMPRADACABECERA.VCNOMBREARCHIVO,TBLCARTERACOMPRADACABECERA.DFECHAINGRESO,TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS,TBLCARTERACOMPRADACABECERA.IRUTUSUARIOENV,TBLCARTERACOMPRADACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLCARTERACOMPRADACABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLCARTERACOMPRADACABECERA.VCLINKERROR UNION ALL SELECT<str>AS TIPO_ARCHIVO,<str>AS TIPARCH,TBLCARTERACOMPRADACABECERA.NPERIODO AS PERIODO,TBLCARTERACOMPRADACABECERA.ICORRELATIVO AS CORRELATIVO,TBLCARTERACOMPRADACABECERA.VCNOMBREARCHIVO,TBLCARTERACOMPRADACABECERA.DFECHAINGRESO,TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS,TBLCARTERACOMPRADACABECERA.IRUTUSUARIOENV,TBLCARTERACOMPRADACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLCARTERACOMPRADACABECERA.NIDINSTITUCION,COUNT(TBLHISTCARTERACOMPRADAERROR.NNUMREGISTRO)AS NERRORES,TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS-COUNT(TBLHISTCARTERACOMPRADAERROR.NNUMREGISTRO)AS EXITOSOS,CASE WHEN TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS>0 THEN 1.0*COUNT(TBLHISTCARTERACOMPRADAERROR.NNUMREGISTRO)/TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS ELSE 0 END AS PORCENTAJE_ERROR,TBLCARTERACOMPRADACABECERA.VCLINKERROR,TBLINSTITUCION.VCNOMBRECORTO FROM TBLINSTITUCION INNER JOIN TBLCARTERACOMPRADACABECERA ON TBLINSTITUCION.NIDINSTITUCION=TBLCARTERACOMPRADACABECERA.NIDINSTITUCION INNER JOIN TBLESTADO ON TBLCARTERACOMPRADACABECERA.IIDESTADO=TBLESTADO.IIDESTADO LEFT OUTER JOIN TBLHISTCARTERACOMPRADAERROR ON TBLCARTERACOMPRADACABECERA.NIDINSTITUCION=TBLHISTCARTERACOMPRADAERROR.NIDINSTITUCION AND TBLCARTERACOMPRADACABECERA.NPERIODO=TBLHISTCARTERACOMPRADAERROR.NPERIODO AND TBLCARTERACOMPRADACABECERA.ICORRELATIVO=TBLHISTCARTERACOMPRADAERROR.ICORRELATIVO INNER JOIN VWULTIMOARCHIVOENVIADOVALIDADO ON VWULTIMOARCHIVOENVIADOVALIDADO.TIPOARCHIVO=<str>AND VWULTIMOARCHIVOENVIADOVALIDADO.NPERIODO=TBLCARTERACOMPRADACABECERA.NPERIODO AND VWULTIMOARCHIVOENVIADOVALIDADO.NIDINSTITUCION=TBLCARTERACOMPRADACABECERA.NIDINSTITUCION AND VWULTIMOARCHIVOENVIADOVALIDADO.ICORRELATIVO=TBLCARTERACOMPRADACABECERA.ICORRELATIVO WHERE((@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLCARTERACOMPRADACABECERA.NPERIODO=@IPERIODO)AND(TBLCARTERACOMPRADACABECERA.NIDINSTITUCION=@IINSTITUCION)OR(@VCTIPOARCHIVOS=<str>OR@VCTIPOARCHIVOS=<str>)AND(TBLCARTERACOMPRADACABECERA.NPERIODO=@IPERIODO)AND(@IINSTITUCION=0))AND@ICC_HISTORICA=1 AND@ICC=1 GROUP BY TBLCARTERACOMPRADACABECERA.ICORRELATIVO,TBLCARTERACOMPRADACABECERA.NPERIODO,TBLCARTERACOMPRADACABECERA.VCNOMBREARCHIVO,TBLCARTERACOMPRADACABECERA.DFECHAINGRESO,TBLCARTERACOMPRADACABECERA.NTOTALREGISTROS,TBLCARTERACOMPRADACABECERA.IRUTUSUARIOENV,TBLCARTERACOMPRADACABECERA.IIDESTADO,TBLESTADO.VCESTADO,TBLCARTERACOMPRADACABECERA.NIDINSTITUCION,TBLINSTITUCION.VCNOMBRECORTO,TBLCARTERACOMPRADACABECERA.VCLINKERROR)ARCHIVOS ORDER BY ARCHIVOS.DFECHAING DESC END GO
intercajas	[dbo].[spListaInstituciones]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY TBL.ORDEN,TBL.VCNOMBRE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPLISTAINSTITUCIONES@IINSTITUCION_CONSULTANTE INT AS BEGIN IF@IINSTITUCION_CONSULTANTE=0 BEGIN SET NOCOUNT ON;SELECT 0 AS ORDEN,0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP 1000 1 AS ORDEN,NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(BPARTICIPA=1)AND(IIDESTADO=11)ORDER BY ORDEN,VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-1 BEGIN SET NOCOUNT ON;SELECT 0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP(1000)NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(IIDESTADO=11)ORDER BY VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-2 BEGIN SET NOCOUNT ON;SELECT TOP(1000)NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(BPARTICIPA=1 AND IIDESTADO=11)ORDER BY VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-3 BEGIN SET NOCOUNT ON;SELECT NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM(SELECT 0 AS ORDEN,0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP(1000)1 AS ORDEN,NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION ORDER BY VCNOMBRE UNION SELECT 2 AS ORDEN,-1 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO)TBL ORDER BY TBL.ORDEN,TBL.VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-4 BEGIN SET NOCOUNT ON;SELECT NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM(SELECT 0 AS ORDEN,0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP(1000)1 AS ORDEN,NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(BPARTICIPA=1 AND IIDESTADO=11)ORDER BY VCNOMBRE)TBL ORDER BY TBL.ORDEN,TBL.VCNOMBRE END ELSE BEGIN SET NOCOUNT ON;SELECT TOP(1000)NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(IIDESTADO=11)AND(NIDINSTITUCION=@IINSTITUCION_CONSULTANTE);END END GO
intercajas	[dbo].[spListaInstituciones]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY TBL.ORDEN,TBL.VCNOMBRE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SPLISTAINSTITUCIONES@IINSTITUCION_CONSULTANTE INT AS BEGIN IF@IINSTITUCION_CONSULTANTE=0 BEGIN SET NOCOUNT ON;SELECT 0 AS ORDEN,0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP 1000 1 AS ORDEN,NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(BPARTICIPA=1)AND(IIDESTADO=11)ORDER BY ORDEN,VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-1 BEGIN SET NOCOUNT ON;SELECT 0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP(1000)NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(IIDESTADO=11)ORDER BY VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-2 BEGIN SET NOCOUNT ON;SELECT TOP(1000)NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(BPARTICIPA=1 AND IIDESTADO=11)ORDER BY VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-3 BEGIN SET NOCOUNT ON;SELECT NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM(SELECT 0 AS ORDEN,0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP(1000)1 AS ORDEN,NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION ORDER BY VCNOMBRE UNION SELECT 2 AS ORDEN,-1 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO)TBL ORDER BY TBL.ORDEN,TBL.VCNOMBRE END ELSE IF@IINSTITUCION_CONSULTANTE=-4 BEGIN SET NOCOUNT ON;SELECT NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM(SELECT 0 AS ORDEN,0 AS NIDINSTITUCION,0 AS IIDSCF,<str>AS VCNOMBRE,<str>AS VCNOMBRECORTO,0 AS BPARTICIPA,0 AS IIDESTADO UNION SELECT TOP(1000)1 AS ORDEN,NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(BPARTICIPA=1 AND IIDESTADO=11)ORDER BY VCNOMBRE)TBL ORDER BY TBL.ORDEN,TBL.VCNOMBRE END ELSE BEGIN SET NOCOUNT ON;SELECT TOP(1000)NIDINSTITUCION,IIDSCF,VCNOMBRE,VCNOMBRECORTO,BPARTICIPA,IIDESTADO FROM INTERCAJAS.TBLINSTITUCION WHERE(IIDESTADO=11)AND(NIDINSTITUCION=@IINSTITUCION_CONSULTANTE);END END GO
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblAfiliadoDetalle.nIdInstitucion, ; ; ; tblAfiliadoDetalle.nPeriodo, ; ; ; tblAfiliadoDetalle.iCorrelativo, ; ; ; tblAfiliadoDetalle.vcIdentificadorAfiliado, ; ; ; tblAfiliadoDetalle.tIdTipoIdentificador	SELECT TOP(@ITAMANOBLOQUEELIMINAR)TBLAFILIADODETALLE.NIDINSTITUCION,TBLAFILIADODETALLE.NPERIODO,@DFECHAREGISTRO,TBLAFILIADODETALLE.ICORRELATIVO,TBLAFILIADODETALLE.VCIDENTIFICADORAFILIADO,TBLAFILIADODETALLE.TIDTIPOIDENTIFICADOR,TBLAFILIADODETALLE.VCNOMBREAFILIADO,TBLAFILIADODETALLE.TIDTIPOAFILIADO,TBLAFILIADODETALLE.NFECHAAFILIACION,TBLAFILIADODETALLE.VCRUTEMPRESA,TBLAFILIADODETALLE.NRENTAIMPONIBLE,TBLAFILIADODETALLE.VBRENTAIMPONIBLE FROM TBLAFILIADODETALLE INNER JOIN TBLAFILIADOCABECERA ON TBLAFILIADODETALLE.NIDINSTITUCION=TBLAFILIADOCABECERA.NIDINSTITUCION AND TBLAFILIADODETALLE.NPERIODO=TBLAFILIADOCABECERA.NPERIODO AND TBLAFILIADODETALLE.ICORRELATIVO=TBLAFILIADOCABECERA.ICORRELATIVO WHERE(TBLAFILIADODETALLE.NPERIODO=@IPERIODOARESPALDAR)AND(TBLAFILIADOCABECERA.IIDESTADO=15)ORDER BY TBLAFILIADODETALLE.NIDINSTITUCION,TBLAFILIADODETALLE.NPERIODO,TBLAFILIADODETALLE.ICORRELATIVO,TBLAFILIADODETALLE.VCIDENTIFICADORAFILIADO,TBLAFILIADODETALLE.TIDTIPOIDENTIFICADOR
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblAfiliadoError.nIdInstitucion, ; ; ; tblAfiliadoError.nPeriodo, ; ; ; tblAfiliadoError.iCorrelativo, ; ; ; tblAfiliadoError.nNumRegistro	SELECT TOP(@ITAMANOBLOQUEELIMINAR)TBLAFILIADOERROR.NIDINSTITUCION,TBLAFILIADOERROR.NPERIODO,@DFECHAREGISTRO,TBLAFILIADOERROR.ICORRELATIVO,TBLAFILIADOERROR.NNUMREGISTRO,TBLAFILIADOERROR.TXCODIGOERROR,TBLAFILIADOERROR.VCREDDAT FROM TBLAFILIADOERROR INNER JOIN TBLAFILIADOCABECERA ON TBLAFILIADOERROR.NIDINSTITUCION=TBLAFILIADOCABECERA.NIDINSTITUCION AND TBLAFILIADOERROR.NPERIODO=TBLAFILIADOCABECERA.NPERIODO AND TBLAFILIADOERROR.ICORRELATIVO=TBLAFILIADOCABECERA.ICORRELATIVO WHERE(TBLAFILIADOERROR.NPERIODO=@IPERIODOARESPALDAR)AND(TBLAFILIADOCABECERA.IIDESTADO=15)ORDER BY TBLAFILIADOERROR.NIDINSTITUCION,TBLAFILIADOERROR.NPERIODO,TBLAFILIADOERROR.ICORRELATIVO,TBLAFILIADOERROR.NNUMREGISTRO
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblDeudaDetalle.nIdInstitucion, ; ; ; tblDeudaDetalle.nPeriodo, ; ; ; tblDeudaDetalle.iCorrelativo, ; ; ; tblDeudaDetalle.vcNumPagare	SELECT TOP(@ITAMANOBLOQUEELIMINAR)TBLDEUDADETALLE.NIDINSTITUCION,TBLDEUDADETALLE.NPERIODO,@DFECHAREGISTRO,TBLDEUDADETALLE.ICORRELATIVO,VCIDENTIFICADORDEUDOR,TIDTIPOIDENTIFICADOR,VCNUMPAGARE,TIDTIPOAFILIADO,VCFECHACOLOCACION,VCFECHAPRIMERIMPAGO,NCAPITALINICIAL,NSALDOCAPITAL,VCRUTAVAL_1,VCRUTAVAL_2,VCRUTAVAL_3,VCTIPODEUDA,NMONTOCOBRAR,NMONTOOFERTACOLOCACION,VCEMPLANILLADO FROM TBLDEUDADETALLE INNER JOIN TBLDEUDACABECERA ON TBLDEUDADETALLE.NIDINSTITUCION=TBLDEUDACABECERA.NIDINSTITUCION AND TBLDEUDADETALLE.NPERIODO=TBLDEUDACABECERA.NPERIODO AND TBLDEUDADETALLE.ICORRELATIVO=TBLDEUDACABECERA.ICORRELATIVO WHERE(TBLDEUDADETALLE.NPERIODO=@IPERIODOARESPALDAR)AND(TBLDEUDACABECERA.IIDESTADO=15)ORDER BY TBLDEUDADETALLE.NIDINSTITUCION,TBLDEUDADETALLE.NPERIODO,TBLDEUDADETALLE.ICORRELATIVO,TBLDEUDADETALLE.VCNUMPAGARE
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblDeudaError.nInstitucion, ; ; ; tblDeudaError.nPeriodo, ; ; ; tblDeudaError.iCorrelativo, ; ; ; tblDeudaError.nNumRegistro	SELECT TOP(@ITAMANOBLOQUEELIMINAR)NINSTITUCION,TBLDEUDAERROR.NPERIODO,@DFECHAREGISTRO,TBLDEUDAERROR.ICORRELATIVO,NNUMREGISTRO,TXCODIGOERROR,VCREDDAT FROM TBLDEUDAERROR INNER JOIN TBLDEUDACABECERA ON TBLDEUDAERROR.NINSTITUCION=TBLDEUDACABECERA.NIDINSTITUCION AND TBLDEUDAERROR.NPERIODO=TBLDEUDACABECERA.NPERIODO AND TBLDEUDAERROR.ICORRELATIVO=TBLDEUDACABECERA.ICORRELATIVO WHERE(TBLDEUDAERROR.NPERIODO=@IPERIODOARESPALDAR)AND(TBLDEUDACABECERA.IIDESTADO=15)ORDER BY TBLDEUDAERROR.NINSTITUCION,TBLDEUDAERROR.NPERIODO,TBLDEUDAERROR.ICORRELATIVO,TBLDEUDAERROR.NNUMREGISTRO
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblCarteraCompradaDetalle.nIdInstitucion, ; ; ; tblCarteraCompradaDetalle.nPeriodo, ; ; ; tblCarteraCompradaDetalle.iCorrelativo, ; ; ; tblCarteraCompradaDetalle.vcIdentificadorDeudor, ; ; ; tblCarteraCompradaDetalle.tIdTipoIdentificador	SELECT TOP(@ITAMANOBLOQUEELIMINAR)TBLCARTERACOMPRADADETALLE.NIDINSTITUCION,TBLCARTERACOMPRADADETALLE.NPERIODO,@DFECHAREGISTRO_1,TBLCARTERACOMPRADADETALLE.ICORRELATIVO,TBLCARTERACOMPRADADETALLE.NIDCAJAORIGEN,TBLCARTERACOMPRADADETALLE.VCNUMPAGARE,TBLCARTERACOMPRADADETALLE.VCRUTEMPRESA,TBLCARTERACOMPRADADETALLE.VCIDENTIFICADORDEUDOR,TBLCARTERACOMPRADADETALLE.TIDTIPOIDENTIFICADOR,TBLCARTERACOMPRADADETALLE.VCNOMBREDEUDOR,TBLCARTERACOMPRADADETALLE.TIDTIPOAFILIADO,TBLCARTERACOMPRADADETALLE.VCRUTAVAL,TBLCARTERACOMPRADADETALLE.CSUJETODESCUENTO,TBLCARTERACOMPRADADETALLE.NMONTOPAGADO,TBLCARTERACOMPRADADETALLE.VCFECHAPAGO,TBLCARTERACOMPRADADETALLE.VCTIPODEUDA FROM TBLCARTERACOMPRADADETALLE INNER JOIN TBLCARTERACOMPRADACABECERA ON TBLCARTERACOMPRADADETALLE.NIDINSTITUCION=TBLCARTERACOMPRADACABECERA.NIDINSTITUCION AND TBLCARTERACOMPRADADETALLE.NPERIODO=TBLCARTERACOMPRADACABECERA.NPERIODO AND TBLCARTERACOMPRADADETALLE.ICORRELATIVO=TBLCARTERACOMPRADACABECERA.ICORRELATIVO WHERE(TBLCARTERACOMPRADADETALLE.NPERIODO=@IPERIODOARESPALDAR_1)AND(TBLCARTERACOMPRADACABECERA.IIDESTADO=15)ORDER BY TBLCARTERACOMPRADADETALLE.NIDINSTITUCION,TBLCARTERACOMPRADADETALLE.NPERIODO,TBLCARTERACOMPRADADETALLE.ICORRELATIVO,TBLCARTERACOMPRADADETALLE.VCIDENTIFICADORDEUDOR,TBLCARTERACOMPRADADETALLE.TIDTIPOIDENTIFICADOR
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblCarteraCompradaError.nIdInstitucion, ; ; ; tblCarteraCompradaError.nPeriodo, ; ; ; tblCarteraCompradaError.iCorrelativo	SELECT TOP(@ITAMANOBLOQUEELIMINAR)TBLCARTERACOMPRADAERROR.NIDINSTITUCION,TBLCARTERACOMPRADAERROR.NPERIODO,@DFECHAREGISTRO_1,TBLCARTERACOMPRADAERROR.ICORRELATIVO,TBLCARTERACOMPRADAERROR.NNUMREGISTRO,TBLCARTERACOMPRADAERROR.TXCODIGOERROR,TBLCARTERACOMPRADAERROR.VCREDDAT FROM TBLCARTERACOMPRADAERROR INNER JOIN TBLCARTERACOMPRADACABECERA ON TBLCARTERACOMPRADAERROR.NIDINSTITUCION=TBLCARTERACOMPRADACABECERA.NIDINSTITUCION AND TBLCARTERACOMPRADAERROR.NPERIODO=TBLCARTERACOMPRADACABECERA.NPERIODO AND TBLCARTERACOMPRADAERROR.ICORRELATIVO=TBLCARTERACOMPRADACABECERA.ICORRELATIVO WHERE TBLCARTERACOMPRADAERROR.NPERIODO=@IPERIODOARESPALDAR_1 AND TBLCARTERACOMPRADACABECERA.IIDESTADO=15 ORDER BY TBLCARTERACOMPRADAERROR.NIDINSTITUCION,TBLCARTERACOMPRADAERROR.NPERIODO,TBLCARTERACOMPRADAERROR.ICORRELATIVO
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblRecaudacionDetalle.nIdInstitucion, ; ; ; tblRecaudacionDetalle.nPeriodo, ; ; ; tblRecaudacionDetalle.iCorrelativo, ; ; ; tblRecaudacionDetalle.nIdCajaOrigen, ; ; ; tblRecaudacionDetalle.vcNumPagare	SELECT TOP(@ITAMANOBLOQUEELIMINAR)TBLRECAUDACIONDETALLE.NIDINSTITUCION,TBLRECAUDACIONDETALLE.NPERIODO,@DFECHAREGISTRO_2,TBLRECAUDACIONDETALLE.ICORRELATIVO,NIDCAJAORIGEN,VCNUMPAGARE,VCRUTEMPRESA,VCIDENTIFICADORDEUDOR,TIDTIPOIDENTIFICADOR,VCNOMBREDEUDOR,TIDTIPOAFILIADO,VCRUTAVAL,CSUJETODESCUENTO,NMONTOCOBRAR,NMONTOPAGADO,VCFECHAPAGO FROM TBLRECAUDACIONDETALLE INNER JOIN TBLRECAUDACIONCABECERA ON TBLRECAUDACIONDETALLE.NIDINSTITUCION=TBLRECAUDACIONCABECERA.NIDINSTITUCION AND TBLRECAUDACIONDETALLE.NPERIODO=TBLRECAUDACIONCABECERA.NPERIODO AND TBLRECAUDACIONDETALLE.ICORRELATIVO=TBLRECAUDACIONCABECERA.ICORRELATIVO WHERE(TBLRECAUDACIONDETALLE.NPERIODO=@IPERIODOARESPALDAR_2)AND(TBLRECAUDACIONCABECERA.IIDESTADO=15)ORDER BY TBLRECAUDACIONDETALLE.NIDINSTITUCION,TBLRECAUDACIONDETALLE.NPERIODO,TBLRECAUDACIONDETALLE.ICORRELATIVO,TBLRECAUDACIONDETALLE.NIDCAJAORIGEN,TBLRECAUDACIONDETALLE.VCNUMPAGARE
intercajas	[dbo].[spRespaldaDatosAHistorico]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	tblRecaudacionError.nIdInstitucion, ; ; ; tblRecaudacionError.nPeriodo, ; ; ; tblRecaudacionError.iCorrelativo, ; ; ; tblRecaudacionError.nNumRegistro	
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	MultiPartObjectName	Using 4 or 5 part names	'	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('[dbo].[dba_CopyLogins]') IS NULL EXEC('CREATE PROCEDURE [dbo].[dba_CopyLogins] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE [dbo].[dba_CopyLogins]@PartnerServer sysname, @Debug bit = 0 As Declare @MaxID int, @CurrID int, @SQL nvarchar(max), @LoginName sysname, @IsDisabled int, @Type char(1), @SID varbinary(85), @SIDString nvarchar(100), @PasswordHash varbinary(256), @PasswordHashString nvarchar(300), @RoleName sysname, @Machine sysname, @PermState nvarchar(60), @PermName sysname, @Class tinyint, @MajorID int, @ErrNumber int, @ErrSeverity int, @ErrState int, @ErrProcedure sysname, @ErrLine int, @ErrMsg nvarchar(2048)Declare @Logins Table (LoginID int identity(1, 1) not null primary key,      [Name] sysname not null,      [SID] varbinary(85) not null,      IsDisabled int not null,      [Type] char(1) not null,      PasswordHash varbinary(256) null)Declare @Roles Table (RoleID int identity(1, 1) not null primary key,     RoleName sysname not null,     LoginName sysname not null)Declare @Perms Table (PermID int identity(1, 1) not null primary key,     LoginName sysname not null,     PermState nvarchar(60) not null,     PermName sysname not null,     Class tinyint not null,     ClassDesc nvarchar(60) not null,     MajorID int not null,     SubLoginName sysname null,     SubEndPointName sysname null)Set NoCount On;If CharIndex('\', @PartnerServer) > 0 Begin Set @Machine = LEFT(@PartnerServer, CharIndex('\', @PartnerServer) - 1);End Else Begin Set @Machine = @PartnerServer;End Set @SQL = 'Select P.name, P.sid, P.is_disabled, P.type, L.password_hash' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.sql_logins L On L.principal_id = P.principal_id' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;';Insert Into @Logins (Name, SID, IsDisabled, Type, PasswordHash)Exec sp_executesql @SQL;Set @SQL = 'Select RoleP.name, LoginP.name' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_role_members RM' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals RoleP' +  CHAR(10) + char(9) + 'On RoleP.principal_id = RM.role_principal_id' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals LoginP' +  CHAR(10) + char(9) + 'On LoginP.principal_id = RM.member_principal_id' + CHAR(10) +  'Where LoginP.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And LoginP.name <> ''sa''' + CHAR(10) +  'And LoginP.name Not Like ''##%''' + CHAR(10) +  'And RoleP.type = ''R''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', LoginP.name) = 0;';Insert Into @Roles (RoleName, LoginName)Exec sp_executesql @SQL;Set @SQL = 'Select P.name Collate database_default,' + CHAR(10) +  ' SP.state_desc, SP.permission_name, SP.class, SP.class_desc, SP.major_id,' + CHAR(10) +  ' SubP.name Collate database_default,' + CHAR(10) +  ' SubEP.name Collate database_default' + CHAR(10) +  'From ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals P' + CHAR(10) +  'Inner Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_permissions SP' + CHAR(10) +  CHAR(9) + 'On SP.grantee_principal_id = P.principal_id' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.server_principals SubP' + CHAR(10) +  CHAR(9) + 'On SubP.principal_id = SP.major_id And SP.class = 101' + CHAR(10) +  'Left Join ' + QUOTENAME(@PartnerServer) + '.master.sys.endpoints SubEP' + CHAR(10) +  CHAR(9) + 'On SubEP.endpoint_id = SP.major_id And SP.class = 105' + CHAR(10) +  'Where P.type In (''U'', ''G'', ''S'')' + CHAR(10) +  'And P.name <> ''sa''' + CHAR(10) +  'And P.name Not Like ''##%''' + CHAR(10) +  'And CharIndex(''' + @Machine + '\'', P.name) = 0;'Insert Into @Perms (LoginName, PermState, PermName, Class, ClassDesc, MajorID, SubLoginName, SubEndPointName)Exec sp_executesql @SQL;Select @MaxID = Max(LoginID), @CurrID = 1 From @Logins;While @CurrID <= @MaxID Begin Select @LoginName = Name,  @IsDisabled = IsDisabled,  @Type = [Type],  @SID = [SID],  @PasswordHash = PasswordHash From @Logins Where LoginID = @CurrID;  If Not Exists (Select 1 From sys.server_principals    Where name = @LoginName)   Begin  Set @SQL = 'Create Login ' + quotename(@LoginName)  If @Type In ('U', 'G')    Begin   Set @SQL = @SQL + ' From Windows;'    End  Else    Begin   Set @PasswordHashString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@PasswordHash"))', 'nvarchar(300)');      Set @SQL = @SQL + ' With Password = ' + @PasswordHashString + ' HASHED, ';      Set @SIDString = '0x' +    Cast('' As XML).value('xs:hexBinary(sql:variable("@SID"))', 'nvarchar(100)');   Set @SQL = @SQL + 'SID = ' + @SIDString + ';';    End  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End    If @IsDisabled = 1    Begin   Set @SQL = 'Alter Login ' + quotename(@LoginName) + ' Disable;'   If @Debug = 0     Begin    Begin Try     Exec sp_executesql @SQL;    End Try    Begin Catch     Set @ErrNumber = ERROR_NUMBER();     Set @ErrSeverity = ERROR_SEVERITY();     Set @ErrState = ERROR_STATE();     Set @ErrProcedure = ERROR_PROCEDURE();     Set @ErrLine = ERROR_LINE();     Set @ErrMsg = ERROR_MESSAGE();     RaisError(@ErrMsg, 1, 1);    End Catch     End   Else     Begin    Print @SQL;     End    End  End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(RoleID), @CurrID = 1 From @Roles;While @CurrID <= @MaxID Begin Select @LoginName = LoginName,  @RoleName = RoleName From @Roles Where RoleID = @CurrID; If Not Exists (Select 1 From sys.server_role_members RM    Inner Join sys.server_principals RoleP     On RoleP.principal_id = RM.role_principal_id    Inner Join sys.server_principals LoginP     On LoginP.principal_id = RM.member_principal_id    Where LoginP.type In ('U', 'G', 'S')    And RoleP.type = 'R'    And RoleP.name = @RoleName    And LoginP.name = @LoginName)   Begin  If @Debug = 0    Begin   Exec sp_addsrvrolemember @rolename = @RoleName,       @loginame = @LoginName;    End  Else    Begin   Print 'Exec sp_addsrvrolemember @rolename = ''' + @RoleName + ''',';   Print '  @loginame = ''' + @LoginName + ''';';    End   End Set @CurrID = @CurrID + 1;End Select @MaxID = Max(PermID), @CurrID = 1 From @Perms;While @CurrID <= @MaxID Begin Select @PermState = PermState,  @PermName = PermName,  @Class = Class,  @LoginName = LoginName,  @MajorID = MajorID,  @SQL = PermState + space(1) + PermName + SPACE(1) +   Case Class When 101 Then 'On Login::' + QUOTENAME(SubLoginName)     When 105 Then 'On ' + ClassDesc + '::' + QUOTENAME(SubEndPointName)     Else '' End +   ' To ' + QUOTENAME(LoginName) + ';' From @Perms Where PermID = @CurrID;  If Not Exists (Select 1 From sys.server_principals P    Inner Join sys.server_permissions SP On SP.grantee_principal_id = P.principal_id    Where SP.state_desc = @PermState    And SP.permission_name = @PermName    And SP.class = @Class    And P.name = @LoginName    And SP.major_id = @MajorID)   Begin  If @Debug = 0    Begin   Begin Try    Exec sp_executesql @SQL;   End Try   Begin Catch    Set @ErrNumber = ERROR_NUMBER();    Set @ErrSeverity = ERROR_SEVERITY();    Set @ErrState = ERROR_STATE();    Set @ErrProcedure = ERROR_PROCEDURE();    Set @ErrLine = ERROR_LINE();    Set @ErrMsg = ERROR_MESSAGE();    RaisError(@ErrMsg, 1, 1);   End Catch    End  Else    Begin   Print @SQL;    End   End Set @CurrID = @CurrID + 1;End Set NoCount Off;GO
master	[dbo].[dba_CopyLogins]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.DBA_COPYLOGINS')IS NULL EXEC('CREATE PROCEDURE DBO.DBA_COPYLOGINS AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBA_COPYLOGINS@PARTNERSERVER SYSNAME,@DEBUG BIT=0 AS DECLARE@MAXID INT,@CURRID INT,@SQL NVARCHAR(MAX),@LOGINNAME SYSNAME,@ISDISABLED INT,@TYPE CHAR(1),@SID VARBINARY(85),@SIDSTRING NVARCHAR(100),@PASSWORDHASH VARBINARY(256),@PASSWORDHASHSTRING NVARCHAR(300),@ROLENAME SYSNAME,@MACHINE SYSNAME,@PERMSTATE NVARCHAR(60),@PERMNAME SYSNAME,@CLASS TINYINT,@MAJORID INT,@ERRNUMBER INT,@ERRSEVERITY INT,@ERRSTATE INT,@ERRPROCEDURE SYSNAME,@ERRLINE INT,@ERRMSG NVARCHAR(2048)DECLARE@LOGINS TABLE(LOGINID INT IDENTITY(1,1)NOT NULL PRIMARY KEY,NAME SYSNAME NOT NULL,SID VARBINARY(85)NOT NULL,ISDISABLED INT NOT NULL,TYPE CHAR(1)NOT NULL,PASSWORDHASH VARBINARY(256)NULL)DECLARE@ROLES TABLE(ROLEID INT IDENTITY(1,1)NOT NULL PRIMARY KEY,ROLENAME SYSNAME NOT NULL,LOGINNAME SYSNAME NOT NULL)DECLARE@PERMS TABLE(PERMID INT IDENTITY(1,1)NOT NULL PRIMARY KEY,LOGINNAME SYSNAME NOT NULL,PERMSTATE NVARCHAR(60)NOT NULL,PERMNAME SYSNAME NOT NULL,CLASS TINYINT NOT NULL,CLASSDESC NVARCHAR(60)NOT NULL,MAJORID INT NOT NULL,SUBLOGINNAME SYSNAME NULL,SUBENDPOINTNAME SYSNAME NULL)SET NOCOUNT ON;IF CHARINDEX('\',@PARTNERSERVER)>0 BEGIN SET@MACHINE=LEFT(@PARTNERSERVER,CHARINDEX('\',@PARTNERSERVER)-1);END ELSE BEGIN SET@MACHINE=@PARTNERSERVER;END SET@SQL='SELECT P.NAME,P.SID,P.IS_DISABLED,P.TYPE,L.PASSWORD_HASH'+CHAR(10)+'FROM'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_PRINCIPALS P'+CHAR(10)+'LEFT JOIN'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SQL_LOGINS L ON L.PRINCIPAL_ID=P.PRINCIPAL_ID'+CHAR(10)+'WHERE P.TYPE IN(''U'',''G'',''S'')'+CHAR(10)+'AND P.NAME<>''SA'''+CHAR(10)+'AND P.NAME NOT LIKE''##%'''+CHAR(10)+'AND CHARINDEX('''+@MACHINE+'\'',P.NAME)=0;';INSERT INTO@LOGINS(NAME,SID,ISDISABLED,TYPE,PASSWORDHASH)EXEC SP_EXECUTESQL@SQL;SET@SQL='SELECT ROLEP.NAME,LOGINP.NAME'+CHAR(10)+'FROM'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_ROLE_MEMBERS RM'+CHAR(10)+'INNER JOIN'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_PRINCIPALS ROLEP'+CHAR(10)+CHAR(9)+'ON ROLEP.PRINCIPAL_ID=RM.ROLE_PRINCIPAL_ID'+CHAR(10)+'INNER JOIN'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_PRINCIPALS LOGINP'+CHAR(10)+CHAR(9)+'ON LOGINP.PRINCIPAL_ID=RM.MEMBER_PRINCIPAL_ID'+CHAR(10)+'WHERE LOGINP.TYPE IN(''U'',''G'',''S'')'+CHAR(10)+'AND LOGINP.NAME<>''SA'''+CHAR(10)+'AND LOGINP.NAME NOT LIKE''##%'''+CHAR(10)+'AND ROLEP.TYPE=''R'''+CHAR(10)+'AND CHARINDEX('''+@MACHINE+'\'',LOGINP.NAME)=0;';INSERT INTO@ROLES(ROLENAME,LOGINNAME)EXEC SP_EXECUTESQL@SQL;SET@SQL='SELECT P.NAME COLLATE DATABASE_DEFAULT,'+CHAR(10)+'SP.STATE_DESC,SP.PERMISSION_NAME,SP.CLASS,SP.CLASS_DESC,SP.MAJOR_ID,'+CHAR(10)+'SUBP.NAME COLLATE DATABASE_DEFAULT,'+CHAR(10)+'SUBEP.NAME COLLATE DATABASE_DEFAULT'+CHAR(10)+'FROM'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_PRINCIPALS P'+CHAR(10)+'INNER JOIN'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_PERMISSIONS SP'+CHAR(10)+CHAR(9)+'ON SP.GRANTEE_PRINCIPAL_ID=P.PRINCIPAL_ID'+CHAR(10)+'LEFT JOIN'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.SERVER_PRINCIPALS SUBP'+CHAR(10)+CHAR(9)+'ON SUBP.PRINCIPAL_ID=SP.MAJOR_ID AND SP.CLASS=101'+CHAR(10)+'LEFT JOIN'+QUOTENAME(@PARTNERSERVER)+'.MASTER.SYS.ENDPOINTS SUBEP'+CHAR(10)+CHAR(9)+'ON SUBEP.ENDPOINT_ID=SP.MAJOR_ID AND SP.CLASS=105'+CHAR(10)+'WHERE P.TYPE IN(''U'',''G'',''S'')'+CHAR(10)+'AND P.NAME<>''SA'''+CHAR(10)+'AND P.NAME NOT LIKE''##%'''+CHAR(10)+'AND CHARINDEX('''+@MACHINE+'\'',P.NAME)=0;'INSERT INTO@PERMS(LOGINNAME,PERMSTATE,PERMNAME,CLASS,CLASSDESC,MAJORID,SUBLOGINNAME,SUBENDPOINTNAME)EXEC SP_EXECUTESQL@SQL;SELECT@MAXID=MAX(LOGINID),@CURRID=1 FROM@LOGINS;WHILE@CURRID<=@MAXID BEGIN SELECT@LOGINNAME=NAME,@ISDISABLED=ISDISABLED,@TYPE=TYPE,@SID=SID,@PASSWORDHASH=PASSWORDHASH FROM@LOGINS WHERE LOGINID=@CURRID;IF NOT EXISTS(SELECT 1 FROM SYS.SERVER_PRINCIPALS WHERE NAME=@LOGINNAME)BEGIN SET@SQL='CREATE LOGIN'+QUOTENAME(@LOGINNAME)IF@TYPE IN('U','G')BEGIN SET@SQL=@SQL+'FROM WINDOWS;'END ELSE BEGIN SET@PASSWORDHASHSTRING='0X'+CAST(''AS XML).VALUE('XS:HEXBINARY(SQL:VARIABLE("@PASSWORDHASH"))','NVARCHAR(300)');SET@SQL=@SQL+'WITH PASSWORD='+@PASSWORDHASHSTRING+'HASHED,';SET@SIDSTRING='0X'+CAST(''AS XML).VALUE('XS:HEXBINARY(SQL:VARIABLE("@SID"))','NVARCHAR(100)');SET@SQL=@SQL+'SID='+@SIDSTRING+';';END IF@DEBUG=0 BEGIN BEGIN TRY EXEC SP_EXECUTESQL@SQL;END TRY BEGIN CATCH SET@ERRNUMBER=ERROR_NUMBER();SET@ERRSEVERITY=ERROR_SEVERITY();SET@ERRSTATE=ERROR_STATE();SET@ERRPROCEDURE=ERROR_PROCEDURE();SET@ERRLINE=ERROR_LINE();SET@ERRMSG=ERROR_MESSAGE();RAISERROR(@ERRMSG,1,1);END CATCH END ELSE BEGIN PRINT@SQL;END IF@ISDISABLED=1 BEGIN SET@SQL='ALTER LOGIN'+QUOTENAME(@LOGINNAME)+'DISABLE;'IF@DEBUG=0 BEGIN BEGIN TRY EXEC SP_EXECUTESQL@SQL;END TRY BEGIN CATCH SET@ERRNUMBER=ERROR_NUMBER();SET@ERRSEVERITY=ERROR_SEVERITY();SET@ERRSTATE=ERROR_STATE();SET@ERRPROCEDURE=ERROR_PROCEDURE();SET@ERRLINE=ERROR_LINE();SET@ERRMSG=ERROR_MESSAGE();RAISERROR(@ERRMSG,1,1);END CATCH END ELSE BEGIN PRINT@SQL;END END END SET@CURRID=@CURRID+1;END SELECT@MAXID=MAX(ROLEID),@CURRID=1 FROM@ROLES;WHILE@CURRID<=@MAXID BEGIN SELECT@LOGINNAME=LOGINNAME,@ROLENAME=ROLENAME FROM@ROLES WHERE ROLEID=@CURRID;IF NOT EXISTS(SELECT 1 FROM SYS.SERVER_ROLE_MEMBERS RM INNER JOIN SYS.SERVER_PRINCIPALS ROLEP ON ROLEP.PRINCIPAL_ID=RM.ROLE_PRINCIPAL_ID INNER JOIN SYS.SERVER_PRINCIPALS LOGINP ON LOGINP.PRINCIPAL_ID=RM.MEMBER_PRINCIPAL_ID WHERE LOGINP.TYPE IN('U','G','S')AND ROLEP.TYPE='R'AND ROLEP.NAME=@ROLENAME AND LOGINP.NAME=@LOGINNAME)BEGIN IF@DEBUG=0 BEGIN EXEC SP_ADDSRVROLEMEMBER@ROLENAME=@ROLENAME,@LOGINAME=@LOGINNAME;END ELSE BEGIN PRINT'EXEC SP_ADDSRVROLEMEMBER@ROLENAME='''+@ROLENAME+''',';PRINT'@LOGINAME='''+@LOGINNAME+''';';END END SET@CURRID=@CURRID+1;END SELECT@MAXID=MAX(PERMID),@CURRID=1 FROM@PERMS;WHILE@CURRID<=@MAXID BEGIN SELECT@PERMSTATE=PERMSTATE,@PERMNAME=PERMNAME,@CLASS=CLASS,@LOGINNAME=LOGINNAME,@MAJORID=MAJORID,@SQL=PERMSTATE+SPACE(1)+PERMNAME+SPACE(1)+CASE CLASS WHEN 101 THEN'ON LOGIN::'+QUOTENAME(SUBLOGINNAME)WHEN 105 THEN'ON'+CLASSDESC+'::'+QUOTENAME(SUBENDPOINTNAME)ELSE''END+'TO'+QUOTENAME(LOGINNAME)+';'FROM@PERMS WHERE PERMID=@CURRID;IF NOT EXISTS(SELECT 1 FROM SYS.SERVER_PRINCIPALS P INNER JOIN SYS.SERVER_PERMISSIONS SP ON SP.GRANTEE_PRINCIPAL_ID=P.PRINCIPAL_ID WHERE SP.STATE_DESC=@PERMSTATE AND SP.PERMISSION_NAME=@PERMNAME AND SP.CLASS=@CLASS AND P.NAME=@LOGINNAME AND SP.MAJOR_ID=@MAJORID)BEGIN IF@DEBUG=0 BEGIN BEGIN TRY EXEC SP_EXECUTESQL@SQL;END TRY BEGIN CATCH SET@ERRNUMBER=ERROR_NUMBER();SET@ERRSEVERITY=ERROR_SEVERITY();SET@ERRSTATE=ERROR_STATE();SET@ERRPROCEDURE=ERROR_PROCEDURE();SET@ERRLINE=ERROR_LINE();SET@ERRMSG=ERROR_MESSAGE();RAISERROR(@ERRMSG,1,1);END CATCH END ELSE BEGIN PRINT@SQL;END END SET@CURRID=@CURRID+1;END SET NOCOUNT OFF;GO
Monitor	[dbo].[Adm_Start_Audit]	Warning	AbsolutePath	Hardcoded absolute path	:\	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.ADM_START_AUDIT')IS NULL EXEC('CREATE PROCEDURE DBO.ADM_START_AUDIT AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.ADM_START_AUDIT AS BEGIN DECLARE@TRAC_ID INT DECLARE@FECHA VARCHAR(30)DECLARE@PATH NVARCHAR(200)DECLARE@RESULTADO INT DECLARE@VON BIT DECLARE@TAMANO BIGINT SET@TAMANO=50 SET@FECHA=CONVERT(VARCHAR,GETDATE(),120)SET@FECHA=REPLACE(@FECHA,':','')SET@FECHA=REPLACE(@FECHA,'-','')SET@FECHA=REPLACE(@FECHA,'','')SET@PATH='C:\TRACE\ATLAS_'+@FECHA EXEC@RESULTADO=SP_TRACE_CREATE@TRAC_ID OUTPUT,@OPTIONS=2,@TRACEFILE=@PATH,@MAXFILESIZE=@TAMANO IF@RESULTADO<>0 RETURN(-1)SET@VON=CAST(1 AS BIT)EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=14,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=15,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=46,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=47,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=01,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=10,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=35,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=3,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=11,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=6,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=8,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=14,@ON=@VON EXEC SP_TRACE_SETEVENT@TRACEID=@TRAC_ID,@EVENTID=12,@COLUMNID=15,@ON=@VON EXEC SP_TRACE_SETSTATUS@TRACEID=1,@STATUS=1 IF@@ERROR<>0 RETURN(-1)END;GO
Monitor	[dbo].[DBA_Alerta_Backup_Log]	Warning	SelectIntoWithOrderBy	Select Into with Order By clause used without order by	FechaHora desc	SELECT DB.NAME NAMEBD,RES.DATABASE_NAME,TIPO_BACKUP=CASE RES.TYPE WHEN'D'THEN'DATABASE'WHEN'I'THEN'DATABASE DIFFERENTIAL'WHEN'L'THEN'LOG'WHEN'F'THEN'FILE OR FILEGROUP'END,MAX(RES.BACKUP_START_DATE)FECHAHORA INTO TEMP_ALERTA_BACKUP_LOG FROM MASTER.SYS.DATABASES DB JOIN MSDB..BACKUPSET RES ON DB.RECOVERY_MODEL IN(1,2)AND DB.NAME=RES.DATABASE_NAME AND RES.TYPE='L'GROUP BY DB.NAME,RES.DATABASE_NAME,TYPE ORDER BY FECHAHORA DESC
Monitor	[dbo].[DBA_Alerta_Espacio_BD]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.DBA_ALERTA_ESPACIO_BD AS SET NOCOUNT ON TRUNCATE TABLE SPACEDB DECLARE@NAME SYSNAME DECLARE@MYSQL NVARCHAR(2048)DECLARE@DATO NVARCHAR(20)DECLARE@USADO NVARCHAR(20)DECLARE@PORCENUSADO INT DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@MENSAJE NVARCHAR(2048)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@MEN VARCHAR(50)CREATE TABLE#TMPDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB,VCVOLUMEN,FLTOTALSPACE,FLAVAILABLESPACE,FLPERCENTAGEAVAILABLE)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;DECLARE DBSPACE CURSOR FOR SELECT DBNAME,FLFILESIZEMB,FLSPACEUSEDMB,(CONVERT(INT,FLSPACEUSEDMB)*100)/CONVERT(INT,FLFILESIZEMB)PERC FROM#TMPDBSIZE WHERE(CONVERT(INT,FLSPACEUSEDMB)*100)/CONVERT(INT,FLFILESIZEMB)>90.0 IF(SELECT COUNT(1)FROM#TMPDBSIZE WHERE(CONVERT(INT,FLSPACEUSEDMB)*100)/CONVERT(INT,FLFILESIZEMB)>90.0)>0 BEGIN SET@ENVIAR_MENSAJE=<str>END SET@MENSAJE=<str>+@@SERVERNAME+<str>SET@MENSAJE=@MENSAJE+<str>+<str>OPEN DBSPACE FETCH NEXT FROM DBSPACE INTO@NAME,@DATO,@USADO,@PORCENUSADO WHILE@@FETCH_STATUS=0 BEGIN SET@MENSAJE=@MENSAJE+<str>+@NAME+<str>+CONVERT(VARCHAR(20),@DATO)+<str>+CONVERT(VARCHAR(20),@USADO)+<str>+CONVERT(VARCHAR(20),@PORCENUSADO)+<str>+CONVERT(VARCHAR(50),GETDATE(),113)+<str>FETCH NEXT FROM DBSPACE INTO@NAME,@DATO,@USADO,@PORCENUSADO END CLOSE DBSPACE DEALLOCATE DBSPACE SET@MENSAJE=N<str>+@MENSAJE+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>IF@ENVIAR_MENSAJE=<str>BEGIN SET@HTML_MENSAJE=@MENSAJE+N<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=<str>,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=N<str>,@BODY=@HTML_MENSAJE,@BODY_FORMAT=N<str>END GO
Monitor	[dbo].[DBA_Alerta_Espacio_TLog]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.DBA_ALERTA_ESPACIO_TLOG')IS NULL EXEC('CREATE PROCEDURE DBO.DBA_ALERTA_ESPACIO_TLOG AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBA_ALERTA_ESPACIO_TLOG AS SET NOCOUNT ON DECLARE@XX NVARCHAR(1024)DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@MENSAJE NVARCHAR(2048)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@DB SYSNAME DECLARE@MEN VARCHAR(50)DECLARE@PORCEN_USED DECIMAL TRUNCATE TABLE SPACELOG SET@XX='DBCC SQLPERF(LOGSPACE)'INSERT INTO SPACELOG(DB,LOGSIZE,PORCEN_USED,STATUS)EXEC MASTER..SP_EXECUTESQL@XX INSERT INTO SPACELOG_HIST(DB,LOGSIZE,PORCEN_USED,STATUS,FECHA)SELECT DB,LOGSIZE,PORCEN_USED,STATUS,GETDATE()FROM SPACELOG DECLARE CONSULTA_LOG CURSOR FOR SELECT DB,PORCEN_USED FROM SPACELOG WHERE PORCEN_USED>80 SET@ENVIAR_MENSAJE='N'SET@MENSAJE='<HTML><HEAD><TITLE>DEPARTMENT REPORT</TITLE></HEAD><BODY><P><FONT STYLE="FONT-FAMILY:TAHOMA;FONT-WEIGHT: BOLD;FONT-SIZE: 13PX;COLOR:#023962">ALERTA DE ESPACIO EN LOG TRANSACTION,SERVIDOR:<TABLE WIDTH="70%"STYLE="BORDER-COLLAPSE: COLLAPSE;BORDER-TOP: 2PX SOLID#466577"><TR><TD></TD></TR></TABLE></FONT>'+@@SERVERNAME+'</P>'OPEN CONSULTA_LOG FETCH NEXT FROM CONSULTA_LOG INTO@DB,@PORCEN_USED SET@MENSAJE=@MENSAJE+'<BR>'+'<TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#FFFFFF;FONT-FAMILY:TAHOMA;BACKGROUND-COLOR:#466577;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>%DE USO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA/HORA</STRONG></TD></TR>'WHILE@@FETCH_STATUS=0 BEGIN IF@PORCEN_USED>80 AND@PORCEN_USED<=95 SET@MEN='WARNING:'+@DB ELSE SET@MEN='CRITICAL ERROR:'+@DB SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR STYLE="FONT-SIZE: 10PX;COLOR:#023962;FONT-FAMILY:TAHOMA;TEXT-ALIGN: CENTER"><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(20),@PORCEN_USED)+'</TD><TD>'+CONVERT(VARCHAR(50),GETDATE(),113)+'</TD></TR>'FETCH NEXT FROM CONSULTA_LOG INTO@DB,@PORCEN_USED END IF@ENVIAR_MENSAJE='Y'BEGIN SET@HTML_MENSAJE=N'<HTML><P>'+@MENSAJE+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME='AJAX\SQLPROD01',@RECIPIENTS=N'AREA_BASE_DATOS@SINACOFI.CL',@IMPORTANCE=N'HIGH',@SUBJECT=N'ALERTA DE ESPACIO EN TRANSACTION LOG',@BODY=@HTML_MENSAJE,@BODY_FORMAT=N'HTML'END CLOSE CONSULTA_LOG DEALLOCATE CONSULTA_LOG GO
Monitor	[dbo].[DBA_CREA_INFO_BKP]	Warning	SelectIntoWithOrderBy	Select Into with Order By clause used without order by	database_name, ; ; ; backup_start_date	SELECT DATABASE_NAME,TIPO_BACKUP=CASE TYPE WHEN'D'THEN'DATABASE'WHEN'I'THEN'DATABASE DIFFERENTIAL'WHEN'L'THEN'LOG'WHEN'F'THEN'FILE OR FILEGROUP'END,BACKUP_START_DATE,BACKUP_FINISH_DATE,NAME INTO TEMPORAL FROM MSDB..BACKUPSET WHERE CONVERT(CHAR(8),BACKUP_START_DATE,112)>=@DIA1 AND CONVERT(CHAR(8),BACKUP_START_DATE,112)<=@DIA2 AND TYPE<>'L'ORDER BY DATABASE_NAME,BACKUP_START_DATE
Monitor	[dbo].[DBA_SpaceDisc]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.DBA_SPACEDISC')IS NULL EXEC('CREATE PROCEDURE DBO.DBA_SPACEDISC AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.DBA_SPACEDISC AS SET NOCOUNT ON DECLARE@MYSQL NVARCHAR(1024)DECLARE@DISCO CHAR(1)DECLARE@MB INT DECLARE@ASIG INT DECLARE@PORCENUSADO INT DECLARE@MEN NVARCHAR(1024)DECLARE@ENVIAR_MENSAJE CHAR(1)DECLARE@HTML_MENSAJE VARCHAR(4048)DECLARE@MENSAJE VARCHAR(4048)SET@MENSAJE=''SET@HTML_MENSAJE=''SET@MYSQL='EXEC MASTER..XP_FIXEDDRIVES'IF EXISTS(SELECT*FROM SYS.OBJECTS WHERE OBJECT_ID=OBJECT_ID(N'DBO.TMP_DRIVES')AND TYPE IN(N'U'))TRUNCATE TABLE DBO.TMP_DRIVES INSERT INTO TMP_DRIVES(DISCO,SIZEREALMB)EXEC SP_EXECUTESQL@MYSQL DECLARE DISCO CURSOR FOR SELECT DISCO,SIZEREALMB FROM TMP_DRIVES OPEN DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB WHILE@@FETCH_STATUS=0 BEGIN UPDATE TB_DRIVES SET SIZEREALMB=@MB,FECHA=GETDATE()WHERE DISCO=@DISCO FETCH NEXT FROM DISCO INTO@DISCO,@MB END CLOSE DISCO DEALLOCATE DISCO DECLARE DISCSPACE CURSOR FOR SELECT DISCO,SIZEINICIAL,SIZEREALMB FROM TB_DRIVES SET@ENVIAR_MENSAJE='N'SET@MENSAJE='<HTML><HEAD><TITLE>DEPARTMENT REPORT</TITLE></HEAD><BODY><P><FONT STYLE="FONT-FAMILY:TAHOMA;FONT-WEIGHT: BOLD;FONT-SIZE: 13PX;COLOR:#023962">ALERTA DE ESPACIO EN DISCO,SERVIDOR<TABLE WIDTH="70%"STYLE="BORDER-COLLAPSE: COLLAPSE;BORDER-TOP: 3PX SOLID#CCE49D"><TR><TD></TD></TR></TABLE></FONT>'+@@SERVERNAME+'</P>'OPEN DISCSPACE FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB SET@MENSAJE=@MENSAJE+'<BR>'+'<TABLE WIDTH="100%"><TR STYLE="FONT-SIZE: 11PX;COLOR:#023962;FONT-FAMILY:TAHOMA;BACKGROUND-COLOR:#CCE49D;TEXT-ALIGN: CENTER"><TD WIDTH="15%"><STRONG>NOMBRE BD</STRONG></TD><TD WIDTH="15%"><STRONG>%DE ESPACIO OCUPADO</STRONG></TD><TD WIDTH="15%"><STRONG>FECHA</STRONG></TD></TR>'WHILE@@FETCH_STATUS=0 BEGIN SELECT@PORCENUSADO=(@ASIG-@MB)*100/@ASIG IF@PORCENUSADO>80 BEGIN SET@MEN='WARNING EN DISCO VALIDANDO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END ELSE IF@PORCENUSADO>85 BEGIN SET@MEN='CRITICAL ERROR EN DISCO:'+@DISCO SET@ENVIAR_MENSAJE='Y'SET@MENSAJE=@MENSAJE+'<TR><TD>'+@MEN+'</TD><TD>'+CONVERT(VARCHAR(10),@PORCENUSADO)+'</TD><TD>'+CONVERT(VARCHAR(30),GETDATE(),113)+'</TD></TR>'END FETCH NEXT FROM DISCSPACE INTO@DISCO,@ASIG,@MB END IF@ENVIAR_MENSAJE='Y'BEGIN SET@HTML_MENSAJE=N'<HTML><P>'+@MENSAJE+N'</P></HTML>'EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME='AJAX\SQLPROD01',@RECIPIENTS='AREA_BASE_DATOS@SINACOFI.CL',@SUBJECT='ALERTA DE ESPACIO EN DISCOS',@BODY=@HTML_MENSAJE,@BODY_FORMAT='HTML',@IMPORTANCE='HIGH',@SENSITIVITY='NORMAL'END CLOSE DISCSPACE DEALLOCATE DISCSPACE GO
Monitor	[dbo].[SP_CPUMONITOR]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	record_id DESC	SELECT TOP 1 DATEADD(MS,-1*(@TS_NOW-TIMESTAMP),GETDATE())AS MONITORTIME,SQLPROCESSUTILIZATION,SYSTEMIDLE,100-SYSTEMIDLE-SQLPROCESSUTILIZATION AS OTHERPROCESSUTILIZATION FROM(SELECT RECORD.VALUE('(./RECORD/@ID)1','INT')AS RECORD_ID,RECORD.VALUE('(./RECORD/SCHEDULERMONITOREVENT/SYSTEMHEALTH/SYSTEMIDLE)1','INT')AS SYSTEMIDLE,RECORD.VALUE('(./RECORD/SCHEDULERMONITOREVENT/SYSTEMHEALTH/PROCESSUTILIZATION)1','INT')AS SQLPROCESSUTILIZATION,TIMESTAMP FROM(SELECT TIMESTAMP,CONVERT(XML,RECORD)AS RECORD FROM SYS.DM_OS_RING_BUFFERS WHERE RING_BUFFER_TYPE=N'RING_BUFFER_SCHEDULER_MONITOR'AND RECORD LIKE'%<SYSTEMHEALTH>%')AS X)AS Y ORDER BY RECORD_ID DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_CPUMONITOR]	Warning	InsertSelectWithOrderBy	Insert Select with Order By clause used without order by	[Buffer Size (MB)] DESC	SELECT GETDATE()FECHA,DATABASE_NAME=CASE DATABASE_ID WHEN 32767 THEN'MSSQL SYSTEM RESOURCE DB'ELSE DB_NAME(DATABASE_ID)END,DB_BUFFER_PAGES AS BUFFER COUNT(8KB PAGES),BUFFER SIZE(MB)=DB_BUFFER_PAGES/128,BUFFER SIZE(%)=CONVERT(DECIMAL(6,3),DB_BUFFER_PAGES*100.0/@TOTAL_BUFFER)FROM BUFCOUNT ORDER BY BUFFER SIZE(MB)DESC
Monitor	[dbo].[SP_CPUMONITOR]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	COUNT(session_id) DESC	SELECT GETDATE()FECHA,COUNT(SESSION_ID)NSESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_HEALTHREPORT]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_HEALTHREPORT AS DECLARE@VCPROFILENAME VARCHAR(50)DECLARE@VCDATABASE VARCHAR(30)DECLARE@VCLOGINNAME VARCHAR(30)DECLARE@VCHOSTNAME VARCHAR(30)DECLARE@VCASUNTO VARCHAR(200)DECLARE@ICANTIDADSESIONES INT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT DECLARE@VCVOL VARCHAR(5)DECLARE@FLFREESPACEMB FLOAT DECLARE@FLTOTALSPACE FLOAT DECLARE@FLAVAILABLESPACE FLOAT DECLARE@FLFILESIZEMB FLOAT DECLARE@FLSPACEUSEDMB FLOAT DECLARE@FLPERCENTAGEAVAILABLE FLOAT DECLARE@FLPORCENTAJEUSADO FLOAT DECLARE@VCVOLUMEN VARCHAR(10)DECLARE@FLUSED FLOAT DECLARE@VCREPORTECPU VARCHAR(2500)DECLARE@VCREPORTEMEMORIA VARCHAR(2500)DECLARE@VCREPORTEDISCO VARCHAR(MAX)DECLARE@VCREPORTESESIONES VARCHAR(MAX)DECLARE@VCHTML_MENSAJE VARCHAR(MAX)DECLARE@FLAVGCPUIDLE FLOAT,@FLAVGCPUIDLE30 FLOAT,@FLAVGCPUIDLE60 FLOAT DECLARE@FLAVGCPUUSED FLOAT,@FLAVGCPUUSED30 FLOAT,@FLAVGCPUUSED60 FLOAT DECLARE@FLAVGOTHERPROCESS FLOAT,@FLAVGOTHERPROCESS30 FLOAT,@FLAVGOTHERPROCESS60 FLOAT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>DECLARE CURSESSION CURSOR FOR SELECT LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLAVGOTHERPROCESS=AVG(IOTHERPROCESS),@FLAVGCPUUSED=AVG(ISQLCPUUSE),@FLAVGCPUIDLE=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-10,GETDATE())SELECT@FLAVGOTHERPROCESS30=AVG(IOTHERPROCESS),@FLAVGCPUUSED30=AVG(ISQLCPUUSE),@FLAVGCPUIDLE30=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-30,GETDATE())SELECT@FLAVGOTHERPROCESS60=AVG(IOTHERPROCESS),@FLAVGCPUUSED60=AVG(ISQLCPUUSE),@FLAVGCPUIDLE60=AVG(ISYSTEMIDLE)FROM TBLCPUMONITOR WHERE DTFECHAHORA>DATEADD(MINUTE,-60,GETDATE())SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;CREATE TABLE#TMPDBSIZE(DBNAME SYSNAME,VCDBSTATUS VARCHAR(50),VCRECOVERYMODEL VARCHAR(40)DEFAULT(<str>),FLFILESIZEMB FLOAT DEFAULT(0),FLSPACEUSEDMB FLOAT DEFAULT(0),FLFREESPACEMB FLOAT DEFAULT(0),VCVOLUMEN VARCHAR(10),FLTOTALSPACE FLOAT,FLAVAILABLESPACE FLOAT,FLPERCENTAGEAVAILABLE FLOAT);INSERT INTO#TMPDBSIZE(DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB,VCVOLUMEN,FLTOTALSPACE,FLAVAILABLESPACE,FLPERCENTAGEAVAILABLE)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;DECLARE CURSPACE CURSOR FOR SELECT DBNAME,ROUND(FLFILESIZEMB,2)AS FILESIZEMB,ROUND(FLSPACEUSEDMB,2)AS SPACEUSEDMB,ROUND(FLFREESPACEMB,2)AS FREESPACEMB,ROUND((FLSPACEUSEDMB*100/FLFILESIZEMB),2)AS PORCENTAJEUSADO,VCVOLUMEN,ROUND(FLTOTALSPACE,2),ROUND(FLAVAILABLESPACE,2),ROUND(FLPERCENTAGEAVAILABLE,2)FROM#TMPDBSIZE ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEDISCO=<str>+<str>SET@VCREPORTESESIONES=<str>+<str>SET@VCREPORTECPU=<str>+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED30)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE30)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUUSED60)+<str>+CONVERT(VARCHAR(10),@FLAVGOTHERPROCESS60)+<str>+CONVERT(VARCHAR(10),@FLAVGCPUIDLE60)+<str>SET@VCREPORTEMEMORIA=<str>+<str>+CONVERT(VARCHAR(10),@FLTOTALMEMORY)+<str>+CONVERT(VARCHAR(10),@FLSQLSERVERUSED)+<str>+CONVERT(VARCHAR(10),@FLAVAILABLEMEMORY)+<str>OPEN CURSPACE FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO,@VCVOLUMEN,@FLTOTALSPACE,@FLAVAILABLESPACE,@FLPERCENTAGEAVAILABLE WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEDISCO=@VCREPORTEDISCO+<str>+@VCDATABASE+<str>+CONVERT(VARCHAR(20),@FLFILESIZEMB)+<str>+CONVERT(VARCHAR(20),@FLSPACEUSEDMB)+<str>+CONVERT(VARCHAR(20),@FLFREESPACEMB)+<str>+CONVERT(VARCHAR(20),@FLPORCENTAJEUSADO)+<str>+@VCVOLUMEN+<str>+CONVERT(VARCHAR(20),@FLTOTALSPACE)+<str>+CONVERT(VARCHAR(20),@FLAVAILABLESPACE)+<str>+CONVERT(VARCHAR(20),@FLPERCENTAGEAVAILABLE)+<str>FETCH NEXT FROM CURSPACE INTO@VCDATABASE,@FLFILESIZEMB,@FLSPACEUSEDMB,@FLFREESPACEMB,@FLPORCENTAJEUSADO,@VCVOLUMEN,@FLTOTALSPACE,@FLAVAILABLESPACE,@FLPERCENTAGEAVAILABLE END CLOSE CURSPACE DEALLOCATE CURSPACE OPEN CURSESSION FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTESESIONES=@VCREPORTESESIONES+<str>+@VCLOGINNAME+<str>+@VCHOSTNAME+<str>+CONVERT(VARCHAR(20),@ICANTIDADSESIONES)+<str>FETCH NEXT FROM CURSESSION INTO@VCLOGINNAME,@VCHOSTNAME,@ICANTIDADSESIONES END CLOSE CURSESSION DEALLOCATE CURSESSION SET@VCHTML_MENSAJE=N<str>+@VCREPORTECPU+N<str>+@VCREPORTEMEMORIA+N<str>+@VCREPORTESESIONES+N<str>+@VCREPORTEDISCO+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCHTML_MENSAJE,@BODY_FORMAT=N<str>GO
Monitor	[dbo].[SP_HEALTHREPORT_DATOS]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	SP_MSFOREACHDB	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_HEALTHREPORT_DATOS AS DECLARE@FLSQLSERVERUSED FLOAT DECLARE@FLTOTALMEMORY FLOAT DECLARE@FLAVAILABLEMEMORY FLOAT INSERT INTO TBLRD_SESIONES(FECHA,LOGIN_NAME,HOST_NAME,CANTIDAD_SESIONES)SELECT GETDATE()FECHA,LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)CANTIDAD_SESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE);SELECT@FLSQLSERVERUSED=PHYSICAL_MEMORY_IN_USE_KB/1024/1024 FROM SYS.DM_OS_PROCESS_MEMORY SELECT@FLTOTALMEMORY=TOTAL_PHYSICAL_MEMORY_KB/1024/1024,@FLAVAILABLEMEMORY=AVAILABLE_PHYSICAL_MEMORY_KB/1024/1024 FROM SYS.DM_OS_SYS_MEMORY;INSERT INTO TBLRD_MEMORIA(FECHA,TOTAL,EN_USO,DISPONIBLE)VALUES(GETDATE(),@FLTOTALMEMORY,@FLSQLSERVERUSED,@FLAVAILABLEMEMORY)INSERT INTO TBLRD_TAMANNOBD(FECHA,DBNAME,VCDBSTATUS,VCRECOVERYMODEL,FLFILESIZEMB,FLSPACEUSEDMB,FLFREESPACEMB,VCVOLUMEN,FLTOTALSPACE,FLAVAILABLESPACE,FLPERCENTAGEAVAILABLE)EXEC SP_MSFOREACHDB<str><str><str><str><str><str><str><str><str><str><str><str><str><str><str>;GO
Monitor	[dbo].[SP_HEALTHREPORT_DATOS]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	COUNT(session_id) DESC	SELECT GETDATE()FECHA,LOGIN_NAME,HOST_NAME,COUNT(SESSION_ID)CANTIDAD_SESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 GROUP BY LOGIN_NAME,HOST_NAME ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_MEM_MONITOR]	Warning	InsertSelectWithOrderBy	Insert Select with Order By clause used without order by	[Buffer Size (MB)] DESC	SELECT GETDATE()FECHA,DATABASE_NAME=CASE DATABASE_ID WHEN 32767 THEN'MSSQL SYSTEM RESOURCE DB'ELSE DB_NAME(DATABASE_ID)END,DB_BUFFER_PAGES AS BUFFER COUNT(8KB PAGES),BUFFER SIZE(MB)=DB_BUFFER_PAGES/128,BUFFER SIZE(%)=CONVERT(DECIMAL(6,3),DB_BUFFER_PAGES*100.0/@TOTAL_BUFFER)FROM BUFCOUNT ORDER BY BUFFER SIZE(MB)DESC
Monitor	[dbo].[SP_MEM_MONITOR]	Information	InsertSelectWithOrderBy	Insert Select with Order By clause	COUNT(session_id) DESC	SELECT GETDATE()FECHA,COUNT(SESSION_ID)NSESIONES FROM SYS.DM_EXEC_SESSIONS WITH(NOLOCK)WHERE SESSION_ID>50 ORDER BY COUNT(SESSION_ID)DESC OPTION(RECOMPILE)
Monitor	[dbo].[SP_MonitorErrorLog]	Information	SystemExtendedStoredProcedures	Using extended stored procedures to access the registry	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_MONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
Monitor	[dbo].[SP_MonitorErrorLog]	Information	UndocumentedStoredProcedure	Using undocumented stored procedures	XP_READERRORLOG	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_MONITORERRORLOG AS DECLARE@VCASUNTO VARCHAR(200)DECLARE@VCFECHAINICIO VARCHAR(50)DECLARE@VCFECHAFIN VARCHAR(50)DECLARE@VCLOGDATE VARCHAR(50)DECLARE@VCPROFILENAME VARCHAR(20)DECLARE@VCPROCESSINFOR VARCHAR(10)DECLARE@VCREPORTEERRORLOG VARCHAR(MAX)DECLARE@VCTEXT VARCHAR(MAX)DECLARE@ICOUNT INT SET@VCASUNTO=<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(10),GETDATE(),101)+<str>+CONVERT(VARCHAR(8),GETDATE(),108))+<str>SELECT@VCFECHAINICIO=CONVERT(VARCHAR(50),DATEADD(MINUTE,-10,GETDATE()))SELECT@VCFECHAFIN=CONVERT(VARCHAR(50),GETDATE())SELECT@VCPROFILENAME=NAME FROM MSDB..SYSMAIL_PROFILE CREATE TABLE#TMPERRORLOG(VCLOGDATE VARCHAR(50),VCPROCESSINFOR VARCHAR(50),VCTEXT VARCHAR(MAX))INSERT INTO#TMPERRORLOG EXEC XP_READERRORLOG 0,1,<str>,NULL,@VCFECHAINICIO,@VCFECHAFIN SELECT@ICOUNT=COUNT(1)FROM#TMPERRORLOG;IF@ICOUNT>0 BEGIN DECLARE CURERRORLOG CURSOR FOR SELECT VCLOGDATE,VCPROCESSINFOR,VCTEXT FROM#TMPERRORLOG ORDER BY 1 ASC OPTION(RECOMPILE);SET@VCREPORTEERRORLOG=<str>OPEN CURERRORLOG FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT WHILE@@FETCH_STATUS=0 BEGIN SET@VCREPORTEERRORLOG=@VCREPORTEERRORLOG+<str>+@VCLOGDATE+<str>+@VCPROCESSINFOR+<str>+@VCTEXT+<str>FETCH NEXT FROM CURERRORLOG INTO@VCLOGDATE,@VCPROCESSINFOR,@VCTEXT END CLOSE CURERRORLOG DEALLOCATE CURERRORLOG SET@VCREPORTEERRORLOG=N<str>+@VCREPORTEERRORLOG+N<str>+<str>+<str>+<str>+@@SERVERNAME+<str>+(SELECT CONVERT(VARCHAR(26),GETDATE(),109))+<str>+<str>EXEC MSDB..SP_SEND_DBMAIL@PROFILE_NAME=@VCPROFILENAME,@RECIPIENTS=N<str>,@IMPORTANCE=N<str>,@SUBJECT=@VCASUNTO,@BODY=@VCREPORTEERRORLOG,@BODY_FORMAT=N<str>END GO
Monitor	[dbo].[SP_Nagios_ObtieneCPU]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY PC.COLLECTION_TIME,TIPO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_NAGIOS_OBTIENECPU AS DECLARE@DTFECHAINI DATETIME DECLARE@DTFECHAFIN DATETIME DECLARE@SICPUCOUNT SMALLINT DECLARE@READ FLOAT DECLARE@WRITE FLOAT DECLARE@VCSERVERNAME VARCHAR(20)SELECT@DTFECHAINI=DATEADD(MI,-1,GETDATE())SELECT@DTFECHAFIN=DATEADD(MI,-0,GETDATE())SELECT@VCSERVERNAME=@@SERVERNAME SELECT CASE PC.PERFORMANCE_OBJECT_NAME WHEN<str>THEN<str>ELSE<str>END AS TIPO,CASE PC.PERFORMANCE_OBJECT_NAME WHEN<str>THEN ROUND(PC.FORMATTED_VALUE,2)ELSE ROUND(PC.FORMATTED_VALUE/@SICPUCOUNT,2)END AS PERCPU FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND PC.COLLECTION_TIME BETWEEN@DTFECHAINI AND@DTFECHAFIN AND((PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)OR(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>))ORDER BY PC.COLLECTION_TIME,TIPO GO
Monitor	[dbo].[SP_Nagios_ObtieneIO]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_TIME_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_NAGIOS_OBTIENEIO AS DECLARE@DTFECHAINI DATETIME DECLARE@DTFECHAFIN DATETIME DECLARE@READ FLOAT DECLARE@WRITE FLOAT DECLARE@VCSERVERNAME VARCHAR(20)SELECT@DTFECHAINI=DATEADD(MI,-1,GETDATE())SELECT@DTFECHAFIN=DATEADD(MI,-0,GETDATE())SELECT@VCSERVERNAME=@@SERVERNAME SELECT@READ=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT@WRITE=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT CONVERT(VARCHAR(20),@WRITE)SELECT CONVERT(VARCHAR(20),@READ)OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)GO
Monitor	[dbo].[SP_Nagios_ObtieneIO]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY S.SNAPSHOT_TIME_ID	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str><str><str>)GO ALTER PROCEDURE DBO.SP_NAGIOS_OBTIENEIO AS DECLARE@DTFECHAINI DATETIME DECLARE@DTFECHAFIN DATETIME DECLARE@READ FLOAT DECLARE@WRITE FLOAT DECLARE@VCSERVERNAME VARCHAR(20)SELECT@DTFECHAINI=DATEADD(MI,-1,GETDATE())SELECT@DTFECHAFIN=DATEADD(MI,-0,GETDATE())SELECT@VCSERVERNAME=@@SERVERNAME SELECT@READ=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT@WRITE=ROUND(AVG(PC.FORMATTED_VALUE/(1024*1024)),2)FROM PERFORMANCEDW.SNAPSHOTS.PERFORMANCE_COUNTERS PC JOIN PERFORMANCEDW.CORE.SNAPSHOTS S ON(S.SNAPSHOT_ID=PC.SNAPSHOT_ID)WHERE S.INSTANCE_NAME=@VCSERVERNAME AND CONVERT(DATETIME,SWITCHOFFSET(CAST(PC.COLLECTION_TIME AS DATETIMEOFFSET(7)),<str>))>=DATEADD(MI,-15,GETDATE())AND(PC.PERFORMANCE_OBJECT_NAME=<str>AND PC.PERFORMANCE_COUNTER_NAME=<str>AND PC.PERFORMANCE_INSTANCE_NAME=<str>)GROUP BY S.SNAPSHOT_TIME_ID,CONVERT(VARCHAR(10),PC.COLLECTION_TIME,103)+<str>+CONVERT(VARCHAR(8),PC.COLLECTION_TIME,14)ORDER BY S.SNAPSHOT_TIME_ID DESC SELECT CONVERT(VARCHAR(20),@WRITE)SELECT CONVERT(VARCHAR(20),@READ)OPTION(QUERYTRACEON 2389,QUERYTRACEON 2390)GO
ValidacionTributaria	[dbo].[balance_acf_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.BALANCE_ACF_SQL(@RUT INT,@EMPRESA INT,@PLP INT=0)RETURNS TABLE RETURN SELECT TOP 5 T1.PERIODO AS PER,(CASE WHEN T1.COD_0101 IS NULL THEN 0 ELSE T1.COD_0101 END)AS CAJ,(CASE WHEN T1.COD_0784 IS NULL THEN 0 ELSE T1.COD_0784 END)AS BAN,(CASE WHEN T1.COD_0129 IS NULL THEN 0 ELSE T1.COD_0129 END)AS EXI,(CASE WHEN T1.COD_0977 IS NULL THEN 0 ELSE T1.COD_0977 END)AS CXC,(CASE WHEN T1.COD_0783 IS NULL THEN 0 ELSE T1.COD_0783 END)AS PRE,(CASE WHEN T1.COD_0036 IS NULL THEN 0 ELSE T1.COD_0036 END+CASE WHEN T1.COD_0167 IS NULL THEN 0 ELSE T1.COD_0167 END)AS PRO,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END-CASE WHEN T1.COD_0101 IS NULL THEN 0 ELSE T1.COD_0101 END-CASE WHEN T1.COD_0784 IS NULL THEN 0 ELSE T1.COD_0784 END-CASE WHEN T1.COD_0129 IS NULL THEN 0 ELSE T1.COD_0129 END-CASE WHEN T1.COD_0036 IS NULL THEN 0 ELSE T1.COD_0036 END-CASE WHEN T1.COD_0167 IS NULL THEN 0 ELSE T1.COD_0167 END-CASE WHEN T1.COD_0977 IS NULL THEN 0 ELSE T1.COD_0977 END-CASE WHEN T1.COD_0783 IS NULL THEN 0 ELSE T1.COD_0783 END)AS OC,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END)AS TAC,(CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END)AS AI,(CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END)AS TAF,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END)AS OA,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END)AS TOA,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END)AS TA,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END+CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END-CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS PC,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END+CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END-CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS TPC,(CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS PLP,(CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS TPLP,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END+CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END)AS TAE,(CASE WHEN T1.COD_0844 IS NULL THEN 0 ELSE T1.COD_0844 END)AS CE,(CASE WHEN T1.COD_0123 IS NULL THEN 0 ELSE T1.COD_0123 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END+CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END-CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END-CASE WHEN T1.COD_0844 IS NULL THEN 0 ELSE T1.COD_0844 END)AS OPNE,(CASE WHEN T1.COD_0020 IS NULL THEN 0 ELSE T1.COD_0020 END)AS IM,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0123 IS NULL THEN 0 ELSE T1.COD_0123 END-CASE WHEN T1.COD_0020 IS NULL THEN 0 ELSE T1.COD_0020 END)AS UE,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END+CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END-CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END)AS TP,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END)AS TPV FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA AND T1.VIGENTE=1 ORDER BY T1.PERIODO DESC;GO
ValidacionTributaria	[dbo].[balance_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.BALANCE_SQL(@RUT INT,@EMPRESA INT,@PLP INT=0)RETURNS TABLE RETURN SELECT TOP 5 T1.PERIODO AS PER,(CASE WHEN T1.COD_0101 IS NULL THEN 0 ELSE T1.COD_0101 END)AS CAJ,(CASE WHEN T1.COD_0784 IS NULL THEN 0 ELSE T1.COD_0784 END)AS BAN,(CASE WHEN T1.COD_0129 IS NULL THEN 0 ELSE T1.COD_0129 END)AS EXI,(CASE WHEN T1.COD_0977 IS NULL THEN 0 ELSE T1.COD_0977 END)AS CXC,(CASE WHEN T1.COD_0783 IS NULL THEN 0 ELSE T1.COD_0783 END)AS PRE,(CASE WHEN T1.COD_0036 IS NULL THEN 0 ELSE T1.COD_0036 END+CASE WHEN T1.COD_0167 IS NULL THEN 0 ELSE T1.COD_0167 END)AS PRO,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END-CASE WHEN T1.COD_0101 IS NULL THEN 0 ELSE T1.COD_0101 END-CASE WHEN T1.COD_0784 IS NULL THEN 0 ELSE T1.COD_0784 END-CASE WHEN T1.COD_0129 IS NULL THEN 0 ELSE T1.COD_0129 END-CASE WHEN T1.COD_0036 IS NULL THEN 0 ELSE T1.COD_0036 END-CASE WHEN T1.COD_0167 IS NULL THEN 0 ELSE T1.COD_0167 END-CASE WHEN T1.COD_0977 IS NULL THEN 0 ELSE T1.COD_0977 END-CASE WHEN T1.COD_0783 IS NULL THEN 0 ELSE T1.COD_0783 END)AS OC,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END)AS TAC,(CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END)AS AI,(CASE WHEN T1.COD_0647 IS NULL THEN 0 ELSE T1.COD_0647 END)AS TAF,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END)AS OA,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END)AS TOA,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END)AS TA,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END+CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END-CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS PC,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END+CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END-CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS TPC,(CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS PLP,(CASE WHEN@PLP IS NULL THEN 0 ELSE@PLP END)AS TPLP,(CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END-CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END+CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END)AS TAE,(CASE WHEN T1.COD_0844 IS NULL THEN 0 ELSE T1.COD_0844 END)AS CE,(CASE WHEN T1.COD_0123 IS NULL THEN 0 ELSE T1.COD_0123 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END+CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END-CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END-CASE WHEN T1.COD_0844 IS NULL THEN 0 ELSE T1.COD_0844 END)AS OPNE,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0123 IS NULL THEN 0 ELSE T1.COD_0123 END)AS UE,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END-CASE WHEN T1.COD_0102 IS NULL THEN 0 ELSE T1.COD_0102 END+CASE WHEN T1.COD_0645 IS NULL THEN 0 ELSE T1.COD_0645 END-CASE WHEN T1.COD_0646 IS NULL THEN 0 ELSE T1.COD_0646 END)AS TP,(CASE WHEN T1.COD_0122 IS NULL THEN 0 ELSE T1.COD_0122 END)AS TPV FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA AND T1.VIGENTE=1 ORDER BY T1.PERIODO DESC;GO
ValidacionTributaria	[dbo].[eerr1_acf_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.EERR1_ACF_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE AS RETURN SELECT TOP 5 T1.PERIODO AS PER,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0))END)AS VEN,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))END)AS CD,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0927,0))END)AS DEP,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0)))END)AS MB,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0631,0))END)AS RE,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))END)AS OG,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-ISNULL(T1.COD_0927,0)-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0)))END)AS MO,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0629,0))END)AS IPE,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0651,0))END)AS OI,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))END)AS IPA,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))END)AS GI,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0966,0))END)AS DON,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))END)AS CO,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0)-(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))))END)AS DT,(CASE WHEN T1.PERIODO>=2018 THEN(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0))ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))+(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0)-(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-(ISNULL(T1.COD_0631,0))-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0)))))END)AS UT,ISNULL(T1.COD_0020,0)AS IR,(CASE WHEN T1.PERIODO>=2018 THEN((ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0))-ISNULL(T1.COD_0020,0))ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))+(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0)-(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-(ISNULL(T1.COD_0631,0))-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))))-ISNULL(T1.COD_0020,0))END)AS UN,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))+(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0)-(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-(ISNULL(T1.COD_0631,0))-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))))-ISNULL(T1.COD_0020,0)+ISNULL(T1.COD_0927,0)+(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0)))END)AS GOC,T1.COD_0315 AS FEC FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA ORDER BY T1.PERIODO DESC GO
ValidacionTributaria	[dbo].[eerr1_def_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.EERR1_DEF_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE AS RETURN SELECT TOP 5 T1.PERIODO AS PER,ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)AS VEN,ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0)AS CD,ISNULL(T1.COD_0927,0)AS DEP,ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))AS MB,ISNULL(T1.COD_0631,0)AS RE,ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0)AS OG,ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-ISNULL(T1.COD_0927,0)-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))AS MO,ISNULL(T1.COD_0629,0)AS IPE,ISNULL(T1.COD_0651,0)AS OI,ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0)AS IPA,ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0)AS GI,ISNULL(T1.COD_0966,0)AS DON,ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0)AS CO,(CASE WHEN T1.PERIODO>=2018 THEN(CASE WHEN(T1.COD_0963+T1.COD_1037+T1.COD_0187)>0 THEN(ISNULL(T1.COD_0963,0)+ISNULL(T1.COD_1037,0)+ISNULL(T1.COD_0187,0))ELSE(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0))END)ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-ISNULL(T1.COD_0927,0)-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+(ISNULL(T1.COD_0629,0))+(ISNULL(T1.COD_0651,0))-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0)))END)AS UT,(CASE WHEN T1.PERIODO>=2018 THEN(ISNULL(T1.COD_0020,0)+ISNULL(T1.COD_0965,0)+ISNULL(T1.COD_1039,0)+ISNULL(T1.COD_0189,0))ELSE ISNULL(T1.COD_0020,0)END)AS IR,(CASE WHEN T1.PERIODO>=2018 THEN((CASE WHEN(T1.COD_0963+T1.COD_1037+T1.COD_0187)>0 THEN(ISNULL(T1.COD_0963,0)+ISNULL(T1.COD_1037,0)+ISNULL(T1.COD_0187,0))ELSE(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0))END)-(ISNULL(T1.COD_0020,0)+ISNULL(T1.COD_0965,0)+ISNULL(T1.COD_1039,0)+ISNULL(T1.COD_0189,0)))ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))-ISNULL(T1.COD_0020,0))END)AS UN,(CASE WHEN T1.PERIODO>=2018 THEN(0)ELSE(ISNULL(T1.COD_0628,0)+ISNULL(T1.COD_0851,0)-(ISNULL(T1.COD_0630,0)+ISNULL(T1.COD_0853,0))-(ISNULL(T1.COD_0927,0))-ISNULL(T1.COD_0631,0)-(ISNULL(T1.COD_0635,0)+ISNULL(T1.COD_0941,0)+ISNULL(T1.COD_0968,0)+ISNULL(T1.COD_0969,0))+ISNULL(T1.COD_0629,0)+ISNULL(T1.COD_0651,0)-(ISNULL(T1.COD_0633,0)+ISNULL(T1.COD_0967,0))-(ISNULL(T1.COD_0852,0)+ISNULL(T1.COD_0897,0))-(ISNULL(T1.COD_0966,0))-(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0))-ISNULL(T1.COD_0020,0)+ISNULL(T1.COD_0927,0)+(ISNULL(T1.COD_0637,0)-ISNULL(T1.COD_0638,0)))END)AS GOC,T1.COD_0315 AS FEC FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA ORDER BY T1.PERIODO DESC GO
ValidacionTributaria	[dbo].[eerr1_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.EERR1_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE AS RETURN SELECT TOP 5 T1.PERIODO AS PER,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0628 IS NULL THEN 0 ELSE T1.COD_0628 END)END)AS ING,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0630 IS NULL THEN 0 ELSE(0-T1.COD_0630)END)END)AS CD,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0628 IS NULL THEN 0 ELSE T1.COD_0628 END)+(CASE WHEN T1.COD_0630 IS NULL THEN 0 ELSE(0-T1.COD_0630)END)END)AS MB,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0629 IS NULL THEN 0 ELSE T1.COD_0629 END+CASE WHEN T1.COD_0651 IS NULL THEN 0 ELSE T1.COD_0651 END)END)AS OI,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(0-CASE WHEN T1.COD_0631 IS NULL THEN 0 ELSE T1.COD_0631 END-CASE WHEN T1.COD_0632 IS NULL THEN 0 ELSE T1.COD_0632 END)END)AS CI,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE((CASE WHEN T1.COD_0628 IS NULL THEN 0 ELSE T1.COD_0628 END-CASE WHEN T1.COD_0630 IS NULL THEN 0 ELSE T1.COD_0630 END)+(CASE WHEN T1.COD_0629 IS NULL THEN 0 ELSE T1.COD_0629 END+CASE WHEN T1.COD_0651 IS NULL THEN 0 ELSE T1.COD_0651 END)+0-CASE WHEN T1.COD_0631 IS NULL THEN 0 ELSE T1.COD_0631 END-CASE WHEN T1.COD_0632 IS NULL THEN 0 ELSE T1.COD_0632 END)END)AS MO,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0633 IS NULL THEN 0 ELSE 0-T1.COD_0633 END)END)AS GF,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(0-CASE WHEN T1.COD_0635 IS NULL THEN 0 ELSE T1.COD_0635 END-CASE WHEN T1.COD_0637 IS NULL THEN 0 ELSE T1.COD_0637 END+CASE WHEN T1.COD_0638 IS NULL THEN 0 ELSE T1.COD_0638 END+CASE WHEN T1.COD_0639 IS NULL THEN 0 ELSE T1.COD_0639 END)END)AS OG,(CASE WHEN T1.PERIODO>=2018 THEN(CASE WHEN(T1.COD_0963+T1.COD_1037+T1.COD_0187)>0 THEN(ISNULL(T1.COD_0963,0)+ISNULL(T1.COD_1037,0)+ISNULL(T1.COD_0187,0))ELSE(ISNULL(T1.COD_0122,0)-ISNULL(T1.COD_0123,0))END)ELSE((CASE WHEN T1.COD_0628 IS NULL THEN 0 ELSE T1.COD_0628 END-CASE WHEN T1.COD_0630 IS NULL THEN 0 ELSE T1.COD_0630 END+CASE WHEN T1.COD_0629 IS NULL THEN 0 ELSE T1.COD_0629 END+CASE WHEN T1.COD_0651 IS NULL THEN 0 ELSE T1.COD_0651 END-CASE WHEN T1.COD_0640 IS NULL THEN 0 ELSE T1.COD_0640 END-CASE WHEN T1.COD_0641 IS NULL THEN 0 ELSE T1.COD_0641 END-CASE WHEN T1.COD_0642 IS NULL THEN 0 ELSE T1.COD_0642 END+0-CASE WHEN T1.COD_0631 IS NULL THEN 0 ELSE T1.COD_0631 END-CASE WHEN T1.COD_0632 IS NULL THEN 0 ELSE T1.COD_0632 END)+(CASE WHEN T1.COD_0633 IS NULL THEN 0 ELSE 0-T1.COD_0633 END)+(0-CASE WHEN T1.COD_0635 IS NULL THEN 0 ELSE T1.COD_0635 END-CASE WHEN T1.COD_0637 IS NULL THEN 0 ELSE T1.COD_0637 END+CASE WHEN T1.COD_0638 IS NULL THEN 0 ELSE T1.COD_0638 END+CASE WHEN T1.COD_0639 IS NULL THEN 0 ELSE T1.COD_0639 END))END)AS RE,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0634 IS NULL THEN 0 ELSE 0-T1.COD_0634 END)END)AS PEA,(CASE WHEN T1.PERIODO>=2018 THEN 0 ELSE(CASE WHEN T1.COD_0628 IS NULL THEN 0 ELSE T1.COD_0628 END-CASE WHEN T1.COD_0630 IS NULL THEN 0 ELSE T1.COD_0630 END+CASE WHEN T1.COD_0629 IS NULL THEN 0 ELSE T1.COD_0629 END+CASE WHEN T1.COD_0651 IS NULL THEN 0 ELSE T1.COD_0651 END-CASE WHEN T1.COD_0640 IS NULL THEN 0 ELSE T1.COD_0640 END-CASE WHEN T1.COD_0641 IS NULL THEN 0 ELSE T1.COD_0641 END-CASE WHEN T1.COD_0642 IS NULL THEN 0 ELSE T1.COD_0642 END+0-CASE WHEN T1.COD_0631 IS NULL THEN 0 ELSE T1.COD_0631 END-CASE WHEN T1.COD_0632 IS NULL THEN 0 ELSE T1.COD_0632 END)+(CASE WHEN T1.COD_0633 IS NULL THEN 0 ELSE 0-T1.COD_0633 END)+(0-CASE WHEN T1.COD_0635 IS NULL THEN 0 ELSE T1.COD_0635 END-CASE WHEN T1.COD_0637 IS NULL THEN 0 ELSE T1.COD_0637 END+CASE WHEN T1.COD_0638 IS NULL THEN 0 ELSE T1.COD_0638 END+CASE WHEN T1.COD_0639 IS NULL THEN 0 ELSE T1.COD_0639 END)+(CASE WHEN T1.COD_0634 IS NULL THEN 0 ELSE 0-T1.COD_0634 END)END)AS RA,T1.COD_0315 AS FEC FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA ORDER BY T1.PERIODO DESC;GO
ValidacionTributaria	[dbo].[eerr2_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.EERR2_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE RETURN SELECT TOP 5 T1.PERIODO AS PER,(CASE WHEN T1.COD_0461 IS NULL THEN 0 ELSE T1.COD_0461 END)+(CASE WHEN T1.COD_0545 IS NULL THEN 0 ELSE T1.COD_0545 END)AS HON,(0-CASE WHEN T1.COD_0465 IS NULL THEN 0 ELSE T1.COD_0465 END)-(CASE WHEN T1.COD_0494 IS NULL THEN 0 ELSE T1.COD_0494 END)AS GEP,(CASE WHEN T1.COD_0461 IS NULL THEN 0 ELSE T1.COD_0461 END)+(CASE WHEN T1.COD_0545 IS NULL THEN 0 ELSE T1.COD_0545 END+0-CASE WHEN T1.COD_0465 IS NULL THEN 0 ELSE T1.COD_0465 END)-(CASE WHEN T1.COD_0494 IS NULL THEN 0 ELSE T1.COD_0494 END)AS MB,(CASE WHEN T1.COD_0617 IS NULL THEN 0 ELSE T1.COD_0617 END)AS RSP,(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END+CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END+CASE WHEN T1.COD_0109 IS NULL THEN 0 ELSE T1.COD_0109 END+CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END+CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END+CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END)AS SPO,(CASE WHEN T1.COD_0461 IS NULL THEN 0 ELSE T1.COD_0461 END)+(CASE WHEN T1.COD_0545 IS NULL THEN 0 ELSE T1.COD_0545 END+0-CASE WHEN T1.COD_0465 IS NULL THEN 0 ELSE T1.COD_0465 END)-(CASE WHEN T1.COD_0494 IS NULL THEN 0 ELSE T1.COD_0494 END)+(CASE WHEN T1.COD_0617 IS NULL THEN 0 ELSE T1.COD_0617 END)+(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END+CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END+CASE WHEN T1.COD_0109 IS NULL THEN 0 ELSE T1.COD_0109 END+CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END+CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END+CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END)AS MO,(0-CASE WHEN T1.COD_0770 IS NULL THEN 0 ELSE T1.COD_0770 END)AS APV,(0-CASE WHEN T1.COD_0872 IS NULL THEN 0 ELSE T1.COD_0872 END)AS DON,(CASE WHEN T1.COD_0461 IS NULL THEN 0 ELSE T1.COD_0461 END)+(CASE WHEN T1.COD_0545 IS NULL THEN 0 ELSE T1.COD_0545 END+0-CASE WHEN T1.COD_0465 IS NULL THEN 0 ELSE T1.COD_0465 END)-(CASE WHEN T1.COD_0494 IS NULL THEN 0 ELSE T1.COD_0494 END)+(CASE WHEN T1.COD_0617 IS NULL THEN 0 ELSE T1.COD_0617 END+CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END)+(CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END+CASE WHEN T1.COD_0109 IS NULL THEN 0 ELSE T1.COD_0109 END+CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END+CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END+CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END+0-CASE WHEN T1.COD_0770 IS NULL THEN 0 ELSE T1.COD_0770 END+0-CASE WHEN T1.COD_0872 IS NULL THEN 0 ELSE T1.COD_0872 END)AS RE,T1.COD_0315 AS FEC FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA ORDER BY T1.PERIODO DESC;GO
ValidacionTributaria	[dbo].[rgc_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.RGC_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE AS RETURN SELECT TOP 5 T1.PERIODO AS PER,(CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END)AS SPE,(CASE WHEN T1.COD_0162 IS NULL THEN 0 ELSE T1.COD_0162 END)AS CSC,(CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END)+(CASE WHEN T1.COD_0162 IS NULL THEN 0 ELSE T1.COD_0162 END)AS TRF,(CASE WHEN T1.COD_0110 IS NULL THEN 0 ELSE T1.COD_0110 END)AS HRD,(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END)AS RET,(CASE WHEN T1.PERIODO>=2018 THEN(ISNULL(T1.COD_0105,0)+ISNULL(T1.COD_1029,0)+ISNULL(T1.COD_0959,0)+ISNULL(T1.COD_0108,0))ELSE(ISNULL(T1.COD_0105,0))END)AS DD,(CASE WHEN T1.COD_0106 IS NULL THEN 0 ELSE T1.COD_0106 END)AS GR,(CASE WHEN T1.COD_0166 IS NULL THEN 0 ELSE T1.COD_0166 END)AS IPAA,(CASE WHEN T1.PERIODO>=2018 THEN((CASE WHEN T1.COD_0110 IS NULL THEN 0 ELSE T1.COD_0110 END)+(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END+CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END)+(CASE WHEN T1.COD_0106 IS NULL THEN 0 ELSE T1.COD_0106 END+CASE WHEN T1.COD_0165 IS NULL THEN 0 ELSE T1.COD_0165 END)+(CASE WHEN T1.COD_0166 IS NULL THEN 0 ELSE T1.COD_0166 END)+((CASE WHEN T1.COD_1029 IS NULL THEN 0 ELSE T1.COD_1029 END)+(CASE WHEN T1.COD_0959 IS NULL THEN 0 ELSE T1.COD_0959 END))+(CASE WHEN T1.COD_0108 IS NULL THEN 0 ELSE T1.COD_0108 END))ELSE((CASE WHEN T1.COD_0110 IS NULL THEN 0 ELSE T1.COD_0110 END)+(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END+CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END)+(CASE WHEN T1.COD_0106 IS NULL THEN 0 ELSE T1.COD_0106 END+CASE WHEN T1.COD_0165 IS NULL THEN 0 ELSE T1.COD_0165 END)+(CASE WHEN T1.COD_0166 IS NULL THEN 0 ELSE T1.COD_0166 END))END)AS TRV,(CASE WHEN T1.PERIODO>=2018 THEN(((CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END)-(CASE WHEN T1.COD_0169 IS NULL THEN 0 ELSE T1.COD_0169 END))+ISNULL(T1.COD_1032,0)+ISNULL(T1.COD_1104,0))ELSE(CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END)-(CASE WHEN T1.COD_0169 IS NULL THEN 0 ELSE T1.COD_0169 END)END)AS RGC,(CASE WHEN T1.PERIODO>=2018 THEN(CASE WHEN T1.COD_0955 IS NULL THEN 0 ELSE T1.COD_0955 END)ELSE((CASE WHEN T1.COD_0109 IS NULL THEN 0 ELSE T1.COD_0109 END))END)AS RCS,(CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END)AS REI,(CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)AS CE,(CASE WHEN T1.COD_0087 IS NULL THEN 0 ELSE T1.COD_0087 END)AS DS,(CASE WHEN T1.COD_0031 IS NULL THEN 0 ELSE T1.COD_0031 END)AS IGC,(CASE WHEN T1.PERIODO>=2018 THEN(((CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END)-(CASE WHEN T1.COD_0169 IS NULL THEN 0 ELSE T1.COD_0169 END))+(CASE WHEN T1.COD_0955 IS NULL THEN 0 ELSE T1.COD_0955 END+CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END)+(CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END+CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+(CASE WHEN T1.COD_0087 IS NULL THEN 0 ELSE T1.COD_0087 END+CASE WHEN T1.COD_0031 IS NULL THEN 0 ELSE T1.COD_0031 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END+CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END)+(CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END))ELSE(((CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END)-(CASE WHEN T1.COD_0169 IS NULL THEN 0 ELSE T1.COD_0169 END))+(CASE WHEN T1.COD_0955 IS NULL THEN 0 ELSE T1.COD_0955 END+CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END)+(CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END+CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+(CASE WHEN T1.COD_0087 IS NULL THEN 0 ELSE T1.COD_0087 END+CASE WHEN T1.COD_0031 IS NULL THEN 0 ELSE T1.COD_0031 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END+CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END))END)AS TOR,(CASE WHEN T1.PERIODO>=2018 THEN(CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END)+((CASE WHEN T1.COD_0162 IS NULL THEN 0 ELSE T1.COD_0162 END)+(CASE WHEN T1.COD_0110 IS NULL THEN 0 ELSE T1.COD_0110 END)+(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END+CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END)+(CASE WHEN T1.COD_1029 IS NULL THEN 0 ELSE T1.COD_1029 END)+(CASE WHEN T1.COD_0106 IS NULL THEN 0 ELSE T1.COD_0106 END+CASE WHEN T1.COD_0166 IS NULL THEN 0 ELSE T1.COD_0104 END)+(CASE WHEN T1.COD_0166 IS NULL THEN 0 ELSE T1.COD_0166 END))+(((CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END)-(CASE WHEN T1.COD_0169 IS NULL THEN 0 ELSE T1.COD_0169 END))+(CASE WHEN T1.COD_0955 IS NULL THEN 0 ELSE T1.COD_0955 END+CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END)+(CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END+CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+(CASE WHEN T1.COD_0087 IS NULL THEN 0 ELSE T1.COD_0087 END+CASE WHEN T1.COD_0031 IS NULL THEN 0 ELSE T1.COD_0031 END)+(CASE WHEN T1.COD_1032 IS NULL THEN 0 ELSE T1.COD_1032 END)+(CASE WHEN T1.COD_1104 IS NULL THEN 0 ELSE T1.COD_1104 END))ELSE((CASE WHEN T1.COD_0161 IS NULL THEN 0 ELSE T1.COD_0161 END)+(CASE WHEN T1.COD_0162 IS NULL THEN 0 ELSE T1.COD_0162 END)+(CASE WHEN T1.COD_0110 IS NULL THEN 0 ELSE T1.COD_0110 END)+(CASE WHEN T1.COD_0104 IS NULL THEN 0 ELSE T1.COD_0104 END)+(CASE WHEN T1.COD_0105 IS NULL THEN 0 ELSE T1.COD_0105 END)+(CASE WHEN T1.COD_1029 IS NULL THEN 0 ELSE T1.COD_0106 END)+(CASE WHEN T1.COD_0106 IS NULL THEN 0 ELSE T1.COD_0165 END)+(CASE WHEN T1.COD_0166 IS NULL THEN 0 ELSE T1.COD_0166 END)+((CASE WHEN T1.COD_0155 IS NULL THEN 0 ELSE T1.COD_0155 END)-(CASE WHEN T1.COD_0169 IS NULL THEN 0 ELSE T1.COD_0169 END))+(CASE WHEN T1.COD_0109 IS NULL THEN 0 ELSE T1.COD_0109 END)+(CASE WHEN T1.COD_0152 IS NULL THEN 0 ELSE T1.COD_0152 END)+(CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+(CASE WHEN T1.COD_0087 IS NULL THEN 0 ELSE T1.COD_0087 END)+(CASE WHEN T1.COD_0031 IS NULL THEN 0 ELSE T1.COD_0031 END))END)AS TRL,T1.COD_0315 AS FEC FROM FORM22 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA ORDER BY T1.PERIODO DESC;GO
ValidacionTributaria	[dbo].[ventas_acf_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.VENTAS_ACF_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE AS RETURN SELECT TOP 60 T1.COD_0015 AS PER,(CASE WHEN T1.COD_0020 IS NULL THEN 0 ELSE T1.COD_0020 END)+(CASE WHEN T1.COD_0142 IS NULL THEN 0 ELSE T1.COD_0142 END)+(CASE WHEN T1.COD_0732 IS NULL THEN 0 ELSE T1.COD_0732 END)+(CASE WHEN T1.COD_0715 IS NULL THEN 0 ELSE T1.COD_0715 END)+(CASE WHEN T1.COD_0587 IS NULL THEN 0 ELSE T1.COD_0587 END)+(CASE WHEN T1.COD_0720 IS NULL THEN 0 ELSE T1.COD_0720 END)+(IVASOR(CASE WHEN T1.COD_0502 IS NULL THEN 0 ELSE T1.COD_0502 END)+IVASOR(CASE WHEN T1.COD_0717 IS NULL THEN 0 ELSE T1.COD_0717 END)+IVASOR(CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+IVASOR(CASE WHEN T1.COD_0513 IS NULL THEN 0 ELSE T1.COD_0513 END)-IVASOR(CASE WHEN T1.COD_0510 IS NULL THEN 0 ELSE T1.COD_0510 END)-IVASOR(CASE WHEN T1.COD_0709 IS NULL THEN 0 ELSE T1.COD_0709 END)-IVASOR(CASE WHEN T1.COD_0734 IS NULL THEN 0 ELSE T1.COD_0734 END)+IVASOR(CASE WHEN T1.COD_0759 IS NULL THEN 0 ELSE T1.COD_0759 END)+IVASOR(CASE WHEN T1.COD_0501 IS NULL THEN 0 ELSE T1.COD_0501 END))AS VEN,(CASE WHEN T1.COD_0521 IS NULL THEN 0 ELSE T1.COD_0521 END)+(CASE WHEN T1.COD_0560 IS NULL THEN 0 ELSE T1.COD_0560 END)+(CASE WHEN T1.COD_0562 IS NULL THEN 0 ELSE T1.COD_0562 END)+(IVASOR(CASE WHEN T1.COD_0520 IS NULL THEN 0 ELSE T1.COD_0520 END)+IVASOR(CASE WHEN T1.COD_0525 IS NULL THEN 0 ELSE T1.COD_0525 END)-IVASOR(CASE WHEN T1.COD_0528 IS NULL THEN 0 ELSE T1.COD_0528 END)+IVASOR(CASE WHEN T1.COD_0532 IS NULL THEN 0 ELSE T1.COD_0532 END)+IVASOR(CASE WHEN T1.COD_0535 IS NULL THEN 0 ELSE T1.COD_0535 END)+IVASOR(CASE WHEN T1.COD_0553 IS NULL THEN 0 ELSE T1.COD_0553 END))AS COM,((CASE WHEN T1.COD_0020 IS NULL THEN 0 ELSE T1.COD_0020 END)+(CASE WHEN T1.COD_0142 IS NULL THEN 0 ELSE T1.COD_0142 END)+(CASE WHEN T1.COD_0732 IS NULL THEN 0 ELSE T1.COD_0732 END)+(CASE WHEN T1.COD_0715 IS NULL THEN 0 ELSE T1.COD_0715 END)+(CASE WHEN T1.COD_0587 IS NULL THEN 0 ELSE T1.COD_0587 END)+(CASE WHEN T1.COD_0720 IS NULL THEN 0 ELSE T1.COD_0720 END)+(IVASOR(CASE WHEN T1.COD_0502 IS NULL THEN 0 ELSE T1.COD_0502 END)+IVASOR(CASE WHEN T1.COD_0717 IS NULL THEN 0 ELSE T1.COD_0717 END)+IVASOR(CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+IVASOR(CASE WHEN T1.COD_0513 IS NULL THEN 0 ELSE T1.COD_0513 END)-IVASOR(CASE WHEN T1.COD_0510 IS NULL THEN 0 ELSE T1.COD_0510 END)-IVASOR(CASE WHEN T1.COD_0709 IS NULL THEN 0 ELSE T1.COD_0709 END)-IVASOR(CASE WHEN T1.COD_0734 IS NULL THEN 0 ELSE T1.COD_0734 END)+IVASOR(CASE WHEN T1.COD_0759 IS NULL THEN 0 ELSE T1.COD_0759 END)+IVASOR(CASE WHEN T1.COD_0501 IS NULL THEN 0 ELSE T1.COD_0501 END)))-((CASE WHEN T1.COD_0521 IS NULL THEN 0 ELSE T1.COD_0521 END)+(CASE WHEN T1.COD_0560 IS NULL THEN 0 ELSE T1.COD_0560 END)+(CASE WHEN T1.COD_0562 IS NULL THEN 0 ELSE T1.COD_0562 END)+(IVASOR(CASE WHEN T1.COD_0520 IS NULL THEN 0 ELSE T1.COD_0520 END)+IVASOR(CASE WHEN T1.COD_0525 IS NULL THEN 0 ELSE T1.COD_0525 END)-IVASOR(CASE WHEN T1.COD_0528 IS NULL THEN 0 ELSE T1.COD_0528 END)+IVASOR(CASE WHEN T1.COD_0532 IS NULL THEN 0 ELSE T1.COD_0532 END)+IVASOR(CASE WHEN T1.COD_0535 IS NULL THEN 0 ELSE T1.COD_0535 END)+IVASOR(CASE WHEN T1.COD_0553 IS NULL THEN 0 ELSE T1.COD_0553 END)))AS MAR,T1.COD_0091 AS IMP,100*(ROUND((ISNULL(T1.COD_0510,0)/0.19+ISNULL(T1.COD_0709,0)/0.19+ISNULL(T1.COD_0734,0)/0.19)/ISZERO(ISNULL(T1.COD_0020,0)+ISNULL(T1.COD_0142,0)+ISNULL(T1.COD_0732,0)+ISNULL(T1.COD_0715,0)+ISNULL(T1.COD_0587,0)+ISNULL(T1.COD_0720,0)+ISNULL(T1.COD_0502,0)/0.19+ISNULL(CAST(T1.COD_0717 AS BIGINT),0)/0.19+ISNULL(T1.COD_0111,0)/0.19+ISNULL(T1.COD_0513,0)/0.19+ISNULL(T1.COD_0501,0)/0.19+ISNULL(CAST(T1.COD_0759 AS BIGINT),0)/0.19,1),4))AS NC,T1.COD_0315 AS FEC,T1.COD_CHK AS CHK,T1.COD_0007 AS FOL,CASE WHEN T1.COD_0755 IS NULL THEN 0 ELSE T1.COD_0755 END AS POST FROM FORM29 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA AND T1.COD_0315=(SELECT MAX(T2.COD_0315)FROM FORM29 T2 WHERE T2.RUTCONTRIBUYENTE=T1.RUTCONTRIBUYENTE AND T2.COD_0015=T1.COD_0015)ORDER BY T1.PERIODO DESC GO
ValidacionTributaria	[dbo].[ventas_sql]	MustChange	OrderByWithAlias	Order By using column aliases	ORDER BY T1.PERIODO	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID(<str>)IS NULL EXEC(<str>)GO ALTER FUNCTION DBO.VENTAS_SQL(@RUT INT,@EMPRESA INT)RETURNS TABLE AS RETURN SELECT TOP 60 T1.COD_0015 AS PER,(CASE WHEN T1.COD_0020 IS NULL THEN 0 ELSE T1.COD_0020 END)+(CASE WHEN T1.COD_0142 IS NULL THEN 0 ELSE T1.COD_0142 END)+(CASE WHEN T1.COD_0732 IS NULL THEN 0 ELSE T1.COD_0732 END)+(CASE WHEN T1.COD_0715 IS NULL THEN 0 ELSE T1.COD_0715 END)+(CASE WHEN T1.COD_0587 IS NULL THEN 0 ELSE T1.COD_0587 END)+(CASE WHEN T1.COD_0720 IS NULL THEN 0 ELSE T1.COD_0720 END)+(IVASOR(CASE WHEN T1.COD_0502 IS NULL THEN 0 ELSE T1.COD_0502 END)+IVASOR(CASE WHEN T1.COD_0717 IS NULL THEN 0 ELSE T1.COD_0717 END)+IVASOR(CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+IVASOR(CASE WHEN T1.COD_0513 IS NULL THEN 0 ELSE T1.COD_0513 END)-IVASOR(CASE WHEN T1.COD_0510 IS NULL THEN 0 ELSE T1.COD_0510 END)-IVASOR(CASE WHEN T1.COD_0709 IS NULL THEN 0 ELSE T1.COD_0709 END)-IVASOR(CASE WHEN T1.COD_0734 IS NULL THEN 0 ELSE T1.COD_0734 END)+IVASOR(CASE WHEN T1.COD_0759 IS NULL THEN 0 ELSE T1.COD_0759 END)+IVASOR(CASE WHEN T1.COD_0501 IS NULL THEN 0 ELSE T1.COD_0501 END))AS VEN,(CASE WHEN T1.COD_0521 IS NULL THEN 0 ELSE T1.COD_0521 END)+(CASE WHEN T1.COD_0560 IS NULL THEN 0 ELSE T1.COD_0560 END)+(CASE WHEN T1.COD_0562 IS NULL THEN 0 ELSE T1.COD_0562 END)+(IVASOR(CASE WHEN T1.COD_0520 IS NULL THEN 0 ELSE T1.COD_0520 END)+IVASOR(CASE WHEN T1.COD_0525 IS NULL THEN 0 ELSE T1.COD_0525 END)-IVASOR(CASE WHEN T1.COD_0528 IS NULL THEN 0 ELSE T1.COD_0528 END)+IVASOR(CASE WHEN T1.COD_0532 IS NULL THEN 0 ELSE T1.COD_0532 END)+IVASOR(CASE WHEN T1.COD_0535 IS NULL THEN 0 ELSE T1.COD_0535 END)+IVASOR(CASE WHEN T1.COD_0553 IS NULL THEN 0 ELSE T1.COD_0553 END))AS COM,((CASE WHEN T1.COD_0020 IS NULL THEN 0 ELSE T1.COD_0020 END)+(CASE WHEN T1.COD_0142 IS NULL THEN 0 ELSE T1.COD_0142 END)+(CASE WHEN T1.COD_0732 IS NULL THEN 0 ELSE T1.COD_0732 END)+(CASE WHEN T1.COD_0715 IS NULL THEN 0 ELSE T1.COD_0715 END)+(CASE WHEN T1.COD_0587 IS NULL THEN 0 ELSE T1.COD_0587 END)+(CASE WHEN T1.COD_0720 IS NULL THEN 0 ELSE T1.COD_0720 END)+(IVASOR(CASE WHEN T1.COD_0502 IS NULL THEN 0 ELSE T1.COD_0502 END)+IVASOR(CASE WHEN T1.COD_0717 IS NULL THEN 0 ELSE T1.COD_0717 END)+IVASOR(CASE WHEN T1.COD_0111 IS NULL THEN 0 ELSE T1.COD_0111 END)+IVASOR(CASE WHEN T1.COD_0513 IS NULL THEN 0 ELSE T1.COD_0513 END)-IVASOR(CASE WHEN T1.COD_0510 IS NULL THEN 0 ELSE T1.COD_0510 END)-IVASOR(CASE WHEN T1.COD_0709 IS NULL THEN 0 ELSE T1.COD_0709 END)-IVASOR(CASE WHEN T1.COD_0734 IS NULL THEN 0 ELSE T1.COD_0734 END)+IVASOR(CASE WHEN T1.COD_0759 IS NULL THEN 0 ELSE T1.COD_0759 END)+IVASOR(CASE WHEN T1.COD_0501 IS NULL THEN 0 ELSE T1.COD_0501 END)))-((CASE WHEN T1.COD_0521 IS NULL THEN 0 ELSE T1.COD_0521 END)+(CASE WHEN T1.COD_0560 IS NULL THEN 0 ELSE T1.COD_0560 END)+(CASE WHEN T1.COD_0562 IS NULL THEN 0 ELSE T1.COD_0562 END)+(IVASOR(CASE WHEN T1.COD_0520 IS NULL THEN 0 ELSE T1.COD_0520 END)+IVASOR(CASE WHEN T1.COD_0525 IS NULL THEN 0 ELSE T1.COD_0525 END)-IVASOR(CASE WHEN T1.COD_0528 IS NULL THEN 0 ELSE T1.COD_0528 END)+IVASOR(CASE WHEN T1.COD_0532 IS NULL THEN 0 ELSE T1.COD_0532 END)+IVASOR(CASE WHEN T1.COD_0535 IS NULL THEN 0 ELSE T1.COD_0535 END)+IVASOR(CASE WHEN T1.COD_0553 IS NULL THEN 0 ELSE T1.COD_0553 END)))AS MAR,T1.COD_0091 AS IMP,T1.COD_0315 AS FEC,T1.COD_CHK AS CHK,T1.COD_0007 AS FOL,CASE WHEN T1.COD_0755 IS NULL THEN 0 ELSE T1.COD_0755 END AS POST FROM FORM29 T1,AUTORIZAFORM A1 WHERE T1.RUTCONTRIBUYENTE=@RUT AND T1.VIGENTE=<str>AND T1.COD_0007=A1.FOLIO AND A1.IDEMPRESA=@EMPRESA AND T1.COD_0315=(SELECT MAX(T2.COD_0315)FROM FORM29 T2 WHERE T2.RUTCONTRIBUYENTE=T1.RUTCONTRIBUYENTE AND T2.COD_0015=T1.COD_0015)ORDER BY T1.PERIODO DESC GO
ValidacionTributaria	[dbo].[sp_buscar_csv_empresa]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SP_BUSCAR_CSV_EMPRESA')IS NULL EXEC('CREATE PROCEDURE DBO.SP_BUSCAR_CSV_EMPRESA AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SP_BUSCAR_CSV_EMPRESA(@ITIPO_FUNCION INT,@VCEMPRESA VARCHAR(200))AS DECLARE@SQL NVARCHAR(1000)BEGIN IF(@ITIPO_FUNCION=1)BEGIN SELECT EMPRESA.IDEMPRESA,RAZONSOCIAL,NOMBREFANTASIA,SUFIJO FROM EMPRESA,CONTRATO,EMPRESAINSTITUCION WHERE EMPRESA.ESTADO=1 AND EMPRESA.IDEMPRESA=CONTRATO.IDEMPRESA AND EMPRESA.IDEMPRESA=EMPRESAINSTITUCION.IDEMPRESA AND CONTRATO.VIGENTE=1 GROUP BY SUFIJO,EMPRESA.IDEMPRESA,EMPRESA.RAZONSOCIAL,NOMBREFANTASIA END IF(@ITIPO_FUNCION=2)BEGIN SET@SQL='SELECT EMPRESA.IDEMPRESA,RAZONSOCIAL,NOMBREFANTASIA,SUFIJO FROM EMPRESA,CONTRATO,EMPRESAINSTITUCION WHERE EMPRESA.ESTADO=1 AND EMPRESA.IDEMPRESA=CONTRATO.IDEMPRESA AND EMPRESA.IDEMPRESA=EMPRESAINSTITUCION.IDEMPRESA AND CONTRATO.VIGENTE=1 AND EMPRESA.IDEMPRESA IN('+@VCEMPRESA+')GROUP BY SUFIJO,EMPRESA.IDEMPRESA,EMPRESA.RAZONSOCIAL,NOMBREFANTASIA'EXEC SP_EXECUTESQL@SQL END END GO
ValidacionTributaria	[dbo].[sp_buscar_form22]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SP_BUSCAR_FORM22')IS NULL EXEC('CREATE PROCEDURE DBO.SP_BUSCAR_FORM22 AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SP_BUSCAR_FORM22(@VCCADENA_PERIODO VARCHAR(20),@VCCADENA_RUT VARCHAR(15))AS BEGIN DECLARE@SQL NVARCHAR(1000)SET@SQL='SELECT COD_0007,COD_0315 FROM FORM22 WHERE RUTCONTRIBUYENTE='+@VCCADENA_RUT+'PERIODO='+@VCCADENA_PERIODO EXEC SP_EXECUTESQL@SQL END GO
ValidacionTributaria	[dbo].[sp_buscar_form29]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER ON GO IF OBJECT_ID('DBO.SP_BUSCAR_FORM29')IS NULL EXEC('CREATE PROCEDURE DBO.SP_BUSCAR_FORM29 AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SP_BUSCAR_FORM29(@VCCADENA_PERIODO VARCHAR(20),@VCCADENA_RUT VARCHAR(15))AS BEGIN DECLARE@SQL NVARCHAR(1000)SET@SQL='SELECT*FROM FORM29 WHERE RUTCONTRIBUYENTE='+@VCCADENA_RUT+'PERIODO='+@VCCADENA_PERIODO EXEC SP_EXECUTESQL@SQL END GO
ValidacionTributaria	[dbo].[sp_insertar_contribuyente]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID('DBO.SP_INSERTAR_CONTRIBUYENTE')IS NULL EXEC('CREATE PROCEDURE DBO.SP_INSERTAR_CONTRIBUYENTE AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SP_INSERTAR_CONTRIBUYENTE@IRUTCONTRIBUYENTE INT,@VCNCONTRIBUYENTE VARCHAR(1),@VCRAZONSOCIAL VARCHAR(200),@VCDIRECCION VARCHAR(200),@VCCOMUNA VARCHAR(100),@VCCORREO VARCHAR(80),@ITELEFONO INT,@VCGIRO VARCHAR(200),@VCPATERNO VARCHAR(40),@VCMATERNO VARCHAR(40),@VCNOMBRES VARCHAR(60),@VCFECHA_CREA VARCHAR(24),@VCFECHA_ACT VARCHAR(24),@VCFECHAINI VARCHAR(24),@VCCATEGORIA VARCHAR(30),@VCOBSERVACION VARCHAR(30),@SALIDA INT OUTPUT AS BEGIN DECLARE@SQL NVARCHAR(MAX)DECLARE@SQL2 NVARCHAR(MAX)DECLARE@VACIO VARCHAR DECLARE@ULTIMO VARCHAR(2)DECLARE@VALOR VARCHAR(2)SET@SQL2=''SET@SQL=''SET@VACIO=''BEGIN TRY IF(@VCFECHAINI IS NOT NULL)BEGIN IF(@VCFECHAINI<>@VACIO)BEGIN IF(@VCFECHAINI<>'NO')BEGIN IF(YEAR(CONVERT(DATETIME,@VCFECHAINI))<1992)BEGIN SET@VCFECHAINI='1992-12-31'END END ELSE SET@VCFECHAINI=''END ELSE SET@VCFECHAINI=''END ELSE SET@VCFECHAINI=''IF NOT EXISTS(SELECT 1 FROM CONTRIBUYENTE WHERE RUTCONTRIBUYENTE=@IRUTCONTRIBUYENTE)BEGIN INSERT INTO CONTRIBUYENTE(RUTCONTRIBUYENTE,NCONTRIBUYENTE,RAZONSOCIAL,DIRECCION,COMUNA,CORREO,TELEFONO,PATERNO,MATERNO,NOMBRES,FECCREACION,FECACTUALIZACION,FECHAINICIOACTIVIDADES,CATEGORIA,OBSERVACION)VALUES(@IRUTCONTRIBUYENTE,@VCNCONTRIBUYENTE,@VCRAZONSOCIAL,@VCDIRECCION,@VCCOMUNA,@VCCORREO,@ITELEFONO,@VCPATERNO,@VCMATERNO,@VCNOMBRES,@VCFECHA_CREA,@VCFECHA_ACT,@VCFECHAINI,@VCCATEGORIA,@VCOBSERVACION)SET@SALIDA=1 END ELSE BEGIN IF(@VCRAZONSOCIAL IS NOT NULL)IF(@VCRAZONSOCIAL<>@VACIO)SET@SQL2=@SQL2+'RAZONSOCIAL=@VCRAZONSOCIAL,'IF(@VCDIRECCION IS NOT NULL)IF(@VCDIRECCION<>@VACIO)SET@SQL2=@SQL2+'DIRECCION=@VCDIRECCION,'IF(@VCCOMUNA IS NOT NULL)IF(@VCCOMUNA<>@VACIO)SET@SQL2=@SQL2+'COMUNA=@VCCOMUNA,'IF(@VCCORREO IS NOT NULL)IF(@VCCORREO<>@VACIO)SET@SQL2=@SQL2+'CORREO=@VCCORREO,'IF(@ITELEFONO IS NOT NULL)IF(@VCCORREO<>@VACIO)SET@SQL2=@SQL2+'TELEFONO='+CONVERT(VARCHAR(15),@ITELEFONO)+','IF(@VCGIRO IS NOT NULL)IF(@VCGIRO<>@VACIO)SET@SQL2=@SQL2+'GIRO=@VCGIRO,'IF(@VCPATERNO IS NOT NULL)IF(@VCPATERNO<>@VACIO)SET@SQL2=@SQL2+'PATERNO=@VCPATERNO,'IF(@VCMATERNO IS NOT NULL)IF(@VCMATERNO<>@VACIO)SET@SQL2=@SQL2+'MATERNO=@VCMATERNO,'IF(@VCNOMBRES IS NOT NULL)IF(@VCNOMBRES<>@VACIO)SET@SQL2=@SQL2+'NOMBRES=@VCNOMBRES,'IF(@VCFECHA_CREA IS NOT NULL)IF(@VCFECHA_CREA<>@VACIO)SET@SQL2=@SQL2+'FECCREACION=@VCFECHA_CREA,'SET@SQL2=@SQL2+'FECHAINICIOACTIVIDADES=@VCFECHAINI,'IF(@VCCATEGORIA IS NOT NULL)IF(@VCCATEGORIA<>@VACIO)SET@SQL2=@SQL2+'CATEGORIA=@VCCATEGORIA,'IF(@VCOBSERVACION IS NOT NULL)IF(@VCOBSERVACION<>@VACIO)SET@SQL2=@SQL2+'OBSERVACION=@VCOBSERVACION'SET@ULTIMO=SUBSTRING(@SQL2,LEN(@SQL2),1)SET@VALOR=CHAR(44);IF(@ULTIMO=@VALOR)BEGIN SET@SQL2=SUBSTRING(@SQL2,1,LEN(@SQL2)-1)END IF(@SQL2 IS NOT NULL)BEGIN SET@SQL='UPDATE CONTRIBUYENTE SET'+@SQL2+'WHERE RUTCONTRIBUYENTE='+CONVERT(VARCHAR(15),@IRUTCONTRIBUYENTE)EXEC SP_EXECUTESQL@SQL,N'@VCRAZONSOCIAL NVARCHAR(200),@VCDIRECCION NVARCHAR(200),@VCCOMUNA NVARCHAR(200),@VCCORREO NVARCHAR(200),@ITELEFONO NVARCHAR(20),@VCGIRO NVARCHAR(200),@VCPATERNO NVARCHAR(200),@VCMATERNO NVARCHAR(200),@VCNOMBRES NVARCHAR(200),@VCFECHA_CREA NVARCHAR(200),@VCFECHA_ACT NVARCHAR(200),@VCFECHAINI NVARCHAR(200),@VCCATEGORIA NVARCHAR(200),@VCOBSERVACION NVARCHAR(200)',@VCRAZONSOCIAL,@VCDIRECCION,@VCCOMUNA,@VCCORREO,@ITELEFONO,@VCGIRO,@VCPATERNO,@VCMATERNO,@VCNOMBRES,@VCFECHA_CREA,@VCFECHA_ACT,@VCFECHAINI,@VCCATEGORIA,@VCOBSERVACION;SET@SALIDA=1 END END END TRY BEGIN CATCH SET@SALIDA=0 END CATCH RETURN(@SALIDA)END GO
ValidacionTributaria	[dbo].[sp_insertar_form22]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID('DBO.SP_INSERTAR_FORM22')IS NULL EXEC('CREATE PROCEDURE DBO.SP_INSERTAR_FORM22 AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SP_INSERTAR_FORM22@VC_ESTADO_CODIGO VARCHAR(10),@IPERIODO INT,@IVIGENTE INT,@VCCOD_0315 VARCHAR(25),@BICOD_0007 BIGINT,@IRUT INT,@VCCOD_9925 NVARCHAR(50),@NVCCAMPOS NVARCHAR(MAX),@NVCVALORES NVARCHAR(MAX),@ISALIDA INT OUTPUT AS BEGIN DECLARE@NCSEPARADOR NCHAR(1)DECLARE@VCCONCATENACAMPOS VARCHAR(MAX)DECLARE@VCCONCATENAVALORES VARCHAR(MAX)DECLARE@IPOSICIONCAMPOS INT DECLARE@IPOSICIONVALORES INT DECLARE@NCSQL NVARCHAR(4000)DECLARE@COBTIENERF CHAR(2)DECLARE@VCCOD_0315_BD VARCHAR(25)SET@VCCONCATENACAMPOS=''SET@VCCONCATENAVALORES=''''SET@NCSEPARADOR=','SET@IPOSICIONCAMPOS=1 SET@IPOSICIONVALORES=1 SET@NVCCAMPOS=@NVCCAMPOS+@NCSEPARADOR SET@NVCVALORES=@NVCVALORES+@NCSEPARADOR WHILE CHARINDEX(@NCSEPARADOR,@NVCCAMPOS,@IPOSICIONCAMPOS)<>0 BEGIN SET@VCCONCATENACAMPOS+=SUBSTRING(@NVCCAMPOS,@IPOSICIONCAMPOS,CHARINDEX(@NCSEPARADOR,@NVCCAMPOS,@IPOSICIONCAMPOS)+-@IPOSICIONCAMPOS)+','SET@IPOSICIONCAMPOS=CHARINDEX(@NCSEPARADOR,@NVCCAMPOS,@IPOSICIONCAMPOS)+1 END WHILE CHARINDEX(@NCSEPARADOR,@NVCVALORES,@IPOSICIONVALORES)<>0 BEGIN SET@VCCONCATENAVALORES+=SUBSTRING(@NVCVALORES,@IPOSICIONVALORES,CHARINDEX(@NCSEPARADOR,@NVCVALORES,@IPOSICIONVALORES)+-@IPOSICIONVALORES)+''','''SET@IPOSICIONVALORES=CHARINDEX(@NCSEPARADOR,@NVCVALORES,@IPOSICIONVALORES)+1 END SELECT@VCCONCATENACAMPOS=SUBSTRING(@VCCONCATENACAMPOS,1,LEN(@VCCONCATENACAMPOS)-1)SELECT@VCCONCATENAVALORES=SUBSTRING(@VCCONCATENAVALORES,1,LEN(@VCCONCATENAVALORES)-2)SET@NCSQL='INSERT INTO FORM22'+'('+@VCCONCATENACAMPOS+')VALUES'+'('+@VCCONCATENAVALORES+')'SELECT@NCSQL IF CAST(RTRIM(LTRIM(@VC_ESTADO_CODIGO))AS INT)=0 BEGIN SELECT@BICOD_0007 IF NOT EXISTS(SELECT 1 FROM FORM22 WHERE COD_0007=@BICOD_0007)BEGIN GUARDAR: SELECT@NCSQL EXEC SP_EXECUTESQL@NCSQL SELECT@ISALIDA=1 RETURN@ISALIDA SELECT@COBTIENERF=SUBSTRING(@VCCOD_9925,1,2)IF@COBTIENERF='RF'BEGIN DECLARE@VCCOD_0315_CUR VARCHAR(25),@IRUTCUR INT,@IPERIODOCUR INT,@ICOD_0007CUR INT DECLARE CURFORMULARIO CURSOR FOR SELECT COD_0315,RUTCONTRIBUYENTE,PERIODO,COD_0007 FROM FORM22 WHERE RUTCONTRIBUYENTE=@IRUT AND PERIODO=@IPERIODO OPEN CURFORMULARIO FETCH CURFORMULARIO INTO@VCCOD_0315_CUR,@IRUTCUR,@IPERIODOCUR,@ICOD_0007CUR WHILE(@@FETCH_STATUS=0)BEGIN SELECT CAST(@VCCOD_0315 AS DATETIME)SELECT CAST(@VCCOD_0315_CUR AS DATETIME)IF CAST(@VCCOD_0315 AS DATETIME)>CAST(@VCCOD_0315_CUR AS DATETIME)BEGIN SELECT'ENTRE FECHA VIENE ES MAYOR A BD'UPDATE FORM22 SET VIGENTE=0 WHERE COD_0007=@ICOD_0007CUR END ELSE BEGIN UPDATE FORM22 SET VIGENTE=0 WHERE COD_0007=@BICOD_0007 END FETCH CURFORMULARIO INTO@VCCOD_0315_CUR,@IRUTCUR,@IPERIODOCUR END CLOSE CURFORMULARIO DEALLOCATE CURFORMULARIO END ELSE BEGIN SELECT'NO VIENE FR'END END ELSE BEGIN UPDATE FORM22 SET VIGENTE=1 WHERE COD_0007=@BICOD_0007 DELETE FROM FORM22 WHERE COD_0007=@BICOD_0007 GOTO GUARDAR SELECT@ISALIDA=0 RETURN@ISALIDA END END ELSE BEGIN IF CAST(RTRIM(LTRIM(@VC_ESTADO_CODIGO))AS INT)=1 BEGIN SET@ISALIDA=0 UPDATE FORM22 SET VIGENTE=0 WHERE COD_0007=@BICOD_0007 SELECT@ISALIDA=0 RETURN@ISALIDA END END RETURN(@ISALIDA)END GO
ValidacionTributaria	[dbo].[sp_insertar_form29]	Information	Sp_Execute	Using dynamic sql	SP_EXECUTE	SET ANSI_NULLS ON SET QUOTED_IDENTIFIER OFF GO IF OBJECT_ID('DBO.SP_INSERTAR_FORM29')IS NULL EXEC('CREATE PROCEDURE DBO.SP_INSERTAR_FORM29 AS PRINT''TEMPORARY OBJECT,DELETE AFTER ALL OBJECTS ARE CREATED''')GO ALTER PROCEDURE DBO.SP_INSERTAR_FORM29@VCESTADO_CODIGO VARCHAR(10),@IPERIODO INT,@IVIGENTE INT,@ICOD_CHK NVARCHAR(MAX),@VCCLASE VARCHAR(50),@VCCOD_0315 VARCHAR(25),@BICOD_0007 BIGINT,@IRUT INT,@NVCCAMPOS NVARCHAR(MAX),@NVCVALORES NVARCHAR(MAX),@ISALIDA INT OUTPUT AS BEGIN DECLARE@NCSEPARADOR NCHAR(1)DECLARE@VCCONCATENACAMPOS VARCHAR(MAX)DECLARE@VCCONCATENAVALORES VARCHAR(MAX)DECLARE@IPOSICIONCAMPOS INT DECLARE@IPOSICIONVALORES INT DECLARE@NCSQL NVARCHAR(4000)DECLARE@VCCOD_0315_BD VARCHAR(25)SET@VCCONCATENACAMPOS=''SET@VCCONCATENAVALORES=''''SET@NCSEPARADOR=','SET@IPOSICIONCAMPOS=1 SET@IPOSICIONVALORES=1 SET@NVCCAMPOS=@NVCCAMPOS+@NCSEPARADOR SET@NVCVALORES=@NVCVALORES+@NCSEPARADOR WHILE CHARINDEX(@NCSEPARADOR,@NVCCAMPOS,@IPOSICIONCAMPOS)<>0 BEGIN SET@VCCONCATENACAMPOS+=SUBSTRING(@NVCCAMPOS,@IPOSICIONCAMPOS,CHARINDEX(@NCSEPARADOR,@NVCCAMPOS,@IPOSICIONCAMPOS)+-@IPOSICIONCAMPOS)+','SET@IPOSICIONCAMPOS=CHARINDEX(@NCSEPARADOR,@NVCCAMPOS,@IPOSICIONCAMPOS)+1 END WHILE CHARINDEX(@NCSEPARADOR,@NVCVALORES,@IPOSICIONVALORES)<>0 BEGIN SET@VCCONCATENAVALORES+=SUBSTRING(@NVCVALORES,@IPOSICIONVALORES,CHARINDEX(@NCSEPARADOR,@NVCVALORES,@IPOSICIONVALORES)+-@IPOSICIONVALORES)+''','''SET@IPOSICIONVALORES=CHARINDEX(@NCSEPARADOR,@NVCVALORES,@IPOSICIONVALORES)+1 END SELECT@VCCONCATENACAMPOS=SUBSTRING(@VCCONCATENACAMPOS,1,LEN(@VCCONCATENACAMPOS)-1)SELECT@VCCONCATENAVALORES=SUBSTRING(@VCCONCATENAVALORES,1,LEN(@VCCONCATENAVALORES)-2)SET@NCSQL='INSERT INTO FORM29'+'('+@VCCONCATENACAMPOS+')VALUES'+'('+@VCCONCATENAVALORES+')'SELECT@NCSQL IF CAST(RTRIM(LTRIM(@VCESTADO_CODIGO))AS INT)=0 BEGIN IF NOT EXISTS(SELECT 1 FROM FORM29 WHERE COD_0007=@BICOD_0007)BEGIN GUARDAR: EXEC SP_EXECUTESQL@NCSQL SELECT@ISALIDA=1 RETURN@ISALIDA IF RTRIM(LTRIM(@VCCLASE))<>'PRIMITIVA'BEGIN DECLARE@VCCOD_0315_CUR VARCHAR(25),@IRUTCUR INT,@IPERIODOCUR INT,@ICOD_0007CUR INT DECLARE CURFORMULARIO CURSOR FOR SELECT COD_0315,RUTCONTRIBUYENTE,PERIODO,COD_0007 FROM FORM29 WHERE RUTCONTRIBUYENTE=@IRUT AND PERIODO=@IPERIODO OPEN CURFORMULARIO FETCH CURFORMULARIO INTO@VCCOD_0315_CUR,@IRUTCUR,@IPERIODOCUR,@ICOD_0007CUR WHILE(@@FETCH_STATUS=0)BEGIN SELECT CAST(@VCCOD_0315 AS DATETIME)SELECT CAST(@VCCOD_0315_CUR AS DATETIME)IF CAST(@VCCOD_0315 AS DATETIME)>CAST(@VCCOD_0315_CUR AS DATETIME)BEGIN PRINT'ENTRE FECHA VIENE ES MAYOR A BD'UPDATE FORM29 SET VIGENTE=0 WHERE COD_0007=@ICOD_0007CUR END ELSE BEGIN UPDATE FORM29 SET VIGENTE=0 WHERE COD_0007=@BICOD_0007 END FETCH CURFORMULARIO INTO@VCCOD_0315_CUR,@IRUTCUR,@IPERIODOCUR END CLOSE CURFORMULARIO DEALLOCATE CURFORMULARIO END ELSE BEGIN PRINT'NO VIENE FR'END END ELSE BEGIN UPDATE FORM29 SET VIGENTE=1 WHERE COD_0007=@BICOD_0007 DELETE FROM FORM29 WHERE COD_0007=@BICOD_0007 GOTO GUARDAR SELECT@ISALIDA=0 RETURN@ISALIDA END END ELSE BEGIN IF CAST(RTRIM(LTRIM(@VCESTADO_CODIGO))AS INT)=1 BEGIN UPDATE FORM29 SET VIGENTE=0 WHERE COD_0007=@BICOD_0007 SELECT@ISALIDA=0 RETURN@ISALIDA END END RETURN(@ISALIDA)END GO
