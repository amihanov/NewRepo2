SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaArchivoAResponder]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaArchivoAResponder] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaArchivoAResponder]
@error varchar(255)  OUTPUT,
   @vcCodigoInstitucion varchar(4),
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaArchivoAResponder
   *    *  Objetivo:       Consulta sobre los tipos de archivos disponibles, de acuerdo a un perfil.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 29/07/2010
   *    *
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoInstitucion  Codigo de la institucion.
   *    *                  @vcCodigoTipoArchivo  Codigo del tipo de archivo.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT 
         t1.group_expr$1 AS vcFechaEnvio, 
         t1.group_expr$2 AS vcHoraEnvio, 
         t1.group_expr$3 AS vcCodigoInstitucionOrigen, 
         t1.group_expr$4 AS vcCodigoInstitucionDestino, 
         t1.group_expr$5 AS vcCodigoCasilla, 
         t1.group_expr$6 AS vcCodigoTipoArchivo, 
         t1.group_expr$7 AS vcNombreArchivo, 
         agg_expr$1
      FROM 
         (
            SELECT 
               ta.iNumeroRespuestas AS col$1, 
               te.vcFechaEnvio AS group_expr$1, 
               te.vcHoraEnvio AS group_expr$2, 
               te.vcCodigoInstitucionOrigen AS group_expr$3, 
               te.vcCodigoInstitucionDestino AS group_expr$4, 
               te.vcCodigoCasilla AS group_expr$5, 
               ta.vcCodigoTipoArchivo AS group_expr$6, 
               te.vcNombreArchivo AS group_expr$7
            FROM dbo.tblTransEnvio  AS te, dbo.tblTipoArchivo  AS ta
         )  AS t1 
            INNER JOIN 
            (
               SELECT 
                  count(tr.vcFechaEnvioFK) AS agg_expr$1, 
                  count(tr.vcFechaEnvioFK) AS agg_expr$2, 
                  te.vcFechaEnvio AS group_expr$1, 
                  te.vcHoraEnvio AS group_expr$2, 
                  te.vcCodigoInstitucionOrigen AS group_expr$3, 
                  te.vcCodigoInstitucionDestino AS group_expr$4, 
                  te.vcCodigoCasilla AS group_expr$5, 
                  ta.vcCodigoTipoArchivo AS group_expr$6, 
                  te.vcNombreArchivo AS group_expr$7
               FROM 
                  dbo.tblTipoArchivo  AS ta, 
                  dbo.tblTransEnvio  AS te 
                     LEFT OUTER JOIN dbo.tblTransRespuesta  AS tr 
                     ON 
                        tr.vcFechaEnvioFK = te.vcFechaEnvio AND 
                        tr.vcHoraEnvioFK = te.vcHoraEnvio AND 
                        tr.vcCodigoInstitucionOrigenFK = te.vcCodigoInstitucionOrigen AND 
                        tr.vcCodigoInstitucionDestinoFK = te.vcCodigoInstitucionDestino AND 
                        tr.vcCodigoCasillaFK = te.vcCodigoCasilla AND 
                        tr.vcCodigoTipoArchivoFK = te.vcCodigoTipoArchivo AND 
                        tr.vcNombreArchivoFK = te.vcNombreArchivo
               WHERE 
                  te.vcCodigoInstitucionDestino = @vcCodigoInstitucion AND 
                  te.vcCodigoTipoArchivo = @vcCodigoTipoArchivo AND 
                  te.vcCodigoTipoArchivo = ta.vcCodigoTipoArchivo AND 
                  te.vcEstadoEnvio = '2' AND 
                  te.vcEstadoRescate = '1'
               GROUP BY 
                  te.vcFechaEnvio, 
                  te.vcHoraEnvio, 
                  te.vcCodigoInstitucionOrigen, 
                  te.vcCodigoInstitucionDestino, 
                  te.vcCodigoCasilla, 
                  ta.vcCodigoTipoArchivo, 
                  te.vcNombreArchivo
            )  AS t2 
            ON 
               t1.group_expr$1 = t2.group_expr$1 AND 
               t1.group_expr$2 = t2.group_expr$2 AND 
               t1.group_expr$3 = t2.group_expr$3 AND 
               t1.group_expr$4 = t2.group_expr$4 AND 
               t1.group_expr$5 = t2.group_expr$5 AND 
               t1.group_expr$6 = t2.group_expr$6 AND 
               t1.group_expr$7 = t2.group_expr$7
      WHERE col$1 > agg_expr$2
      ORDER BY t1.group_expr$3, t1.group_expr$7
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO
