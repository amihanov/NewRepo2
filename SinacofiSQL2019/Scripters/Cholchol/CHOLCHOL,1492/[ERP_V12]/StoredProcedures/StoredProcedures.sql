
GO
--SqlScripter----[dbo].[A30EMBRA_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[A30EMBRA_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[A30EMBRA_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[A30EMBRA_01]
(
    @IN_A30EMBRA Float , 
    @OUT_TXMEDIA Float  output ) AS
 
-- Declaration of variables
DECLARE @nTxMedia Float
BEGIN
   SET @nTxMedia  = @IN_A30EMBRA 
   SET @OUT_TXMEDIA  = @nTxMedia 
END
GO

GO
--SqlScripter----[dbo].[A30EMBRA_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[A30EMBRA_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[A30EMBRA_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[A30EMBRA_02]
(
    @IN_A30EMBRA Float , 
    @OUT_TXMEDIA Float  output ) AS
 
-- Declaration of variables
DECLARE @nTxMedia Float
BEGIN
   SET @nTxMedia  = @IN_A30EMBRA 
   SET @OUT_TXMEDIA  = @nTxMedia 
END
GO

GO
--SqlScripter----[dbo].[AF050CAL_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[AF050CAL_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[AF050CAL_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[AF050CAL_01]
AS 
 
-- Declaration of variables
DECLARE @cVar Char( 01 )
BEGIN
   SET @cVar  = '' 
END
GO

GO
--SqlScripter----[dbo].[AF050CAL_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[AF050CAL_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[AF050CAL_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[AF050CAL_02]
AS 
 
-- Declaration of variables
DECLARE @cVar Char( 01 )
BEGIN
   SET @cVar  = '' 
END
GO

GO
--SqlScripter----[dbo].[AF050FPR_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[AF050FPR_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[AF050FPR_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[AF050FPR_11_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_SEQ Char( 3) , 
    @IN_DATA Char( 08 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cRet Char( 01 )
BEGIN
   SET @cRet  = '1' 
   SET @OUT_RESULT  = @cRet 
END
GO

GO
--SqlScripter----[dbo].[AF050FPR_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[AF050FPR_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[AF050FPR_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[AF050FPR_11_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_SEQ Char( 3) , 
    @IN_DATA Char( 08 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cRet Char( 01 )
BEGIN
   SET @cRet  = '1' 
   SET @OUT_RESULT  = @cRet 
END
GO

GO
--SqlScripter----[dbo].[ATF001_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF001_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF001_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF001_11_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_LMESCHEIO Char( 01 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_LFUNDADA Char( 01 ) , 
    @IN_MOEDAATF Char( 02 ) , 
    @IN_LCORRECAO Char( 01 ) , 
    @IN_VCORRECAO Float , 
    @IN_LEYDL824 Char( 01 ) , 
    @IN_TXDEPOK Float , 
    @IN_ATFMBLQ Char( 01 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_ATFMDMX Char( 02 ) , 
    @IN_IDMOV Char( 10 ) , 
    @IN_CASAS1 Char( 02 ) , 
    @IN_CASAS2 Char( 02 ) , 
    @IN_CASAS3 Char( 02 ) , 
    @IN_CASAS4 Char( 02 ) , 
    @IN_CASAS5 Char( 02 ) , 
    @IN_CASASN Char( 200 ) , 
    @IN_MOEDAMAX Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial Char( 2)
DECLARE @cFilial_SN1 Char( 2)
DECLARE @cFilial_SN3 Char( 2)
DECLARE @cFilial_SN4 Char( 2)
DECLARE @cFilial_SNG Char( 2)
DECLARE @cDataIniDep Char( 08 )
DECLARE @cN1_GRUPO Char( 4)
DECLARE @iRecnoSN1 Integer
DECLARE @cN3_CBASE Char( 10)
DECLARE @cN3_ITEM Char( 4)
DECLARE @cN3_TIPO Char( 2)
DECLARE @cN3_SEQ Char( 3)
DECLARE @cN3_TPDEPR Char( 01 )
DECLARE @cN3_BAIXA Char( 01 )
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_TXDEPR1 Float
DECLARE @nN3_TXDEPR2 Float
DECLARE @nN3_TXDEPR3 Float
DECLARE @nN3_TXDEPR4 Float
DECLARE @nN3_TXDEPR5 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @cN3_DTBAIXA Char( 08 )
DECLARE @cN3_AQUISIC Char( 08 )
DECLARE @cN3_DINDEPR Char( 08 )
DECLARE @cN3_CCONTAB Char( 20)
DECLARE @cN3_DEPREC Char( 40)
DECLARE @cN3_CCORREC Char( 20)
DECLARE @cN3_CCCORR Char( 9)
DECLARE @cN3_SUBCCOR Char( 9)
DECLARE @cN3_CCCDEP Char( 9)
DECLARE @cN3_SUBCCDE Char( 9)
DECLARE @cN3_CDEPREC Char( 20)
DECLARE @cN3_SUBCDEP Char( 9)
DECLARE @cN3_CCCDES Char( 9)
DECLARE @cN3_SUBCDES Char( 9)
DECLARE @cN3_CLVLCON Char( 9)
DECLARE @cN3_CUSTBEM Char( 9)
DECLARE @cN3_CLVLDEP Char( 9)
DECLARE @cN3_CCDESP Char( 9)
DECLARE @cN3_CCDEPR Char( 20)
DECLARE @cN3_CLVLCDE Char( 9)
DECLARE @cN3_CDESP Char( 20)
DECLARE @cN3_CLVLDES Char( 9)
DECLARE @cN3_SUBCTA Char( 9)
DECLARE @cN3_CLVL Char( 9)
DECLARE @cN3_SUBCCON Char( 9)
DECLARE @cN3_CLVLCOR Char( 9)
DECLARE @cN3_FIMDEPR Char( 08 )
DECLARE @cN3_NOVO Char( 01 )
DECLARE @iRecnoSN3 Integer
DECLARE @nN3_PRODMES Float
DECLARE @nN3_PRODANC Float
DECLARE @nN3_YTD Integer
DECLARE @cAux VarChar( 03 )
DECLARE @lCalcCor Char( 01 )
DECLARE @nTxMedia Float
DECLARE @iRecnoSNG Integer
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValorOrig Float
DECLARE @nValorAcum Float
DECLARE @nVORIG1 Float
DECLARE @nVORIG2 Float
DECLARE @nVORIG3 Float
DECLARE @nVORIG4 Float
DECLARE @nVORIG5 Float
DECLARE @nVRDACM1 Float
DECLARE @nVRDACM2 Float
DECLARE @nVRDACM3 Float
DECLARE @nVRDACM4 Float
DECLARE @nVRDACM5 Float
DECLARE @nVRCACM1 Float
DECLARE @nVRCDA1 Float
DECLARE @cFIMDEPR Char( 08 )
DECLARE @cHistor Char( 40)
DECLARE @cN3_SEQREAV Char( 2)
DECLARE @cN3_CCUSTO Char( 9)
DECLARE @iSeq Integer
DECLARE @iAux Integer
DECLARE @nAMPLIA1 Float
DECLARE @nAMPLIA2 Float
DECLARE @nAMPLIA3 Float
DECLARE @nAMPLIA4 Float
DECLARE @nAMPLIA5 Float
DECLARE @nTxDep Float
DECLARE @iRecnoAux Integer
DECLARE @nVRDACM1_TP01 Float
DECLARE @nVRCDA1_TP01 Float
DECLARE @nVORIG1_TP01 Float
DECLARE @nVRCACM1_TP01 Float
DECLARE @iRecnoSN3_TP09 Integer
DECLARE @cN3_DTACELE Char( 08 )
DECLARE @nN3_VLACEL1 Float
DECLARE @nN3_VLACEL2 Float
DECLARE @nN3_VLACEL3 Float
DECLARE @nN3_VLACEL4 Float
DECLARE @nN3_VLACEL5 Float
DECLARE @lAcelera Char( 01 )
DECLARE @cCalcula Char( 01 )
DECLARE @cN3_TIPOAux Char( 2)
DECLARE @nVRDACM1Tp07 Float
DECLARE @nVRDACM2Tp07 Float
DECLARE @nVRDACM3Tp07 Float
DECLARE @nVRDACM4Tp07 Float
DECLARE @nVRDACM5Tp07 Float
DECLARE @nVRCDA1Tp07 Float
DECLARE @iRecnoTp07 Integer
DECLARE @nValor1 Float
DECLARE @nValor2 Float
DECLARE @nValor3 Float
DECLARE @nValor4 Float
DECLARE @nValor5 Float
DECLARE @nValorX Float
DECLARE @cCasas1 VarChar( 4 )
DECLARE @cCasas2 VarChar( 4 )
DECLARE @cCasas3 VarChar( 4 )
DECLARE @cCasas4 VarChar( 4 )
DECLARE @cCasas5 VarChar( 4 )
DECLARE @nCasas1 Integer
DECLARE @nCasas2 Integer
DECLARE @nCasas3 Integer
DECLARE @nCasas4 Integer
DECLARE @nCasas5 Integer
DECLARE @nCasasAtf Integer
DECLARE @iN3_PERDEPR Integer
DECLARE @nN3_PRODANO Float
DECLARE @nN3_VMXDEPR Float
DECLARE @nN3_VLSALV1 Float
DECLARE @cN3_TPSALDO Char( 01 )
DECLARE @cN1_TPBEM Char( 04 )
DECLARE @cNX_TPBEM Char( 02 )
DECLARE @cN3_CODIND Char( 08 )
DECLARE @cN1_CALCPIS Char( 1)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @nCasas1  = 0   
   SET @nCasas2  = 0   
   SET @nCasas3  = 0   
   SET @nCasas4  = 0   
   SET @nCasas5  = 0   
   SET @nCasasAtf  = 0 
   SET @cCasas1  = '2'   
   SET @cCasas2  = '2'   
   SET @cCasas3  = '2'   
   SET @cCasas4  = '2'   
   SET @cCasas5  = '2' 
   SET @iN3_PERDEPR  = 0   
   SET @nN3_PRODMES  = 0   
   SET @nN3_PRODANO  = 0   
   SET @nN3_VMXDEPR  = 0   
   SET @nN3_VLSALV1  = 0   
   SET @nN3_VRDACM1  = 0   
   SET @cN3_TPSALDO  = ' '   
   SET @cN1_CALCPIS  = ' ' 
   SET @cN1_TPBEM  = ' '   
   SET @cNX_TPBEM  = ' ' 
   SET @cN3_CODIND  = ' ' 
   SET @cCasas1  = @IN_CASAS1   
   SET @cCasas2  = @IN_CASAS2   
   SET @cCasas3  = @IN_CASAS3   
   SET @cCasas4  = @IN_CASAS4   
   SET @cCasas5  = @IN_CASAS5 
   SET @nCasas1  = CONVERT( Integer ,@cCasas1 )  
   SET @nCasas2  = CONVERT( Integer ,@cCasas2 )  
   SET @nCasas3  = CONVERT( Integer ,@cCasas3 )  
   SET @nCasas4  = CONVERT( Integer ,@cCasas4 )  
   SET @nCasas5  = CONVERT( Integer ,@cCasas5 )
   SET @cAux  = 'SN3' 
   EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SN3 output 
   SET @cFilial  = ' ' 
   SET @OUT_RESULTADO  = '0'   
   SET @cCalcula  = '1'   
   SET @iRecnoSN1  = null   
   SET @iRecnoSN3  = 0   
   SET @iRecnoSNG  = null   
   SET @lCalcCor  = '0'   
   SET @cN3_DTACELE  = ' ' 
   SET @nTxMedia  = 0   
   SET @nTxDep  = 0   
   SET @nN3_PRODMES  = 0   
   SET @nN3_PRODANC  = 0   
   SET @iSeq  = 0   
   SET @nN3_YTD  = 0   
   SET @nN3_VLACEL1  = 0   
   SET @nN3_VLACEL2  = 0   
   SET @nN3_VLACEL3  = 0   
   SET @nN3_VLACEL4  = 0   
   SET @nN3_VLACEL5  = 0 
   SET @cDataIniDep  = SUBSTRING ( @IN_DATADEP , 1 , 6 ) + '01' 
   IF  ( (@IN_LCORRECAO  = '1'  and @IN_VCORRECAO  > 0 )  or  (@IN_DATADEP  < '19960101' ) ) 
   BEGIN 
      SET @lCalcCor  = '1' 
   END 
    
   -- Cursor declaration CUR_ATF050
   DECLARE CUR_ATF050 insensitive  CURSOR FOR 
   SELECT N3_CBASE , N3_ITEM , N3_TIPO , N3_SEQ , N3_TPDEPR , N3_DEPREC , N3_CCORREC , N3_CCCORR , N3_SUBCCOR , N3_BAIXA , 
          N3_VRDACM1 , N3_VORIG1 , N3_VORIG2 , N3_VORIG3 , N3_VORIG4 , N3_VORIG5 , N3_TXDEPR1 , N3_TXDEPR2 , N3_TXDEPR3 , 
          N3_TXDEPR4 , N3_TXDEPR5 , N3_VRCDA1 , N3_AQUISIC , N3_DTBAIXA , N3_DINDEPR , N3_CCUSTO , N3_CCONTAB , N3_CCCDEP , 
          N3_SUBCCDE , N3_CDEPREC , N3_SUBCDEP , N3_CCCDES , N3_SUBCDES , N3_NOVO , N3_CLVLCON , N3_CUSTBEM , N3_CLVLDEP , 
          N3_CCDESP , N3_CCDEPR , N3_CLVLCDE , N3_CDESP , N3_CLVLDES , N3_SUBCTA , N3_CLVL , N3_SUBCCON , N3_CLVLCOR , N3_SEQREAV , 
          N3_FILIAL , R_E_C_N_O_ , N3_FIMDEPR , N3_DTACELE , N3_VLACEL1 , N3_VLACEL2 , N3_VLACEL3 , N3_VLACEL4 , N3_VLACEL5 , 
          N3_PERDEPR , N3_PRODMES , N3_PRODANO , N3_VMXDEPR , N3_VLSALV1 , N3_TPSALDO , N3_CODIND 
     FROM SN3010 
     WHERE N3_FILIAL  between @cFilial_SN3 and @IN_FILIALATE  and  (N3_FIMDEPR  = ' '  or  (N3_FIMDEPR  != ' '  and  (N3_VRDMES1  + N3_VRDMES2  + N3_VRDMES3  + N3_VRDMES4  + N3_VRDMES5 
      > 0 ) ) )  and N3_CCONTAB  != ' '  and N3_AQUISIC  <= @IN_DATADEP  and N3_DINDEPR  <= @IN_DATADEP  and  (N3_DTBAIXA  = ' ' 
      or  (N3_DTBAIXA  between @cDataIniDep and @IN_DATADEP ) )  and  (N3_BAIXA  < '1'  or  (N3_BAIXA  >= '1'  and N3_NOVO  = '1' 
     ) )  and N3_TIPO NOT IN ( '03' , '33' , '13'  )  and D_E_L_E_T_  = ' ' 
     ORDER BY N3_FILIAL , N3_CBASE , N3_ITEM , N3_TIPO 
   FOR READ ONLY 
    
   OPEN CUR_ATF050
   FETCH CUR_ATF050 
    INTO @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_SEQ , @cN3_TPDEPR , @cN3_DEPREC , @cN3_CCORREC , @cN3_CCCORR , @cN3_SUBCCOR , 
          @cN3_BAIXA , @nN3_VRDACM1 , @nN3_VORIG1 , @nN3_VORIG2 , @nN3_VORIG3 , @nN3_VORIG4 , @nN3_VORIG5 , @nN3_TXDEPR1 , 
          @nN3_TXDEPR2 , @nN3_TXDEPR3 , @nN3_TXDEPR4 , @nN3_TXDEPR5 , @nN3_VRCDA1 , @cN3_AQUISIC , @cN3_DTBAIXA , @cN3_DINDEPR , 
          @cN3_CCUSTO , @cN3_CCONTAB , @cN3_CCCDEP , @cN3_SUBCCDE , @cN3_CDEPREC , @cN3_SUBCDEP , @cN3_CCCDES , @cN3_SUBCDES , 
          @cN3_NOVO , @cN3_CLVLCON , @cN3_CUSTBEM , @cN3_CLVLDEP , @cN3_CCDESP , @cN3_CCDEPR , @cN3_CLVLCDE , @cN3_CDESP , 
          @cN3_CLVLDES , @cN3_SUBCTA , @cN3_CLVL , @cN3_SUBCCON , @cN3_CLVLCOR , @cN3_SEQREAV , @cFilial , @iRecnoSN3 , @cN3_FIMDEPR , 
          @cN3_DTACELE , @nN3_VLACEL1 , @nN3_VLACEL2 , @nN3_VLACEL3 , @nN3_VLACEL4 , @nN3_VLACEL5 , @iN3_PERDEPR , @nN3_PRODMES , 
          @nN3_PRODANO , @nN3_VMXDEPR , @nN3_VLSALV1 , @cN3_TPSALDO , @cN3_CODIND 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'SN1' 
      EXEC XFILIAL_11_01 @cAux , @cFilial , @cFilial_SN1 output 
      SET @cAux  = 'SN4' 
      EXEC XFILIAL_11_01 @cAux , @cFilial , @cFilial_SN4 output 
      SET @cAux  = 'SNG' 
      EXEC XFILIAL_11_01 @cAux , @cFilial , @cFilial_SNG output 
      SET @nVRCDA1  = 0   
      SET @iRecnoAux  = null   
      SET @nValDepr1  = 0   
      SET @nValDepr2  = 0   
      SET @nValDepr3  = 0   
      SET @nValDepr4  = 0   
      SET @nValDepr5  = 0   
      SET @lAcelera  = '0'   
      SET @nValor1  = 0   
      SET @nValor2  = 0 
      SET @nValor3  = 0   
      SET @nValor4  = 0   
      SET @nValor5  = 0   
      SET @nValorX  = 0   
      SET @iRecnoTp07  = null   
      SET @nAMPLIA1  = 0   
      SET @nAMPLIA2  = 0   
      SET @nAMPLIA3  = 0   
      SET @nAMPLIA4  = 0   
      SET @nAMPLIA5  = 0 
      SET @nValorOrig  = 0   
      SET @nValorAcum  = 0   
      SET @cN1_CALCPIS  = ' ' 
      EXEC AF050FPR_11_01 @cFilial , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_SEQ , @IN_DATADEP , @cCalcula output 
      IF @cCalcula  = '1' 
      BEGIN 
         IF  (@cN3_DTACELE  != ' '  and  (SUBSTRING ( @cN3_DTACELE , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 ) and  (@cN3_DTACELE  <= @IN_DATADEP 
           ) ) ) 
         BEGIN 
            SET @lAcelera  = '1' 
         END 
         ELSE 
         BEGIN 
            IF  (@cN3_DTACELE  != ' '  and  (@cN3_DTACELE  > @IN_DATADEP ) ) 
            BEGIN 
               SET @lAcelera  = '2' 
            END 
         END 
         IF  (@lAcelera  = '0'  or @lAcelera  = '1' ) 
         BEGIN 
            IF @cN3_TIPO  = '08'  and @IN_CPAISLOC  = 'BRA' 
            BEGIN 
               SELECT @iRecnoAux  = R_E_C_N_O_ 
                 FROM SN3010 
                 WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and N3_TIPO  = '09'  and  (N3_BAIXA  = ' ' 
                  or N3_BAIXA  = '0' )  and D_E_L_E_T_  = ' ' 
            END 
            IF @iRecnoAux is null 
            BEGIN 
               IF @cN3_DTBAIXA  != ' '  and  ( (SUBSTRING ( @cN3_DTBAIXA , 5 , 2 ) < SUBSTRING ( @IN_DATADEP , 5 , 2 ))  and  (SUBSTRING ( @cN3_DTBAIXA , 
                      1 , 4 ) < SUBSTRING ( @IN_DATADEP , 1 , 4 )) ) 
               BEGIN 
                  UPDATE SN3010 
                    WITH (ROWLOCK) 
                     SET N3_VRDMES1  = 0 , N3_VRDMES2  = 0 , N3_VRDMES3  = 0 , N3_VRDMES4  = 0 , N3_VRDMES5  = 0 , N3_VRCMES1  = 0 
                    , N3_VRCDM1  = 0 
                   WHERE R_E_C_N_O_  = @iRecnoSN3 
               END 
               ELSE 
               BEGIN 
                  SELECT @cN1_GRUPO  = N1_GRUPO , @iRecnoSN1  = R_E_C_N_O_ , @cN1_TPBEM  = N1_TPBEM , @cN1_CALCPIS  = COALESCE ( N1_CALCPIS , 
                         ' ' )
                    FROM SN1010 
                    WHERE N1_FILIAL  = @cFilial_SN1  and N1_CBASE  = @cN3_CBASE  and N1_ITEM  = @cN3_ITEM  and N1_DTBLOQ  < @IN_DATADEP 
                     and D_E_L_E_T_  = ' ' 
                  EXEC ATF011_11_01 @cFilial , @IN_CPAISLOC , @cN3_CBASE , @cN3_ITEM , @cN3_CCDEPR , @cN3_CDEPREC , @cN3_CCORREC , 
                         @cN3_CDESP , @cN3_DINDEPR , @IN_DATADEP , @cN3_AQUISIC , @cN3_DTBAIXA , @nN3_TXDEPR1 , @nN3_TXDEPR2 , 
                         @nN3_TXDEPR3 , @nN3_TXDEPR4 , @nN3_TXDEPR5 , @iRecnoSN3 , @cN3_TPDEPR , @nN3_YTD , @nN3_PRODMES , 
                         @nN3_PRODANC , @IN_LFUNDADA , @IN_MOEDAATF , @IN_LCORRECAO , @IN_VCORRECAO , @IN_TXDEPOK , @IN_LEYDL824 , 
                         @IN_LMESCHEIO , @IN_ATFMBLQ , @IN_CALCDEP , @iN3_PERDEPR , @nN3_PRODANO , @nN3_VRDACM1 , @nN3_VORIG1 , 
                         @nN3_VLSALV1 , @IN_ATFMDMX , @cN3_CODIND , @nValDepr1 output , @nValDepr2 output , @nValDepr3 output , 
                         @nValDepr4 output , @nValDepr5 output , @nValCor output , @nValCorDep output , @nTxMedia output , 
                         @nTxDep output 
                  IF @cN1_TPBEM  = ' ' 
                  BEGIN 
                     SET @cNX_TPBEM  = @cN3_TIPO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cNX_TPBEM  = SUBSTRING ( @cN1_TPBEM , 1 , 2 )
                  END 
                  EXEC ATF012_11_01 @IN_CPAISLOC , @cFilial_SN4 , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_CCORREC , @cN3_CCONTAB , 
                         @cN3_SUBCCON , @cN3_CCDEPR , @cN3_CCCDEP , @cN3_SUBCCDE , @cN3_CDESP , @cN3_CDEPREC , @cN3_CCDESP , 
                         @cN3_SUBCDEP , @cN3_CCCDES , @cN3_SUBCDES , @IN_DATADEP , @cN3_DINDEPR , @cN3_CCCORR , @cN3_SEQ , 
                         @cN3_SUBCCOR , @cN3_SEQREAV , @nTxMedia , @nTxDep , @nValCor , @nValCorDep , @nValDepr1 , @nValDepr2 , 
                         @nValDepr3 , @nValDepr4 , @nValDepr5 , @cN3_TPSALDO , @nN3_PRODMES , @IN_IDMOV , @cNX_TPBEM , @nCasas1 , 
                         @nCasas2 , @nCasas3 , @nCasas4 , @nCasas5 , @cN1_CALCPIS 
                  IF @cN3_NOVO  = '1' 
                  BEGIN 
                     SET @cN3_NOVO  = '2' 
                  END 
                  begin tran 
                  IF @lAcelera  = '1' 
                  BEGIN 
                     UPDATE SN3010 
                       WITH (ROWLOCK) 
                        SET N3_NOVO  = @cN3_NOVO , N3_VRDMES1  = N3_VRDMES1  + ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDMES2  = N3_VRDMES2  + ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDMES3  = N3_VRDMES3  + ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDMES4  = N3_VRDMES4  + ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDMES5  = N3_VRDMES5  + ROUND ( @nValDepr5 , @nCasas5 ), N3_VRDACM1  = N3_VRDACM1  + ROUND ( @nValDepr1 , 
                            @nCasas1 ), N3_VRDACM2  = N3_VRDACM2  + ROUND ( @nValDepr2 , @nCasas2 ), N3_VRDACM3  = N3_VRDACM3  + ROUND ( @nValDepr3 , 
                            @nCasas3 ), N3_VRDACM4  = N3_VRDACM4  + ROUND ( @nValDepr4 , @nCasas4 ), N3_VRDACM5  = N3_VRDACM5  + ROUND ( @nValDepr5 , 
                            @nCasas5 ), N3_VRDBAL1  = N3_VRDBAL1  + ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDBAL2  = N3_VRDBAL2  + ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDBAL3  = N3_VRDBAL3  + ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDBAL4  = N3_VRDBAL4  + ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDBAL5  = N3_VRDBAL5  + ROUND ( @nValDepr5 , @nCasas5 ), N3_VRCMES1  = ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCACM1  = N3_VRCACM1  + ROUND ( @nValCor , @nCasas1 ), N3_VRCBAL1  = N3_VRCBAL1  + ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCDM1  = ROUND ( @nValCorDep , @nCasas1 ), N3_VRCDB1  = N3_VRCDB1  + ROUND ( @nValCorDep , 
                            @nCasas1 ), N3_VRCDA1  = N3_VRCDA1  + ROUND ( @nValCorDep , @nCasas1 )
                      WHERE R_E_C_N_O_  = @iRecnoSN3 
                  END 
                  ELSE 
                  BEGIN 
                     UPDATE SN3010 
                       WITH (ROWLOCK) 
                        SET N3_NOVO  = @cN3_NOVO , N3_VRDMES1  = ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDMES2  = ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDMES3  = ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDMES4  = ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDMES5  = ROUND ( @nValDepr5 , @nCasas5 ), N3_VRDACM1  = N3_VRDACM1  + ROUND ( @nValDepr1 , 
                            @nCasas1 ), N3_VRDACM2  = N3_VRDACM2  + ROUND ( @nValDepr2 , @nCasas2 ), N3_VRDACM3  = N3_VRDACM3  + ROUND ( @nValDepr3 , 
                            @nCasas3 ), N3_VRDACM4  = N3_VRDACM4  + ROUND ( @nValDepr4 , @nCasas4 ), N3_VRDACM5  = N3_VRDACM5  + ROUND ( @nValDepr5 , 
                            @nCasas5 ), N3_VRDBAL1  = N3_VRDBAL1  + ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDBAL2  = N3_VRDBAL2  + ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDBAL3  = N3_VRDBAL3  + ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDBAL4  = N3_VRDBAL4  + ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDBAL5  = N3_VRDBAL5  + ROUND ( @nValDepr5 , @nCasas5 ), N3_VRCMES1  = ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCACM1  = N3_VRCACM1  + ROUND ( @nValCor , @nCasas1 ), N3_VRCBAL1  = N3_VRCBAL1  + ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCDM1  = ROUND ( @nValCorDep , @nCasas1 ), N3_VRCDB1  = N3_VRCDB1  + ROUND ( @nValCorDep , 
                            @nCasas1 ), N3_VRCDA1  = N3_VRCDA1  + ROUND ( @nValCorDep , @nCasas1 )
                      WHERE R_E_C_N_O_  = @iRecnoSN3 
                  END 
                  commit tran 
                  SELECT @nVRDACM1  = N3_VRDACM1 , @nVRDACM2  = N3_VRDACM2 , @nVRDACM3  = N3_VRDACM3 , @nVRDACM4  = N3_VRDACM4 
                    , @nVRDACM5  = N3_VRDACM5 , @nVORIG1  = N3_VORIG1 , @nVORIG2  = N3_VORIG2 , @nVORIG3  = N3_VORIG3 , @nVORIG4  = N3_VORIG4 
                    , @nVORIG5  = N3_VORIG5 , @nAMPLIA1  = N3_AMPLIA1 , @nAMPLIA2  = N3_AMPLIA2 , @nAMPLIA3  = N3_AMPLIA3 
                    , @nAMPLIA4  = N3_AMPLIA4 , @nAMPLIA5  = N3_AMPLIA5 , @nVRCACM1  = N3_VRCACM1 , @nVRCDA1  = N3_VRCDA1 
                    , @cFIMDEPR  = N3_FIMDEPR 
                    FROM SN3010 
                    WHERE R_E_C_N_O_  = @iRecnoSN3  and N3_FIMDEPR  = ' '  and D_E_L_E_T_  = ' ' 
                  IF @IN_MOEDAATF  = '01' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG1  + @nVRCACM1  + @nAMPLIA1 
                     SET @nValorAcum  = @nVRDACM1  + @nVRCDA1 
                     SET @nCasasAtf  = @nCasas1 
                  END 
                  IF @IN_MOEDAATF  = '02' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG2  + @nAMPLIA2 
                     SET @nValorAcum  = @nVRDACM2 
                     SET @nCasasAtf  = @nCasas2 
                  END 
                  IF @IN_MOEDAATF  = '03' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG3  + @nAMPLIA3 
                     SET @nValorAcum  = @nVRDACM3 
                     SET @nCasasAtf  = @nCasas3 
                  END 
                  IF @IN_MOEDAATF  = '04' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG4  + @nAMPLIA4 
                     SET @nValorAcum  = @nVRDACM4 
                     SET @nCasasAtf  = @nCasas4 
                  END 
                  IF @IN_MOEDAATF  = '05' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG5  + @nAMPLIA5 
                     SET @nValorAcum  = @nVRDACM5 
                     SET @nCasasAtf  = @nCasas5 
                  END 
                  IF @cN3_TIPO IN ( '07' , '01'  )  and @IN_CPAISLOC  = 'BRA' 
                  BEGIN 
                     IF @cN3_TIPO  = '07' 
                     BEGIN 
                        SET @cN3_TIPOAux  = '01' 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cN3_TIPOAux  = '07' 
                     END 
                     SELECT @nVRDACM1Tp07  = N3_VRDACM1 , @nVRDACM2Tp07  = N3_VRDACM2 , @nVRDACM3Tp07  = N3_VRDACM3 , @nVRDACM4Tp07  = N3_VRDACM4 
                       , @nVRDACM5Tp07  = N3_VRDACM5 , @nVRCDA1Tp07  = N3_VRCDA1 , @iRecnoTp07  = R_E_C_N_O_ 
                       FROM SN3010 
                       WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and N3_TIPO  = @cN3_TIPOAux 
                        and D_E_L_E_T_  = ' ' 
                     IF @iRecnoTp07 is NOT null 
                     BEGIN 
                        SET @nValor1  = @nVRDACM1Tp07  + @nVRCDA1Tp07 
                        SET @nValor2  = @nVRDACM2Tp07 
                        SET @nValor3  = @nVRDACM3Tp07 
                        SET @nValor4  = @nVRDACM4Tp07 
                        SET @nValor5  = @nVRDACM5Tp07 
                        IF @IN_MOEDAATF  = '02' 
                        BEGIN 
                           SET @nValorX  = @nValor2 
                        END 
                        IF @IN_MOEDAATF  = '03' 
                        BEGIN 
                           SET @nValorX  = @nValor3 
                        END 
                        IF @IN_MOEDAATF  = '04' 
                        BEGIN 
                           SET @nValorX  = @nValor4 
                        END 
                        IF @IN_MOEDAATF  = '05' 
                        BEGIN 
                           SET @nValorX  = @nValor5 
                        END 
                     END 
                  END 
                  IF @cFIMDEPR  = ' '  and @cN3_FIMDEPR  = ' ' 
                  BEGIN 
                     IF @iRecnoTp07 is null 
                     BEGIN 
                        SET @iRecnoTp07  = 0 
                     END 
                     EXEC ATF014_11_01 @cN3_TIPO , @cN3_TPDEPR , @IN_DATADEP , @cN3_DINDEPR , @IN_CALCDEP , @iN3_PERDEPR , 
                            @iRecnoSN3 , @iRecnoTp07 , @nCasas1 , @nCasasAtf , @nVORIG1 , @nVRCACM1 , @nAMPLIA1 , @nVRDACM1 , 
                            @nVRCDA1 , @nValorOrig , @nValorAcum , @nValor1 , @nValorX , @nN3_VLSALV1 , @nN3_VMXDEPR 
                  END 
                  IF @cN3_TIPO  = '08'  and @IN_CPAISLOC  = 'BRA' 
                  BEGIN 
                     IF @iRecnoAux is null 
                     BEGIN 
                        SELECT @nVORIG1_TP01  = N3_VORIG1 , @nVRCACM1_TP01  = N3_VRCACM1 , @nVRDACM1_TP01  = N3_VRDACM1 , 
                               @nVRCDA1_TP01  = N3_VRCDA1 
                          FROM SN3010 
                          WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and N3_TIPO  = '01' 
                           and  (N3_BAIXA  = ' '  or N3_BAIXA  = '0' )  and N3_SEQ  = '001'  and D_E_L_E_T_  = ' ' 
                        IF  ( (@nVRDACM1_TP01  + @nVRCDA1_TP01 )  +  (@nVRDACM1  + @nVRCDA1 ) )  >=  (@nVORIG1_TP01  + @nVRCACM1_TP01 
                          ) 
                        BEGIN 
                           IF @iRecnoSN1 is NOT null 
                           BEGIN 
                              SET @iRecnoSNG  = NULL 
                              SELECT @iRecnoSNG  = R_E_C_N_O_ 
                                FROM SNG010 
                                WHERE NG_FILIAL  = @cFilial_SNG  and NG_GRUPO  = @cN1_GRUPO  and D_E_L_E_T_  = ' ' 
                              IF @iRecnoSNG is NOT null 
                              BEGIN 
                                 SELECT @cN3_CCUSTO  = NG_CCUSTO , @cN3_SUBCTA  = NG_SUBCTA , @cN3_CLVL  = NG_CLVL , @cN3_CCONTAB  = NG_CCONTAB 
                                   , @cN3_CDEPREC  = NG_CDEPREC , @cN3_CCDEPR  = NG_CCDEPR , @cN3_CDESP  = NG_CDESP , @cN3_CCORREC  = NG_CCORREC 
                                   , @cN3_CUSTBEM  = NG_CUSTBEM , @cN3_CCDESP  = NG_CCDESP , @cN3_CCCDEP  = NG_CCCDEP , @cN3_CCCDES  = NG_CCCDES 
                                   , @cN3_CCCORR  = NG_CCCORR , @cN3_SUBCCON  = NG_SUBCCON , @cN3_SUBCDEP  = NG_SUBCDEP , 
                                        @cN3_SUBCCDE  = NG_SUBCCDE , @cN3_SUBCDES  = NG_SUBCDES , @cN3_SUBCCOR  = NG_SUBCCOR 
                                   , @cN3_CLVLCON  = NG_CLVLCON , @cN3_CLVLDEP  = NG_CLVLDEP , @cN3_CLVLCDE  = NG_CLVLCDE 
                                   , @cN3_CLVLDES  = NG_CLVLDES , @cN3_CLVLCOR  = NG_CLVLCOR , @nN3_TXDEPR1  = NG_TXDEPR1 
                                   , @nN3_TXDEPR2  = NG_TXDEPR2 , @nN3_TXDEPR3  = NG_TXDEPR3 , @nN3_TXDEPR4  = NG_TXDEPR4 
                                   , @nN3_TXDEPR5  = NG_TXDEPR5 
                                   FROM SNG010 
                                   WHERE R_E_C_N_O_  = @iRecnoSNG 
                              END 
                           END 
                           EXEC AF050CAL_01 
                           SELECT @cN3_SEQ  = SUBSTRING ( MAX ( N3_SEQ ), 1 , 3 )
                             FROM SN3010 
                             WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and  (N3_BAIXA  = ' ' 
                              or N3_BAIXA  = '0' )  and D_E_L_E_T_  = ' ' 
                           SET @iSeq  = CONVERT( Integer ,@cN3_SEQ ) + 1 
                           SET @iAux  = 3 
                           EXEC MSSTRZERO_11_01 @iSeq , @iAux , @cN3_SEQ output 
                           SET @cN3_BAIXA  = '0' 
                           SET @cN3_NOVO  = 'S' 
                           SET @cHistor  = 'DEPRECIACAO ACEL. INCENTIVADA REVERSA' 
                           SET @cN3_TIPO  = '09' 
                           SET @cN3_DINDEPR  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATADEP ),112 )
                           SELECT @iRecnoSN3_TP09  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                             FROM SN3010 
                           SET @iRecnoSN3_TP09  = @iRecnoSN3_TP09  + 1 
                           begin tran 
                           select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                           INSERT INTO SN3010 (N3_FILIAL , N3_CBASE , N3_ITEM , N3_TIPO , N3_VORIG1 , N3_VORIG2 , N3_VORIG3 , 
                                  N3_VORIG4 , N3_VORIG5 , N3_HISTOR , N3_CCUSTO , N3_SUBCTA , N3_CLVL , N3_CCONTAB , N3_CDEPREC , 
                                  N3_CCDEPR , N3_CDESP , N3_CCORREC , N3_CUSTBEM , N3_CCDESP , N3_CCCDEP , N3_CCCDES , N3_CCCORR , 
                                  N3_SUBCCON , N3_SUBCDEP , N3_SUBCCDE , N3_SUBCDES , N3_SUBCCOR , N3_CLVLCON , N3_CLVLDEP , 
                                  N3_CLVLCDE , N3_CLVLDES , N3_CLVLCOR , N3_DINDEPR , N3_SEQ , N3_BAIXA , N3_NOVO , N3_TXDEPR1 , 
                                  N3_TXDEPR2 , N3_TXDEPR3 , N3_TXDEPR4 , N3_TXDEPR5 , N3_AQUISIC , R_E_C_N_O_ ) 
                           VALUES (@cFilial , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @nN3_VORIG1 , @nN3_VORIG2 , @nN3_VORIG3 , 
                                  @nN3_VORIG4 , @nN3_VORIG5 , @cHistor , @cN3_CCUSTO , @cN3_SUBCTA , @cN3_CLVL , @cN3_CCONTAB , 
                                  @cN3_CDEPREC , @cN3_CCDEPR , @cN3_CDESP , @cN3_CCORREC , @cN3_CUSTBEM , @cN3_CCDESP , @cN3_CCCDEP , 
                                  @cN3_CCCDES , @cN3_CCCORR , @cN3_SUBCCON , @cN3_SUBCDEP , @cN3_SUBCCDE , @cN3_SUBCDES , 
                                  @cN3_SUBCCOR , @cN3_CLVLCON , @cN3_CLVLDEP , @cN3_CLVLCDE , @cN3_CLVLDES , @cN3_CLVLCOR , 
                                  @cN3_DINDEPR , @cN3_SEQ , @cN3_BAIXA , @cN3_NOVO , @nN3_TXDEPR1 , @nN3_TXDEPR2 , @nN3_TXDEPR3 , 
                                  @nN3_TXDEPR4 , @nN3_TXDEPR5 , @cN3_DINDEPR , @iRecnoSN3_TP09 );
                           
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoSN3_TP09 = @iRecnoSN3_TP09 + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                           commit tran 
                        END 
                     END 
                  END 
                  EXEC ATF013_11_01 @cFilial , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , 
                         @IN_DATADEP , @cN3_CCORREC , @cN3_SUBCCOR , @cN3_CLVLCOR , @cN3_CCCORR , @cN3_CCONTAB , @cN3_SUBCCON , 
                         @cN3_CLVLCON , @cN3_CUSTBEM , @cN3_CDEPREC , @cN3_SUBCDEP , @cN3_CLVLDEP , @cN3_CCDESP , @cN3_CCDEPR , 
                         @cN3_SUBCCDE , @cN3_CLVLCDE , @cN3_CCCDEP , @cN3_CDESP , @cN3_SUBCDES , @cN3_CLVLDES , @cN3_CCCDES , 
                         @nTxMedia , @nValCor , @nValCorDep , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , 
                         @cN3_TPSALDO , @nCasas1 , @nCasas2 , @nCasas3 , @nCasas4 , @nCasas5 
                  EXEC AF050CAL_01 
               END 
            END 
         END 
      END 
      FETCH CUR_ATF050 
       INTO @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_SEQ , @cN3_TPDEPR , @cN3_DEPREC , @cN3_CCORREC , @cN3_CCCORR , @cN3_SUBCCOR , 
             @cN3_BAIXA , @nN3_VRDACM1 , @nN3_VORIG1 , @nN3_VORIG2 , @nN3_VORIG3 , @nN3_VORIG4 , @nN3_VORIG5 , @nN3_TXDEPR1 , 
             @nN3_TXDEPR2 , @nN3_TXDEPR3 , @nN3_TXDEPR4 , @nN3_TXDEPR5 , @nN3_VRCDA1 , @cN3_AQUISIC , @cN3_DTBAIXA , @cN3_DINDEPR , 
             @cN3_CCUSTO , @cN3_CCONTAB , @cN3_CCCDEP , @cN3_SUBCCDE , @cN3_CDEPREC , @cN3_SUBCDEP , @cN3_CCCDES , @cN3_SUBCDES , 
             @cN3_NOVO , @cN3_CLVLCON , @cN3_CUSTBEM , @cN3_CLVLDEP , @cN3_CCDESP , @cN3_CCDEPR , @cN3_CLVLCDE , @cN3_CDESP , 
             @cN3_CLVLDES , @cN3_SUBCTA , @cN3_CLVL , @cN3_SUBCCON , @cN3_CLVLCOR , @cN3_SEQREAV , @cFilial , @iRecnoSN3 , 
             @cN3_FIMDEPR , @cN3_DTACELE , @nN3_VLACEL1 , @nN3_VLACEL2 , @nN3_VLACEL3 , @nN3_VLACEL4 , @nN3_VLACEL5 , @iN3_PERDEPR , 
             @nN3_PRODMES , @nN3_PRODANO , @nN3_VMXDEPR , @nN3_VLSALV1 , @cN3_TPSALDO , @cN3_CODIND 
   END 
   CLOSE CUR_ATF050
   DEALLOCATE CUR_ATF050
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[ATF001_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF001_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF001_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF001_11_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_LMESCHEIO Char( 01 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_LFUNDADA Char( 01 ) , 
    @IN_MOEDAATF Char( 02 ) , 
    @IN_LCORRECAO Char( 01 ) , 
    @IN_VCORRECAO Float , 
    @IN_LEYDL824 Char( 01 ) , 
    @IN_TXDEPOK Float , 
    @IN_ATFMBLQ Char( 01 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_ATFMDMX Char( 02 ) , 
    @IN_IDMOV Char( 10 ) , 
    @IN_CASAS1 Char( 02 ) , 
    @IN_CASAS2 Char( 02 ) , 
    @IN_CASAS3 Char( 02 ) , 
    @IN_CASAS4 Char( 02 ) , 
    @IN_CASAS5 Char( 02 ) , 
    @IN_CASASN Char( 200 ) , 
    @IN_MOEDAMAX Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial Char( 2)
DECLARE @cFilial_SN1 Char( 2)
DECLARE @cFilial_SN3 Char( 2)
DECLARE @cFilial_SN4 Char( 2)
DECLARE @cFilial_SNG Char( 2)
DECLARE @cDataIniDep Char( 08 )
DECLARE @cN1_GRUPO Char( 4)
DECLARE @iRecnoSN1 Integer
DECLARE @cN3_CBASE Char( 10)
DECLARE @cN3_ITEM Char( 4)
DECLARE @cN3_TIPO Char( 2)
DECLARE @cN3_SEQ Char( 3)
DECLARE @cN3_TPDEPR Char( 01 )
DECLARE @cN3_BAIXA Char( 01 )
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_TXDEPR1 Float
DECLARE @nN3_TXDEPR2 Float
DECLARE @nN3_TXDEPR3 Float
DECLARE @nN3_TXDEPR4 Float
DECLARE @nN3_TXDEPR5 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @cN3_DTBAIXA Char( 08 )
DECLARE @cN3_AQUISIC Char( 08 )
DECLARE @cN3_DINDEPR Char( 08 )
DECLARE @cN3_CCONTAB Char( 20)
DECLARE @cN3_DEPREC Char( 40)
DECLARE @cN3_CCORREC Char( 20)
DECLARE @cN3_CCCORR Char( 9)
DECLARE @cN3_SUBCCOR Char( 9)
DECLARE @cN3_CCCDEP Char( 9)
DECLARE @cN3_SUBCCDE Char( 9)
DECLARE @cN3_CDEPREC Char( 20)
DECLARE @cN3_SUBCDEP Char( 9)
DECLARE @cN3_CCCDES Char( 9)
DECLARE @cN3_SUBCDES Char( 9)
DECLARE @cN3_CLVLCON Char( 9)
DECLARE @cN3_CUSTBEM Char( 9)
DECLARE @cN3_CLVLDEP Char( 9)
DECLARE @cN3_CCDESP Char( 9)
DECLARE @cN3_CCDEPR Char( 20)
DECLARE @cN3_CLVLCDE Char( 9)
DECLARE @cN3_CDESP Char( 20)
DECLARE @cN3_CLVLDES Char( 9)
DECLARE @cN3_SUBCTA Char( 9)
DECLARE @cN3_CLVL Char( 9)
DECLARE @cN3_SUBCCON Char( 9)
DECLARE @cN3_CLVLCOR Char( 9)
DECLARE @cN3_FIMDEPR Char( 08 )
DECLARE @cN3_NOVO Char( 01 )
DECLARE @iRecnoSN3 Integer
DECLARE @nN3_PRODMES Float
DECLARE @nN3_PRODANC Float
DECLARE @nN3_YTD Integer
DECLARE @cAux VarChar( 03 )
DECLARE @lCalcCor Char( 01 )
DECLARE @nTxMedia Float
DECLARE @iRecnoSNG Integer
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValorOrig Float
DECLARE @nValorAcum Float
DECLARE @nVORIG1 Float
DECLARE @nVORIG2 Float
DECLARE @nVORIG3 Float
DECLARE @nVORIG4 Float
DECLARE @nVORIG5 Float
DECLARE @nVRDACM1 Float
DECLARE @nVRDACM2 Float
DECLARE @nVRDACM3 Float
DECLARE @nVRDACM4 Float
DECLARE @nVRDACM5 Float
DECLARE @nVRCACM1 Float
DECLARE @nVRCDA1 Float
DECLARE @cFIMDEPR Char( 08 )
DECLARE @cHistor Char( 40)
DECLARE @cN3_SEQREAV Char( 2)
DECLARE @cN3_CCUSTO Char( 9)
DECLARE @iSeq Integer
DECLARE @iAux Integer
DECLARE @nAMPLIA1 Float
DECLARE @nAMPLIA2 Float
DECLARE @nAMPLIA3 Float
DECLARE @nAMPLIA4 Float
DECLARE @nAMPLIA5 Float
DECLARE @nTxDep Float
DECLARE @iRecnoAux Integer
DECLARE @nVRDACM1_TP01 Float
DECLARE @nVRCDA1_TP01 Float
DECLARE @nVORIG1_TP01 Float
DECLARE @nVRCACM1_TP01 Float
DECLARE @iRecnoSN3_TP09 Integer
DECLARE @cN3_DTACELE Char( 08 )
DECLARE @nN3_VLACEL1 Float
DECLARE @nN3_VLACEL2 Float
DECLARE @nN3_VLACEL3 Float
DECLARE @nN3_VLACEL4 Float
DECLARE @nN3_VLACEL5 Float
DECLARE @lAcelera Char( 01 )
DECLARE @cCalcula Char( 01 )
DECLARE @cN3_TIPOAux Char( 2)
DECLARE @nVRDACM1Tp07 Float
DECLARE @nVRDACM2Tp07 Float
DECLARE @nVRDACM3Tp07 Float
DECLARE @nVRDACM4Tp07 Float
DECLARE @nVRDACM5Tp07 Float
DECLARE @nVRCDA1Tp07 Float
DECLARE @iRecnoTp07 Integer
DECLARE @nValor1 Float
DECLARE @nValor2 Float
DECLARE @nValor3 Float
DECLARE @nValor4 Float
DECLARE @nValor5 Float
DECLARE @nValorX Float
DECLARE @cCasas1 VarChar( 4 )
DECLARE @cCasas2 VarChar( 4 )
DECLARE @cCasas3 VarChar( 4 )
DECLARE @cCasas4 VarChar( 4 )
DECLARE @cCasas5 VarChar( 4 )
DECLARE @nCasas1 Integer
DECLARE @nCasas2 Integer
DECLARE @nCasas3 Integer
DECLARE @nCasas4 Integer
DECLARE @nCasas5 Integer
DECLARE @nCasasAtf Integer
DECLARE @iN3_PERDEPR Integer
DECLARE @nN3_PRODANO Float
DECLARE @nN3_VMXDEPR Float
DECLARE @nN3_VLSALV1 Float
DECLARE @cN3_TPSALDO Char( 01 )
DECLARE @cN1_TPBEM Char( 04 )
DECLARE @cNX_TPBEM Char( 02 )
DECLARE @cN3_CODIND Char( 08 )
DECLARE @cN1_CALCPIS Char( 1)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @nCasas1  = 0   
   SET @nCasas2  = 0   
   SET @nCasas3  = 0   
   SET @nCasas4  = 0   
   SET @nCasas5  = 0   
   SET @nCasasAtf  = 0 
   SET @cCasas1  = '2'   
   SET @cCasas2  = '2'   
   SET @cCasas3  = '2'   
   SET @cCasas4  = '2'   
   SET @cCasas5  = '2' 
   SET @iN3_PERDEPR  = 0   
   SET @nN3_PRODMES  = 0   
   SET @nN3_PRODANO  = 0   
   SET @nN3_VMXDEPR  = 0   
   SET @nN3_VLSALV1  = 0   
   SET @nN3_VRDACM1  = 0   
   SET @cN3_TPSALDO  = ' '   
   SET @cN1_CALCPIS  = ' ' 
   SET @cN1_TPBEM  = ' '   
   SET @cNX_TPBEM  = ' ' 
   SET @cN3_CODIND  = ' ' 
   SET @cCasas1  = @IN_CASAS1   
   SET @cCasas2  = @IN_CASAS2   
   SET @cCasas3  = @IN_CASAS3   
   SET @cCasas4  = @IN_CASAS4   
   SET @cCasas5  = @IN_CASAS5 
   SET @nCasas1  = CONVERT( Integer ,@cCasas1 )  
   SET @nCasas2  = CONVERT( Integer ,@cCasas2 )  
   SET @nCasas3  = CONVERT( Integer ,@cCasas3 )  
   SET @nCasas4  = CONVERT( Integer ,@cCasas4 )  
   SET @nCasas5  = CONVERT( Integer ,@cCasas5 )
   SET @cAux  = 'SN3' 
   EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SN3 output 
   SET @cFilial  = ' ' 
   SET @OUT_RESULTADO  = '0'   
   SET @cCalcula  = '1'   
   SET @iRecnoSN1  = null   
   SET @iRecnoSN3  = 0   
   SET @iRecnoSNG  = null   
   SET @lCalcCor  = '0'   
   SET @cN3_DTACELE  = ' ' 
   SET @nTxMedia  = 0   
   SET @nTxDep  = 0   
   SET @nN3_PRODMES  = 0   
   SET @nN3_PRODANC  = 0   
   SET @iSeq  = 0   
   SET @nN3_YTD  = 0   
   SET @nN3_VLACEL1  = 0   
   SET @nN3_VLACEL2  = 0   
   SET @nN3_VLACEL3  = 0   
   SET @nN3_VLACEL4  = 0   
   SET @nN3_VLACEL5  = 0 
   SET @cDataIniDep  = SUBSTRING ( @IN_DATADEP , 1 , 6 ) + '01' 
   IF  ( (@IN_LCORRECAO  = '1'  and @IN_VCORRECAO  > 0 )  or  (@IN_DATADEP  < '19960101' ) ) 
   BEGIN 
      SET @lCalcCor  = '1' 
   END 
    
   -- Cursor declaration CUR_ATF050
   DECLARE CUR_ATF050 insensitive  CURSOR FOR 
   SELECT N3_CBASE , N3_ITEM , N3_TIPO , N3_SEQ , N3_TPDEPR , N3_DEPREC , N3_CCORREC , N3_CCCORR , N3_SUBCCOR , N3_BAIXA , 
          N3_VRDACM1 , N3_VORIG1 , N3_VORIG2 , N3_VORIG3 , N3_VORIG4 , N3_VORIG5 , N3_TXDEPR1 , N3_TXDEPR2 , N3_TXDEPR3 , 
          N3_TXDEPR4 , N3_TXDEPR5 , N3_VRCDA1 , N3_AQUISIC , N3_DTBAIXA , N3_DINDEPR , N3_CCUSTO , N3_CCONTAB , N3_CCCDEP , 
          N3_SUBCCDE , N3_CDEPREC , N3_SUBCDEP , N3_CCCDES , N3_SUBCDES , N3_NOVO , N3_CLVLCON , N3_CUSTBEM , N3_CLVLDEP , 
          N3_CCDESP , N3_CCDEPR , N3_CLVLCDE , N3_CDESP , N3_CLVLDES , N3_SUBCTA , N3_CLVL , N3_SUBCCON , N3_CLVLCOR , N3_SEQREAV , 
          N3_FILIAL , R_E_C_N_O_ , N3_FIMDEPR , N3_DTACELE , N3_VLACEL1 , N3_VLACEL2 , N3_VLACEL3 , N3_VLACEL4 , N3_VLACEL5 , 
          N3_PERDEPR , N3_PRODMES , N3_PRODANO , N3_VMXDEPR , N3_VLSALV1 , N3_TPSALDO , N3_CODIND 
     FROM SN3030 
     WHERE N3_FILIAL  between @cFilial_SN3 and @IN_FILIALATE  and  (N3_FIMDEPR  = ' '  or  (N3_FIMDEPR  != ' '  and  (N3_VRDMES1  + N3_VRDMES2  + N3_VRDMES3  + N3_VRDMES4  + N3_VRDMES5 
      > 0 ) ) )  and N3_CCONTAB  != ' '  and N3_AQUISIC  <= @IN_DATADEP  and N3_DINDEPR  <= @IN_DATADEP  and  (N3_DTBAIXA  = ' ' 
      or  (N3_DTBAIXA  between @cDataIniDep and @IN_DATADEP ) )  and  (N3_BAIXA  < '1'  or  (N3_BAIXA  >= '1'  and N3_NOVO  = '1' 
     ) )  and N3_TIPO NOT IN ( '03' , '33' , '13'  )  and D_E_L_E_T_  = ' ' 
     ORDER BY N3_FILIAL , N3_CBASE , N3_ITEM , N3_TIPO 
   FOR READ ONLY 
    
   OPEN CUR_ATF050
   FETCH CUR_ATF050 
    INTO @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_SEQ , @cN3_TPDEPR , @cN3_DEPREC , @cN3_CCORREC , @cN3_CCCORR , @cN3_SUBCCOR , 
          @cN3_BAIXA , @nN3_VRDACM1 , @nN3_VORIG1 , @nN3_VORIG2 , @nN3_VORIG3 , @nN3_VORIG4 , @nN3_VORIG5 , @nN3_TXDEPR1 , 
          @nN3_TXDEPR2 , @nN3_TXDEPR3 , @nN3_TXDEPR4 , @nN3_TXDEPR5 , @nN3_VRCDA1 , @cN3_AQUISIC , @cN3_DTBAIXA , @cN3_DINDEPR , 
          @cN3_CCUSTO , @cN3_CCONTAB , @cN3_CCCDEP , @cN3_SUBCCDE , @cN3_CDEPREC , @cN3_SUBCDEP , @cN3_CCCDES , @cN3_SUBCDES , 
          @cN3_NOVO , @cN3_CLVLCON , @cN3_CUSTBEM , @cN3_CLVLDEP , @cN3_CCDESP , @cN3_CCDEPR , @cN3_CLVLCDE , @cN3_CDESP , 
          @cN3_CLVLDES , @cN3_SUBCTA , @cN3_CLVL , @cN3_SUBCCON , @cN3_CLVLCOR , @cN3_SEQREAV , @cFilial , @iRecnoSN3 , @cN3_FIMDEPR , 
          @cN3_DTACELE , @nN3_VLACEL1 , @nN3_VLACEL2 , @nN3_VLACEL3 , @nN3_VLACEL4 , @nN3_VLACEL5 , @iN3_PERDEPR , @nN3_PRODMES , 
          @nN3_PRODANO , @nN3_VMXDEPR , @nN3_VLSALV1 , @cN3_TPSALDO , @cN3_CODIND 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'SN1' 
      EXEC XFILIAL_11_02 @cAux , @cFilial , @cFilial_SN1 output 
      SET @cAux  = 'SN4' 
      EXEC XFILIAL_11_02 @cAux , @cFilial , @cFilial_SN4 output 
      SET @cAux  = 'SNG' 
      EXEC XFILIAL_11_02 @cAux , @cFilial , @cFilial_SNG output 
      SET @nVRCDA1  = 0   
      SET @iRecnoAux  = null   
      SET @nValDepr1  = 0   
      SET @nValDepr2  = 0   
      SET @nValDepr3  = 0   
      SET @nValDepr4  = 0   
      SET @nValDepr5  = 0   
      SET @lAcelera  = '0'   
      SET @nValor1  = 0   
      SET @nValor2  = 0 
      SET @nValor3  = 0   
      SET @nValor4  = 0   
      SET @nValor5  = 0   
      SET @nValorX  = 0   
      SET @iRecnoTp07  = null   
      SET @nAMPLIA1  = 0   
      SET @nAMPLIA2  = 0   
      SET @nAMPLIA3  = 0   
      SET @nAMPLIA4  = 0   
      SET @nAMPLIA5  = 0 
      SET @nValorOrig  = 0   
      SET @nValorAcum  = 0   
      SET @cN1_CALCPIS  = ' ' 
      EXEC AF050FPR_11_02 @cFilial , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_SEQ , @IN_DATADEP , @cCalcula output 
      IF @cCalcula  = '1' 
      BEGIN 
         IF  (@cN3_DTACELE  != ' '  and  (SUBSTRING ( @cN3_DTACELE , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 ) and  (@cN3_DTACELE  <= @IN_DATADEP 
           ) ) ) 
         BEGIN 
            SET @lAcelera  = '1' 
         END 
         ELSE 
         BEGIN 
            IF  (@cN3_DTACELE  != ' '  and  (@cN3_DTACELE  > @IN_DATADEP ) ) 
            BEGIN 
               SET @lAcelera  = '2' 
            END 
         END 
         IF  (@lAcelera  = '0'  or @lAcelera  = '1' ) 
         BEGIN 
            IF @cN3_TIPO  = '08'  and @IN_CPAISLOC  = 'BRA' 
            BEGIN 
               SELECT @iRecnoAux  = R_E_C_N_O_ 
                 FROM SN3030 
                 WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and N3_TIPO  = '09'  and  (N3_BAIXA  = ' ' 
                  or N3_BAIXA  = '0' )  and D_E_L_E_T_  = ' ' 
            END 
            IF @iRecnoAux is null 
            BEGIN 
               IF @cN3_DTBAIXA  != ' '  and  ( (SUBSTRING ( @cN3_DTBAIXA , 5 , 2 ) < SUBSTRING ( @IN_DATADEP , 5 , 2 ))  and  (SUBSTRING ( @cN3_DTBAIXA , 
                      1 , 4 ) < SUBSTRING ( @IN_DATADEP , 1 , 4 )) ) 
               BEGIN 
                  UPDATE SN3030 
                    WITH (ROWLOCK) 
                     SET N3_VRDMES1  = 0 , N3_VRDMES2  = 0 , N3_VRDMES3  = 0 , N3_VRDMES4  = 0 , N3_VRDMES5  = 0 , N3_VRCMES1  = 0 
                    , N3_VRCDM1  = 0 
                   WHERE R_E_C_N_O_  = @iRecnoSN3 
               END 
               ELSE 
               BEGIN 
                  SELECT @cN1_GRUPO  = N1_GRUPO , @iRecnoSN1  = R_E_C_N_O_ , @cN1_TPBEM  = N1_TPBEM , @cN1_CALCPIS  = COALESCE ( N1_CALCPIS , 
                         ' ' )
                    FROM SN1030 
                    WHERE N1_FILIAL  = @cFilial_SN1  and N1_CBASE  = @cN3_CBASE  and N1_ITEM  = @cN3_ITEM  and N1_DTBLOQ  < @IN_DATADEP 
                     and D_E_L_E_T_  = ' ' 
                  EXEC ATF011_11_02 @cFilial , @IN_CPAISLOC , @cN3_CBASE , @cN3_ITEM , @cN3_CCDEPR , @cN3_CDEPREC , @cN3_CCORREC , 
                         @cN3_CDESP , @cN3_DINDEPR , @IN_DATADEP , @cN3_AQUISIC , @cN3_DTBAIXA , @nN3_TXDEPR1 , @nN3_TXDEPR2 , 
                         @nN3_TXDEPR3 , @nN3_TXDEPR4 , @nN3_TXDEPR5 , @iRecnoSN3 , @cN3_TPDEPR , @nN3_YTD , @nN3_PRODMES , 
                         @nN3_PRODANC , @IN_LFUNDADA , @IN_MOEDAATF , @IN_LCORRECAO , @IN_VCORRECAO , @IN_TXDEPOK , @IN_LEYDL824 , 
                         @IN_LMESCHEIO , @IN_ATFMBLQ , @IN_CALCDEP , @iN3_PERDEPR , @nN3_PRODANO , @nN3_VRDACM1 , @nN3_VORIG1 , 
                         @nN3_VLSALV1 , @IN_ATFMDMX , @cN3_CODIND , @nValDepr1 output , @nValDepr2 output , @nValDepr3 output , 
                         @nValDepr4 output , @nValDepr5 output , @nValCor output , @nValCorDep output , @nTxMedia output , 
                         @nTxDep output 
                  IF @cN1_TPBEM  = ' ' 
                  BEGIN 
                     SET @cNX_TPBEM  = @cN3_TIPO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cNX_TPBEM  = SUBSTRING ( @cN1_TPBEM , 1 , 2 )
                  END 
                  EXEC ATF012_11_02 @IN_CPAISLOC , @cFilial_SN4 , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_CCORREC , @cN3_CCONTAB , 
                         @cN3_SUBCCON , @cN3_CCDEPR , @cN3_CCCDEP , @cN3_SUBCCDE , @cN3_CDESP , @cN3_CDEPREC , @cN3_CCDESP , 
                         @cN3_SUBCDEP , @cN3_CCCDES , @cN3_SUBCDES , @IN_DATADEP , @cN3_DINDEPR , @cN3_CCCORR , @cN3_SEQ , 
                         @cN3_SUBCCOR , @cN3_SEQREAV , @nTxMedia , @nTxDep , @nValCor , @nValCorDep , @nValDepr1 , @nValDepr2 , 
                         @nValDepr3 , @nValDepr4 , @nValDepr5 , @cN3_TPSALDO , @nN3_PRODMES , @IN_IDMOV , @cNX_TPBEM , @nCasas1 , 
                         @nCasas2 , @nCasas3 , @nCasas4 , @nCasas5 , @cN1_CALCPIS 
                  IF @cN3_NOVO  = '1' 
                  BEGIN 
                     SET @cN3_NOVO  = '2' 
                  END 
                  begin tran 
                  IF @lAcelera  = '1' 
                  BEGIN 
                     UPDATE SN3030 
                       WITH (ROWLOCK) 
                        SET N3_NOVO  = @cN3_NOVO , N3_VRDMES1  = N3_VRDMES1  + ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDMES2  = N3_VRDMES2  + ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDMES3  = N3_VRDMES3  + ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDMES4  = N3_VRDMES4  + ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDMES5  = N3_VRDMES5  + ROUND ( @nValDepr5 , @nCasas5 ), N3_VRDACM1  = N3_VRDACM1  + ROUND ( @nValDepr1 , 
                            @nCasas1 ), N3_VRDACM2  = N3_VRDACM2  + ROUND ( @nValDepr2 , @nCasas2 ), N3_VRDACM3  = N3_VRDACM3  + ROUND ( @nValDepr3 , 
                            @nCasas3 ), N3_VRDACM4  = N3_VRDACM4  + ROUND ( @nValDepr4 , @nCasas4 ), N3_VRDACM5  = N3_VRDACM5  + ROUND ( @nValDepr5 , 
                            @nCasas5 ), N3_VRDBAL1  = N3_VRDBAL1  + ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDBAL2  = N3_VRDBAL2  + ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDBAL3  = N3_VRDBAL3  + ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDBAL4  = N3_VRDBAL4  + ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDBAL5  = N3_VRDBAL5  + ROUND ( @nValDepr5 , @nCasas5 ), N3_VRCMES1  = ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCACM1  = N3_VRCACM1  + ROUND ( @nValCor , @nCasas1 ), N3_VRCBAL1  = N3_VRCBAL1  + ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCDM1  = ROUND ( @nValCorDep , @nCasas1 ), N3_VRCDB1  = N3_VRCDB1  + ROUND ( @nValCorDep , 
                            @nCasas1 ), N3_VRCDA1  = N3_VRCDA1  + ROUND ( @nValCorDep , @nCasas1 )
                      WHERE R_E_C_N_O_  = @iRecnoSN3 
                  END 
                  ELSE 
                  BEGIN 
                     UPDATE SN3030 
                       WITH (ROWLOCK) 
                        SET N3_NOVO  = @cN3_NOVO , N3_VRDMES1  = ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDMES2  = ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDMES3  = ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDMES4  = ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDMES5  = ROUND ( @nValDepr5 , @nCasas5 ), N3_VRDACM1  = N3_VRDACM1  + ROUND ( @nValDepr1 , 
                            @nCasas1 ), N3_VRDACM2  = N3_VRDACM2  + ROUND ( @nValDepr2 , @nCasas2 ), N3_VRDACM3  = N3_VRDACM3  + ROUND ( @nValDepr3 , 
                            @nCasas3 ), N3_VRDACM4  = N3_VRDACM4  + ROUND ( @nValDepr4 , @nCasas4 ), N3_VRDACM5  = N3_VRDACM5  + ROUND ( @nValDepr5 , 
                            @nCasas5 ), N3_VRDBAL1  = N3_VRDBAL1  + ROUND ( @nValDepr1 , @nCasas1 ), N3_VRDBAL2  = N3_VRDBAL2  + ROUND ( @nValDepr2 , 
                            @nCasas2 ), N3_VRDBAL3  = N3_VRDBAL3  + ROUND ( @nValDepr3 , @nCasas3 ), N3_VRDBAL4  = N3_VRDBAL4  + ROUND ( @nValDepr4 , 
                            @nCasas4 ), N3_VRDBAL5  = N3_VRDBAL5  + ROUND ( @nValDepr5 , @nCasas5 ), N3_VRCMES1  = ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCACM1  = N3_VRCACM1  + ROUND ( @nValCor , @nCasas1 ), N3_VRCBAL1  = N3_VRCBAL1  + ROUND ( @nValCor , 
                            @nCasas1 ), N3_VRCDM1  = ROUND ( @nValCorDep , @nCasas1 ), N3_VRCDB1  = N3_VRCDB1  + ROUND ( @nValCorDep , 
                            @nCasas1 ), N3_VRCDA1  = N3_VRCDA1  + ROUND ( @nValCorDep , @nCasas1 )
                      WHERE R_E_C_N_O_  = @iRecnoSN3 
                  END 
                  commit tran 
                  SELECT @nVRDACM1  = N3_VRDACM1 , @nVRDACM2  = N3_VRDACM2 , @nVRDACM3  = N3_VRDACM3 , @nVRDACM4  = N3_VRDACM4 
                    , @nVRDACM5  = N3_VRDACM5 , @nVORIG1  = N3_VORIG1 , @nVORIG2  = N3_VORIG2 , @nVORIG3  = N3_VORIG3 , @nVORIG4  = N3_VORIG4 
                    , @nVORIG5  = N3_VORIG5 , @nAMPLIA1  = N3_AMPLIA1 , @nAMPLIA2  = N3_AMPLIA2 , @nAMPLIA3  = N3_AMPLIA3 
                    , @nAMPLIA4  = N3_AMPLIA4 , @nAMPLIA5  = N3_AMPLIA5 , @nVRCACM1  = N3_VRCACM1 , @nVRCDA1  = N3_VRCDA1 
                    , @cFIMDEPR  = N3_FIMDEPR 
                    FROM SN3030 
                    WHERE R_E_C_N_O_  = @iRecnoSN3  and N3_FIMDEPR  = ' '  and D_E_L_E_T_  = ' ' 
                  IF @IN_MOEDAATF  = '01' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG1  + @nVRCACM1  + @nAMPLIA1 
                     SET @nValorAcum  = @nVRDACM1  + @nVRCDA1 
                     SET @nCasasAtf  = @nCasas1 
                  END 
                  IF @IN_MOEDAATF  = '02' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG2  + @nAMPLIA2 
                     SET @nValorAcum  = @nVRDACM2 
                     SET @nCasasAtf  = @nCasas2 
                  END 
                  IF @IN_MOEDAATF  = '03' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG3  + @nAMPLIA3 
                     SET @nValorAcum  = @nVRDACM3 
                     SET @nCasasAtf  = @nCasas3 
                  END 
                  IF @IN_MOEDAATF  = '04' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG4  + @nAMPLIA4 
                     SET @nValorAcum  = @nVRDACM4 
                     SET @nCasasAtf  = @nCasas4 
                  END 
                  IF @IN_MOEDAATF  = '05' 
                  BEGIN 
                     SET @nValorOrig  = @nVORIG5  + @nAMPLIA5 
                     SET @nValorAcum  = @nVRDACM5 
                     SET @nCasasAtf  = @nCasas5 
                  END 
                  IF @cN3_TIPO IN ( '07' , '01'  )  and @IN_CPAISLOC  = 'BRA' 
                  BEGIN 
                     IF @cN3_TIPO  = '07' 
                     BEGIN 
                        SET @cN3_TIPOAux  = '01' 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cN3_TIPOAux  = '07' 
                     END 
                     SELECT @nVRDACM1Tp07  = N3_VRDACM1 , @nVRDACM2Tp07  = N3_VRDACM2 , @nVRDACM3Tp07  = N3_VRDACM3 , @nVRDACM4Tp07  = N3_VRDACM4 
                       , @nVRDACM5Tp07  = N3_VRDACM5 , @nVRCDA1Tp07  = N3_VRCDA1 , @iRecnoTp07  = R_E_C_N_O_ 
                       FROM SN3030 
                       WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and N3_TIPO  = @cN3_TIPOAux 
                        and D_E_L_E_T_  = ' ' 
                     IF @iRecnoTp07 is NOT null 
                     BEGIN 
                        SET @nValor1  = @nVRDACM1Tp07  + @nVRCDA1Tp07 
                        SET @nValor2  = @nVRDACM2Tp07 
                        SET @nValor3  = @nVRDACM3Tp07 
                        SET @nValor4  = @nVRDACM4Tp07 
                        SET @nValor5  = @nVRDACM5Tp07 
                        IF @IN_MOEDAATF  = '02' 
                        BEGIN 
                           SET @nValorX  = @nValor2 
                        END 
                        IF @IN_MOEDAATF  = '03' 
                        BEGIN 
                           SET @nValorX  = @nValor3 
                        END 
                        IF @IN_MOEDAATF  = '04' 
                        BEGIN 
                           SET @nValorX  = @nValor4 
                        END 
                        IF @IN_MOEDAATF  = '05' 
                        BEGIN 
                           SET @nValorX  = @nValor5 
                        END 
                     END 
                  END 
                  IF @cFIMDEPR  = ' '  and @cN3_FIMDEPR  = ' ' 
                  BEGIN 
                     IF @iRecnoTp07 is null 
                     BEGIN 
                        SET @iRecnoTp07  = 0 
                     END 
                     EXEC ATF014_11_02 @cN3_TIPO , @cN3_TPDEPR , @IN_DATADEP , @cN3_DINDEPR , @IN_CALCDEP , @iN3_PERDEPR , 
                            @iRecnoSN3 , @iRecnoTp07 , @nCasas1 , @nCasasAtf , @nVORIG1 , @nVRCACM1 , @nAMPLIA1 , @nVRDACM1 , 
                            @nVRCDA1 , @nValorOrig , @nValorAcum , @nValor1 , @nValorX , @nN3_VLSALV1 , @nN3_VMXDEPR 
                  END 
                  IF @cN3_TIPO  = '08'  and @IN_CPAISLOC  = 'BRA' 
                  BEGIN 
                     IF @iRecnoAux is null 
                     BEGIN 
                        SELECT @nVORIG1_TP01  = N3_VORIG1 , @nVRCACM1_TP01  = N3_VRCACM1 , @nVRDACM1_TP01  = N3_VRDACM1 , 
                               @nVRCDA1_TP01  = N3_VRCDA1 
                          FROM SN3030 
                          WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and N3_TIPO  = '01' 
                           and  (N3_BAIXA  = ' '  or N3_BAIXA  = '0' )  and N3_SEQ  = '001'  and D_E_L_E_T_  = ' ' 
                        IF  ( (@nVRDACM1_TP01  + @nVRCDA1_TP01 )  +  (@nVRDACM1  + @nVRCDA1 ) )  >=  (@nVORIG1_TP01  + @nVRCACM1_TP01 
                          ) 
                        BEGIN 
                           IF @iRecnoSN1 is NOT null 
                           BEGIN 
                              SET @iRecnoSNG  = NULL 
                              SELECT @iRecnoSNG  = R_E_C_N_O_ 
                                FROM SNG030 
                                WHERE NG_FILIAL  = @cFilial_SNG  and NG_GRUPO  = @cN1_GRUPO  and D_E_L_E_T_  = ' ' 
                              IF @iRecnoSNG is NOT null 
                              BEGIN 
                                 SELECT @cN3_CCUSTO  = NG_CCUSTO , @cN3_SUBCTA  = NG_SUBCTA , @cN3_CLVL  = NG_CLVL , @cN3_CCONTAB  = NG_CCONTAB 
                                   , @cN3_CDEPREC  = NG_CDEPREC , @cN3_CCDEPR  = NG_CCDEPR , @cN3_CDESP  = NG_CDESP , @cN3_CCORREC  = NG_CCORREC 
                                   , @cN3_CUSTBEM  = NG_CUSTBEM , @cN3_CCDESP  = NG_CCDESP , @cN3_CCCDEP  = NG_CCCDEP , @cN3_CCCDES  = NG_CCCDES 
                                   , @cN3_CCCORR  = NG_CCCORR , @cN3_SUBCCON  = NG_SUBCCON , @cN3_SUBCDEP  = NG_SUBCDEP , 
                                        @cN3_SUBCCDE  = NG_SUBCCDE , @cN3_SUBCDES  = NG_SUBCDES , @cN3_SUBCCOR  = NG_SUBCCOR 
                                   , @cN3_CLVLCON  = NG_CLVLCON , @cN3_CLVLDEP  = NG_CLVLDEP , @cN3_CLVLCDE  = NG_CLVLCDE 
                                   , @cN3_CLVLDES  = NG_CLVLDES , @cN3_CLVLCOR  = NG_CLVLCOR , @nN3_TXDEPR1  = NG_TXDEPR1 
                                   , @nN3_TXDEPR2  = NG_TXDEPR2 , @nN3_TXDEPR3  = NG_TXDEPR3 , @nN3_TXDEPR4  = NG_TXDEPR4 
                                   , @nN3_TXDEPR5  = NG_TXDEPR5 
                                   FROM SNG030 
                                   WHERE R_E_C_N_O_  = @iRecnoSNG 
                              END 
                           END 
                           EXEC AF050CAL_02 
                           SELECT @cN3_SEQ  = SUBSTRING ( MAX ( N3_SEQ ), 1 , 3 )
                             FROM SN3030 
                             WHERE N3_FILIAL  = @cFilial  and N3_CBASE  = @cN3_CBASE  and N3_ITEM  = @cN3_ITEM  and  (N3_BAIXA  = ' ' 
                              or N3_BAIXA  = '0' )  and D_E_L_E_T_  = ' ' 
                           SET @iSeq  = CONVERT( Integer ,@cN3_SEQ ) + 1 
                           SET @iAux  = 3 
                           EXEC MSSTRZERO_11_02 @iSeq , @iAux , @cN3_SEQ output 
                           SET @cN3_BAIXA  = '0' 
                           SET @cN3_NOVO  = 'S' 
                           SET @cHistor  = 'DEPRECIACAO ACEL. INCENTIVADA REVERSA' 
                           SET @cN3_TIPO  = '09' 
                           SET @cN3_DINDEPR  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATADEP ),112 )
                           SELECT @iRecnoSN3_TP09  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                             FROM SN3030 
                           SET @iRecnoSN3_TP09  = @iRecnoSN3_TP09  + 1 
                           begin tran 
                           select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                           INSERT INTO SN3030 (N3_FILIAL , N3_CBASE , N3_ITEM , N3_TIPO , N3_VORIG1 , N3_VORIG2 , N3_VORIG3 , 
                                  N3_VORIG4 , N3_VORIG5 , N3_HISTOR , N3_CCUSTO , N3_SUBCTA , N3_CLVL , N3_CCONTAB , N3_CDEPREC , 
                                  N3_CCDEPR , N3_CDESP , N3_CCORREC , N3_CUSTBEM , N3_CCDESP , N3_CCCDEP , N3_CCCDES , N3_CCCORR , 
                                  N3_SUBCCON , N3_SUBCDEP , N3_SUBCCDE , N3_SUBCDES , N3_SUBCCOR , N3_CLVLCON , N3_CLVLDEP , 
                                  N3_CLVLCDE , N3_CLVLDES , N3_CLVLCOR , N3_DINDEPR , N3_SEQ , N3_BAIXA , N3_NOVO , N3_TXDEPR1 , 
                                  N3_TXDEPR2 , N3_TXDEPR3 , N3_TXDEPR4 , N3_TXDEPR5 , N3_AQUISIC , R_E_C_N_O_ ) 
                           VALUES (@cFilial , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @nN3_VORIG1 , @nN3_VORIG2 , @nN3_VORIG3 , 
                                  @nN3_VORIG4 , @nN3_VORIG5 , @cHistor , @cN3_CCUSTO , @cN3_SUBCTA , @cN3_CLVL , @cN3_CCONTAB , 
                                  @cN3_CDEPREC , @cN3_CCDEPR , @cN3_CDESP , @cN3_CCORREC , @cN3_CUSTBEM , @cN3_CCDESP , @cN3_CCCDEP , 
                                  @cN3_CCCDES , @cN3_CCCORR , @cN3_SUBCCON , @cN3_SUBCDEP , @cN3_SUBCCDE , @cN3_SUBCDES , 
                                  @cN3_SUBCCOR , @cN3_CLVLCON , @cN3_CLVLDEP , @cN3_CLVLCDE , @cN3_CLVLDES , @cN3_CLVLCOR , 
                                  @cN3_DINDEPR , @cN3_SEQ , @cN3_BAIXA , @cN3_NOVO , @nN3_TXDEPR1 , @nN3_TXDEPR2 , @nN3_TXDEPR3 , 
                                  @nN3_TXDEPR4 , @nN3_TXDEPR5 , @cN3_DINDEPR , @iRecnoSN3_TP09 );
                           
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoSN3_TP09 = @iRecnoSN3_TP09 + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                           commit tran 
                        END 
                     END 
                  END 
                  EXEC ATF013_11_02 @cFilial , @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , 
                         @IN_DATADEP , @cN3_CCORREC , @cN3_SUBCCOR , @cN3_CLVLCOR , @cN3_CCCORR , @cN3_CCONTAB , @cN3_SUBCCON , 
                         @cN3_CLVLCON , @cN3_CUSTBEM , @cN3_CDEPREC , @cN3_SUBCDEP , @cN3_CLVLDEP , @cN3_CCDESP , @cN3_CCDEPR , 
                         @cN3_SUBCCDE , @cN3_CLVLCDE , @cN3_CCCDEP , @cN3_CDESP , @cN3_SUBCDES , @cN3_CLVLDES , @cN3_CCCDES , 
                         @nTxMedia , @nValCor , @nValCorDep , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , 
                         @cN3_TPSALDO , @nCasas1 , @nCasas2 , @nCasas3 , @nCasas4 , @nCasas5 
                  EXEC AF050CAL_02 
               END 
            END 
         END 
      END 
      FETCH CUR_ATF050 
       INTO @cN3_CBASE , @cN3_ITEM , @cN3_TIPO , @cN3_SEQ , @cN3_TPDEPR , @cN3_DEPREC , @cN3_CCORREC , @cN3_CCCORR , @cN3_SUBCCOR , 
             @cN3_BAIXA , @nN3_VRDACM1 , @nN3_VORIG1 , @nN3_VORIG2 , @nN3_VORIG3 , @nN3_VORIG4 , @nN3_VORIG5 , @nN3_TXDEPR1 , 
             @nN3_TXDEPR2 , @nN3_TXDEPR3 , @nN3_TXDEPR4 , @nN3_TXDEPR5 , @nN3_VRCDA1 , @cN3_AQUISIC , @cN3_DTBAIXA , @cN3_DINDEPR , 
             @cN3_CCUSTO , @cN3_CCONTAB , @cN3_CCCDEP , @cN3_SUBCCDE , @cN3_CDEPREC , @cN3_SUBCDEP , @cN3_CCCDES , @cN3_SUBCDES , 
             @cN3_NOVO , @cN3_CLVLCON , @cN3_CUSTBEM , @cN3_CLVLDEP , @cN3_CCDESP , @cN3_CCDEPR , @cN3_CLVLCDE , @cN3_CDESP , 
             @cN3_CLVLDES , @cN3_SUBCTA , @cN3_CLVL , @cN3_SUBCCON , @cN3_CLVLCOR , @cN3_SEQREAV , @cFilial , @iRecnoSN3 , 
             @cN3_FIMDEPR , @cN3_DTACELE , @nN3_VLACEL1 , @nN3_VLACEL2 , @nN3_VLACEL3 , @nN3_VLACEL4 , @nN3_VLACEL5 , @iN3_PERDEPR , 
             @nN3_PRODMES , @nN3_PRODANO , @nN3_VMXDEPR , @nN3_VLSALV1 , @cN3_TPSALDO , @cN3_CODIND 
   END 
   CLOSE CUR_ATF050
   DEALLOCATE CUR_ATF050
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[ATF002_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF002_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF002_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF002_11_01]
(
    @IN_CPAISLOC Char( 03 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_TPDEPR Char( 01 ) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_DEPREC Char( 40 ) , 
    @IN_LFUNDADA Char( 01 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_PERDEPR Float , 
    @IN_TXDEPR1 Float , 
    @IN_TXDEPR2 Float , 
    @IN_TXDEPR3 Float , 
    @IN_TXDEPR4 Float , 
    @IN_TXDEPR5 Float , 
    @IN_YTD Float , 
    @IN_PRODMES Float , 
    @IN_PRODANC Float , 
    @IN_PRODANO Float , 
    @IN_DEPACM1 Float , 
    @IN_VORIG1 Float , 
    @IN_VLSALV Float , 
    @IN_CODIND Char( 08 ) , 
    @OUT_TXDEP1 Float  output , 
    @OUT_TXDEP2 Float  output , 
    @OUT_TXDEP3 Float  output , 
    @OUT_TXDEP4 Float  output , 
    @OUT_TXDEP5 Float  output , 
    @OUT_IPC Integer  output ) AS
 
-- Declaration of variables
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nAno Integer
DECLARE @nTxAcum Float
DECLARE @iX Integer
DECLARE @iPc1 Float
DECLARE @iPc2 Float
DECLARE @iPC Float
DECLARE @iSD Float
DECLARE @cFNI_TIPO Char( 01 )
DECLARE @cFilial_FNI Char( 2)
DECLARE @cFilial_FNT Char( 2)
DECLARE @cFNI_CURVFI Char( 08 )
DECLARE @cFNI_PERIOD Char( 01 )
DECLARE @cFNI_MSBLQL Char( 01 )
DECLARE @nIndTot Float
DECLARE @nFNT_TAXA Float
DECLARE @cAux Char( 03 )
DECLARE @cFilial_AUX2 Char( 2)
DECLARE @nDias Integer
DECLARE @cMes Char( 02 )
DECLARE @cAno Char( 04 )
DECLARE @nFator Integer
DECLARE @cDataIni Char( 08 )
DECLARE @cDataFim Char( 08 )
BEGIN
   SET @nTxDep1  = 0 
   SET @nTxDep2  = 0 
   SET @nTxDep3  = 0 
   SET @nTxDep4  = 0 
   SET @nTxDep5  = 0 
   SET @iPC  = 0 
   IF @IN_TPDEPR  = '2' 
   BEGIN 
      IF  (@IN_PERDEPR  > 0  and @IN_VLSALV  > 0 ) 
      BEGIN 
         IF  (@IN_DEPACM1  + @IN_VLSALV  < @IN_VORIG1 ) 
         BEGIN 
            SET @nTxDep1  =  (1  - POWER (  (@IN_VLSALV  / @IN_VORIG1 ) ,  (1  / @IN_PERDEPR ) )) 
         END 
         SET @nTxDep2  = @nTxDep1 
         SET @nTxDep3  = @nTxDep1 
         SET @nTxDep4  = @nTxDep1 
         SET @nTxDep5  = @nTxDep1 
      END 
   END 
   IF @IN_TPDEPR  = '3' 
   BEGIN 
      SET @nAno  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) - CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 
             4 ))
      IF SUBSTRING ( @IN_DATADEP , 5 , 2 ) < SUBSTRING ( @IN_DINDEPR , 5 , 2 )
      BEGIN 
         SET @nAno  = @nAno  - 1 
      END 
      IF @IN_YTD  > 0 
      BEGIN 
         SET @nTxDep1  =  (@IN_YTD  - @nAno )  /  ( (@IN_YTD  *  (@IN_YTD  + 1 ) )  / 2 ) 
      END 
      SET @nTxDep2  = @nTxDep1 
      SET @nTxDep3  = @nTxDep1 
      SET @nTxDep4  = @nTxDep1 
      SET @nTxDep5  = @nTxDep1 
   END 
   IF @IN_TPDEPR  = '4'  or @IN_TPDEPR  = '5' 
   BEGIN 
      IF  (@IN_PRODMES  > 0  and @IN_PRODANO  > 0 ) 
      BEGIN 
         SET @nTxDep1  = @IN_PRODMES  / @IN_PRODANO 
      END 
      SET @nTxDep2  = @nTxDep1 
      SET @nTxDep3  = @nTxDep1 
      SET @nTxDep4  = @nTxDep1 
      SET @nTxDep5  = @nTxDep1 
   END 
   IF @IN_TPDEPR  = '6' 
   BEGIN 
      IF @IN_PERDEPR  > 0 
      BEGIN 
         IF @IN_CALCDEP  = '0' 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         ELSE 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         SET @iPC  = @IN_PERDEPR  -  (@iPc1  - @iPc2 ) 
         SET @iSD  = @IN_PERDEPR  *  (@IN_PERDEPR  + 1 )  / 2 
         SET @nTxDep1  = @iPC  / @iSD 
         SET @nTxDep2  = @nTxDep1 
         SET @nTxDep3  = @nTxDep1 
         SET @nTxDep4  = @nTxDep1 
         SET @nTxDep5  = @nTxDep1 
      END 
   END 
   IF @IN_TPDEPR  = ' '  or @IN_TPDEPR  = '1'  or @IN_TPDEPR  = '7' 
   BEGIN 
      SET @nTxDep1  = @IN_TXDEPR1  / 100 
      SET @nTxDep2  = @IN_TXDEPR2  / 100 
      SET @nTxDep3  = @IN_TXDEPR3  / 100 
      SET @nTxDep4  = @IN_TXDEPR4  / 100 
      SET @nTxDep5  = @IN_TXDEPR5  / 100 
      IF @IN_CALCDEP  = '0' 
      BEGIN 
         SET @nTxDep1  = @nTxDep1  / 12 
         SET @nTxDep2  = @nTxDep2  / 12 
         SET @nTxDep3  = @nTxDep3  / 12 
         SET @nTxDep4  = @nTxDep4  / 12 
         SET @nTxDep5  = @nTxDep5  / 12 
      END 
      IF @IN_LFUNDADA  = '1'  and @IN_DEPREC  != ' ' 
      BEGIN 
         SET @nTxDep2  = @nTxDep1 
         SET @nTxDep3  = @nTxDep1 
         SET @nTxDep4  = @nTxDep1 
         SET @nTxDep5  = @nTxDep1 
      END 
   END 
   IF @IN_TPDEPR  = 'A' 
   BEGIN 
      SET @cAux  = 'FNI' 
      SET @cFilial_AUX2  = ' ' 
      EXEC XFILIAL_11_01 @cAux , @cFilial_AUX2 , @cFilial_FNI output 
      SET @cAux  = 'FNT' 
      EXEC XFILIAL_11_01 @cAux , @cFilial_AUX2 , @cFilial_FNT output 
      SELECT @cFNI_TIPO  = FNI_TIPO , @cFNI_CURVFI  = FNI_CURVFI , @cFNI_PERIOD  = FNI_PERIOD , @cFNI_MSBLQL  = FNI_MSBLQL 
        
        FROM FNI010 
        WHERE FNI_FILIAL  = @cFilial_FNI  and FNI_CODIND  = @IN_CODIND  and FNI_STATUS  = '1'  and D_E_L_E_T_  = ' ' 
      IF @cFNI_MSBLQL  != '1' 
      BEGIN 
         IF @cFNI_TIPO  = '2' 
         BEGIN 
            SET @cMes  = SUBSTRING ( @IN_DATADEP , 5 , 2 )
            SET @cAno  = SUBSTRING ( @IN_DATADEP , 1 , 4 )
            SET @cDataIni  = @cAno  + @cMes  + '01' 
            SELECT @nIndTot  = SUM(FNT_TAXA )
              FROM FNT010 
              WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_DATA  >= @cDataIni  and FNT_DATA  <= @cFNI_CURVFI 
               and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1'  and D_E_L_E_T_  = ' ' 
            SELECT @nFNT_TAXA  = FNT_TAXA 
              FROM FNT010 
              WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1' 
               and FNT_DATA  = @cDataIni  and D_E_L_E_T_  = ' ' 
            SET @nTxDep1  = @nFNT_TAXA  / @nIndTot 
         END 
         IF @cFNI_TIPO IN ( '1' , ' '  ) 
         BEGIN 
            IF @cFNI_PERIOD  = '1' 
            BEGIN 
               SET @nDias  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 7 , 2 ))
               SET @cMes  = SUBSTRING ( @IN_DATADEP , 5 , 2 )
               SET @cAno  = SUBSTRING ( @IN_DATADEP , 1 , 4 )
               SET @cDataIni  = @cAno  + @cMes  + '01' 
               SET @nFator  = @nDias 
               SELECT @nFNT_TAXA  = SUM(FNT_TAXA )
                 FROM FNT010 
                 WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1' 
                  and FNT_DATA  >= @cDataIni  and FNT_DATA  <= @IN_DATADEP  and D_E_L_E_T_  = ' ' 
               SET @nTxDep1  =  (@nFNT_TAXA  / @nFator ) 
            END 
            ELSE 
            BEGIN 
               SET @cMes  = SUBSTRING ( @IN_DATADEP , 5 , 2 )
               SET @cAno  = SUBSTRING ( @IN_DATADEP , 1 , 4 )
               IF @cFNI_PERIOD  = '2' 
               BEGIN 
                  SET @cDataIni  = @cAno  + @cMes  + '01' 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 30 
                  SET @nFator  = 30 
               END 
               IF @cFNI_PERIOD  = '3' 
               BEGIN 
                  IF @cMes  >= '01'  and @cMes  <= '03' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '01'  + '01' 
                  END 
                  IF @cMes  >= '04'  and @cMes  <= '06' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '04'  + '01' 
                  END 
                  IF @cMes  >= '07'  and @cMes  <= '09' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '07'  + '01' 
                  END 
                  IF @cMes  >= '10'  and @cMes  <= '12' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '10'  + '01' 
                  END 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 90 
                  SET @nFator  = 30 
               END 
               IF @cFNI_PERIOD  = '4' 
               BEGIN 
                  IF @cMes  >= '01'  and @cMes  <= '06' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '01'  + '01' 
                  END 
                  IF @cMes  >= '07'  and @cMes  <= '12' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '07'  + '01' 
                  END 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 180 
                  SET @nFator  = 30 
               END 
               IF @cFNI_PERIOD  = '5' 
               BEGIN 
                  SET @cDataIni  = @cAno  + '01'  + '01' 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 365 
                  SET @nFator  = 30 
               END 
               SELECT @nFNT_TAXA  = FNT_TAXA 
                 FROM FNT010 
                 WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1' 
                  and FNT_DATA  = @cDataIni  and D_E_L_E_T_  = ' ' 
               SET @nTxDep1  =  (@nFNT_TAXA  / @nDias )  * @nFator 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         SET @nTxDep1  = 0 
      END 
      SET @nTxDep2  = @nTxDep1 
      SET @nTxDep3  = @nTxDep1 
      SET @nTxDep4  = @nTxDep1 
      SET @nTxDep5  = @nTxDep1 
   END 
   SET @OUT_TXDEP1  = @nTxDep1 
   SET @OUT_TXDEP2  = @nTxDep2 
   SET @OUT_TXDEP3  = @nTxDep3 
   SET @OUT_TXDEP4  = @nTxDep4 
   SET @OUT_TXDEP5  = @nTxDep5 
   SET @OUT_IPC  = @iPC 
END
GO

GO
--SqlScripter----[dbo].[ATF002_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF002_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF002_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF002_11_02]
(
    @IN_CPAISLOC Char( 03 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_TPDEPR Char( 01 ) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_DEPREC Char( 40 ) , 
    @IN_LFUNDADA Char( 01 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_PERDEPR Float , 
    @IN_TXDEPR1 Float , 
    @IN_TXDEPR2 Float , 
    @IN_TXDEPR3 Float , 
    @IN_TXDEPR4 Float , 
    @IN_TXDEPR5 Float , 
    @IN_YTD Float , 
    @IN_PRODMES Float , 
    @IN_PRODANC Float , 
    @IN_PRODANO Float , 
    @IN_DEPACM1 Float , 
    @IN_VORIG1 Float , 
    @IN_VLSALV Float , 
    @IN_CODIND Char( 08 ) , 
    @OUT_TXDEP1 Float  output , 
    @OUT_TXDEP2 Float  output , 
    @OUT_TXDEP3 Float  output , 
    @OUT_TXDEP4 Float  output , 
    @OUT_TXDEP5 Float  output , 
    @OUT_IPC Integer  output ) AS
 
-- Declaration of variables
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nAno Integer
DECLARE @nTxAcum Float
DECLARE @iX Integer
DECLARE @iPc1 Float
DECLARE @iPc2 Float
DECLARE @iPC Float
DECLARE @iSD Float
DECLARE @cFNI_TIPO Char( 01 )
DECLARE @cFilial_FNI Char( 2)
DECLARE @cFilial_FNT Char( 2)
DECLARE @cFNI_CURVFI Char( 08 )
DECLARE @cFNI_PERIOD Char( 01 )
DECLARE @cFNI_MSBLQL Char( 01 )
DECLARE @nIndTot Float
DECLARE @nFNT_TAXA Float
DECLARE @cAux Char( 03 )
DECLARE @cFilial_AUX2 Char( 2)
DECLARE @nDias Integer
DECLARE @cMes Char( 02 )
DECLARE @cAno Char( 04 )
DECLARE @nFator Integer
DECLARE @cDataIni Char( 08 )
DECLARE @cDataFim Char( 08 )
BEGIN
   SET @nTxDep1  = 0 
   SET @nTxDep2  = 0 
   SET @nTxDep3  = 0 
   SET @nTxDep4  = 0 
   SET @nTxDep5  = 0 
   SET @iPC  = 0 
   IF @IN_TPDEPR  = '2' 
   BEGIN 
      IF  (@IN_PERDEPR  > 0  and @IN_VLSALV  > 0 ) 
      BEGIN 
         IF  (@IN_DEPACM1  + @IN_VLSALV  < @IN_VORIG1 ) 
         BEGIN 
            SET @nTxDep1  =  (1  - POWER (  (@IN_VLSALV  / @IN_VORIG1 ) ,  (1  / @IN_PERDEPR ) )) 
         END 
         SET @nTxDep2  = @nTxDep1 
         SET @nTxDep3  = @nTxDep1 
         SET @nTxDep4  = @nTxDep1 
         SET @nTxDep5  = @nTxDep1 
      END 
   END 
   IF @IN_TPDEPR  = '3' 
   BEGIN 
      SET @nAno  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) - CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 
             4 ))
      IF SUBSTRING ( @IN_DATADEP , 5 , 2 ) < SUBSTRING ( @IN_DINDEPR , 5 , 2 )
      BEGIN 
         SET @nAno  = @nAno  - 1 
      END 
      IF @IN_YTD  > 0 
      BEGIN 
         SET @nTxDep1  =  (@IN_YTD  - @nAno )  /  ( (@IN_YTD  *  (@IN_YTD  + 1 ) )  / 2 ) 
      END 
      SET @nTxDep2  = @nTxDep1 
      SET @nTxDep3  = @nTxDep1 
      SET @nTxDep4  = @nTxDep1 
      SET @nTxDep5  = @nTxDep1 
   END 
   IF @IN_TPDEPR  = '4'  or @IN_TPDEPR  = '5' 
   BEGIN 
      IF  (@IN_PRODMES  > 0  and @IN_PRODANO  > 0 ) 
      BEGIN 
         SET @nTxDep1  = @IN_PRODMES  / @IN_PRODANO 
      END 
      SET @nTxDep2  = @nTxDep1 
      SET @nTxDep3  = @nTxDep1 
      SET @nTxDep4  = @nTxDep1 
      SET @nTxDep5  = @nTxDep1 
   END 
   IF @IN_TPDEPR  = '6' 
   BEGIN 
      IF @IN_PERDEPR  > 0 
      BEGIN 
         IF @IN_CALCDEP  = '0' 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         ELSE 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         SET @iPC  = @IN_PERDEPR  -  (@iPc1  - @iPc2 ) 
         SET @iSD  = @IN_PERDEPR  *  (@IN_PERDEPR  + 1 )  / 2 
         SET @nTxDep1  = @iPC  / @iSD 
         SET @nTxDep2  = @nTxDep1 
         SET @nTxDep3  = @nTxDep1 
         SET @nTxDep4  = @nTxDep1 
         SET @nTxDep5  = @nTxDep1 
      END 
   END 
   IF @IN_TPDEPR  = ' '  or @IN_TPDEPR  = '1'  or @IN_TPDEPR  = '7' 
   BEGIN 
      SET @nTxDep1  = @IN_TXDEPR1  / 100 
      SET @nTxDep2  = @IN_TXDEPR2  / 100 
      SET @nTxDep3  = @IN_TXDEPR3  / 100 
      SET @nTxDep4  = @IN_TXDEPR4  / 100 
      SET @nTxDep5  = @IN_TXDEPR5  / 100 
      IF @IN_CALCDEP  = '0' 
      BEGIN 
         SET @nTxDep1  = @nTxDep1  / 12 
         SET @nTxDep2  = @nTxDep2  / 12 
         SET @nTxDep3  = @nTxDep3  / 12 
         SET @nTxDep4  = @nTxDep4  / 12 
         SET @nTxDep5  = @nTxDep5  / 12 
      END 
      IF @IN_LFUNDADA  = '1'  and @IN_DEPREC  != ' ' 
      BEGIN 
         SET @nTxDep2  = @nTxDep1 
         SET @nTxDep3  = @nTxDep1 
         SET @nTxDep4  = @nTxDep1 
         SET @nTxDep5  = @nTxDep1 
      END 
   END 
   IF @IN_TPDEPR  = 'A' 
   BEGIN 
      SET @cAux  = 'FNI' 
      SET @cFilial_AUX2  = ' ' 
      EXEC XFILIAL_11_02 @cAux , @cFilial_AUX2 , @cFilial_FNI output 
      SET @cAux  = 'FNT' 
      EXEC XFILIAL_11_02 @cAux , @cFilial_AUX2 , @cFilial_FNT output 
      SELECT @cFNI_TIPO  = FNI_TIPO , @cFNI_CURVFI  = FNI_CURVFI , @cFNI_PERIOD  = FNI_PERIOD , @cFNI_MSBLQL  = FNI_MSBLQL 
        
        FROM FNI020 
        WHERE FNI_FILIAL  = @cFilial_FNI  and FNI_CODIND  = @IN_CODIND  and FNI_STATUS  = '1'  and D_E_L_E_T_  = ' ' 
      IF @cFNI_MSBLQL  != '1' 
      BEGIN 
         IF @cFNI_TIPO  = '2' 
         BEGIN 
            SET @cMes  = SUBSTRING ( @IN_DATADEP , 5 , 2 )
            SET @cAno  = SUBSTRING ( @IN_DATADEP , 1 , 4 )
            SET @cDataIni  = @cAno  + @cMes  + '01' 
            SELECT @nIndTot  = SUM(FNT_TAXA )
              FROM FNT020 
              WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_DATA  >= @cDataIni  and FNT_DATA  <= @cFNI_CURVFI 
               and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1'  and D_E_L_E_T_  = ' ' 
            SELECT @nFNT_TAXA  = FNT_TAXA 
              FROM FNT020 
              WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1' 
               and FNT_DATA  = @cDataIni  and D_E_L_E_T_  = ' ' 
            SET @nTxDep1  = @nFNT_TAXA  / @nIndTot 
         END 
         IF @cFNI_TIPO IN ( '1' , ' '  ) 
         BEGIN 
            IF @cFNI_PERIOD  = '1' 
            BEGIN 
               SET @nDias  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 7 , 2 ))
               SET @cMes  = SUBSTRING ( @IN_DATADEP , 5 , 2 )
               SET @cAno  = SUBSTRING ( @IN_DATADEP , 1 , 4 )
               SET @cDataIni  = @cAno  + @cMes  + '01' 
               SET @nFator  = @nDias 
               SELECT @nFNT_TAXA  = SUM(FNT_TAXA )
                 FROM FNT020 
                 WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1' 
                  and FNT_DATA  >= @cDataIni  and FNT_DATA  <= @IN_DATADEP  and D_E_L_E_T_  = ' ' 
               SET @nTxDep1  =  (@nFNT_TAXA  / @nFator ) 
            END 
            ELSE 
            BEGIN 
               SET @cMes  = SUBSTRING ( @IN_DATADEP , 5 , 2 )
               SET @cAno  = SUBSTRING ( @IN_DATADEP , 1 , 4 )
               IF @cFNI_PERIOD  = '2' 
               BEGIN 
                  SET @cDataIni  = @cAno  + @cMes  + '01' 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 30 
                  SET @nFator  = 30 
               END 
               IF @cFNI_PERIOD  = '3' 
               BEGIN 
                  IF @cMes  >= '01'  and @cMes  <= '03' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '01'  + '01' 
                  END 
                  IF @cMes  >= '04'  and @cMes  <= '06' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '04'  + '01' 
                  END 
                  IF @cMes  >= '07'  and @cMes  <= '09' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '07'  + '01' 
                  END 
                  IF @cMes  >= '10'  and @cMes  <= '12' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '10'  + '01' 
                  END 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 90 
                  SET @nFator  = 30 
               END 
               IF @cFNI_PERIOD  = '4' 
               BEGIN 
                  IF @cMes  >= '01'  and @cMes  <= '06' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '01'  + '01' 
                  END 
                  IF @cMes  >= '07'  and @cMes  <= '12' 
                  BEGIN 
                     SET @cDataIni  = @cAno  + '07'  + '01' 
                  END 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 180 
                  SET @nFator  = 30 
               END 
               IF @cFNI_PERIOD  = '5' 
               BEGIN 
                  SET @cDataIni  = @cAno  + '01'  + '01' 
                  SET @cDataFim  = @IN_DATADEP 
                  SET @nDias  = 365 
                  SET @nFator  = 30 
               END 
               SELECT @nFNT_TAXA  = FNT_TAXA 
                 FROM FNT020 
                 WHERE FNT_FILIAL  = @cFilial_FNT  and FNT_CODIND  = @IN_CODIND  and FNT_MSBLQL  = '2'  and FNT_STATUS  = '1' 
                  and FNT_DATA  = @cDataIni  and D_E_L_E_T_  = ' ' 
               SET @nTxDep1  =  (@nFNT_TAXA  / @nDias )  * @nFator 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         SET @nTxDep1  = 0 
      END 
      SET @nTxDep2  = @nTxDep1 
      SET @nTxDep3  = @nTxDep1 
      SET @nTxDep4  = @nTxDep1 
      SET @nTxDep5  = @nTxDep1 
   END 
   SET @OUT_TXDEP1  = @nTxDep1 
   SET @OUT_TXDEP2  = @nTxDep2 
   SET @OUT_TXDEP3  = @nTxDep3 
   SET @OUT_TXDEP4  = @nTxDep4 
   SET @OUT_TXDEP5  = @nTxDep5 
   SET @OUT_IPC  = @iPC 
END
GO

GO
--SqlScripter----[dbo].[ATF003_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF003_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF003_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF003_11_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_OCORR Char( 2) , 
    @IN_MOTIVO Char( 2) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_QUANTD Float , 
    @IN_VLROC1 Float , 
    @IN_VLROC2 Float , 
    @IN_VLROC3 Float , 
    @IN_VLROC4 Float , 
    @IN_VLROC5 Float , 
    @IN_SERIE Char( 3) , 
    @IN_NOTA Char( 9) , 
    @IN_VENDA Float , 
    @IN_TXMEDIA Float , 
    @IN_TXDEPR Float , 
    @IN_CCUSTO Char( 9) , 
    @IN_LOCAL Char( 6) , 
    @IN_SEQ Char( 3) , 
    @IN_SUBCTA Char( 9) , 
    @IN_SEQREAV Char( 2) , 
    @IN_CODBAIX Char( 6) , 
    @IN_FILORIG Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_DCONTAB Char( 8) , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_QUANTPR Float , 
    @IN_IDMOV Char( 10 ) , 
    @IN_TPBEM Char( 02 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer , 
    @IN_CALCPIS Char( 01 ) ) AS
 
-- Declaration of variables
DECLARE @nQUANTD Float
DECLARE @nVLROC1 Float
DECLARE @nVLROC2 Float
DECLARE @nVLROC3 Float
DECLARE @nVLROC4 Float
DECLARE @nVLROC5 Float
DECLARE @nVENDA Float
DECLARE @nTXMEDIA Float
DECLARE @nTXDEPR Float
DECLARE @iRecno Integer
BEGIN
   SET @nQUANTD  = @IN_QUANTD 
   SET @nVLROC1  = ROUND ( @IN_VLROC1 , @IN_CASA1 )
   SET @nVLROC2  = ROUND ( @IN_VLROC2 , @IN_CASA2 )
   SET @nVLROC3  = ROUND ( @IN_VLROC3 , @IN_CASA3 )
   SET @nVLROC4  = ROUND ( @IN_VLROC4 , @IN_CASA4 )
   SET @nVLROC5  = ROUND ( @IN_VLROC5 , @IN_CASA5 )
   SET @nVENDA  = @IN_VENDA 
   SET @nTXMEDIA  = @IN_TXMEDIA 
   SET @nTXDEPR  = ROUND ( @IN_TXDEPR , 6 )
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
     FROM SN4010 
   SET @iRecno  = @iRecno  + 1 
   INSERT INTO SN4010 (N4_FILIAL , N4_CBASE , N4_ITEM , N4_TIPO , N4_OCORR , N4_MOTIVO , N4_TIPOCNT , N4_CONTA , N4_DATA , 
          N4_QUANTD , N4_VLROC1 , N4_VLROC2 , N4_VLROC3 , N4_VLROC4 , N4_VLROC5 , N4_SERIE , N4_NOTA , N4_VENDA , N4_TXMEDIA , 
          N4_TXDEPR , N4_CCUSTO , N4_LOCAL , N4_SEQ , N4_SUBCTA , N4_SEQREAV , N4_CODBAIX , N4_FILORIG , N4_CLVL , N4_DCONTAB , 
          R_E_C_N_O_ , N4_TPSALDO , N4_QUANTPR , N4_IDMOV , N4_ORIGEM , N4_LP , N4_LA ) 
   VALUES (@IN_FILIAL , @IN_CBASE , @IN_ITEM , @IN_TIPO , @IN_OCORR , @IN_MOTIVO , @IN_TIPOCNT , @IN_CONTA , @IN_DATA , @nQUANTD , 
          @nVLROC1 , @nVLROC2 , @nVLROC3 , @nVLROC4 , @nVLROC5 , @IN_SERIE , @IN_NOTA , @nVENDA , @nTXMEDIA , @nTXDEPR , 
          @IN_CCUSTO , @IN_LOCAL , @IN_SEQ , @IN_SUBCTA , @IN_SEQREAV , @IN_CODBAIX , @IN_FILORIG , @IN_CLVL , @IN_DCONTAB , 
          @iRecno , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , 'ATFA050' , '820' , 'N' );
END
GO

GO
--SqlScripter----[dbo].[ATF003_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF003_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF003_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF003_11_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_OCORR Char( 2) , 
    @IN_MOTIVO Char( 2) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_QUANTD Float , 
    @IN_VLROC1 Float , 
    @IN_VLROC2 Float , 
    @IN_VLROC3 Float , 
    @IN_VLROC4 Float , 
    @IN_VLROC5 Float , 
    @IN_SERIE Char( 3) , 
    @IN_NOTA Char( 8) , 
    @IN_VENDA Float , 
    @IN_TXMEDIA Float , 
    @IN_TXDEPR Float , 
    @IN_CCUSTO Char( 9) , 
    @IN_LOCAL Char( 6) , 
    @IN_SEQ Char( 3) , 
    @IN_SUBCTA Char( 9) , 
    @IN_SEQREAV Char( 2) , 
    @IN_CODBAIX Char( 6) , 
    @IN_FILORIG Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_DCONTAB Char( 8) , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_QUANTPR Float , 
    @IN_IDMOV Char( 10 ) , 
    @IN_TPBEM Char( 02 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer , 
    @IN_CALCPIS Char( 01 ) ) AS
 
-- Declaration of variables
DECLARE @nQUANTD Float
DECLARE @nVLROC1 Float
DECLARE @nVLROC2 Float
DECLARE @nVLROC3 Float
DECLARE @nVLROC4 Float
DECLARE @nVLROC5 Float
DECLARE @nVENDA Float
DECLARE @nTXMEDIA Float
DECLARE @nTXDEPR Float
DECLARE @iRecno Integer
BEGIN
   SET @nQUANTD  = @IN_QUANTD 
   SET @nVLROC1  = ROUND ( @IN_VLROC1 , @IN_CASA1 )
   SET @nVLROC2  = ROUND ( @IN_VLROC2 , @IN_CASA2 )
   SET @nVLROC3  = ROUND ( @IN_VLROC3 , @IN_CASA3 )
   SET @nVLROC4  = ROUND ( @IN_VLROC4 , @IN_CASA4 )
   SET @nVLROC5  = ROUND ( @IN_VLROC5 , @IN_CASA5 )
   SET @nVENDA  = @IN_VENDA 
   SET @nTXMEDIA  = @IN_TXMEDIA 
   SET @nTXDEPR  = ROUND ( @IN_TXDEPR , 6 )
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
     FROM SN4030 
   SET @iRecno  = @iRecno  + 1 
   INSERT INTO SN4030 (N4_FILIAL , N4_CBASE , N4_ITEM , N4_TIPO , N4_OCORR , N4_MOTIVO , N4_TIPOCNT , N4_CONTA , N4_DATA , 
          N4_QUANTD , N4_VLROC1 , N4_VLROC2 , N4_VLROC3 , N4_VLROC4 , N4_VLROC5 , N4_SERIE , N4_NOTA , N4_VENDA , N4_TXMEDIA , 
          N4_TXDEPR , N4_CCUSTO , N4_LOCAL , N4_SEQ , N4_SUBCTA , N4_SEQREAV , N4_CODBAIX , N4_FILORIG , N4_CLVL , N4_DCONTAB , 
          R_E_C_N_O_ , N4_TPSALDO , N4_QUANTPR , N4_IDMOV , N4_ORIGEM , N4_LP , N4_LA ) 
   VALUES (@IN_FILIAL , @IN_CBASE , @IN_ITEM , @IN_TIPO , @IN_OCORR , @IN_MOTIVO , @IN_TIPOCNT , @IN_CONTA , @IN_DATA , @nQUANTD , 
          @nVLROC1 , @nVLROC2 , @nVLROC3 , @nVLROC4 , @nVLROC5 , @IN_SERIE , @IN_NOTA , @nVENDA , @nTXMEDIA , @nTXDEPR , 
          @IN_CCUSTO , @IN_LOCAL , @IN_SEQ , @IN_SUBCTA , @IN_SEQREAV , @IN_CODBAIX , @IN_FILORIG , @IN_CLVL , @IN_DCONTAB , 
          @iRecno , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , 'ATFA050' , '820' , 'N' );
END
GO

GO
--SqlScripter----[dbo].[ATF004_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF004_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF004_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF004_11_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_PROGRAMA Char( 10 ) , 
    @IN_TPBEM Char( 02 ) , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer ) AS
 
-- Declaration of variables
DECLARE @nValor1 Float
DECLARE @nValor2 Float
DECLARE @nValor3 Float
DECLARE @nValor4 Float
DECLARE @nValor5 Float
DECLARE @nValXX1 Float
DECLARE @nValXX2 Float
DECLARE @nValXX3 Float
DECLARE @nValXX4 Float
DECLARE @nValXX5 Float
DECLARE @nTaxa Float
DECLARE @iRecno Integer
DECLARE @cAux Char( 03 )
DECLARE @cFilial_SN5 Char( 2)
DECLARE @cFilial_SNC Char( 2)
DECLARE @cFilial_SN6 Char( 2)
DECLARE @cFilial_SNA Char( 2)
DECLARE @cConta Char( 20)
DECLARE @cSinal Char( 01 )
DECLARE @cTipo Char( 1)
DECLARE @cTabela Char( 03 )
BEGIN
   SET @nValor1  = @IN_VALOR1 
   SET @nValor2  = @IN_VALOR2 
   SET @nValor3  = @IN_VALOR3 
   SET @nValor4  = @IN_VALOR4 
   SET @nValor5  = @IN_VALOR5 
   IF  ( (@nValor1  + @nValor2  + @nValor3  + @nValor4  + @nValor5 )  != 0 )  and @IN_CONTA  != ' '  and @IN_DATA  != ' ' 
     
   BEGIN 
      SET @nValXX1  = 0 
      SET @nValXX2  = 0 
      SET @nValXX3  = 0 
      SET @nValXX4  = 0 
      SET @nValXX5  = 0 
      SET @nTaxa  = @IN_TAXA 
      SET @iRecno  = null 
      SET @cConta  = @IN_CONTA 
      SET @cSinal  = @IN_SINAL 
      SET @cTipo  = ' ' 
      SET @cAux  = 'SN5' 
      EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SN5 output 
      EXEC ATFCONTA_01 @IN_CONTA , @IN_DATA , @IN_TIPO , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_SINAL , 
             @nTaxa , @IN_SUBCTA , @IN_FILIAL , @IN_CLVL , @IN_CUSTO , @cConta output 
      EXEC ATFSINAL_01 @IN_CONTA , @IN_DATA , @IN_TIPO , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_SINAL , 
             @nTaxa , @IN_SUBCTA , @IN_FILIAL , @IN_CLVL , @IN_CUSTO , @IN_TIPOCNT , @IN_PROGRAMA , @cSinal output 
      EXEC ATFTIPO_01 @IN_CONTA , @IN_DATA , @IN_TIPO , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @cSinal , 
             @nTaxa , @IN_SUBCTA , @IN_FILIAL , @IN_CLVL , @IN_CUSTO , @IN_TIPOCNT , @IN_PROGRAMA , @cTipo output 
      SET @iRecno  = null 
      SELECT @iRecno  = R_E_C_N_O_ 
        FROM SN5010 
        WHERE N5_FILIAL  = @cFilial_SN5  and N5_CONTA  = @cConta  and N5_DATA  = @IN_DATA  and N5_TIPO  = @IN_TIPO  and N5_TPBEM  = @IN_TPBEM 
         and N5_TPSALDO  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno is null 
      BEGIN 
         IF @cSinal  = '+' 
         BEGIN 
            SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
            SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
            SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
            SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
            SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
         END 
         ELSE 
         BEGIN 
            SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
            SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
            SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
            SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
            SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
         END 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM SN5010 
         SET @iRecno  = @iRecno  + 1 
         begin tran 
         INSERT INTO SN5010 (N5_FILIAL , N5_CONTA , N5_DATA , N5_TIPO , N5_TAXA , N5_VALOR1 , N5_VALOR2 , N5_VALOR3 , N5_VALOR4 , 
                N5_VALOR5 , R_E_C_N_O_ , N5_TPBEM , N5_TPSALDO ) 
         VALUES (@cFilial_SN5 , @cConta , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , @nValXX2 , @nValXX3 , @nValXX4 , @nValXX5 , 
                @iRecno , @IN_TPBEM , @IN_TPSALDO );
         commit tran 
      END 
      ELSE 
      BEGIN 
         SELECT @nValXX1  = N5_VALOR1 , @nValXX2  = N5_VALOR2 , @nValXX3  = N5_VALOR3 , @nValXX4  = N5_VALOR4 , @nValXX5  = N5_VALOR5 
           
           FROM SN5010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cSinal  = '+' 
         BEGIN 
            SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
            SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
            SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
            SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
            SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
         END 
         ELSE 
         BEGIN 
            SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
            SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
            SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
            SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
            SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
         END 
         Begin tran 
         UPDATE SN5010 
           WITH (ROWLOCK) 
            SET N5_TAXA  = @nTaxa , N5_VALOR1  = @nValXX1 , N5_VALOR2  = @nValXX2 , N5_VALOR3  = @nValXX3 , N5_VALOR4  = @nValXX4 
           , N5_VALOR5  = @nValXX5 
          WHERE R_E_C_N_O_  = @iRecno 
         Commit tran 
      END 
      SET @cTabela  = 'SN5' 
      EXEC ATFGRSLD_01 @cTipo , @cSinal , @cTabela , @iRecno 
      SELECT @nValXX1  = N5_VALOR1 , @nValXX2  = N5_VALOR2 , @nValXX3  = N5_VALOR3 , @nValXX4  = N5_VALOR4 , @nValXX5  = N5_VALOR5 
        , @iRecno  = R_E_C_N_O_ 
        FROM SN5010 
        WHERE R_E_C_N_O_  = @iRecno 
      IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
      BEGIN 
         begin tran 
         DELETE FROM SN5010  WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      IF @IN_LCUSTO  = '1'  and @IN_CUSTO  <> ' ' 
      BEGIN 
         SET @nValXX1  = 0 
         SET @nValXX2  = 0 
         SET @nValXX3  = 0 
         SET @nValXX4  = 0 
         SET @nValXX5  = 0 
         SET @iRecno  = null 
         SET @cAux  = 'SNC' 
         EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SNC output 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SNC010 
           WHERE NC_FILIAL  = @cFilial_SNC  and NC_CONTA  = @cConta  and NC_CCUSTO  = @IN_CUSTO  and NC_DATA  = @IN_DATA 
            and NC_TIPO  = @IN_TIPO  and NC_TPBEM  = @IN_TPBEM  and NC_TPSALDO  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
         IF @iRecno is null 
         BEGIN 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SNC010 
            SET @iRecno  = @iRecno  + 1 
            begin tran 
            INSERT INTO SNC010 (NC_FILIAL , NC_CONTA , NC_CCUSTO , NC_DATA , NC_TIPO , NC_TAXA , NC_VALOR1 , NC_VALOR2 , 
                   NC_VALOR3 , NC_VALOR4 , NC_VALOR5 , R_E_C_N_O_ , NC_TPBEM , NC_TPSALDO ) 
            VALUES (@cFilial_SNC , @cConta , @IN_CUSTO , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , @nValXX2 , @nValXX3 , 
                   @nValXX4 , @nValXX5 , @iRecno , @IN_TPBEM , @IN_TPSALDO );
            commit tran 
         END 
         ELSE 
         BEGIN 
            SELECT @nValXX1  = NC_VALOR1 , @nValXX2  = NC_VALOR2 , @nValXX3  = NC_VALOR3 , @nValXX4  = NC_VALOR4 , @nValXX5  = NC_VALOR5 
              
              FROM SNC010 
              WHERE R_E_C_N_O_  = @iRecno 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
            END 
            begin tran 
            UPDATE SNC010 
              WITH (ROWLOCK) 
               SET NC_TAXA  = @nTaxa , NC_VALOR1  = @nValXX1 , NC_VALOR2  = @nValXX2 , NC_VALOR3  = @nValXX3 , NC_VALOR4  = @nValXX4 
              , NC_VALOR5  = @nValXX5 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @cTabela  = 'SNC' 
         EXEC ATFGRSLD_01 @cTipo , @cSinal , @cTabela , @iRecno 
         SELECT @nValXX1  = NC_VALOR1 , @nValXX2  = NC_VALOR2 , @nValXX3  = NC_VALOR3 , @nValXX4  = NC_VALOR4 , @nValXX5  = NC_VALOR5 
           , @iRecno  = R_E_C_N_O_ 
           FROM SNC010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
           
         BEGIN 
            begin tran 
            DELETE FROM SNC010  WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
      IF @IN_LITEM  = '1'  and @IN_SUBCTA  <> ' ' 
      BEGIN 
         SET @nValXX1  = 0 
         SET @nValXX2  = 0 
         SET @nValXX3  = 0 
         SET @nValXX4  = 0 
         SET @nValXX5  = 0 
         SET @iRecno  = null 
         SET @cAux  = 'SN6' 
         EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SN6 output 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SN6010 
           WHERE N6_FILIAL  = @cFilial_SN6  and N6_CONTA  = @cConta  and N6_CCUSTO  = @IN_CUSTO  and N6_SUBCTA  = @IN_SUBCTA 
            and N6_DATA  = @IN_DATA  and N6_TIPO  = @IN_TIPO  and N6_TPBEM  = @IN_TPBEM  and N6_TPSALDO  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno is null 
         BEGIN 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SN6010 
            SET @iRecno  = @iRecno  + 1 
            begin tran 
            INSERT INTO SN6010 (N6_FILIAL , N6_CONTA , N6_CCUSTO , N6_SUBCTA , N6_DATA , N6_TIPO , N6_TAXA , N6_VALOR1 , 
                   N6_VALOR2 , N6_VALOR3 , N6_VALOR4 , N6_VALOR5 , R_E_C_N_O_ , N6_TPBEM , N6_TPSALDO ) 
            VALUES (@cFilial_SN6 , @cConta , @IN_CUSTO , @IN_SUBCTA , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , @nValXX2 , 
                   @nValXX3 , @nValXX4 , @nValXX5 , @iRecno , @IN_TPBEM , @IN_TPSALDO );
            commit tran 
         END 
         ELSE 
         BEGIN 
            SELECT @nValXX1  = N6_VALOR1 , @nValXX2  = N6_VALOR2 , @nValXX3  = N6_VALOR3 , @nValXX4  = N6_VALOR4 , @nValXX5  = N6_VALOR5 
              
              FROM SN6010 
              WHERE R_E_C_N_O_  = @iRecno 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
            END 
            begin tran 
            UPDATE SN6010 
              WITH (ROWLOCK) 
               SET N6_TAXA  = @nTaxa , N6_VALOR1  = @nValXX1 , N6_VALOR2  = @nValXX2 , N6_VALOR3  = @nValXX3 , N6_VALOR4  = @nValXX4 
              , N6_VALOR5  = @nValXX5 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @cTabela  = 'SN6' 
         EXEC ATFGRSLD_01 @cTipo , @cSinal , @cTabela , @iRecno 
         SELECT @nValXX1  = N6_VALOR1 , @nValXX2  = N6_VALOR2 , @nValXX3  = N6_VALOR3 , @nValXX4  = N6_VALOR4 , @nValXX5  = N6_VALOR5 
           , @iRecno  = R_E_C_N_O_ 
           FROM SN6010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
           
         BEGIN 
            begin tran 
            DELETE FROM SN6010  WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
      IF @IN_LCLVL  = '1'  and @IN_CLVL  <> ' ' 
      BEGIN 
         SET @nValXX1  = 0 
         SET @nValXX2  = 0 
         SET @nValXX3  = 0 
         SET @nValXX4  = 0 
         SET @nValXX5  = 0 
         SET @iRecno  = null 
         SET @cAux  = 'SNA' 
         EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SNA output 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SNA010 
           WHERE NA_FILIAL  = @cFilial_SNA  and NA_CONTA  = @cConta  and NA_CCUSTO  = @IN_CUSTO  and NA_SUBCTA  = @IN_SUBCTA 
            and NA_CLVL  = @IN_CLVL  and NA_DATA  = @IN_DATA  and NA_TIPO  = @IN_TIPO  and NA_TPBEM  = @IN_TPBEM  and NA_TPSALDO  = @IN_TPSALDO 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno is null 
         BEGIN 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SNA010 
            SET @iRecno  = @iRecno  + 1 
            begin tran 
            INSERT INTO SNA010 (NA_FILIAL , NA_CONTA , NA_CCUSTO , NA_SUBCTA , NA_CLVL , NA_DATA , NA_TIPO , NA_TAXA , NA_VALOR1 , 
                   NA_VALOR2 , NA_VALOR3 , NA_VALOR4 , NA_VALOR5 , R_E_C_N_O_ , NA_TPBEM , NA_TPSALDO ) 
            VALUES (@cFilial_SNA , @cConta , @IN_CUSTO , @IN_SUBCTA , @IN_CLVL , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , 
                   @nValXX2 , @nValXX3 , @nValXX4 , @nValXX5 , @iRecno , @IN_TPBEM , @IN_TPSALDO );
            commit tran 
         END 
         ELSE 
         BEGIN 
            SELECT @nValXX1  = NA_VALOR1 , @nValXX2  = NA_VALOR2 , @nValXX3  = NA_VALOR3 , @nValXX4  = NA_VALOR4 , @nValXX5  = NA_VALOR5 
              
              FROM SNA010 
              WHERE R_E_C_N_O_  = @iRecno 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
            END 
            begin tran 
            UPDATE SNA010 
              WITH (ROWLOCK) 
               SET NA_TAXA  = @nTaxa , NA_VALOR1  = @nValXX1 , NA_VALOR2  = @nValXX2 , NA_VALOR3  = @nValXX3 , NA_VALOR4  = @nValXX4 
              , NA_VALOR5  = @nValXX5 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @cTabela  = 'SNA' 
         EXEC ATFGRSLD_01 @cTipo , @cSinal , @cTabela , @iRecno 
         SELECT @nValXX1  = NA_VALOR1 , @nValXX2  = NA_VALOR2 , @nValXX3  = NA_VALOR3 , @nValXX4  = NA_VALOR4 , @nValXX5  = NA_VALOR5 
           , @iRecno  = R_E_C_N_O_ 
           FROM SNA010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
           
         BEGIN 
            begin tran 
            DELETE FROM SNA010  WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[ATF004_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF004_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF004_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF004_11_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_PROGRAMA Char( 10 ) , 
    @IN_TPBEM Char( 02 ) , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer ) AS
 
-- Declaration of variables
DECLARE @nValor1 Float
DECLARE @nValor2 Float
DECLARE @nValor3 Float
DECLARE @nValor4 Float
DECLARE @nValor5 Float
DECLARE @nValXX1 Float
DECLARE @nValXX2 Float
DECLARE @nValXX3 Float
DECLARE @nValXX4 Float
DECLARE @nValXX5 Float
DECLARE @nTaxa Float
DECLARE @iRecno Integer
DECLARE @cAux Char( 03 )
DECLARE @cFilial_SN5 Char( 2)
DECLARE @cFilial_SNC Char( 2)
DECLARE @cFilial_SN6 Char( 2)
DECLARE @cFilial_SNA Char( 2)
DECLARE @cConta Char( 20)
DECLARE @cSinal Char( 01 )
DECLARE @cTipo Char( 1)
DECLARE @cTabela Char( 03 )
BEGIN
   SET @nValor1  = @IN_VALOR1 
   SET @nValor2  = @IN_VALOR2 
   SET @nValor3  = @IN_VALOR3 
   SET @nValor4  = @IN_VALOR4 
   SET @nValor5  = @IN_VALOR5 
   IF  ( (@nValor1  + @nValor2  + @nValor3  + @nValor4  + @nValor5 )  != 0 )  and @IN_CONTA  != ' '  and @IN_DATA  != ' ' 
     
   BEGIN 
      SET @nValXX1  = 0 
      SET @nValXX2  = 0 
      SET @nValXX3  = 0 
      SET @nValXX4  = 0 
      SET @nValXX5  = 0 
      SET @nTaxa  = @IN_TAXA 
      SET @iRecno  = null 
      SET @cConta  = @IN_CONTA 
      SET @cSinal  = @IN_SINAL 
      SET @cTipo  = ' ' 
      SET @cAux  = 'SN5' 
      EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SN5 output 
      EXEC ATFCONTA_02 @IN_CONTA , @IN_DATA , @IN_TIPO , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_SINAL , 
             @nTaxa , @IN_SUBCTA , @IN_FILIAL , @IN_CLVL , @IN_CUSTO , @cConta output 
      EXEC ATFSINAL_02 @IN_CONTA , @IN_DATA , @IN_TIPO , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_SINAL , 
             @nTaxa , @IN_SUBCTA , @IN_FILIAL , @IN_CLVL , @IN_CUSTO , @IN_TIPOCNT , @IN_PROGRAMA , @cSinal output 
      EXEC ATFTIPO_02 @IN_CONTA , @IN_DATA , @IN_TIPO , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @cSinal , 
             @nTaxa , @IN_SUBCTA , @IN_FILIAL , @IN_CLVL , @IN_CUSTO , @IN_TIPOCNT , @IN_PROGRAMA , @cTipo output 
      SET @iRecno  = null 
      SELECT @iRecno  = R_E_C_N_O_ 
        FROM SN5030 
        WHERE N5_FILIAL  = @cFilial_SN5  and N5_CONTA  = @cConta  and N5_DATA  = @IN_DATA  and N5_TIPO  = @IN_TIPO  and N5_TPBEM  = @IN_TPBEM 
         and N5_TPSALDO  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno is null 
      BEGIN 
         IF @cSinal  = '+' 
         BEGIN 
            SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
            SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
            SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
            SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
            SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
         END 
         ELSE 
         BEGIN 
            SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
            SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
            SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
            SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
            SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
         END 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM SN5030 
         SET @iRecno  = @iRecno  + 1 
         begin tran 
         INSERT INTO SN5030 (N5_FILIAL , N5_CONTA , N5_DATA , N5_TIPO , N5_TAXA , N5_VALOR1 , N5_VALOR2 , N5_VALOR3 , N5_VALOR4 , 
                N5_VALOR5 , R_E_C_N_O_ , N5_TPBEM , N5_TPSALDO ) 
         VALUES (@cFilial_SN5 , @cConta , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , @nValXX2 , @nValXX3 , @nValXX4 , @nValXX5 , 
                @iRecno , @IN_TPBEM , @IN_TPSALDO );
         commit tran 
      END 
      ELSE 
      BEGIN 
         SELECT @nValXX1  = N5_VALOR1 , @nValXX2  = N5_VALOR2 , @nValXX3  = N5_VALOR3 , @nValXX4  = N5_VALOR4 , @nValXX5  = N5_VALOR5 
           
           FROM SN5030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cSinal  = '+' 
         BEGIN 
            SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
            SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
            SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
            SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
            SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
         END 
         ELSE 
         BEGIN 
            SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
            SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
            SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
            SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
            SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
         END 
         Begin tran 
         UPDATE SN5030 
           WITH (ROWLOCK) 
            SET N5_TAXA  = @nTaxa , N5_VALOR1  = @nValXX1 , N5_VALOR2  = @nValXX2 , N5_VALOR3  = @nValXX3 , N5_VALOR4  = @nValXX4 
           , N5_VALOR5  = @nValXX5 
          WHERE R_E_C_N_O_  = @iRecno 
         Commit tran 
      END 
      SET @cTabela  = 'SN5' 
      EXEC ATFGRSLD_02 @cTipo , @cSinal , @cTabela , @iRecno 
      SELECT @nValXX1  = N5_VALOR1 , @nValXX2  = N5_VALOR2 , @nValXX3  = N5_VALOR3 , @nValXX4  = N5_VALOR4 , @nValXX5  = N5_VALOR5 
        , @iRecno  = R_E_C_N_O_ 
        FROM SN5030 
        WHERE R_E_C_N_O_  = @iRecno 
      IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
      BEGIN 
         begin tran 
         DELETE FROM SN5030  WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      IF @IN_LCUSTO  = '1'  and @IN_CUSTO  <> ' ' 
      BEGIN 
         SET @nValXX1  = 0 
         SET @nValXX2  = 0 
         SET @nValXX3  = 0 
         SET @nValXX4  = 0 
         SET @nValXX5  = 0 
         SET @iRecno  = null 
         SET @cAux  = 'SNC' 
         EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SNC output 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SNC030 
           WHERE NC_FILIAL  = @cFilial_SNC  and NC_CONTA  = @cConta  and NC_CCUSTO  = @IN_CUSTO  and NC_DATA  = @IN_DATA 
            and NC_TIPO  = @IN_TIPO  and NC_TPBEM  = @IN_TPBEM  and NC_TPSALDO  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
         IF @iRecno is null 
         BEGIN 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SNC030 
            SET @iRecno  = @iRecno  + 1 
            begin tran 
            INSERT INTO SNC030 (NC_FILIAL , NC_CONTA , NC_CCUSTO , NC_DATA , NC_TIPO , NC_TAXA , NC_VALOR1 , NC_VALOR2 , 
                   NC_VALOR3 , NC_VALOR4 , NC_VALOR5 , R_E_C_N_O_ , NC_TPBEM , NC_TPSALDO ) 
            VALUES (@cFilial_SNC , @cConta , @IN_CUSTO , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , @nValXX2 , @nValXX3 , 
                   @nValXX4 , @nValXX5 , @iRecno , @IN_TPBEM , @IN_TPSALDO );
            commit tran 
         END 
         ELSE 
         BEGIN 
            SELECT @nValXX1  = NC_VALOR1 , @nValXX2  = NC_VALOR2 , @nValXX3  = NC_VALOR3 , @nValXX4  = NC_VALOR4 , @nValXX5  = NC_VALOR5 
              
              FROM SNC030 
              WHERE R_E_C_N_O_  = @iRecno 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
            END 
            begin tran 
            UPDATE SNC030 
              WITH (ROWLOCK) 
               SET NC_TAXA  = @nTaxa , NC_VALOR1  = @nValXX1 , NC_VALOR2  = @nValXX2 , NC_VALOR3  = @nValXX3 , NC_VALOR4  = @nValXX4 
              , NC_VALOR5  = @nValXX5 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @cTabela  = 'SNC' 
         EXEC ATFGRSLD_02 @cTipo , @cSinal , @cTabela , @iRecno 
         SELECT @nValXX1  = NC_VALOR1 , @nValXX2  = NC_VALOR2 , @nValXX3  = NC_VALOR3 , @nValXX4  = NC_VALOR4 , @nValXX5  = NC_VALOR5 
           , @iRecno  = R_E_C_N_O_ 
           FROM SNC030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
           
         BEGIN 
            begin tran 
            DELETE FROM SNC030  WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
      IF @IN_LITEM  = '1'  and @IN_SUBCTA  <> ' ' 
      BEGIN 
         SET @nValXX1  = 0 
         SET @nValXX2  = 0 
         SET @nValXX3  = 0 
         SET @nValXX4  = 0 
         SET @nValXX5  = 0 
         SET @iRecno  = null 
         SET @cAux  = 'SN6' 
         EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SN6 output 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SN6030 
           WHERE N6_FILIAL  = @cFilial_SN6  and N6_CONTA  = @cConta  and N6_CCUSTO  = @IN_CUSTO  and N6_SUBCTA  = @IN_SUBCTA 
            and N6_DATA  = @IN_DATA  and N6_TIPO  = @IN_TIPO  and N6_TPBEM  = @IN_TPBEM  and N6_TPSALDO  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno is null 
         BEGIN 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SN6030 
            SET @iRecno  = @iRecno  + 1 
            begin tran 
            INSERT INTO SN6030 (N6_FILIAL , N6_CONTA , N6_CCUSTO , N6_SUBCTA , N6_DATA , N6_TIPO , N6_TAXA , N6_VALOR1 , 
                   N6_VALOR2 , N6_VALOR3 , N6_VALOR4 , N6_VALOR5 , R_E_C_N_O_ , N6_TPBEM , N6_TPSALDO ) 
            VALUES (@cFilial_SN6 , @cConta , @IN_CUSTO , @IN_SUBCTA , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , @nValXX2 , 
                   @nValXX3 , @nValXX4 , @nValXX5 , @iRecno , @IN_TPBEM , @IN_TPSALDO );
            commit tran 
         END 
         ELSE 
         BEGIN 
            SELECT @nValXX1  = N6_VALOR1 , @nValXX2  = N6_VALOR2 , @nValXX3  = N6_VALOR3 , @nValXX4  = N6_VALOR4 , @nValXX5  = N6_VALOR5 
              
              FROM SN6030 
              WHERE R_E_C_N_O_  = @iRecno 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
            END 
            begin tran 
            UPDATE SN6030 
              WITH (ROWLOCK) 
               SET N6_TAXA  = @nTaxa , N6_VALOR1  = @nValXX1 , N6_VALOR2  = @nValXX2 , N6_VALOR3  = @nValXX3 , N6_VALOR4  = @nValXX4 
              , N6_VALOR5  = @nValXX5 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @cTabela  = 'SN6' 
         EXEC ATFGRSLD_02 @cTipo , @cSinal , @cTabela , @iRecno 
         SELECT @nValXX1  = N6_VALOR1 , @nValXX2  = N6_VALOR2 , @nValXX3  = N6_VALOR3 , @nValXX4  = N6_VALOR4 , @nValXX5  = N6_VALOR5 
           , @iRecno  = R_E_C_N_O_ 
           FROM SN6030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
           
         BEGIN 
            begin tran 
            DELETE FROM SN6030  WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
      IF @IN_LCLVL  = '1'  and @IN_CLVL  <> ' ' 
      BEGIN 
         SET @nValXX1  = 0 
         SET @nValXX2  = 0 
         SET @nValXX3  = 0 
         SET @nValXX4  = 0 
         SET @nValXX5  = 0 
         SET @iRecno  = null 
         SET @cAux  = 'SNA' 
         EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SNA output 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SNA030 
           WHERE NA_FILIAL  = @cFilial_SNA  and NA_CONTA  = @cConta  and NA_CCUSTO  = @IN_CUSTO  and NA_SUBCTA  = @IN_SUBCTA 
            and NA_CLVL  = @IN_CLVL  and NA_DATA  = @IN_DATA  and NA_TIPO  = @IN_TIPO  and NA_TPBEM  = @IN_TPBEM  and NA_TPSALDO  = @IN_TPSALDO 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno is null 
         BEGIN 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = ROUND ( @nValor1  *  (-   1 ) , @IN_CASA1 )
               SET @nValXX2  = ROUND ( @nValor2  *  (-   1 ) , @IN_CASA2 )
               SET @nValXX3  = ROUND ( @nValor3  *  (-   1 ) , @IN_CASA3 )
               SET @nValXX4  = ROUND ( @nValor4  *  (-   1 ) , @IN_CASA4 )
               SET @nValXX5  = ROUND ( @nValor5  *  (-   1 ) , @IN_CASA5 )
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SNA030 
            SET @iRecno  = @iRecno  + 1 
            begin tran 
            INSERT INTO SNA030 (NA_FILIAL , NA_CONTA , NA_CCUSTO , NA_SUBCTA , NA_CLVL , NA_DATA , NA_TIPO , NA_TAXA , NA_VALOR1 , 
                   NA_VALOR2 , NA_VALOR3 , NA_VALOR4 , NA_VALOR5 , R_E_C_N_O_ , NA_TPBEM , NA_TPSALDO ) 
            VALUES (@cFilial_SNA , @cConta , @IN_CUSTO , @IN_SUBCTA , @IN_CLVL , @IN_DATA , @IN_TIPO , @nTaxa , @nValXX1 , 
                   @nValXX2 , @nValXX3 , @nValXX4 , @nValXX5 , @iRecno , @IN_TPBEM , @IN_TPSALDO );
            commit tran 
         END 
         ELSE 
         BEGIN 
            SELECT @nValXX1  = NA_VALOR1 , @nValXX2  = NA_VALOR2 , @nValXX3  = NA_VALOR3 , @nValXX4  = NA_VALOR4 , @nValXX5  = NA_VALOR5 
              
              FROM SNA030 
              WHERE R_E_C_N_O_  = @iRecno 
            IF @cSinal  = '+' 
            BEGIN 
               SET @nValXX1  = @nValXX1  + ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  + ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  + ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  + ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  + ROUND ( @nValor5 , @IN_CASA5 )
            END 
            ELSE 
            BEGIN 
               SET @nValXX1  = @nValXX1  - ROUND ( @nValor1 , @IN_CASA1 )
               SET @nValXX2  = @nValXX2  - ROUND ( @nValor2 , @IN_CASA2 )
               SET @nValXX3  = @nValXX3  - ROUND ( @nValor3 , @IN_CASA3 )
               SET @nValXX4  = @nValXX4  - ROUND ( @nValor4 , @IN_CASA4 )
               SET @nValXX5  = @nValXX5  - ROUND ( @nValor5 , @IN_CASA5 )
            END 
            begin tran 
            UPDATE SNA030 
              WITH (ROWLOCK) 
               SET NA_TAXA  = @nTaxa , NA_VALOR1  = @nValXX1 , NA_VALOR2  = @nValXX2 , NA_VALOR3  = @nValXX3 , NA_VALOR4  = @nValXX4 
              , NA_VALOR5  = @nValXX5 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @cTabela  = 'SNA' 
         EXEC ATFGRSLD_02 @cTipo , @cSinal , @cTabela , @iRecno 
         SELECT @nValXX1  = NA_VALOR1 , @nValXX2  = NA_VALOR2 , @nValXX3  = NA_VALOR3 , @nValXX4  = NA_VALOR4 , @nValXX5  = NA_VALOR5 
           , @iRecno  = R_E_C_N_O_ 
           FROM SNA030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF  (@nValXX1  = 0 )  and  (@nValXX2  = 0 )  and  (@nValXX3  = 0 )  and  (@nValXX4  = 0 )  and  (@nValXX5  = 0 ) 
           
         BEGIN 
            begin tran 
            DELETE FROM SNA030  WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[ATF006_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF006_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF006_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF006_11_01]
(
    @IN_TXDEP1 Float , 
    @IN_TXDEP2 Float , 
    @IN_TXDEP3 Float , 
    @IN_TXDEP4 Float , 
    @IN_TXDEP5 Float , 
    @IN_LMESCHEIO Char( 01 ) , 
    @IN_NRODIAS Integer , 
    @IN_ULTDIA Integer , 
    @IN_RECNO Integer , 
    @IN_ATFMDMX Char( 02 ) , 
    @IN_IPC Integer , 
    @IN_CODIND Char( 08 ) , 
    @OUT_DEP1 Float  output , 
    @OUT_DEP2 Float  output , 
    @OUT_DEP3 Float  output , 
    @OUT_DEP4 Float  output , 
    @OUT_DEP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nDiferenca Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_AMPLIA1 Float
DECLARE @nN3_AMPLIA2 Float
DECLARE @nN3_AMPLIA3 Float
DECLARE @nN3_AMPLIA4 Float
DECLARE @nN3_AMPLIA5 Float
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VRDACM2 Float
DECLARE @nN3_VRDACM3 Float
DECLARE @nN3_VRDACM4 Float
DECLARE @nN3_VRDACM5 Float
DECLARE @nN3_VRCACM1 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @nN3_VMXDEPR Float
DECLARE @nN3_VLSALV1 Float
DECLARE @nSalvAux Float
DECLARE @nVmxDepr Float
DECLARE @nPercent Float
DECLARE @cN3_TPDEPR Char( 1)
DECLARE @cFNI_TIPO Char( 01 )
DECLARE @cFilial_FNI Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_AUX Char( 2)
BEGIN
   SET @nValDepr1  = 0 
   SET @nValDepr2  = 0 
   SET @nValDepr3  = 0 
   SET @nValDepr4  = 0 
   SET @nValDepr5  = 0 
   SET @nSalvAux  = 0 
   SET @nVmxDepr  = 0 
   SET @nTxDep1  = @IN_TXDEP1 
   SET @nTxDep2  = @IN_TXDEP2 
   SET @nTxDep3  = @IN_TXDEP3 
   SET @nTxDep4  = @IN_TXDEP4 
   SET @nTxDep5  = @IN_TXDEP5 
   SET @nN3_VMXDEPR  = 0 
   SET @nN3_VLSALV1  = 0 
   SELECT @nN3_VORIG1  = N3_VORIG1 , @nN3_VORIG2  = N3_VORIG2 , @nN3_VORIG3  = N3_VORIG3 , @nN3_VORIG4  = N3_VORIG4 , @nN3_VORIG5  = N3_VORIG5 
     , @nN3_AMPLIA1  = N3_AMPLIA1 , @nN3_AMPLIA2  = N3_AMPLIA2 , @nN3_AMPLIA3  = N3_AMPLIA3 , @nN3_AMPLIA4  = N3_AMPLIA4 
     , @nN3_AMPLIA5  = N3_AMPLIA5 , @nN3_VRDACM1  = N3_VRDACM1 , @nN3_VRDACM2  = N3_VRDACM2 , @nN3_VRDACM3  = N3_VRDACM3 
     , @nN3_VRDACM4  = N3_VRDACM4 , @nN3_VRDACM5  = N3_VRDACM5 , @nN3_VRCACM1  = N3_VRCACM1 , @nN3_VRCDA1  = N3_VRCDA1 , 
          @cN3_TPDEPR  = N3_TPDEPR , @nN3_VMXDEPR  = N3_VMXDEPR , @nN3_VLSALV1  = N3_VLSALV1 
     FROM SN3010 
     WHERE R_E_C_N_O_  = @IN_RECNO 
   IF @cN3_TPDEPR  = '6' 
   BEGIN 
      IF @nTxDep1  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
         BEGIN 
            SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  * @nTxDep1 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
              )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
         END 
      END 
      IF @nTxDep2  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
         BEGIN 
            SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
         BEGIN 
            SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
         BEGIN 
            SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
         BEGIN 
            SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
         END 
      END 
   END 
   IF @cN3_TPDEPR  = '7' 
   BEGIN 
      IF @IN_ATFMDMX  = '01' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG1  + @nN3_AMPLIA1 ) 
      END 
      IF @IN_ATFMDMX  = '02' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG2  + @nN3_AMPLIA2 ) 
      END 
      IF @IN_ATFMDMX  = '03' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG3  + @nN3_AMPLIA3 ) 
      END 
      IF @IN_ATFMDMX  = '04' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG4  + @nN3_AMPLIA4 ) 
      END 
      IF @IN_ATFMDMX  = '05' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG5  + @nN3_AMPLIA5 ) 
      END 
      IF @nTxDep1  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '01' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG1  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr1  =  (@nVmxDepr  * @nTxDep1 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nVmxDepr )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
            END 
         END 
      END 
      IF @nTxDep2  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '02' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG2  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM2 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr2  =  (@nVmxDepr  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nVmxDepr )  -  (@nN3_VRDACM2 ) 
            END 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '03' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG3  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM3 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr3  =  (@nVmxDepr  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nVmxDepr )  -  (@nN3_VRDACM3 ) 
            END 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '04' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG4  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM4 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr4  =  ( (@nVmxDepr )  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nVmxDepr )  -  (@nN3_VRDACM4 ) 
            END 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '05' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG5  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM5 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr5  =  ( (@nVmxDepr )  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nVmxDepr )  -  (@nN3_VRDACM5 ) 
            END 
         END 
      END 
   END 
   IF @cN3_TPDEPR  = '2' 
   BEGIN 
      IF @nTxDep1  != 0 
      BEGIN 
         IF @nN3_VLSALV1  <  (ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) - ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 )) 
           
         BEGIN 
            SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1  - ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ))  * @nTxDep1 
              ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
              ))  - @nN3_VLSALV1 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 )  - @nN3_VLSALV1 
                 
            END 
         END 
      END 
      SET @nPercent  = @nN3_VLSALV1  / @nN3_VORIG1  + @nN3_AMPLIA1 
      IF @nTxDep2  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG2  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) - ABS ( @nN3_VRDACM2 )) 
         BEGIN 
            SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2  - ABS ( @nN3_VRDACM2 ))  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 )  - @nSalvAux 
            END 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG3  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) - ABS ( @nN3_VRDACM3 )) 
         BEGIN 
            SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3  - ABS ( @nN3_VRDACM3 ))  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 )  - @nSalvAux 
            END 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG4  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) - ABS ( @nN3_VRDACM4 )) 
         BEGIN 
            SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4  - ABS ( @nN3_VRDACM4 ))  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 )  - @nSalvAux 
            END 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG5  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) - ABS ( @nN3_VRDACM5 )) 
         BEGIN 
            SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5  - ABS ( @nN3_VRDACM5 ))  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 )  - @nSalvAux 
            END 
         END 
      END 
   END 
   IF @cN3_TPDEPR  = 'A' 
   BEGIN 
      EXEC ATF015_11_01 @nTxDep1 , @nTxDep2 , @nTxDep3 , @nTxDep4 , @nTxDep5 , @IN_RECNO , @IN_CODIND , @nValDepr1 output , 
             @nValDepr2 output , @nValDepr3 output , @nValDepr4 output , @nValDepr5 output 
   END 
   IF @cN3_TPDEPR  != '2'  and @cN3_TPDEPR  != '6'  and @cN3_TPDEPR  != '7'  and @cN3_TPDEPR  != 'A' 
   BEGIN 
      IF @nTxDep1  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
         BEGIN 
            SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  * @nTxDep1 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
              )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
            END 
         END 
      END 
      IF @nTxDep2  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
         BEGIN 
            SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
            END 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
         BEGIN 
            SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
            END 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
         BEGIN 
            SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
            END 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
         BEGIN 
            SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
            END 
         END 
      END 
   END 
   IF @IN_LMESCHEIO  = '0'  and  (@IN_ULTDIA  != @IN_NRODIAS ) 
   BEGIN 
      SET @nValDepr1  =  (@nValDepr1  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr2  =  (@nValDepr2  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr3  =  (@nValDepr3  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr4  =  (@nValDepr4  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr5  =  (@nValDepr5  / @IN_ULTDIA )  * @IN_NRODIAS 
   END 
   SET @OUT_DEP1  = @nValDepr1 
   SET @OUT_DEP2  = @nValDepr2 
   SET @OUT_DEP3  = @nValDepr3 
   SET @OUT_DEP4  = @nValDepr4 
   SET @OUT_DEP5  = @nValDepr5 
END
GO

GO
--SqlScripter----[dbo].[ATF006_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF006_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF006_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF006_11_02]
(
    @IN_TXDEP1 Float , 
    @IN_TXDEP2 Float , 
    @IN_TXDEP3 Float , 
    @IN_TXDEP4 Float , 
    @IN_TXDEP5 Float , 
    @IN_LMESCHEIO Char( 01 ) , 
    @IN_NRODIAS Integer , 
    @IN_ULTDIA Integer , 
    @IN_RECNO Integer , 
    @IN_ATFMDMX Char( 02 ) , 
    @IN_IPC Integer , 
    @IN_CODIND Char( 08 ) , 
    @OUT_DEP1 Float  output , 
    @OUT_DEP2 Float  output , 
    @OUT_DEP3 Float  output , 
    @OUT_DEP4 Float  output , 
    @OUT_DEP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nDiferenca Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_AMPLIA1 Float
DECLARE @nN3_AMPLIA2 Float
DECLARE @nN3_AMPLIA3 Float
DECLARE @nN3_AMPLIA4 Float
DECLARE @nN3_AMPLIA5 Float
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VRDACM2 Float
DECLARE @nN3_VRDACM3 Float
DECLARE @nN3_VRDACM4 Float
DECLARE @nN3_VRDACM5 Float
DECLARE @nN3_VRCACM1 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @nN3_VMXDEPR Float
DECLARE @nN3_VLSALV1 Float
DECLARE @nSalvAux Float
DECLARE @nVmxDepr Float
DECLARE @nPercent Float
DECLARE @cN3_TPDEPR Char( 1)
DECLARE @cFNI_TIPO Char( 01 )
DECLARE @cFilial_FNI Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_AUX Char( 2)
BEGIN
   SET @nValDepr1  = 0 
   SET @nValDepr2  = 0 
   SET @nValDepr3  = 0 
   SET @nValDepr4  = 0 
   SET @nValDepr5  = 0 
   SET @nSalvAux  = 0 
   SET @nVmxDepr  = 0 
   SET @nTxDep1  = @IN_TXDEP1 
   SET @nTxDep2  = @IN_TXDEP2 
   SET @nTxDep3  = @IN_TXDEP3 
   SET @nTxDep4  = @IN_TXDEP4 
   SET @nTxDep5  = @IN_TXDEP5 
   SET @nN3_VMXDEPR  = 0 
   SET @nN3_VLSALV1  = 0 
   SELECT @nN3_VORIG1  = N3_VORIG1 , @nN3_VORIG2  = N3_VORIG2 , @nN3_VORIG3  = N3_VORIG3 , @nN3_VORIG4  = N3_VORIG4 , @nN3_VORIG5  = N3_VORIG5 
     , @nN3_AMPLIA1  = N3_AMPLIA1 , @nN3_AMPLIA2  = N3_AMPLIA2 , @nN3_AMPLIA3  = N3_AMPLIA3 , @nN3_AMPLIA4  = N3_AMPLIA4 
     , @nN3_AMPLIA5  = N3_AMPLIA5 , @nN3_VRDACM1  = N3_VRDACM1 , @nN3_VRDACM2  = N3_VRDACM2 , @nN3_VRDACM3  = N3_VRDACM3 
     , @nN3_VRDACM4  = N3_VRDACM4 , @nN3_VRDACM5  = N3_VRDACM5 , @nN3_VRCACM1  = N3_VRCACM1 , @nN3_VRCDA1  = N3_VRCDA1 , 
          @cN3_TPDEPR  = N3_TPDEPR , @nN3_VMXDEPR  = N3_VMXDEPR , @nN3_VLSALV1  = N3_VLSALV1 
     FROM SN3030 
     WHERE R_E_C_N_O_  = @IN_RECNO 
   IF @cN3_TPDEPR  = '6' 
   BEGIN 
      IF @nTxDep1  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
         BEGIN 
            SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  * @nTxDep1 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
              )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
         END 
      END 
      IF @nTxDep2  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
         BEGIN 
            SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
         BEGIN 
            SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
         BEGIN 
            SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
         BEGIN 
            SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
            END 
         END 
         IF @IN_IPC  = 1 
         BEGIN 
            SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
         END 
      END 
   END 
   IF @cN3_TPDEPR  = '7' 
   BEGIN 
      IF @IN_ATFMDMX  = '01' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG1  + @nN3_AMPLIA1 ) 
      END 
      IF @IN_ATFMDMX  = '02' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG2  + @nN3_AMPLIA2 ) 
      END 
      IF @IN_ATFMDMX  = '03' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG3  + @nN3_AMPLIA3 ) 
      END 
      IF @IN_ATFMDMX  = '04' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG4  + @nN3_AMPLIA4 ) 
      END 
      IF @IN_ATFMDMX  = '05' 
      BEGIN 
         SET @nPercent  = @nN3_VMXDEPR  /  (@nN3_VORIG5  + @nN3_AMPLIA5 ) 
      END 
      IF @nTxDep1  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '01' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG1  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr1  =  (@nVmxDepr  * @nTxDep1 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nVmxDepr )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
            END 
         END 
      END 
      IF @nTxDep2  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '02' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG2  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM2 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr2  =  (@nVmxDepr  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nVmxDepr )  -  (@nN3_VRDACM2 ) 
            END 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '03' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG3  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM3 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr3  =  (@nVmxDepr  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nVmxDepr )  -  (@nN3_VRDACM3 ) 
            END 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '04' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG4  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM4 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr4  =  ( (@nVmxDepr )  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nVmxDepr )  -  (@nN3_VRDACM4 ) 
            END 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         IF @IN_ATFMDMX  = '05' 
         BEGIN 
            SET @nVmxDepr  = @nN3_VMXDEPR 
         END 
         ELSE 
         BEGIN 
            SET @nVmxDepr  = @nN3_VORIG5  * @nPercent 
         END 
         IF ABS ( @nN3_VRDACM5 ) < ABS ( @nVmxDepr )
         BEGIN 
            SET @nValDepr5  =  ( (@nVmxDepr )  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nVmxDepr ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nVmxDepr )  -  (@nN3_VRDACM5 ) 
            END 
         END 
      END 
   END 
   IF @cN3_TPDEPR  = '2' 
   BEGIN 
      IF @nTxDep1  != 0 
      BEGIN 
         IF @nN3_VLSALV1  <  (ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) - ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 )) 
           
         BEGIN 
            SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1  - ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ))  * @nTxDep1 
              ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
              ))  - @nN3_VLSALV1 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 )  - @nN3_VLSALV1 
                 
            END 
         END 
      END 
      SET @nPercent  = @nN3_VLSALV1  / @nN3_VORIG1  + @nN3_AMPLIA1 
      IF @nTxDep2  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG2  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) - ABS ( @nN3_VRDACM2 )) 
         BEGIN 
            SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2  - ABS ( @nN3_VRDACM2 ))  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 )  - @nSalvAux 
            END 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG3  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) - ABS ( @nN3_VRDACM3 )) 
         BEGIN 
            SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3  - ABS ( @nN3_VRDACM3 ))  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 )  - @nSalvAux 
            END 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG4  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) - ABS ( @nN3_VRDACM4 )) 
         BEGIN 
            SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4  - ABS ( @nN3_VRDACM4 ))  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 )  - @nSalvAux 
            END 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         SET @nSalvAux  = 0 
         SET @nSalvAux  = @nN3_VORIG5  * @nPercent 
         IF ABS ( @nSalvAux ) <  (ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) - ABS ( @nN3_VRDACM5 )) 
         BEGIN 
            SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5  - ABS ( @nN3_VRDACM5 ))  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 ))  - @nSalvAux 
              
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 )  - @nSalvAux 
            END 
         END 
      END 
   END 
   IF @cN3_TPDEPR  = 'A' 
   BEGIN 
      EXEC ATF015_11_02 @nTxDep1 , @nTxDep2 , @nTxDep3 , @nTxDep4 , @nTxDep5 , @IN_RECNO , @IN_CODIND , @nValDepr1 output , 
             @nValDepr2 output , @nValDepr3 output , @nValDepr4 output , @nValDepr5 output 
   END 
   IF @cN3_TPDEPR  != '2'  and @cN3_TPDEPR  != '6'  and @cN3_TPDEPR  != '7'  and @cN3_TPDEPR  != 'A' 
   BEGIN 
      IF @nTxDep1  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
         BEGIN 
            SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  * @nTxDep1 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
              )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
            END 
         END 
      END 
      IF @nTxDep2  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
         BEGIN 
            SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  * @nTxDep2 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
            END 
         END 
      END 
      IF @nTxDep3  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
         BEGIN 
            SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  * @nTxDep3 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
            END 
         END 
      END 
      IF @nTxDep4  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
         BEGIN 
            SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  * @nTxDep4 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
            END 
         END 
      END 
      IF @nTxDep5  != 0 
      BEGIN 
         IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
         BEGIN 
            SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  * @nTxDep5 ) 
            SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
            IF  (@nDiferenca )  <= 0 
            BEGIN 
               SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
            END 
         END 
      END 
   END 
   IF @IN_LMESCHEIO  = '0'  and  (@IN_ULTDIA  != @IN_NRODIAS ) 
   BEGIN 
      SET @nValDepr1  =  (@nValDepr1  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr2  =  (@nValDepr2  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr3  =  (@nValDepr3  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr4  =  (@nValDepr4  / @IN_ULTDIA )  * @IN_NRODIAS 
      SET @nValDepr5  =  (@nValDepr5  / @IN_ULTDIA )  * @IN_NRODIAS 
   END 
   SET @OUT_DEP1  = @nValDepr1 
   SET @OUT_DEP2  = @nValDepr2 
   SET @OUT_DEP3  = @nValDepr3 
   SET @OUT_DEP4  = @nValDepr4 
   SET @OUT_DEP5  = @nValDepr5 
END
GO

GO
--SqlScripter----[dbo].[ATF007_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF007_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF007_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF007_11_01]
(
    @IN_CPAISLOC Char( 03 ) , 
    @IN_MOEDAATF Char( 02 ) , 
    @IN_LCORRECAO Char( 01 ) , 
    @IN_VCORRECAO Float , 
    @IN_DATADEP Char( 08 ) , 
    @IN_DATAQUIS Char( 08 ) , 
    @IN_DATAINIDEP Char( 08 ) , 
    @IN_DATAF Char( 08 ) , 
    @IN_LEYDL824 Char( 01 ) , 
    @IN_FILIAL Char( 02 ) , 
    @IN_NRODIAS Integer , 
    @IN_TXDEPOK Float , 
    @IN_RECNO Integer , 
    @OUT_TXMEDIA Float  output , 
    @OUT_CORRECAO Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxCor Float
DECLARE @cDataAux Char( 08 )
DECLARE @nMoeda2 Float
DECLARE @nMoeda3 Float
DECLARE @nMoeda4 Float
DECLARE @nMoeda5 Float
DECLARE @cFilial_SNF Char( 02 )
DECLARE @cAux Char( 03 )
DECLARE @cAnoMes Char( 06 )
DECLARE @cMesCalc Char( 02 )
DECLARE @nNF_PERCIPC Float
DECLARE @iRecnoSNF Integer
DECLARE @iRecnoSM2 Integer
DECLARE @nTxMedia Float
DECLARE @nTxMedia2 Float
DECLARE @nTxMedia3 Float
DECLARE @nTxMedia4 Float
DECLARE @nTxMedia5 Float
DECLARE @lCalcCor Char( 01 )
BEGIN
   SET @nTaxCor  = 0 
   SET @nTxMedia  = 0 
   SET @nTxMedia2  = 0 
   SET @nTxMedia3  = 0 
   SET @nTxMedia4  = 0 
   SET @nTxMedia5  = 0 
   SET @iRecnoSM2  = 0 
   IF  (@IN_LCORRECAO  = '1'  and @IN_VCORRECAO  > 0 ) 
   BEGIN 
      SET @lCalcCor  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @lCalcCor  = '0' 
   END 
   IF @lCalcCor  = '1'  or @IN_DATADEP  <= '19951231' 
   BEGIN 
      SELECT @nTxMedia2  = COALESCE ( SUM(M2_MOEDA2 ), 0 ), @nTxMedia3  = COALESCE ( SUM(M2_MOEDA3 ), 0 ), @nTxMedia4  = COALESCE ( SUM(M2_MOEDA4 ), 
             0 ), @nTxMedia5  = COALESCE ( SUM(M2_MOEDA5 ), 0 )
        FROM SM2010 
        WHERE M2_DATA  between @IN_DATAINIDEP and @IN_DATAF  and D_E_L_E_T_  = ' ' 
      SET @nTxMedia2  = @nTxMedia2  / @IN_NRODIAS 
      SET @nTxMedia3  = @nTxMedia3  / @IN_NRODIAS 
      SET @nTxMedia4  = @nTxMedia4  / @IN_NRODIAS 
      SET @nTxMedia5  = @nTxMedia5  / @IN_NRODIAS 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia2 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia3 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia4 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia5 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nTxMedia  = @IN_TXDEPOK 
      IF @IN_DATADEP  >= '19960101'  and @IN_DATADEP  <= '19960630' 
      BEGIN 
         SET @nTxMedia  = @IN_TXDEPOK 
      END 
      IF @IN_DATADEP  >= '19960701' 
      BEGIN 
         SELECT @cDataAux  = N3_AQUISIC 
           FROM SN3010 
           WHERE R_E_C_N_O_  = @IN_RECNO 
         IF @cDataAux  > '19970701' 
         BEGIN 
            SELECT @iRecnoSM2  = COALESCE ( R_E_C_N_O_ , 0 )
              FROM SM2010 
              WHERE M2_DATA  = @cDataAux  and D_E_L_E_T_  = ' ' 
            IF @iRecnoSM2  > 0 
            BEGIN 
               SELECT @nTxMedia2  = COALESCE ( SUM(M2_MOEDA2 ), 0 ), @nTxMedia3  = COALESCE ( SUM(M2_MOEDA3 ), 0 ), @nTxMedia4  = COALESCE ( SUM(M2_MOEDA4 ), 
                      0 ), @nTxMedia5  = COALESCE ( SUM(M2_MOEDA5 ), 0 )
                 FROM SM2010 
                 WHERE R_E_C_N_O_  = @iRecnoSM2 
               IF @IN_MOEDAATF  = '02' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia2 
               END 
               IF @IN_MOEDAATF  = '03' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia3 
               END 
               IF @IN_MOEDAATF  = '04' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia4 
               END 
               IF @IN_MOEDAATF  = '05' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia5 
               END 
            END 
         END 
      END 
   END 
   IF @lCalcCor  = '1' 
   BEGIN 
      SET @nTaxCor  = @IN_VCORRECAO 
   END 
   ELSE 
   BEGIN 
      IF @IN_DATADEP  <= '19931231'  or  (@IN_DATADEP  >= '19940101'  and @IN_DATADEP  >= '19940731' ) 
      BEGIN 
         SELECT @nMoeda2  = COALESCE ( M2_MOEDA2 , 0 ), @nMoeda3  = COALESCE ( M2_MOEDA3 , 0 ), @nMoeda4  = COALESCE ( M2_MOEDA4 , 
                0 ), @nMoeda5  = COALESCE ( M2_MOEDA5 , 0 )
           FROM SM2010 
           WHERE M2_DATA  = @IN_DATADEP  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_DATADEP  >= '19940801'  and @IN_DATADEP  >= '19941231' )  or @IN_DATADEP  = '19950331'  or @IN_DATADEP  = '19950630' 
         or @IN_DATADEP  = '19950930'  or @IN_DATADEP  = '19951231' 
      BEGIN 
         SET @cDataAux  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATADEP ),112 )
         SELECT @nMoeda2  = COALESCE ( M2_MOEDA2 , 0 ), @nMoeda3  = COALESCE ( M2_MOEDA3 , 0 ), @nMoeda4  = COALESCE ( M2_MOEDA4 , 
                0 ), @nMoeda5  = COALESCE ( M2_MOEDA5 , 0 )
           FROM SM2010 
           WHERE M2_DATA  = @cDataAux  and D_E_L_E_T_  = ' ' 
      END 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nTaxCor  = @nMoeda2 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nTaxCor  = @nMoeda3 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nTaxCor  = @nMoeda4 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nTaxCor  = @nMoeda5 
      END 
   END 
   IF @IN_LEYDL824  = '1' 
   BEGIN 
      SET @iRecnoSNF  = 0 
      SET @nTaxCor  = 0 
      IF SUBSTRING ( @IN_DATADEP , 1 , 6 ) >= SUBSTRING ( @IN_DATAQUIS , 1 , 6 )
      BEGIN 
         SET @cAux  = 'SNF' 
         EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SNF output 
         SET @cMesCalc  = SUBSTRING ( @IN_DATADEP , 7 , 2 )
         IF SUBSTRING ( @IN_DATAQUIS , 1 , 4 ) < SUBSTRING ( @IN_DATADEP , 1 , 4 )
         BEGIN 
            SET @cAnoMes  = SUBSTRING ( @IN_DATADEP , 1 , 4 ) + '00' 
            SELECT @nNF_PERCIPC  = NF_PERCIPC , @iRecnoSNF  = COALESCE ( R_E_C_N_O_ , 0 )
              FROM SNF010 
              WHERE NF_FILIAL  = @cFilial_SNF  and NF_AMAQUIS  = @cAnoMes  and NF_MCALC  = @cMesCalc  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            SET @cAnoMes  = SUBSTRING ( @IN_DATAQUIS , 1 , 6 )
            SELECT @nNF_PERCIPC  = NF_PERCIPC , @iRecnoSNF  = COALESCE ( R_E_C_N_O_ , 0 )
              FROM SNF010 
              WHERE NF_FILIAL  = @cFilial_SNF  and NF_AMAQUIS  = @cAnoMes  and NF_MCALC  = @cMesCalc  and D_E_L_E_T_  = ' ' 
              
         END 
         IF  ( (SUBSTRING ( @IN_DATADEP , 1 , 6 ) > SUBSTRING ( @IN_DATAQUIS , 1 , 6 ))  and  (@iRecnoSNF  > 0 ) ) 
         BEGIN 
            SET @nTaxCor  = @nNF_PERCIPC  / 100 
         END 
      END 
   END 
   SET @OUT_TXMEDIA  = @nTxMedia 
   SET @OUT_CORRECAO  = @nTaxCor 
END
GO

GO
--SqlScripter----[dbo].[ATF007_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF007_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF007_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF007_11_02]
(
    @IN_CPAISLOC Char( 03 ) , 
    @IN_MOEDAATF Char( 02 ) , 
    @IN_LCORRECAO Char( 01 ) , 
    @IN_VCORRECAO Float , 
    @IN_DATADEP Char( 08 ) , 
    @IN_DATAQUIS Char( 08 ) , 
    @IN_DATAINIDEP Char( 08 ) , 
    @IN_DATAF Char( 08 ) , 
    @IN_LEYDL824 Char( 01 ) , 
    @IN_FILIAL Char( 02 ) , 
    @IN_NRODIAS Integer , 
    @IN_TXDEPOK Float , 
    @IN_RECNO Integer , 
    @OUT_TXMEDIA Float  output , 
    @OUT_CORRECAO Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxCor Float
DECLARE @cDataAux Char( 08 )
DECLARE @nMoeda2 Float
DECLARE @nMoeda3 Float
DECLARE @nMoeda4 Float
DECLARE @nMoeda5 Float
DECLARE @cFilial_SNF Char( 02 )
DECLARE @cAux Char( 03 )
DECLARE @cAnoMes Char( 06 )
DECLARE @cMesCalc Char( 02 )
DECLARE @nNF_PERCIPC Float
DECLARE @iRecnoSNF Integer
DECLARE @iRecnoSM2 Integer
DECLARE @nTxMedia Float
DECLARE @nTxMedia2 Float
DECLARE @nTxMedia3 Float
DECLARE @nTxMedia4 Float
DECLARE @nTxMedia5 Float
DECLARE @lCalcCor Char( 01 )
BEGIN
   SET @nTaxCor  = 0 
   SET @nTxMedia  = 0 
   SET @nTxMedia2  = 0 
   SET @nTxMedia3  = 0 
   SET @nTxMedia4  = 0 
   SET @nTxMedia5  = 0 
   SET @iRecnoSM2  = 0 
   IF  (@IN_LCORRECAO  = '1'  and @IN_VCORRECAO  > 0 ) 
   BEGIN 
      SET @lCalcCor  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @lCalcCor  = '0' 
   END 
   IF @lCalcCor  = '1'  or @IN_DATADEP  <= '19951231' 
   BEGIN 
      SELECT @nTxMedia2  = COALESCE ( SUM(M2_MOEDA2 ), 0 ), @nTxMedia3  = COALESCE ( SUM(M2_MOEDA3 ), 0 ), @nTxMedia4  = COALESCE ( SUM(M2_MOEDA4 ), 
             0 ), @nTxMedia5  = COALESCE ( SUM(M2_MOEDA5 ), 0 )
        FROM SM2030 
        WHERE M2_DATA  between @IN_DATAINIDEP and @IN_DATAF  and D_E_L_E_T_  = ' ' 
      SET @nTxMedia2  = @nTxMedia2  / @IN_NRODIAS 
      SET @nTxMedia3  = @nTxMedia3  / @IN_NRODIAS 
      SET @nTxMedia4  = @nTxMedia4  / @IN_NRODIAS 
      SET @nTxMedia5  = @nTxMedia5  / @IN_NRODIAS 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia2 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia3 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia4 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nTxMedia  = @nTxMedia5 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nTxMedia  = @IN_TXDEPOK 
      IF @IN_DATADEP  >= '19960101'  and @IN_DATADEP  <= '19960630' 
      BEGIN 
         SET @nTxMedia  = @IN_TXDEPOK 
      END 
      IF @IN_DATADEP  >= '19960701' 
      BEGIN 
         SELECT @cDataAux  = N3_AQUISIC 
           FROM SN3030 
           WHERE R_E_C_N_O_  = @IN_RECNO 
         IF @cDataAux  > '19970701' 
         BEGIN 
            SELECT @iRecnoSM2  = COALESCE ( R_E_C_N_O_ , 0 )
              FROM SM2030 
              WHERE M2_DATA  = @cDataAux  and D_E_L_E_T_  = ' ' 
            IF @iRecnoSM2  > 0 
            BEGIN 
               SELECT @nTxMedia2  = COALESCE ( SUM(M2_MOEDA2 ), 0 ), @nTxMedia3  = COALESCE ( SUM(M2_MOEDA3 ), 0 ), @nTxMedia4  = COALESCE ( SUM(M2_MOEDA4 ), 
                      0 ), @nTxMedia5  = COALESCE ( SUM(M2_MOEDA5 ), 0 )
                 FROM SM2030 
                 WHERE R_E_C_N_O_  = @iRecnoSM2 
               IF @IN_MOEDAATF  = '02' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia2 
               END 
               IF @IN_MOEDAATF  = '03' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia3 
               END 
               IF @IN_MOEDAATF  = '04' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia4 
               END 
               IF @IN_MOEDAATF  = '05' 
               BEGIN 
                  SET @nTxMedia  = @nTxMedia5 
               END 
            END 
         END 
      END 
   END 
   IF @lCalcCor  = '1' 
   BEGIN 
      SET @nTaxCor  = @IN_VCORRECAO 
   END 
   ELSE 
   BEGIN 
      IF @IN_DATADEP  <= '19931231'  or  (@IN_DATADEP  >= '19940101'  and @IN_DATADEP  >= '19940731' ) 
      BEGIN 
         SELECT @nMoeda2  = COALESCE ( M2_MOEDA2 , 0 ), @nMoeda3  = COALESCE ( M2_MOEDA3 , 0 ), @nMoeda4  = COALESCE ( M2_MOEDA4 , 
                0 ), @nMoeda5  = COALESCE ( M2_MOEDA5 , 0 )
           FROM SM2030 
           WHERE M2_DATA  = @IN_DATADEP  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_DATADEP  >= '19940801'  and @IN_DATADEP  >= '19941231' )  or @IN_DATADEP  = '19950331'  or @IN_DATADEP  = '19950630' 
         or @IN_DATADEP  = '19950930'  or @IN_DATADEP  = '19951231' 
      BEGIN 
         SET @cDataAux  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATADEP ),112 )
         SELECT @nMoeda2  = COALESCE ( M2_MOEDA2 , 0 ), @nMoeda3  = COALESCE ( M2_MOEDA3 , 0 ), @nMoeda4  = COALESCE ( M2_MOEDA4 , 
                0 ), @nMoeda5  = COALESCE ( M2_MOEDA5 , 0 )
           FROM SM2030 
           WHERE M2_DATA  = @cDataAux  and D_E_L_E_T_  = ' ' 
      END 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nTaxCor  = @nMoeda2 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nTaxCor  = @nMoeda3 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nTaxCor  = @nMoeda4 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nTaxCor  = @nMoeda5 
      END 
   END 
   IF @IN_LEYDL824  = '1' 
   BEGIN 
      SET @iRecnoSNF  = 0 
      SET @nTaxCor  = 0 
      IF SUBSTRING ( @IN_DATADEP , 1 , 6 ) >= SUBSTRING ( @IN_DATAQUIS , 1 , 6 )
      BEGIN 
         SET @cAux  = 'SNF' 
         EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SNF output 
         SET @cMesCalc  = SUBSTRING ( @IN_DATADEP , 7 , 2 )
         IF SUBSTRING ( @IN_DATAQUIS , 1 , 4 ) < SUBSTRING ( @IN_DATADEP , 1 , 4 )
         BEGIN 
            SET @cAnoMes  = SUBSTRING ( @IN_DATADEP , 1 , 4 ) + '00' 
            SELECT @nNF_PERCIPC  = NF_PERCIPC , @iRecnoSNF  = COALESCE ( R_E_C_N_O_ , 0 )
              FROM SNF030 
              WHERE NF_FILIAL  = @cFilial_SNF  and NF_AMAQUIS  = @cAnoMes  and NF_MCALC  = @cMesCalc  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            SET @cAnoMes  = SUBSTRING ( @IN_DATAQUIS , 1 , 6 )
            SELECT @nNF_PERCIPC  = NF_PERCIPC , @iRecnoSNF  = COALESCE ( R_E_C_N_O_ , 0 )
              FROM SNF030 
              WHERE NF_FILIAL  = @cFilial_SNF  and NF_AMAQUIS  = @cAnoMes  and NF_MCALC  = @cMesCalc  and D_E_L_E_T_  = ' ' 
              
         END 
         IF  ( (SUBSTRING ( @IN_DATADEP , 1 , 6 ) > SUBSTRING ( @IN_DATAQUIS , 1 , 6 ))  and  (@iRecnoSNF  > 0 ) ) 
         BEGIN 
            SET @nTaxCor  = @nNF_PERCIPC  / 100 
         END 
      END 
   END 
   SET @OUT_TXMEDIA  = @nTxMedia 
   SET @OUT_CORRECAO  = @nTaxCor 
END
GO

GO
--SqlScripter----[dbo].[ATF008_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF008_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF008_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF008_11_01]
(
    @IN_MOEDAATF Char( 02 ) , 
    @IN_TAXACOR Float , 
    @IN_RECNO Integer , 
    @IN_DEP1 Float , 
    @IN_DEP2 Float , 
    @IN_DEP3 Float , 
    @IN_DEP4 Float , 
    @IN_DEP5 Float , 
    @IN_DATADEP Char( 08 ) , 
    @OUT_CORRECAO Float  output , 
    @OUT_CORDEP Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxCor Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_AMPLIA1 Float
DECLARE @nN3_AMPLIA2 Float
DECLARE @nN3_AMPLIA3 Float
DECLARE @nN3_AMPLIA4 Float
DECLARE @nN3_AMPLIA5 Float
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VRDACM2 Float
DECLARE @nN3_VRDACM3 Float
DECLARE @nN3_VRDACM4 Float
DECLARE @nN3_VRDACM5 Float
DECLARE @nN3_VRCACM1 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @cN3_CCORREC Char( 20)
DECLARE @cN3_CDESP Char( 20)
BEGIN
   SET @nTaxCor  = @IN_TAXACOR 
   SET @nValCor  = 0 
   SET @nValCorDep  = 0 
   SET @nValDepr1  = @IN_DEP1 
   SET @nValDepr2  = @IN_DEP2 
   SET @nValDepr3  = @IN_DEP3 
   SET @nValDepr4  = @IN_DEP4 
   SET @nValDepr5  = @IN_DEP5 
   IF @nTaxCor  != 0 
   BEGIN 
      SELECT @nN3_VORIG1  = N3_VORIG1 , @nN3_VORIG2  = N3_VORIG2 , @nN3_VORIG3  = N3_VORIG3 , @nN3_VORIG4  = N3_VORIG4 , 
             @nN3_VORIG5  = N3_VORIG5 , @nN3_AMPLIA1  = N3_AMPLIA1 , @nN3_AMPLIA2  = N3_AMPLIA2 , @nN3_AMPLIA3  = N3_AMPLIA3 
        , @nN3_AMPLIA4  = N3_AMPLIA4 , @nN3_AMPLIA5  = N3_AMPLIA5 , @nN3_VRDACM1  = N3_VRDACM1 , @nN3_VRDACM2  = N3_VRDACM2 
        , @nN3_VRDACM3  = N3_VRDACM3 , @nN3_VRDACM4  = N3_VRDACM4 , @nN3_VRDACM5  = N3_VRDACM5 , @nN3_VRCACM1  = N3_VRCACM1 
        , @nN3_VRCDA1  = N3_VRCDA1 , @cN3_CCORREC  = N3_CCORREC , @cN3_CDESP  = N3_CDESP 
        FROM SN3010 
        WHERE R_E_C_N_O_  = @IN_RECNO 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM2  + @nValDepr2 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM3  + @nValDepr3 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM4  + @nValDepr4 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM5  + @nValDepr5 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @cN3_CCORREC  = ' ' 
      BEGIN 
         SET @nValCor  = 0 
      END 
      IF @cN3_CDESP  = ' ' 
      BEGIN 
         SET @nValCorDep  = 0 
      END 
   END 
   SET @OUT_CORRECAO  = @nValCor 
   SET @OUT_CORDEP  = @nValCorDep 
END
GO

GO
--SqlScripter----[dbo].[ATF008_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF008_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF008_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF008_11_02]
(
    @IN_MOEDAATF Char( 02 ) , 
    @IN_TAXACOR Float , 
    @IN_RECNO Integer , 
    @IN_DEP1 Float , 
    @IN_DEP2 Float , 
    @IN_DEP3 Float , 
    @IN_DEP4 Float , 
    @IN_DEP5 Float , 
    @IN_DATADEP Char( 08 ) , 
    @OUT_CORRECAO Float  output , 
    @OUT_CORDEP Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxCor Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_AMPLIA1 Float
DECLARE @nN3_AMPLIA2 Float
DECLARE @nN3_AMPLIA3 Float
DECLARE @nN3_AMPLIA4 Float
DECLARE @nN3_AMPLIA5 Float
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VRDACM2 Float
DECLARE @nN3_VRDACM3 Float
DECLARE @nN3_VRDACM4 Float
DECLARE @nN3_VRDACM5 Float
DECLARE @nN3_VRCACM1 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @cN3_CCORREC Char( 20)
DECLARE @cN3_CDESP Char( 20)
BEGIN
   SET @nTaxCor  = @IN_TAXACOR 
   SET @nValCor  = 0 
   SET @nValCorDep  = 0 
   SET @nValDepr1  = @IN_DEP1 
   SET @nValDepr2  = @IN_DEP2 
   SET @nValDepr3  = @IN_DEP3 
   SET @nValDepr4  = @IN_DEP4 
   SET @nValDepr5  = @IN_DEP5 
   IF @nTaxCor  != 0 
   BEGIN 
      SELECT @nN3_VORIG1  = N3_VORIG1 , @nN3_VORIG2  = N3_VORIG2 , @nN3_VORIG3  = N3_VORIG3 , @nN3_VORIG4  = N3_VORIG4 , 
             @nN3_VORIG5  = N3_VORIG5 , @nN3_AMPLIA1  = N3_AMPLIA1 , @nN3_AMPLIA2  = N3_AMPLIA2 , @nN3_AMPLIA3  = N3_AMPLIA3 
        , @nN3_AMPLIA4  = N3_AMPLIA4 , @nN3_AMPLIA5  = N3_AMPLIA5 , @nN3_VRDACM1  = N3_VRDACM1 , @nN3_VRDACM2  = N3_VRDACM2 
        , @nN3_VRDACM3  = N3_VRDACM3 , @nN3_VRDACM4  = N3_VRDACM4 , @nN3_VRDACM5  = N3_VRDACM5 , @nN3_VRCACM1  = N3_VRCACM1 
        , @nN3_VRCDA1  = N3_VRCDA1 , @cN3_CCORREC  = N3_CCORREC , @cN3_CDESP  = N3_CDESP 
        FROM SN3030 
        WHERE R_E_C_N_O_  = @IN_RECNO 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM2  + @nValDepr2 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM3  + @nValDepr3 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM4  + @nValDepr4 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nValCor  =  (ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) * @nTaxCor )  - ABS ( @nN3_VRCACM1  + @nN3_VORIG1  + @nN3_AMPLIA1 
           )
         SET @nValCorDep  =  ( (ABS ( @nN3_VRDACM5  + @nValDepr5 ) * @nTaxCor )  -  (@nN3_VRDACM1  + @nValDepr1  + @nN3_VRCDA1 
           ) ) 
      END 
      IF @cN3_CCORREC  = ' ' 
      BEGIN 
         SET @nValCor  = 0 
      END 
      IF @cN3_CDESP  = ' ' 
      BEGIN 
         SET @nValCorDep  = 0 
      END 
   END 
   SET @OUT_CORRECAO  = @nValCor 
   SET @OUT_CORDEP  = @nValCorDep 
END
GO

GO
--SqlScripter----[dbo].[ATF011_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF011_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF011_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF011_11_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_CCDEPR Char( 20) , 
    @IN_CDEPREC Char( 20) , 
    @IN_CCORREC Char( 20) , 
    @IN_CDESP Char( 20) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_AQUISIC Char( 08 ) , 
    @IN_DTBAIXA Char( 08 ) , 
    @IN_TXDEPR1 Float , 
    @IN_TXDEPR2 Float , 
    @IN_TXDEPR3 Float , 
    @IN_TXDEPR4 Float , 
    @IN_TXDEPR5 Float , 
    @IN_RECNOSN3 Integer , 
    @IN_TPDEPR Char( 01 ) , 
    @IN_YTD Integer , 
    @IN_PRODMES Float , 
    @IN_PRODANC Float , 
    @IN_LFUNDADA Char( 01 ) , 
    @IN_MOEDAATF Char( 02 ) , 
    @IN_LCORRECAO Char( 01 ) , 
    @IN_VCORRECAO Float , 
    @IN_TXDEPOK Float , 
    @IN_LEYDL824 Char( 01 ) , 
    @IN_LMESCHEIO Char( 01 ) , 
    @IN_ATFMBLOQ Char( 01 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_PERDEPR Float , 
    @IN_PRODANO Float , 
    @IN_DEPACM1 Float , 
    @IN_VORIG1 Float , 
    @IN_VLSALV Float , 
    @IN_ATFMDMX Char( 02 ) , 
    @IN_CODIND Char( 08 ) , 
    @OUT_VALDEP1 Float  output , 
    @OUT_VALDEP2 Float  output , 
    @OUT_VALDEP3 Float  output , 
    @OUT_VALDEP4 Float  output , 
    @OUT_VALDEP5 Float  output , 
    @OUT_COR Float  output , 
    @OUT_CORDEP Float  output , 
    @OUT_TXMEDIA Float  output , 
    @OUT_TXDEP Float  output ) AS
 
-- Declaration of variables
DECLARE @cAux Char( 03 )
DECLARE @cFilial_SN1 Char( 2)
DECLARE @cFilial_SNG Char( 2)
DECLARE @cDTBLOQ Char( 08 )
DECLARE @cN1_PATRIM Char( 1)
DECLARE @cN1_GRUPO Char( 4)
DECLARE @cN1_CONSAB Char( 1)
DECLARE @cNG_DTBLOQ Char( 08 )
DECLARE @cNG_GRUPO Char( 4)
DECLARE @lCalcDep Char( 01 )
DECLARE @cMescheio Char( 01 )
DECLARE @cDataIniDep Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @lCalcCor Char( 01 )
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nTaxCor Float
DECLARE @iRecnoSN1 Integer
DECLARE @iRecnoSNG Integer
DECLARE @iNroDias Integer
DECLARE @nUltimoDia Integer
DECLARE @nTxDep Float
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nTxMedia Float
DECLARE @nA30EMBRA Float
DECLARE @lCalDep Char( 01 )
DECLARE @iPerTpr Integer
DECLARE @iNroIPC Integer
DECLARE @cN1_STATUS Char( 01 )
DECLARE @cN3BAIXA Char( 01 )
DECLARE @cN3NOVO Char( 01 )
BEGIN
   SET @cAux  = 'SN1' 
   EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SN1 output 
   SET @cAux  = 'SNG' 
   EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFilial_SNG output 
   SET @lCalcCor  = '0' 
   SET @lCalDep  = '1' 
   SET @iPerTpr  = 0 
   SET @iNroIPC  = 0 
   SET @nUltimoDia  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 7 , 2 ))
   IF  ( (@IN_LCORRECAO  = '1'  and @IN_VCORRECAO  > 0 )  or  (@IN_DATADEP  < '19960101' ) ) 
   BEGIN 
      SET @lCalcCor  = '1' 
   END 
   IF @IN_LMESCHEIO  = '1' 
   BEGIN 
      SET @cMescheio  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @cMescheio  = '0' 
   END 
   SET @nValDepr1  = 0 
   SET @nValDepr2  = 0 
   SET @nValDepr3  = 0 
   SET @nValDepr4  = 0 
   SET @nValDepr5  = 0 
   SET @iRecnoSN1  = 0 
   SET @iRecnoSNG  = 0 
   SET @nTxDep  = 0 
   SET @nTxDep1  = 0 
   SET @nTxDep2  = 0 
   SET @nTxDep3  = 0 
   SET @nTxDep4  = 0 
   SET @nTxDep5  = 0 
   SET @nValCor  = 0 
   SET @nValCorDep  = 0 
   SET @nTxMedia  = 0 
   SET @nA30EMBRA  = 0 
   SET @lCalcDep  = '1' 
   SET @cDataIniDep  = ' ' 
   SET @cDataF  = ' ' 
   SET @cN1_STATUS  = ' ' 
   SET @cN3BAIXA  = ' ' 
   SET @cN3NOVO  = ' ' 
   IF @IN_LMESCHEIO  = '2'  and @IN_DTBAIXA  != ' ' 
   BEGIN 
      SET @lCalcDep  = '0' 
   END 
   IF @lCalDep  = '1' 
   BEGIN 
      SELECT @cDTBLOQ  = N1_DTBLOQ , @cN1_PATRIM  = N1_PATRIM , @cN1_GRUPO  = N1_GRUPO , @iRecnoSN1  = R_E_C_N_O_ , @cN1_CONSAB  = N1_CONSAB 
        , @cN1_STATUS  = N1_STATUS 
        FROM SN1010 
        WHERE N1_FILIAL  = @cFilial_SN1  and N1_CBASE  = @IN_CBASE  and N1_ITEM  = @IN_ITEM  and N1_DTBLOQ  < @IN_DATADEP 
         and D_E_L_E_T_  = ' ' 
      SET @cNG_DTBLOQ  = ' ' 
      SET @cNG_GRUPO  = ' ' 
      IF @iRecnoSN1 is NOT null 
      BEGIN 
         SET @iRecnoSNG  = null 
         SELECT @iRecnoSNG  = R_E_C_N_O_ 
           FROM SNG010 
           WHERE NG_FILIAL  = @cFilial_SNG  and NG_GRUPO  = @cN1_GRUPO  and NG_DTBLOQ  < @IN_DATADEP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecnoSNG is NOT null 
         BEGIN 
            SELECT @cNG_DTBLOQ  = NG_DTBLOQ , @cNG_GRUPO  = NG_GRUPO 
              FROM SNG010 
              WHERE R_E_C_N_O_  = @iRecnoSNG 
         END 
      END 
      ELSE 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
   END 
   IF  (@cN1_PATRIM  != ' '  and @cN1_PATRIM NOT IN ( 'N' , 'D' , 'I' , 'O' , 'T' , 'E'  ) ) 
   BEGIN 
      SET @lCalcDep  = '0' 
   END 
   IF @lCalcDep  = '1'  and @cN1_STATUS NOT IN ( ' ' , '1'  ) 
   BEGIN 
      SET @lCalcDep  = '0' 
   END 
   IF @lCalcDep  = '1' 
   BEGIN 
      IF @cDTBLOQ  = ' '  and  (@cN1_GRUPO  = @cNG_GRUPO )  and @cNG_DTBLOQ  != ' ' 
      BEGIN 
         SET @cDTBLOQ  = @cNG_DTBLOQ 
      END 
      IF  (@cDTBLOQ  = ' '  or  (@cDTBLOQ  != ' '  and  (SUBSTRING ( @cDTBLOQ , 1 , 6 ) <= SUBSTRING ( @IN_DATADEP , 1 , 
             6 )) ) ) 
      BEGIN 
         SET @lCalcDep  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
   END 
   IF @lCalcDep  = '1' 
   BEGIN 
      IF @IN_CPAISLOC  = 'ARG'  and @cN1_CONSAB  = '1' 
      BEGIN 
         SET @cMescheio  = '1' 
      END 
      SET @cDataIniDep  = SUBSTRING ( @IN_DATADEP , 1 , 6 ) + '01' 
      SET @cDataF  = @IN_DATADEP 
      IF @cMescheio  = '0' 
      BEGIN 
         IF  (SUBSTRING ( @IN_DINDEPR , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 )) 
         BEGIN 
            IF @IN_DINDEPR  > @cDataIniDep 
            BEGIN 
               SET @cDataIniDep  = @IN_DINDEPR 
            END 
         END 
         IF @cDTBLOQ  != ' '  and  (SUBSTRING ( @cDTBLOQ , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 )) 
         BEGIN 
            IF @cDTBLOQ  > @cDataIniDep 
            BEGIN 
               SET @cDataIniDep  = @cDTBLOQ 
            END 
         END 
         IF @IN_DTBAIXA  != ' '  and  (SUBSTRING ( @IN_DTBAIXA , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 )) 
         BEGIN 
            IF @IN_DTBAIXA  > @cDataIniDep 
            BEGIN 
               SET @cDataF  = @IN_DTBAIXA 
            END 
         END 
      END 
   END 
   IF @lCalcDep  = '1' 
   BEGIN 
      IF @IN_CCDEPR  = ' '  or @IN_CDEPREC  = ' ' 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
      SET @iNroDias  =  (DATEDIFF ( DAY , @cDataIniDep , @cDataF )) 
      SET @nValDepr1  = 0 
      SET @nValDepr2  = 0 
      SET @nValDepr3  = 0 
      SET @nValDepr4  = 0 
      SET @nValDepr5  = 0 
      SET @nTaxCor  = 0 
      SET @iNroDias  = @iNroDias  + 1 
      SELECT @cN3BAIXA  = N3_BAIXA , @cN3NOVO  = N3_NOVO 
        FROM SN3010 
        WHERE D_E_L_E_T_  = ' '  and R_E_C_N_O_  = @IN_RECNOSN3 
      IF @cN3BAIXA  = '1'  and @cN3NOVO  = '1' 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
      IF @IN_CPAISLOC  != 'CHI' 
      BEGIN 
         IF @lCalcDep  = '1' 
         BEGIN 
            EXEC ATF002_11_01 @IN_CPAISLOC , @IN_DATADEP , @IN_TPDEPR , @IN_DINDEPR , @IN_CDEPREC , @IN_LFUNDADA , @IN_CALCDEP , 
                   @IN_PERDEPR , @IN_TXDEPR1 , @IN_TXDEPR2 , @IN_TXDEPR3 , @IN_TXDEPR4 , @IN_TXDEPR5 , @IN_YTD , @IN_PRODMES , 
                   @IN_PRODANC , @IN_PRODANO , @IN_DEPACM1 , @IN_VORIG1 , @IN_VLSALV , @IN_CODIND , @nTxDep1 output , @nTxDep2 output , 
                   @nTxDep3 output , @nTxDep4 output , @nTxDep5 output , @iPerTpr output 
            SET @iNroIPC  = @iPerTpr 
            EXEC ATF006_11_01 @nTxDep1 , @nTxDep2 , @nTxDep3 , @nTxDep4 , @nTxDep5 , @cMescheio , @iNroDias , @nUltimoDia , 
                   @IN_RECNOSN3 , @IN_ATFMDMX , @iNroIPC , @IN_CODIND , @nValDepr1 output , @nValDepr2 output , @nValDepr3 output , 
                   @nValDepr4 output , @nValDepr5 output 
         END 
         SET @nValCor  = 0 
         SET @nValCorDep  = 0 
         IF  (@lCalcCor  = '1'  and @IN_CCORREC  != ' '  and @IN_CDESP  != ' ' ) 
         BEGIN 
            EXEC ATF007_11_01 @IN_CPAISLOC , @IN_MOEDAATF , @IN_LCORRECAO , @IN_VCORRECAO , @IN_DATADEP , @IN_AQUISIC , @cDataIniDep , 
                   @cDataF , @IN_LEYDL824 , @IN_FILIAL , @iNroDias , @IN_TXDEPOK , @IN_RECNOSN3 , @nTxMedia output , @nTaxCor output 
            SET @nA30EMBRA  = @nTxMedia 
            EXEC A30EMBRA_01 @nA30EMBRA , @nTxMedia output 
            IF @nTaxCor  != 0 
            BEGIN 
               EXEC ATF008_11_01 @IN_MOEDAATF , @nTaxCor , @IN_RECNOSN3 , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , 
                      @nValDepr5 , @IN_DATADEP , @nValCor output , @nValCorDep output 
            END 
         END 
      END 
      IF @IN_MOEDAATF  = '01' 
      BEGIN 
         SET @nTxDep  = @nTxDep1 
      END 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nTxDep  = @nTxDep2 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nTxDep  = @nTxDep3 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nTxDep  = @nTxDep4 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nTxDep  = @nTxDep5 
      END 
   END 
   SET @OUT_VALDEP1  = @nValDepr1 
   SET @OUT_VALDEP2  = @nValDepr2 
   SET @OUT_VALDEP3  = @nValDepr3 
   SET @OUT_VALDEP4  = @nValDepr4 
   SET @OUT_VALDEP5  = @nValDepr5 
   SET @OUT_COR  = @nValCor 
   SET @OUT_CORDEP  = @nValCorDep 
   SET @OUT_TXMEDIA  = @nTxMedia 
   SET @OUT_TXDEP  = @nTxDep 
END
GO

GO
--SqlScripter----[dbo].[ATF011_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF011_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF011_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF011_11_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_CCDEPR Char( 20) , 
    @IN_CDEPREC Char( 20) , 
    @IN_CCORREC Char( 20) , 
    @IN_CDESP Char( 20) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_AQUISIC Char( 08 ) , 
    @IN_DTBAIXA Char( 08 ) , 
    @IN_TXDEPR1 Float , 
    @IN_TXDEPR2 Float , 
    @IN_TXDEPR3 Float , 
    @IN_TXDEPR4 Float , 
    @IN_TXDEPR5 Float , 
    @IN_RECNOSN3 Integer , 
    @IN_TPDEPR Char( 01 ) , 
    @IN_YTD Integer , 
    @IN_PRODMES Float , 
    @IN_PRODANC Float , 
    @IN_LFUNDADA Char( 01 ) , 
    @IN_MOEDAATF Char( 02 ) , 
    @IN_LCORRECAO Char( 01 ) , 
    @IN_VCORRECAO Float , 
    @IN_TXDEPOK Float , 
    @IN_LEYDL824 Char( 01 ) , 
    @IN_LMESCHEIO Char( 01 ) , 
    @IN_ATFMBLOQ Char( 01 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_PERDEPR Float , 
    @IN_PRODANO Float , 
    @IN_DEPACM1 Float , 
    @IN_VORIG1 Float , 
    @IN_VLSALV Float , 
    @IN_ATFMDMX Char( 02 ) , 
    @IN_CODIND Char( 08 ) , 
    @OUT_VALDEP1 Float  output , 
    @OUT_VALDEP2 Float  output , 
    @OUT_VALDEP3 Float  output , 
    @OUT_VALDEP4 Float  output , 
    @OUT_VALDEP5 Float  output , 
    @OUT_COR Float  output , 
    @OUT_CORDEP Float  output , 
    @OUT_TXMEDIA Float  output , 
    @OUT_TXDEP Float  output ) AS
 
-- Declaration of variables
DECLARE @cAux Char( 03 )
DECLARE @cFilial_SN1 Char( 2)
DECLARE @cFilial_SNG Char( 2)
DECLARE @cDTBLOQ Char( 08 )
DECLARE @cN1_PATRIM Char( 1)
DECLARE @cN1_GRUPO Char( 4)
DECLARE @cN1_CONSAB Char( 1)
DECLARE @cNG_DTBLOQ Char( 08 )
DECLARE @cNG_GRUPO Char( 4)
DECLARE @lCalcDep Char( 01 )
DECLARE @cMescheio Char( 01 )
DECLARE @cDataIniDep Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @lCalcCor Char( 01 )
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nTaxCor Float
DECLARE @iRecnoSN1 Integer
DECLARE @iRecnoSNG Integer
DECLARE @iNroDias Integer
DECLARE @nUltimoDia Integer
DECLARE @nTxDep Float
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nTxMedia Float
DECLARE @nA30EMBRA Float
DECLARE @lCalDep Char( 01 )
DECLARE @iPerTpr Integer
DECLARE @iNroIPC Integer
DECLARE @cN1_STATUS Char( 01 )
DECLARE @cN3BAIXA Char( 01 )
DECLARE @cN3NOVO Char( 01 )
BEGIN
   SET @cAux  = 'SN1' 
   EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SN1 output 
   SET @cAux  = 'SNG' 
   EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFilial_SNG output 
   SET @lCalcCor  = '0' 
   SET @lCalDep  = '1' 
   SET @iPerTpr  = 0 
   SET @iNroIPC  = 0 
   SET @nUltimoDia  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 7 , 2 ))
   IF  ( (@IN_LCORRECAO  = '1'  and @IN_VCORRECAO  > 0 )  or  (@IN_DATADEP  < '19960101' ) ) 
   BEGIN 
      SET @lCalcCor  = '1' 
   END 
   IF @IN_LMESCHEIO  = '1' 
   BEGIN 
      SET @cMescheio  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @cMescheio  = '0' 
   END 
   SET @nValDepr1  = 0 
   SET @nValDepr2  = 0 
   SET @nValDepr3  = 0 
   SET @nValDepr4  = 0 
   SET @nValDepr5  = 0 
   SET @iRecnoSN1  = 0 
   SET @iRecnoSNG  = 0 
   SET @nTxDep  = 0 
   SET @nTxDep1  = 0 
   SET @nTxDep2  = 0 
   SET @nTxDep3  = 0 
   SET @nTxDep4  = 0 
   SET @nTxDep5  = 0 
   SET @nValCor  = 0 
   SET @nValCorDep  = 0 
   SET @nTxMedia  = 0 
   SET @nA30EMBRA  = 0 
   SET @lCalcDep  = '1' 
   SET @cDataIniDep  = ' ' 
   SET @cDataF  = ' ' 
   SET @cN1_STATUS  = ' ' 
   SET @cN3BAIXA  = ' ' 
   SET @cN3NOVO  = ' ' 
   IF @IN_LMESCHEIO  = '2'  and @IN_DTBAIXA  != ' ' 
   BEGIN 
      SET @lCalcDep  = '0' 
   END 
   IF @lCalDep  = '1' 
   BEGIN 
      SELECT @cDTBLOQ  = N1_DTBLOQ , @cN1_PATRIM  = N1_PATRIM , @cN1_GRUPO  = N1_GRUPO , @iRecnoSN1  = R_E_C_N_O_ , @cN1_CONSAB  = N1_CONSAB 
        , @cN1_STATUS  = N1_STATUS 
        FROM SN1030 
        WHERE N1_FILIAL  = @cFilial_SN1  and N1_CBASE  = @IN_CBASE  and N1_ITEM  = @IN_ITEM  and N1_DTBLOQ  < @IN_DATADEP 
         and D_E_L_E_T_  = ' ' 
      SET @cNG_DTBLOQ  = ' ' 
      SET @cNG_GRUPO  = ' ' 
      IF @iRecnoSN1 is NOT null 
      BEGIN 
         SET @iRecnoSNG  = null 
         SELECT @iRecnoSNG  = R_E_C_N_O_ 
           FROM SNG030 
           WHERE NG_FILIAL  = @cFilial_SNG  and NG_GRUPO  = @cN1_GRUPO  and NG_DTBLOQ  < @IN_DATADEP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecnoSNG is NOT null 
         BEGIN 
            SELECT @cNG_DTBLOQ  = NG_DTBLOQ , @cNG_GRUPO  = NG_GRUPO 
              FROM SNG030 
              WHERE R_E_C_N_O_  = @iRecnoSNG 
         END 
      END 
      ELSE 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
   END 
   IF  (@cN1_PATRIM  != ' '  and @cN1_PATRIM NOT IN ( 'N' , 'D' , 'I' , 'O' , 'T' , 'E'  ) ) 
   BEGIN 
      SET @lCalcDep  = '0' 
   END 
   IF @lCalcDep  = '1'  and @cN1_STATUS NOT IN ( ' ' , '1'  ) 
   BEGIN 
      SET @lCalcDep  = '0' 
   END 
   IF @lCalcDep  = '1' 
   BEGIN 
      IF @cDTBLOQ  = ' '  and  (@cN1_GRUPO  = @cNG_GRUPO )  and @cNG_DTBLOQ  != ' ' 
      BEGIN 
         SET @cDTBLOQ  = @cNG_DTBLOQ 
      END 
      IF  (@cDTBLOQ  = ' '  or  (@cDTBLOQ  != ' '  and  (SUBSTRING ( @cDTBLOQ , 1 , 6 ) <= SUBSTRING ( @IN_DATADEP , 1 , 
             6 )) ) ) 
      BEGIN 
         SET @lCalcDep  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
   END 
   IF @lCalcDep  = '1' 
   BEGIN 
      IF @IN_CPAISLOC  = 'ARG'  and @cN1_CONSAB  = '1' 
      BEGIN 
         SET @cMescheio  = '1' 
      END 
      SET @cDataIniDep  = SUBSTRING ( @IN_DATADEP , 1 , 6 ) + '01' 
      SET @cDataF  = @IN_DATADEP 
      IF @cMescheio  = '0' 
      BEGIN 
         IF  (SUBSTRING ( @IN_DINDEPR , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 )) 
         BEGIN 
            IF @IN_DINDEPR  > @cDataIniDep 
            BEGIN 
               SET @cDataIniDep  = @IN_DINDEPR 
            END 
         END 
         IF @cDTBLOQ  != ' '  and  (SUBSTRING ( @cDTBLOQ , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 )) 
         BEGIN 
            IF @cDTBLOQ  > @cDataIniDep 
            BEGIN 
               SET @cDataIniDep  = @cDTBLOQ 
            END 
         END 
         IF @IN_DTBAIXA  != ' '  and  (SUBSTRING ( @IN_DTBAIXA , 1 , 6 ) = SUBSTRING ( @IN_DATADEP , 1 , 6 )) 
         BEGIN 
            IF @IN_DTBAIXA  > @cDataIniDep 
            BEGIN 
               SET @cDataF  = @IN_DTBAIXA 
            END 
         END 
      END 
   END 
   IF @lCalcDep  = '1' 
   BEGIN 
      IF @IN_CCDEPR  = ' '  or @IN_CDEPREC  = ' ' 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
      SET @iNroDias  =  (DATEDIFF ( DAY , @cDataIniDep , @cDataF )) 
      SET @nValDepr1  = 0 
      SET @nValDepr2  = 0 
      SET @nValDepr3  = 0 
      SET @nValDepr4  = 0 
      SET @nValDepr5  = 0 
      SET @nTaxCor  = 0 
      SET @iNroDias  = @iNroDias  + 1 
      SELECT @cN3BAIXA  = N3_BAIXA , @cN3NOVO  = N3_NOVO 
        FROM SN3030 
        WHERE D_E_L_E_T_  = ' '  and R_E_C_N_O_  = @IN_RECNOSN3 
      IF @cN3BAIXA  = '1'  and @cN3NOVO  = '1' 
      BEGIN 
         SET @lCalcDep  = '0' 
      END 
      IF @IN_CPAISLOC  != 'CHI' 
      BEGIN 
         IF @lCalcDep  = '1' 
         BEGIN 
            EXEC ATF002_11_02 @IN_CPAISLOC , @IN_DATADEP , @IN_TPDEPR , @IN_DINDEPR , @IN_CDEPREC , @IN_LFUNDADA , @IN_CALCDEP , 
                   @IN_PERDEPR , @IN_TXDEPR1 , @IN_TXDEPR2 , @IN_TXDEPR3 , @IN_TXDEPR4 , @IN_TXDEPR5 , @IN_YTD , @IN_PRODMES , 
                   @IN_PRODANC , @IN_PRODANO , @IN_DEPACM1 , @IN_VORIG1 , @IN_VLSALV , @IN_CODIND , @nTxDep1 output , @nTxDep2 output , 
                   @nTxDep3 output , @nTxDep4 output , @nTxDep5 output , @iPerTpr output 
            SET @iNroIPC  = @iPerTpr 
            EXEC ATF006_11_02 @nTxDep1 , @nTxDep2 , @nTxDep3 , @nTxDep4 , @nTxDep5 , @cMescheio , @iNroDias , @nUltimoDia , 
                   @IN_RECNOSN3 , @IN_ATFMDMX , @iNroIPC , @IN_CODIND , @nValDepr1 output , @nValDepr2 output , @nValDepr3 output , 
                   @nValDepr4 output , @nValDepr5 output 
         END 
         SET @nValCor  = 0 
         SET @nValCorDep  = 0 
         IF  (@lCalcCor  = '1'  and @IN_CCORREC  != ' '  and @IN_CDESP  != ' ' ) 
         BEGIN 
            EXEC ATF007_11_02 @IN_CPAISLOC , @IN_MOEDAATF , @IN_LCORRECAO , @IN_VCORRECAO , @IN_DATADEP , @IN_AQUISIC , @cDataIniDep , 
                   @cDataF , @IN_LEYDL824 , @IN_FILIAL , @iNroDias , @IN_TXDEPOK , @IN_RECNOSN3 , @nTxMedia output , @nTaxCor output 
            SET @nA30EMBRA  = @nTxMedia 
            EXEC A30EMBRA_02 @nA30EMBRA , @nTxMedia output 
            IF @nTaxCor  != 0 
            BEGIN 
               EXEC ATF008_11_02 @IN_MOEDAATF , @nTaxCor , @IN_RECNOSN3 , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , 
                      @nValDepr5 , @IN_DATADEP , @nValCor output , @nValCorDep output 
            END 
         END 
      END 
      IF @IN_MOEDAATF  = '01' 
      BEGIN 
         SET @nTxDep  = @nTxDep1 
      END 
      IF @IN_MOEDAATF  = '02' 
      BEGIN 
         SET @nTxDep  = @nTxDep2 
      END 
      IF @IN_MOEDAATF  = '03' 
      BEGIN 
         SET @nTxDep  = @nTxDep3 
      END 
      IF @IN_MOEDAATF  = '04' 
      BEGIN 
         SET @nTxDep  = @nTxDep4 
      END 
      IF @IN_MOEDAATF  = '05' 
      BEGIN 
         SET @nTxDep  = @nTxDep5 
      END 
   END 
   SET @OUT_VALDEP1  = @nValDepr1 
   SET @OUT_VALDEP2  = @nValDepr2 
   SET @OUT_VALDEP3  = @nValDepr3 
   SET @OUT_VALDEP4  = @nValDepr4 
   SET @OUT_VALDEP5  = @nValDepr5 
   SET @OUT_COR  = @nValCor 
   SET @OUT_CORDEP  = @nValCorDep 
   SET @OUT_TXMEDIA  = @nTxMedia 
   SET @OUT_TXDEP  = @nTxDep 
END
GO

GO
--SqlScripter----[dbo].[ATF012_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF012_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF012_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF012_11_01]
(
    @IN_CPAISLOC Char( 03 ) , 
    @IN_FILSN4 Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_CCORREC Char( 20) , 
    @IN_CCONTAB Char( 20) , 
    @IN_SUBCCON Char( 9) , 
    @IN_CCDEPR Char( 20) , 
    @IN_CCCDEP Char( 9) , 
    @IN_SUBCCDE Char( 9) , 
    @IN_CDESP Char( 20) , 
    @IN_CDEPREC Char( 20) , 
    @IN_CCDESP Char( 9) , 
    @IN_SUBCDEP Char( 9) , 
    @IN_CCCDES Char( 9) , 
    @IN_SUBCDES Char( 9) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_CCCORR Char( 9) , 
    @IN_SEQ Char( 3) , 
    @IN_SUBCCOR Char( 9) , 
    @IN_SEQREAV Char( 2) , 
    @IN_TXMEDIA Float , 
    @IN_TXDEP Float , 
    @IN_VALCOR Float , 
    @IN_VALCORDEP Float , 
    @IN_VALDEP1 Float , 
    @IN_VALDEP2 Float , 
    @IN_VALDEP3 Float , 
    @IN_VALDEP4 Float , 
    @IN_VALDEP5 Float , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_QUANTPR Float , 
    @IN_IDMOV Char( 10 ) , 
    @IN_TPBEM Char( 02 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer , 
    @IN_CALCPIS Char( 1) ) AS
 
-- Declaration of variables
DECLARE @cOcorrencia Char( 2)
DECLARE @cMotivo Char( 2)
DECLARE @cTipoCnt Char( 1)
DECLARE @nQuant Float
DECLARE @nVlRoc2 Float
DECLARE @nVlRoc3 Float
DECLARE @nVlRoc4 Float
DECLARE @nVlRoc5 Float
DECLARE @cSerie Char( 3)
DECLARE @cNota Char( 9)
DECLARE @nVenda Float
DECLARE @cLocal Char( 6)
DECLARE @cCodBaixa Char( 6)
DECLARE @cFilOrig Char( 2)
DECLARE @cClVl Char( 9)
DECLARE @cDContab Char( 8)
DECLARE @nTxMedia Float
DECLARE @nTxDep Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nValCorDAC Float
BEGIN
   SET @nTxMedia  = @IN_TXMEDIA 
   SET @nTxDep  = @IN_TXDEP 
   SET @nValCor  = @IN_VALCOR 
   SET @nValCorDep  = @IN_VALCORDEP 
   SET @nValDepr1  = @IN_VALDEP1 
   SET @nValDepr2  = @IN_VALDEP2 
   SET @nValDepr3  = @IN_VALDEP3 
   SET @nValDepr4  = @IN_VALDEP4 
   SET @nValDepr5  = @IN_VALDEP5 
   SET @nValCorDAC  = 0 
   SET @nVlRoc2  = 0 
   SET @nVlRoc3  = 0 
   SET @nVlRoc4  = 0 
   SET @nVlRoc5  = 0 
   SET @cSerie  = ' ' 
   SET @cNota  = ' ' 
   SET @nVenda  = 0 
   SET @cLocal  = ' ' 
   SET @cCodBaixa  = ' ' 
   SET @cFilOrig  = ' ' 
   SET @cClVl  = ' ' 
   SET @cDContab  = ' ' 
   IF @IN_CCORREC  != ' '  and @nValCor  != 0 
   BEGIN 
      SET @cOcorrencia  = '07' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '2' 
      SET @nQuant  = 0 
      EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCORREC , 
             @IN_DATADEP , @nQuant , @nValCor , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @IN_CCCORR , @cLocal , @IN_SEQ , @IN_SUBCCOR , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
   IF @IN_CCORREC  != ' '  and @nValCor  != 0 
   BEGIN 
      SET @cOcorrencia  = '07' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '1' 
      SET @nQuant  = 0 
      EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCONTAB , 
             @IN_DATADEP , @nQuant , @nValCor , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @cClVl , @cLocal , @IN_SEQ , @IN_SUBCCON , @IN_SEQREAV , @cCodBaixa , @cFilOrig , @cClVl , 
             @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , 
             @IN_CASA5 , @IN_CALCPIS 
   END 
   IF  ( (@nValDepr1  + @nValDepr2  + @nValDepr3  + @nValDepr4  + @nValDepr5 )  != 0  and @IN_DINDEPR  <= @IN_DATADEP ) 
   BEGIN 
      SET @cOcorrencia  = '06' 
      IF @IN_TIPO  = '07' 
      BEGIN 
         SET @cOcorrencia  = '10' 
      END 
      IF @IN_TIPO  = '08' 
      BEGIN 
         SET @cOcorrencia  = '12' 
      END 
      IF @IN_TIPO  = '09' 
      BEGIN 
         SET @cOcorrencia  = '11' 
      END 
      IF @IN_TIPO IN ( '10' , '12' , '14' , '15' , '50' , '51' , '52' , '53' , '54'  ) 
      BEGIN 
         SET @cOcorrencia  = '20' 
      END 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '4' 
      SET @nQuant  = 0 
      SET @cSerie  = ' ' 
      SET @cNota  = ' ' 
      SET @nVenda  = 0 
      SET @cLocal  = ' ' 
      SET @cCodBaixa  = ' ' 
      SET @cFilOrig  = ' ' 
      SET @cClVl  = ' ' 
      SET @cDContab  = ' ' 
      EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCDEPR , 
             @IN_DATADEP , @nQuant , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSerie , @cNota , 
             @nVenda , @nTxMedia , @nTxDep , @IN_CCCDEP , @cLocal , @IN_SEQ , @IN_SUBCCDE , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
      IF @nValCorDep  != 0  and @IN_CDESP  != ' ' 
      BEGIN 
         SET @cOcorrencia  = '08' 
         SET @cMotivo  = ' ' 
         SET @cTipoCnt  = '4' 
         SET @nQuant  = 0 
         EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCDEPR , 
                @IN_DATADEP , @nQuant , @nValCorDep , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
                @nTxMedia , @nTxDep , @IN_CCCDEP , @cLocal , @IN_SEQ , @IN_SUBCCDE , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
                @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
                @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
      END 
      IF @IN_CPAISLOC  = 'CHI'  and @nValCorDAC  != 0  and @IN_CDESP  != ' ' 
      BEGIN 
         SET @cOcorrencia  = '08' 
         SET @cMotivo  = ' ' 
         SET @cTipoCnt  = '8' 
         SET @nQuant  = 0 
         EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDEPREC , 
                @IN_DATADEP , @nQuant , @nValCorDAC , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
                @nTxMedia , @nTxDep , @IN_CCCDEP , @cLocal , @IN_SEQ , @IN_SUBCCDE , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
                @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
                @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
      END 
   END 
   IF  ( (@nValDepr1  + @nValDepr2  + @nValDepr3  + @nValDepr4  + @nValDepr5 )  != 0 )  and @IN_DINDEPR  <= @IN_DATADEP 
   BEGIN 
      SET @cOcorrencia  = '06' 
      IF @IN_TIPO  = '07' 
      BEGIN 
         SET @cOcorrencia  = '10' 
      END 
      IF @IN_TIPO  = '08' 
      BEGIN 
         SET @cOcorrencia  = '12' 
      END 
      IF @IN_TIPO  = '09' 
      BEGIN 
         SET @cOcorrencia  = '11' 
      END 
      IF @IN_TIPO IN ( '10' , '12' , '14' , '15' , '50' , '51' , '52' , '53' , '54'  ) 
      BEGIN 
         SET @cOcorrencia  = '20' 
      END 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '3' 
      SET @nQuant  = 0 
      SET @cSerie  = ' ' 
      SET @cNota  = ' ' 
      SET @nVenda  = 0 
      SET @cLocal  = ' ' 
      SET @cCodBaixa  = ' ' 
      SET @cFilOrig  = ' ' 
      SET @cClVl  = ' ' 
      SET @cDContab  = ' ' 
      EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDEPREC , 
             @IN_DATADEP , @nQuant , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSerie , @cNota , 
             @nVenda , @nTxMedia , @nTxDep , @IN_CCDESP , @cLocal , @IN_SEQ , @IN_SUBCDEP , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
   IF @nValCorDep  != 0  and  (@IN_DINDEPR  <= @IN_DATADEP ) 
   BEGIN 
      SET @cOcorrencia  = '08' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '5' 
      SET @nQuant  = 0 
      EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDESP , 
             @IN_DATADEP , @nQuant , @nValCorDep , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @IN_CCCDES , @cLocal , @IN_SEQ , @IN_SUBCDES , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
   IF @IN_CPAISLOC  = 'CHI'  and @nValCorDAC  != 0  and  (@IN_DINDEPR  <= @IN_DATADEP ) 
   BEGIN 
      SET @cOcorrencia  = '08' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '9' 
      SET @nQuant  = 0 
      EXEC ATF003_11_01 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDEPREC , 
             @IN_DATADEP , @nQuant , @nValCorDAC , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @IN_CCCDES , @cLocal , @IN_SEQ , @IN_SUBCDES , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
END
GO

GO
--SqlScripter----[dbo].[ATF012_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF012_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF012_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF012_11_02]
(
    @IN_CPAISLOC Char( 03 ) , 
    @IN_FILSN4 Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_CCORREC Char( 20) , 
    @IN_CCONTAB Char( 20) , 
    @IN_SUBCCON Char( 9) , 
    @IN_CCDEPR Char( 20) , 
    @IN_CCCDEP Char( 9) , 
    @IN_SUBCCDE Char( 9) , 
    @IN_CDESP Char( 20) , 
    @IN_CDEPREC Char( 20) , 
    @IN_CCDESP Char( 9) , 
    @IN_SUBCDEP Char( 9) , 
    @IN_CCCDES Char( 9) , 
    @IN_SUBCDES Char( 9) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_CCCORR Char( 9) , 
    @IN_SEQ Char( 3) , 
    @IN_SUBCCOR Char( 9) , 
    @IN_SEQREAV Char( 2) , 
    @IN_TXMEDIA Float , 
    @IN_TXDEP Float , 
    @IN_VALCOR Float , 
    @IN_VALCORDEP Float , 
    @IN_VALDEP1 Float , 
    @IN_VALDEP2 Float , 
    @IN_VALDEP3 Float , 
    @IN_VALDEP4 Float , 
    @IN_VALDEP5 Float , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_QUANTPR Float , 
    @IN_IDMOV Char( 10 ) , 
    @IN_TPBEM Char( 02 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer , 
    @IN_CALCPIS Char( 1) ) AS
 
-- Declaration of variables
DECLARE @cOcorrencia Char( 2)
DECLARE @cMotivo Char( 2)
DECLARE @cTipoCnt Char( 1)
DECLARE @nQuant Float
DECLARE @nVlRoc2 Float
DECLARE @nVlRoc3 Float
DECLARE @nVlRoc4 Float
DECLARE @nVlRoc5 Float
DECLARE @cSerie Char( 3)
DECLARE @cNota Char( 8)
DECLARE @nVenda Float
DECLARE @cLocal Char( 6)
DECLARE @cCodBaixa Char( 6)
DECLARE @cFilOrig Char( 2)
DECLARE @cClVl Char( 9)
DECLARE @cDContab Char( 8)
DECLARE @nTxMedia Float
DECLARE @nTxDep Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nValCorDAC Float
BEGIN
   SET @nTxMedia  = @IN_TXMEDIA 
   SET @nTxDep  = @IN_TXDEP 
   SET @nValCor  = @IN_VALCOR 
   SET @nValCorDep  = @IN_VALCORDEP 
   SET @nValDepr1  = @IN_VALDEP1 
   SET @nValDepr2  = @IN_VALDEP2 
   SET @nValDepr3  = @IN_VALDEP3 
   SET @nValDepr4  = @IN_VALDEP4 
   SET @nValDepr5  = @IN_VALDEP5 
   SET @nValCorDAC  = 0 
   SET @nVlRoc2  = 0 
   SET @nVlRoc3  = 0 
   SET @nVlRoc4  = 0 
   SET @nVlRoc5  = 0 
   SET @cSerie  = ' ' 
   SET @cNota  = ' ' 
   SET @nVenda  = 0 
   SET @cLocal  = ' ' 
   SET @cCodBaixa  = ' ' 
   SET @cFilOrig  = ' ' 
   SET @cClVl  = ' ' 
   SET @cDContab  = ' ' 
   IF @IN_CCORREC  != ' '  and @nValCor  != 0 
   BEGIN 
      SET @cOcorrencia  = '07' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '2' 
      SET @nQuant  = 0 
      EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCORREC , 
             @IN_DATADEP , @nQuant , @nValCor , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @IN_CCCORR , @cLocal , @IN_SEQ , @IN_SUBCCOR , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
   IF @IN_CCORREC  != ' '  and @nValCor  != 0 
   BEGIN 
      SET @cOcorrencia  = '07' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '1' 
      SET @nQuant  = 0 
      EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCONTAB , 
             @IN_DATADEP , @nQuant , @nValCor , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @cClVl , @cLocal , @IN_SEQ , @IN_SUBCCON , @IN_SEQREAV , @cCodBaixa , @cFilOrig , @cClVl , 
             @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , 
             @IN_CASA5 , @IN_CALCPIS 
   END 
   IF  ( (@nValDepr1  + @nValDepr2  + @nValDepr3  + @nValDepr4  + @nValDepr5 )  != 0  and @IN_DINDEPR  <= @IN_DATADEP ) 
   BEGIN 
      SET @cOcorrencia  = '06' 
      IF @IN_TIPO  = '07' 
      BEGIN 
         SET @cOcorrencia  = '10' 
      END 
      IF @IN_TIPO  = '08' 
      BEGIN 
         SET @cOcorrencia  = '12' 
      END 
      IF @IN_TIPO  = '09' 
      BEGIN 
         SET @cOcorrencia  = '11' 
      END 
      IF @IN_TIPO IN ( '10' , '12' , '14' , '15' , '50' , '51' , '52' , '53' , '54'  ) 
      BEGIN 
         SET @cOcorrencia  = '20' 
      END 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '4' 
      SET @nQuant  = 0 
      SET @cSerie  = ' ' 
      SET @cNota  = ' ' 
      SET @nVenda  = 0 
      SET @cLocal  = ' ' 
      SET @cCodBaixa  = ' ' 
      SET @cFilOrig  = ' ' 
      SET @cClVl  = ' ' 
      SET @cDContab  = ' ' 
      EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCDEPR , 
             @IN_DATADEP , @nQuant , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSerie , @cNota , 
             @nVenda , @nTxMedia , @nTxDep , @IN_CCCDEP , @cLocal , @IN_SEQ , @IN_SUBCCDE , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
      IF @nValCorDep  != 0  and @IN_CDESP  != ' ' 
      BEGIN 
         SET @cOcorrencia  = '08' 
         SET @cMotivo  = ' ' 
         SET @cTipoCnt  = '4' 
         SET @nQuant  = 0 
         EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CCDEPR , 
                @IN_DATADEP , @nQuant , @nValCorDep , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
                @nTxMedia , @nTxDep , @IN_CCCDEP , @cLocal , @IN_SEQ , @IN_SUBCCDE , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
                @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
                @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
      END 
      IF @IN_CPAISLOC  = 'CHI'  and @nValCorDAC  != 0  and @IN_CDESP  != ' ' 
      BEGIN 
         SET @cOcorrencia  = '08' 
         SET @cMotivo  = ' ' 
         SET @cTipoCnt  = '8' 
         SET @nQuant  = 0 
         EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDEPREC , 
                @IN_DATADEP , @nQuant , @nValCorDAC , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
                @nTxMedia , @nTxDep , @IN_CCCDEP , @cLocal , @IN_SEQ , @IN_SUBCCDE , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
                @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
                @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
      END 
   END 
   IF  ( (@nValDepr1  + @nValDepr2  + @nValDepr3  + @nValDepr4  + @nValDepr5 )  != 0 )  and @IN_DINDEPR  <= @IN_DATADEP 
   BEGIN 
      SET @cOcorrencia  = '06' 
      IF @IN_TIPO  = '07' 
      BEGIN 
         SET @cOcorrencia  = '10' 
      END 
      IF @IN_TIPO  = '08' 
      BEGIN 
         SET @cOcorrencia  = '12' 
      END 
      IF @IN_TIPO  = '09' 
      BEGIN 
         SET @cOcorrencia  = '11' 
      END 
      IF @IN_TIPO IN ( '10' , '12' , '14' , '15' , '50' , '51' , '52' , '53' , '54'  ) 
      BEGIN 
         SET @cOcorrencia  = '20' 
      END 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '3' 
      SET @nQuant  = 0 
      SET @cSerie  = ' ' 
      SET @cNota  = ' ' 
      SET @nVenda  = 0 
      SET @cLocal  = ' ' 
      SET @cCodBaixa  = ' ' 
      SET @cFilOrig  = ' ' 
      SET @cClVl  = ' ' 
      SET @cDContab  = ' ' 
      EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDEPREC , 
             @IN_DATADEP , @nQuant , @nValDepr1 , @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSerie , @cNota , 
             @nVenda , @nTxMedia , @nTxDep , @IN_CCDESP , @cLocal , @IN_SEQ , @IN_SUBCDEP , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
   IF @nValCorDep  != 0  and  (@IN_DINDEPR  <= @IN_DATADEP ) 
   BEGIN 
      SET @cOcorrencia  = '08' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '5' 
      SET @nQuant  = 0 
      EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDESP , 
             @IN_DATADEP , @nQuant , @nValCorDep , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @IN_CCCDES , @cLocal , @IN_SEQ , @IN_SUBCDES , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
   IF @IN_CPAISLOC  = 'CHI'  and @nValCorDAC  != 0  and  (@IN_DINDEPR  <= @IN_DATADEP ) 
   BEGIN 
      SET @cOcorrencia  = '08' 
      SET @cMotivo  = ' ' 
      SET @cTipoCnt  = '9' 
      SET @nQuant  = 0 
      EXEC ATF003_11_02 @IN_FILSN4 , @IN_CBASE , @IN_ITEM , @IN_TIPO , @cOcorrencia , @cMotivo , @cTipoCnt , @IN_CDEPREC , 
             @IN_DATADEP , @nQuant , @nValCorDAC , @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSerie , @cNota , @nVenda , 
             @nTxMedia , @nTxDep , @IN_CCCDES , @cLocal , @IN_SEQ , @IN_SUBCDES , @IN_SEQREAV , @cCodBaixa , @cFilOrig , 
             @cClVl , @cDContab , @IN_TPSALDO , @IN_QUANTPR , @IN_IDMOV , @IN_TPBEM , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , 
             @IN_CASA4 , @IN_CASA5 , @IN_CALCPIS 
   END 
END
GO

GO
--SqlScripter----[dbo].[ATF013_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF013_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF013_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF013_11_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_CCORREC Char( 20) , 
    @IN_SUBCCOR Char( 9) , 
    @IN_CLVLCOR Char( 9) , 
    @IN_CCCORR Char( 9) , 
    @IN_CCONTAB Char( 20) , 
    @IN_SUBCCON Char( 9) , 
    @IN_CLVLCON Char( 9) , 
    @IN_CUSTBEM Char( 9) , 
    @IN_CDEPREC Char( 20) , 
    @IN_SUBCDEP Char( 9) , 
    @IN_CLVLDEP Char( 9) , 
    @IN_CCDESP Char( 9) , 
    @IN_CCDEPR Char( 20) , 
    @IN_SUBCCDE Char( 9) , 
    @IN_CLVLCDE Char( 9) , 
    @IN_CCCDEP Char( 9) , 
    @IN_CDESP Char( 20) , 
    @IN_SUBCDES Char( 9) , 
    @IN_CLVLDES Char( 9) , 
    @IN_CCCDES Char( 9) , 
    @IN_TXMEDIA Float , 
    @IN_VALCOR Float , 
    @IN_VALCORDEP Float , 
    @IN_VALDEP1 Float , 
    @IN_VALDEP2 Float , 
    @IN_VALDEP3 Float , 
    @IN_VALDEP4 Float , 
    @IN_VALDEP5 Float , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer ) AS
 
-- Declaration of variables
DECLARE @cAux Char( 03 )
DECLARE @cFil_SN1 Char( 2)
DECLARE @cN1_PATRIM Char( 1)
DECLARE @cTipoSal Char( 1)
DECLARE @cTipoCnt Char( 1)
DECLARE @cSinal Char( 01 )
DECLARE @cPrograma Char( 10 )
DECLARE @nVlRoc2 Float
DECLARE @nVlRoc3 Float
DECLARE @nVlRoc4 Float
DECLARE @nVlRoc5 Float
DECLARE @nTxMedia Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
BEGIN
   SET @cAux  = 'SN1' 
   EXEC XFILIAL_11_01 @cAux , @IN_FILIAL , @cFil_SN1 output 
   SET @nTxMedia  = @IN_TXMEDIA 
   SET @nValCor  = @IN_VALCOR 
   SET @nValCorDep  = @IN_VALCORDEP 
   SET @nValDepr1  = @IN_VALDEP1 
   SET @nValDepr2  = @IN_VALDEP2 
   SET @nValDepr3  = @IN_VALDEP3 
   SET @nValDepr4  = @IN_VALDEP4 
   SET @nValDepr5  = @IN_VALDEP5 
   SELECT @cN1_PATRIM  = N1_PATRIM 
     FROM SN1010 
     WHERE N1_FILIAL  = @cFil_SN1  and N1_CBASE  = @IN_CBASE  and N1_ITEM  = @IN_ITEM  and D_E_L_E_T_  = ' ' 
   IF @cN1_PATRIM IN ( ' ' , 'N' , 'P' , 'D' , 'I' , 'O' , 'T'  ) 
   BEGIN 
      SET @cTipoSal  = '6' 
   END 
   ELSE 
   BEGIN 
      SET @cTipoSal  = 'O' 
   END 
   SET @nVlRoc2  = 0 
   SET @nVlRoc3  = 0 
   SET @nVlRoc4  = 0 
   SET @nVlRoc5  = 0 
   SET @cSinal  = '+' 
   SET @cTipoCnt  = '2' 
   SET @cPrograma  = 'ATF050' 
   EXEC ATF004_11_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCORREC , @IN_DATADEP , @cTipoSal , @nValCor , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCCOR , @IN_CLVLCOR , @IN_CCCORR , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '1' 
   EXEC ATF004_11_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCONTAB , @IN_DATADEP , @cTipoSal , @nValCor , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCCON , @IN_CLVLCON , @IN_CUSTBEM , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   IF @IN_TIPO NOT IN ( '08' , '09'  ) 
   BEGIN 
      SET @cTipoSal  = '4' 
   END 
   ELSE 
   BEGIN 
      IF @IN_TIPO  = '09' 
      BEGIN 
         SET @cTipoSal  = 'L' 
      END 
      ELSE 
      BEGIN 
         SET @cTipoSal  = 'K' 
      END 
   END 
   IF @IN_TIPO IN ( '10' , '12' , '14' , '15' , '50' , '51' , '52' , '53' , '54'  ) 
   BEGIN 
      SET @cTipoSal  = 'Y' 
   END 
   SET @cTipoCnt  = '3' 
   EXEC ATF004_11_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CDEPREC , @IN_DATADEP , @cTipoSal , @nValDepr1 , 
          @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSinal , @nTxMedia , @IN_SUBCDEP , @IN_CLVLDEP , @IN_CCDESP , 
          @cTipoCnt , @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '4' 
   EXEC ATF004_11_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCDEPR , @IN_DATADEP , @cTipoSal , @nValDepr1 , 
          @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSinal , @nTxMedia , @IN_SUBCCDE , @IN_CLVLCDE , @IN_CCCDEP , 
          @cTipoCnt , @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '5' 
   SET @cTipoSal  = '7' 
   EXEC ATF004_11_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CDESP , @IN_DATADEP , @cTipoSal , @nValCorDep , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCDES , @IN_CLVLDES , @IN_CCCDES , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '4' 
   EXEC ATF004_11_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCDEPR , @IN_DATADEP , @cTipoSal , @nValCorDep , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCCDE , @IN_CLVLCDE , @IN_CCCDEP , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
END
GO

GO
--SqlScripter----[dbo].[ATF013_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF013_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF013_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF013_11_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_CBASE Char( 10) , 
    @IN_ITEM Char( 4) , 
    @IN_TIPO Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_CCORREC Char( 20) , 
    @IN_SUBCCOR Char( 9) , 
    @IN_CLVLCOR Char( 9) , 
    @IN_CCCORR Char( 9) , 
    @IN_CCONTAB Char( 20) , 
    @IN_SUBCCON Char( 9) , 
    @IN_CLVLCON Char( 9) , 
    @IN_CUSTBEM Char( 9) , 
    @IN_CDEPREC Char( 20) , 
    @IN_SUBCDEP Char( 9) , 
    @IN_CLVLDEP Char( 9) , 
    @IN_CCDESP Char( 9) , 
    @IN_CCDEPR Char( 20) , 
    @IN_SUBCCDE Char( 9) , 
    @IN_CLVLCDE Char( 9) , 
    @IN_CCCDEP Char( 9) , 
    @IN_CDESP Char( 20) , 
    @IN_SUBCDES Char( 9) , 
    @IN_CLVLDES Char( 9) , 
    @IN_CCCDES Char( 9) , 
    @IN_TXMEDIA Float , 
    @IN_VALCOR Float , 
    @IN_VALCORDEP Float , 
    @IN_VALDEP1 Float , 
    @IN_VALDEP2 Float , 
    @IN_VALDEP3 Float , 
    @IN_VALDEP4 Float , 
    @IN_VALDEP5 Float , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_CASA1 Integer , 
    @IN_CASA2 Integer , 
    @IN_CASA3 Integer , 
    @IN_CASA4 Integer , 
    @IN_CASA5 Integer ) AS
 
-- Declaration of variables
DECLARE @cAux Char( 03 )
DECLARE @cFil_SN1 Char( 2)
DECLARE @cN1_PATRIM Char( 1)
DECLARE @cTipoSal Char( 1)
DECLARE @cTipoCnt Char( 1)
DECLARE @cSinal Char( 01 )
DECLARE @cPrograma Char( 10 )
DECLARE @nVlRoc2 Float
DECLARE @nVlRoc3 Float
DECLARE @nVlRoc4 Float
DECLARE @nVlRoc5 Float
DECLARE @nTxMedia Float
DECLARE @nValCor Float
DECLARE @nValCorDep Float
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
BEGIN
   SET @cAux  = 'SN1' 
   EXEC XFILIAL_11_02 @cAux , @IN_FILIAL , @cFil_SN1 output 
   SET @nTxMedia  = @IN_TXMEDIA 
   SET @nValCor  = @IN_VALCOR 
   SET @nValCorDep  = @IN_VALCORDEP 
   SET @nValDepr1  = @IN_VALDEP1 
   SET @nValDepr2  = @IN_VALDEP2 
   SET @nValDepr3  = @IN_VALDEP3 
   SET @nValDepr4  = @IN_VALDEP4 
   SET @nValDepr5  = @IN_VALDEP5 
   SELECT @cN1_PATRIM  = N1_PATRIM 
     FROM SN1030 
     WHERE N1_FILIAL  = @cFil_SN1  and N1_CBASE  = @IN_CBASE  and N1_ITEM  = @IN_ITEM  and D_E_L_E_T_  = ' ' 
   IF @cN1_PATRIM IN ( ' ' , 'N' , 'P' , 'D' , 'I' , 'O' , 'T'  ) 
   BEGIN 
      SET @cTipoSal  = '6' 
   END 
   ELSE 
   BEGIN 
      SET @cTipoSal  = 'O' 
   END 
   SET @nVlRoc2  = 0 
   SET @nVlRoc3  = 0 
   SET @nVlRoc4  = 0 
   SET @nVlRoc5  = 0 
   SET @cSinal  = '+' 
   SET @cTipoCnt  = '2' 
   SET @cPrograma  = 'ATF050' 
   EXEC ATF004_11_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCORREC , @IN_DATADEP , @cTipoSal , @nValCor , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCCOR , @IN_CLVLCOR , @IN_CCCORR , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '1' 
   EXEC ATF004_11_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCONTAB , @IN_DATADEP , @cTipoSal , @nValCor , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCCON , @IN_CLVLCON , @IN_CUSTBEM , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   IF @IN_TIPO NOT IN ( '08' , '09'  ) 
   BEGIN 
      SET @cTipoSal  = '4' 
   END 
   ELSE 
   BEGIN 
      IF @IN_TIPO  = '09' 
      BEGIN 
         SET @cTipoSal  = 'L' 
      END 
      ELSE 
      BEGIN 
         SET @cTipoSal  = 'K' 
      END 
   END 
   IF @IN_TIPO IN ( '10' , '12' , '14' , '15' , '50' , '51' , '52' , '53' , '54'  ) 
   BEGIN 
      SET @cTipoSal  = 'Y' 
   END 
   SET @cTipoCnt  = '3' 
   EXEC ATF004_11_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CDEPREC , @IN_DATADEP , @cTipoSal , @nValDepr1 , 
          @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSinal , @nTxMedia , @IN_SUBCDEP , @IN_CLVLDEP , @IN_CCDESP , 
          @cTipoCnt , @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '4' 
   EXEC ATF004_11_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCDEPR , @IN_DATADEP , @cTipoSal , @nValDepr1 , 
          @nValDepr2 , @nValDepr3 , @nValDepr4 , @nValDepr5 , @cSinal , @nTxMedia , @IN_SUBCCDE , @IN_CLVLCDE , @IN_CCCDEP , 
          @cTipoCnt , @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '5' 
   SET @cTipoSal  = '7' 
   EXEC ATF004_11_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CDESP , @IN_DATADEP , @cTipoSal , @nValCorDep , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCDES , @IN_CLVLDES , @IN_CCCDES , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
   SET @cTipoCnt  = '4' 
   EXEC ATF004_11_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CCDEPR , @IN_DATADEP , @cTipoSal , @nValCorDep , 
          @nVlRoc2 , @nVlRoc3 , @nVlRoc4 , @nVlRoc5 , @cSinal , @nTxMedia , @IN_SUBCCDE , @IN_CLVLCDE , @IN_CCCDEP , @cTipoCnt , 
          @cPrograma , @IN_TIPO , @IN_TPSALDO , @IN_CASA1 , @IN_CASA2 , @IN_CASA3 , @IN_CASA4 , @IN_CASA5 
END
GO

GO
--SqlScripter----[dbo].[ATF014_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF014_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF014_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF014_11_01]
(
    @IN_N3TIPO Char( 2) , 
    @IN_TPDEPR Char( 1) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_PERDEPR Integer , 
    @IN_RECNOSN3 Integer , 
    @IN_RECNOTP07 Integer , 
    @IN_CASAS1 Integer , 
    @IN_CASASATF Integer , 
    @IN_VORIG1 Float , 
    @IN_VRCACM1 Float , 
    @IN_AMPLIA1 Float , 
    @IN_VRDACM1 Float , 
    @IN_VRCDA1 Float , 
    @IN_VALORORIG Float , 
    @IN_VALORACUM Float , 
    @IN_VALOR1 Float , 
    @IN_VALORX Float , 
    @IN_VLSALV1 Float , 
    @IN_VMXDEP Float ) AS
 
-- Declaration of variables
DECLARE @lAtualiza Char( 01 )
DECLARE @iPc1 Float
DECLARE @iPc2 Float
DECLARE @iPC Float
BEGIN
   SET @lAtualiza  = '0' 
   SET @iPc1  = 0 
   SET @iPc2  = 0 
   SET @iPC  = 0 
   IF @IN_TPDEPR  = '2' 
   BEGIN 
      IF ROUND ( ABS ( @IN_VRDACM1  + @IN_VRCDA1  + @IN_VLSALV1 ), @IN_CASAS1 ) >= ROUND ( ABS ( @IN_VORIG1  + @IN_VRCACM1  + @IN_AMPLIA1 
        ), @IN_CASAS1 )
      BEGIN 
         SET @lAtualiza  = '1' 
      END 
   END 
   IF @IN_TPDEPR  = '6' 
   BEGIN 
      IF @IN_PERDEPR  > 0 
      BEGIN 
         IF @IN_CALCDEP  = '0' 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         ELSE 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         SET @iPC  = @IN_PERDEPR  -  (@iPc1  - @iPc2 ) 
         IF @iPC  = 1 
         BEGIN 
            SET @lAtualiza  = '1' 
         END 
      END 
   END 
   IF @IN_TPDEPR  = '7' 
   BEGIN 
      IF ROUND ( ABS ( @IN_VRDACM1  + @IN_VRCDA1 ), @IN_CASASATF ) >= ROUND ( ABS ( @IN_VMXDEP ), @IN_CASASATF )
      BEGIN 
         SET @lAtualiza  = '1' 
      END 
   END 
   IF @IN_TPDEPR  != '7'  and @IN_TPDEPR  != '2' 
   BEGIN 
      IF ROUND ( ABS ( @IN_VRDACM1  + @IN_VRCDA1  + @IN_VALOR1 ), @IN_CASAS1 ) >= ROUND ( ABS ( @IN_VORIG1  + @IN_VRCACM1  + @IN_AMPLIA1 
        ), @IN_CASAS1 ) and ROUND ( ABS ( @IN_VALORACUM  + @IN_VALORX ), @IN_CASASATF ) >= ROUND ( ABS ( @IN_VALORORIG ), 
             @IN_CASASATF )
      BEGIN 
         SET @lAtualiza  = '1' 
      END 
   END 
   IF @lAtualiza  = '1' 
   BEGIN 
      begin tran 
      UPDATE SN3010 
        WITH (ROWLOCK) 
         SET N3_FIMDEPR  = @IN_DATADEP 
       WHERE R_E_C_N_O_  = @IN_RECNOSN3 
      commit tran 
      IF  (@IN_N3TIPO in ( '01' , '07'  )  and  (@IN_RECNOTP07  > 0 ) ) 
      BEGIN 
         begin tran 
         UPDATE SN3010 
           WITH (ROWLOCK) 
            SET N3_FIMDEPR  = @IN_DATADEP 
          WHERE R_E_C_N_O_  = @IN_RECNOTP07 
         commit tran 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[ATF014_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF014_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF014_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF014_11_02]
(
    @IN_N3TIPO Char( 2) , 
    @IN_TPDEPR Char( 1) , 
    @IN_DATADEP Char( 08 ) , 
    @IN_DINDEPR Char( 08 ) , 
    @IN_CALCDEP Char( 01 ) , 
    @IN_PERDEPR Integer , 
    @IN_RECNOSN3 Integer , 
    @IN_RECNOTP07 Integer , 
    @IN_CASAS1 Integer , 
    @IN_CASASATF Integer , 
    @IN_VORIG1 Float , 
    @IN_VRCACM1 Float , 
    @IN_AMPLIA1 Float , 
    @IN_VRDACM1 Float , 
    @IN_VRCDA1 Float , 
    @IN_VALORORIG Float , 
    @IN_VALORACUM Float , 
    @IN_VALOR1 Float , 
    @IN_VALORX Float , 
    @IN_VLSALV1 Float , 
    @IN_VMXDEP Float ) AS
 
-- Declaration of variables
DECLARE @lAtualiza Char( 01 )
DECLARE @iPc1 Float
DECLARE @iPc2 Float
DECLARE @iPC Float
BEGIN
   SET @lAtualiza  = '0' 
   SET @iPc1  = 0 
   SET @iPc2  = 0 
   SET @iPC  = 0 
   IF @IN_TPDEPR  = '2' 
   BEGIN 
      IF ROUND ( ABS ( @IN_VRDACM1  + @IN_VRCDA1  + @IN_VLSALV1 ), @IN_CASAS1 ) >= ROUND ( ABS ( @IN_VORIG1  + @IN_VRCACM1  + @IN_AMPLIA1 
        ), @IN_CASAS1 )
      BEGIN 
         SET @lAtualiza  = '1' 
      END 
   END 
   IF @IN_TPDEPR  = '6' 
   BEGIN 
      IF @IN_PERDEPR  > 0 
      BEGIN 
         IF @IN_CALCDEP  = '0' 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) * 12  + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         ELSE 
         BEGIN 
            SET @iPc1  = CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DATADEP , 
                   5 , 2 ))
            SET @iPc2  = CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 1 , 4 )) + CONVERT( Integer ,SUBSTRING ( @IN_DINDEPR , 
                   5 , 2 ))
         END 
         SET @iPC  = @IN_PERDEPR  -  (@iPc1  - @iPc2 ) 
         IF @iPC  = 1 
         BEGIN 
            SET @lAtualiza  = '1' 
         END 
      END 
   END 
   IF @IN_TPDEPR  = '7' 
   BEGIN 
      IF ROUND ( ABS ( @IN_VRDACM1  + @IN_VRCDA1 ), @IN_CASASATF ) >= ROUND ( ABS ( @IN_VMXDEP ), @IN_CASASATF )
      BEGIN 
         SET @lAtualiza  = '1' 
      END 
   END 
   IF @IN_TPDEPR  != '7'  and @IN_TPDEPR  != '2' 
   BEGIN 
      IF ROUND ( ABS ( @IN_VRDACM1  + @IN_VRCDA1  + @IN_VALOR1 ), @IN_CASAS1 ) >= ROUND ( ABS ( @IN_VORIG1  + @IN_VRCACM1  + @IN_AMPLIA1 
        ), @IN_CASAS1 ) and ROUND ( ABS ( @IN_VALORACUM  + @IN_VALORX ), @IN_CASASATF ) >= ROUND ( ABS ( @IN_VALORORIG ), 
             @IN_CASASATF )
      BEGIN 
         SET @lAtualiza  = '1' 
      END 
   END 
   IF @lAtualiza  = '1' 
   BEGIN 
      begin tran 
      UPDATE SN3030 
        WITH (ROWLOCK) 
         SET N3_FIMDEPR  = @IN_DATADEP 
       WHERE R_E_C_N_O_  = @IN_RECNOSN3 
      commit tran 
      IF  (@IN_N3TIPO in ( '01' , '07'  )  and  (@IN_RECNOTP07  > 0 ) ) 
      BEGIN 
         begin tran 
         UPDATE SN3030 
           WITH (ROWLOCK) 
            SET N3_FIMDEPR  = @IN_DATADEP 
          WHERE R_E_C_N_O_  = @IN_RECNOTP07 
         commit tran 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[ATF015_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF015_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF015_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF015_11_01]
(
    @IN_TXDEP1 Float , 
    @IN_TXDEP2 Float , 
    @IN_TXDEP3 Float , 
    @IN_TXDEP4 Float , 
    @IN_TXDEP5 Float , 
    @IN_RECNO Integer , 
    @IN_CODIND Char( 08 ) , 
    @OUT_DEP1 Float  output , 
    @OUT_DEP2 Float  output , 
    @OUT_DEP3 Float  output , 
    @OUT_DEP4 Float  output , 
    @OUT_DEP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nDiferenca Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_AMPLIA1 Float
DECLARE @nN3_AMPLIA2 Float
DECLARE @nN3_AMPLIA3 Float
DECLARE @nN3_AMPLIA4 Float
DECLARE @nN3_AMPLIA5 Float
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VRDACM2 Float
DECLARE @nN3_VRDACM3 Float
DECLARE @nN3_VRDACM4 Float
DECLARE @nN3_VRDACM5 Float
DECLARE @nN3_VRCACM1 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @nN3_VMXDEPR Float
DECLARE @nN3_VLSALV1 Float
DECLARE @nSalvAux Float
DECLARE @nVmxDepr Float
DECLARE @nPercent Float
DECLARE @cN3_TPDEPR Char( 1)
DECLARE @cFNI_TIPO Char( 01 )
DECLARE @cFilial_FNI Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_AUX Char( 2)
BEGIN
   SET @nValDepr1  = 0 
   SET @nValDepr2  = 0 
   SET @nValDepr3  = 0 
   SET @nValDepr4  = 0 
   SET @nValDepr5  = 0 
   SET @nSalvAux  = 0 
   SET @nVmxDepr  = 0 
   SET @nTxDep1  = @IN_TXDEP1 
   SET @nTxDep2  = @IN_TXDEP2 
   SET @nTxDep3  = @IN_TXDEP3 
   SET @nTxDep4  = @IN_TXDEP4 
   SET @nTxDep5  = @IN_TXDEP5 
   SET @nN3_VMXDEPR  = 0 
   SET @nN3_VLSALV1  = 0 
   SELECT @nN3_VORIG1  = N3_VORIG1 , @nN3_VORIG2  = N3_VORIG2 , @nN3_VORIG3  = N3_VORIG3 , @nN3_VORIG4  = N3_VORIG4 , @nN3_VORIG5  = N3_VORIG5 
     , @nN3_AMPLIA1  = N3_AMPLIA1 , @nN3_AMPLIA2  = N3_AMPLIA2 , @nN3_AMPLIA3  = N3_AMPLIA3 , @nN3_AMPLIA4  = N3_AMPLIA4 
     , @nN3_AMPLIA5  = N3_AMPLIA5 , @nN3_VRDACM1  = N3_VRDACM1 , @nN3_VRDACM2  = N3_VRDACM2 , @nN3_VRDACM3  = N3_VRDACM3 
     , @nN3_VRDACM4  = N3_VRDACM4 , @nN3_VRDACM5  = N3_VRDACM5 , @nN3_VRCACM1  = N3_VRCACM1 , @nN3_VRCDA1  = N3_VRCDA1 , 
          @cN3_TPDEPR  = N3_TPDEPR , @nN3_VMXDEPR  = N3_VMXDEPR , @nN3_VLSALV1  = N3_VLSALV1 
     FROM SN3010 
     WHERE R_E_C_N_O_  = @IN_RECNO 
   IF @cN3_TPDEPR  = 'A' 
   BEGIN 
      SET @cAux  = 'FNI' 
      SET @cFilial_AUX  = ' ' 
      EXEC XFILIAL_11_01 @cAux , @cFilial_AUX , @cFilial_FNI output 
      SELECT @cFNI_TIPO  = FNI_TIPO 
        FROM FNI010 
        WHERE FNI_FILIAL  = @cFilial_FNI  and FNI_CODIND  = @IN_CODIND  and FNI_STATUS  = '1'  and D_E_L_E_T_  = ' ' 
      IF @cFNI_TIPO  = '2' 
      BEGIN 
         IF @nTxDep1  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
            BEGIN 
               SET @nValDepr1  =  ( ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) ) 
                  * @nTxDep1 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
                 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
               END 
            END 
         END 
         IF @nTxDep2  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
            BEGIN 
               SET @nValDepr2  =  ( ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) )  * @nTxDep2 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
               END 
            END 
         END 
         IF @nTxDep3  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
            BEGIN 
               SET @nValDepr3  =  ( ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) )  * @nTxDep3 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
               END 
            END 
         END 
         IF @nTxDep4  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
            BEGIN 
               SET @nValDepr4  =  ( ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) )  * @nTxDep4 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
               END 
            END 
         END 
         IF @nTxDep5  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
            BEGIN 
               SET @nValDepr5  =  ( ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) )  * @nTxDep5 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
               END 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @nTxDep1  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
            BEGIN 
               SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  * @nTxDep1 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
                 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
               END 
            END 
         END 
         IF @nTxDep2  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
            BEGIN 
               SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  * @nTxDep2 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
               END 
            END 
         END 
         IF @nTxDep3  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
            BEGIN 
               SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  * @nTxDep3 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
               END 
            END 
         END 
         IF @nTxDep4  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
            BEGIN 
               SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  * @nTxDep4 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
               END 
            END 
         END 
         IF @nTxDep5  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
            BEGIN 
               SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  * @nTxDep5 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
               END 
            END 
         END 
      END 
   END 
   SET @OUT_DEP1  = @nValDepr1 
   SET @OUT_DEP2  = @nValDepr2 
   SET @OUT_DEP3  = @nValDepr3 
   SET @OUT_DEP4  = @nValDepr4 
   SET @OUT_DEP5  = @nValDepr5 
END
GO

GO
--SqlScripter----[dbo].[ATF015_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATF015_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATF015_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATF015_11_02]
(
    @IN_TXDEP1 Float , 
    @IN_TXDEP2 Float , 
    @IN_TXDEP3 Float , 
    @IN_TXDEP4 Float , 
    @IN_TXDEP5 Float , 
    @IN_RECNO Integer , 
    @IN_CODIND Char( 08 ) , 
    @OUT_DEP1 Float  output , 
    @OUT_DEP2 Float  output , 
    @OUT_DEP3 Float  output , 
    @OUT_DEP4 Float  output , 
    @OUT_DEP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @nValDepr1 Float
DECLARE @nValDepr2 Float
DECLARE @nValDepr3 Float
DECLARE @nValDepr4 Float
DECLARE @nValDepr5 Float
DECLARE @nTxDep1 Float
DECLARE @nTxDep2 Float
DECLARE @nTxDep3 Float
DECLARE @nTxDep4 Float
DECLARE @nTxDep5 Float
DECLARE @nDiferenca Float
DECLARE @nN3_VORIG1 Float
DECLARE @nN3_VORIG2 Float
DECLARE @nN3_VORIG3 Float
DECLARE @nN3_VORIG4 Float
DECLARE @nN3_VORIG5 Float
DECLARE @nN3_AMPLIA1 Float
DECLARE @nN3_AMPLIA2 Float
DECLARE @nN3_AMPLIA3 Float
DECLARE @nN3_AMPLIA4 Float
DECLARE @nN3_AMPLIA5 Float
DECLARE @nN3_VRDACM1 Float
DECLARE @nN3_VRDACM2 Float
DECLARE @nN3_VRDACM3 Float
DECLARE @nN3_VRDACM4 Float
DECLARE @nN3_VRDACM5 Float
DECLARE @nN3_VRCACM1 Float
DECLARE @nN3_VRCDA1 Float
DECLARE @nN3_VMXDEPR Float
DECLARE @nN3_VLSALV1 Float
DECLARE @nSalvAux Float
DECLARE @nVmxDepr Float
DECLARE @nPercent Float
DECLARE @cN3_TPDEPR Char( 1)
DECLARE @cFNI_TIPO Char( 01 )
DECLARE @cFilial_FNI Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_AUX Char( 2)
BEGIN
   SET @nValDepr1  = 0 
   SET @nValDepr2  = 0 
   SET @nValDepr3  = 0 
   SET @nValDepr4  = 0 
   SET @nValDepr5  = 0 
   SET @nSalvAux  = 0 
   SET @nVmxDepr  = 0 
   SET @nTxDep1  = @IN_TXDEP1 
   SET @nTxDep2  = @IN_TXDEP2 
   SET @nTxDep3  = @IN_TXDEP3 
   SET @nTxDep4  = @IN_TXDEP4 
   SET @nTxDep5  = @IN_TXDEP5 
   SET @nN3_VMXDEPR  = 0 
   SET @nN3_VLSALV1  = 0 
   SELECT @nN3_VORIG1  = N3_VORIG1 , @nN3_VORIG2  = N3_VORIG2 , @nN3_VORIG3  = N3_VORIG3 , @nN3_VORIG4  = N3_VORIG4 , @nN3_VORIG5  = N3_VORIG5 
     , @nN3_AMPLIA1  = N3_AMPLIA1 , @nN3_AMPLIA2  = N3_AMPLIA2 , @nN3_AMPLIA3  = N3_AMPLIA3 , @nN3_AMPLIA4  = N3_AMPLIA4 
     , @nN3_AMPLIA5  = N3_AMPLIA5 , @nN3_VRDACM1  = N3_VRDACM1 , @nN3_VRDACM2  = N3_VRDACM2 , @nN3_VRDACM3  = N3_VRDACM3 
     , @nN3_VRDACM4  = N3_VRDACM4 , @nN3_VRDACM5  = N3_VRDACM5 , @nN3_VRCACM1  = N3_VRCACM1 , @nN3_VRCDA1  = N3_VRCDA1 , 
          @cN3_TPDEPR  = N3_TPDEPR , @nN3_VMXDEPR  = N3_VMXDEPR , @nN3_VLSALV1  = N3_VLSALV1 
     FROM SN3030 
     WHERE R_E_C_N_O_  = @IN_RECNO 
   IF @cN3_TPDEPR  = 'A' 
   BEGIN 
      SET @cAux  = 'FNI' 
      SET @cFilial_AUX  = ' ' 
      EXEC XFILIAL_11_02 @cAux , @cFilial_AUX , @cFilial_FNI output 
      SELECT @cFNI_TIPO  = FNI_TIPO 
        FROM FNI020 
        WHERE FNI_FILIAL  = @cFilial_FNI  and FNI_CODIND  = @IN_CODIND  and FNI_STATUS  = '1'  and D_E_L_E_T_  = ' ' 
      IF @cFNI_TIPO  = '2' 
      BEGIN 
         IF @nTxDep1  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
            BEGIN 
               SET @nValDepr1  =  ( ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) ) 
                  * @nTxDep1 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
                 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
               END 
            END 
         END 
         IF @nTxDep2  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
            BEGIN 
               SET @nValDepr2  =  ( ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) )  * @nTxDep2 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
               END 
            END 
         END 
         IF @nTxDep3  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
            BEGIN 
               SET @nValDepr3  =  ( ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) )  * @nTxDep3 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
               END 
            END 
         END 
         IF @nTxDep4  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
            BEGIN 
               SET @nValDepr4  =  ( ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) )  * @nTxDep4 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
               END 
            END 
         END 
         IF @nTxDep5  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
            BEGIN 
               SET @nValDepr5  =  ( ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) )  * @nTxDep5 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
               END 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @nTxDep1  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 ) < ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )
            BEGIN 
               SET @nValDepr1  =  ( (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  * @nTxDep1 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 ) -  (ABS ( @nValDepr1 ) + ABS ( @nN3_VRDACM1  + @nN3_VRCDA1 
                 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr1  =  (@nN3_VORIG1  + @nN3_VRCACM1  + @nN3_AMPLIA1 )  -  (@nN3_VRDACM1  + @nN3_VRCDA1 ) 
               END 
            END 
         END 
         IF @nTxDep2  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM2 ) < ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 )
            BEGIN 
               SET @nValDepr2  =  ( (@nN3_VORIG2  + @nN3_AMPLIA2 )  * @nTxDep2 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG2  + @nN3_AMPLIA2 ) -  (ABS ( @nValDepr2 ) + ABS ( @nN3_VRDACM2 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr2  =  (@nN3_VORIG2  + @nN3_AMPLIA2 )  -  (@nN3_VRDACM2 ) 
               END 
            END 
         END 
         IF @nTxDep3  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM3 ) < ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 )
            BEGIN 
               SET @nValDepr3  =  ( (@nN3_VORIG3  + @nN3_AMPLIA3 )  * @nTxDep3 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG3  + @nN3_AMPLIA3 ) -  (ABS ( @nValDepr3 ) + ABS ( @nN3_VRDACM3 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr3  =  (@nN3_VORIG3  + @nN3_AMPLIA3 )  -  (@nN3_VRDACM3 ) 
               END 
            END 
         END 
         IF @nTxDep4  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM4 ) < ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 )
            BEGIN 
               SET @nValDepr4  =  ( (@nN3_VORIG4  + @nN3_AMPLIA4 )  * @nTxDep4 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG4  + @nN3_AMPLIA4 ) -  (ABS ( @nValDepr4 ) + ABS ( @nN3_VRDACM4 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr4  =  (@nN3_VORIG4  + @nN3_AMPLIA4 )  -  (@nN3_VRDACM4 ) 
               END 
            END 
         END 
         IF @nTxDep5  != 0 
         BEGIN 
            IF ABS ( @nN3_VRDACM5 ) < ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 )
            BEGIN 
               SET @nValDepr5  =  ( (@nN3_VORIG5  + @nN3_AMPLIA5 )  * @nTxDep5 ) 
               SET @nDiferenca  = ABS ( @nN3_VORIG5  + @nN3_AMPLIA5 ) -  (ABS ( @nValDepr5 ) + ABS ( @nN3_VRDACM5 )) 
               IF  (@nDiferenca )  <= 0 
               BEGIN 
                  SET @nValDepr5  =  (@nN3_VORIG5  + @nN3_AMPLIA5 )  -  (@nN3_VRDACM5 ) 
               END 
            END 
         END 
      END 
   END 
   SET @OUT_DEP1  = @nValDepr1 
   SET @OUT_DEP2  = @nValDepr2 
   SET @OUT_DEP3  = @nValDepr3 
   SET @OUT_DEP4  = @nValDepr4 
   SET @OUT_DEP5  = @nValDepr5 
END
GO

GO
--SqlScripter----[dbo].[ATFCONTA_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFCONTA_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFCONTA_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFCONTA_01]
(
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_FILIAL Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @OUT_CONTA Char( 20)  output ) AS
 
-- Declaration of variables
DECLARE @cConta Char( 20)
BEGIN
   SET @cConta  = @IN_CONTA 
   SET @OUT_CONTA  = @cConta 
END
GO

GO
--SqlScripter----[dbo].[ATFCONTA_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFCONTA_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFCONTA_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFCONTA_02]
(
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_FILIAL Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @OUT_CONTA Char( 20)  output ) AS
 
-- Declaration of variables
DECLARE @cConta Char( 20)
BEGIN
   SET @cConta  = @IN_CONTA 
   SET @OUT_CONTA  = @cConta 
END
GO

GO
--SqlScripter----[dbo].[ATFGRSLD_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFGRSLD_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFGRSLD_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFGRSLD_01]
(
    @IN_TIPOCNT Char( 01 ) , 
    @IN_SINAL Char( 01 ) , 
    @IN_TABELA Char( 03 ) , 
    @IN_RECNO Integer ) AS
 
-- Declaration of variables
DECLARE @iRecno Integer
BEGIN
   SET @iRecno  = @IN_RECNO 
END
GO

GO
--SqlScripter----[dbo].[ATFGRSLD_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFGRSLD_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFGRSLD_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFGRSLD_02]
(
    @IN_TIPOCNT Char( 01 ) , 
    @IN_SINAL Char( 01 ) , 
    @IN_TABELA Char( 03 ) , 
    @IN_RECNO Integer ) AS
 
-- Declaration of variables
DECLARE @iRecno Integer
BEGIN
   SET @iRecno  = @IN_RECNO 
END
GO

GO
--SqlScripter----[dbo].[ATFSINAL_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFSINAL_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFSINAL_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFSINAL_01]
(
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_FILIAL Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_PROGRAMA Char( 10 ) , 
    @OUT_SINAL Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cSinal Char( 01 )
BEGIN
   SET @cSinal  = @IN_SINAL 
   SET @OUT_SINAL  = @cSinal 
END
GO

GO
--SqlScripter----[dbo].[ATFSINAL_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFSINAL_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFSINAL_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFSINAL_02]
(
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_FILIAL Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_PROGRAMA Char( 10 ) , 
    @OUT_SINAL Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cSinal Char( 01 )
BEGIN
   SET @cSinal  = @IN_SINAL 
   SET @OUT_SINAL  = @cSinal 
END
GO

GO
--SqlScripter----[dbo].[ATFTIPO_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFTIPO_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFTIPO_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFTIPO_01]
(
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_FILIAL Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_PROGRAMA Char( 10 ) , 
    @OUT_TIPO Char( 1)  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 01 )
BEGIN
   SET @cTipo  = @IN_TIPOCNT 
   SET @OUT_TIPO  = @cTipo 
END
GO

GO
--SqlScripter----[dbo].[ATFTIPO_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[ATFTIPO_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[ATFTIPO_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[ATFTIPO_02]
(
    @IN_CONTA Char( 20) , 
    @IN_DATA Char( 08 ) , 
    @IN_TIPO Char( 1) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_SINAL Char( 01 ) , 
    @IN_TAXA Float , 
    @IN_SUBCTA Char( 9) , 
    @IN_FILIAL Char( 2) , 
    @IN_CLVL Char( 9) , 
    @IN_CUSTO Char( 9) , 
    @IN_TIPOCNT Char( 1) , 
    @IN_PROGRAMA Char( 10 ) , 
    @OUT_TIPO Char( 1)  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 01 )
BEGIN
   SET @cTipo  = @IN_TIPOCNT 
   SET @OUT_TIPO  = @cTipo 
END
GO

GO
--SqlScripter----[dbo].[CT220DOC_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CT220DOC_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CT220DOC_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CT220DOC_03_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_CT2_DATA Char( 08 ) , 
    @IN_CT2_LINHA Char( 3) , 
    @IN_CT2_TPSALD Char( 1) , 
    @IN_CT2_EMPORI Char( 2) , 
    @IN_CT2_FILORI Char( 2) , 
    @IN_CT2_MOEDLC Char( 2) , 
    @IN_CT2_LOTE Char( 6) , 
    @IN_CT2_SBLOTE Char( 3) , 
    @IN_CT2_DOC Char( 6) , 
    @OUT_CT2_LOTE Char( 6)  output , 
    @OUT_CT2_SBLOTE Char( 3)  output , 
    @OUT_CT2_DOC Char( 6)  output ) AS
 
-- Declaration of variables
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
BEGIN
   SET @cCT2_LOTE  = @IN_CT2_LOTE 
   SET @cCT2_SBLOTE  = @IN_CT2_SBLOTE 
   SET @cCT2_DOC  = @IN_CT2_DOC 
   SET @OUT_CT2_LOTE  = @cCT2_LOTE 
   SET @OUT_CT2_SBLOTE  = @cCT2_SBLOTE 
   SET @OUT_CT2_DOC  = @cCT2_DOC 
END
GO

GO
--SqlScripter----[dbo].[CT220DOC_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CT220DOC_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CT220DOC_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CT220DOC_03_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_CT2_DATA Char( 08 ) , 
    @IN_CT2_LINHA Char( 3) , 
    @IN_CT2_TPSALD Char( 1) , 
    @IN_CT2_EMPORI Char( 2) , 
    @IN_CT2_FILORI Char( 2) , 
    @IN_CT2_MOEDLC Char( 2) , 
    @IN_CT2_LOTE Char( 6) , 
    @IN_CT2_SBLOTE Char( 3) , 
    @IN_CT2_DOC Char( 6) , 
    @OUT_CT2_LOTE Char( 6)  output , 
    @OUT_CT2_SBLOTE Char( 3)  output , 
    @OUT_CT2_DOC Char( 6)  output ) AS
 
-- Declaration of variables
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
BEGIN
   SET @cCT2_LOTE  = @IN_CT2_LOTE 
   SET @cCT2_SBLOTE  = @IN_CT2_SBLOTE 
   SET @cCT2_DOC  = @IN_CT2_DOC 
   SET @OUT_CT2_LOTE  = @cCT2_LOTE 
   SET @OUT_CT2_SBLOTE  = @cCT2_SBLOTE 
   SET @OUT_CT2_DOC  = @cCT2_DOC 
END
GO

GO
--SqlScripter----[dbo].[CTB001_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB001_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB001_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB001_02_01]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATAINI Char( 08 ) , 
    @IN_DATAFIM Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_OPERACAO Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CV1 Char( 2)
DECLARE @cCV1FilDe Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cCV1_FILIAL Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux2 Char( 01 )
DECLARE @cAux3 Char( 01 )
DECLARE @cDataIni Char( 08 )
DECLARE @cDataFim Char( 08 )
DECLARE @cCV1_CT1INI Char( 20)
DECLARE @cCV1_CT1FIM Char( 20)
DECLARE @cCV1_CTTINI Char( 9)
DECLARE @cCV1_CTTFIM Char( 9)
DECLARE @cCV1_CTDINI Char( 9)
DECLARE @cCV1_CTDFIM Char( 9)
DECLARE @cCV1_CTHINI Char( 9)
DECLARE @cCV1_CTHFIM Char( 9)
DECLARE @cCV1_MOEDA Char( 2)
DECLARE @cCV1_DTFIM Char( 8)
DECLARE @nCV1_VALOR Float
DECLARE @cCV1_STATUS Char( 1)
DECLARE @cData Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cDataAnt Char( 08 )
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iLinhas Integer
BEGIN
   IF @IN_FILIALDE  = ' ' 
   BEGIN 
      SET @cCV1FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCV1FilDe  = @IN_FILIALDE 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_02_01 @cAux , @cCV1FilDe , @cFilial_CV1 output 
   SET @iMinRecno  = 0 
   SET @iMaxRecno  = 0 
   SET @iLinhas  = 1024 
   SET @cAux2  = '0' 
   SELECT @cDataIni  = COALESCE ( MIN ( CV1_DTFIM ), '0' ), @cDataFim  = COALESCE ( MAX ( CV1_DTFIM ), '1' )
     FROM CV1010 
     WHERE CV1_FILIAL  between @cFilial_CV1 and @IN_FILIALATE  and D_E_L_E_T_  = ' ' 
   IF  ( (@cDataIni  = '0' )  and  (@cDataFim  = '1' ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @cDataIni  = SUBSTRING ( @IN_DATAINI , 1 , 6 ) + '01' 
      EXEC LASTDAY_02_01 @IN_DATAFIM , @cDataF output 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ0 output 
      EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ0 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
             @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ1 output 
      EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ1 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
             @OUT_RESULTADO output 
      IF @IN_LCUSTO  = '1' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ2 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ2 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ3 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ3 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      IF @IN_LITEM  = '1' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ4 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ4 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ5 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ5 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      IF @IN_LCLVL  = '1' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ6 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ6 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ7 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ7 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ8 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ8 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_02_01 @cAux , @IN_FILIALDE , @cFilial_CQ9 output 
         EXEC CTB012_02_01 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ9 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      SET @cDataAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cItemAnt  = ' ' 
      SET @cClvlAnt  = ' ' 
       
      -- Cursor declaration Ctb390Rep
      DECLARE Ctb390Rep insensitive  CURSOR FOR 
      SELECT CV1_FILIAL , CV1_CT1INI , CV1_CT1FIM , CV1_CTTINI , CV1_CTTFIM , CV1_CTDINI , CV1_CTDFIM , CV1_CTHINI , CV1_CTHFIM , 
             CV1_MOEDA , CV1_DTFIM , CV1_STATUS , SUM(CV1_VALOR )
        FROM CV1010 CV1
        WHERE CV1.CV1_FILIAL  between @cFilial_CV1 and @IN_FILIALATE  and CV1.CV1_DTFIM  between @IN_DATAINI and @IN_DATAFIM 
         and CV1.CV1_STATUS  = '2'  and CV1.CV1_VALOR  != 0  and  ( ( (CV1.CV1_MOEDA  = @IN_MOEDA )  and  (@IN_LMOEDAESP  = '1' 
        ) )  or  (@IN_LMOEDAESP  = '0' ) )  and CV1.D_E_L_E_T_  = ' ' 
        GROUP BY CV1_FILIAL , CV1_CT1INI , CV1_CT1FIM , CV1_CTTINI , CV1_CTTFIM , CV1_CTDINI , CV1_CTDFIM , CV1_CTHINI , 
             CV1_CTHFIM , CV1_MOEDA , CV1_DTFIM , CV1_STATUS 
        ORDER BY CV1_FILIAL , CV1_MOEDA , CV1_DTFIM , CV1_CTHINI , CV1_CTDINI , CV1_CTTINI , CV1_CT1INI 
      FOR READ ONLY 
       
      OPEN Ctb390Rep
      FETCH Ctb390Rep 
       INTO @cCV1_FILIAL , @cCV1_CT1INI , @cCV1_CT1FIM , @cCV1_CTTINI , @cCV1_CTTFIM , @cCV1_CTDINI , @cCV1_CTDFIM , @cCV1_CTHINI , 
             @cCV1_CTHFIM , @cCV1_MOEDA , @cCV1_DTFIM , @cCV1_STATUS , @nCV1_VALOR 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         SET @cAux3  = '3' 
         EXEC CTB003_02_01 @cCV1_FILIAL , @cCV1_CTHINI , @cCV1_CTHFIM , @cCV1_CTDINI , @cCV1_CTDFIM , @cCV1_CTTINI , @cCV1_CTTFIM , 
                @cCV1_CT1INI , @cCV1_CT1FIM , @cCV1_MOEDA , @cCV1_DTFIM , @nCV1_VALOR , @IN_OPERACAO , @cAux3 , @cDataAnt , 
                @cContaAnt , @cCustoAnt , @cItemAnt , @cClvlAnt , @OUT_RESULTADO output 
         SET @cDataAnt  = @cCV1_DTFIM 
         SET @cContaAnt  = @cCV1_CT1INI 
         SET @cCustoAnt  = @cCV1_CTTINI 
         SET @cItemAnt  = @cCV1_CTDINI 
         SET @cClvlAnt  = @cCV1_CTHINI 
         FETCH Ctb390Rep 
          INTO @cCV1_FILIAL , @cCV1_CT1INI , @cCV1_CT1FIM , @cCV1_CTTINI , @cCV1_CTTFIM , @cCV1_CTDINI , @cCV1_CTDFIM , @cCV1_CTHINI , 
                @cCV1_CTHFIM , @cCV1_MOEDA , @cCV1_DTFIM , @cCV1_STATUS , @nCV1_VALOR 
      END 
      CLOSE Ctb390Rep
      DEALLOCATE Ctb390Rep
      IF  (@IN_LCUSTO  = '1' ) 
      BEGIN 
         SET @iMinRecno  = 0 
         SET @iMaxRecno  = 0 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
           WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0  and CQ2_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ2010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0 
                        and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ2010  WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0 
                        and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ2010  WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0 
                        and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0  and CQ2_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0  and CQ3_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ3010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0 
                        and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ3010  WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0 
                        and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ3010  WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0 
                        and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ3010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0  and CQ3_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
      IF  (@IN_LITEM  = '1' ) 
      BEGIN 
         SET @iMinRecno  = 0 
         SET @iMaxRecno  = 0 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
           WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0  and CQ4_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ4010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0 
                        and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ4010  WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0 
                        and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ4010  WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0 
                        and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0  and CQ4_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0  and CQ5_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ5010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0 
                        and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ5010  WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0 
                        and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ5010  WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0 
                        and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ5010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0  and CQ5_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
      IF  (@IN_LCLVL  = '1' ) 
      BEGIN 
         SET @iMinRecno  = 0 
         SET @iMaxRecno  = 0 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
           WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0  and CQ6_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ6010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0 
                        and CQ6_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ6010  WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0 
                        and CQ6_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ6010  WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0 
                        and CQ6_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0  and CQ6_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0  and CQ7_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ7010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0 
                        and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ7010  WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0 
                        and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ7010  WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0 
                        and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ7010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0  and CQ7_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0  and CQ8_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ8010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0 
                        and CQ8_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ8010  WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0 
                        and CQ8_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ8010  WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0 
                        and CQ8_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0  and CQ8_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0  and CQ9_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ9010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0 
                        and CQ9_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ9010  WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0 
                        and CQ9_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ9010  WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0 
                        and CQ9_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0  and CQ9_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB001_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB001_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB001_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB001_02_02]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATAINI Char( 08 ) , 
    @IN_DATAFIM Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_OPERACAO Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CV1 Char( 2)
DECLARE @cCV1FilDe Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cCV1_FILIAL Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux2 Char( 01 )
DECLARE @cAux3 Char( 01 )
DECLARE @cDataIni Char( 08 )
DECLARE @cDataFim Char( 08 )
DECLARE @cCV1_CT1INI Char( 20)
DECLARE @cCV1_CT1FIM Char( 20)
DECLARE @cCV1_CTTINI Char( 9)
DECLARE @cCV1_CTTFIM Char( 9)
DECLARE @cCV1_CTDINI Char( 9)
DECLARE @cCV1_CTDFIM Char( 9)
DECLARE @cCV1_CTHINI Char( 9)
DECLARE @cCV1_CTHFIM Char( 9)
DECLARE @cCV1_MOEDA Char( 2)
DECLARE @cCV1_DTFIM Char( 8)
DECLARE @nCV1_VALOR Float
DECLARE @cCV1_STATUS Char( 1)
DECLARE @cData Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cDataAnt Char( 08 )
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iLinhas Integer
BEGIN
   IF @IN_FILIALDE  = ' ' 
   BEGIN 
      SET @cCV1FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCV1FilDe  = @IN_FILIALDE 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_02_02 @cAux , @cCV1FilDe , @cFilial_CV1 output 
   SET @iMinRecno  = 0 
   SET @iMaxRecno  = 0 
   SET @iLinhas  = 1024 
   SET @cAux2  = '0' 
   SELECT @cDataIni  = COALESCE ( MIN ( CV1_DTFIM ), '0' ), @cDataFim  = COALESCE ( MAX ( CV1_DTFIM ), '1' )
     FROM CV1030 
     WHERE CV1_FILIAL  between @cFilial_CV1 and @IN_FILIALATE  and D_E_L_E_T_  = ' ' 
   IF  ( (@cDataIni  = '0' )  and  (@cDataFim  = '1' ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @cDataIni  = SUBSTRING ( @IN_DATAINI , 1 , 6 ) + '01' 
      EXEC LASTDAY_02_02 @IN_DATAFIM , @cDataF output 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ0 output 
      EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ0 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
             @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ1 output 
      EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ1 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
             @OUT_RESULTADO output 
      IF @IN_LCUSTO  = '1' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ2 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ2 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ3 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ3 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      IF @IN_LITEM  = '1' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ4 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ4 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ5 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ5 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      IF @IN_LCLVL  = '1' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ6 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ6 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ7 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ7 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ8 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ8 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_02_02 @cAux , @IN_FILIALDE , @cFilial_CQ9 output 
         EXEC CTB012_02_02 @cAux , @IN_LMOEDAESP , @IN_MOEDA , @cAux2 , @cFilial_CQ9 , @IN_FILIALATE , @IN_DATAINI , @IN_DATAFIM , 
                @OUT_RESULTADO output 
      END 
      SET @cDataAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cItemAnt  = ' ' 
      SET @cClvlAnt  = ' ' 
       
      -- Cursor declaration Ctb390Rep
      DECLARE Ctb390Rep insensitive  CURSOR FOR 
      SELECT CV1_FILIAL , CV1_CT1INI , CV1_CT1FIM , CV1_CTTINI , CV1_CTTFIM , CV1_CTDINI , CV1_CTDFIM , CV1_CTHINI , CV1_CTHFIM , 
             CV1_MOEDA , CV1_DTFIM , CV1_STATUS , SUM(CV1_VALOR )
        FROM CV1030 CV1
        WHERE CV1.CV1_FILIAL  between @cFilial_CV1 and @IN_FILIALATE  and CV1.CV1_DTFIM  between @IN_DATAINI and @IN_DATAFIM 
         and CV1.CV1_STATUS  = '2'  and CV1.CV1_VALOR  != 0  and  ( ( (CV1.CV1_MOEDA  = @IN_MOEDA )  and  (@IN_LMOEDAESP  = '1' 
        ) )  or  (@IN_LMOEDAESP  = '0' ) )  and CV1.D_E_L_E_T_  = ' ' 
        GROUP BY CV1_FILIAL , CV1_CT1INI , CV1_CT1FIM , CV1_CTTINI , CV1_CTTFIM , CV1_CTDINI , CV1_CTDFIM , CV1_CTHINI , 
             CV1_CTHFIM , CV1_MOEDA , CV1_DTFIM , CV1_STATUS 
        ORDER BY CV1_FILIAL , CV1_MOEDA , CV1_DTFIM , CV1_CTHINI , CV1_CTDINI , CV1_CTTINI , CV1_CT1INI 
      FOR READ ONLY 
       
      OPEN Ctb390Rep
      FETCH Ctb390Rep 
       INTO @cCV1_FILIAL , @cCV1_CT1INI , @cCV1_CT1FIM , @cCV1_CTTINI , @cCV1_CTTFIM , @cCV1_CTDINI , @cCV1_CTDFIM , @cCV1_CTHINI , 
             @cCV1_CTHFIM , @cCV1_MOEDA , @cCV1_DTFIM , @cCV1_STATUS , @nCV1_VALOR 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         SET @cAux3  = '3' 
         EXEC CTB003_02_02 @cCV1_FILIAL , @cCV1_CTHINI , @cCV1_CTHFIM , @cCV1_CTDINI , @cCV1_CTDFIM , @cCV1_CTTINI , @cCV1_CTTFIM , 
                @cCV1_CT1INI , @cCV1_CT1FIM , @cCV1_MOEDA , @cCV1_DTFIM , @nCV1_VALOR , @IN_OPERACAO , @cAux3 , @cDataAnt , 
                @cContaAnt , @cCustoAnt , @cItemAnt , @cClvlAnt , @OUT_RESULTADO output 
         SET @cDataAnt  = @cCV1_DTFIM 
         SET @cContaAnt  = @cCV1_CT1INI 
         SET @cCustoAnt  = @cCV1_CTTINI 
         SET @cItemAnt  = @cCV1_CTDINI 
         SET @cClvlAnt  = @cCV1_CTHINI 
         FETCH Ctb390Rep 
          INTO @cCV1_FILIAL , @cCV1_CT1INI , @cCV1_CT1FIM , @cCV1_CTTINI , @cCV1_CTTFIM , @cCV1_CTDINI , @cCV1_CTDFIM , @cCV1_CTHINI , 
                @cCV1_CTHFIM , @cCV1_MOEDA , @cCV1_DTFIM , @cCV1_STATUS , @nCV1_VALOR 
      END 
      CLOSE Ctb390Rep
      DEALLOCATE Ctb390Rep
      IF  (@IN_LCUSTO  = '1' ) 
      BEGIN 
         SET @iMinRecno  = 0 
         SET @iMaxRecno  = 0 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
           WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0  and CQ2_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ2020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0 
                        and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ2020  WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0 
                        and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ2020  WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0 
                        and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DEBITO  = 0  and CQ2_CREDIT  = 0  and CQ2_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0  and CQ3_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ3020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0 
                        and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ3020  WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0 
                        and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ3020  WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0 
                        and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ3020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DEBITO  = 0  and CQ3_CREDIT  = 0  and CQ3_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
      IF  (@IN_LITEM  = '1' ) 
      BEGIN 
         SET @iMinRecno  = 0 
         SET @iMaxRecno  = 0 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
           WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0  and CQ4_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ4020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0 
                        and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ4020  WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0 
                        and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ4020  WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0 
                        and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DEBITO  = 0  and CQ4_CREDIT  = 0  and CQ4_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0  and CQ5_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ5020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0 
                        and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ5020  WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0 
                        and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ5020  WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0 
                        and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ5020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DEBITO  = 0  and CQ5_CREDIT  = 0  and CQ5_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
      IF  (@IN_LCLVL  = '1' ) 
      BEGIN 
         SET @iMinRecno  = 0 
         SET @iMaxRecno  = 0 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
           WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0  and CQ6_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ6020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0 
                        and CQ6_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ6020  WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0 
                        and CQ6_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ6020  WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0 
                        and CQ6_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DEBITO  = 0  and CQ6_CREDIT  = 0  and CQ6_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0  and CQ7_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ7020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0 
                        and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ7020  WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0 
                        and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ7020  WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0 
                        and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ7020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DEBITO  = 0  and CQ7_CREDIT  = 0  and CQ7_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0  and CQ8_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ8020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0 
                        and CQ8_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ8020  WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0 
                        and CQ8_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ8020  WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0 
                        and CQ8_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DEBITO  = 0  and CQ8_CREDIT  = 0  and CQ8_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
         SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0  and CQ9_TPSALD  = '0' 
            and D_E_L_E_T_  = ' ' 
         IF @iMinRecno  != 0 
         BEGIN 
            WHILE ( (@iMinRecno  <= @iMaxRecno ) )
            BEGIN
               begin tran 
               IF @IN_MVCTB190D  = '1' 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ9020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0 
                        and CQ9_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                     DELETE FROM CQ9020  WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0 
                        and CQ9_TPSALD  = '0'  and D_E_L_E_T_  = '*'  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ9020  WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0 
                        and CQ9_TPSALD  = '0'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
                       
                  END 
               END 
               ELSE 
               BEGIN 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                   WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DEBITO  = 0  and CQ9_CREDIT  = 0  and CQ9_TPSALD  = '0' 
                     and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas 
               END 
               commit tran 
               SET @iMinRecno  = @iMinRecno  + @iLinhas 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB002_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB002_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB002_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB002_01_01]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_SOALGUNS Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CQA Char( 2)
DECLARE @cCT2Fil Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
BEGIN
   IF @IN_FILIALDE  = ' ' 
   BEGIN 
      SET @cFilial_CT2  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CT2  = @IN_FILIALDE 
   END 
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ0 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ0010 
                    WITH (ROWLOCK) 
                     SET CQ0_DEBITO  = 0 , CQ0_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                     and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ0010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ0010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ0010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ1 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ1010 
                    WITH (ROWLOCK) 
                     SET CQ1_DEBITO  = 0 , CQ1_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                     and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ1010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ1010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ1010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ1010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ2 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO 
         and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = 0 , CQ2_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                     and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ2010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ2010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ2010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ3 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO 
         and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ3010 
                    WITH (ROWLOCK) 
                     SET CQ3_DEBITO  = 0 , CQ3_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                     and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ3010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ3010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ3010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                  and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ4 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = 0 , CQ4_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                     and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ4010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ4010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ4010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ5 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO 
         and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ5010 
                    WITH (ROWLOCK) 
                     SET CQ5_DEBITO  = 0 , CQ5_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                     and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ5010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ5010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ5010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ6 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = 0 , CQ6_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                     and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ6010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ6010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ6010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ7 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ7010 
                    WITH (ROWLOCK) 
                     SET CQ7_DEBITO  = 0 , CQ7_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                     and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ7010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ7010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ7010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = 0 , CQ8_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                     and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ8010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = 0 , CQ9_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                     and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ9010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                  and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE  and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CTC010 
                    WITH (ROWLOCK) 
                     SET CTC_DEBITO  = 0 , CTC_CREDIT  = 0 , CTC_DIG  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                     and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CTC010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                  and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQA' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQA' 
      EXEC XFILIAL_01_01 @cAux , @cFilial_CT2 , @cFilial_CQA output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQA010 
        WHERE CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
         and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQA010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
                     and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  DELETE FROM CQA010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQA010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQA010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB002_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB002_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB002_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB002_01_02]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_SOALGUNS Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CQA Char( 2)
DECLARE @cCT2Fil Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
BEGIN
   IF @IN_FILIALDE  = ' ' 
   BEGIN 
      SET @cFilial_CT2  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CT2  = @IN_FILIALDE 
   END 
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ0 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ0020 
                    WITH (ROWLOCK) 
                     SET CQ0_DEBITO  = 0 , CQ0_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                     and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ0020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ0020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ0020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ1 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ1020 
                    WITH (ROWLOCK) 
                     SET CQ1_DEBITO  = 0 , CQ1_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                     and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ1020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ1020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ1020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ1020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ2 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO 
         and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = 0 , CQ2_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                     and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ2020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ2020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ2020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ3 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO 
         and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ3020 
                    WITH (ROWLOCK) 
                     SET CQ3_DEBITO  = 0 , CQ3_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                     and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ3020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ3020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ3020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                  and CQ3_DATA  between @cDataI and @cDataF  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ4 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = 0 , CQ4_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                     and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ4020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ4020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ4020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ5 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO 
         and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ5020 
                    WITH (ROWLOCK) 
                     SET CQ5_DEBITO  = 0 , CQ5_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                     and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ5020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ5020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ5020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ6 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = 0 , CQ6_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                     and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ6020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ6020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ6020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ7 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ7020 
                    WITH (ROWLOCK) 
                     SET CQ7_DEBITO  = 0 , CQ7_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                     and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ7020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ7020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ7020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = 0 , CQ8_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                     and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ8020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cDataI  = @IN_DATADE 
      SET @cDataF  = @IN_DATAATE 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = 0 , CQ9_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                     and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ9020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                  and CQ9_DATA  between @cDataI and @cDataF  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE  and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CTC030 
                    WITH (ROWLOCK) 
                     SET CTC_DEBITO  = 0 , CTC_CREDIT  = 0 , CTC_DIG  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                     and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CTC030 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC030 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                  and CTC_DATA  between @cDataI and @cDataF  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQA' ) 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQA' 
      EXEC XFILIAL_01_02 @cAux , @cFilial_CT2 , @cFilial_CQA output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQA020 
        WHERE CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
         and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQA020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
                     and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  DELETE FROM CQA020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQA020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQA020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB002_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB002_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB002_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB002_03_01]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_SOALGUNS Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CQA Char( 2)
DECLARE @cCT2Fil Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
BEGIN
   IF @IN_FILIALDE  = ' ' 
   BEGIN 
      SET @cFilial_CT2  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CT2  = @IN_FILIALDE 
   END 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ0 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ0010 
                    WITH (ROWLOCK) 
                     SET CQ0_DEBITO  = 0 , CQ0_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                     and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ0010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ0010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ0010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ1 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ1010 
                    WITH (ROWLOCK) 
                     SET CQ1_DEBITO  = 0 , CQ1_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                     and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ1010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ1010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ1010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ1010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ2 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO 
         and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = 0 , CQ2_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                     and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ2010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ2010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ2010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ3 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO 
         and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ3010 
                    WITH (ROWLOCK) 
                     SET CQ3_DEBITO  = 0 , CQ3_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                     and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ3010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ3010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ3010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ4 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = 0 , CQ4_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                     and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ4010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ4010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ4010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ5 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO 
         and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ5010 
                    WITH (ROWLOCK) 
                     SET CQ5_DEBITO  = 0 , CQ5_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                     and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ5010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ5010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ5010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ6 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = 0 , CQ6_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                     and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ6010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ6010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ6010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ7 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ7010 
                    WITH (ROWLOCK) 
                     SET CQ7_DEBITO  = 0 , CQ7_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                     and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ7010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ7010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ7010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = 0 , CQ8_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                     and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ8010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = 0 , CQ9_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ9010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CTC010 
                    WITH (ROWLOCK) 
                     SET CTC_DEBITO  = 0 , CTC_CREDIT  = 0 , CTC_DIG  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CTC010 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQA' ) 
   BEGIN 
      SET @cAux  = 'CQA' 
      EXEC XFILIAL_03_01 @cAux , @cFilial_CT2 , @cFilial_CQA output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQA010 
        WHERE CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
         and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQA010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
                     and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  DELETE FROM CQA010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQA010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQA010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB002_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB002_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB002_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB002_03_02]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_SOALGUNS Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CQA Char( 2)
DECLARE @cCT2Fil Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
BEGIN
   IF @IN_FILIALDE  = ' ' 
   BEGIN 
      SET @cFilial_CT2  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CT2  = @IN_FILIALDE 
   END 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ0 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ0020 
                    WITH (ROWLOCK) 
                     SET CQ0_DEBITO  = 0 , CQ0_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                     and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ0020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ0020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ0020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                        and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  between @cFilial_CQ0 and @IN_FILIALATE 
                  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ1 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ1020 
                    WITH (ROWLOCK) 
                     SET CQ1_DEBITO  = 0 , CQ1_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                     and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ1020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ1020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ1020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                        and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ1020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  between @cFilial_CQ1 and @IN_FILIALATE 
                  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ2 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO 
         and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = 0 , CQ2_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                     and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ2020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ2020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ2020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                        and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  between @cFilial_CQ2 and @IN_FILIALATE 
                  and CQ2_DATA  between @cDataI and @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ3 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO 
         and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ3020 
                    WITH (ROWLOCK) 
                     SET CQ3_DEBITO  = 0 , CQ3_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                     and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ3020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ3020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ3020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                        and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILIALATE 
                  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ4 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = 0 , CQ4_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                     and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ4020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ4020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ4020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                        and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  between @cFilial_CQ4 and @IN_FILIALATE 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ5 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO 
         and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ5020 
                    WITH (ROWLOCK) 
                     SET CQ5_DEBITO  = 0 , CQ5_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                     and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ5020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ5020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ5020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                        and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILIALATE 
                  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ6 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = 0 , CQ6_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                     and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ6020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ6020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ6020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                        and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  between @cFilial_CQ6 and @IN_FILIALATE 
                  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ7 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ7020 
                    WITH (ROWLOCK) 
                     SET CQ7_DEBITO  = 0 , CQ7_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                     and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ7020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ7020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ7020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                        and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILIALATE 
                  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = 0 , CQ8_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                     and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ8020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                        and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILIALATE 
                  and CQ8_DATA  between @cDataI and @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = 0 , CQ9_CREDIT  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CQ9020 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                        and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILIALATE 
                  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF  (@IN_SOALGUNS  = '1' ) 
               BEGIN 
                  UPDATE CTC030 
                    WITH (ROWLOCK) 
                     SET CTC_DEBITO  = 0 , CTC_CREDIT  = 0 , CTC_DIG  = 0 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
               ELSE 
               BEGIN 
                  IF @IN_INTEGRIDADE  = '1' 
                  BEGIN 
                     UPDATE CTC030 
                       WITH (ROWLOCK) 
                        SET D_E_L_E_T_  = '*' 
                      WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                     DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
                  END 
                  ELSE 
                  BEGIN 
                     DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                        and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                        and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC030 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  between @cFilial_CTC and @IN_FILIALATE 
                  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQA' ) 
   BEGIN 
      SET @cAux  = 'CQA' 
      EXEC XFILIAL_03_02 @cAux , @cFilial_CT2 , @cFilial_CQA output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQA020 
        WHERE CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
         and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            Begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQA020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO 
                     and  ( (CQA_MOEDLC  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  DELETE FROM CQA020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQA020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                     and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQA020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQA_FILIAL  between @cFilial_CQA and @IN_FILIALATE 
                  and CQA_DATA  between @cDataI and @cDataF  and CQA_TPSALD  = @IN_TPSALDO  and  ( (CQA_MOEDLC  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB003_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB003_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB003_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB003_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTHINI Char( 9) , 
    @IN_CV1_CTHFIM Char( 9) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTDFIM Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_OPCAOX Char( 01 ) , 
    @IN_DATAANT Char( 08 ) , 
    @IN_CONTAANT Char( 20) , 
    @IN_CUSTOANT Char( 9) , 
    @IN_ITEMANT Char( 9) , 
    @IN_CLVLANT Char( 9) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CTH Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iFatorCTH Integer
DECLARE @iFatorCTD Integer
DECLARE @iFatorCTT Integer
DECLARE @cOpcaoX Char( 01 )
DECLARE @cCT1 Char( 01 )
DECLARE @cCTT Char( 01 )
DECLARE @cCTD Char( 01 )
DECLARE @cCTH Char( 01 )
DECLARE @OutRetorno Char( 01 )
BEGIN
   SET @OutRetorno  = '0' 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CTH' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTH output 
   SET @cAux  = 'CQ0' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ0 output 
   SET @cAux  = 'CQ2' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ2 output 
   SET @cAux  = 'CQ4' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ4 output 
   SET @cAux  = 'CQ6' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ6 output 
   IF  (@IN_OPCAOX  = ' ' ) 
   BEGIN 
      SET @cOpcaoX  = '3' 
   END 
   ELSE 
   BEGIN 
      SET @cOpcaoX  = @IN_OPCAOX 
   END 
   SET @iFatorCTH  = 1 
   SET @iFatorCTD  = 1 
   SET @iFatorCTT  = 1 
   SET @cCT1  = '0' 
   SET @cCTD  = '0' 
   SET @cCTH  = '0' 
   SET @cCTT  = '0' 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CTHINI  != ' '  or @IN_CV1_CTHFIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CTHINI  != ' ' 
      or @IN_CV1_CTHFIM  != ' '  or @IN_CV1_CTHINI  != ' '  or @IN_CV1_CTHFIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CTHINI  != ' ' 
      or @IN_CV1_CTHFIM  != ' ' ) ) 
   BEGIN 
      SET @cCTH  = '1' 
      SET @cAux  = 'CTH' 
      EXEC CTB011_02_01 @cFilial_CTH , @cAux , @IN_CV1_CTHINI , @IN_CV1_CTHFIM , @iFatorCTH output 
   END 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CTDINI  != ' '  or @IN_CV1_CTDFIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CTDINI  != ' ' 
      or @IN_CV1_CTDFIM  != ' '  or @IN_CV1_CTDINI  != ' '  or @IN_CV1_CTDFIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CTDINI  != ' ' 
      or @IN_CV1_CTDFIM  != ' ' ) ) 
   BEGIN 
      SET @cCTD  = '1' 
      SET @cAux  = 'CTD' 
      EXEC CTB011_02_01 @cFilial_CTD , @cAux , @IN_CV1_CTDINI , @IN_CV1_CTDFIM , @iFatorCTD output 
   END 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CTTINI  != ' '  or @IN_CV1_CTTFIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CTTINI  != ' ' 
      or @IN_CV1_CTTFIM  != ' '  or @IN_CV1_CTTINI  != ' '  or @IN_CV1_CTTFIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CTTINI  != ' ' 
      or @IN_CV1_CTTFIM  != ' ' ) ) 
   BEGIN 
      SET @cCTT  = '1' 
      SET @cAux  = 'CTT' 
      EXEC CTB011_02_01 @cFilial_CTT , @cAux , @IN_CV1_CTTINI , @IN_CV1_CTTFIM , @iFatorCTT output 
   END 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CT1INI  != ' '  or @IN_CV1_CT1FIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CT1INI  != ' ' 
      or @IN_CV1_CT1FIM  != ' '  or @IN_CV1_CT1INI  != ' '  or @IN_CV1_CT1FIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CT1INI  != ' ' 
      or @IN_CV1_CT1FIM  != ' ' ) ) 
   BEGIN 
      SET @cCT1  = '1' 
   END 
   IF  (@cCTH  = '1' ) 
   BEGIN 
      EXEC CTB010_02_01 @cFilial_CQ6 , @IN_CV1_CTHINI , @IN_CV1_CTHFIM , @IN_CV1_CTDINI , @IN_CV1_CTDFIM , @IN_CV1_CTTINI , 
             @IN_CV1_CTTFIM , @IN_CV1_CT1INI , @IN_CV1_CT1FIM , @cCT1 , @cCTT , @cCTD , @cCTH , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
             @IN_CV1_VALOR , @IN_COPERACAO , @OutRetorno output 
   END 
   IF  (@cCTD  = '1' ) 
   BEGIN 
      SET @OutRetorno  = '0' 
      EXEC CTB004_02_01 @cFilial_CQ4 , @IN_CV1_CTDINI , @IN_CV1_CTDFIM , @IN_CV1_CTTINI , @IN_CV1_CTTFIM , @IN_CV1_CT1INI , 
             @IN_CV1_CT1FIM , @cCT1 , @cCTT , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @iFatorCTH , 
             @OutRetorno output 
   END 
   IF  (@cCTT  = '1' ) 
   BEGIN 
      SET @OutRetorno  = '0' 
      EXEC CTB005_02_01 @cFilial_CQ2 , @IN_CV1_CTTINI , @IN_CV1_CTTFIM , @IN_CV1_CT1INI , @IN_CV1_CT1FIM , @cCT1 , @IN_CV1_MOEDA , 
             @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @iFatorCTH , @iFatorCTD , @OutRetorno output 
   END 
   IF  (@cCT1  = '1' ) 
   BEGIN 
      SET @OutRetorno  = '0' 
      EXEC CTB006_02_01 @cFilial_CQ0 , @IN_CV1_CT1INI , @IN_CV1_CT1FIM , @cCT1 , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , 
             @IN_COPERACAO , @iFatorCTH , @iFatorCTD , @iFatorCTT , @OutRetorno output 
   END 
   SET @OUT_RESULTADO  = @OutRetorno 
END
GO

GO
--SqlScripter----[dbo].[CTB003_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB003_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB003_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB003_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTHINI Char( 9) , 
    @IN_CV1_CTHFIM Char( 9) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTDFIM Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_OPCAOX Char( 01 ) , 
    @IN_DATAANT Char( 08 ) , 
    @IN_CONTAANT Char( 20) , 
    @IN_CUSTOANT Char( 9) , 
    @IN_ITEMANT Char( 9) , 
    @IN_CLVLANT Char( 9) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CTH Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iFatorCTH Integer
DECLARE @iFatorCTD Integer
DECLARE @iFatorCTT Integer
DECLARE @cOpcaoX Char( 01 )
DECLARE @cCT1 Char( 01 )
DECLARE @cCTT Char( 01 )
DECLARE @cCTD Char( 01 )
DECLARE @cCTH Char( 01 )
DECLARE @OutRetorno Char( 01 )
BEGIN
   SET @OutRetorno  = '0' 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CTH' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTH output 
   SET @cAux  = 'CQ0' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ0 output 
   SET @cAux  = 'CQ2' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ2 output 
   SET @cAux  = 'CQ4' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ4 output 
   SET @cAux  = 'CQ6' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ6 output 
   IF  (@IN_OPCAOX  = ' ' ) 
   BEGIN 
      SET @cOpcaoX  = '3' 
   END 
   ELSE 
   BEGIN 
      SET @cOpcaoX  = @IN_OPCAOX 
   END 
   SET @iFatorCTH  = 1 
   SET @iFatorCTD  = 1 
   SET @iFatorCTT  = 1 
   SET @cCT1  = '0' 
   SET @cCTD  = '0' 
   SET @cCTH  = '0' 
   SET @cCTT  = '0' 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CTHINI  != ' '  or @IN_CV1_CTHFIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CTHINI  != ' ' 
      or @IN_CV1_CTHFIM  != ' '  or @IN_CV1_CTHINI  != ' '  or @IN_CV1_CTHFIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CTHINI  != ' ' 
      or @IN_CV1_CTHFIM  != ' ' ) ) 
   BEGIN 
      SET @cCTH  = '1' 
      SET @cAux  = 'CTH' 
      EXEC CTB011_02_02 @cFilial_CTH , @cAux , @IN_CV1_CTHINI , @IN_CV1_CTHFIM , @iFatorCTH output 
   END 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CTDINI  != ' '  or @IN_CV1_CTDFIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CTDINI  != ' ' 
      or @IN_CV1_CTDFIM  != ' '  or @IN_CV1_CTDINI  != ' '  or @IN_CV1_CTDFIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CTDINI  != ' ' 
      or @IN_CV1_CTDFIM  != ' ' ) ) 
   BEGIN 
      SET @cCTD  = '1' 
      SET @cAux  = 'CTD' 
      EXEC CTB011_02_02 @cFilial_CTD , @cAux , @IN_CV1_CTDINI , @IN_CV1_CTDFIM , @iFatorCTD output 
   END 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CTTINI  != ' '  or @IN_CV1_CTTFIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CTTINI  != ' ' 
      or @IN_CV1_CTTFIM  != ' '  or @IN_CV1_CTTINI  != ' '  or @IN_CV1_CTTFIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CTTINI  != ' ' 
      or @IN_CV1_CTTFIM  != ' ' ) ) 
   BEGIN 
      SET @cCTT  = '1' 
      SET @cAux  = 'CTT' 
      EXEC CTB011_02_02 @cFilial_CTT , @cAux , @IN_CV1_CTTINI , @IN_CV1_CTTFIM , @iFatorCTT output 
   END 
   IF  (@cOpcaoX  = '3'  and  (@IN_CV1_CT1INI  != ' '  or @IN_CV1_CT1FIM  != ' ' ) )  or  (@cOpcaoX  = '4'  and  (@IN_CV1_CT1INI  != ' ' 
      or @IN_CV1_CT1FIM  != ' '  or @IN_CV1_CT1INI  != ' '  or @IN_CV1_CT1FIM  != ' ' ) )  or  (@cOpcaoX  = '5'  and  (@IN_CV1_CT1INI  != ' ' 
      or @IN_CV1_CT1FIM  != ' ' ) ) 
   BEGIN 
      SET @cCT1  = '1' 
   END 
   IF  (@cCTH  = '1' ) 
   BEGIN 
      EXEC CTB010_02_02 @cFilial_CQ6 , @IN_CV1_CTHINI , @IN_CV1_CTHFIM , @IN_CV1_CTDINI , @IN_CV1_CTDFIM , @IN_CV1_CTTINI , 
             @IN_CV1_CTTFIM , @IN_CV1_CT1INI , @IN_CV1_CT1FIM , @cCT1 , @cCTT , @cCTD , @cCTH , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
             @IN_CV1_VALOR , @IN_COPERACAO , @OutRetorno output 
   END 
   IF  (@cCTD  = '1' ) 
   BEGIN 
      SET @OutRetorno  = '0' 
      EXEC CTB004_02_02 @cFilial_CQ4 , @IN_CV1_CTDINI , @IN_CV1_CTDFIM , @IN_CV1_CTTINI , @IN_CV1_CTTFIM , @IN_CV1_CT1INI , 
             @IN_CV1_CT1FIM , @cCT1 , @cCTT , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @iFatorCTH , 
             @OutRetorno output 
   END 
   IF  (@cCTT  = '1' ) 
   BEGIN 
      SET @OutRetorno  = '0' 
      EXEC CTB005_02_02 @cFilial_CQ2 , @IN_CV1_CTTINI , @IN_CV1_CTTFIM , @IN_CV1_CT1INI , @IN_CV1_CT1FIM , @cCT1 , @IN_CV1_MOEDA , 
             @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @iFatorCTH , @iFatorCTD , @OutRetorno output 
   END 
   IF  (@cCT1  = '1' ) 
   BEGIN 
      SET @OutRetorno  = '0' 
      EXEC CTB006_02_02 @cFilial_CQ0 , @IN_CV1_CT1INI , @IN_CV1_CT1FIM , @cCT1 , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , 
             @IN_COPERACAO , @iFatorCTH , @iFatorCTD , @iFatorCTT , @OutRetorno output 
   END 
   SET @OUT_RESULTADO  = @OutRetorno 
END
GO

GO
--SqlScripter----[dbo].[CTB004_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB004_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB004_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB004_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTDFIM Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @nCQX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CQ4' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ4 output 
   SET @cAux  = 'CQ5' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ5 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM )  and  (@IN_CV1_CTTINI  = @IN_CV1_CTTFIM )  and  (@IN_CV1_CTDINI  = @IN_CV1_CTDFIM 
     ) ) 
   BEGIN 
      EXEC CTB245_02_01 @IN_FILIALCOR , @IN_CV1_CTDINI , @IN_CV1_CTTINI , @IN_CV1_CT1INI , @IN_CT1 , @IN_CTT , @IN_CV1_MOEDA , 
             @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @IN_FATORCTH , @OUT_RESULTADO output 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
            IF @IN_CTT  = '0'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_A
               DECLARE Ctb390CQ5_A Insensitive  CURSOR FOR 
               SELECT CTD_ITEM 
                 FROM CTD010 CTD
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5010 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = ' '  and CQ5.CQ5_CONTA  = ' ' 
                  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5.CQ5_TPSALD  = '0'  and CQ5.D_E_L_E_T_  = ' ' 
                 )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_A
               FETCH Ctb390CQ5_A 
                INTO @cCTXX_ITEM 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_A 
                   INTO @cCTXX_ITEM 
               END 
               CLOSE Ctb390CQ5_A
               DEALLOCATE Ctb390CQ5_A
            END 
            IF @IN_CTT  = '1'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_B
               DECLARE Ctb390CQ5_B Insensitive  CURSOR FOR 
               SELECT CTD_ITEM , CTT_CUSTO 
                 FROM CTD010 CTD, CTT010 CTT
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5010 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ5.CQ5_CONTA  = ' '  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5.CQ5_TPSALD  = '0' 
                  and CQ5.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_B
               FETCH Ctb390CQ5_B 
                INTO @cCTXX_ITEM , @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_B 
                   INTO @cCTXX_ITEM , @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ5_B
               DEALLOCATE Ctb390CQ5_B
            END 
            IF @IN_CTT  = '0'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_C
               DECLARE Ctb390CQ5_C Insensitive  CURSOR FOR 
               SELECT CTD_ITEM , CT1_NORMAL , CT1_CONTA 
                 FROM CTD010 CTD, CT1010 CT1
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5010 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = ' '  and CQ5.CQ5_CONTA  = CT1.CT1_CONTA 
                  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5.CQ5_TPSALD  = '0'  and CQ5.D_E_L_E_T_  = ' ' 
                 )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_C
               FETCH Ctb390CQ5_C 
                INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_C 
                   INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ5_C
               DEALLOCATE Ctb390CQ5_C
            END 
            IF @IN_CTT  = '1'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_D
               DECLARE Ctb390CQ5_D Insensitive  CURSOR FOR 
               SELECT CTD_ITEM , CT1_NORMAL , CTT_CUSTO , CT1_CONTA 
                 FROM CTD010 CTD, CTT010 CTT, CT1010 CT1
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5010 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ5.CQ5_CONTA  = CT1.CT1_CONTA  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA 
                  and CQ5.CQ5_TPSALD  = '0'  and CQ5.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_D
               FETCH Ctb390CQ5_D 
                INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_D 
                   INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ5_D
               DEALLOCATE Ctb390CQ5_D
            END 
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ5_2
            DECLARE Ctb390CQ5_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ5_CONTA , ' ' ), COALESCE ( CQ5_CCUSTO , ' ' ), COALESCE ( CQ5_ITEM , ' ' ), 
                   CQ5_DEBITO , CQ5_CREDIT 
              FROM CQ5010 
              WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CQ5_CCUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
               and CQ5_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM  and CQ5_DATA  = @IN_CV1_DTFIM  and CQ5_MOEDA  = @IN_CV1_MOEDA 
               and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
            FOR READ ONLY 
             
            OPEN Ctb390CQ5_2
            FETCH Ctb390CQ5_2 
             INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @cCTXX_NORMAL  = ' ' 
               IF @cCTXX_CONTA  != ' ' 
               BEGIN 
                  SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                    FROM CT1010 
                    WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                    
               END 
               SET @cCTXX_CLVL  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               begin tran 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = @nCTXX_DEBITO , CQ5_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ4_DEBITO , @nCTXX_CREDIT  = CQ4_CREDIT 
                 FROM CQ4010 
                 WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_ITEM  = @cCTXX_ITEM  and CQ4_CCUSTO  = @cCTXX_CUSTO  and CQ4_CONTA  = @cCTXX_CONTA 
                  and CQ4_DATA  = @cDataF  and CQ4_MOEDA  = @IN_CV1_MOEDA  and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SET @iRecno  = 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = @nCTXX_DEBITO , CQ4_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ8_DEBITO , @nCTXX_CREDIT  = CQ8_CREDIT 
                 FROM CQ8010 
                 WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cCTXX_ITEM  and CQ8_DATA  = @cDataF 
                  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ8010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                         CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ8 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ9_DEBITO , @nCTXX_CREDIT  = CQ9_CREDIT 
                 FROM CQ9010 
                 WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cCTXX_ITEM  and CQ9_DATA  = @IN_CV1_DTFIM 
                  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ9010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                         CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ9 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ5_2 
                INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ5_2
            DEALLOCATE Ctb390CQ5_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB004_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB004_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB004_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB004_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTDFIM Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @nCQX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CQ4' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ4 output 
   SET @cAux  = 'CQ5' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ5 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM )  and  (@IN_CV1_CTTINI  = @IN_CV1_CTTFIM )  and  (@IN_CV1_CTDINI  = @IN_CV1_CTDFIM 
     ) ) 
   BEGIN 
      EXEC CTB245_02_02 @IN_FILIALCOR , @IN_CV1_CTDINI , @IN_CV1_CTTINI , @IN_CV1_CT1INI , @IN_CT1 , @IN_CTT , @IN_CV1_MOEDA , 
             @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @IN_FATORCTH , @OUT_RESULTADO output 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
            IF @IN_CTT  = '0'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_A
               DECLARE Ctb390CQ5_A Insensitive  CURSOR FOR 
               SELECT CTD_ITEM 
                 FROM CTD030 CTD
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5020 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = ' '  and CQ5.CQ5_CONTA  = ' ' 
                  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5.CQ5_TPSALD  = '0'  and CQ5.D_E_L_E_T_  = ' ' 
                 )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_A
               FETCH Ctb390CQ5_A 
                INTO @cCTXX_ITEM 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_A 
                   INTO @cCTXX_ITEM 
               END 
               CLOSE Ctb390CQ5_A
               DEALLOCATE Ctb390CQ5_A
            END 
            IF @IN_CTT  = '1'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_B
               DECLARE Ctb390CQ5_B Insensitive  CURSOR FOR 
               SELECT CTD_ITEM , CTT_CUSTO 
                 FROM CTD030 CTD, CTT010 CTT
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5020 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ5.CQ5_CONTA  = ' '  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5.CQ5_TPSALD  = '0' 
                  and CQ5.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_B
               FETCH Ctb390CQ5_B 
                INTO @cCTXX_ITEM , @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_B 
                   INTO @cCTXX_ITEM , @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ5_B
               DEALLOCATE Ctb390CQ5_B
            END 
            IF @IN_CTT  = '0'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_C
               DECLARE Ctb390CQ5_C Insensitive  CURSOR FOR 
               SELECT CTD_ITEM , CT1_NORMAL , CT1_CONTA 
                 FROM CTD030 CTD, CT1030 CT1
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5020 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = ' '  and CQ5.CQ5_CONTA  = CT1.CT1_CONTA 
                  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5.CQ5_TPSALD  = '0'  and CQ5.D_E_L_E_T_  = ' ' 
                 )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_C
               FETCH Ctb390CQ5_C 
                INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_C 
                   INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ5_C
               DEALLOCATE Ctb390CQ5_C
            END 
            IF @IN_CTT  = '1'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ5_D
               DECLARE Ctb390CQ5_D Insensitive  CURSOR FOR 
               SELECT CTD_ITEM , CT1_NORMAL , CTT_CUSTO , CT1_CONTA 
                 FROM CTD030 CTD, CTT010 CTT, CT1030 CT1
                 WHERE CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CTD.CTD_CLASSE  = '2' 
                  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ5020 CQ5
                 WHERE CQ5.CQ5_FILIAL  = @cFilial_CQ5  and CQ5.CQ5_ITEM  = CTD.CTD_ITEM  and CQ5.CQ5_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ5.CQ5_CONTA  = CT1.CT1_CONTA  and CQ5.CQ5_DATA  = @IN_CV1_DTFIM  and CQ5.CQ5_MOEDA  = @IN_CV1_MOEDA 
                  and CQ5.CQ5_TPSALD  = '0'  and CQ5.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ5_D
               FETCH Ctb390CQ5_D 
                INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ5020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , 
                         CQ5_SLBASE , CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ4020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ5_D 
                   INTO @cCTXX_ITEM , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ5_D
               DEALLOCATE Ctb390CQ5_D
            END 
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ5_2
            DECLARE Ctb390CQ5_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ5_CONTA , ' ' ), COALESCE ( CQ5_CCUSTO , ' ' ), COALESCE ( CQ5_ITEM , ' ' ), 
                   CQ5_DEBITO , CQ5_CREDIT 
              FROM CQ5020 
              WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM  and CQ5_CCUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
               and CQ5_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM  and CQ5_DATA  = @IN_CV1_DTFIM  and CQ5_MOEDA  = @IN_CV1_MOEDA 
               and CQ5_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
            FOR READ ONLY 
             
            OPEN Ctb390CQ5_2
            FETCH Ctb390CQ5_2 
             INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @cCTXX_NORMAL  = ' ' 
               IF @cCTXX_CONTA  != ' ' 
               BEGIN 
                  SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                    FROM CT1030 
                    WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                    
               END 
               SET @cCTXX_CLVL  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               begin tran 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = @nCTXX_DEBITO , CQ5_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ4_DEBITO , @nCTXX_CREDIT  = CQ4_CREDIT 
                 FROM CQ4020 
                 WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_ITEM  = @cCTXX_ITEM  and CQ4_CCUSTO  = @cCTXX_CUSTO  and CQ4_CONTA  = @cCTXX_CONTA 
                  and CQ4_DATA  = @cDataF  and CQ4_MOEDA  = @IN_CV1_MOEDA  and CQ4_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SET @iRecno  = 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , 
                         CQ4_SLBASE , CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                         @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = @nCTXX_DEBITO , CQ4_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ8_DEBITO , @nCTXX_CREDIT  = CQ8_CREDIT 
                 FROM CQ8020 
                 WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cCTXX_ITEM  and CQ8_DATA  = @cDataF 
                  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ8020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                         CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ8 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ9_DEBITO , @nCTXX_CREDIT  = CQ9_CREDIT 
                 FROM CQ9020 
                 WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cCTXX_ITEM  and CQ9_DATA  = @IN_CV1_DTFIM 
                  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ9020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                         CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ9 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ5_2 
                INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ5_2
            DEALLOCATE Ctb390CQ5_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB005_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB005_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB005_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB005_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @IN_FATORCTD Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CQ2' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ2 output 
   SET @cAux  = 'CQ3' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ3 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM )  and  (@IN_CV1_CTTINI  = @IN_CV1_CTTFIM ) ) 
   BEGIN 
      EXEC CTB246_02_01 @IN_FILIALCOR , @IN_CV1_CTTINI , @IN_CV1_CT1INI , @IN_CT1 , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , 
             @IN_COPERACAO , @IN_FATORCTH , @IN_FATORCTD , @OUT_RESULTADO output 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
            IF @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ3_A
               DECLARE Ctb390CQ3_A Insensitive  CURSOR FOR 
               SELECT CTT_CUSTO 
                 FROM CTT010 CTT
                 WHERE CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CTT.CTT_CLASSE  = '2' 
                  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ3010 CQ3
                 WHERE CQ3.CQ3_FILIAL  = @cFilial_CQ3  and CQ3.CQ3_CCUSTO  = CTT.CTT_CUSTO  and CQ3.CQ3_CONTA  = ' '  and CQ3.CQ3_DATA  = @IN_CV1_DTFIM 
                  and CQ3.CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3.CQ3_TPSALD  = '0'  and CQ3.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ3_A
               FETCH Ctb390CQ3_A 
                INTO @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ3010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , 
                         CQ3_DTLP , CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ3 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , 
                         @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ2010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                         CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ3_A 
                   INTO @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ3_A
               DEALLOCATE Ctb390CQ3_A
            END 
            IF @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ3_B
               DECLARE Ctb390CQ3_B Insensitive  CURSOR FOR 
               SELECT CTT_CUSTO , CT1_NORMAL , CT1_CONTA 
                 FROM CT1010 CT1, CTT010 CTT
                 WHERE CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CTT.CTT_CLASSE  = '2' 
                  and CTT.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ3010 CQ3
                 WHERE CQ3.CQ3_FILIAL  = @cFilial_CQ3  and CQ3.CQ3_CCUSTO  = CTT.CTT_CUSTO  and CQ3.CQ3_CONTA  = CT1.CT1_CONTA 
                  and CQ3.CQ3_DATA  = @IN_CV1_DTFIM  and CQ3.CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3.CQ3_TPSALD  = '0'  and CQ3.D_E_L_E_T_  = ' ' 
                 )
               FOR READ ONLY 
                
               OPEN Ctb390CQ3_B
               FETCH Ctb390CQ3_B 
                INTO @cCTXX_CUSTO , @cCTXX_NORMAL , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ3010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , 
                         CQ3_DTLP , CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ3 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , 
                         @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ2010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                         CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ3_B 
                   INTO @cCTXX_CUSTO , @cCTXX_NORMAL , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ3_B
               DEALLOCATE Ctb390CQ3_B
            END 
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ3_2
            DECLARE Ctb390CQ3_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ3_CONTA , ' ' ), COALESCE ( CQ3_CCUSTO , ' ' ), CQ3_DEBITO , CQ3_CREDIT 
              FROM CQ3010 
              WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_CCUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CQ3_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
               and CQ3_DATA  = @IN_CV1_DTFIM  and CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
              
            FOR READ ONLY 
             
            OPEN Ctb390CQ3_2
            FETCH Ctb390CQ3_2 
             INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @cCTXX_NORMAL  = ' ' 
               IF @cCTXX_CONTA  <> ' ' 
               BEGIN 
                  SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                    FROM CT1010 
                    WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                    
               END 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               begin tran 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = @nCTXX_DEBITO , CQ3_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ2_DEBITO , @nCTXX_CREDIT  = CQ2_CREDIT 
                 FROM CQ2010 
                 WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_CCUSTO  = @cCTXX_CUSTO  and CQ2_CONTA  = @cCTXX_CONTA  and CQ2_DATA  = @cDataF 
                  and CQ2_MOEDA  = @IN_CV1_MOEDA  and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SET @iRecno  = 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                         CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = @nCTXX_DEBITO , CQ2_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ8_DEBITO , @nCTXX_CREDIT  = CQ8_CREDIT 
                 FROM CQ8010 
                 WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCTXX_CUSTO  and CQ8_DATA  = @cDataF 
                  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ8010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                         CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ8 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ9_DEBITO , @nCTXX_CREDIT  = CQ9_CREDIT 
                 FROM CQ9010 
                 WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCTXX_CUSTO  and CQ9_DATA  = @IN_CV1_DTFIM 
                  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ9010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                         CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ9 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ3_2 
                INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ3_2
            DEALLOCATE Ctb390CQ3_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB005_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB005_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB005_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB005_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @IN_FATORCTD Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CQ2' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ2 output 
   SET @cAux  = 'CQ3' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ3 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM )  and  (@IN_CV1_CTTINI  = @IN_CV1_CTTFIM ) ) 
   BEGIN 
      EXEC CTB246_02_02 @IN_FILIALCOR , @IN_CV1_CTTINI , @IN_CV1_CT1INI , @IN_CT1 , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , 
             @IN_COPERACAO , @IN_FATORCTH , @IN_FATORCTD , @OUT_RESULTADO output 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
            IF @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ3_A
               DECLARE Ctb390CQ3_A Insensitive  CURSOR FOR 
               SELECT CTT_CUSTO 
                 FROM CTT010 CTT
                 WHERE CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CTT.CTT_CLASSE  = '2' 
                  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ3020 CQ3
                 WHERE CQ3.CQ3_FILIAL  = @cFilial_CQ3  and CQ3.CQ3_CCUSTO  = CTT.CTT_CUSTO  and CQ3.CQ3_CONTA  = ' '  and CQ3.CQ3_DATA  = @IN_CV1_DTFIM 
                  and CQ3.CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3.CQ3_TPSALD  = '0'  and CQ3.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ3_A
               FETCH Ctb390CQ3_A 
                INTO @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ3020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , 
                         CQ3_DTLP , CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ3 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , 
                         @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ2020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                         CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ3_A 
                   INTO @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ3_A
               DEALLOCATE Ctb390CQ3_A
            END 
            IF @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ3_B
               DECLARE Ctb390CQ3_B Insensitive  CURSOR FOR 
               SELECT CTT_CUSTO , CT1_NORMAL , CT1_CONTA 
                 FROM CT1030 CT1, CTT010 CTT
                 WHERE CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CTT.CTT_CLASSE  = '2' 
                  and CTT.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ3020 CQ3
                 WHERE CQ3.CQ3_FILIAL  = @cFilial_CQ3  and CQ3.CQ3_CCUSTO  = CTT.CTT_CUSTO  and CQ3.CQ3_CONTA  = CT1.CT1_CONTA 
                  and CQ3.CQ3_DATA  = @IN_CV1_DTFIM  and CQ3.CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3.CQ3_TPSALD  = '0'  and CQ3.D_E_L_E_T_  = ' ' 
                 )
               FOR READ ONLY 
                
               OPEN Ctb390CQ3_B
               FETCH Ctb390CQ3_B 
                INTO @cCTXX_CUSTO , @cCTXX_NORMAL , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ3020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , 
                         CQ3_DTLP , CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ3 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , 
                         @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ2020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                         CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ3_B 
                   INTO @cCTXX_CUSTO , @cCTXX_NORMAL , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ3_B
               DEALLOCATE Ctb390CQ3_B
            END 
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ3_2
            DECLARE Ctb390CQ3_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ3_CONTA , ' ' ), COALESCE ( CQ3_CCUSTO , ' ' ), CQ3_DEBITO , CQ3_CREDIT 
              FROM CQ3020 
              WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_CCUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CQ3_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
               and CQ3_DATA  = @IN_CV1_DTFIM  and CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
              
            FOR READ ONLY 
             
            OPEN Ctb390CQ3_2
            FETCH Ctb390CQ3_2 
             INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @cCTXX_NORMAL  = ' ' 
               IF @cCTXX_CONTA  <> ' ' 
               BEGIN 
                  SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                    FROM CT1030 
                    WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                    
               END 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               begin tran 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = @nCTXX_DEBITO , CQ3_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ2_DEBITO , @nCTXX_CREDIT  = CQ2_CREDIT 
                 FROM CQ2020 
                 WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_CCUSTO  = @cCTXX_CUSTO  and CQ2_CONTA  = @cCTXX_CONTA  and CQ2_DATA  = @cDataF 
                  and CQ2_MOEDA  = @IN_CV1_MOEDA  and CQ2_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SET @iRecno  = 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                         CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = @nCTXX_DEBITO , CQ2_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ8_DEBITO , @nCTXX_CREDIT  = CQ8_CREDIT 
                 FROM CQ8020 
                 WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCTXX_CUSTO  and CQ8_DATA  = @cDataF 
                  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ8020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                         CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ8 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ9_DEBITO , @nCTXX_CREDIT  = CQ9_CREDIT 
                 FROM CQ9020 
                 WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCTXX_CUSTO  and CQ9_DATA  = @IN_CV1_DTFIM 
                  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                             ) , 2 )
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @IN_COPERACAO  = '1' 
                        BEGIN 
                           SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 
                                  2 )
                           SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                        END 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
                          
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ9020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                         CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ9 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ3_2 
                INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ3_2
            DEALLOCATE Ctb390CQ3_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB006_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB006_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB006_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB006_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @IN_FATORCTD Integer , 
    @IN_FATORCTT Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @iRecno Integer
DECLARE @cTab Char( 03 )
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CQ0' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ0 output 
   SET @cAux  = 'CQ1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ1 output 
   EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM ) ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
      SELECT @cCTXX_NORMAL  = CT1_NORMAL 
        FROM CT1010 
        WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_CREDIT  = CQ1_CREDIT , @nCTXX_DEBITO  = CQ1_DEBITO 
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_MOEDA  = @IN_CV1_MOEDA  and CQ1_TPSALD  = '0'  and CQ1_CONTA  = @cCTXX_CONTA 
         and CQ1_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 ) , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 , 2 )
            END 
         END 
      END 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCTXX_CONTA , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1010 
           WITH (ROWLOCK) 
            SET CQ1_DEBITO  = @nCTXX_DEBITO , CQ1_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_CREDIT  = CQ0_CREDIT , @nCTXX_DEBITO  = CQ0_DEBITO 
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_MOEDA  = @IN_CV1_MOEDA  and CQ0_TPSALD  = '0'  and CQ0_CONTA  = @cCTXX_CONTA 
         and CQ0_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 ) , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 , 2 )
            END 
         END 
      END 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0010 
           WITH (ROWLOCK) 
            SET CQ0_DEBITO  = @nCTXX_DEBITO , CQ0_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ1_1
            DECLARE Ctb390CQ1_1 Insensitive  CURSOR FOR 
            SELECT CT1_CONTA , CT1_NORMAL 
              FROM CT1010 CT1
              WHERE CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM  and CT1.CT1_CLASSE  = '2' 
               and CT1.D_E_L_E_T_  = ' '  and 0  = (
            SELECT COUNT ( * )
              FROM CQ1010 CQ1
              WHERE CQ1.CQ1_FILIAL  = @cFilial_CQ1  and CQ1.CQ1_CONTA  = CT1.CT1_CONTA  and CQ1.CQ1_DATA  = @IN_CV1_DTFIM 
               and CQ1.CQ1_MOEDA  = @IN_CV1_MOEDA  and CQ1.CQ1_TPSALD  = '0'  and CQ1.D_E_L_E_T_  = ' ' )
            FOR READ ONLY 
             
            OPEN Ctb390CQ1_1
            FETCH Ctb390CQ1_1 
             INTO @cCTXX_CONTA , @cCTXX_NORMAL 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ1010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                      CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ1 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                      @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ0010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                      CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ0 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                      @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               FETCH Ctb390CQ1_1 
                INTO @cCTXX_CONTA , @cCTXX_NORMAL 
            END 
            CLOSE Ctb390CQ1_1
            DEALLOCATE Ctb390CQ1_1
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ1_2
            DECLARE Ctb390CQ1_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ1_CONTA , ' ' ), CQ1_DEBITO , CQ1_CREDIT 
              FROM CQ1010 
              WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM  and CQ1_DATA  = @IN_CV1_DTFIM 
               and CQ1_MOEDA  = @IN_CV1_MOEDA  and CQ1_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
            FOR READ ONLY 
             
            OPEN Ctb390CQ1_2
            FETCH Ctb390CQ1_2 
             INTO @iRecno , @cCTXX_CONTA , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                 FROM CT1010 
                 WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               begin tran 
               UPDATE CQ1010 
                 WITH (ROWLOCK) 
                  SET CQ1_DEBITO  = @nCTXX_DEBITO , CQ1_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ0_DEBITO , @nCTXX_CREDIT  = CQ0_CREDIT 
                 FROM CQ0010 
                 WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cCTXX_CONTA  and CQ0_DATA  = @cDataF  and CQ0_MOEDA  = @IN_CV1_MOEDA 
                  and CQ0_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF  (@iRecno is null  or @iRecno  = 0 ) 
               BEGIN 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ0010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , 
                         CQ0_LP , CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ0 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                         @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ0010 
                    WITH (ROWLOCK) 
                     SET CQ0_DEBITO  = @nCTXX_DEBITO , CQ0_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ1_2 
                INTO @iRecno , @cCTXX_CONTA , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ1_2
            DEALLOCATE Ctb390CQ1_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB006_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB006_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB006_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB006_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @IN_FATORCTD Integer , 
    @IN_FATORCTT Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @iRecno Integer
DECLARE @cTab Char( 03 )
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CQ0' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ0 output 
   SET @cAux  = 'CQ1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ1 output 
   EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM ) ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
      SELECT @cCTXX_NORMAL  = CT1_NORMAL 
        FROM CT1030 
        WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_CREDIT  = CQ1_CREDIT , @nCTXX_DEBITO  = CQ1_DEBITO 
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_MOEDA  = @IN_CV1_MOEDA  and CQ1_TPSALD  = '0'  and CQ1_CONTA  = @cCTXX_CONTA 
         and CQ1_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 ) , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 , 2 )
            END 
         END 
      END 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCTXX_CONTA , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1020 
           WITH (ROWLOCK) 
            SET CQ1_DEBITO  = @nCTXX_DEBITO , CQ1_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_CREDIT  = CQ0_CREDIT , @nCTXX_DEBITO  = CQ0_DEBITO 
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_MOEDA  = @IN_CV1_MOEDA  and CQ0_TPSALD  = '0'  and CQ0_CONTA  = @cCTXX_CONTA 
         and CQ0_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                    , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 ) , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                 , 2 )
            END 
         END 
      END 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0020 
           WITH (ROWLOCK) 
            SET CQ0_DEBITO  = @nCTXX_DEBITO , CQ0_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ1_1
            DECLARE Ctb390CQ1_1 Insensitive  CURSOR FOR 
            SELECT CT1_CONTA , CT1_NORMAL 
              FROM CT1030 CT1
              WHERE CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM  and CT1.CT1_CLASSE  = '2' 
               and CT1.D_E_L_E_T_  = ' '  and 0  = (
            SELECT COUNT ( * )
              FROM CQ1020 CQ1
              WHERE CQ1.CQ1_FILIAL  = @cFilial_CQ1  and CQ1.CQ1_CONTA  = CT1.CT1_CONTA  and CQ1.CQ1_DATA  = @IN_CV1_DTFIM 
               and CQ1.CQ1_MOEDA  = @IN_CV1_MOEDA  and CQ1.CQ1_TPSALD  = '0'  and CQ1.D_E_L_E_T_  = ' ' )
            FOR READ ONLY 
             
            OPEN Ctb390CQ1_1
            FETCH Ctb390CQ1_1 
             INTO @cCTXX_CONTA , @cCTXX_NORMAL 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ1020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                      CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ1 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                      @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ0020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                      CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ0 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                      @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               FETCH Ctb390CQ1_1 
                INTO @cCTXX_CONTA , @cCTXX_NORMAL 
            END 
            CLOSE Ctb390CQ1_1
            DEALLOCATE Ctb390CQ1_1
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ1_2
            DECLARE Ctb390CQ1_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ1_CONTA , ' ' ), CQ1_DEBITO , CQ1_CREDIT 
              FROM CQ1020 
              WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM  and CQ1_DATA  = @IN_CV1_DTFIM 
               and CQ1_MOEDA  = @IN_CV1_MOEDA  and CQ1_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
            FOR READ ONLY 
             
            OPEN Ctb390CQ1_2
            FETCH Ctb390CQ1_2 
             INTO @iRecno , @cCTXX_CONTA , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                 FROM CT1030 
                 WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               begin tran 
               UPDATE CQ1020 
                 WITH (ROWLOCK) 
                  SET CQ1_DEBITO  = @nCTXX_DEBITO , CQ1_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ0_DEBITO , @nCTXX_CREDIT  = CQ0_CREDIT 
                 FROM CQ0020 
                 WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cCTXX_CONTA  and CQ0_DATA  = @cDataF  and CQ0_MOEDA  = @IN_CV1_MOEDA 
                  and CQ0_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD 
                           * @IN_FATORCTT ) , 2 )
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_COPERACAO  = '1' 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCTXX_CREDIT  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD  * @IN_FATORCTT 
                          ) , 2 )
                        SET @nCTXX_DEBITO  = ROUND ( @nCTXX_DEBITO , 2 )
                     END 
                  END 
               END 
               IF  (@iRecno is null  or @iRecno  = 0 ) 
               BEGIN 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ0020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , 
                         CQ0_LP , CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ0 , @cCTXX_CONTA , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                         @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ0020 
                    WITH (ROWLOCK) 
                     SET CQ0_DEBITO  = @nCTXX_DEBITO , CQ0_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ1_2 
                INTO @iRecno , @cCTXX_CONTA , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ1_2
            DEALLOCATE Ctb390CQ1_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB010_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB010_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB010_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB010_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTHINI Char( 9) , 
    @IN_CV1_CTHFIM Char( 9) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTDFIM Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CTD Char( 01 ) , 
    @IN_CTH Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CTH Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDataF Char( 08 )
DECLARE @cDtLp Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CQ6' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ6 output 
   SET @cAux  = 'CQ7' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ7 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CTH' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTH output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM )  and  (@IN_CV1_CTTINI  = @IN_CV1_CTTFIM )  and  (@IN_CV1_CTDINI  = @IN_CV1_CTDFIM 
     )  and  (@IN_CV1_CTHINI  = @IN_CV1_CTHFIM ) ) 
   BEGIN 
      EXEC CTB013_02_01 @IN_FILIALCOR , @IN_CV1_CTHINI , @IN_CV1_CTDINI , @IN_CV1_CTTINI , @IN_CV1_CT1INI , @IN_CT1 , @IN_CTT , 
             @IN_CTD , @IN_CTH , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @OUT_RESULTADO output 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
            IF @IN_CTD  = '0'  and @IN_CTT  = '0'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_A
               DECLARE Ctb390CQ7_A Insensitive  CURSOR FOR 
               SELECT CTH_CLVL 
                 FROM CTH010 CTH
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = ' ' 
                  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7.CQ7_TPSALD  = '0' 
                  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_A
               FETCH Ctb390CQ7_A 
                INTO @cCTXX_CLVL 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_A 
                   INTO @cCTXX_CLVL 
               END 
               CLOSE Ctb390CQ7_A
               DEALLOCATE Ctb390CQ7_A
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '0'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_B
               DECLARE Ctb390CQ7_B Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CTD_ITEM 
                 FROM CTH010 CTH, CTD010 CTD
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = ' '  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_B
               FETCH Ctb390CQ7_B 
                INTO @cCTXX_CLVL , @cCTXX_ITEM 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_B 
                   INTO @cCTXX_CLVL , @cCTXX_ITEM 
               END 
               CLOSE Ctb390CQ7_B
               DEALLOCATE Ctb390CQ7_B
            END 
            IF @IN_CTD  = '0'  and @IN_CTT  = '1'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_C
               DECLARE Ctb390CQ7_C Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CTT_CUSTO 
                 FROM CTH010 CTH, CTT010 CTT
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7.CQ7_TPSALD  = '0' 
                  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_C
               FETCH Ctb390CQ7_C 
                INTO @cCTXX_CLVL , @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_C 
                   INTO @cCTXX_CLVL , @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ7_C
               DEALLOCATE Ctb390CQ7_C
            END 
            IF @IN_CTD  = '0'  and @IN_CTT  = '0'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_D
               DECLARE Ctb390CQ7_D Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CT1_CONTA 
                 FROM CTH010 CTH, CT1010 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = ' ' 
                  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_D
               FETCH Ctb390CQ7_D 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_D 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_D
               DEALLOCATE Ctb390CQ7_D
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '1'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_E
               DECLARE Ctb390CQ7_E Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CTD_ITEM , CTT_CUSTO 
                 FROM CTH010 CTH, CTD010 CTD, CTT010 CTT
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_E
               FETCH Ctb390CQ7_E 
                INTO @cCTXX_CLVL , @cCTXX_ITEM , @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_E 
                   INTO @cCTXX_CLVL , @cCTXX_ITEM , @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ7_E
               DEALLOCATE Ctb390CQ7_E
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '0'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_F
               DECLARE Ctb390CQ7_F Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CTD_ITEM , CT1_CONTA 
                 FROM CTH010 CTH, CTD010 CTD, CT1010 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = ' '  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_F
               FETCH Ctb390CQ7_F 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_F 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_F
               DEALLOCATE Ctb390CQ7_F
            END 
            IF @IN_CTD  = '0'  and @IN_CTT  = '1'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_G
               DECLARE Ctb390CQ7_G Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CTT_CUSTO , CT1_CONTA 
                 FROM CTH010 CTH, CTT010 CTT, CT1010 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_G
               FETCH Ctb390CQ7_G 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_G 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_G
               DEALLOCATE Ctb390CQ7_G
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '1'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_H
               DECLARE Ctb390CQ7_H Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CTD_ITEM , CTT_CUSTO , CT1_CONTA 
                 FROM CTH010 CTH, CTD010 CTD, CTT010 CTT, CT1010 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7010 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM 
                  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_H
               FETCH Ctb390CQ7_H 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CUSTO , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7010 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_H 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CUSTO , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_H
               DEALLOCATE Ctb390CQ7_H
            END 
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ7_2
            DECLARE Ctb390CQ7_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ7_CONTA , ' ' ), COALESCE ( CQ7_CCUSTO , ' ' ), COALESCE ( CQ7_ITEM , ' ' ), 
                   COALESCE ( CQ7_CLVL , ' ' ), CQ7_DEBITO , CQ7_CREDIT 
              FROM CQ7010 
              WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CQ7_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
               and CQ7_CCUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CQ7_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
               and CQ7_DATA  = @IN_CV1_DTFIM  and CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
              
            FOR READ ONLY 
             
            OPEN Ctb390CQ7_2
            FETCH Ctb390CQ7_2 
             INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @cCTXX_NORMAL  = ' ' 
               IF @cCTXX_CONTA  != ' ' 
               BEGIN 
                  SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                    FROM CT1010 
                    WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                    
               END 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF @IN_COPERACAO  = '1' 
                  BEGIN 
                     IF  (@cCTXX_NORMAL  = '1' ) 
                     BEGIN 
                        IF  (@IN_CV1_VALOR  < 0 ) 
                        BEGIN 
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                        END 
                        ELSE 
                        BEGIN 
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF  (@IN_CV1_VALOR  < 0 ) 
                        BEGIN 
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                        END 
                        ELSE 
                        BEGIN 
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                        SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                        SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                     END 
                  END 
               END 
               SET @cTpSaldo  = '0' 
               SET @cSlBase  = 'S' 
               SET @cLp  = 'N' 
               SET @cDtLp  = ' ' 
               SET @cStatus  = ' ' 
               begin tran 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = @nCTXX_DEBITO , CQ7_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ6_DEBITO , @nCTXX_CREDIT  = CQ6_CREDIT 
                 FROM CQ6010 
                 WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_CLVL  = @cCTXX_CLVL  and CQ6_ITEM  = @cCTXX_ITEM  and CQ6_CCUSTO  = @cCTXX_CUSTO 
                  and CQ6_CONTA  = @cCTXX_CONTA  and CQ6_DATA  = @IN_CV1_DTFIM  and CQ6_MOEDA  = @IN_CV1_MOEDA  and CQ6_TPSALD  = '0' 
                  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SET @iRecno  = 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = @nCTXX_DEBITO , CQ6_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ8_DEBITO , @nCTXX_CREDIT  = CQ8_CREDIT 
                 FROM CQ8010 
                 WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @cCTXX_CLVL  and CQ8_DATA  = @cDataF 
                  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ8010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                         CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ8 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ9_DEBITO , @nCTXX_CREDIT  = CQ9_CREDIT 
                 FROM CQ9010 
                 WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @cCTXX_CLVL  and CQ9_DATA  = @IN_CV1_DTFIM 
                  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ9010 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                         CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ9 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ7_2 
                INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ7_2
            DEALLOCATE Ctb390CQ7_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB010_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB010_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB010_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB010_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTHINI Char( 9) , 
    @IN_CV1_CTHFIM Char( 9) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTDFIM Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CTTFIM Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CV1_CT1FIM Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CTD Char( 01 ) , 
    @IN_CTH Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CTH Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDataF Char( 08 )
DECLARE @cDtLp Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iRepete Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CQ6' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ6 output 
   SET @cAux  = 'CQ7' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ7 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CTH' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTH output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   IF  ( (@IN_CV1_CT1INI  = @IN_CV1_CT1FIM )  and  (@IN_CV1_CTTINI  = @IN_CV1_CTTFIM )  and  (@IN_CV1_CTDINI  = @IN_CV1_CTDFIM 
     )  and  (@IN_CV1_CTHINI  = @IN_CV1_CTHFIM ) ) 
   BEGIN 
      EXEC CTB013_02_02 @IN_FILIALCOR , @IN_CV1_CTHINI , @IN_CV1_CTDINI , @IN_CV1_CTTINI , @IN_CV1_CT1INI , @IN_CT1 , @IN_CTT , 
             @IN_CTD , @IN_CTH , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @IN_CV1_VALOR , @IN_COPERACAO , @OUT_RESULTADO output 
   END 
   ELSE 
   BEGIN 
      SET @iRepete  = 1 
      EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
      WHILE (@iRepete  <= 2 )
      BEGIN
         IF @iRepete  = 1 
         BEGIN 
            IF @IN_CTD  = '0'  and @IN_CTT  = '0'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_A
               DECLARE Ctb390CQ7_A Insensitive  CURSOR FOR 
               SELECT CTH_CLVL 
                 FROM CTH030 CTH
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = ' ' 
                  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7.CQ7_TPSALD  = '0' 
                  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_A
               FETCH Ctb390CQ7_A 
                INTO @cCTXX_CLVL 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_A 
                   INTO @cCTXX_CLVL 
               END 
               CLOSE Ctb390CQ7_A
               DEALLOCATE Ctb390CQ7_A
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '0'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_B
               DECLARE Ctb390CQ7_B Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CTD_ITEM 
                 FROM CTH030 CTH, CTD030 CTD
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = ' '  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_B
               FETCH Ctb390CQ7_B 
                INTO @cCTXX_CLVL , @cCTXX_ITEM 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_B 
                   INTO @cCTXX_CLVL , @cCTXX_ITEM 
               END 
               CLOSE Ctb390CQ7_B
               DEALLOCATE Ctb390CQ7_B
            END 
            IF @IN_CTD  = '0'  and @IN_CTT  = '1'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_C
               DECLARE Ctb390CQ7_C Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CTT_CUSTO 
                 FROM CTH030 CTH, CTT010 CTT
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7.CQ7_TPSALD  = '0' 
                  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_C
               FETCH Ctb390CQ7_C 
                INTO @cCTXX_CLVL , @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_C 
                   INTO @cCTXX_CLVL , @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ7_C
               DEALLOCATE Ctb390CQ7_C
            END 
            IF @IN_CTD  = '0'  and @IN_CTT  = '0'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_D
               DECLARE Ctb390CQ7_D Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CT1_CONTA 
                 FROM CTH030 CTH, CT1030 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = ' ' 
                  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_D
               FETCH Ctb390CQ7_D 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_D 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_D
               DEALLOCATE Ctb390CQ7_D
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '1'  and @IN_CT1  = '0' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_E
               DECLARE Ctb390CQ7_E Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CTD_ITEM , CTT_CUSTO 
                 FROM CTH030 CTH, CTD030 CTD, CTT010 CTT
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO  and CQ7.CQ7_CONTA  = ' '  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_E
               FETCH Ctb390CQ7_E 
                INTO @cCTXX_CLVL , @cCTXX_ITEM , @cCTXX_CUSTO 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CONTA  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_E 
                   INTO @cCTXX_CLVL , @cCTXX_ITEM , @cCTXX_CUSTO 
               END 
               CLOSE Ctb390CQ7_E
               DEALLOCATE Ctb390CQ7_E
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '0'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_F
               DECLARE Ctb390CQ7_F Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CTD_ITEM , CT1_CONTA 
                 FROM CTH030 CTH, CTD030 CTD, CT1030 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = ' '  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_F
               FETCH Ctb390CQ7_F 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_CUSTO  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_F 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_F
               DEALLOCATE Ctb390CQ7_F
            END 
            IF @IN_CTD  = '0'  and @IN_CTT  = '1'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_G
               DECLARE Ctb390CQ7_G Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CTT_CUSTO , CT1_CONTA 
                 FROM CTH030 CTH, CTT010 CTT, CT1030 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = ' '  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO 
                  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA 
                  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_G
               FETCH Ctb390CQ7_G 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cCTXX_ITEM  = ' ' 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_G 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_CUSTO , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_G
               DEALLOCATE Ctb390CQ7_G
            END 
            IF @IN_CTD  = '1'  and @IN_CTT  = '1'  and @IN_CT1  = '1' 
            BEGIN 
                
               -- Cursor declaration Ctb390CQ7_H
               DECLARE Ctb390CQ7_H Insensitive  CURSOR FOR 
               SELECT CTH_CLVL , CT1_NORMAL , CTD_ITEM , CTT_CUSTO , CT1_CONTA 
                 FROM CTH030 CTH, CTD030 CTD, CTT010 CTT, CT1030 CT1
                 WHERE CTH.CTH_FILIAL  = @cFilial_CTH  and CTH.CTH_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CTH.CTH_CLASSE  = '2' 
                  and CTH.D_E_L_E_T_  = ' '  and CTD.CTD_FILIAL  = @cFilial_CTD  and CTD.CTD_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
                  and CTD.CTD_CLASSE  = '2'  and CTD.D_E_L_E_T_  = ' '  and CTT.CTT_FILIAL  = @cFilial_CTT  and CTT.CTT_CUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM 
                  and CTT.CTT_CLASSE  = '2'  and CTT.D_E_L_E_T_  = ' '  and CT1.CT1_FILIAL  = @cFilial_CT1  and CT1.CT1_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
                  and CT1.CT1_CLASSE  = '2'  and CT1.D_E_L_E_T_  = ' '  and 0  = (
               SELECT COUNT ( * )
                 FROM CQ7020 CQ7
                 WHERE CQ7.CQ7_FILIAL  = @cFilial_CQ7  and CQ7.CQ7_CLVL  = CTH.CTH_CLVL  and CQ7.CQ7_ITEM  = CTD.CTD_ITEM 
                  and CQ7.CQ7_CCUSTO  = CTT.CTT_CUSTO  and CQ7.CQ7_CONTA  = CT1.CT1_CONTA  and CQ7.CQ7_DATA  = @IN_CV1_DTFIM 
                  and CQ7.CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7.CQ7_TPSALD  = '0'  and CQ7.D_E_L_E_T_  = ' ' )
               FOR READ ONLY 
                
               OPEN Ctb390CQ7_H
               FETCH Ctb390CQ7_H 
                INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CUSTO , @cCTXX_CONTA 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @nCTXX_DEBITO  = 0 
                  SET @nCTXX_CREDIT  = 0 
                  SET @cTpSaldo  = '0' 
                  SET @cStatus  = '1' 
                  SET @cSlBase  = 'S' 
                  SET @cDtLp  = ' ' 
                  SET @cLp  = 'N' 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ6020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  SET @iRecno  = 0 
                  SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                    FROM CQ7020 
                  IF @iRecno is null  or @iRecno  = 0 
                  BEGIN 
                     SET @iRecno  = @iRecno  + 1 
                  END 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , 
                         CQ7_TPSALD , CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  FETCH Ctb390CQ7_H 
                   INTO @cCTXX_CLVL , @cCTXX_NORMAL , @cCTXX_ITEM , @cCTXX_CUSTO , @cCTXX_CONTA 
               END 
               CLOSE Ctb390CQ7_H
               DEALLOCATE Ctb390CQ7_H
            END 
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration Ctb390CQ7_2
            DECLARE Ctb390CQ7_2 Insensitive  CURSOR FOR 
            SELECT R_E_C_N_O_ , COALESCE ( CQ7_CONTA , ' ' ), COALESCE ( CQ7_CCUSTO , ' ' ), COALESCE ( CQ7_ITEM , ' ' ), 
                   COALESCE ( CQ7_CLVL , ' ' ), CQ7_DEBITO , CQ7_CREDIT 
              FROM CQ7020 
              WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_CLVL  between @IN_CV1_CTHINI and @IN_CV1_CTHFIM  and CQ7_ITEM  between @IN_CV1_CTDINI and @IN_CV1_CTDFIM 
               and CQ7_CCUSTO  between @IN_CV1_CTTINI and @IN_CV1_CTTFIM  and CQ7_CONTA  between @IN_CV1_CT1INI and @IN_CV1_CT1FIM 
               and CQ7_DATA  = @IN_CV1_DTFIM  and CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7_TPSALD  = '0'  and D_E_L_E_T_  = ' ' 
              
            FOR READ ONLY 
             
            OPEN Ctb390CQ7_2
            FETCH Ctb390CQ7_2 
             INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @nCTXX_DEBITO , @nCTXX_CREDIT 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @cCTXX_NORMAL  = ' ' 
               IF @cCTXX_CONTA  != ' ' 
               BEGIN 
                  SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
                    FROM CT1030 
                    WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                    
               END 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF @IN_COPERACAO  = '1' 
                  BEGIN 
                     IF  (@cCTXX_NORMAL  = '1' ) 
                     BEGIN 
                        IF  (@IN_CV1_VALOR  < 0 ) 
                        BEGIN 
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                        END 
                        ELSE 
                        BEGIN 
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF  (@IN_CV1_VALOR  < 0 ) 
                        BEGIN 
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                        END 
                        ELSE 
                        BEGIN 
                           SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                           SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                        SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                        SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                     END 
                  END 
               END 
               SET @cTpSaldo  = '0' 
               SET @cSlBase  = 'S' 
               SET @cLp  = 'N' 
               SET @cDtLp  = ' ' 
               SET @cStatus  = ' ' 
               begin tran 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = @nCTXX_DEBITO , CQ7_CREDIT  = @nCTXX_CREDIT 
                WHERE R_E_C_N_O_  = @iRecno 
               commit tran 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ6_DEBITO , @nCTXX_CREDIT  = CQ6_CREDIT 
                 FROM CQ6020 
                 WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_CLVL  = @cCTXX_CLVL  and CQ6_ITEM  = @cCTXX_ITEM  and CQ6_CCUSTO  = @cCTXX_CUSTO 
                  and CQ6_CONTA  = @cCTXX_CONTA  and CQ6_DATA  = @IN_CV1_DTFIM  and CQ6_MOEDA  = @IN_CV1_MOEDA  and CQ6_TPSALD  = '0' 
                  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SET @iRecno  = 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , 
                         CQ6_TPSALD , CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , 
                         @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = @nCTXX_DEBITO , CQ6_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ8_DEBITO , @nCTXX_CREDIT  = CQ8_CREDIT 
                 FROM CQ8020 
                 WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @cCTXX_CLVL  and CQ8_DATA  = @cDataF 
                  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ8020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                         CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ8 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               SET @nCTXX_DEBITO  = 0 
               SET @nCTXX_CREDIT  = 0 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCTXX_DEBITO  = CQ9_DEBITO , @nCTXX_CREDIT  = CQ9_CREDIT 
                 FROM CQ9020 
                 WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @cCTXX_CLVL  and CQ9_DATA  = @IN_CV1_DTFIM 
                  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_LP  = @cLp  and D_E_L_E_T_  = ' ' 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + @IN_CV1_VALOR 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO  + ABS ( @IN_CV1_VALOR )
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = @nCTXX_CREDIT  + @IN_CV1_VALOR 
                     SET @nCTXX_DEBITO  = @nCTXX_DEBITO 
                  END 
               END 
               IF @iRecno is null  or @iRecno  = 0 
               BEGIN 
                  SELECT @iRecno  = MAX ( R_E_C_N_O_ )
                    FROM CQ9020 
                  SET @iRecno  = @iRecno  + 1 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                   
                  INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                         CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
                  VALUES (@cFilial_CQ9 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                         @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                   
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
                   WHERE R_E_C_N_O_  = @iRecno 
                  commit tran 
               END 
               FETCH Ctb390CQ7_2 
                INTO @iRecno , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @nCTXX_DEBITO , @nCTXX_CREDIT 
            END 
            CLOSE Ctb390CQ7_2
            DEALLOCATE Ctb390CQ7_2
         END 
         SET @iRepete  = @iRepete  + 1 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB011_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB011_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB011_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB011_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CALIAS Char( 03 ) , 
    @IN_INICIO VarChar( 250 ) , 
    @IN_FIM VarChar( 250 ) , 
    @OUT_Fator Integer  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTH Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cAux Char( 3 )
BEGIN
   SET @cAux  = 'CTH' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTH output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   IF  (@IN_CALIAS  = 'CTH' ) 
   BEGIN 
      SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
        FROM CTH010 
        WHERE CTH_FILIAL  = @cFilial_CTH  and CTH_CLVL  between @IN_INICIO and @IN_FIM  and CTH_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
        
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CALIAS  = 'CTD' ) 
      BEGIN 
         SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
           FROM CTD010 
           WHERE CTD_FILIAL  = @cFilial_CTD  and CTD_ITEM  between @IN_INICIO and @IN_FIM  and CTD_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
           
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CALIAS  = 'CTT' ) 
         BEGIN 
            SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
              FROM CTT010 
              WHERE CTT_FILIAL  = @cFilial_CTT  and CTT_CUSTO  between @IN_INICIO and @IN_FIM  and CTT_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CALIAS  = 'CT1' ) 
            BEGIN 
               SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
                 FROM CT1010 
                 WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  between @IN_INICIO and @IN_FIM  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[CTB011_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB011_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB011_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB011_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CALIAS Char( 03 ) , 
    @IN_INICIO VarChar( 250 ) , 
    @IN_FIM VarChar( 250 ) , 
    @OUT_Fator Integer  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTH Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cAux Char( 3 )
BEGIN
   SET @cAux  = 'CTH' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTH output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   IF  (@IN_CALIAS  = 'CTH' ) 
   BEGIN 
      SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
        FROM CTH030 
        WHERE CTH_FILIAL  = @cFilial_CTH  and CTH_CLVL  between @IN_INICIO and @IN_FIM  and CTH_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
        
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CALIAS  = 'CTD' ) 
      BEGIN 
         SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
           FROM CTD030 
           WHERE CTD_FILIAL  = @cFilial_CTD  and CTD_ITEM  between @IN_INICIO and @IN_FIM  and CTD_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
           
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CALIAS  = 'CTT' ) 
         BEGIN 
            SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
              FROM CTT010 
              WHERE CTT_FILIAL  = @cFilial_CTT  and CTT_CUSTO  between @IN_INICIO and @IN_FIM  and CTT_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CALIAS  = 'CT1' ) 
            BEGIN 
               SELECT @OUT_Fator  = COALESCE ( COUNT ( * ), 1 )
                 FROM CT1030 
                 WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  between @IN_INICIO and @IN_FIM  and CT1_CLASSE  = '2'  and D_E_L_E_T_  = ' ' 
                 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[CTB012_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB012_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB012_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB012_02_01]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iLinhas Integer
BEGIN
   SET @iLinhas  = 1024 
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ0010 
              WITH (ROWLOCK) 
               SET CQ0_DEBITO  = 0 , CQ0_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ0_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = 0 , CQ1_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ1_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and  ( (CQ2_MOEDA  = @IN_MOEDA 
         and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and CQ2_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ2010 
              WITH (ROWLOCK) 
               SET CQ2_DEBITO  = 0 , CQ2_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ2_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and CQ3_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ3010 
              WITH (ROWLOCK) 
               SET CQ3_DEBITO  = 0 , CQ3_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ3_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ4010 
              WITH (ROWLOCK) 
               SET CQ4_DEBITO  = 0 , CQ4_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ4_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and CQ5_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ5010 
              WITH (ROWLOCK) 
               SET CQ5_DEBITO  = 0 , CQ5_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ5_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ6010 
              WITH (ROWLOCK) 
               SET CQ6_DEBITO  = 0 , CQ6_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ6_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ7010 
              WITH (ROWLOCK) 
               SET CQ7_DEBITO  = 0 , CQ7_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ7_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = 0 , CQ8_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = 0 , CQ9_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB012_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB012_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB012_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB012_02_02]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iLinhas Integer
BEGIN
   SET @iLinhas  = 1024 
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ0020 
              WITH (ROWLOCK) 
               SET CQ0_DEBITO  = 0 , CQ0_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ0_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = 0 , CQ1_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ1_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and  ( (CQ2_MOEDA  = @IN_MOEDA 
         and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and CQ2_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ2020 
              WITH (ROWLOCK) 
               SET CQ2_DEBITO  = 0 , CQ2_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ2_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and CQ3_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ3020 
              WITH (ROWLOCK) 
               SET CQ3_DEBITO  = 0 , CQ3_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ3_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ4020 
              WITH (ROWLOCK) 
               SET CQ4_DEBITO  = 0 , CQ4_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ4_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and CQ5_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ5020 
              WITH (ROWLOCK) 
               SET CQ5_DEBITO  = 0 , CQ5_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ5_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ6020 
              WITH (ROWLOCK) 
               SET CQ6_DEBITO  = 0 , CQ6_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ6_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ7020 
              WITH (ROWLOCK) 
               SET CQ7_DEBITO  = 0 , CQ7_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ7_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = 0 , CQ8_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @IN_FILIALDE and @IN_FILIALATE  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = 0 , CQ9_CREDIT  = 0 
             WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @IN_FILIALDE and @IN_FILIALATE 
               and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
               and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  != '1' )  and D_E_L_E_T_  = ' ' 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB013_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB013_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB013_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB013_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTHINI Char( 9) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CTD Char( 01 ) , 
    @IN_CTH Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @nCQX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @iRecno Integer
DECLARE @cTab Char( 03 )
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @cDataF Char( 08 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CQ6' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ6 output 
   SET @cAux  = 'CQ7' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ7 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   IF  (@IN_CT1  = '1' ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CONTA  = ' ' 
   END 
   IF  (@IN_CTT  = '1' ) 
   BEGIN 
      SET @cCTXX_CUSTO  = @IN_CV1_CTTINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CUSTO  = ' ' 
   END 
   IF  (@IN_CTD  = '1' ) 
   BEGIN 
      SET @cCTXX_ITEM  = @IN_CV1_CTDINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_ITEM  = ' ' 
   END 
   IF  (@IN_CTH  = '1' ) 
   BEGIN 
      SET @cCTXX_CLVL  = @IN_CV1_CTHINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CLVL  = ' ' 
   END 
   IF  (@IN_CTH  = '1' ) 
   BEGIN 
      IF @cCTXX_CONTA  != ' ' 
      BEGIN 
         SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
           FROM CT1010 
           WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
      END 
      SET @cTpSaldo  = '0' 
      SET @cStatus  = '1' 
      SET @cSlBase  = 'S' 
      SET @cDtLp  = ' ' 
      SET @cLp  = 'N' 
      SET @iRecno  = 0 
      SET @nCQX_CREDIT  = 0 
      SET @nCQX_DEBITO  = 0 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ6_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ6_DEBITO , 
             0 )
        FROM CQ6010 CQ6
        WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_MOEDA  = @IN_CV1_MOEDA  and CQ6_TPSALD  = '0'  and CQ6_CONTA  = @cCTXX_CONTA 
         and CQ6_CCUSTO  = @cCTXX_CUSTO  and CQ6_ITEM  = @cCTXX_ITEM  and CQ6_CLVL  = @cCTXX_CLVL  and CQ6_DATA  = @cDataF 
         and D_E_L_E_T_  = ' ' 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         IF  (@IN_COPERACAO  = '1' ) 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
            END 
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                   @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         begin tran 
         UPDATE CQ6010 
           WITH (ROWLOCK) 
            SET CQ6_DEBITO  = @nCTXX_DEBITO , CQ6_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      SET @iRecno  = 0 
      SET @nCQX_CREDIT  = 0 
      SET @nCQX_DEBITO  = 0 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ7_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ7_DEBITO , 
             0 )
        FROM CQ7010 CQ7
        WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7_TPSALD  = '0'  and CQ7_CONTA  = @cCTXX_CONTA 
         and CQ7_CCUSTO  = @cCTXX_CUSTO  and CQ7_ITEM  = @cCTXX_ITEM  and CQ7_CLVL  = @cCTXX_CLVL  and CQ7_DATA  = @IN_CV1_DTFIM 
         and D_E_L_E_T_  = ' ' 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         IF  (@IN_COPERACAO  = '1' ) 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
            END 
            SET @cTpSaldo  = '0' 
            SET @cStatus  = '1' 
            SET @cSlBase  = 'S' 
            SET @cDtLp  = ' ' 
            SET @cLp  = 'N' 
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                   @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         SET @cTpSaldo  = '0' 
         SET @cSlBase  = 'S' 
         SET @cLp  = 'N' 
         begin tran 
         UPDATE CQ7010 
           WITH (ROWLOCK) 
            SET CQ7_DEBITO  = @nCTXX_DEBITO , CQ7_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      IF @IN_CTH  = '1' 
      BEGIN 
         SET @cTpSaldo  = '0' 
         SET @cStatus  = '1' 
         SET @cSlBase  = 'S' 
         SET @cDtLp  = ' ' 
         SET @cLp  = 'N' 
         SET @iRecno  = 0 
         SET @nCQX_CREDIT  = 0 
         SET @nCQX_DEBITO  = 0 
         SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ8_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ8_DEBITO , 
                0 )
           FROM CQ8010 CQ8
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_IDENT  = 'CTH' 
            and CQ8_CODIGO  = @cCTXX_CLVL  and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
         IF  (@iRecno is null  or @iRecno  = 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ8010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                      CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ8 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                      @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            begin tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SET @nCQX_CREDIT  = 0 
         SET @nCQX_DEBITO  = 0 
         SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ9_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ9_DEBITO , 
                0 )
           FROM CQ9010 CQ9
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_IDENT  = 'CTH' 
            and CQ9_CODIGO  = @cCTXX_CLVL  and CQ9_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
         IF  (@iRecno is null  or @iRecno  = 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ9010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                      CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ9 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                      @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            begin tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB013_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB013_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB013_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB013_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTHINI Char( 9) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CTD Char( 01 ) , 
    @IN_CTH Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @nCQX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @iRecno Integer
DECLARE @cTab Char( 03 )
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @cDataF Char( 08 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CQ6' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ6 output 
   SET @cAux  = 'CQ7' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ7 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   IF  (@IN_CT1  = '1' ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CONTA  = ' ' 
   END 
   IF  (@IN_CTT  = '1' ) 
   BEGIN 
      SET @cCTXX_CUSTO  = @IN_CV1_CTTINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CUSTO  = ' ' 
   END 
   IF  (@IN_CTD  = '1' ) 
   BEGIN 
      SET @cCTXX_ITEM  = @IN_CV1_CTDINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_ITEM  = ' ' 
   END 
   IF  (@IN_CTH  = '1' ) 
   BEGIN 
      SET @cCTXX_CLVL  = @IN_CV1_CTHINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CLVL  = ' ' 
   END 
   IF  (@IN_CTH  = '1' ) 
   BEGIN 
      IF @cCTXX_CONTA  != ' ' 
      BEGIN 
         SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
           FROM CT1030 
           WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
      END 
      SET @cTpSaldo  = '0' 
      SET @cStatus  = '1' 
      SET @cSlBase  = 'S' 
      SET @cDtLp  = ' ' 
      SET @cLp  = 'N' 
      SET @iRecno  = 0 
      SET @nCQX_CREDIT  = 0 
      SET @nCQX_DEBITO  = 0 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ6_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ6_DEBITO , 
             0 )
        FROM CQ6020 CQ6
        WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_MOEDA  = @IN_CV1_MOEDA  and CQ6_TPSALD  = '0'  and CQ6_CONTA  = @cCTXX_CONTA 
         and CQ6_CCUSTO  = @cCTXX_CUSTO  and CQ6_ITEM  = @cCTXX_ITEM  and CQ6_CLVL  = @cCTXX_CLVL  and CQ6_DATA  = @cDataF 
         and D_E_L_E_T_  = ' ' 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         IF  (@IN_COPERACAO  = '1' ) 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
            END 
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ6 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , 
                   @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         begin tran 
         UPDATE CQ6020 
           WITH (ROWLOCK) 
            SET CQ6_DEBITO  = @nCTXX_DEBITO , CQ6_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      SET @iRecno  = 0 
      SET @nCQX_CREDIT  = 0 
      SET @nCQX_DEBITO  = 0 
      SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ7_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ7_DEBITO , 
             0 )
        FROM CQ7020 CQ7
        WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_MOEDA  = @IN_CV1_MOEDA  and CQ7_TPSALD  = '0'  and CQ7_CONTA  = @cCTXX_CONTA 
         and CQ7_CCUSTO  = @cCTXX_CUSTO  and CQ7_ITEM  = @cCTXX_ITEM  and CQ7_CLVL  = @cCTXX_CLVL  and CQ7_DATA  = @IN_CV1_DTFIM 
         and D_E_L_E_T_  = ' ' 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         IF  (@IN_COPERACAO  = '1' ) 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
            END 
            SET @cTpSaldo  = '0' 
            SET @cStatus  = '1' 
            SET @cSlBase  = 'S' 
            SET @cDtLp  = ' ' 
            SET @cLp  = 'N' 
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , 
                   @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         SET @cTpSaldo  = '0' 
         SET @cSlBase  = 'S' 
         SET @cLp  = 'N' 
         begin tran 
         UPDATE CQ7020 
           WITH (ROWLOCK) 
            SET CQ7_DEBITO  = @nCTXX_DEBITO , CQ7_CREDIT  = @nCTXX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      IF @IN_CTH  = '1' 
      BEGIN 
         SET @cTpSaldo  = '0' 
         SET @cStatus  = '1' 
         SET @cSlBase  = 'S' 
         SET @cDtLp  = ' ' 
         SET @cLp  = 'N' 
         SET @iRecno  = 0 
         SET @nCQX_CREDIT  = 0 
         SET @nCQX_DEBITO  = 0 
         SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ8_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ8_DEBITO , 
                0 )
           FROM CQ8020 CQ8
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_IDENT  = 'CTH' 
            and CQ8_CODIGO  = @cCTXX_CLVL  and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
         IF  (@iRecno is null  or @iRecno  = 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ8020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , 
                      CQ8_DTLP , CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ8 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                      @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            begin tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SET @nCQX_CREDIT  = 0 
         SET @nCQX_DEBITO  = 0 
         SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ9_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ9_DEBITO , 
                0 )
           FROM CQ9020 CQ9
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_IDENT  = 'CTH' 
            and CQ9_CODIGO  = @cCTXX_CLVL  and CQ9_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
         IF  (@iRecno is null  or @iRecno  = 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               IF  (@IN_CT1  = '1' ) 
               BEGIN 
                  IF  (@cCTXX_NORMAL  = '1' ) 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_CV1_VALOR  < 0 ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     ELSE 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  ELSE 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
               END 
               SET @iRecno  = 0 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ9020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , 
                      CQ9_DTLP , CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ9 , 'CTH' , @cCTXX_CLVL , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                      @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CT1  = '1' ) 
            BEGIN 
               IF  (@cCTXX_NORMAL  = '1' ) 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_CV1_VALOR  < 0 ) 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ), 2 )
                     END 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_COPERACAO  = '1' ) 
                     BEGIN 
                        SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR , 2 )
                     END 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ), 2 )
                  END 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_COPERACAO  = '1' ) 
                  BEGIN 
                     SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR , 2 )
                  END 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
               END 
            END 
            begin tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB020_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB020_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB020_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB020_01_01]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_REPROC Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux2 Char( 01 )
DECLARE @cAux Char( 03 )
DECLARE @dDataIni Char( 08 )
DECLARE @dDataFim Char( 08 )
DECLARE @cAlias Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_01 @cAux , @IN_FILIALDE , @cFilial_CT2 output 
   SELECT @dDataIni  = COALESCE ( MIN ( CT2_DATA ), '0' ), @dDataFim  = COALESCE ( MAX ( CT2_DATA ), '1' )
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and D_E_L_E_T_  = ' ' 
   IF  ( (@dDataIni  = '0' )  and  (@dDataFim  = '1' ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @dDataIni  = @IN_DATADE 
      SET @dDataFim  = @IN_DATAATE 
      SET @cAlias  = 'CQ0' 
      SET @cAux2  = '0' 
      EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQ1' 
      EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQA' 
      EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      IF @IN_LCUSTO  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ2' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ3' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LITEM  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ4' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ5' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ6' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ7' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ8' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ9' 
         EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CTC' 
      SET @cAux2  = '0' 
      EXEC CTB002_01_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB021_01_01 @IN_FILIALDE , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @dDataIni , @dDataFim , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB023_01_01 @IN_FILIALDE , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @IN_MVSOMA , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB020_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB020_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB020_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB020_01_02]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_REPROC Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux2 Char( 01 )
DECLARE @cAux Char( 03 )
DECLARE @dDataIni Char( 08 )
DECLARE @dDataFim Char( 08 )
DECLARE @cAlias Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_02 @cAux , @IN_FILIALDE , @cFilial_CT2 output 
   SELECT @dDataIni  = COALESCE ( MIN ( CT2_DATA ), '0' ), @dDataFim  = COALESCE ( MAX ( CT2_DATA ), '1' )
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and D_E_L_E_T_  = ' ' 
   IF  ( (@dDataIni  = '0' )  and  (@dDataFim  = '1' ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @dDataIni  = @IN_DATADE 
      SET @dDataFim  = @IN_DATAATE 
      SET @cAlias  = 'CQ0' 
      SET @cAux2  = '0' 
      EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQ1' 
      EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQA' 
      EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      IF @IN_LCUSTO  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ2' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ3' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LITEM  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ4' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ5' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ6' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ7' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ8' 
         SET @cAux2  = '0' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ9' 
         EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CTC' 
      SET @cAux2  = '0' 
      EXEC CTB002_01_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB021_01_02 @IN_FILIALDE , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @dDataIni , @dDataFim , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB023_01_02 @IN_FILIALDE , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @IN_MVSOMA , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB020_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB020_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB020_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB020_03_01]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_REPROC Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux2 Char( 01 )
DECLARE @cAux Char( 03 )
DECLARE @dDataIni Char( 08 )
DECLARE @dDataFim Char( 08 )
DECLARE @cAlias Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_01 @cAux , @IN_FILIALDE , @cFilial_CT2 output 
   SELECT @dDataIni  = COALESCE ( MIN ( CT2_DATA ), '0' ), @dDataFim  = COALESCE ( MAX ( CT2_DATA ), '1' )
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and D_E_L_E_T_  = ' ' 
   IF  ( (@dDataIni  = '0' )  and  (@dDataFim  = '1' ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @dDataIni  = @IN_DATADE 
      SET @dDataFim  = @IN_DATAATE 
      SET @cAlias  = 'CQ0' 
      SET @cAux2  = '0' 
      EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQ1' 
      EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQA' 
      EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      IF @IN_LCUSTO  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ2' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ3' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LITEM  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ4' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ5' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ6' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ7' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ8' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ9' 
         EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CTC' 
      SET @cAux2  = '0' 
      EXEC CTB002_03_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB021_03_01 @IN_FILIALDE , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @dDataIni , @dDataFim , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB023_03_01 @IN_FILIALDE , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @IN_MVSOMA , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB024_03_01 @IN_FILIALDE , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB020_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB020_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB020_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB020_03_02]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALDE Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_REPROC Char( 01 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux2 Char( 01 )
DECLARE @cAux Char( 03 )
DECLARE @dDataIni Char( 08 )
DECLARE @dDataFim Char( 08 )
DECLARE @cAlias Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_02 @cAux , @IN_FILIALDE , @cFilial_CT2 output 
   SELECT @dDataIni  = COALESCE ( MIN ( CT2_DATA ), '0' ), @dDataFim  = COALESCE ( MAX ( CT2_DATA ), '1' )
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and D_E_L_E_T_  = ' ' 
   IF  ( (@dDataIni  = '0' )  and  (@dDataFim  = '1' ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @dDataIni  = @IN_DATADE 
      SET @dDataFim  = @IN_DATAATE 
      SET @cAlias  = 'CQ0' 
      SET @cAux2  = '0' 
      EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQ1' 
      EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @cAlias  = 'CQA' 
      EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      IF @IN_LCUSTO  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ2' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ3' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LITEM  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ4' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ5' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ6' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ7' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      IF @IN_LCUSTO  = '1'  or @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
         SET @cAlias  = 'CQ8' 
         SET @cAux2  = '0' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
         SET @cAlias  = 'CQ9' 
         EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , 
                @dDataFim , @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      END 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CTC' 
      SET @cAux2  = '0' 
      EXEC CTB002_03_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIALDE , @IN_FILIALATE , @dDataIni , @dDataFim , 
             @cAux2 , @IN_INTEGRIDADE , @IN_MVCTB190D , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB021_03_02 @IN_FILIALDE , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @dDataIni , @dDataFim , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB023_03_02 @IN_FILIALDE , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @IN_MVSOMA , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB024_03_02 @IN_FILIALDE , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB021_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB021_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB021_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB021_01_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @iTranCount Integer
DECLARE @cDATACQ Char( 06 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
     ORDER BY 1 , 2 , 3 , 4 , 5 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = ROUND ( @nVALOR , 2 )
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = ROUND ( @nVALOR , 2 )
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  = @cDATA  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1010 
           WITH (ROWLOCK) 
            SET CQ1_DEBITO  = CQ1_DEBITO  + @nCTX_DEBITO , CQ1_CREDIT  = CQ1_CREDIT  + @nCTX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      IF @cCT2_DTLP  != ' ' 
      BEGIN 
         SET @cCUSTO  = ' ' 
         SET @cITEM  = ' ' 
         SET @cCLVL  = ' ' 
         SET @cIdent  = ' ' 
         SET @cTabela  = 'CQ1' 
         EXEC CTB025_01_01 @cFilial_CQ1 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   SET @cDATACQ  = ' ' 
    
   -- Cursor declaration CUR_CQ1
   DECLARE CUR_CQ1 insensitive  CURSOR FOR 
   SELECT CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP , SUM(CQ1_DEBITO ), SUM(CQ1_CREDIT )
     FROM CQ1010 
     WHERE CQ1_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ1_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP 
     ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
   FOR READ ONLY 
    
   OPEN CUR_CQ1
   FETCH CUR_CQ1 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cDataI  = @cDATACQ  + '01' 
      EXEC LASTDAY_01_01 @cDataI , @cDataF output 
      SET @nCTX_DEBITO  = ROUND ( @nVALORDeb , 2 )
      SET @nCTX_CREDIT  = ROUND ( @nVALORCred , 2 )
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cCONTA  and CQ0_MOEDA  = @cMOEDA  and CQ0_DATA  = @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCONTA , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0010 
           WITH (ROWLOCK) 
            SET CQ0_DTLP  = @cCTX_DTLP , CQ0_DEBITO  = CQ0_DEBITO  + @nCTX_DEBITO , CQ0_CREDIT  = CQ0_CREDIT  + @nCTX_CREDIT 
           
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      FETCH CUR_CQ1 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   END 
   CLOSE CUR_CQ1
   DEALLOCATE CUR_CQ1
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         EXEC LASTDAY_01_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ3010 
              WITH (ROWLOCK) 
               SET CQ3_DEBITO  = CQ3_DEBITO  + @nCTX_DEBITO , CQ3_CREDIT  = CQ3_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ3' 
            EXEC CTB025_01_01 @cFilial_CQ3 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_CONTA , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), 
             SUM(CQ3_CREDIT )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
           WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_CONTA  = @cCONTA  and CQ2_CCUSTO  = @cCUSTO  and CQ2_MOEDA  = @cMOEDA 
            and CQ2_DATA  = @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ2010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                   CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ2 , @cCONTA , @cCUSTO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            begin tran 
            UPDATE CQ2010 
              WITH (ROWLOCK) 
               SET CQ2_DTLP  = @cCTX_DTLP , CQ2_DEBITO  = CQ2_DEBITO  + @nCTX_DEBITO , CQ2_CREDIT  = CQ2_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB230_01_01 @IN_FILIAL , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1'  or @IN_LCUSTO  = '1' 
   BEGIN 
      EXEC CTB232_01_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB021_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB021_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB021_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB021_01_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @iTranCount Integer
DECLARE @cDATACQ Char( 06 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
     ORDER BY 1 , 2 , 3 , 4 , 5 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = ROUND ( @nVALOR , 2 )
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = ROUND ( @nVALOR , 2 )
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  = @cDATA  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1020 
           WITH (ROWLOCK) 
            SET CQ1_DEBITO  = CQ1_DEBITO  + @nCTX_DEBITO , CQ1_CREDIT  = CQ1_CREDIT  + @nCTX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      IF @cCT2_DTLP  != ' ' 
      BEGIN 
         SET @cCUSTO  = ' ' 
         SET @cITEM  = ' ' 
         SET @cCLVL  = ' ' 
         SET @cIdent  = ' ' 
         SET @cTabela  = 'CQ1' 
         EXEC CTB025_01_02 @cFilial_CQ1 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   SET @cDATACQ  = ' ' 
    
   -- Cursor declaration CUR_CQ1
   DECLARE CUR_CQ1 insensitive  CURSOR FOR 
   SELECT CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP , SUM(CQ1_DEBITO ), SUM(CQ1_CREDIT )
     FROM CQ1020 
     WHERE CQ1_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ1_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP 
     ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
   FOR READ ONLY 
    
   OPEN CUR_CQ1
   FETCH CUR_CQ1 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cDataI  = @cDATACQ  + '01' 
      EXEC LASTDAY_01_02 @cDataI , @cDataF output 
      SET @nCTX_DEBITO  = ROUND ( @nVALORDeb , 2 )
      SET @nCTX_CREDIT  = ROUND ( @nVALORCred , 2 )
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cCONTA  and CQ0_MOEDA  = @cMOEDA  and CQ0_DATA  = @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCONTA , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0020 
           WITH (ROWLOCK) 
            SET CQ0_DTLP  = @cCTX_DTLP , CQ0_DEBITO  = CQ0_DEBITO  + @nCTX_DEBITO , CQ0_CREDIT  = CQ0_CREDIT  + @nCTX_CREDIT 
           
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
      FETCH CUR_CQ1 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   END 
   CLOSE CUR_CQ1
   DEALLOCATE CUR_CQ1
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         EXEC LASTDAY_01_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ3020 
              WITH (ROWLOCK) 
               SET CQ3_DEBITO  = CQ3_DEBITO  + @nCTX_DEBITO , CQ3_CREDIT  = CQ3_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ3' 
            EXEC CTB025_01_02 @cFilial_CQ3 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_CONTA , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), 
             SUM(CQ3_CREDIT )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
           WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_CONTA  = @cCONTA  and CQ2_CCUSTO  = @cCUSTO  and CQ2_MOEDA  = @cMOEDA 
            and CQ2_DATA  = @cDataF  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ2020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                   CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ2 , @cCONTA , @cCUSTO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            begin tran 
            UPDATE CQ2020 
              WITH (ROWLOCK) 
               SET CQ2_DTLP  = @cCTX_DTLP , CQ2_DEBITO  = CQ2_DEBITO  + @nCTX_DEBITO , CQ2_CREDIT  = CQ2_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB230_01_02 @IN_FILIAL , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1'  or @IN_LCUSTO  = '1' 
   BEGIN 
      EXEC CTB232_01_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB021_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB021_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB021_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB021_03_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
     ORDER BY 1 , 2 , 3 , 4 , 5 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = @nVALOR 
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = @nVALOR 
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_DATA  = @cDATA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_LP  = @cCTX_LP  and CQ1_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nVALOR  = ROUND ( @nVALOR , 2 )
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = CQ1_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_CREDIT  = CQ1_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         Commit tran 
      END 
      IF @cCT2_DTLP  != ' ' 
      BEGIN 
         SET @cCUSTO  = ' ' 
         SET @cITEM  = ' ' 
         SET @cCLVL  = ' ' 
         SET @cIdent  = ' ' 
         SET @cTabela  = 'CQ1' 
         EXEC CTB025_03_01 @cFilial_CQ1 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   SET @iNroRegs  = 0 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CQ1
   DECLARE CUR_CQ1 insensitive  CURSOR FOR 
   SELECT CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP , SUM(CQ1_DEBITO ), SUM(CQ1_CREDIT )
     FROM CQ1010 
     WHERE CQ1_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ1_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP 
     ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
   FOR READ ONLY 
    
   OPEN CUR_CQ1
   FETCH CUR_CQ1 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @iNroRegs  = @iNroRegs  + 1 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @cDataI , @cDataF output 
      SET @nCTX_DEBITO  = @nVALORDeb 
      SET @nCTX_CREDIT  = @nVALORCred 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cCONTA  and CQ0_MOEDA  = @cMOEDA  and CQ0_DATA  = @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_LP  = @cCTX_LP  and CQ0_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iNroRegs  = 1 
      BEGIN 
         Begin Transaction 
         SET @iNroRegs  = @iNroRegs 
      END 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCONTA , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         UPDATE CQ0010 
           WITH (ROWLOCK) 
            SET CQ0_DEBITO  = CQ0_DEBITO  + @nCTX_DEBITO , CQ0_CREDIT  = CQ0_CREDIT  + @nCTX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      IF @iNroRegs  >= 1024 
      BEGIN 
         Commit Transaction 
         SET @iNroRegs  = 0 
      END 
      FETCH CUR_CQ1 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   END 
   CLOSE CUR_CQ1
   DEALLOCATE CUR_CQ1
   IF @iNroRegs  > 0 
   BEGIN 
       Commit Transaction  
   END 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         EXEC LASTDAY_03_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = @cCTX_LP  and CQ3_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = CQ3_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_CREDIT  = CQ3_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ3' 
            EXEC CTB025_03_01 @cFilial_CQ3 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), 
             SUM(CQ3_CREDIT )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
           WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  = @cDataF  and CQ2_CONTA  = @cCONTA  and CQ2_CCUSTO  = @cCUSTO 
            and CQ2_MOEDA  = @cMOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = @cCTX_LP  and CQ2_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Transaction 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ2010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                   CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ2 , @cCONTA , @cCUSTO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ2010 
              WITH (ROWLOCK) 
               SET CQ2_DEBITO  = CQ2_DEBITO  + @nCTX_DEBITO , CQ2_CREDIT  = CQ2_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            Commit Transaction 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB230_03_01 @IN_FILIAL , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , 
             @IN_TPSALDO , @OUT_RESULTADO output 
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1'  or @IN_LCUSTO  = '1' 
   BEGIN 
      EXEC CTB232_03_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB021_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB021_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB021_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB021_03_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO 
      and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
      and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
     ORDER BY 1 , 2 , 3 , 4 , 5 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = @nVALOR 
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = @nVALOR 
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_DATA  = @cDATA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_LP  = @cCTX_LP  and CQ1_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nVALOR  = ROUND ( @nVALOR , 2 )
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = CQ1_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_CREDIT  = CQ1_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         Commit tran 
      END 
      IF @cCT2_DTLP  != ' ' 
      BEGIN 
         SET @cCUSTO  = ' ' 
         SET @cITEM  = ' ' 
         SET @cCLVL  = ' ' 
         SET @cIdent  = ' ' 
         SET @cTabela  = 'CQ1' 
         EXEC CTB025_03_02 @cFilial_CQ1 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   SET @iNroRegs  = 0 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CQ1
   DECLARE CUR_CQ1 insensitive  CURSOR FOR 
   SELECT CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP , SUM(CQ1_DEBITO ), SUM(CQ1_CREDIT )
     FROM CQ1020 
     WHERE CQ1_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ1_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , SUBSTRING ( CQ1_DATA , 1 , 6 ), CQ1_DTLP , CQ1_LP 
     ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
   FOR READ ONLY 
    
   OPEN CUR_CQ1
   FETCH CUR_CQ1 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @iNroRegs  = @iNroRegs  + 1 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @cDataI , @cDataF output 
      SET @nCTX_DEBITO  = @nVALORDeb 
      SET @nCTX_CREDIT  = @nVALORCred 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cCONTA  and CQ0_MOEDA  = @cMOEDA  and CQ0_DATA  = @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_LP  = @cCTX_LP  and CQ0_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iNroRegs  = 1 
      BEGIN 
         Begin Transaction 
         SET @iNroRegs  = @iNroRegs 
      END 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCONTA , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         UPDATE CQ0020 
           WITH (ROWLOCK) 
            SET CQ0_DEBITO  = CQ0_DEBITO  + @nCTX_DEBITO , CQ0_CREDIT  = CQ0_CREDIT  + @nCTX_CREDIT 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      IF @iNroRegs  >= 1024 
      BEGIN 
         Commit Transaction 
         SET @iNroRegs  = 0 
      END 
      FETCH CUR_CQ1 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
   END 
   CLOSE CUR_CQ1
   DEALLOCATE CUR_CQ1
   IF @iNroRegs  > 0 
   BEGIN 
       Commit Transaction  
   END 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         EXEC LASTDAY_03_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = @cCTX_LP  and CQ3_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = CQ3_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_CREDIT  = CQ3_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ3' 
            EXEC CTB025_03_02 @cFilial_CQ3 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), 
             SUM(CQ3_CREDIT )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , SUBSTRING ( CQ3_DATA , 1 , 6 ), CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
           WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  = @cDataF  and CQ2_CONTA  = @cCONTA  and CQ2_CCUSTO  = @cCUSTO 
            and CQ2_MOEDA  = @cMOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = @cCTX_LP  and CQ2_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Transaction 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ2020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                   CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ2 , @cCONTA , @cCUSTO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ2020 
              WITH (ROWLOCK) 
               SET CQ2_DEBITO  = CQ2_DEBITO  + @nCTX_DEBITO , CQ2_CREDIT  = CQ2_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            Commit Transaction 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB230_03_02 @IN_FILIAL , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , 
             @IN_TPSALDO , @OUT_RESULTADO output 
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1'  or @IN_LCUSTO  = '1' 
   BEGIN 
      EXEC CTB232_03_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_FILIALATE , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , 
             @IN_MOEDA , @IN_TPSALDO , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB023_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB023_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB023_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB023_01_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cCT2_DC Char( 1)
DECLARE @cCT2_DATA Char( 08 )
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
DECLARE @cCT2_MOEDLC Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @nCT2_VALOR Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_INF Float
DECLARE @iRecno Integer
DECLARE @iRecnoNew Integer
DECLARE @iTranCount Integer
DECLARE @cFilCTCAnt Char( 2)
DECLARE @cFirst Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIALCOR 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   SET @cFilCTCAnt  = ' ' 
   SET @cFilial_CTC  = ' ' 
   SET @cFirst  = '0' 
   SET @iNroRegs  = 0 
    
   -- Cursor declaration CUR_CT190DOC
   DECLARE CUR_CT190DOC insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DC , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , SUM(CT2_VALOR )
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CT2_DATA  between @cDataI and @cDataF  and CT2_TPSALD  = @IN_TPSALDO 
      and CT2_DC  != '4'  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
     ORDER BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
   FOR READ ONLY 
    
   OPEN CUR_CT190DOC
   FETCH CUR_CT190DOC 
    INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @iNroRegs  = @iNroRegs  + 1 
      IF @cFirst  = '0'  or @cFilCTCAnt  != @cFILCT2 
      BEGIN 
         SET @cFirst  = '1' 
         SET @cAux  = 'CTC' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CTC output 
      END 
      SET @nCTC_DEBITOX  = 0 
      SET @nCTC_CREDITX  = 0 
      SET @nCTC_DIGX  = 0 
      SET @nCTC_DIG  = 0 
      SET @nCTC_DEBITO  = 0 
      SET @nCTC_CREDIT  = 0 
      SET @nCTC_INF  = 0 
      SET @nCT2_VALOR  = @nCT2_VALOR 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @cCT2_DATA  and CTC_LOTE  = @cCT2_LOTE  and CTC_SBLOTE  = @cCT2_SBLOTE 
         and CTC_DOC  = @cCT2_DOC  and CTC_MOEDA  = @cCT2_MOEDLC  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecnoNew  = MAX ( R_E_C_N_O_ )
           FROM CTC010 
         SET @iRecnoNew  = @iRecnoNew  + 1 
         IF  (@iRecnoNew is null  or @iRecnoNew  = 0 ) 
         BEGIN 
            SET @iRecnoNew  = 1 
         END 
         IF @cCT2_DC IN ( '1' , '3'  ) 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC IN ( '2' , '3'  ) 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND (  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
         END 
      END 
      ELSE 
      BEGIN 
         SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
           FROM CTC010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cCT2_DC  = '1' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT , 2 )
         END 
         IF @cCT2_DC  = '2' 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  +  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
         END 
      END 
      IF @iNroRegs  = 1 
      BEGIN 
         Begin Transaction 
         SET @iNroRegs  = @iNroRegs 
      END 
      IF @iRecno  = 0 
      BEGIN 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO CTC010 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
                CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
         VALUES (@cFilial_CTC , @cCT2_MOEDLC , @IN_TPSALDO , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , '1' , @nCTC_DEBITOX , 
                @nCTC_CREDITX , @nCTC_DIGX , @iRecnoNew );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoNew = @iRecnoNew + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         UPDATE CTC010 
           WITH (ROWLOCK) 
            SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      IF @iNroRegs  >= 5000 
      BEGIN 
         SET @iNroRegs  = 0 
         Commit Tran 
      END 
      SET @cFilCTCAnt  = @cFILCT2 
      FETCH CUR_CT190DOC 
       INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   END 
   CLOSE CUR_CT190DOC
   DEALLOCATE CUR_CT190DOC
   IF @iNroRegs  > 0 
   BEGIN 
      SET @iNroRegs  = 0 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB023_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB023_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB023_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB023_01_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cCT2_DC Char( 1)
DECLARE @cCT2_DATA Char( 08 )
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
DECLARE @cCT2_MOEDLC Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @nCT2_VALOR Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_INF Float
DECLARE @iRecno Integer
DECLARE @iRecnoNew Integer
DECLARE @iTranCount Integer
DECLARE @cFilCTCAnt Char( 2)
DECLARE @cFirst Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIALCOR 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   SET @cFilCTCAnt  = ' ' 
   SET @cFilial_CTC  = ' ' 
   SET @cFirst  = '0' 
   SET @iNroRegs  = 0 
    
   -- Cursor declaration CUR_CT190DOC
   DECLARE CUR_CT190DOC insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DC , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , SUM(CT2_VALOR )
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CT2_DATA  between @cDataI and @cDataF  and CT2_TPSALD  = @IN_TPSALDO 
      and CT2_DC  != '4'  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
     ORDER BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
   FOR READ ONLY 
    
   OPEN CUR_CT190DOC
   FETCH CUR_CT190DOC 
    INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @iNroRegs  = @iNroRegs  + 1 
      IF @cFirst  = '0'  or @cFilCTCAnt  != @cFILCT2 
      BEGIN 
         SET @cFirst  = '1' 
         SET @cAux  = 'CTC' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CTC output 
      END 
      SET @nCTC_DEBITOX  = 0 
      SET @nCTC_CREDITX  = 0 
      SET @nCTC_DIGX  = 0 
      SET @nCTC_DIG  = 0 
      SET @nCTC_DEBITO  = 0 
      SET @nCTC_CREDIT  = 0 
      SET @nCTC_INF  = 0 
      SET @nCT2_VALOR  = @nCT2_VALOR 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @cCT2_DATA  and CTC_LOTE  = @cCT2_LOTE  and CTC_SBLOTE  = @cCT2_SBLOTE 
         and CTC_DOC  = @cCT2_DOC  and CTC_MOEDA  = @cCT2_MOEDLC  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecnoNew  = MAX ( R_E_C_N_O_ )
           FROM CTC030 
         SET @iRecnoNew  = @iRecnoNew  + 1 
         IF  (@iRecnoNew is null  or @iRecnoNew  = 0 ) 
         BEGIN 
            SET @iRecnoNew  = 1 
         END 
         IF @cCT2_DC IN ( '1' , '3'  ) 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC IN ( '2' , '3'  ) 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND (  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
         END 
      END 
      ELSE 
      BEGIN 
         SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
           FROM CTC030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cCT2_DC  = '1' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT , 2 )
         END 
         IF @cCT2_DC  = '2' 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  +  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
         END 
      END 
      IF @iNroRegs  = 1 
      BEGIN 
         Begin Transaction 
         SET @iNroRegs  = @iNroRegs 
      END 
      IF @iRecno  = 0 
      BEGIN 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO CTC030 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
                CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
         VALUES (@cFilial_CTC , @cCT2_MOEDLC , @IN_TPSALDO , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , '1' , @nCTC_DEBITOX , 
                @nCTC_CREDITX , @nCTC_DIGX , @iRecnoNew );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoNew = @iRecnoNew + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         UPDATE CTC030 
           WITH (ROWLOCK) 
            SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      IF @iNroRegs  >= 5000 
      BEGIN 
         SET @iNroRegs  = 0 
         Commit Tran 
      END 
      SET @cFilCTCAnt  = @cFILCT2 
      FETCH CUR_CT190DOC 
       INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   END 
   CLOSE CUR_CT190DOC
   DEALLOCATE CUR_CT190DOC
   IF @iNroRegs  > 0 
   BEGIN 
      SET @iNroRegs  = 0 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB023_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB023_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB023_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB023_03_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cCT2_DC Char( 1)
DECLARE @cCT2_DATA Char( 08 )
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
DECLARE @cCT2_MOEDLC Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @nCT2_VALOR Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_INF Float
DECLARE @iRecno Integer
DECLARE @iRecnoNew Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIALCOR 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CT190DOC
   DECLARE CUR_CT190DOC insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DC , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , SUM(CT2_VALOR )
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CT2_DATA  between @cDataI and @cDataF  and CT2_TPSALD  = @IN_TPSALDO 
      and CT2_DC  != '4'  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
     ORDER BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
   FOR READ ONLY 
    
   OPEN CUR_CT190DOC
   FETCH CUR_CT190DOC 
    INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CTC output 
      SET @nCTC_DEBITOX  = 0 
      SET @nCTC_CREDITX  = 0 
      SET @nCTC_DIGX  = 0 
      SET @nCTC_DIG  = 0 
      SET @nCTC_DEBITO  = 0 
      SET @nCTC_CREDIT  = 0 
      SET @nCTC_INF  = 0 
      SET @nCT2_VALOR  = @nCT2_VALOR 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @cCT2_DATA  and CTC_LOTE  = @cCT2_LOTE  and CTC_SBLOTE  = @cCT2_SBLOTE 
         and CTC_DOC  = @cCT2_DOC  and CTC_MOEDA  = @cCT2_MOEDLC  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecnoNew  = MAX ( R_E_C_N_O_ )
           FROM CTC010 
         SET @iRecnoNew  = @iRecnoNew  + 1 
         IF  (@iRecnoNew is null  or @iRecnoNew  = 0 ) 
         BEGIN 
            SET @iRecnoNew  = 1 
         END 
         IF @cCT2_DC IN ( '1' , '3'  ) 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC IN ( '2' , '3'  ) 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND (  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
         END 
      END 
      ELSE 
      BEGIN 
         SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
           FROM CTC010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cCT2_DC  = '1' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT , 2 )
         END 
         IF @cCT2_DC  = '2' 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  +  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
         END 
      END 
      IF @iRecno  = 0 
      BEGIN 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CTC010 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
                CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
         VALUES (@cFilial_CTC , @cCT2_MOEDLC , @IN_TPSALDO , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , '1' , @nCTC_DEBITOX , 
                @nCTC_CREDITX , @nCTC_DIGX , @iRecnoNew );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoNew = @iRecnoNew + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         Begin Tran 
         UPDATE CTC010 
           WITH (ROWLOCK) 
            SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
          WHERE R_E_C_N_O_  = @iRecno 
         Commit Tran 
      END 
      FETCH CUR_CT190DOC 
       INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   END 
   CLOSE CUR_CT190DOC
   DEALLOCATE CUR_CT190DOC
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB023_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB023_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB023_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB023_03_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cCT2_DC Char( 1)
DECLARE @cCT2_DATA Char( 08 )
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
DECLARE @cCT2_MOEDLC Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @nCT2_VALOR Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_INF Float
DECLARE @iRecno Integer
DECLARE @iRecnoNew Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIALCOR 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CT190DOC
   DECLARE CUR_CT190DOC insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DC , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , SUM(CT2_VALOR )
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CT2_DATA  between @cDataI and @cDataF  and CT2_TPSALD  = @IN_TPSALDO 
      and CT2_DC  != '4'  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
     ORDER BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
   FOR READ ONLY 
    
   OPEN CUR_CT190DOC
   FETCH CUR_CT190DOC 
    INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CTC output 
      SET @nCTC_DEBITOX  = 0 
      SET @nCTC_CREDITX  = 0 
      SET @nCTC_DIGX  = 0 
      SET @nCTC_DIG  = 0 
      SET @nCTC_DEBITO  = 0 
      SET @nCTC_CREDIT  = 0 
      SET @nCTC_INF  = 0 
      SET @nCT2_VALOR  = @nCT2_VALOR 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @cCT2_DATA  and CTC_LOTE  = @cCT2_LOTE  and CTC_SBLOTE  = @cCT2_SBLOTE 
         and CTC_DOC  = @cCT2_DOC  and CTC_MOEDA  = @cCT2_MOEDLC  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecnoNew  = MAX ( R_E_C_N_O_ )
           FROM CTC030 
         SET @iRecnoNew  = @iRecnoNew  + 1 
         IF  (@iRecnoNew is null  or @iRecnoNew  = 0 ) 
         BEGIN 
            SET @iRecnoNew  = 1 
         END 
         IF @cCT2_DC IN ( '1' , '3'  ) 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC IN ( '2' , '3'  ) 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND (  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
         END 
      END 
      ELSE 
      BEGIN 
         SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
           FROM CTC030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cCT2_DC  = '1' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT , 2 )
         END 
         IF @cCT2_DC  = '2' 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  +  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
         END 
      END 
      IF @iRecno  = 0 
      BEGIN 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CTC030 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
                CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
         VALUES (@cFilial_CTC , @cCT2_MOEDLC , @IN_TPSALDO , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , '1' , @nCTC_DEBITOX , 
                @nCTC_CREDITX , @nCTC_DIGX , @iRecnoNew );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoNew = @iRecnoNew + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         Begin Tran 
         UPDATE CTC030 
           WITH (ROWLOCK) 
            SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
          WHERE R_E_C_N_O_  = @iRecno 
         Commit Tran 
      END 
      FETCH CUR_CT190DOC 
       INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   END 
   CLOSE CUR_CT190DOC
   DEALLOCATE CUR_CT190DOC
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB023_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB023_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB023_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB023_07_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cCT2_DC Char( 1)
DECLARE @cCT2_DATA Char( 08 )
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
DECLARE @cCT2_MOEDLC Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @nCT2_VALOR Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_INF Float
DECLARE @iRecno Integer
DECLARE @iRecnoNew Integer
DECLARE @iTranCount Integer
DECLARE @cFilCTCAnt Char( 2)
DECLARE @cFirst Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIALCOR 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_07_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   SET @cFilCTCAnt  = ' ' 
   SET @cFilial_CTC  = ' ' 
   SET @cFirst  = '0' 
   SET @iNroRegs  = 0 
    
   -- Cursor declaration CUR_CT190DOC
   DECLARE CUR_CT190DOC insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DC , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , SUM(CT2_VALOR )
     FROM CT2010 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CT2_DATA  between @cDataI and @cDataF  and CT2_TPSALD  = @IN_TPSALDO 
      and CT2_DC  != '4'  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
     ORDER BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
   FOR READ ONLY 
    
   OPEN CUR_CT190DOC
   FETCH CUR_CT190DOC 
    INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @iNroRegs  = @iNroRegs  + 1 
      IF @cFirst  = '0'  or @cFilCTCAnt  != @cFILCT2 
      BEGIN 
         SET @cFirst  = '1' 
         SET @cAux  = 'CTC' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CTC output 
      END 
      SET @nCTC_DEBITOX  = 0 
      SET @nCTC_CREDITX  = 0 
      SET @nCTC_DIGX  = 0 
      SET @nCTC_DIG  = 0 
      SET @nCTC_DEBITO  = 0 
      SET @nCTC_CREDIT  = 0 
      SET @nCTC_INF  = 0 
      SET @nCT2_VALOR  = @nCT2_VALOR 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @cCT2_DATA  and CTC_LOTE  = @cCT2_LOTE  and CTC_SBLOTE  = @cCT2_SBLOTE 
         and CTC_DOC  = @cCT2_DOC  and CTC_MOEDA  = @cCT2_MOEDLC  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecnoNew  = MAX ( R_E_C_N_O_ )
           FROM CTC010 
         SET @iRecnoNew  = @iRecnoNew  + 1 
         IF  (@iRecnoNew is null  or @iRecnoNew  = 0 ) 
         BEGIN 
            SET @iRecnoNew  = 1 
         END 
         IF @cCT2_DC IN ( '1' , '3'  ) 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC IN ( '2' , '3'  ) 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND (  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
         END 
      END 
      ELSE 
      BEGIN 
         SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
           FROM CTC010 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cCT2_DC  = '1' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT , 2 )
         END 
         IF @cCT2_DC  = '2' 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  +  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
         END 
      END 
      IF @iNroRegs  = 1 
      BEGIN 
         Begin Transaction 
         SET @iNroRegs  = @iNroRegs 
      END 
      IF @iRecno  = 0 
      BEGIN 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO CTC010 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
                CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
         VALUES (@cFilial_CTC , @cCT2_MOEDLC , @IN_TPSALDO , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , '1' , @nCTC_DEBITOX , 
                @nCTC_CREDITX , @nCTC_DIGX , @iRecnoNew );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoNew = @iRecnoNew + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         UPDATE CTC010 
           WITH (ROWLOCK) 
            SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      IF @iNroRegs  >= 5000 
      BEGIN 
         SET @iNroRegs  = 0 
         Commit Tran 
      END 
      SET @cFilCTCAnt  = @cFILCT2 
      FETCH CUR_CT190DOC 
       INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   END 
   CLOSE CUR_CT190DOC
   DEALLOCATE CUR_CT190DOC
   IF @iNroRegs  > 0 
   BEGIN 
      SET @iNroRegs  = 0 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB023_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB023_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB023_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB023_07_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cCT2_DC Char( 1)
DECLARE @cCT2_DATA Char( 08 )
DECLARE @cCT2_LOTE Char( 6)
DECLARE @cCT2_SBLOTE Char( 3)
DECLARE @cCT2_DOC Char( 6)
DECLARE @cCT2_MOEDLC Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @nCT2_VALOR Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_INF Float
DECLARE @iRecno Integer
DECLARE @iRecnoNew Integer
DECLARE @iTranCount Integer
DECLARE @cFilCTCAnt Char( 2)
DECLARE @cFirst Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIALCOR 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_07_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   SET @cFilCTCAnt  = ' ' 
   SET @cFilial_CTC  = ' ' 
   SET @cFirst  = '0' 
   SET @iNroRegs  = 0 
    
   -- Cursor declaration CUR_CT190DOC
   DECLARE CUR_CT190DOC insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DC , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , SUM(CT2_VALOR )
     FROM CT2030 
     WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CT2_DATA  between @cDataI and @cDataF  and CT2_TPSALD  = @IN_TPSALDO 
      and CT2_DC  != '4'  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
     ORDER BY CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_DC , CT2_MOEDLC 
   FOR READ ONLY 
    
   OPEN CUR_CT190DOC
   FETCH CUR_CT190DOC 
    INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @iNroRegs  = @iNroRegs  + 1 
      IF @cFirst  = '0'  or @cFilCTCAnt  != @cFILCT2 
      BEGIN 
         SET @cFirst  = '1' 
         SET @cAux  = 'CTC' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CTC output 
      END 
      SET @nCTC_DEBITOX  = 0 
      SET @nCTC_CREDITX  = 0 
      SET @nCTC_DIGX  = 0 
      SET @nCTC_DIG  = 0 
      SET @nCTC_DEBITO  = 0 
      SET @nCTC_CREDIT  = 0 
      SET @nCTC_INF  = 0 
      SET @nCT2_VALOR  = @nCT2_VALOR 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @cCT2_DATA  and CTC_LOTE  = @cCT2_LOTE  and CTC_SBLOTE  = @cCT2_SBLOTE 
         and CTC_DOC  = @cCT2_DOC  and CTC_MOEDA  = @cCT2_MOEDLC  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecnoNew  = MAX ( R_E_C_N_O_ )
           FROM CTC030 
         SET @iRecnoNew  = @iRecnoNew  + 1 
         IF  (@iRecnoNew is null  or @iRecnoNew  = 0 ) 
         BEGIN 
            SET @iRecnoNew  = 1 
         END 
         IF @cCT2_DC IN ( '1' , '3'  ) 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC IN ( '2' , '3'  ) 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCT2_VALOR , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND (  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCT2_VALOR , 2 )
         END 
      END 
      ELSE 
      BEGIN 
         SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
           FROM CTC030 
           WHERE R_E_C_N_O_  = @iRecno 
         IF @cCT2_DC  = '1' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT , 2 )
         END 
         IF @cCT2_DC  = '2' 
         BEGIN 
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO , 2 )
         END 
         IF @cCT2_DC  = '3' 
         BEGIN 
            SET @nCTC_DEBITOX  = ROUND ( @nCTC_DEBITO  + @nCT2_VALOR , 2 )
            SET @nCTC_CREDITX  = ROUND ( @nCTC_CREDIT  + @nCT2_VALOR , 2 )
            IF @IN_MVSOMA  = '1' 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  +  (2  * @nCT2_VALOR ) , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = ROUND ( @nCTC_DIG  + @nCT2_VALOR , 2 )
         END 
      END 
      IF @iNroRegs  = 1 
      BEGIN 
         Begin Transaction 
         SET @iNroRegs  = @iNroRegs 
      END 
      IF @iRecno  = 0 
      BEGIN 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO CTC030 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
                CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
         VALUES (@cFilial_CTC , @cCT2_MOEDLC , @IN_TPSALDO , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , '1' , @nCTC_DEBITOX , 
                @nCTC_CREDITX , @nCTC_DIGX , @iRecnoNew );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoNew = @iRecnoNew + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         UPDATE CTC030 
           WITH (ROWLOCK) 
            SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      IF @iNroRegs  >= 5000 
      BEGIN 
         SET @iNroRegs  = 0 
         Commit Tran 
      END 
      SET @cFilCTCAnt  = @cFILCT2 
      FETCH CUR_CT190DOC 
       INTO @cFILCT2 , @cCT2_DC , @cCT2_DATA , @cCT2_LOTE , @cCT2_SBLOTE , @cCT2_DOC , @cCT2_MOEDLC , @nCT2_VALOR 
   END 
   CLOSE CUR_CT190DOC
   DEALLOCATE CUR_CT190DOC
   IF @iNroRegs  > 0 
   BEGIN 
      SET @iNroRegs  = 0 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB024_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB024_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB024_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB024_01_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTZ Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCTZ Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @cCTZ_DATA Char( 08 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cCTZ_MOEDLC Char( 2)
DECLARE @cCTZ_CONTA Char( 20)
DECLARE @cCTZ_CUSTO Char( 9)
DECLARE @cCTZ_ITEM Char( 9)
DECLARE @cCTZ_CLVL Char( 9)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cFilial_CTZ  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CTZ  = @IN_FILIALCOR 
   END 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
    
   -- Cursor declaration CUR_CT190FLGLP
   DECLARE CUR_CT190FLGLP insensitive  CURSOR FOR 
   SELECT CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CONTA , CTZ_CUSTO , CTZ_ITEM , CTZ_CLVL 
     FROM CTZ010 
     WHERE CTZ_FILIAL  between @cFilial_CTZ and @IN_FILIALATE  and CTZ_DATA  between @cDataI and @cDataF  and CTZ_TPSALD  = @IN_TPSALDO 
      and  ( (CTZ_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     GROUP BY CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CLVL , CTZ_ITEM , CTZ_CUSTO , CTZ_CONTA 
     ORDER BY CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CLVL , CTZ_ITEM , CTZ_CUSTO , CTZ_CONTA 
   FOR READ ONLY 
    
   OPEN CUR_CT190FLGLP
   FETCH CUR_CT190FLGLP 
    INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux1  = ' ' 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ0 output 
      EXEC CTB025_01_01 @cFilial_CQ0 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ1 output 
      EXEC CTB025_01_01 @cFilial_CQ1 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      IF @cCTZ_CUSTO  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ2 output 
         EXEC CTB025_01_01 @cFilial_CQ2 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ3 output 
         EXEC CTB025_01_01 @cFilial_CQ3 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_01_01 @cFilial_CQ8 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_01_01 @cFilial_CQ9 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      IF @cCTZ_ITEM  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ4 output 
         EXEC CTB025_01_01 @cFilial_CQ4 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ5 output 
         EXEC CTB025_01_01 @cFilial_CQ5 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_01_01 @cFilial_CQ8 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_01_01 @cFilial_CQ9 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      IF @cCTZ_CLVL  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ6 output 
         EXEC CTB025_01_01 @cFilial_CQ6 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ7 output 
         EXEC CTB025_01_01 @cFilial_CQ7 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_01_01 @cFilial_CQ8 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_01_01 @cFilial_CQ9 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      FETCH CUR_CT190FLGLP 
       INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   END 
   CLOSE CUR_CT190FLGLP
   DEALLOCATE CUR_CT190FLGLP
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB024_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB024_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB024_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB024_01_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTZ Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCTZ Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @cCTZ_DATA Char( 08 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cCTZ_MOEDLC Char( 2)
DECLARE @cCTZ_CONTA Char( 20)
DECLARE @cCTZ_CUSTO Char( 9)
DECLARE @cCTZ_ITEM Char( 9)
DECLARE @cCTZ_CLVL Char( 9)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cFilial_CTZ  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CTZ  = @IN_FILIALCOR 
   END 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
    
   -- Cursor declaration CUR_CT190FLGLP
   DECLARE CUR_CT190FLGLP insensitive  CURSOR FOR 
   SELECT CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CONTA , CTZ_CUSTO , CTZ_ITEM , CTZ_CLVL 
     FROM CTZ030 
     WHERE CTZ_FILIAL  between @cFilial_CTZ and @IN_FILIALATE  and CTZ_DATA  between @cDataI and @cDataF  and CTZ_TPSALD  = @IN_TPSALDO 
      and  ( (CTZ_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     GROUP BY CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CLVL , CTZ_ITEM , CTZ_CUSTO , CTZ_CONTA 
     ORDER BY CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CLVL , CTZ_ITEM , CTZ_CUSTO , CTZ_CONTA 
   FOR READ ONLY 
    
   OPEN CUR_CT190FLGLP
   FETCH CUR_CT190FLGLP 
    INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux1  = ' ' 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ0 output 
      EXEC CTB025_01_02 @cFilial_CQ0 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ1 output 
      EXEC CTB025_01_02 @cFilial_CQ1 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      IF @cCTZ_CUSTO  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ2 output 
         EXEC CTB025_01_02 @cFilial_CQ2 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ3 output 
         EXEC CTB025_01_02 @cFilial_CQ3 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_01_02 @cFilial_CQ8 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_01_02 @cFilial_CQ9 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      IF @cCTZ_ITEM  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ4 output 
         EXEC CTB025_01_02 @cFilial_CQ4 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ5 output 
         EXEC CTB025_01_02 @cFilial_CQ5 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_01_02 @cFilial_CQ8 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_01_02 @cFilial_CQ9 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      IF @cCTZ_CLVL  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ6 output 
         EXEC CTB025_01_02 @cFilial_CQ6 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ7 output 
         EXEC CTB025_01_02 @cFilial_CQ7 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_01_02 @cFilial_CQ8 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_01_02 @cFilial_CQ9 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
      END 
      FETCH CUR_CT190FLGLP 
       INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   END 
   CLOSE CUR_CT190FLGLP
   DEALLOCATE CUR_CT190FLGLP
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB024_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB024_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB024_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB024_03_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTZ Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCTZ Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @cCTZ_DATA Char( 08 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cCTZ_MOEDLC Char( 2)
DECLARE @cCTZ_CONTA Char( 20)
DECLARE @cCTZ_CUSTO Char( 9)
DECLARE @cCTZ_ITEM Char( 9)
DECLARE @cCTZ_CLVL Char( 9)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cFilial_CTZ  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CTZ  = @IN_FILIALCOR 
   END 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
    
   -- Cursor declaration CUR_CT190FLGLP
   DECLARE CUR_CT190FLGLP insensitive  CURSOR FOR 
   SELECT CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CONTA , CTZ_CUSTO , CTZ_ITEM , CTZ_CLVL 
     FROM CTZ010 
     WHERE CTZ_FILIAL  between @cFilial_CTZ and @IN_FILIALATE  and CTZ_DATA  between @cDataI and @cDataF  and CTZ_TPSALD  = @IN_TPSALDO 
      and  ( (CTZ_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     ORDER BY CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CLVL , CTZ_ITEM , CTZ_CUSTO , CTZ_CONTA 
   FOR READ ONLY 
    
   OPEN CUR_CT190FLGLP
   FETCH CUR_CT190FLGLP 
    INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux1  = ' ' 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ0 output 
      EXEC CTB025_03_01 @cFilial_CQ0 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ1 output 
      EXEC CTB025_03_01 @cFilial_CQ1 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @OUT_RESULTADO output 
      IF @cCTZ_CUSTO  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ2 output 
         EXEC CTB025_03_01 @cFilial_CQ2 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ3 output 
         EXEC CTB025_03_01 @cFilial_CQ3 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_03_01 @cFilial_CQ8 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_03_01 @cFilial_CQ9 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      IF @cCTZ_ITEM  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ4 output 
         EXEC CTB025_03_01 @cFilial_CQ4 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ5 output 
         EXEC CTB025_03_01 @cFilial_CQ5 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_03_01 @cFilial_CQ8 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_03_01 @cFilial_CQ9 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      IF @cCTZ_CLVL  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ6 output 
         EXEC CTB025_03_01 @cFilial_CQ6 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ7 output 
         EXEC CTB025_03_01 @cFilial_CQ7 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_03_01 @cFilial_CQ8 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_03_01 @cFilial_CQ9 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      FETCH CUR_CT190FLGLP 
       INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   END 
   CLOSE CUR_CT190FLGLP
   DEALLOCATE CUR_CT190FLGLP
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB024_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB024_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB024_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB024_03_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTZ Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCTZ Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @cCTZ_DATA Char( 08 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cCTZ_MOEDLC Char( 2)
DECLARE @cCTZ_CONTA Char( 20)
DECLARE @cCTZ_CUSTO Char( 9)
DECLARE @cCTZ_ITEM Char( 9)
DECLARE @cCTZ_CLVL Char( 9)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   IF @IN_FILIALCOR  = ' ' 
   BEGIN 
      SET @cFilial_CTZ  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFilial_CTZ  = @IN_FILIALCOR 
   END 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
    
   -- Cursor declaration CUR_CT190FLGLP
   DECLARE CUR_CT190FLGLP insensitive  CURSOR FOR 
   SELECT CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CONTA , CTZ_CUSTO , CTZ_ITEM , CTZ_CLVL 
     FROM CTZ030 
     WHERE CTZ_FILIAL  between @cFilial_CTZ and @IN_FILIALATE  and CTZ_DATA  between @cDataI and @cDataF  and CTZ_TPSALD  = @IN_TPSALDO 
      and  ( (CTZ_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and D_E_L_E_T_  = ' ' 
     ORDER BY CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CLVL , CTZ_ITEM , CTZ_CUSTO , CTZ_CONTA 
   FOR READ ONLY 
    
   OPEN CUR_CT190FLGLP
   FETCH CUR_CT190FLGLP 
    INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux1  = ' ' 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ0 output 
      EXEC CTB025_03_02 @cFilial_CQ0 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ1 output 
      EXEC CTB025_03_02 @cFilial_CQ1 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @OUT_RESULTADO output 
      IF @cCTZ_CUSTO  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ2 output 
         EXEC CTB025_03_02 @cFilial_CQ2 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ3 output 
         EXEC CTB025_03_02 @cFilial_CQ3 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_03_02 @cFilial_CQ8 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_03_02 @cFilial_CQ9 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      IF @cCTZ_ITEM  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ4 output 
         EXEC CTB025_03_02 @cFilial_CQ4 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ5 output 
         EXEC CTB025_03_02 @cFilial_CQ5 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_03_02 @cFilial_CQ8 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_03_02 @cFilial_CQ9 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      IF @cCTZ_CLVL  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ6 output 
         EXEC CTB025_03_02 @cFilial_CQ6 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ7 output 
         EXEC CTB025_03_02 @cFilial_CQ7 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_03_02 @cFilial_CQ8 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_03_02 @cFilial_CQ9 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @OUT_RESULTADO output 
      END 
      FETCH CUR_CT190FLGLP 
       INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   END 
   CLOSE CUR_CT190FLGLP
   DEALLOCATE CUR_CT190FLGLP
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB025_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB025_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB025_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB025_01_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TABELA Char( 03 ) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CONTA Char( 20) , 
    @IN_CUSTO Char( 9) , 
    @IN_ITEM Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_DATALP Char( 08 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMin Integer
DECLARE @iMax Integer
DECLARE @cDataF Char( 08 )
DECLARE @cApuracao Char( 150)
DECLARE @cApuracaoAnt Char( 150)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CW0 Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cCW0_DESC01Aux1 Char( 150)
DECLARE @cCW0_CHAVE Char( 15)
DECLARE @cDataLpAnt Char( 08 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   EXEC LASTDAY_01_01 @IN_DATALP , @cDataF output 
   SET @cDataI  = SUBSTRING ( @IN_DATALP , 1 , 6 ) + '01' 
   SET @cAux  = 'CW0' 
   EXEC XFILIAL_01_01 @cAux , @IN_FILIALCOR , @cFilial_CW0 output 
   SET @iMin  = 0 
   SET @cDataF  = ' ' 
   SET @cApuracao  = ' ' 
   SET @cApuracaoAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = ' ' 
   SET @cCW0_CHAVE  = ' ' 
   SET @cDataLpAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = @IN_DATALP  + @IN_MOEDA  + @IN_TPSALDO  + 'Z' 
   SELECT @cApuracao  = COALESCE ( CW0_DESC01 , ' ' )
     FROM CW0010 
     WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  = @cCW0_DESC01Aux1 
      and D_E_L_E_T_  = ' ' 
   IF @cApuracao  != ' ' 
   BEGIN 
      SELECT @cApuracaoAnt  = COALESCE ( MAX ( CW0_DESC01 ), ' ' )
        FROM CW0010 
        WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  < @cCW0_DESC01Aux1 
         and SUBSTRING ( CW0_DESC01 , 9 , 04 ) = @IN_MOEDA  + @IN_TPSALDO  + 'Z'  and D_E_L_E_T_  = ' ' 
      IF @cApuracaoAnt  != ' ' 
      BEGIN 
         SET @cDataLpAnt  = SUBSTRING ( @cApuracaoAnt , 1 , 8 )
         SET @cDataI  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @cDataLpAnt ),112 )
         SET @cDataF  = @IN_DATALP 
      END 
      ELSE 
      BEGIN 
         SET @cDataI  = ' ' 
         SET @cDataF  = @IN_DATALP 
      END 
      IF @IN_TABELA  = 'CQ0' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
           WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
            and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET CQ0_LP  = 'S' , CQ0_DTLP  = @IN_DATALP 
                WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF 
                  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ1' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
           WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO 
            and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ1010 
                 WITH (ROWLOCK) 
                  SET CQ1_LP  = 'S' , CQ1_DTLP  = @IN_DATALP 
                WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF 
                  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ2' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
           WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
            and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET CQ2_LP  = 'S' , CQ2_DTLP  = @IN_DATALP 
                WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
                  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ3' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
            and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_LP  = 'S' , CQ3_DTLP  = @IN_DATALP 
                WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
                  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ4' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
           WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
            and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET CQ4_LP  = 'S' , CQ4_DTLP  = @IN_DATALP 
                WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ5' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
            and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_LP  = 'S' , CQ5_DTLP  = @IN_DATALP 
                WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
                  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ6' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
           WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
            and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA 
            and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET CQ6_LP  = 'S' , CQ6_DTLP  = @IN_DATALP 
                WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
                  and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO 
                  and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ7' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
            and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA 
            and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_LP  = 'S' , CQ7_DTLP  = @IN_DATALP 
                WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
                  and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO 
                  and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ8' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ9' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB025_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB025_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB025_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB025_01_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TABELA Char( 03 ) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CONTA Char( 20) , 
    @IN_CUSTO Char( 9) , 
    @IN_ITEM Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_DATALP Char( 08 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMin Integer
DECLARE @iMax Integer
DECLARE @cDataF Char( 08 )
DECLARE @cApuracao Char( 150)
DECLARE @cApuracaoAnt Char( 150)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CW0 Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cCW0_DESC01Aux1 Char( 150)
DECLARE @cCW0_CHAVE Char( 15)
DECLARE @cDataLpAnt Char( 08 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   EXEC LASTDAY_01_02 @IN_DATALP , @cDataF output 
   SET @cDataI  = SUBSTRING ( @IN_DATALP , 1 , 6 ) + '01' 
   SET @cAux  = 'CW0' 
   EXEC XFILIAL_01_02 @cAux , @IN_FILIALCOR , @cFilial_CW0 output 
   SET @iMin  = 0 
   SET @cDataF  = ' ' 
   SET @cApuracao  = ' ' 
   SET @cApuracaoAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = ' ' 
   SET @cCW0_CHAVE  = ' ' 
   SET @cDataLpAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = @IN_DATALP  + @IN_MOEDA  + @IN_TPSALDO  + 'Z' 
   SELECT @cApuracao  = COALESCE ( CW0_DESC01 , ' ' )
     FROM CW0030 
     WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  = @cCW0_DESC01Aux1 
      and D_E_L_E_T_  = ' ' 
   IF @cApuracao  != ' ' 
   BEGIN 
      SELECT @cApuracaoAnt  = COALESCE ( MAX ( CW0_DESC01 ), ' ' )
        FROM CW0030 
        WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  < @cCW0_DESC01Aux1 
         and SUBSTRING ( CW0_DESC01 , 9 , 04 ) = @IN_MOEDA  + @IN_TPSALDO  + 'Z'  and D_E_L_E_T_  = ' ' 
      IF @cApuracaoAnt  != ' ' 
      BEGIN 
         SET @cDataLpAnt  = SUBSTRING ( @cApuracaoAnt , 1 , 8 )
         SET @cDataI  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @cDataLpAnt ),112 )
         SET @cDataF  = @IN_DATALP 
      END 
      ELSE 
      BEGIN 
         SET @cDataI  = ' ' 
         SET @cDataF  = @IN_DATALP 
      END 
      IF @IN_TABELA  = 'CQ0' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
           WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
            and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET CQ0_LP  = 'S' , CQ0_DTLP  = @IN_DATALP 
                WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF 
                  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ1' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
           WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO 
            and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ1020 
                 WITH (ROWLOCK) 
                  SET CQ1_LP  = 'S' , CQ1_DTLP  = @IN_DATALP 
                WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF 
                  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ2' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
           WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
            and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET CQ2_LP  = 'S' , CQ2_DTLP  = @IN_DATALP 
                WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
                  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ3' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
            and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_LP  = 'S' , CQ3_DTLP  = @IN_DATALP 
                WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
                  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ4' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
           WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
            and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET CQ4_LP  = 'S' , CQ4_DTLP  = @IN_DATALP 
                WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ5' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
            and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_LP  = 'S' , CQ5_DTLP  = @IN_DATALP 
                WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
                  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ6' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
           WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
            and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA 
            and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET CQ6_LP  = 'S' , CQ6_DTLP  = @IN_DATALP 
                WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
                  and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO 
                  and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ7' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
            and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA 
            and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_LP  = 'S' , CQ7_DTLP  = @IN_DATALP 
                WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
                  and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO 
                  and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ8' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ9' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB025_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB025_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB025_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB025_03_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TABELA Char( 03 ) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CONTA Char( 20) , 
    @IN_CUSTO Char( 9) , 
    @IN_ITEM Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_DATALP Char( 08 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMin Integer
DECLARE @iMax Integer
DECLARE @cDataF Char( 08 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   EXEC LASTDAY_03_01 @IN_DATALP , @cDataF output 
   IF @IN_TABELA  = 'CQ0' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  <= @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ0010 
              WITH (ROWLOCK) 
               SET CQ0_LP  = 'S' , CQ0_DTLP  = @IN_DATALP 
             WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  <= @cDataF  and CQ0_MOEDA  = @IN_MOEDA 
               and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ1' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  <= @IN_DATALP  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_LP  = 'S' , CQ1_DTLP  = @IN_DATALP 
             WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  <= @IN_DATALP  and CQ1_MOEDA  = @IN_MOEDA 
               and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ2' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CONTA  = @IN_CONTA  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_DATA  <= @cDataF 
         and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ2010 
              WITH (ROWLOCK) 
               SET CQ2_LP  = 'S' , CQ2_DTLP  = @IN_DATALP 
             WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CONTA  = @IN_CONTA  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_DATA  <= @cDataF 
               and CQ2_MOEDA  = @IN_MOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ3' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CONTA  = @IN_CONTA  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_DATA  <= @IN_DATALP 
         and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ3010 
              WITH (ROWLOCK) 
               SET CQ3_LP  = 'S' , CQ3_DTLP  = @IN_DATALP 
             WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CONTA  = @IN_CONTA  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_DATA  <= @IN_DATALP 
               and CQ3_MOEDA  = @IN_MOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ4' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_CONTA  = @IN_CONTA  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_ITEM  = @IN_ITEM 
         and CQ4_DATA  <= @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ4010 
              WITH (ROWLOCK) 
               SET CQ4_LP  = 'S' , CQ4_DTLP  = @IN_DATALP 
             WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_CONTA  = @IN_CONTA  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_ITEM  = @IN_ITEM 
               and CQ4_DATA  <= @cDataF  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
               and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ5' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_CONTA  = @IN_CONTA  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_ITEM  = @IN_ITEM 
         and CQ5_DATA  <= @IN_DATALP  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ5010 
              WITH (ROWLOCK) 
               SET CQ5_LP  = 'S' , CQ5_DTLP  = @IN_DATALP 
             WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_CONTA  = @IN_CONTA  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_ITEM  = @IN_ITEM 
               and CQ5_DATA  <= @IN_DATALP  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = 'N' 
               and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ6' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CONTA  = @IN_CONTA  and CQ6_CCUSTO  = @IN_CUSTO  and CQ6_ITEM  = @IN_ITEM 
         and CQ6_CLVL  = @IN_CLVL  and CQ6_DATA  <= @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N' 
         and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ6010 
              WITH (ROWLOCK) 
               SET CQ6_LP  = 'S' , CQ6_DTLP  = @IN_DATALP 
             WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CONTA  = @IN_CONTA  and CQ6_CCUSTO  = @IN_CUSTO  and CQ6_ITEM  = @IN_ITEM 
               and CQ6_CLVL  = @IN_CLVL  and CQ6_DATA  <= @cDataF  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO 
               and CQ6_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ7' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CONTA  = @IN_CONTA  and CQ7_CCUSTO  = @IN_CUSTO  and CQ7_ITEM  = @IN_ITEM 
         and CQ7_CLVL  = @IN_CLVL  and CQ7_DATA  <= @IN_DATALP  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA 
         and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ7010 
              WITH (ROWLOCK) 
               SET CQ7_LP  = 'S' , CQ7_DTLP  = @IN_DATALP 
             WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CONTA  = @IN_CONTA  and CQ7_CCUSTO  = @IN_CUSTO  and CQ7_ITEM  = @IN_ITEM 
               and CQ7_CLVL  = @IN_CLVL  and CQ7_DATA  <= @IN_DATALP  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO 
               and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ8' 
   BEGIN 
      IF @IN_IDENT  = 'CTD' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  <= @cDataF 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  <= @cDataF 
                  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTH' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  <= @cDataF 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  <= @cDataF 
                  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTT' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  <= @cDataF 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  <= @cDataF 
                  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ9' 
   BEGIN 
      IF @IN_IDENT  = 'CTD' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  <= @IN_DATALP 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  <= @IN_DATALP 
                  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTH' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  <= @IN_DATALP 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  <= @IN_DATALP 
                  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTT' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  <= @IN_DATALP 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  <= @IN_DATALP 
                  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB025_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB025_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB025_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB025_03_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TABELA Char( 03 ) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CONTA Char( 20) , 
    @IN_CUSTO Char( 9) , 
    @IN_ITEM Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_DATALP Char( 08 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMin Integer
DECLARE @iMax Integer
DECLARE @cDataF Char( 08 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   EXEC LASTDAY_03_02 @IN_DATALP , @cDataF output 
   IF @IN_TABELA  = 'CQ0' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  <= @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ0020 
              WITH (ROWLOCK) 
               SET CQ0_LP  = 'S' , CQ0_DTLP  = @IN_DATALP 
             WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  <= @cDataF  and CQ0_MOEDA  = @IN_MOEDA 
               and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ1' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  <= @IN_DATALP  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_LP  = 'S' , CQ1_DTLP  = @IN_DATALP 
             WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  <= @IN_DATALP  and CQ1_MOEDA  = @IN_MOEDA 
               and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ2' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CONTA  = @IN_CONTA  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_DATA  <= @cDataF 
         and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ2020 
              WITH (ROWLOCK) 
               SET CQ2_LP  = 'S' , CQ2_DTLP  = @IN_DATALP 
             WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CONTA  = @IN_CONTA  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_DATA  <= @cDataF 
               and CQ2_MOEDA  = @IN_MOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ3' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CONTA  = @IN_CONTA  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_DATA  <= @IN_DATALP 
         and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ3020 
              WITH (ROWLOCK) 
               SET CQ3_LP  = 'S' , CQ3_DTLP  = @IN_DATALP 
             WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CONTA  = @IN_CONTA  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_DATA  <= @IN_DATALP 
               and CQ3_MOEDA  = @IN_MOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
              
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ4' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_CONTA  = @IN_CONTA  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_ITEM  = @IN_ITEM 
         and CQ4_DATA  <= @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ4020 
              WITH (ROWLOCK) 
               SET CQ4_LP  = 'S' , CQ4_DTLP  = @IN_DATALP 
             WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_CONTA  = @IN_CONTA  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_ITEM  = @IN_ITEM 
               and CQ4_DATA  <= @cDataF  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
               and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ5' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_CONTA  = @IN_CONTA  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_ITEM  = @IN_ITEM 
         and CQ5_DATA  <= @IN_DATALP  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ5020 
              WITH (ROWLOCK) 
               SET CQ5_LP  = 'S' , CQ5_DTLP  = @IN_DATALP 
             WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_CONTA  = @IN_CONTA  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_ITEM  = @IN_ITEM 
               and CQ5_DATA  <= @IN_DATALP  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = 'N' 
               and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ6' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CONTA  = @IN_CONTA  and CQ6_CCUSTO  = @IN_CUSTO  and CQ6_ITEM  = @IN_ITEM 
         and CQ6_CLVL  = @IN_CLVL  and CQ6_DATA  <= @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N' 
         and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ6020 
              WITH (ROWLOCK) 
               SET CQ6_LP  = 'S' , CQ6_DTLP  = @IN_DATALP 
             WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CONTA  = @IN_CONTA  and CQ6_CCUSTO  = @IN_CUSTO  and CQ6_ITEM  = @IN_ITEM 
               and CQ6_CLVL  = @IN_CLVL  and CQ6_DATA  <= @cDataF  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO 
               and CQ6_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ7' 
   BEGIN 
      SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CONTA  = @IN_CONTA  and CQ7_CCUSTO  = @IN_CUSTO  and CQ7_ITEM  = @IN_ITEM 
         and CQ7_CLVL  = @IN_CLVL  and CQ7_DATA  <= @IN_DATALP  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA 
         and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      IF @iMin  > 0 
      BEGIN 
         WHILE ( (@iMin  <= @iMax ) )
         BEGIN
            begin tran 
            UPDATE CQ7020 
              WITH (ROWLOCK) 
               SET CQ7_LP  = 'S' , CQ7_DTLP  = @IN_DATALP 
             WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CONTA  = @IN_CONTA  and CQ7_CCUSTO  = @IN_CUSTO  and CQ7_ITEM  = @IN_ITEM 
               and CQ7_CLVL  = @IN_CLVL  and CQ7_DATA  <= @IN_DATALP  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO 
               and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
            commit tran 
            SET @iMin  = @iMin  + 5000 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ8' 
   BEGIN 
      IF @IN_IDENT  = 'CTD' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  <= @cDataF 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  <= @cDataF 
                  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTH' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  <= @cDataF 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  <= @cDataF 
                  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTT' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  <= @cDataF 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  <= @cDataF 
                  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
   END 
   IF @IN_TABELA  = 'CQ9' 
   BEGIN 
      IF @IN_IDENT  = 'CTD' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  <= @IN_DATALP 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  <= @IN_DATALP 
                  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTH' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  <= @IN_DATALP 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  <= @IN_DATALP 
                  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_IDENT  = 'CTT' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  <= @IN_DATALP 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  <= @IN_DATALP 
                  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB025_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB025_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB025_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB025_07_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TABELA Char( 03 ) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CONTA Char( 20) , 
    @IN_CUSTO Char( 9) , 
    @IN_ITEM Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_DATALP Char( 08 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMin Integer
DECLARE @iMax Integer
DECLARE @cDataF Char( 08 )
DECLARE @cApuracao Char( 150)
DECLARE @cApuracaoAnt Char( 150)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CW0 Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cCW0_DESC01Aux1 Char( 150)
DECLARE @cCW0_CHAVE Char( 15)
DECLARE @cDataLpAnt Char( 08 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   EXEC LASTDAY_07_01 @IN_DATALP , @cDataF output 
   SET @cDataI  = SUBSTRING ( @IN_DATALP , 1 , 6 ) + '01' 
   SET @cAux  = 'CW0' 
   EXEC XFILIAL_07_01 @cAux , @IN_FILIALCOR , @cFilial_CW0 output 
   SET @iMin  = 0 
   SET @cDataF  = ' ' 
   SET @cApuracao  = ' ' 
   SET @cApuracaoAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = ' ' 
   SET @cCW0_CHAVE  = ' ' 
   SET @cDataLpAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = @IN_DATALP  + @IN_MOEDA  + @IN_TPSALDO  + 'Z' 
   SELECT @cApuracao  = COALESCE ( CW0_DESC01 , ' ' )
     FROM CW0010 
     WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  = @cCW0_DESC01Aux1 
      and D_E_L_E_T_  = ' ' 
   IF @cApuracao  != ' ' 
   BEGIN 
      SELECT @cApuracaoAnt  = COALESCE ( MAX ( CW0_DESC01 ), ' ' )
        FROM CW0010 
        WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  < @cCW0_DESC01Aux1 
         and SUBSTRING ( CW0_DESC01 , 9 , 04 ) = @IN_MOEDA  + @IN_TPSALDO  + 'Z'  and D_E_L_E_T_  = ' ' 
      IF @cApuracaoAnt  != ' ' 
      BEGIN 
         SET @cDataLpAnt  = SUBSTRING ( @cApuracaoAnt , 1 , 8 )
         SET @cDataI  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @cDataLpAnt ),112 )
         SET @cDataF  = @IN_DATALP 
      END 
      ELSE 
      BEGIN 
         SET @cDataI  = ' ' 
         SET @cDataF  = @IN_DATALP 
      END 
      IF @IN_TABELA  = 'CQ0' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
           WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
            and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET CQ0_LP  = 'S' , CQ0_DTLP  = @IN_DATALP 
                WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF 
                  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ1' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
           WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO 
            and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ1010 
                 WITH (ROWLOCK) 
                  SET CQ1_LP  = 'S' , CQ1_DTLP  = @IN_DATALP 
                WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF 
                  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ2' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
           WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
            and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET CQ2_LP  = 'S' , CQ2_DTLP  = @IN_DATALP 
                WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
                  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ3' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
            and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_LP  = 'S' , CQ3_DTLP  = @IN_DATALP 
                WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
                  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ4' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
           WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
            and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET CQ4_LP  = 'S' , CQ4_DTLP  = @IN_DATALP 
                WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ5' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
            and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_LP  = 'S' , CQ5_DTLP  = @IN_DATALP 
                WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
                  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ6' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
           WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
            and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA 
            and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET CQ6_LP  = 'S' , CQ6_DTLP  = @IN_DATALP 
                WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
                  and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO 
                  and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ7' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
            and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA 
            and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_LP  = 'S' , CQ7_DTLP  = @IN_DATALP 
                WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
                  and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO 
                  and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ8' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ9' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB025_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB025_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB025_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB025_07_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TABELA Char( 03 ) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CONTA Char( 20) , 
    @IN_CUSTO Char( 9) , 
    @IN_ITEM Char( 9) , 
    @IN_CLVL Char( 9) , 
    @IN_DATALP Char( 08 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMin Integer
DECLARE @iMax Integer
DECLARE @cDataF Char( 08 )
DECLARE @cApuracao Char( 150)
DECLARE @cApuracaoAnt Char( 150)
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CW0 Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cCW0_DESC01Aux1 Char( 150)
DECLARE @cCW0_CHAVE Char( 15)
DECLARE @cDataLpAnt Char( 08 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   EXEC LASTDAY_07_02 @IN_DATALP , @cDataF output 
   SET @cDataI  = SUBSTRING ( @IN_DATALP , 1 , 6 ) + '01' 
   SET @cAux  = 'CW0' 
   EXEC XFILIAL_07_02 @cAux , @IN_FILIALCOR , @cFilial_CW0 output 
   SET @iMin  = 0 
   SET @cDataF  = ' ' 
   SET @cApuracao  = ' ' 
   SET @cApuracaoAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = ' ' 
   SET @cCW0_CHAVE  = ' ' 
   SET @cDataLpAnt  = ' ' 
   SET @cCW0_DESC01Aux1  = @IN_DATALP  + @IN_MOEDA  + @IN_TPSALDO  + 'Z' 
   SELECT @cApuracao  = COALESCE ( CW0_DESC01 , ' ' )
     FROM CW0030 
     WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  = @cCW0_DESC01Aux1 
      and D_E_L_E_T_  = ' ' 
   IF @cApuracao  != ' ' 
   BEGIN 
      SELECT @cApuracaoAnt  = COALESCE ( MAX ( CW0_DESC01 ), ' ' )
        FROM CW0030 
        WHERE CW0_FILIAL  = @cFilial_CW0  and CW0_TABELA  = 'LP'  and CW0_CHAVE  = @IN_EMPANT  + @IN_FILANT  and CW0_DESC01  < @cCW0_DESC01Aux1 
         and SUBSTRING ( CW0_DESC01 , 9 , 04 ) = @IN_MOEDA  + @IN_TPSALDO  + 'Z'  and D_E_L_E_T_  = ' ' 
      IF @cApuracaoAnt  != ' ' 
      BEGIN 
         SET @cDataLpAnt  = SUBSTRING ( @cApuracaoAnt , 1 , 8 )
         SET @cDataI  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @cDataLpAnt ),112 )
         SET @cDataF  = @IN_DATALP 
      END 
      ELSE 
      BEGIN 
         SET @cDataI  = ' ' 
         SET @cDataF  = @IN_DATALP 
      END 
      IF @IN_TABELA  = 'CQ0' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
           WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF  and CQ0_TPSALD  = @IN_TPSALDO 
            and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET CQ0_LP  = 'S' , CQ0_DTLP  = @IN_DATALP 
                WHERE CQ0_FILIAL  = @IN_FILIALCOR  and CQ0_CONTA  = @IN_CONTA  and CQ0_DATA  between @cDataI and @cDataF 
                  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ1' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
           WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF  and CQ1_TPSALD  = @IN_TPSALDO 
            and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ1020 
                 WITH (ROWLOCK) 
                  SET CQ1_LP  = 'S' , CQ1_DTLP  = @IN_DATALP 
                WHERE CQ1_FILIAL  = @IN_FILIALCOR  and CQ1_CONTA  = @IN_CONTA  and CQ1_DATA  between @cDataI and @cDataF 
                  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ2' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
           WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
            and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET CQ2_LP  = 'S' , CQ2_DTLP  = @IN_DATALP 
                WHERE CQ2_FILIAL  = @IN_FILIALCOR  and CQ2_CCUSTO  = @IN_CUSTO  and CQ2_CONTA  = @IN_CONTA  and CQ2_DATA  between @cDataI and @cDataF 
                  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ3' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
            and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
           
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_LP  = 'S' , CQ3_DTLP  = @IN_DATALP 
                WHERE CQ3_FILIAL  = @IN_FILIALCOR  and CQ3_CCUSTO  = @IN_CUSTO  and CQ3_CONTA  = @IN_CONTA  and CQ3_DATA  between @cDataI and @cDataF 
                  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
                  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ4' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
           WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
            and CQ4_DATA  between @cDataI and @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET CQ4_LP  = 'S' , CQ4_DTLP  = @IN_DATALP 
                WHERE CQ4_FILIAL  = @IN_FILIALCOR  and CQ4_ITEM  = @IN_ITEM  and CQ4_CCUSTO  = @IN_CUSTO  and CQ4_CONTA  = @IN_CONTA 
                  and CQ4_DATA  between @cDataI and @cDataF  and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ5' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
            and CQ5_DATA  between @cDataI and @cDataF  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP in ( 'N' , 
                ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_LP  = 'S' , CQ5_DTLP  = @IN_DATALP 
                WHERE CQ5_FILIAL  = @IN_FILIALCOR  and CQ5_ITEM  = @IN_ITEM  and CQ5_CCUSTO  = @IN_CUSTO  and CQ5_CONTA  = @IN_CONTA 
                  and CQ5_DATA  between @cDataI and @cDataF  and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP in ( 'N' , 
                      ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ6' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
           WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
            and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA 
            and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET CQ6_LP  = 'S' , CQ6_DTLP  = @IN_DATALP 
                WHERE CQ6_FILIAL  = @IN_FILIALCOR  and CQ6_CLVL  = @IN_CLVL  and CQ6_ITEM  = @IN_ITEM  and CQ6_CCUSTO  = @IN_CUSTO 
                  and CQ6_CONTA  = @IN_CONTA  and CQ6_DATA  between @cDataI and @cDataF  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO 
                  and CQ6_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ7' 
      BEGIN 
         SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
            and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA 
            and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' ' 
         IF @iMin  > 0 
         BEGIN 
            WHILE ( (@iMin  <= @iMax ) )
            BEGIN
               begin tran 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_LP  = 'S' , CQ7_DTLP  = @IN_DATALP 
                WHERE CQ7_FILIAL  = @IN_FILIALCOR  and CQ7_CLVL  = @IN_CLVL  and CQ7_ITEM  = @IN_ITEM  and CQ7_CCUSTO  = @IN_CUSTO 
                  and CQ7_CONTA  = @IN_CONTA  and CQ7_DATA  between @cDataI and @cDataF  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO 
                  and CQ7_LP in ( 'N' , ' '  )  and D_E_L_E_T_  = ' '  and R_E_C_N_O_  between @iMin and @iMin  + 5000 
               commit tran 
               SET @iMin  = @iMin  + 5000 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ8' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEM  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVL  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
              WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
               and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET CQ8_LP  = 'S' , CQ8_DTLP  = @IN_DATALP 
                   WHERE CQ8_FILIAL  = @IN_FILIALCOR  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTO  and CQ8_DATA  between @cDataI and @cDataF 
                     and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
      IF @IN_TABELA  = 'CQ9' 
      BEGIN 
         IF @IN_IDENT  = 'CTD' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEM  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTH' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVL  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
         IF @IN_IDENT  = 'CTT' 
         BEGIN 
            SELECT @iMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
              WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
               and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
            IF @iMin  > 0 
            BEGIN 
               WHILE ( (@iMin  <= @iMax ) )
               BEGIN
                  begin tran 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET CQ9_LP  = 'S' , CQ9_DTLP  = @IN_DATALP 
                   WHERE CQ9_FILIAL  = @IN_FILIALCOR  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTO  and CQ9_DATA  between @cDataI and @cDataF 
                     and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
                     and R_E_C_N_O_  between @iMin and @iMin  + 5000 
                  commit tran 
                  SET @iMin  = @iMin  + 5000 
               END 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB153_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB153_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB153_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB153_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cMoeda Char( 2)
DECLARE @cLinha Char( 3)
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cAux VarChar( 03 )
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @cEmpOri Char( 2)
DECLARE @cFilOri Char( 2)
DECLARE @iRecno Integer
DECLARE @nValor Float
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CT2 output 
   begin tran 
   DELETE FROM TRW010_SP  WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE 
      and CT2_DOC  = @IN_DOC  and CT2_DC  != '4'  and D_E_L_E_T_  = ' ' 
   commit tran 
    
   -- Cursor declaration CTB_CT2
   DECLARE CTB_CT2 insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_LINHA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_EMPORI , CT2_FILORI , R_E_C_N_O_ 
     FROM CT2010 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and CT2_DC  != '4'  and CT2_TPSALD  <> '9'  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CTB_CT2
   FETCH CTB_CT2 
    INTO @cMoeda , @cLinha , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
          @cClvlD , @cClvlC , @cEmpOri , @cFilOri , @iRecno 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      Begin Tran 
      INSERT INTO TRW010_SP (CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , CT2_TPSALD , CT2_DC , CT2_DEBITO , 
             CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_EMPORI , 
             CT2_FILORI , CT2_LINHA , R_E_C_N_O_ ) 
      VALUES (@cFilial_CT2 , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoeda , @cTpSaldo , @cDc , @cDebito , @cCredit , 
             @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , @cClvlD , @cClvlC , @cEmpOri , @cFilOri , @cLinha , @iRecno );
      commit tran 
      FETCH CTB_CT2 
       INTO @cMoeda , @cLinha , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
             @cClvlD , @cClvlC , @cEmpOri , @cFilOri , @iRecno 
   END 
   CLOSE CTB_CT2
   DEALLOCATE CTB_CT2
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB153_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB153_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB153_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB153_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cMoeda Char( 2)
DECLARE @cLinha Char( 3)
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cAux VarChar( 03 )
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @cEmpOri Char( 2)
DECLARE @cFilOri Char( 2)
DECLARE @iRecno Integer
DECLARE @nValor Float
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CT2 output 
   begin tran 
   DELETE FROM TRW020_SP  WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE 
      and CT2_DOC  = @IN_DOC  and CT2_DC  != '4'  and D_E_L_E_T_  = ' ' 
   commit tran 
    
   -- Cursor declaration CTB_CT2
   DECLARE CTB_CT2 insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_LINHA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_EMPORI , CT2_FILORI , R_E_C_N_O_ 
     FROM CT2030 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and CT2_DC  != '4'  and CT2_TPSALD  <> '9'  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CTB_CT2
   FETCH CTB_CT2 
    INTO @cMoeda , @cLinha , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
          @cClvlD , @cClvlC , @cEmpOri , @cFilOri , @iRecno 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      Begin Tran 
      INSERT INTO TRW020_SP (CT2_FILIAL , CT2_DATA , CT2_LOTE , CT2_SBLOTE , CT2_DOC , CT2_MOEDLC , CT2_TPSALD , CT2_DC , CT2_DEBITO , 
             CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_EMPORI , 
             CT2_FILORI , CT2_LINHA , R_E_C_N_O_ ) 
      VALUES (@cFilial_CT2 , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoeda , @cTpSaldo , @cDc , @cDebito , @cCredit , 
             @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , @cClvlD , @cClvlC , @cEmpOri , @cFilOri , @cLinha , @iRecno );
      commit tran 
      FETCH CTB_CT2 
       INTO @cMoeda , @cLinha , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
             @cClvlD , @cClvlC , @cEmpOri , @cFilOri , @iRecno 
   END 
   CLOSE CTB_CT2
   DEALLOCATE CTB_CT2
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB165_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB165_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB165_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB165_07_01]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIAL Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_CONTA Char( 20) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAlias Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cIdent Char( 03 )
DECLARE @cAux Char( 02 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = ' ' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
   SET @cIdent  = ' ' 
   SET @cAlias  = 'CQ0' 
   EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
          @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   SET @cAlias  = 'CQ1' 
   EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
          @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ2' 
      EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ3' 
      EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ4' 
      EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ5' 
      EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ6' 
      EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ7' 
      EXEC CTB166_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '0' 
   EXEC CTB167_07_01 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
          @IN_CONTA , @IN_INTEGRIDADE , @IN_MVCTB190D , @IN_EMPANT , @OUT_RESULTADO output 
   SET @OUT_RESULTADO  = '0' 
   EXEC CTB168_07_01 @IN_FILIAL , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_CONTA , @IN_EMPANT , 
          @OUT_RESULTADO output 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB165_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB165_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB165_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB165_07_02]
(
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIAL Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_CONTA Char( 20) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAlias Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cIdent Char( 03 )
DECLARE @cAux Char( 02 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = ' ' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
   SET @cIdent  = ' ' 
   SET @cAlias  = 'CQ0' 
   EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
          @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   SET @cAlias  = 'CQ1' 
   EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
          @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ2' 
      EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ3' 
      EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ4' 
      EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ5' 
      EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ6' 
      EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      SET @cAlias  = 'CQ7' 
      EXEC CTB166_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILIAL , @cDataI , @cDataF , @IN_INTEGRIDADE , 
             @IN_MVCTB190D , @IN_CONTA , @cIdent , @cAux , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '0' 
   EXEC CTB167_07_02 @IN_FILIAL , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
          @IN_CONTA , @IN_INTEGRIDADE , @IN_MVCTB190D , @IN_EMPANT , @OUT_RESULTADO output 
   SET @OUT_RESULTADO  = '0' 
   EXEC CTB168_07_02 @IN_FILIAL , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_CONTA , @IN_EMPANT , 
          @OUT_RESULTADO output 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB166_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB166_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB166_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB166_07_01]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIAL Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_CONTA Char( 20) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CODIGO Char( 9) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
BEGIN
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ0 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ0_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ0010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ0_CONTA  = @IN_CONTA 
                  DELETE FROM CQ0010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0 
                     and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ0_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ0010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0 
                     and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ0_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ0_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ1 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ1_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ1010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ1_CONTA  = @IN_CONTA 
                  DELETE FROM CQ1010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1 
                     and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ1_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ1010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1 
                     and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ1_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ1010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ1_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ2 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO 
         and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ2_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ2_CONTA  = @IN_CONTA 
                  DELETE FROM CQ2010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2 
                     and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ2_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ2010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2 
                     and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ2_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ2_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ3 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO 
         and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ3_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ3010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ3_CONTA  = @IN_CONTA 
                  DELETE FROM CQ3010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3 
                     and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ3_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ3010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3 
                     and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ3_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ3_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ4 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ4_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ4_CONTA  = @IN_CONTA 
                  DELETE FROM CQ4010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4 
                     and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ4_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ4010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4 
                     and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ4_CONTA  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ4_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ5 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO 
         and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ5_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ5010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ5_CONTA  = @IN_CONTA 
                  DELETE FROM CQ5010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5 
                     and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ5_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ5010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5 
                     and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ5_CONTA  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ5_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ6 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ6_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ6_CONTA  = @IN_CONTA 
                  DELETE FROM CQ6010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6 
                     and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ6_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ6010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6 
                     and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ6_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ6_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ7 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ7_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ7010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ7_CONTA  = @IN_CONTA 
                  DELETE FROM CQ7010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7 
                     and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ7_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ7010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7 
                     and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ7_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ7_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
         and CQ8_CODIGO  = @IN_CODIGO 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
                  DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
                     and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
         and CQ9_CODIGO  = @IN_CODIGO 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
                  DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
                     and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_07_01 @cAux , @cFilial_CT2 , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CTC010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    ) 
                  DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB166_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB166_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB166_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB166_07_02]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILIAL Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_CONTA Char( 20) , 
    @IN_IDENT Char( 03 ) , 
    @IN_CODIGO Char( 9) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
BEGIN
   IF  (@IN_CALIAS  = 'CQ0' ) 
   BEGIN 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ0 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO 
         and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ0_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ0020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ0_CONTA  = @IN_CONTA 
                  DELETE FROM CQ0020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0 
                     and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ0_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ0020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0 
                     and CQ0_DATA  between @IN_DATADE and @IN_DATAATE  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ0_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ0_TPSALD  = @IN_TPSALDO  and  ( (CQ0_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ0_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ1' ) 
   BEGIN 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ1 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO 
         and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ1_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ1020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ1_CONTA  = @IN_CONTA 
                  DELETE FROM CQ1020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1 
                     and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ1_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ1020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1 
                     and CQ1_DATA  between @IN_DATADE and @IN_DATAATE  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ1_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ1020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ1_FILIAL  = @cFilial_CQ1  and CQ1_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ1_TPSALD  = @IN_TPSALDO  and  ( (CQ1_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ1_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ2' ) 
   BEGIN 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ2 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO 
         and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ2_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ2_CONTA  = @IN_CONTA 
                  DELETE FROM CQ2020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2 
                     and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ2_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ2020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2 
                     and CQ2_DATA  between @IN_DATADE and @IN_DATAATE  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ2_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ2_TPSALD  = @IN_TPSALDO  and  ( (CQ2_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ2_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ3' ) 
   BEGIN 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ3 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO 
         and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ3_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ3020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ3_CONTA  = @IN_CONTA 
                  DELETE FROM CQ3020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3 
                     and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ3_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ3020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3 
                     and CQ3_DATA  between @IN_DATADE and @IN_DATAATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ3_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ3_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ4' ) 
   BEGIN 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ4 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO 
         and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ4_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ4_CONTA  = @IN_CONTA 
                  DELETE FROM CQ4020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4 
                     and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ4_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ4020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4 
                     and CQ4_DATA  between @IN_DATADE and @IN_DATAATE  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ4_CONTA  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ4_TPSALD  = @IN_TPSALDO  and  ( (CQ4_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ4_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ5' ) 
   BEGIN 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ5 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO 
         and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ5_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ5020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ5_CONTA  = @IN_CONTA 
                  DELETE FROM CQ5020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5 
                     and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ5_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ5020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5 
                     and CQ5_DATA  between @IN_DATADE and @IN_DATAATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ5_CONTA  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ5_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ6' ) 
   BEGIN 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ6 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO 
         and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ6_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ6_CONTA  = @IN_CONTA 
                  DELETE FROM CQ6020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6 
                     and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ6_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ6020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6 
                     and CQ6_DATA  between @IN_DATADE and @IN_DATAATE  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ6_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ6_TPSALD  = @IN_TPSALDO  and  ( (CQ6_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ6_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ7' ) 
   BEGIN 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ7 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO 
         and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ7_CONTA  = @IN_CONTA 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ7020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ7_CONTA  = @IN_CONTA 
                  DELETE FROM CQ7020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7 
                     and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ7_CONTA  = @IN_CONTA  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ7020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7 
                     and CQ7_DATA  between @IN_DATADE and @IN_DATAATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ7_CONTA  = @IN_CONTA 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ7_CONTA  = @IN_CONTA 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
         and CQ8_CODIGO  = @IN_CODIGO 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
                  DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
                     and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ8_IDENT  = @IN_IDENT  and CQ8_CODIGO  = @IN_CODIGO 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
         and CQ9_CODIGO  = @IN_CODIGO 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
                  DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
                     and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
                    
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 )  and CQ9_IDENT  = @IN_IDENT  and CQ9_CODIGO  = @IN_CODIGO 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_07_02 @cAux , @cFilial_CT2 , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CTC030 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  between @IN_DATADE and @IN_DATAATE 
                     and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                    ) 
                  DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC030 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024  and CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  between @IN_DATADE and @IN_DATAATE 
                  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' 
                 ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + 1024 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB167_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB167_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB167_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB167_07_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cFilAnt Char( 2)
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @cMoedaAnt Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cDataAnt Char( 08 )
DECLARE @cDtLpAnt Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @lPrimDel Char( 01 )
DECLARE @lExec Char( 01 )
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
   SET @cFilAnt  = ' ' 
   SET @cContaAnt  = ' ' 
   SET @cMoedaAnt  = ' ' 
   SET @cDataAnt  = ' ' 
   SET @cDtLpAnt  = ' ' 
   SET @cAnoMes  = ' ' 
   SET @nDebMes  = 0 
   SET @nCrdMes  = 0 
   SET @lPrim  = '1' 
   SET @lPrimDel  = '1' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
     FROM CT2010 
     WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  = @IN_CONTA 
      and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
     FROM CT2010 
     WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  = @IN_CONTA 
      and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
     ORDER BY 1 , 2 , 3 , 4 , 5 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      IF @lPrim  = '1' 
      BEGIN 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nDebMes  = @nDebMes  + @nVALOR 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCrdMes  = @nCrdMes  + @nVALOR 
         END 
         SET @lPrim  = '0' 
      END 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      EXEC LASTDAY_07_01 @cDATA , @cDataF output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = @nVALOR 
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = @nVALOR 
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_DATA  = @cDATA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_LP  = @cCTX_LP  and CQ1_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nVALOR  = ROUND ( @nVALOR , 2 )
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = CQ1_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_CREDIT  = CQ1_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         Commit tran 
      END 
      IF @cCT2_DTLP  != ' ' 
      BEGIN 
         SET @cCUSTO  = ' ' 
         SET @cITEM  = ' ' 
         SET @cCLVL  = ' ' 
         SET @cTabela  = 'CQ0' 
         SET @cIdent  = ' ' 
         EXEC CTB025_07_01 @cFilial_CQ0 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      SET @cFilAnt  = @cFILCT2 
      SET @cContaAnt  = @cCONTA 
      SET @cMoedaAnt  = @cMOEDA 
      SET @cDataAnt  = @cDATA 
      SET @cDtLpAnt  = @cCT2_DTLP 
      SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      IF @@fetch_status  = -   1 
      BEGIN 
         SET @cCONTA  = ' ' 
      END 
      IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cMoedaAnt  = @cMOEDA  and @cAnoMes  = SUBSTRING ( @cDATA , 
             1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
      BEGIN 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nDebMes  = @nDebMes  + @nVALOR 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCrdMes  = @nCrdMes  + @nVALOR 
         END 
      END 
      ELSE 
      BEGIN 
         IF @cDtLpAnt  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cDtLpAnt 
         END 
         EXEC LASTDAY_07_01 @cDataAnt , @cDataF output 
         SET @nDebMes  = ROUND ( @nDebMes , 2 )
         SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
           WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cContaAnt  and CQ0_MOEDA  = @cMoedaAnt  and CQ0_DATA  = @cDataF 
            and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP  = @cCTX_LP  and CQ0_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ0010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                   CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilAnt , @cContaAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                   @nDebMes , @nCrdMes , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET CQ0_DEBITO  = CQ0_DEBITO  + @nDebMes 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ0010 
                 WITH (ROWLOCK) 
                  SET CQ0_CREDIT  = CQ0_CREDIT  + @nCrdMes 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @nDebMes  = 0 
         SET @nCrdMes  = 0 
         SET @lPrim  = '1' 
         IF @cCTX_DTLP  != ' ' 
         BEGIN 
            SET @cCUSTO  = ' ' 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cTabela  = 'CQ1' 
            SET @cIdent  = ' ' 
            EXEC CTB025_07_01 @cFilial_CQ1 , @cTabela , @cIdent , @cContaAnt , @cCUSTO , @cITEM , @cCLVL , @cCTX_DTLP , @cMoedaAnt , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
      END 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
      SET @cFilAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cMoedaAnt  = ' ' 
      SET @cDataAnt  = ' ' 
      SET @cDtLpAnt  = ' ' 
      SET @cAnoMes  = ' ' 
      SET @nDebMes  = 0 
      SET @nCrdMes  = 0 
      SET @lPrim  = '1' 
      SET @lPrimDel  = '1' 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_DEBITO  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_CREDIT  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         EXEC LASTDAY_07_01 @cDATA , @cDataF output 
         IF @lPrim  = '1' 
         BEGIN 
            SET @cFilAnt  = @cFILCT2 
            SET @cContaAnt  = @cCONTA 
            SET @cCustoAnt  = @cCUSTO 
            SET @cMoedaAnt  = @cMOEDA 
            SET @cDataAnt  = @cDATA 
            SET @cDtLpAnt  = @cCT2_DTLP 
            SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
            SET @lPrim  = '0' 
         END 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = @cCTX_LP  and CQ3_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = CQ3_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_CREDIT  = CQ3_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ3' 
            EXEC CTB025_07_01 @cFilial_CQ3 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cCustoAnt  = @cCUSTO 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
         IF @@fetch_status  = -   1 
         BEGIN 
            SET @cCONTA  = ' ' 
         END 
         IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cCustoAnt  = @cCUSTO  and @cMoedaAnt  = @cMOEDA  and @cAnoMes  = SUBSTRING ( @cDATA , 
                1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
         BEGIN 
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cDtLpAnt  = ' ' 
            BEGIN 
               SET @cCTX_LP  = 'N' 
               SET @cCTX_DTLP  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @cCTX_LP  = 'Z' 
               SET @cCTX_DTLP  = @cDtLpAnt 
            END 
            EXEC LASTDAY_07_01 @cDataAnt , @cDataF output 
            SET @nDebMes  = ROUND ( @nDebMes , 2 )
            SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
              FROM CQ2010 
              WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  = @cDataF  and CQ2_CONTA  = @cContaAnt  and CQ2_CCUSTO  = @cCustoAnt 
               and CQ2_MOEDA  = @cMoedaAnt  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = @cCTX_LP  and CQ2_DTLP  = @cCTX_DTLP 
               and D_E_L_E_T_  = ' ' 
            IF @iRecno  = 0 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ2010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                      CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ2 , @cContaAnt , @cCustoAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                      @cCTX_LP , @cCTX_STATUS , @nDebMes , @nCrdMes , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            ELSE 
            BEGIN 
               Begin Tran 
               IF @cTIPO  = '1' 
               BEGIN 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = CQ2_DEBITO  + @nDebMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               IF @cTIPO  = '2' 
               BEGIN 
                  UPDATE CQ2010 
                    WITH (ROWLOCK) 
                     SET CQ2_CREDIT  = CQ2_CREDIT  + @nCrdMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               commit tran 
            END 
            SET @nDebMes  = 0 
            SET @nCrdMes  = 0 
            SET @lPrim  = '1' 
            IF @cCTX_DTLP  != ' ' 
            BEGIN 
               SET @cITEM  = ' ' 
               SET @cCLVL  = ' ' 
               SET @cIdent  = ' ' 
               SET @cTabela  = 'CQ2' 
               EXEC CTB025_07_01 @cFilial_CQ2 , @cTabela , @cIdent , @cContaAnt , @cCustoAnt , @cITEM , @cCLVL , @cCTX_DTLP , 
                      @cMoedaAnt , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
            END 
         END 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB231_07_01 @IN_FILIAL , @IN_LITEM , @IN_LCLVL , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @IN_CONTA , @IN_INTEGRIDADE , @IN_MVCTB190D , @IN_EMPANT , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB167_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB167_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB167_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB167_07_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cFilAnt Char( 2)
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @cMoedaAnt Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cDataAnt Char( 08 )
DECLARE @cDtLpAnt Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @lPrimDel Char( 01 )
DECLARE @lExec Char( 01 )
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
   SET @cFilAnt  = ' ' 
   SET @cContaAnt  = ' ' 
   SET @cMoedaAnt  = ' ' 
   SET @cDataAnt  = ' ' 
   SET @cDtLpAnt  = ' ' 
   SET @cAnoMes  = ' ' 
   SET @nDebMes  = 0 
   SET @nCrdMes  = 0 
   SET @lPrim  = '1' 
   SET @lPrimDel  = '1' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
     FROM CT2030 
     WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  = @IN_CONTA 
      and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
     FROM CT2030 
     WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  = @IN_CONTA 
      and D_E_L_E_T_  = ' ' 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
     ORDER BY 1 , 2 , 3 , 4 , 5 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      IF @lPrim  = '1' 
      BEGIN 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nDebMes  = @nDebMes  + @nVALOR 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCrdMes  = @nCrdMes  + @nVALOR 
         END 
         SET @lPrim  = '0' 
      END 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      EXEC LASTDAY_07_02 @cDATA , @cDataF output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = @nVALOR 
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = @nVALOR 
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_DATA  = @cDATA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_LP  = @cCTX_LP  and CQ1_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nVALOR  = ROUND ( @nVALOR , 2 )
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = CQ1_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_CREDIT  = CQ1_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         Commit tran 
      END 
      IF @cCT2_DTLP  != ' ' 
      BEGIN 
         SET @cCUSTO  = ' ' 
         SET @cITEM  = ' ' 
         SET @cCLVL  = ' ' 
         SET @cTabela  = 'CQ0' 
         SET @cIdent  = ' ' 
         EXEC CTB025_07_02 @cFilial_CQ0 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      SET @cFilAnt  = @cFILCT2 
      SET @cContaAnt  = @cCONTA 
      SET @cMoedaAnt  = @cMOEDA 
      SET @cDataAnt  = @cDATA 
      SET @cDtLpAnt  = @cCT2_DTLP 
      SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      IF @@fetch_status  = -   1 
      BEGIN 
         SET @cCONTA  = ' ' 
      END 
      IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cMoedaAnt  = @cMOEDA  and @cAnoMes  = SUBSTRING ( @cDATA , 
             1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
      BEGIN 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nDebMes  = @nDebMes  + @nVALOR 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCrdMes  = @nCrdMes  + @nVALOR 
         END 
      END 
      ELSE 
      BEGIN 
         IF @cDtLpAnt  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cDtLpAnt 
         END 
         EXEC LASTDAY_07_02 @cDataAnt , @cDataF output 
         SET @nDebMes  = ROUND ( @nDebMes , 2 )
         SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
           WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_CONTA  = @cContaAnt  and CQ0_MOEDA  = @cMoedaAnt  and CQ0_DATA  = @cDataF 
            and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_LP  = @cCTX_LP  and CQ0_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ0020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                   CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilAnt , @cContaAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                   @nDebMes , @nCrdMes , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET CQ0_DEBITO  = CQ0_DEBITO  + @nDebMes 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ0020 
                 WITH (ROWLOCK) 
                  SET CQ0_CREDIT  = CQ0_CREDIT  + @nCrdMes 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @nDebMes  = 0 
         SET @nCrdMes  = 0 
         SET @lPrim  = '1' 
         IF @cCTX_DTLP  != ' ' 
         BEGIN 
            SET @cCUSTO  = ' ' 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cTabela  = 'CQ1' 
            SET @cIdent  = ' ' 
            EXEC CTB025_07_02 @cFilial_CQ1 , @cTabela , @cIdent , @cContaAnt , @cCUSTO , @cITEM , @cCLVL , @cCTX_DTLP , @cMoedaAnt , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
      END 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
      SET @cFilAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cMoedaAnt  = ' ' 
      SET @cDataAnt  = ' ' 
      SET @cDtLpAnt  = ' ' 
      SET @cAnoMes  = ' ' 
      SET @nDebMes  = 0 
      SET @nCrdMes  = 0 
      SET @lPrim  = '1' 
      SET @lPrimDel  = '1' 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_DEBITO  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_CREDIT  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         EXEC LASTDAY_07_02 @cDATA , @cDataF output 
         IF @lPrim  = '1' 
         BEGIN 
            SET @cFilAnt  = @cFILCT2 
            SET @cContaAnt  = @cCONTA 
            SET @cCustoAnt  = @cCUSTO 
            SET @cMoedaAnt  = @cMOEDA 
            SET @cDataAnt  = @cDATA 
            SET @cDtLpAnt  = @cCT2_DTLP 
            SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
            SET @lPrim  = '0' 
         END 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_LP  = @cCTX_LP  and CQ3_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = CQ3_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_CREDIT  = CQ3_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cITEM  = ' ' 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ3' 
            EXEC CTB025_07_02 @cFilial_CQ3 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cCustoAnt  = @cCUSTO 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
         IF @@fetch_status  = -   1 
         BEGIN 
            SET @cCONTA  = ' ' 
         END 
         IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cCustoAnt  = @cCUSTO  and @cMoedaAnt  = @cMOEDA  and @cAnoMes  = SUBSTRING ( @cDATA , 
                1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
         BEGIN 
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cDtLpAnt  = ' ' 
            BEGIN 
               SET @cCTX_LP  = 'N' 
               SET @cCTX_DTLP  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @cCTX_LP  = 'Z' 
               SET @cCTX_DTLP  = @cDtLpAnt 
            END 
            EXEC LASTDAY_07_02 @cDataAnt , @cDataF output 
            SET @nDebMes  = ROUND ( @nDebMes , 2 )
            SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
              FROM CQ2020 
              WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  = @cDataF  and CQ2_CONTA  = @cContaAnt  and CQ2_CCUSTO  = @cCustoAnt 
               and CQ2_MOEDA  = @cMoedaAnt  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_LP  = @cCTX_LP  and CQ2_DTLP  = @cCTX_DTLP 
               and D_E_L_E_T_  = ' ' 
            IF @iRecno  = 0 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ2020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , 
                      CQ2_DTLP , CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ2 , @cContaAnt , @cCustoAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                      @cCTX_LP , @cCTX_STATUS , @nDebMes , @nCrdMes , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            ELSE 
            BEGIN 
               Begin Tran 
               IF @cTIPO  = '1' 
               BEGIN 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET CQ2_DEBITO  = CQ2_DEBITO  + @nDebMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               IF @cTIPO  = '2' 
               BEGIN 
                  UPDATE CQ2020 
                    WITH (ROWLOCK) 
                     SET CQ2_CREDIT  = CQ2_CREDIT  + @nCrdMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               commit tran 
            END 
            SET @nDebMes  = 0 
            SET @nCrdMes  = 0 
            SET @lPrim  = '1' 
            IF @cCTX_DTLP  != ' ' 
            BEGIN 
               SET @cITEM  = ' ' 
               SET @cCLVL  = ' ' 
               SET @cIdent  = ' ' 
               SET @cTabela  = 'CQ2' 
               EXEC CTB025_07_02 @cFilial_CQ2 , @cTabela , @cIdent , @cContaAnt , @cCustoAnt , @cITEM , @cCLVL , @cCTX_DTLP , 
                      @cMoedaAnt , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
            END 
         END 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB231_07_02 @IN_FILIAL , @IN_LITEM , @IN_LCLVL , @IN_DATADE , @IN_DATAATE , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , 
             @IN_CONTA , @IN_INTEGRIDADE , @IN_MVCTB190D , @IN_EMPANT , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB168_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB168_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB168_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB168_07_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTZ Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCTZ Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @cCTZ_DATA Char( 08 )
DECLARE @cCTZ_MOEDLC Char( 2)
DECLARE @cCTZ_CONTA Char( 20)
DECLARE @cCTZ_CUSTO Char( 9)
DECLARE @cCTZ_ITEM Char( 9)
DECLARE @cCTZ_CLVL Char( 9)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'CTZ' 
   EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CTZ output 
    
   -- Cursor declaration CUR_CT190FLGLP
   DECLARE CUR_CT190FLGLP insensitive  CURSOR FOR 
   SELECT CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CONTA , CTZ_CUSTO , CTZ_ITEM , CTZ_CLVL 
     FROM CTZ010 
     WHERE CTZ_FILIAL  = @cFilial_CTZ  and CTZ_DATA  between @IN_DATADE and @IN_DATAATE  and CTZ_TPSALD  = @IN_TPSALDO  and  ( (CTZ_MOEDLC  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  <> '1' )  and CTZ_CONTA  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
     ORDER BY 1 , 2 , 3 , 7 , 6 , 5 , 4 
   FOR READ ONLY 
    
   OPEN CUR_CT190FLGLP
   FETCH CUR_CT190FLGLP 
    INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux1  = ' ' 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ0 output 
      EXEC CTB025_07_01 @cFilial_CQ0 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ1 output 
      EXEC CTB025_07_01 @cFilial_CQ1 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      IF @cCTZ_CUSTO  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ2 output 
         EXEC CTB025_07_01 @cFilial_CQ2 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ3 output 
         EXEC CTB025_07_01 @cFilial_CQ3 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_07_01 @cFilial_CQ8 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_07_01 @cFilial_CQ9 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      IF @cCTZ_ITEM  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ4 output 
         EXEC CTB025_07_01 @cFilial_CQ4 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ5 output 
         EXEC CTB025_07_01 @cFilial_CQ5 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_07_01 @cFilial_CQ8 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_07_01 @cFilial_CQ9 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      IF @cCTZ_CLVL  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ6 output 
         EXEC CTB025_07_01 @cFilial_CQ6 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ7 output 
         EXEC CTB025_07_01 @cFilial_CQ7 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_07_01 @cFilial_CQ8 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_01 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_07_01 @cFilial_CQ9 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      FETCH CUR_CT190FLGLP 
       INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   END 
   CLOSE CUR_CT190FLGLP
   DEALLOCATE CUR_CT190FLGLP
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB168_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB168_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB168_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB168_07_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CTZ Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCTZ Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux1 Char( 01 )
DECLARE @cCTZ_DATA Char( 08 )
DECLARE @cCTZ_MOEDLC Char( 2)
DECLARE @cCTZ_CONTA Char( 20)
DECLARE @cCTZ_CUSTO Char( 9)
DECLARE @cCTZ_ITEM Char( 9)
DECLARE @cCTZ_CLVL Char( 9)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'CTZ' 
   EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CTZ output 
    
   -- Cursor declaration CUR_CT190FLGLP
   DECLARE CUR_CT190FLGLP insensitive  CURSOR FOR 
   SELECT CTZ_FILIAL , CTZ_DATA , CTZ_MOEDLC , CTZ_CONTA , CTZ_CUSTO , CTZ_ITEM , CTZ_CLVL 
     FROM CTZ030 
     WHERE CTZ_FILIAL  = @cFilial_CTZ  and CTZ_DATA  between @IN_DATADE and @IN_DATAATE  and CTZ_TPSALD  = @IN_TPSALDO  and  ( (CTZ_MOEDLC  = @IN_MOEDA 
      and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  <> '1' )  and CTZ_CONTA  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
     ORDER BY 1 , 2 , 3 , 7 , 6 , 5 , 4 
   FOR READ ONLY 
    
   OPEN CUR_CT190FLGLP
   FETCH CUR_CT190FLGLP 
    INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @cAux1  = ' ' 
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ0 output 
      EXEC CTB025_07_02 @cFilial_CQ0 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ1 output 
      EXEC CTB025_07_02 @cFilial_CQ1 , @cAux , @cAux1 , @cCTZ_CONTA , @cAux1 , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
             @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      IF @cCTZ_CUSTO  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ2 output 
         EXEC CTB025_07_02 @cFilial_CQ2 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ3 output 
         EXEC CTB025_07_02 @cFilial_CQ3 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_07_02 @cFilial_CQ8 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_07_02 @cFilial_CQ9 , @cAux , 'CTT' , @cAux1 , @cCTZ_CUSTO , @cAux1 , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      IF @cCTZ_ITEM  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ4 output 
         EXEC CTB025_07_02 @cFilial_CQ4 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ5 output 
         EXEC CTB025_07_02 @cFilial_CQ5 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_07_02 @cFilial_CQ8 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_07_02 @cFilial_CQ9 , @cAux , 'CTD' , @cAux1 , @cAux1 , @cCTZ_ITEM , @cAux1 , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      IF @cCTZ_CLVL  != ' ' 
      BEGIN 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ6 output 
         EXEC CTB025_07_02 @cFilial_CQ6 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ7 output 
         EXEC CTB025_07_02 @cFilial_CQ7 , @cAux , @cAux1 , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL , @cCTZ_DATA , 
                @cCTZ_MOEDLC , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ8 output 
         EXEC CTB025_07_02 @cFilial_CQ8 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_02 @cAux , @cFILCTZ , @cFilial_CQ9 output 
         EXEC CTB025_07_02 @cFilial_CQ9 , @cAux , 'CTH' , @cAux1 , @cAux1 , @cAux1 , @cCTZ_CLVL , @cCTZ_DATA , @cCTZ_MOEDLC , 
                @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
      END 
      FETCH CUR_CT190FLGLP 
       INTO @cFILCTZ , @cCTZ_DATA , @cCTZ_MOEDLC , @cCTZ_CONTA , @cCTZ_CUSTO , @cCTZ_ITEM , @cCTZ_CLVL 
   END 
   CLOSE CUR_CT190FLGLP
   DEALLOCATE CUR_CT190FLGLP
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB180_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB180_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB180_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB180_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAuxDC VarChar( 01 )
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nAtuDeb Float
DECLARE @nAntDeb Float
DECLARE @nCredit Float
DECLARE @nAtuCrd Float
DECLARE @nAntCrd Float
DECLARE @iRecnoAux Integer
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_01 @IN_DATA , @cDataF output 
   IF @IN_CONTAD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @IN_FILIAL  and CQ1_CONTA  = @IN_CONTAD  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_TPSALD , CQ1_DATA , CQ1_DEBITO , CQ1_SLBASE , CQ1_STATUS , 
                CQ1_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1010 
           WITH (ROWLOCK) 
            SET CQ1_DEBITO  = CQ1_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CONTAC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @IN_FILIAL  and CQ1_CONTA  = @IN_CONTAC  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_TPSALD , CQ1_DATA , CQ1_CREDIT , CQ1_SLBASE , CQ1_STATUS , 
                CQ1_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1010 
           WITH (ROWLOCK) 
            SET CQ1_CREDIT  = CQ1_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ1010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ1_FILIAL  = @IN_FILIAL  and ROUND ( CQ1_DEBITO , 2 ) = 0.00  and ROUND ( CQ1_CREDIT , 2 ) = 0.00  and CQ1_DATA  = @IN_DATA 
         and  ( (CQ1_CONTA  = @IN_CONTAC )  or  (CQ1_CONTA  = @IN_CONTAD ) )  and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_MOEDA  = @IN_MOEDA 
         and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ1010  WHERE CQ1_FILIAL  = @IN_FILIAL  and ROUND ( CQ1_DEBITO , 2 ) = 0.00  and ROUND ( CQ1_CREDIT , 2 ) = 0.00 
         and CQ1_DATA  = @IN_DATA  and  ( (CQ1_CONTA  = @IN_CONTAC )  or  (CQ1_CONTA  = @IN_CONTAD ) )  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ1010  WHERE CQ1_FILIAL  = @IN_FILIAL  and ROUND ( CQ1_DEBITO , 2 ) = 0.00  and ROUND ( CQ1_CREDIT , 2 ) = 0.00 
         and CQ1_DATA  = @IN_DATA  and  ( (CQ1_CONTA  = @IN_CONTAC )  or  (CQ1_CONTA  = @IN_CONTAD ) )  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_CONTAD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @IN_FILIAL  and CQ0_CONTA  = @IN_CONTAD  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_TPSALD , CQ0_DATA , CQ0_DEBITO , CQ0_SLBASE , CQ0_STATUS , 
                CQ0_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0010 
           WITH (ROWLOCK) 
            SET CQ0_DEBITO  = CQ0_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CONTAC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @IN_FILIAL  and CQ0_CONTA  = @IN_CONTAC  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_TPSALD , CQ0_DATA , CQ0_CREDIT , CQ0_SLBASE , CQ0_STATUS , 
                CQ0_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0010 
           WITH (ROWLOCK) 
            SET CQ0_CREDIT  = CQ0_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ0010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ0_FILIAL  = @IN_FILIAL  and ROUND ( CQ0_DEBITO , 2 ) = 0.00  and ROUND ( CQ0_CREDIT , 2 ) = 0.00  and CQ0_DATA  = @cDataF 
         and  ( (CQ0_CONTA  = @IN_CONTAC )  or  (CQ0_CONTA  = @IN_CONTAD ) )  and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_MOEDA  = @IN_MOEDA 
         and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ0010  WHERE CQ0_FILIAL  = @IN_FILIAL  and ROUND ( CQ0_DEBITO , 2 ) = 0.00  and ROUND ( CQ0_CREDIT , 2 ) = 0.00 
         and CQ0_DATA  = @cDataF  and  ( (CQ0_CONTA  = @IN_CONTAC )  or  (CQ0_CONTA  = @IN_CONTAD ) )  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ0010  WHERE CQ0_FILIAL  = @IN_FILIAL  and ROUND ( CQ0_DEBITO , 2 ) = 0.00  and ROUND ( CQ0_CREDIT , 2 ) = 0.00 
         and CQ0_DATA  = @cDataF  and  ( (CQ0_CONTA  = @IN_CONTAC )  or  (CQ0_CONTA  = @IN_CONTAD ) )  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB180_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB180_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB180_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB180_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAuxDC VarChar( 01 )
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nAtuDeb Float
DECLARE @nAntDeb Float
DECLARE @nCredit Float
DECLARE @nAtuCrd Float
DECLARE @nAntCrd Float
DECLARE @iRecnoAux Integer
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_02 @IN_DATA , @cDataF output 
   IF @IN_CONTAD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @IN_FILIAL  and CQ1_CONTA  = @IN_CONTAD  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_TPSALD , CQ1_DATA , CQ1_DEBITO , CQ1_SLBASE , CQ1_STATUS , 
                CQ1_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1020 
           WITH (ROWLOCK) 
            SET CQ1_DEBITO  = CQ1_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CONTAC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @IN_FILIAL  and CQ1_CONTA  = @IN_CONTAC  and CQ1_MOEDA  = @IN_MOEDA  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_TPSALD , CQ1_DATA , CQ1_CREDIT , CQ1_SLBASE , CQ1_STATUS , 
                CQ1_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ1020 
           WITH (ROWLOCK) 
            SET CQ1_CREDIT  = CQ1_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ1020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ1_FILIAL  = @IN_FILIAL  and ROUND ( CQ1_DEBITO , 2 ) = 0.00  and ROUND ( CQ1_CREDIT , 2 ) = 0.00  and CQ1_DATA  = @IN_DATA 
         and  ( (CQ1_CONTA  = @IN_CONTAC )  or  (CQ1_CONTA  = @IN_CONTAD ) )  and CQ1_TPSALD  = @IN_TPSALDO  and CQ1_MOEDA  = @IN_MOEDA 
         and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ1020  WHERE CQ1_FILIAL  = @IN_FILIAL  and ROUND ( CQ1_DEBITO , 2 ) = 0.00  and ROUND ( CQ1_CREDIT , 2 ) = 0.00 
         and CQ1_DATA  = @IN_DATA  and  ( (CQ1_CONTA  = @IN_CONTAC )  or  (CQ1_CONTA  = @IN_CONTAD ) )  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ1020  WHERE CQ1_FILIAL  = @IN_FILIAL  and ROUND ( CQ1_DEBITO , 2 ) = 0.00  and ROUND ( CQ1_CREDIT , 2 ) = 0.00 
         and CQ1_DATA  = @IN_DATA  and  ( (CQ1_CONTA  = @IN_CONTAC )  or  (CQ1_CONTA  = @IN_CONTAD ) )  and CQ1_TPSALD  = @IN_TPSALDO 
         and CQ1_MOEDA  = @IN_MOEDA  and CQ1_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_CONTAD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @IN_FILIAL  and CQ0_CONTA  = @IN_CONTAD  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_TPSALD , CQ0_DATA , CQ0_DEBITO , CQ0_SLBASE , CQ0_STATUS , 
                CQ0_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0020 
           WITH (ROWLOCK) 
            SET CQ0_DEBITO  = CQ0_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CONTAC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @IN_FILIAL  and CQ0_CONTA  = @IN_CONTAC  and CQ0_MOEDA  = @IN_MOEDA  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_TPSALD , CQ0_DATA , CQ0_CREDIT , CQ0_SLBASE , CQ0_STATUS , 
                CQ0_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ0020 
           WITH (ROWLOCK) 
            SET CQ0_CREDIT  = CQ0_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ0020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ0_FILIAL  = @IN_FILIAL  and ROUND ( CQ0_DEBITO , 2 ) = 0.00  and ROUND ( CQ0_CREDIT , 2 ) = 0.00  and CQ0_DATA  = @cDataF 
         and  ( (CQ0_CONTA  = @IN_CONTAC )  or  (CQ0_CONTA  = @IN_CONTAD ) )  and CQ0_TPSALD  = @IN_TPSALDO  and CQ0_MOEDA  = @IN_MOEDA 
         and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ0020  WHERE CQ0_FILIAL  = @IN_FILIAL  and ROUND ( CQ0_DEBITO , 2 ) = 0.00  and ROUND ( CQ0_CREDIT , 2 ) = 0.00 
         and CQ0_DATA  = @cDataF  and  ( (CQ0_CONTA  = @IN_CONTAC )  or  (CQ0_CONTA  = @IN_CONTAD ) )  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ0020  WHERE CQ0_FILIAL  = @IN_FILIAL  and ROUND ( CQ0_DEBITO , 2 ) = 0.00  and ROUND ( CQ0_CREDIT , 2 ) = 0.00 
         and CQ0_DATA  = @cDataF  and  ( (CQ0_CONTA  = @IN_CONTAC )  or  (CQ0_CONTA  = @IN_CONTAD ) )  and CQ0_TPSALD  = @IN_TPSALDO 
         and CQ0_MOEDA  = @IN_MOEDA  and CQ0_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB181_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB181_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB181_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB181_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nCredit Float
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_01 @IN_DATA , @cDataF output 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  = @IN_FILIAL  and CQ3_CONTA  = @IN_CONTAD  and CQ3_CCUSTO  = @IN_CUSTOD  and CQ3_MOEDA  = @IN_MOEDA 
         and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_TPSALD , CQ3_DATA , CQ3_DEBITO , CQ3_SLBASE , 
                CQ3_STATUS , CQ3_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ3010 
           WITH (ROWLOCK) 
            SET CQ3_DEBITO  = CQ3_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ3010 
        WHERE CQ3_FILIAL  = @IN_FILIAL  and CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC  and CQ3_MOEDA  = @IN_MOEDA 
         and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_TPSALD , CQ3_DATA , CQ3_CREDIT , CQ3_SLBASE , 
                CQ3_STATUS , CQ3_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ3010 
           WITH (ROWLOCK) 
            SET CQ3_CREDIT  = CQ3_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ3010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ3_FILIAL  = @IN_FILIAL  and ROUND ( CQ3_DEBITO , 2 ) = 0.00  and ROUND ( CQ3_CREDIT , 2 ) = 0.00  and CQ3_DATA  = @IN_DATA 
         and  ( (CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC )  or  (CQ3_CONTA  = @IN_CONTAD  and CQ3_CCUSTO  = @IN_CUSTOD 
        ) )  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ3010  WHERE CQ3_FILIAL  = @IN_FILIAL  and ROUND ( CQ3_DEBITO , 2 ) = 0.00  and ROUND ( CQ3_CREDIT , 2 ) = 0.00 
         and CQ3_DATA  = @IN_DATA  and  ( (CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC )  or  (CQ3_CONTA  = @IN_CONTAD 
         and CQ3_CCUSTO  = @IN_CUSTOD ) )  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ3010  WHERE CQ3_FILIAL  = @IN_FILIAL  and ROUND ( CQ3_DEBITO , 2 ) = 0.00  and ROUND ( CQ3_CREDIT , 2 ) = 0.00 
         and CQ3_DATA  = @IN_DATA  and  ( (CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC )  or  (CQ3_CONTA  = @IN_CONTAD 
         and CQ3_CCUSTO  = @IN_CUSTOD ) )  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  = @IN_FILIAL  and CQ2_CONTA  = @IN_CONTAD  and CQ2_CCUSTO  = @IN_CUSTOD  and CQ2_MOEDA  = @IN_MOEDA 
         and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_TPSALD , CQ2_DATA , CQ2_DEBITO , CQ2_SLBASE , 
                CQ2_STATUS , CQ2_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ2010 
           WITH (ROWLOCK) 
            SET CQ2_DEBITO  = CQ2_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ2010 
        WHERE CQ2_FILIAL  = @IN_FILIAL  and CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC  and CQ2_MOEDA  = @IN_MOEDA 
         and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_TPSALD , CQ2_DATA , CQ2_CREDIT , CQ2_SLBASE , 
                CQ2_STATUS , CQ2_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ2010 
           WITH (ROWLOCK) 
            SET CQ2_CREDIT  = CQ2_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ2010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ2_FILIAL  = @IN_FILIAL  and ROUND ( CQ2_DEBITO , 2 ) = 0.00  and ROUND ( CQ2_CREDIT , 2 ) = 0.00  and CQ2_DATA  = @cDataF 
         and  ( (CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC )  or  (CQ2_CONTA  = @IN_CONTAD  and CQ2_CCUSTO  = @IN_CUSTOD 
        ) )  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ2010  WHERE CQ2_FILIAL  = @IN_FILIAL  and ROUND ( CQ2_DEBITO , 2 ) = 0.00  and ROUND ( CQ2_CREDIT , 2 ) = 0.00 
         and CQ2_DATA  = @cDataF  and  ( (CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC )  or  (CQ2_CONTA  = @IN_CONTAD 
         and CQ2_CCUSTO  = @IN_CUSTOD ) )  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ2010  WHERE CQ2_FILIAL  = @IN_FILIAL  and ROUND ( CQ2_DEBITO , 2 ) = 0.00  and ROUND ( CQ2_CREDIT , 2 ) = 0.00 
         and CQ2_DATA  = @cDataF  and  ( (CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC )  or  (CQ2_CONTA  = @IN_CONTAD 
         and CQ2_CCUSTO  = @IN_CUSTOD ) )  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD  and CQ9_MOEDA  = @IN_MOEDA 
         and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_DEBITO , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9010 
           WITH (ROWLOCK) 
            SET CQ9_DEBITO  = CQ9_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC  and CQ9_MOEDA  = @IN_MOEDA 
         and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_CREDIT , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9010 
           WITH (ROWLOCK) 
            SET CQ9_CREDIT  = CQ9_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ9010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00  and CQ9_DATA  = @IN_DATA 
         and  ( (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC )  or  (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ9010  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC )  or  (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ9010  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC )  or  (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD  and CQ8_MOEDA  = @IN_MOEDA 
         and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_DEBITO , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8010 
           WITH (ROWLOCK) 
            SET CQ8_DEBITO  = CQ8_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC  and CQ8_MOEDA  = @IN_MOEDA 
         and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_CREDIT , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8010 
           WITH (ROWLOCK) 
            SET CQ8_CREDIT  = CQ8_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ8010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00  and CQ8_DATA  = @cDataF 
         and  ( (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC )  or  (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ8010  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC )  or  (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ8010  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC )  or  (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB181_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB181_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB181_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB181_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nCredit Float
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_02 @IN_DATA , @cDataF output 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  = @IN_FILIAL  and CQ3_CONTA  = @IN_CONTAD  and CQ3_CCUSTO  = @IN_CUSTOD  and CQ3_MOEDA  = @IN_MOEDA 
         and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_TPSALD , CQ3_DATA , CQ3_DEBITO , CQ3_SLBASE , 
                CQ3_STATUS , CQ3_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ3020 
           WITH (ROWLOCK) 
            SET CQ3_DEBITO  = CQ3_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ3020 
        WHERE CQ3_FILIAL  = @IN_FILIAL  and CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC  and CQ3_MOEDA  = @IN_MOEDA 
         and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_TPSALD , CQ3_DATA , CQ3_CREDIT , CQ3_SLBASE , 
                CQ3_STATUS , CQ3_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ3020 
           WITH (ROWLOCK) 
            SET CQ3_CREDIT  = CQ3_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ3020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ3_FILIAL  = @IN_FILIAL  and ROUND ( CQ3_DEBITO , 2 ) = 0.00  and ROUND ( CQ3_CREDIT , 2 ) = 0.00  and CQ3_DATA  = @IN_DATA 
         and  ( (CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC )  or  (CQ3_CONTA  = @IN_CONTAD  and CQ3_CCUSTO  = @IN_CUSTOD 
        ) )  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ3020  WHERE CQ3_FILIAL  = @IN_FILIAL  and ROUND ( CQ3_DEBITO , 2 ) = 0.00  and ROUND ( CQ3_CREDIT , 2 ) = 0.00 
         and CQ3_DATA  = @IN_DATA  and  ( (CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC )  or  (CQ3_CONTA  = @IN_CONTAD 
         and CQ3_CCUSTO  = @IN_CUSTOD ) )  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ3020  WHERE CQ3_FILIAL  = @IN_FILIAL  and ROUND ( CQ3_DEBITO , 2 ) = 0.00  and ROUND ( CQ3_CREDIT , 2 ) = 0.00 
         and CQ3_DATA  = @IN_DATA  and  ( (CQ3_CONTA  = @IN_CONTAC  and CQ3_CCUSTO  = @IN_CUSTOC )  or  (CQ3_CONTA  = @IN_CONTAD 
         and CQ3_CCUSTO  = @IN_CUSTOD ) )  and CQ3_TPSALD  = @IN_TPSALDO  and CQ3_MOEDA  = @IN_MOEDA  and CQ3_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  = @IN_FILIAL  and CQ2_CONTA  = @IN_CONTAD  and CQ2_CCUSTO  = @IN_CUSTOD  and CQ2_MOEDA  = @IN_MOEDA 
         and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_TPSALD , CQ2_DATA , CQ2_DEBITO , CQ2_SLBASE , 
                CQ2_STATUS , CQ2_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ2020 
           WITH (ROWLOCK) 
            SET CQ2_DEBITO  = CQ2_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ2020 
        WHERE CQ2_FILIAL  = @IN_FILIAL  and CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC  and CQ2_MOEDA  = @IN_MOEDA 
         and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_TPSALD , CQ2_DATA , CQ2_CREDIT , CQ2_SLBASE , 
                CQ2_STATUS , CQ2_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ2020 
           WITH (ROWLOCK) 
            SET CQ2_CREDIT  = CQ2_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ2020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ2_FILIAL  = @IN_FILIAL  and ROUND ( CQ2_DEBITO , 2 ) = 0.00  and ROUND ( CQ2_CREDIT , 2 ) = 0.00  and CQ2_DATA  = @cDataF 
         and  ( (CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC )  or  (CQ2_CONTA  = @IN_CONTAD  and CQ2_CCUSTO  = @IN_CUSTOD 
        ) )  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ2020  WHERE CQ2_FILIAL  = @IN_FILIAL  and ROUND ( CQ2_DEBITO , 2 ) = 0.00  and ROUND ( CQ2_CREDIT , 2 ) = 0.00 
         and CQ2_DATA  = @cDataF  and  ( (CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC )  or  (CQ2_CONTA  = @IN_CONTAD 
         and CQ2_CCUSTO  = @IN_CUSTOD ) )  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ2020  WHERE CQ2_FILIAL  = @IN_FILIAL  and ROUND ( CQ2_DEBITO , 2 ) = 0.00  and ROUND ( CQ2_CREDIT , 2 ) = 0.00 
         and CQ2_DATA  = @cDataF  and  ( (CQ2_CONTA  = @IN_CONTAC  and CQ2_CCUSTO  = @IN_CUSTOC )  or  (CQ2_CONTA  = @IN_CONTAD 
         and CQ2_CCUSTO  = @IN_CUSTOD ) )  and CQ2_TPSALD  = @IN_TPSALDO  and CQ2_MOEDA  = @IN_MOEDA  and CQ2_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD  and CQ9_MOEDA  = @IN_MOEDA 
         and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_DEBITO , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9020 
           WITH (ROWLOCK) 
            SET CQ9_DEBITO  = CQ9_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC  and CQ9_MOEDA  = @IN_MOEDA 
         and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_CREDIT , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , 
                @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9020 
           WITH (ROWLOCK) 
            SET CQ9_CREDIT  = CQ9_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ9020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00  and CQ9_DATA  = @IN_DATA 
         and  ( (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC )  or  (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ9020  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC )  or  (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ9020  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOC )  or  (CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @IN_CUSTOD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_CUSTOD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD  and CQ8_MOEDA  = @IN_MOEDA 
         and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_DEBITO , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8020 
           WITH (ROWLOCK) 
            SET CQ8_DEBITO  = CQ8_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CUSTOC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC  and CQ8_MOEDA  = @IN_MOEDA 
         and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_CREDIT , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTT' , @IN_CUSTOC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8020 
           WITH (ROWLOCK) 
            SET CQ8_CREDIT  = CQ8_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ8020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00  and CQ8_DATA  = @cDataF 
         and  ( (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC )  or  (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ8020  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC )  or  (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ8020  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOC )  or  (CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @IN_CUSTOD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB182_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB182_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB182_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB182_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_ITEMD Char( 9) , 
    @IN_ITEMC Char( 9) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nCredit Float
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_01 @IN_DATA , @cDataF output 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  = @IN_FILIAL  and CQ5_CONTA  = @IN_CONTAD  and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_TPSALD , CQ5_DATA , CQ5_DEBITO , 
                CQ5_SLBASE , CQ5_STATUS , CQ5_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ5010 
           WITH (ROWLOCK) 
            SET CQ5_DEBITO  = CQ5_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ5010 
        WHERE CQ5_FILIAL  = @IN_FILIAL  and CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_TPSALD , CQ5_DATA , CQ5_CREDIT , 
                CQ5_SLBASE , CQ5_STATUS , CQ5_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ5010 
           WITH (ROWLOCK) 
            SET CQ5_CREDIT  = CQ5_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ5010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ5_FILIAL  = @IN_FILIAL  and ROUND ( CQ5_DEBITO , 2 ) = 0.00  and ROUND ( CQ5_CREDIT , 2 ) = 0.00  and CQ5_DATA  = @IN_DATA 
         and  ( (CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC )  or  (CQ5_CONTA  = @IN_CONTAD 
         and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD ) )  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA 
         and CQ5_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ5010  WHERE CQ5_FILIAL  = @IN_FILIAL  and ROUND ( CQ5_DEBITO , 2 ) = 0.00  and ROUND ( CQ5_CREDIT , 2 ) = 0.00 
         and CQ5_DATA  = @IN_DATA  and  ( (CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC 
        )  or  (CQ5_CONTA  = @IN_CONTAD  and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD ) )  and CQ5_TPSALD  = @IN_TPSALDO 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ5010  WHERE CQ5_FILIAL  = @IN_FILIAL  and ROUND ( CQ5_DEBITO , 2 ) = 0.00  and ROUND ( CQ5_CREDIT , 2 ) = 0.00 
         and CQ5_DATA  = @IN_DATA  and  ( (CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC 
        )  or  (CQ5_CONTA  = @IN_CONTAD  and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD ) )  and CQ5_TPSALD  = @IN_TPSALDO 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  = @IN_FILIAL  and CQ4_CONTA  = @IN_CONTAD  and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_TPSALD , CQ4_DATA , CQ4_DEBITO , 
                CQ4_SLBASE , CQ4_STATUS , CQ4_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ4010 
           WITH (ROWLOCK) 
            SET CQ4_DEBITO  = CQ4_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ4010 
        WHERE CQ4_FILIAL  = @IN_FILIAL  and CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_TPSALD , CQ4_DATA , CQ4_CREDIT , 
                CQ4_SLBASE , CQ4_STATUS , CQ4_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ4010 
           WITH (ROWLOCK) 
            SET CQ4_CREDIT  = CQ4_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ4010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ4_FILIAL  = @IN_FILIAL  and ROUND ( CQ4_DEBITO , 2 ) = 0.00  and ROUND ( CQ4_CREDIT , 2 ) = 0.00  and CQ4_DATA  = @cDataF 
         and  ( (CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC )  or  (CQ4_CONTA  = @IN_CONTAD 
         and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD ) )  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA 
         and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ4010  WHERE CQ4_FILIAL  = @IN_FILIAL  and ROUND ( CQ4_DEBITO , 2 ) = 0.00  and ROUND ( CQ4_CREDIT , 2 ) = 0.00 
         and CQ4_DATA  = @cDataF  and  ( (CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC 
        )  or  (CQ4_CONTA  = @IN_CONTAD  and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD ) )  and CQ4_TPSALD  = @IN_TPSALDO 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ4010  WHERE CQ4_FILIAL  = @IN_FILIAL  and ROUND ( CQ4_DEBITO , 2 ) = 0.00  and ROUND ( CQ4_CREDIT , 2 ) = 0.00 
         and CQ4_DATA  = @cDataF  and  ( (CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC 
        )  or  (CQ4_CONTA  = @IN_CONTAD  and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD ) )  and CQ4_TPSALD  = @IN_TPSALDO 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_DEBITO , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9010 
           WITH (ROWLOCK) 
            SET CQ9_DEBITO  = CQ9_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_CREDIT , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9010 
           WITH (ROWLOCK) 
            SET CQ9_CREDIT  = CQ9_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ9010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00  and CQ9_DATA  = @IN_DATA 
         and  ( (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC )  or  (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ9010  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC )  or  (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ9010  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC )  or  (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_DEBITO , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8010 
           WITH (ROWLOCK) 
            SET CQ8_DEBITO  = CQ8_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_CREDIT , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8010 
           WITH (ROWLOCK) 
            SET CQ8_CREDIT  = CQ8_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ8010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00  and CQ8_DATA  = @cDataF 
         and  ( (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC )  or  (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ8010  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC )  or  (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ8010  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC )  or  (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB182_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB182_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB182_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB182_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_ITEMD Char( 9) , 
    @IN_ITEMC Char( 9) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nCredit Float
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_02 @IN_DATA , @cDataF output 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  = @IN_FILIAL  and CQ5_CONTA  = @IN_CONTAD  and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_TPSALD , CQ5_DATA , CQ5_DEBITO , 
                CQ5_SLBASE , CQ5_STATUS , CQ5_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ5020 
           WITH (ROWLOCK) 
            SET CQ5_DEBITO  = CQ5_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ5020 
        WHERE CQ5_FILIAL  = @IN_FILIAL  and CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_TPSALD , CQ5_DATA , CQ5_CREDIT , 
                CQ5_SLBASE , CQ5_STATUS , CQ5_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ5020 
           WITH (ROWLOCK) 
            SET CQ5_CREDIT  = CQ5_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ5020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ5_FILIAL  = @IN_FILIAL  and ROUND ( CQ5_DEBITO , 2 ) = 0.00  and ROUND ( CQ5_CREDIT , 2 ) = 0.00  and CQ5_DATA  = @IN_DATA 
         and  ( (CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC )  or  (CQ5_CONTA  = @IN_CONTAD 
         and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD ) )  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_MOEDA  = @IN_MOEDA 
         and CQ5_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ5020  WHERE CQ5_FILIAL  = @IN_FILIAL  and ROUND ( CQ5_DEBITO , 2 ) = 0.00  and ROUND ( CQ5_CREDIT , 2 ) = 0.00 
         and CQ5_DATA  = @IN_DATA  and  ( (CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC 
        )  or  (CQ5_CONTA  = @IN_CONTAD  and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD ) )  and CQ5_TPSALD  = @IN_TPSALDO 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ5020  WHERE CQ5_FILIAL  = @IN_FILIAL  and ROUND ( CQ5_DEBITO , 2 ) = 0.00  and ROUND ( CQ5_CREDIT , 2 ) = 0.00 
         and CQ5_DATA  = @IN_DATA  and  ( (CQ5_CONTA  = @IN_CONTAC  and CQ5_CCUSTO  = @IN_CUSTOC  and CQ5_ITEM  = @IN_ITEMC 
        )  or  (CQ5_CONTA  = @IN_CONTAD  and CQ5_CCUSTO  = @IN_CUSTOD  and CQ5_ITEM  = @IN_ITEMD ) )  and CQ5_TPSALD  = @IN_TPSALDO 
         and CQ5_MOEDA  = @IN_MOEDA  and CQ5_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  = @IN_FILIAL  and CQ4_CONTA  = @IN_CONTAD  and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_TPSALD , CQ4_DATA , CQ4_DEBITO , 
                CQ4_SLBASE , CQ4_STATUS , CQ4_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ4020 
           WITH (ROWLOCK) 
            SET CQ4_DEBITO  = CQ4_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ4020 
        WHERE CQ4_FILIAL  = @IN_FILIAL  and CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_TPSALD , CQ4_DATA , CQ4_CREDIT , 
                CQ4_SLBASE , CQ4_STATUS , CQ4_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , 
                @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ4020 
           WITH (ROWLOCK) 
            SET CQ4_CREDIT  = CQ4_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ4020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ4_FILIAL  = @IN_FILIAL  and ROUND ( CQ4_DEBITO , 2 ) = 0.00  and ROUND ( CQ4_CREDIT , 2 ) = 0.00  and CQ4_DATA  = @cDataF 
         and  ( (CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC )  or  (CQ4_CONTA  = @IN_CONTAD 
         and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD ) )  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_MOEDA  = @IN_MOEDA 
         and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ4020  WHERE CQ4_FILIAL  = @IN_FILIAL  and ROUND ( CQ4_DEBITO , 2 ) = 0.00  and ROUND ( CQ4_CREDIT , 2 ) = 0.00 
         and CQ4_DATA  = @cDataF  and  ( (CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC 
        )  or  (CQ4_CONTA  = @IN_CONTAD  and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD ) )  and CQ4_TPSALD  = @IN_TPSALDO 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ4020  WHERE CQ4_FILIAL  = @IN_FILIAL  and ROUND ( CQ4_DEBITO , 2 ) = 0.00  and ROUND ( CQ4_CREDIT , 2 ) = 0.00 
         and CQ4_DATA  = @cDataF  and  ( (CQ4_CONTA  = @IN_CONTAC  and CQ4_CCUSTO  = @IN_CUSTOC  and CQ4_ITEM  = @IN_ITEMC 
        )  or  (CQ4_CONTA  = @IN_CONTAD  and CQ4_CCUSTO  = @IN_CUSTOD  and CQ4_ITEM  = @IN_ITEMD ) )  and CQ4_TPSALD  = @IN_TPSALDO 
         and CQ4_MOEDA  = @IN_MOEDA  and CQ4_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_DEBITO , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9020 
           WITH (ROWLOCK) 
            SET CQ9_DEBITO  = CQ9_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_CREDIT , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9020 
           WITH (ROWLOCK) 
            SET CQ9_CREDIT  = CQ9_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ9020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00  and CQ9_DATA  = @IN_DATA 
         and  ( (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC )  or  (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ9020  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC )  or  (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ9020  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMC )  or  (CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @IN_ITEMD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_ITEMD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_DEBITO , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8020 
           WITH (ROWLOCK) 
            SET CQ8_DEBITO  = CQ8_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_ITEMC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_CREDIT , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTD' , @IN_ITEMC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8020 
           WITH (ROWLOCK) 
            SET CQ8_CREDIT  = CQ8_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ8020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00  and CQ8_DATA  = @cDataF 
         and  ( (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC )  or  (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ8020  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC )  or  (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ8020  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMC )  or  (CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @IN_ITEMD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB183_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB183_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB183_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB183_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_ITEMD Char( 9) , 
    @IN_ITEMC Char( 9) , 
    @IN_CLVLD Char( 9) , 
    @IN_CLVLC Char( 9) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAuxDC VarChar( 01 )
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nCredit Float
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_01 @IN_DATA , @cDataF output 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  = @IN_FILIAL  and CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD 
         and CQ7_CLVL  = @IN_CLVLD  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_TPSALD , CQ7_DATA , 
                CQ7_DEBITO , CQ7_SLBASE , CQ7_STATUS , CQ7_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ7010 
           WITH (ROWLOCK) 
            SET CQ7_DEBITO  = CQ7_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ7010 
        WHERE CQ7_FILIAL  = @IN_FILIAL  and CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC 
         and CQ7_CLVL  = @IN_CLVLC  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_TPSALD , CQ7_DATA , 
                CQ7_CREDIT , CQ7_SLBASE , CQ7_STATUS , CQ7_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ7010 
           WITH (ROWLOCK) 
            SET CQ7_CREDIT  = CQ7_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ7010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ7_FILIAL  = @IN_FILIAL  and ROUND ( CQ7_DEBITO , 2 ) = 0.00  and ROUND ( CQ7_CREDIT , 2 ) = 0.00  and CQ7_DATA  = @IN_DATA 
         and  ( (CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC  and CQ7_CLVL  = @IN_CLVLC 
        )  or  (CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD  and CQ7_CLVL  = @IN_CLVLD 
        ) )  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ7010  WHERE CQ7_FILIAL  = @IN_FILIAL  and ROUND ( CQ7_DEBITO , 2 ) = 0.00  and ROUND ( CQ7_CREDIT , 2 ) = 0.00 
         and CQ7_DATA  = @IN_DATA  and  ( (CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC 
         and CQ7_CLVL  = @IN_CLVLC )  or  (CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD 
         and CQ7_CLVL  = @IN_CLVLD ) )  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ7010  WHERE CQ7_FILIAL  = @IN_FILIAL  and ROUND ( CQ7_DEBITO , 2 ) = 0.00  and ROUND ( CQ7_CREDIT , 2 ) = 0.00 
         and CQ7_DATA  = @IN_DATA  and  ( (CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC 
         and CQ7_CLVL  = @IN_CLVLC )  or  (CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD 
         and CQ7_CLVL  = @IN_CLVLD ) )  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  = @IN_FILIAL  and CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD 
         and CQ6_CLVL  = @IN_CLVLD  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_TPSALD , CQ6_DATA , 
                CQ6_DEBITO , CQ6_SLBASE , CQ6_STATUS , CQ6_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ6010 
           WITH (ROWLOCK) 
            SET CQ6_DEBITO  = CQ6_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ6010 
        WHERE CQ6_FILIAL  = @IN_FILIAL  and CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC 
         and CQ6_CLVL  = @IN_CLVLC  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_TPSALD , CQ6_DATA , 
                CQ6_CREDIT , CQ6_SLBASE , CQ6_STATUS , CQ6_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ6010 
           WITH (ROWLOCK) 
            SET CQ6_CREDIT  = CQ6_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ6010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ6_FILIAL  = @IN_FILIAL  and ROUND ( CQ6_DEBITO , 2 ) = 0.00  and ROUND ( CQ6_CREDIT , 2 ) = 0.00  and CQ6_DATA  = @cDataF 
         and  ( (CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC  and CQ6_CLVL  = @IN_CLVLC 
        )  or  (CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD  and CQ6_CLVL  = @IN_CLVLD 
        ) )  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ6010  WHERE CQ6_FILIAL  = @IN_FILIAL  and ROUND ( CQ6_DEBITO , 2 ) = 0.00  and ROUND ( CQ6_CREDIT , 2 ) = 0.00 
         and CQ6_DATA  = @cDataF  and  ( (CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC 
         and CQ6_CLVL  = @IN_CLVLC )  or  (CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD 
         and CQ6_CLVL  = @IN_CLVLD ) )  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ6010  WHERE CQ6_FILIAL  = @IN_FILIAL  and ROUND ( CQ6_DEBITO , 2 ) = 0.00  and ROUND ( CQ6_CREDIT , 2 ) = 0.00 
         and CQ6_DATA  = @cDataF  and  ( (CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC 
         and CQ6_CLVL  = @IN_CLVLC )  or  (CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD 
         and CQ6_CLVL  = @IN_CLVLD ) )  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_DEBITO , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9010 
           WITH (ROWLOCK) 
            SET CQ9_DEBITO  = CQ9_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_CREDIT , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9010 
           WITH (ROWLOCK) 
            SET CQ9_CREDIT  = CQ9_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ9010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00  and CQ9_DATA  = @IN_DATA 
         and  ( (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC )  or  (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ9010  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC )  or  (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ9010  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC )  or  (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_DEBITO , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8010 
           WITH (ROWLOCK) 
            SET CQ8_DEBITO  = CQ8_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_CREDIT , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8010 
           WITH (ROWLOCK) 
            SET CQ8_CREDIT  = CQ8_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ8010 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00  and CQ8_DATA  = @cDataF 
         and  ( (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC )  or  (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ8010  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC )  or  (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ8010  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC )  or  (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB183_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB183_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB183_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB183_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_ITEMD Char( 9) , 
    @IN_ITEMC Char( 9) , 
    @IN_CLVLD Char( 9) , 
    @IN_CLVLC Char( 9) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_TPSALDO Char( 1) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAuxDC VarChar( 01 )
DECLARE @cLp Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @iRecno Integer
DECLARE @nValor Float
DECLARE @nDebito Float
DECLARE @nCredit Float
DECLARE @cDataF Char( 08 )
DECLARE @cSlComp Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @nValor  = ROUND ( @IN_VALOR , 2 )
   IF @IN_OPER  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   SET @cSlBase  = 'S' 
   SET @cStatus  = '1' 
   EXEC LASTDAY_06_02 @IN_DATA , @cDataF output 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  = @IN_FILIAL  and CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD 
         and CQ7_CLVL  = @IN_CLVLD  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_TPSALD , CQ7_DATA , 
                CQ7_DEBITO , CQ7_SLBASE , CQ7_STATUS , CQ7_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ7020 
           WITH (ROWLOCK) 
            SET CQ7_DEBITO  = CQ7_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ7020 
        WHERE CQ7_FILIAL  = @IN_FILIAL  and CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC 
         and CQ7_CLVL  = @IN_CLVLC  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_TPSALD , CQ7_DATA , 
                CQ7_CREDIT , CQ7_SLBASE , CQ7_STATUS , CQ7_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ7020 
           WITH (ROWLOCK) 
            SET CQ7_CREDIT  = CQ7_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ7020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ7_FILIAL  = @IN_FILIAL  and ROUND ( CQ7_DEBITO , 2 ) = 0.00  and ROUND ( CQ7_CREDIT , 2 ) = 0.00  and CQ7_DATA  = @IN_DATA 
         and  ( (CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC  and CQ7_CLVL  = @IN_CLVLC 
        )  or  (CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD  and CQ7_CLVL  = @IN_CLVLD 
        ) )  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ7020  WHERE CQ7_FILIAL  = @IN_FILIAL  and ROUND ( CQ7_DEBITO , 2 ) = 0.00  and ROUND ( CQ7_CREDIT , 2 ) = 0.00 
         and CQ7_DATA  = @IN_DATA  and  ( (CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC 
         and CQ7_CLVL  = @IN_CLVLC )  or  (CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD 
         and CQ7_CLVL  = @IN_CLVLD ) )  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ7020  WHERE CQ7_FILIAL  = @IN_FILIAL  and ROUND ( CQ7_DEBITO , 2 ) = 0.00  and ROUND ( CQ7_CREDIT , 2 ) = 0.00 
         and CQ7_DATA  = @IN_DATA  and  ( (CQ7_CONTA  = @IN_CONTAC  and CQ7_CCUSTO  = @IN_CUSTOC  and CQ7_ITEM  = @IN_ITEMC 
         and CQ7_CLVL  = @IN_CLVLC )  or  (CQ7_CONTA  = @IN_CONTAD  and CQ7_CCUSTO  = @IN_CUSTOD  and CQ7_ITEM  = @IN_ITEMD 
         and CQ7_CLVL  = @IN_CLVLD ) )  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_MOEDA  = @IN_MOEDA  and CQ7_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  = @IN_FILIAL  and CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD 
         and CQ6_CLVL  = @IN_CLVLD  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_TPSALD , CQ6_DATA , 
                CQ6_DEBITO , CQ6_SLBASE , CQ6_STATUS , CQ6_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAD , @IN_CUSTOD , @IN_ITEMD , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ6020 
           WITH (ROWLOCK) 
            SET CQ6_DEBITO  = CQ6_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ6020 
        WHERE CQ6_FILIAL  = @IN_FILIAL  and CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC 
         and CQ6_CLVL  = @IN_CLVLC  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
        
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_TPSALD , CQ6_DATA , 
                CQ6_CREDIT , CQ6_SLBASE , CQ6_STATUS , CQ6_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , @IN_CONTAC , @IN_CUSTOC , @IN_ITEMC , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , 
                @cSlBase , @cStatus , @cLp , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ6020 
           WITH (ROWLOCK) 
            SET CQ6_CREDIT  = CQ6_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ6020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ6_FILIAL  = @IN_FILIAL  and ROUND ( CQ6_DEBITO , 2 ) = 0.00  and ROUND ( CQ6_CREDIT , 2 ) = 0.00  and CQ6_DATA  = @cDataF 
         and  ( (CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC  and CQ6_CLVL  = @IN_CLVLC 
        )  or  (CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD  and CQ6_CLVL  = @IN_CLVLD 
        ) )  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ6020  WHERE CQ6_FILIAL  = @IN_FILIAL  and ROUND ( CQ6_DEBITO , 2 ) = 0.00  and ROUND ( CQ6_CREDIT , 2 ) = 0.00 
         and CQ6_DATA  = @cDataF  and  ( (CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC 
         and CQ6_CLVL  = @IN_CLVLC )  or  (CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD 
         and CQ6_CLVL  = @IN_CLVLD ) )  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N'  and D_E_L_E_T_  = '*' 
        
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ6020  WHERE CQ6_FILIAL  = @IN_FILIAL  and ROUND ( CQ6_DEBITO , 2 ) = 0.00  and ROUND ( CQ6_CREDIT , 2 ) = 0.00 
         and CQ6_DATA  = @cDataF  and  ( (CQ6_CONTA  = @IN_CONTAC  and CQ6_CCUSTO  = @IN_CUSTOC  and CQ6_ITEM  = @IN_ITEMC 
         and CQ6_CLVL  = @IN_CLVLC )  or  (CQ6_CONTA  = @IN_CONTAD  and CQ6_CCUSTO  = @IN_CUSTOD  and CQ6_ITEM  = @IN_ITEMD 
         and CQ6_CLVL  = @IN_CLVLD ) )  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_MOEDA  = @IN_MOEDA  and CQ6_LP  = 'N'  and D_E_L_E_T_  = ' ' 
        
      commit tran 
   END 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_DEBITO , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9020 
           WITH (ROWLOCK) 
            SET CQ9_DEBITO  = CQ9_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  = @IN_FILIAL  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_TPSALD  = @IN_TPSALDO 
         and CQ9_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_TPSALD , CQ9_DATA , CQ9_CREDIT , CQ9_SLBASE , 
                CQ9_STATUS , CQ9_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ9020 
           WITH (ROWLOCK) 
            SET CQ9_CREDIT  = CQ9_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ9020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00  and CQ9_DATA  = @IN_DATA 
         and  ( (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC )  or  (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ9020  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC )  or  (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ9020  WHERE CQ9_FILIAL  = @IN_FILIAL  and ROUND ( CQ9_DEBITO , 2 ) = 0.00  and ROUND ( CQ9_CREDIT , 2 ) = 0.00 
         and CQ9_DATA  = @IN_DATA  and  ( (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLC )  or  (CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @IN_CLVLD 
        ) )  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_MOEDA  = @IN_MOEDA  and CQ9_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   IF @IN_CLVLD  != ' '  and  (@IN_DC  = '1'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nDebito  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         SET @nDebito  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_DEBITO , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLD , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nDebito , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8020 
           WITH (ROWLOCK) 
            SET CQ8_DEBITO  = CQ8_DEBITO  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_CLVLC  != ' '  and  (@IN_DC  = '2'  or @IN_DC  = '3' ) 
   BEGIN 
      SET @cLp  = 'N' 
      IF @IN_DTLP  != ' ' 
      BEGIN 
         SET @cLp  = 'Z' 
      END 
      SET @iRecno  = 0 
      SET @nCredit  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  = @IN_FILIAL  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_TPSALD  = @IN_TPSALDO 
         and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCredit  = @nValor 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_TPSALD , CQ8_DATA , CQ8_CREDIT , CQ8_SLBASE , 
                CQ8_STATUS , CQ8_LP , R_E_C_N_O_ ) 
         VALUES (@IN_FILIAL , 'CTH' , @IN_CLVLC , @IN_MOEDA , @IN_TPSALDO , @cDataF , @nCredit , @cSlBase , @cStatus , @cLp , 
                @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE CQ8020 
           WITH (ROWLOCK) 
            SET CQ8_CREDIT  = CQ8_CREDIT  + @nValor 
          WHERE R_E_C_N_O_  = @iRecno 
         commit tran 
      END 
   END 
   IF @IN_INTEGRIDADE  = '1' 
   BEGIN 
      begin tran 
      UPDATE CQ8020 
        WITH (ROWLOCK) 
         SET D_E_L_E_T_  = '*' 
       WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00  and CQ8_DATA  = @cDataF 
         and  ( (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC )  or  (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
      begin tran 
      DELETE FROM CQ8020  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC )  or  (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = '*' 
      commit tran 
   END 
   ELSE 
   BEGIN 
      begin tran 
      DELETE FROM CQ8020  WHERE CQ8_FILIAL  = @IN_FILIAL  and ROUND ( CQ8_DEBITO , 2 ) = 0.00  and ROUND ( CQ8_CREDIT , 2 ) = 0.00 
         and CQ8_DATA  = @cDataF  and  ( (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLC )  or  (CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @IN_CLVLD 
        ) )  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_MOEDA  = @IN_MOEDA  and CQ8_LP  = 'N'  and D_E_L_E_T_  = ' ' 
      commit tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB185_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB185_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB185_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB185_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_OPC Char( 01 ) , 
    @IN_ATIVDE Char( 40) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cResult Char( 01 )
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   IF @IN_OPC  = '5' 
   BEGIN 
      EXEC CTB187_06_01 @IN_FILIAL , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @IN_INTEGRID , @IN_MVSOMA , @cResult output 
   END 
   IF @IN_OPC  = '4' 
   BEGIN 
      EXEC CTB188_06_01 @IN_FILIAL , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @IN_INTEGRID , @IN_MVSOMA , @cResult output 
   END 
   IF @IN_OPC  = '3' 
   BEGIN 
      EXEC CTB190_06_01 @IN_FILIAL , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @IN_ATIVDE , @IN_INTEGRID , @IN_MVSOMA , 
             @cResult output 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB185_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB185_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB185_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB185_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_OPC Char( 01 ) , 
    @IN_ATIVDE Char( 40) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cResult Char( 01 )
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   IF @IN_OPC  = '5' 
   BEGIN 
      EXEC CTB187_06_02 @IN_FILIAL , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @IN_INTEGRID , @IN_MVSOMA , @cResult output 
   END 
   IF @IN_OPC  = '4' 
   BEGIN 
      EXEC CTB188_06_02 @IN_FILIAL , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @IN_INTEGRID , @IN_MVSOMA , @cResult output 
   END 
   IF @IN_OPC  = '3' 
   BEGIN 
      EXEC CTB190_06_02 @IN_FILIAL , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @IN_ATIVDE , @IN_INTEGRID , @IN_MVSOMA , 
             @cResult output 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB187_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB187_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB187_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB187_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cMoeda Char( 2)
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cAux VarChar( 03 )
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @nValor Float
DECLARE @cOper Char( 01 )
DECLARE @cData Char( 08 )
DECLARE @cDtlp Char( 08 )
DECLARE @cResult Char( 01 )
DECLARE @iRecnoTRW Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cOper  = '-' 
   SET @cResult  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CTB_TRW
   DECLARE CTB_TRW insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , R_E_C_N_O_ 
     FROM TRW010_SP 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and CT2_DC  != '4'  and CT2_TPSALD  != '9'  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CTB_TRW
   FETCH CTB_TRW 
    INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
          @cClvlD , @cClvlC , @cDtlp , @iRecnoTRW 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      IF @cDc  != '4' 
      BEGIN 
         EXEC CTB189_06_01 @IN_FILIAL , @cOper , @cDc , @cDebito , @cCredit , @cCustoD , @cCustoC , @cItemD , @cItemC , @cClvlD , 
                @cClvlC , @cTpSaldo , @cMoeda , @cData , @cDtlp , @nValor , @IN_INTEGRID , @cResult output 
         EXEC CTB233_06_01 @cFilial_CT2 , @cData , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoeda , @cTpSaldo , @cDc , @cOper , 
                @IN_MVSOMA , @nValor , @cResult output 
      END 
      begin tran 
      DELETE FROM TRW010_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
      commit tran 
      FETCH CTB_TRW 
       INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
             @cClvlD , @cClvlC , @cDtlp , @iRecnoTRW 
   END 
   CLOSE CTB_TRW
   DEALLOCATE CTB_TRW
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB187_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB187_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB187_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB187_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cMoeda Char( 2)
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cAux VarChar( 03 )
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @nValor Float
DECLARE @cOper Char( 01 )
DECLARE @cData Char( 08 )
DECLARE @cDtlp Char( 08 )
DECLARE @cResult Char( 01 )
DECLARE @iRecnoTRW Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cOper  = '-' 
   SET @cResult  = '0' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CTB_TRW
   DECLARE CTB_TRW insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , R_E_C_N_O_ 
     FROM TRW020_SP 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and CT2_DC  != '4'  and CT2_TPSALD  != '9'  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CTB_TRW
   FETCH CTB_TRW 
    INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
          @cClvlD , @cClvlC , @cDtlp , @iRecnoTRW 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      IF @cDc  != '4' 
      BEGIN 
         EXEC CTB189_06_02 @IN_FILIAL , @cOper , @cDc , @cDebito , @cCredit , @cCustoD , @cCustoC , @cItemD , @cItemC , @cClvlD , 
                @cClvlC , @cTpSaldo , @cMoeda , @cData , @cDtlp , @nValor , @IN_INTEGRID , @cResult output 
         EXEC CTB233_06_02 @cFilial_CT2 , @cData , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoeda , @cTpSaldo , @cDc , @cOper , 
                @IN_MVSOMA , @nValor , @cResult output 
      END 
      begin tran 
      DELETE FROM TRW020_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
      commit tran 
      FETCH CTB_TRW 
       INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
             @cClvlD , @cClvlC , @cDtlp , @iRecnoTRW 
   END 
   CLOSE CTB_TRW
   DEALLOCATE CTB_TRW
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB188_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB188_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB188_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB188_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @nValor Float
DECLARE @cMoedaN Char( 2)
DECLARE @cDebitoN Char( 20)
DECLARE @cCreditN Char( 20)
DECLARE @cCustoDN Char( 9)
DECLARE @cCustoCN Char( 9)
DECLARE @cItemDN Char( 9)
DECLARE @cItemCN Char( 9)
DECLARE @cClvlDN Char( 9)
DECLARE @cClvlCN Char( 9)
DECLARE @cTpSaldoN Char( 1)
DECLARE @cDcN Char( 1)
DECLARE @nValorN Float
DECLARE @nValorAux Float
DECLARE @cDataN Char( 08 )
DECLARE @cDtlpN Char( 08 )
DECLARE @cOper Char( 01 )
DECLARE @cResult Char( 01 )
DECLARE @iRecnoTRW Integer
DECLARE @iRecnoCT2 Integer
DECLARE @lExec Char( 01 )
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   SET @lExec  = '1' 
   SET @cMoedaN  = ' '   
   SET @cTpSaldo  = ' '   
   SET @cDc  = ' '   
   SET @nValor  = 0   
   SET @nValorAux  = 0 
   SET @cDebito  = ' '   
   SET @cCredit  = ' '   
   SET @cCustoD  = ' '   
   SET @cCustoC  = ' '   
   SET @cItemD  = ' ' 
   SET @cItemC  = ' '   
   SET @cClvlD  = ' '   
   SET @cClvlC  = ' '   
   SET @iRecnoTRW  = null 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CTB_CT2
   DECLARE CTB_CT2 insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , R_E_C_N_O_ 
     FROM CT2010 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and CT2_DC  != '4'  and CT2_TPSALD  != '9'  and D_E_L_E_T_  = ' ' 
     ORDER BY R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN CTB_CT2
   FETCH CTB_CT2 
    INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
          @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoCT2 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @iRecnoTRW  = null 
      SELECT @cTpSaldo  = CT2_TPSALD , @cDc  = CT2_DC , @nValor  = CT2_VALOR , @cDebito  = CT2_DEBITO , @cCredit  = CT2_CREDIT 
        , @cCustoD  = CT2_CCD , @cCustoC  = CT2_CCC , @cItemD  = CT2_ITEMD , @cItemC  = CT2_ITEMC , @cClvlD  = CT2_CLVLDB 
        , @cClvlC  = CT2_CLVLCR , @iRecnoTRW  = R_E_C_N_O_ 
        FROM TRW010_SP 
        WHERE R_E_C_N_O_  = @iRecnoCT2  and CT2_TPSALD  <> '9' 
      SET @lExec  = '0' 
      IF @iRecnoTRW is NOT null 
      BEGIN 
         IF @cDcN  = @cDc  and @cDebitoN  = @cDebito  and @cCreditN  = @cCredit  and @cCustoDN  = @cCustoD  and @cCustoCN  = @cCustoC 
            and @cItemDN  = @cItemD  and @cItemCN  = @cItemC  and @cClvlDN  = @cClvlD  and @cClvlCN  = @cClvlC  and @nValorN  = @nValor 
            and @cTpSaldoN  = @cTpSaldo 
         BEGIN 
            SET @lExec  = '0' 
         END 
         ELSE 
         BEGIN 
            SET @lExec  = '1' 
         END 
         IF @lExec  = '1' 
         BEGIN 
            SET @cOper  = '-' 
            EXEC CTB189_06_01 @IN_FILIAL , @cOper , @cDc , @cDebito , @cCredit , @cCustoD , @cCustoC , @cItemD , @cItemC , 
                   @cClvlD , @cClvlC , @cTpSaldo , @cMoedaN , @cDataN , @cDtlpN , @nValor , @IN_INTEGRID , @cResult output 
            EXEC CTB233_06_01 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldo , @cDc , @cOper , 
                   @IN_MVSOMA , @nValor , @cResult output 
            SET @cOper  = '+' 
            EXEC CTB189_06_01 @IN_FILIAL , @cOper , @cDcN , @cDebitoN , @cCreditN , @cCustoDN , @cCustoCN , @cItemDN , @cItemCN , 
                   @cClvlDN , @cClvlCN , @cTpSaldoN , @cMoedaN , @cDataN , @cDtlpN , @nValorN , @IN_INTEGRID , @cResult output 
            EXEC CTB233_06_01 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldoN , @cDcN , 
                   @cOper , @IN_MVSOMA , @nValorN , @cResult output 
         END 
         begin tran 
         DELETE FROM TRW010_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
         commit tran 
      END 
      ELSE 
      BEGIN 
         IF @iRecnoTRW is null 
         BEGIN 
            SET @cOper  = '+' 
            EXEC CTB189_06_01 @IN_FILIAL , @cOper , @cDcN , @cDebitoN , @cCreditN , @cCustoDN , @cCustoCN , @cItemDN , @cItemCN , 
                   @cClvlDN , @cClvlCN , @cTpSaldoN , @cMoedaN , @cDataN , @cDtlpN , @nValorN , @IN_INTEGRID , @cResult output 
            EXEC CTB233_06_01 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldoN , @cDcN , 
                   @cOper , @IN_MVSOMA , @nValorN , @cResult output 
         END 
      END 
      FETCH CTB_CT2 
       INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
             @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoCT2 
   END 
   CLOSE CTB_CT2
   DEALLOCATE CTB_CT2
    
   -- Cursor declaration CTB_TRW
   DECLARE CTB_TRW insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , R_E_C_N_O_ 
     FROM TRW010_SP 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and D_E_L_E_T_  = ' ' 
     ORDER BY R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN CTB_TRW
   FETCH CTB_TRW 
    INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
          @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoTRW 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cOper  = '-' 
      EXEC CTB189_06_01 @IN_FILIAL , @cOper , @cDcN , @cDebitoN , @cCreditN , @cCustoDN , @cCustoCN , @cItemDN , @cItemCN , 
             @cClvlDN , @cClvlCN , @cTpSaldoN , @cMoedaN , @cDataN , @cDtlpN , @nValorN , @IN_INTEGRID , @cResult output 
      EXEC CTB233_06_01 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldoN , @cDcN , @cOper , 
             @IN_MVSOMA , @nValorN , @cResult output 
      begin tran 
      DELETE FROM TRW010_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
      commit tran 
      FETCH CTB_TRW 
       INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
             @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoTRW 
   END 
   CLOSE CTB_TRW
   DEALLOCATE CTB_TRW
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB188_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB188_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB188_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB188_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @nValor Float
DECLARE @cMoedaN Char( 2)
DECLARE @cDebitoN Char( 20)
DECLARE @cCreditN Char( 20)
DECLARE @cCustoDN Char( 9)
DECLARE @cCustoCN Char( 9)
DECLARE @cItemDN Char( 9)
DECLARE @cItemCN Char( 9)
DECLARE @cClvlDN Char( 9)
DECLARE @cClvlCN Char( 9)
DECLARE @cTpSaldoN Char( 1)
DECLARE @cDcN Char( 1)
DECLARE @nValorN Float
DECLARE @nValorAux Float
DECLARE @cDataN Char( 08 )
DECLARE @cDtlpN Char( 08 )
DECLARE @cOper Char( 01 )
DECLARE @cResult Char( 01 )
DECLARE @iRecnoTRW Integer
DECLARE @iRecnoCT2 Integer
DECLARE @lExec Char( 01 )
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   SET @lExec  = '1' 
   SET @cMoedaN  = ' '   
   SET @cTpSaldo  = ' '   
   SET @cDc  = ' '   
   SET @nValor  = 0   
   SET @nValorAux  = 0 
   SET @cDebito  = ' '   
   SET @cCredit  = ' '   
   SET @cCustoD  = ' '   
   SET @cCustoC  = ' '   
   SET @cItemD  = ' ' 
   SET @cItemC  = ' '   
   SET @cClvlD  = ' '   
   SET @cClvlC  = ' '   
   SET @iRecnoTRW  = null 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CTB_CT2
   DECLARE CTB_CT2 insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , R_E_C_N_O_ 
     FROM CT2030 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and CT2_DC  != '4'  and CT2_TPSALD  != '9'  and D_E_L_E_T_  = ' ' 
     ORDER BY R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN CTB_CT2
   FETCH CTB_CT2 
    INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
          @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoCT2 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @iRecnoTRW  = null 
      SELECT @cTpSaldo  = CT2_TPSALD , @cDc  = CT2_DC , @nValor  = CT2_VALOR , @cDebito  = CT2_DEBITO , @cCredit  = CT2_CREDIT 
        , @cCustoD  = CT2_CCD , @cCustoC  = CT2_CCC , @cItemD  = CT2_ITEMD , @cItemC  = CT2_ITEMC , @cClvlD  = CT2_CLVLDB 
        , @cClvlC  = CT2_CLVLCR , @iRecnoTRW  = R_E_C_N_O_ 
        FROM TRW020_SP 
        WHERE R_E_C_N_O_  = @iRecnoCT2  and CT2_TPSALD  <> '9' 
      SET @lExec  = '0' 
      IF @iRecnoTRW is NOT null 
      BEGIN 
         IF @cDcN  = @cDc  and @cDebitoN  = @cDebito  and @cCreditN  = @cCredit  and @cCustoDN  = @cCustoD  and @cCustoCN  = @cCustoC 
            and @cItemDN  = @cItemD  and @cItemCN  = @cItemC  and @cClvlDN  = @cClvlD  and @cClvlCN  = @cClvlC  and @nValorN  = @nValor 
            and @cTpSaldoN  = @cTpSaldo 
         BEGIN 
            SET @lExec  = '0' 
         END 
         ELSE 
         BEGIN 
            SET @lExec  = '1' 
         END 
         IF @lExec  = '1' 
         BEGIN 
            SET @cOper  = '-' 
            EXEC CTB189_06_02 @IN_FILIAL , @cOper , @cDc , @cDebito , @cCredit , @cCustoD , @cCustoC , @cItemD , @cItemC , 
                   @cClvlD , @cClvlC , @cTpSaldo , @cMoedaN , @cDataN , @cDtlpN , @nValor , @IN_INTEGRID , @cResult output 
            EXEC CTB233_06_02 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldo , @cDc , @cOper , 
                   @IN_MVSOMA , @nValor , @cResult output 
            SET @cOper  = '+' 
            EXEC CTB189_06_02 @IN_FILIAL , @cOper , @cDcN , @cDebitoN , @cCreditN , @cCustoDN , @cCustoCN , @cItemDN , @cItemCN , 
                   @cClvlDN , @cClvlCN , @cTpSaldoN , @cMoedaN , @cDataN , @cDtlpN , @nValorN , @IN_INTEGRID , @cResult output 
            EXEC CTB233_06_02 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldoN , @cDcN , 
                   @cOper , @IN_MVSOMA , @nValorN , @cResult output 
         END 
         begin tran 
         DELETE FROM TRW020_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
         commit tran 
      END 
      ELSE 
      BEGIN 
         IF @iRecnoTRW is null 
         BEGIN 
            SET @cOper  = '+' 
            EXEC CTB189_06_02 @IN_FILIAL , @cOper , @cDcN , @cDebitoN , @cCreditN , @cCustoDN , @cCustoCN , @cItemDN , @cItemCN , 
                   @cClvlDN , @cClvlCN , @cTpSaldoN , @cMoedaN , @cDataN , @cDtlpN , @nValorN , @IN_INTEGRID , @cResult output 
            EXEC CTB233_06_02 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldoN , @cDcN , 
                   @cOper , @IN_MVSOMA , @nValorN , @cResult output 
         END 
      END 
      FETCH CTB_CT2 
       INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
             @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoCT2 
   END 
   CLOSE CTB_CT2
   DEALLOCATE CTB_CT2
    
   -- Cursor declaration CTB_TRW
   DECLARE CTB_TRW insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , R_E_C_N_O_ 
     FROM TRW020_SP 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_DOC  = @IN_DOC 
      and D_E_L_E_T_  = ' ' 
     ORDER BY R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN CTB_TRW
   FETCH CTB_TRW 
    INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
          @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoTRW 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cOper  = '-' 
      EXEC CTB189_06_02 @IN_FILIAL , @cOper , @cDcN , @cDebitoN , @cCreditN , @cCustoDN , @cCustoCN , @cItemDN , @cItemCN , 
             @cClvlDN , @cClvlCN , @cTpSaldoN , @cMoedaN , @cDataN , @cDtlpN , @nValorN , @IN_INTEGRID , @cResult output 
      EXEC CTB233_06_02 @cFilial_CT2 , @cDataN , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoedaN , @cTpSaldoN , @cDcN , @cOper , 
             @IN_MVSOMA , @nValorN , @cResult output 
      begin tran 
      DELETE FROM TRW020_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
      commit tran 
      FETCH CTB_TRW 
       INTO @cMoedaN , @cDataN , @cTpSaldoN , @cDcN , @cDebitoN , @cCreditN , @nValorN , @cCustoDN , @cCustoCN , @cItemDN , 
             @cItemCN , @cClvlDN , @cClvlCN , @cDtlpN , @iRecnoTRW 
   END 
   CLOSE CTB_TRW
   DEALLOCATE CTB_TRW
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB189_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB189_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB189_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB189_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 1) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_ITEMD Char( 9) , 
    @IN_ITEMC Char( 9) , 
    @IN_CLVLD Char( 9) , 
    @IN_CLVLC Char( 9) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRID Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cResult Char( 01 )
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   SET @cAux  = 'CQ0' 
   EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CQ0 output 
   EXEC CTB180_06_01 @cFilial_CQ0 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_MOEDA , @IN_DATA , @IN_TPSALDO , @IN_DTLP , 
          @IN_VALOR , @IN_INTEGRID , @cResult output 
   IF @IN_CUSTOD  != ' '  or @IN_CUSTOC  != ' ' 
   BEGIN 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CQ2 output 
      EXEC CTB181_06_01 @cFilial_CQ2 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_CUSTOD , @IN_CUSTOC , @IN_MOEDA , 
             @IN_DATA , @IN_TPSALDO , @IN_DTLP , @IN_VALOR , @IN_INTEGRID , @cResult output 
   END 
   IF @IN_ITEMD  != ' '  or @IN_ITEMC  != ' ' 
   BEGIN 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CQ4 output 
      EXEC CTB182_06_01 @cFilial_CQ4 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_CUSTOD , @IN_CUSTOC , @IN_ITEMD , 
             @IN_ITEMC , @IN_MOEDA , @IN_DATA , @IN_TPSALDO , @IN_DTLP , @IN_VALOR , @IN_INTEGRID , @cResult output 
   END 
   IF @IN_CLVLD  != ' '  or @IN_CLVLC  != ' ' 
   BEGIN 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CQ6 output 
      EXEC CTB183_06_01 @cFilial_CQ6 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_CUSTOD , @IN_CUSTOC , @IN_ITEMD , 
             @IN_ITEMC , @IN_CLVLD , @IN_CLVLC , @IN_MOEDA , @IN_DATA , @IN_TPSALDO , @IN_DTLP , @IN_VALOR , @IN_INTEGRID , 
             @cResult output 
   END 
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB189_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB189_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB189_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB189_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_OPER Char( 01 ) , 
    @IN_DC Char( 1) , 
    @IN_CONTAD Char( 20) , 
    @IN_CONTAC Char( 20) , 
    @IN_CUSTOD Char( 9) , 
    @IN_CUSTOC Char( 9) , 
    @IN_ITEMD Char( 9) , 
    @IN_ITEMC Char( 9) , 
    @IN_CLVLD Char( 9) , 
    @IN_CLVLC Char( 9) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MOEDA Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_DTLP Char( 08 ) , 
    @IN_VALOR Float , 
    @IN_INTEGRID Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cResult Char( 01 )
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   SET @cAux  = 'CQ0' 
   EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CQ0 output 
   EXEC CTB180_06_02 @cFilial_CQ0 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_MOEDA , @IN_DATA , @IN_TPSALDO , @IN_DTLP , 
          @IN_VALOR , @IN_INTEGRID , @cResult output 
   IF @IN_CUSTOD  != ' '  or @IN_CUSTOC  != ' ' 
   BEGIN 
      SET @cAux  = 'CQ2' 
      EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CQ2 output 
      EXEC CTB181_06_02 @cFilial_CQ2 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_CUSTOD , @IN_CUSTOC , @IN_MOEDA , 
             @IN_DATA , @IN_TPSALDO , @IN_DTLP , @IN_VALOR , @IN_INTEGRID , @cResult output 
   END 
   IF @IN_ITEMD  != ' '  or @IN_ITEMC  != ' ' 
   BEGIN 
      SET @cAux  = 'CQ4' 
      EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CQ4 output 
      EXEC CTB182_06_02 @cFilial_CQ4 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_CUSTOD , @IN_CUSTOC , @IN_ITEMD , 
             @IN_ITEMC , @IN_MOEDA , @IN_DATA , @IN_TPSALDO , @IN_DTLP , @IN_VALOR , @IN_INTEGRID , @cResult output 
   END 
   IF @IN_CLVLD  != ' '  or @IN_CLVLC  != ' ' 
   BEGIN 
      SET @cAux  = 'CQ6' 
      EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CQ6 output 
      EXEC CTB183_06_02 @cFilial_CQ6 , @IN_OPER , @IN_DC , @IN_CONTAD , @IN_CONTAC , @IN_CUSTOD , @IN_CUSTOC , @IN_ITEMD , 
             @IN_ITEMC , @IN_CLVLD , @IN_CLVLC , @IN_MOEDA , @IN_DATA , @IN_TPSALDO , @IN_DTLP , @IN_VALOR , @IN_INTEGRID , 
             @cResult output 
   END 
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB190_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB190_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB190_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB190_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_ATIVDE Char( 40) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cMoeda Char( 2)
DECLARE @cData Char( 08 )
DECLARE @cDtlp Char( 08 )
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @cAtiv Char( 40)
DECLARE @nValor Float
DECLARE @cOper Char( 01 )
DECLARE @cResult Char( 01 )
DECLARE @iRecnoTRW Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   SET @cOper  = '+' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CTB_CT2
   DECLARE CTB_CT2 insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , CT2_ATIVDE , R_E_C_N_O_ 
     FROM TRW010_SP 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_ATIVDE  = @IN_ATIVDE 
      and CT2_DC  != '4'  and CT2_TPSALD  != '9'  and D_E_L_E_T_  = ' ' 
     ORDER BY R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN CTB_CT2
   FETCH CTB_CT2 
    INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
          @cClvlD , @cClvlC , @cDtlp , @cAtiv , @iRecnoTRW 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      IF @cDc  != '4' 
      BEGIN 
         EXEC CTB189_06_01 @IN_FILIAL , @cOper , @cDc , @cDebito , @cCredit , @cCustoD , @cCustoC , @cItemD , @cItemC , @cClvlD , 
                @cClvlC , @cTpSaldo , @cMoeda , @cData , @cDtlp , @nValor , @IN_INTEGRID , @cResult output 
         EXEC CTB233_06_01 @cFilial_CT2 , @cData , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoeda , @cTpSaldo , @cDc , @cOper , 
                @IN_MVSOMA , @nValor , @cResult output 
      END 
      begin tran 
      DELETE FROM TRW010_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
      commit tran 
      FETCH CTB_CT2 
       INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
             @cClvlD , @cClvlC , @cDtlp , @cAtiv , @iRecnoTRW 
   END 
   CLOSE CTB_CT2
   DEALLOCATE CTB_CT2
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB190_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB190_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB190_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB190_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_ATIVDE Char( 40) , 
    @IN_INTEGRID Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cMoeda Char( 2)
DECLARE @cData Char( 08 )
DECLARE @cDtlp Char( 08 )
DECLARE @cDebito Char( 20)
DECLARE @cCredit Char( 20)
DECLARE @cCustoD Char( 9)
DECLARE @cCustoC Char( 9)
DECLARE @cItemD Char( 9)
DECLARE @cItemC Char( 9)
DECLARE @cClvlD Char( 9)
DECLARE @cClvlC Char( 9)
DECLARE @cTpSaldo Char( 1)
DECLARE @cDc Char( 1)
DECLARE @cAtiv Char( 40)
DECLARE @nValor Float
DECLARE @cOper Char( 01 )
DECLARE @cResult Char( 01 )
DECLARE @iRecnoTRW Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cResult  = '0' 
   SET @cOper  = '+' 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CT2 output 
    
   -- Cursor declaration CTB_CT2
   DECLARE CTB_CT2 insensitive  CURSOR FOR 
   SELECT CT2_MOEDLC , CT2_DATA , CT2_TPSALD , CT2_DC , CT2_DEBITO , CT2_CREDIT , CT2_VALOR , CT2_CCD , CT2_CCC , CT2_ITEMD , 
          CT2_ITEMC , CT2_CLVLDB , CT2_CLVLCR , CT2_DTLP , CT2_ATIVDE , R_E_C_N_O_ 
     FROM TRW020_SP 
     WHERE CT2_FILIAL  = @cFilial_CT2  and CT2_DATA  = @IN_DATA  and CT2_LOTE  = @IN_LOTE  and CT2_SBLOTE  = @IN_SBLOTE  and CT2_ATIVDE  = @IN_ATIVDE 
      and CT2_DC  != '4'  and CT2_TPSALD  != '9'  and D_E_L_E_T_  = ' ' 
     ORDER BY R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN CTB_CT2
   FETCH CTB_CT2 
    INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
          @cClvlD , @cClvlC , @cDtlp , @cAtiv , @iRecnoTRW 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      IF @cDc  != '4' 
      BEGIN 
         EXEC CTB189_06_02 @IN_FILIAL , @cOper , @cDc , @cDebito , @cCredit , @cCustoD , @cCustoC , @cItemD , @cItemC , @cClvlD , 
                @cClvlC , @cTpSaldo , @cMoeda , @cData , @cDtlp , @nValor , @IN_INTEGRID , @cResult output 
         EXEC CTB233_06_02 @cFilial_CT2 , @cData , @IN_LOTE , @IN_SBLOTE , @IN_DOC , @cMoeda , @cTpSaldo , @cDc , @cOper , 
                @IN_MVSOMA , @nValor , @cResult output 
      END 
      begin tran 
      DELETE FROM TRW020_SP  WHERE R_E_C_N_O_  = @iRecnoTRW 
      commit tran 
      FETCH CTB_CT2 
       INTO @cMoeda , @cData , @cTpSaldo , @cDc , @cDebito , @cCredit , @nValor , @cCustoD , @cCustoC , @cItemD , @cItemC , 
             @cClvlD , @cClvlC , @cDtlp , @cAtiv , @iRecnoTRW 
   END 
   CLOSE CTB_CT2
   DEALLOCATE CTB_CT2
   SET @OUT_RESULT  = @cResult 
END
GO

GO
--SqlScripter----[dbo].[CTB193_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB193_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB193_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB193_23_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQA Char( 2)
DECLARE @cFILCQA Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux2 Char( 01 )
DECLARE @dDataIni Char( 08 )
DECLARE @dDataFim Char( 08 )
DECLARE @cAlias Char( 03 )
DECLARE @RecMin Integer
DECLARE @RecMax Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @RecMin  = 0 
   SET @RecMax  = 0 
   SET @cFILCQA  = ' ' 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cFILCQA  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFILCQA  = @IN_FILIAL 
   END 
   SET @cAux  = 'CQA' 
   EXEC XFILIAL_23_01 @cAux , @cFILCQA , @cFilial_CQA output 
   SELECT @RecMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @RecMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
     FROM CQA010 
     WHERE CQA_FILIAL  = @cFilial_CQA  and D_E_L_E_T_  = ' ' 
   IF  ( (@RecMin  = 0 )  and  (@RecMax  = 0 ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB194_23_01 @RecMin , @RecMax , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB196_23_01 @RecMin , @RecMax , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB193_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB193_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB193_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB193_23_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQA Char( 2)
DECLARE @cFILCQA Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @cAux2 Char( 01 )
DECLARE @dDataIni Char( 08 )
DECLARE @dDataFim Char( 08 )
DECLARE @cAlias Char( 03 )
DECLARE @RecMin Integer
DECLARE @RecMax Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @RecMin  = 0 
   SET @RecMax  = 0 
   SET @cFILCQA  = ' ' 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cFILCQA  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cFILCQA  = @IN_FILIAL 
   END 
   SET @cAux  = 'CQA' 
   EXEC XFILIAL_23_02 @cAux , @cFILCQA , @cFilial_CQA output 
   SELECT @RecMin  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @RecMax  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
     FROM CQA020 
     WHERE CQA_FILIAL  = @cFilial_CQA  and D_E_L_E_T_  = ' ' 
   IF  ( (@RecMin  = 0 )  and  (@RecMax  = 0 ) ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB194_23_02 @RecMin , @RecMax , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @OUT_RESULTADO output 
      SET @OUT_RESULTADO  = '0' 
      EXEC CTB196_23_02 @RecMin , @RecMax , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB194_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB194_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB194_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB194_23_01]
(
    @IN_RECMIN Integer , 
    @IN_RECMAX Integer , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQA Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @RecMin Integer
DECLARE @RecMax Integer
DECLARE @cTPSALD Char( 1)
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @RecMin  = @IN_RECMIN 
   SET @RecMax  = @IN_RECMAX 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' , CT2_TPSALD 
     FROM CT2010 CT2, CQA010 CQA
     WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' '  and CT2.D_E_L_E_T_  = ' ' 
      and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE  and CT2_DOC  = CQA_DOC 
      and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
      and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' , CT2_TPSALD 
     FROM CT2010 CT2, CQA010 CQA
     WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' '  and CT2.D_E_L_E_T_  = ' ' 
      and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE  and CT2_DOC  = CQA_DOC 
      and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
      and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
     ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 8 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = @nVALOR 
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = @nVALOR 
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1010 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_DATA  = @cDATA  and CQ1_TPSALD  = @cTPSALD 
         and CQ1_LP  = @cCTX_LP  and CQ1_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1010 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1010 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nVALOR  = ROUND ( @nVALOR , 2 )
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = CQ1_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ1010 
              WITH (ROWLOCK) 
               SET CQ1_CREDIT  = CQ1_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         Commit tran 
      END 
      EXEC LASTDAY_23_01 @cDATA , @cDataF output 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0010 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  = @cDataF  and CQ0_CONTA  = @cCONTA  and CQ0_MOEDA  = @cMOEDA  and CQ0_TPSALD  = @cTPSALD 
         and CQ0_LP  = @cCTX_LP  and CQ0_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0010 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCONTA , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ0010 
              WITH (ROWLOCK) 
               SET CQ0_DEBITO  = CQ0_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ0010 
              WITH (ROWLOCK) 
               SET CQ0_CREDIT  = CQ0_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         commit tran 
      END 
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' , CT2_TPSALD 
        FROM CT2010 CT2, CQA010 CQA
        WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' '  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' , CT2_TPSALD 
        FROM CT2010 CT2, CQA010 CQA
        WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' '  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 9 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @cTPSALD  and CQ3_LP  = @cCTX_LP  and CQ3_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = CQ3_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ3010 
                 WITH (ROWLOCK) 
                  SET CQ3_CREDIT  = CQ3_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
           WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  = @cDataF  and CQ2_CONTA  = @cCONTA  and CQ2_CCUSTO  = @cCUSTO 
            and CQ2_MOEDA  = @cMOEDA  and CQ2_TPSALD  = @cTPSALD  and CQ2_LP  = @cCTX_LP  and CQ2_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ2010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                   CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ2 , @cCONTA , @cCUSTO , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET CQ2_DEBITO  = CQ2_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ2010 
                 WITH (ROWLOCK) 
                  SET CQ2_CREDIT  = CQ2_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCUSTO  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @cTPSALD  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTT' , @cCUSTO , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_CREDIT  = CQ9_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCUSTO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @cTPSALD  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTT' , @cCUSTO , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_DEBITO  = CQ8_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_CREDIT  = CQ8_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB195_23_01 @RecMin , @RecMax , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB194_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB194_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB194_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB194_23_02]
(
    @IN_RECMIN Integer , 
    @IN_RECMAX Integer , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQA Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ0 Char( 2)
DECLARE @cFilial_CQ1 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @RecMin Integer
DECLARE @RecMax Integer
DECLARE @cTPSALD Char( 1)
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @RecMin  = @IN_RECMIN 
   SET @RecMax  = @IN_RECMAX 
    
   -- Cursor declaration CUR_CTB190
   DECLARE CUR_CTB190 insensitive  CURSOR FOR 
   SELECT CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' , CT2_TPSALD 
     FROM CT2030 CT2, CQA020 CQA
     WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' '  and CT2.D_E_L_E_T_  = ' ' 
      and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE  and CT2_DOC  = CQA_DOC 
      and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
      and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
     GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
   UNION 
   SELECT CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' , CT2_TPSALD 
     FROM CT2030 CT2, CQA020 CQA
     WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' '  and CT2.D_E_L_E_T_  = ' ' 
      and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE  and CT2_DOC  = CQA_DOC 
      and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
      and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
     GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
     ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 8 
   FOR READ ONLY 
    
   OPEN CUR_CTB190
   FETCH CUR_CTB190 
    INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
   WHILE ( (@@Fetch_status  = 0 ) )
   BEGIN
      SET @cAux  = 'CQ0' 
      EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ0 output 
      SET @cAux  = 'CQ1' 
      EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ1 output 
      SET @nCTX_DEBITO  = 0 
      SET @nCTX_CREDIT  = 0 
      SET @cCTX_STATUS  = '1' 
      SET @cCTX_SLBASE  = 'S' 
      SET @cCTX_DTLP  = ' ' 
      IF @cTIPO  = '1' 
      BEGIN 
         SET @nCTX_DEBITO  = @nVALOR 
         SET @nCTX_CREDIT  = 0 
      END 
      IF @cTIPO  = '2' 
      BEGIN 
         SET @nCTX_CREDIT  = @nVALOR 
         SET @nCTX_DEBITO  = 0 
      END 
      IF @cCT2_DTLP  = ' ' 
      BEGIN 
         SET @cCTX_LP  = 'N' 
         SET @cCTX_DTLP  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCTX_LP  = 'Z' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
      END 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ1020 
        WHERE CQ1_FILIAL  = @cFilial_CQ1  and CQ1_CONTA  = @cCONTA  and CQ1_MOEDA  = @cMOEDA  and CQ1_DATA  = @cDATA  and CQ1_TPSALD  = @cTPSALD 
         and CQ1_LP  = @cCTX_LP  and CQ1_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ1020 
         SET @iRecno  = @iRecno  + 1 
         SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ1020 (CQ1_FILIAL , CQ1_CONTA , CQ1_MOEDA , CQ1_DATA , CQ1_TPSALD , CQ1_SLBASE , CQ1_DTLP , CQ1_LP , 
                CQ1_STATUS , CQ1_DEBITO , CQ1_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ1 , @cCONTA , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         SET @nVALOR  = ROUND ( @nVALOR , 2 )
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_DEBITO  = CQ1_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ1020 
              WITH (ROWLOCK) 
               SET CQ1_CREDIT  = CQ1_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         Commit tran 
      END 
      EXEC LASTDAY_23_02 @cDATA , @cDataF output 
      SET @iRecno  = 0 
      SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
        FROM CQ0020 
        WHERE CQ0_FILIAL  = @cFilial_CQ0  and CQ0_DATA  = @cDataF  and CQ0_CONTA  = @cCONTA  and CQ0_MOEDA  = @cMOEDA  and CQ0_TPSALD  = @cTPSALD 
         and CQ0_LP  = @cCTX_LP  and CQ0_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
      IF @iRecno  = 0 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ0020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ0020 (CQ0_FILIAL , CQ0_CONTA , CQ0_MOEDA , CQ0_DATA , CQ0_TPSALD , CQ0_SLBASE , CQ0_DTLP , CQ0_LP , 
                CQ0_STATUS , CQ0_DEBITO , CQ0_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ0 , @cCONTA , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , 
                @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         Begin Tran 
         IF @cTIPO  = '1' 
         BEGIN 
            UPDATE CQ0020 
              WITH (ROWLOCK) 
               SET CQ0_DEBITO  = CQ0_DEBITO  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            UPDATE CQ0020 
              WITH (ROWLOCK) 
               SET CQ0_CREDIT  = CQ0_CREDIT  + @nVALOR 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         commit tran 
      END 
      FETCH CUR_CTB190 
       INTO @cFILCT2 , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
   END 
   CLOSE CUR_CTB190
   DEALLOCATE CUR_CTB190
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CT3
      DECLARE CUR_CT3 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' , CT2_TPSALD 
        FROM CT2030 CT2, CQA020 CQA
        WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CCD  != ' '  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' , CT2_TPSALD 
        FROM CT2030 CT2, CQA020 CQA
        WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CCC  != ' '  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 9 
      FOR READ ONLY 
       
      OPEN CUR_CT3
      FETCH CUR_CT3 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ2' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ2 output 
         SET @cAux  = 'CQ3' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ3 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
           WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_DATA  = @cDATA  and CQ3_CONTA  = @cCONTA  and CQ3_CCUSTO  = @cCUSTO 
            and CQ3_MOEDA  = @cMOEDA  and CQ3_TPSALD  = @cTPSALD  and CQ3_LP  = @cCTX_LP  and CQ3_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ3020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                   CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ3 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_DEBITO  = CQ3_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ3020 
                 WITH (ROWLOCK) 
                  SET CQ3_CREDIT  = CQ3_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
           WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_DATA  = @cDataF  and CQ2_CONTA  = @cCONTA  and CQ2_CCUSTO  = @cCUSTO 
            and CQ2_MOEDA  = @cMOEDA  and CQ2_TPSALD  = @cTPSALD  and CQ2_LP  = @cCTX_LP  and CQ2_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ2020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                   CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ2 , @cCONTA , @cCUSTO , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET CQ2_DEBITO  = CQ2_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ2020 
                 WITH (ROWLOCK) 
                  SET CQ2_CREDIT  = CQ2_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCUSTO  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @cTPSALD  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTT' , @cCUSTO , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_CREDIT  = CQ9_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCUSTO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @cTPSALD  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTT' , @cCUSTO , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_DEBITO  = CQ8_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_CREDIT  = CQ8_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         FETCH CUR_CT3 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      END 
      CLOSE CUR_CT3
      DEALLOCATE CUR_CT3
   END 
   IF @IN_LITEM  = '1'  or @IN_LCLVL  = '1' 
   BEGIN 
      EXEC CTB195_23_02 @RecMin , @RecMax , @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @OUT_RESULTADO output 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB195_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB195_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB195_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB195_23_01]
(
    @IN_RECMIN Integer , 
    @IN_RECMAX Integer , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @RecMin Integer
DECLARE @RecMax Integer
DECLARE @cTPSALD Char( 1)
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @RecMin  = @IN_RECMIN 
   SET @RecMax  = @IN_RECMAX 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' , CT2_TPSALD 
        FROM CT2010 CT2, CQA010 CQA
        WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' '  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' , CT2_TPSALD 
        FROM CT2010 CT2, CQA010 CQA
        WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' '  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 10 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @cTPSALD  and CQ5_LP  = @cCTX_LP  and CQ5_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = CQ5_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_CREDIT  = CQ5_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
           WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  = @cDataF  and CQ4_CONTA  = @cCONTA  and CQ4_CCUSTO  = @cCUSTO 
            and CQ4_ITEM  = @cITEM  and CQ4_MOEDA  = @cMOEDA  and CQ4_TPSALD  = @cTPSALD  and CQ4_LP  = @cCTX_LP  and CQ4_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ4010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                   CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET CQ4_DEBITO  = CQ4_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ4010 
                 WITH (ROWLOCK) 
                  SET CQ4_CREDIT  = CQ4_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @cTPSALD  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTD' , @cITEM , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_CREDIT  = CQ9_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cITEM  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @cTPSALD  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTD' , @cITEM , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_DEBITO  = CQ8_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_CREDIT  = CQ8_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' , CT2_TPSALD 
        FROM CT2010 CT2, CQA010 CQA
        WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' '  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' , CT2_TPSALD 
        FROM CT2010 CT2, CQA010 CQA
        WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' '  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 11 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_23_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @cTPSALD  and CQ7_LP  = @cCTX_LP 
            and CQ7_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = CQ7_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_CREDIT  = CQ7_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
           WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  = @cDataF  and CQ6_CONTA  = @cCONTA  and CQ6_CCUSTO  = @cCUSTO 
            and CQ6_ITEM  = @cITEM  and CQ6_CLVL  = @cCLVL  and CQ6_MOEDA  = @cMOEDA  and CQ6_TPSALD  = @cTPSALD  and CQ6_LP  = @cCTX_LP 
            and CQ6_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET CQ6_DEBITO  = CQ6_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ6010 
                 WITH (ROWLOCK) 
                  SET CQ6_CREDIT  = CQ6_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @cTPSALD  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTH' , @cCLVL , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET CQ9_CREDIT  = CQ9_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @cCLVL  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @cTPSALD  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTH' , @cCLVL , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_DEBITO  = CQ8_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET CQ8_CREDIT  = CQ8_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB195_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB195_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB195_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB195_23_02]
(
    @IN_RECMIN Integer , 
    @IN_RECMAX Integer , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @RecMin Integer
DECLARE @RecMax Integer
DECLARE @cTPSALD Char( 1)
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @RecMin  = @IN_RECMIN 
   SET @RecMax  = @IN_RECMAX 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' , CT2_TPSALD 
        FROM CT2030 CT2, CQA020 CQA
        WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' '  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' , CT2_TPSALD 
        FROM CT2030 CT2, CQA020 CQA
        WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' '  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 10 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @cTPSALD  and CQ5_LP  = @cCTX_LP  and CQ5_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = CQ5_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_CREDIT  = CQ5_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
           WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  = @cDataF  and CQ4_CONTA  = @cCONTA  and CQ4_CCUSTO  = @cCUSTO 
            and CQ4_ITEM  = @cITEM  and CQ4_MOEDA  = @cMOEDA  and CQ4_TPSALD  = @cTPSALD  and CQ4_LP  = @cCTX_LP  and CQ4_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ4020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                   CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET CQ4_DEBITO  = CQ4_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ4020 
                 WITH (ROWLOCK) 
                  SET CQ4_CREDIT  = CQ4_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @cTPSALD  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTD' , @cITEM , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_CREDIT  = CQ9_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cITEM  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @cTPSALD  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTD' , @cITEM , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_DEBITO  = CQ8_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_CREDIT  = CQ8_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' , CT2_TPSALD 
        FROM CT2030 CT2, CQA020 CQA
        WHERE  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' '  and CT2_DEBITO  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' , CT2_TPSALD 
        FROM CT2030 CT2, CQA020 CQA
        WHERE  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' '  and CT2_CREDIT  != ' '  and CQA.D_E_L_E_T_  = ' ' 
         and CT2.D_E_L_E_T_  = ' '  and CT2_FILIAL  = CQA_FILCT2  and CT2_DATA  = CQA_DATA  and CT2_LOTE  = CQA_LOTE  and CT2_SBLOTE  = CQA_SBLOTE 
         and CT2_DOC  = CQA_DOC  and CT2_LINHA  = CQA_LINHA  and CT2_TPSALD  = CQA_TPSALD  and CT2_EMPORI  = CQA_EMPORI  and CT2_FILORI  = CQA_FILORI 
         and CT2_MOEDLC  = CQA_MOEDLC  and CQA.R_E_C_N_O_  between @RecMin and @RecMax 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , CT2_TPSALD 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 11 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_23_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @cTPSALD  and CQ7_LP  = @cCTX_LP 
            and CQ7_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = CQ7_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_CREDIT  = CQ7_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
           WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  = @cDataF  and CQ6_CONTA  = @cCONTA  and CQ6_CCUSTO  = @cCUSTO 
            and CQ6_ITEM  = @cITEM  and CQ6_CLVL  = @cCLVL  and CQ6_MOEDA  = @cMOEDA  and CQ6_TPSALD  = @cTPSALD  and CQ6_LP  = @cCTX_LP 
            and CQ6_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET CQ6_DEBITO  = CQ6_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ6020 
                 WITH (ROWLOCK) 
                  SET CQ6_CREDIT  = CQ6_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @cTPSALD  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTH' , @cCLVL , @cMOEDA , @cDATA , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET CQ9_CREDIT  = CQ9_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         EXEC LASTDAY_23_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @cCLVL  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @cTPSALD  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTH' , @cCLVL , @cMOEDA , @cDataF , @cTPSALD , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_DEBITO  = CQ8_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET CQ8_CREDIT  = CQ8_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO , @cTPSALD 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB196_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB196_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB196_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB196_23_01]
(
    @IN_RECMIN Integer , 
    @IN_RECMAX Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
BEGIN
   SET @iMinRecno  = @IN_RECMIN 
   SET @iMaxRecno  = @IN_RECMAX 
   IF @iMinRecno  != 0 
   BEGIN 
      WHILE ( (@iMinRecno  <= @iMaxRecno ) )
      BEGIN
         Begin tran 
         UPDATE CQA010 
           WITH (ROWLOCK) 
            SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
          WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024 
         commit tran 
         SET @iMinRecno  = @iMinRecno  + 1024 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB196_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB196_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB196_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB196_23_02]
(
    @IN_RECMIN Integer , 
    @IN_RECMAX Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
BEGIN
   SET @iMinRecno  = @IN_RECMIN 
   SET @iMaxRecno  = @IN_RECMAX 
   IF @iMinRecno  != 0 
   BEGIN 
      WHILE ( (@iMinRecno  <= @iMaxRecno ) )
      BEGIN
         Begin tran 
         UPDATE CQA020 
           WITH (ROWLOCK) 
            SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
          WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + 1024 
         commit tran 
         SET @iMinRecno  = @iMinRecno  + 1024 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB230_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB230_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB230_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB230_01_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iTranCount Integer
DECLARE @lPrim Char( 01 )
DECLARE @cFilAnt Char( 2)
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @cMoedaAnt Char( 2)
DECLARE @cDtLPAnt Char( 8)
DECLARE @cDATACQ Char( 06 )
DECLARE @cDataAnt Char( 06 )
DECLARE @cLPAnt Char( 1)
DECLARE @cChaveCQAtu VarChar( 100 )
DECLARE @cChaveCQAnt VarChar( 100 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         EXEC LASTDAY_01_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nVALOR , 2 )
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = ROUND ( @nVALOR , 2 )
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ5010 
              WITH (ROWLOCK) 
               SET CQ5_DEBITO  = CQ5_DEBITO  + @nCTX_DEBITO , CQ5_CREDIT  = CQ5_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ5' 
            EXEC CTB025_01_01 @cFilial_CQ5 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_CCUSTO , CQ5_CONTA , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , CQ5_LP , 
             SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , 
             CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = ROUND ( @nVALORDeb , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nVALORCred , 2 )
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
           WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_CONTA  = @cCONTA  and CQ4_CCUSTO  = @cCUSTO  and CQ4_ITEM  = @cITEM 
            and CQ4_MOEDA  = @cMOEDA  and CQ4_DATA  = @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ4010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                   CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ4 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            begin tran 
            UPDATE CQ4010 
              WITH (ROWLOCK) 
               SET CQ4_DTLP  = @cCTX_DTLP , CQ4_DEBITO  = CQ4_DEBITO  + @nCTX_DEBITO , CQ4_CREDIT  = CQ4_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_CLVLDB , CT2_ITEMD , CT2_CCD , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CLVLDB , CT2_ITEMD , CT2_CCD , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CLVLCR , CT2_ITEMC , CT2_CCC , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CLVLCR , CT2_ITEMC , CT2_CCC , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCLVL , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         EXEC LASTDAY_01_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nVALOR , 2 )
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = ROUND ( @nVALOR , 2 )
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_LP  = @cCTX_LP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ7010 
              WITH (ROWLOCK) 
               SET CQ7_DEBITO  = CQ7_DEBITO  + @nCTX_DEBITO , CQ7_CREDIT  = CQ7_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cTabela  = 'CQ7' 
            SET @cIdent  = ' ' 
            EXEC CTB025_01_01 @cFilial_CQ7 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         END 
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCLVL , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), CQ7_DTLP , 
             CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), 
             CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 9 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = ROUND ( @nVALORDeb , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nVALORCred , 2 )
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
           WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_CONTA  = @cCONTA  and CQ6_CCUSTO  = @cCUSTO  and CQ6_ITEM  = @cITEM 
            and CQ6_CLVL  = @cCLVL  and CQ6_MOEDA  = @cMOEDA  and CQ6_DATA  = @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_LP  = @cCTX_LP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ6 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            begin tran 
            UPDATE CQ6010 
              WITH (ROWLOCK) 
               SET CQ6_DTLP  = @cCTX_DTLP , CQ6_DEBITO  = CQ6_DEBITO  + @nCTX_DEBITO , CQ6_CREDIT  = CQ6_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , 
                @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB230_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB230_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB230_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB230_01_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_EMPANT Char( 02 ) , 
    @IN_FILANT Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iTranCount Integer
DECLARE @lPrim Char( 01 )
DECLARE @cFilAnt Char( 2)
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @cMoedaAnt Char( 2)
DECLARE @cDtLPAnt Char( 8)
DECLARE @cDATACQ Char( 06 )
DECLARE @cDataAnt Char( 06 )
DECLARE @cLPAnt Char( 1)
DECLARE @cChaveCQAtu VarChar( 100 )
DECLARE @cChaveCQAnt VarChar( 100 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         EXEC LASTDAY_01_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nVALOR , 2 )
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = ROUND ( @nVALOR , 2 )
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ5020 
              WITH (ROWLOCK) 
               SET CQ5_DEBITO  = CQ5_DEBITO  + @nCTX_DEBITO , CQ5_CREDIT  = CQ5_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ5' 
            EXEC CTB025_01_02 @cFilial_CQ5 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_CCUSTO , CQ5_CONTA , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , CQ5_LP , 
             SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , 
             CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = ROUND ( @nVALORDeb , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nVALORCred , 2 )
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
           WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_CONTA  = @cCONTA  and CQ4_CCUSTO  = @cCUSTO  and CQ4_ITEM  = @cITEM 
            and CQ4_MOEDA  = @cMOEDA  and CQ4_DATA  = @cDataF  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
           
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ4020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                   CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ4 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            begin tran 
            UPDATE CQ4020 
              WITH (ROWLOCK) 
               SET CQ4_DTLP  = @cCTX_DTLP , CQ4_DEBITO  = CQ4_DEBITO  + @nCTX_DEBITO , CQ4_CREDIT  = CQ4_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_CLVLDB , CT2_ITEMD , CT2_CCD , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CLVLDB , CT2_ITEMD , CT2_CCD , CT2_DEBITO , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CLVLCR , CT2_ITEMC , CT2_CCC , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CLVLCR , CT2_ITEMC , CT2_CCC , CT2_CREDIT , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCLVL , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         EXEC LASTDAY_01_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nVALOR , 2 )
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = ROUND ( @nVALOR , 2 )
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_LP  = @cCTX_LP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ7020 
              WITH (ROWLOCK) 
               SET CQ7_DEBITO  = CQ7_DEBITO  + @nCTX_DEBITO , CQ7_CREDIT  = CQ7_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cTabela  = 'CQ7' 
            SET @cIdent  = ' ' 
            EXEC CTB025_01_02 @cFilial_CQ7 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILANT , @OUT_RESULTADO output 
         END 
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCLVL , @cITEM , @cCUSTO , @cCONTA , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), CQ7_DTLP , 
             CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), 
             CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 9 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = ROUND ( @nVALORDeb , 2 )
         SET @nCTX_CREDIT  = ROUND ( @nVALORCred , 2 )
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
           WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_CONTA  = @cCONTA  and CQ6_CCUSTO  = @cCUSTO  and CQ6_ITEM  = @cITEM 
            and CQ6_CLVL  = @cCLVL  and CQ6_MOEDA  = @cMOEDA  and CQ6_DATA  = @cDataF  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_LP  = @cCTX_LP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ6 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            begin tran 
            UPDATE CQ6020 
              WITH (ROWLOCK) 
               SET CQ6_DTLP  = @cCTX_DTLP , CQ6_DEBITO  = CQ6_DEBITO  + @nCTX_DEBITO , CQ6_CREDIT  = CQ6_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , 
                @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB230_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB230_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB230_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB230_03_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         EXEC LASTDAY_03_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = @cCTX_LP  and CQ5_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = CQ5_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_CREDIT  = CQ5_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ5' 
            EXEC CTB025_03_01 @cFilial_CQ5 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , CQ5_LP , 
             SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , 
             CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
           WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  = @cDataF  and CQ4_CONTA  = @cCONTA  and CQ4_CCUSTO  = @cCUSTO 
            and CQ4_ITEM  = @cITEM  and CQ4_MOEDA  = @cMOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = @cCTX_LP  and CQ4_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Transaction 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ4010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                   CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ4 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ4010 
              WITH (ROWLOCK) 
               SET CQ4_DEBITO  = CQ4_DEBITO  + @nCTX_DEBITO , CQ4_CREDIT  = CQ4_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            Commit Transaction 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         EXEC LASTDAY_03_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_LP  = @cCTX_LP 
            and CQ7_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = CQ7_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_CREDIT  = CQ7_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cTabela  = 'CQ7' 
            SET @cIdent  = ' ' 
            EXEC CTB025_03_01 @cFilial_CQ7 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @OUT_RESULTADO output 
         END 
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), CQ7_DTLP , 
             CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), 
             CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ6010 
           WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  = @cDataF  and CQ6_CONTA  = @cCONTA  and CQ6_CCUSTO  = @cCUSTO 
            and CQ6_ITEM  = @cITEM  and CQ6_CLVL  = @cCLVL  and CQ6_MOEDA  = @cMOEDA  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_LP  = @cCTX_LP 
            and CQ6_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Transaction 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ6 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ6010 
              WITH (ROWLOCK) 
               SET CQ6_DEBITO  = CQ6_DEBITO  + @nCTX_DEBITO , CQ6_CREDIT  = CQ6_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            Commit Transaction 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB230_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB230_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB230_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB230_03_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         EXEC LASTDAY_03_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = @cCTX_LP  and CQ5_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = CQ5_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_CREDIT  = CQ5_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ5' 
            EXEC CTB025_03_02 @cFilial_CQ5 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @OUT_RESULTADO output 
         END 
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , CQ5_LP , 
             SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , SUBSTRING ( CQ5_DATA , 1 , 6 ), CQ5_DTLP , 
             CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
           WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  = @cDataF  and CQ4_CONTA  = @cCONTA  and CQ4_CCUSTO  = @cCUSTO 
            and CQ4_ITEM  = @cITEM  and CQ4_MOEDA  = @cMOEDA  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = @cCTX_LP  and CQ4_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Transaction 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ4020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                   CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ4 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ4020 
              WITH (ROWLOCK) 
               SET CQ4_DEBITO  = CQ4_DEBITO  + @nCTX_DEBITO , CQ4_CREDIT  = CQ4_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            Commit Transaction 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_DEBITO  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' ' 
         and CT2_TPSALD  = @IN_TPSALDO  and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE )  and CT2_CREDIT  != ' '  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         EXEC LASTDAY_03_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_LP  = @cCTX_LP 
            and CQ7_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = CQ7_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_CREDIT  = CQ7_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cTabela  = 'CQ7' 
            SET @cIdent  = ' ' 
            EXEC CTB025_03_02 @cFilial_CQ7 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @OUT_RESULTADO output 
         END 
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), CQ7_DTLP , 
             CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , SUBSTRING ( CQ7_DATA , 1 , 6 ), 
             CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ6020 
           WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  = @cDataF  and CQ6_CONTA  = @cCONTA  and CQ6_CCUSTO  = @cCUSTO 
            and CQ6_ITEM  = @cITEM  and CQ6_CLVL  = @cCLVL  and CQ6_MOEDA  = @cMOEDA  and CQ6_TPSALD  = @IN_TPSALDO  and CQ6_LP  = @cCTX_LP 
            and CQ6_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Transaction 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ6020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                   CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ6 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ6020 
              WITH (ROWLOCK) 
               SET CQ6_DEBITO  = CQ6_DEBITO  + @nCTX_DEBITO , CQ6_CREDIT  = CQ6_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            Commit Transaction 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB231_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB231_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB231_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB231_07_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @iMaxRec Integer
DECLARE @iMinRec Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cFilAnt Char( 2)
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @cMoedaAnt Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cDataAnt Char( 08 )
DECLARE @cDtLpAnt Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @lExec Char( 01 )
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_07_01 @cAux , @IN_FILIAL , @cFilial_CT2 output 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
      SET @cFilAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cItemAnt  = ' ' 
      SET @cMoedaAnt  = ' ' 
      SET @cDataAnt  = ' ' 
      SET @cDtLpAnt  = ' ' 
      SET @cAnoMes  = ' ' 
      SET @nDebMes  = 0 
      SET @nCrdMes  = 0 
      SET @lPrim  = '1' 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_DEBITO  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_CREDIT  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         EXEC LASTDAY_07_01 @cDATA , @cDataF output 
         IF @lPrim  = '1' 
         BEGIN 
            SET @cFilAnt  = @cFILCT2 
            SET @cContaAnt  = @cCONTA 
            SET @cCustoAnt  = @cCUSTO 
            SET @cItemAnt  = @cITEM 
            SET @cMoedaAnt  = @cMOEDA 
            SET @cDataAnt  = @cDATA 
            SET @cDtLpAnt  = @cCT2_DTLP 
            SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
            SET @lPrim  = '0' 
         END 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = @cCTX_LP  and CQ5_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = CQ5_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ5010 
                 WITH (ROWLOCK) 
                  SET CQ5_CREDIT  = CQ5_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ5' 
            EXEC CTB025_07_01 @cFilial_CQ5 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cCustoAnt  = @cCUSTO 
         SET @cItemAnt  = @cITEM 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
         IF @@fetch_status  = -   1 
         BEGIN 
            SET @cCONTA  = ' ' 
         END 
         IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cCustoAnt  = @cCUSTO  and @cItemAnt  = @cITEM  and @cMoedaAnt  = @cMOEDA 
            and @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
         BEGIN 
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cDtLpAnt  = ' ' 
            BEGIN 
               SET @cCTX_LP  = 'N' 
               SET @cCTX_DTLP  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @cCTX_LP  = 'Z' 
               SET @cCTX_DTLP  = @cDtLpAnt 
            END 
            EXEC LASTDAY_07_01 @cDataAnt , @cDataF output 
            SET @nDebMes  = ROUND ( @nDebMes , 2 )
            SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
              FROM CQ4010 
              WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  = @cDataF  and CQ4_CONTA  = @cContaAnt  and CQ4_CCUSTO  = @cCustoAnt 
               and CQ4_ITEM  = @cItemAnt  and CQ4_MOEDA  = @cMoedaAnt  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = @cCTX_LP 
               and CQ4_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
            IF @iRecno  = 0 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ4010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                      CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ4 , @cContaAnt , @cCustoAnt , @cItemAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , 
                      @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nDebMes , @nCrdMes , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            ELSE 
            BEGIN 
               Begin Tran 
               IF @cTIPO  = '1' 
               BEGIN 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = CQ4_DEBITO  + @nDebMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               IF @cTIPO  = '2' 
               BEGIN 
                  UPDATE CQ4010 
                    WITH (ROWLOCK) 
                     SET CQ4_CREDIT  = CQ4_CREDIT  + @nCrdMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               commit tran 
            END 
            SET @nDebMes  = 0 
            SET @nCrdMes  = 0 
            SET @lPrim  = '1' 
            IF @cCTX_DTLP  != ' ' 
            BEGIN 
               SET @cCLVL  = ' ' 
               SET @cIdent  = ' ' 
               SET @cTabela  = 'CQ4' 
               EXEC CTB025_07_01 @cFilial_CQ4 , @cTabela , @cIdent , @cContaAnt , @cCustoAnt , @cItemAnt , @cCLVL , @cCTX_DTLP , 
                      @cMoedaAnt , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
            END 
         END 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
      SET @cFilAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cItemAnt  = ' ' 
      SET @cClvlAnt  = ' ' 
      SET @cMoedaAnt  = ' ' 
      SET @cDataAnt  = ' ' 
      SET @cDtLpAnt  = ' ' 
      SET @cAnoMes  = ' ' 
      SET @nDebMes  = 0 
      SET @nCrdMes  = 0 
      SET @lPrim  = '1' 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' 
        FROM CT2010 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_DEBITO  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' 
        FROM CT2010 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_CREDIT  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_07_01 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         IF @lPrim  = '1' 
         BEGIN 
            SET @cFilAnt  = @cFILCT2 
            SET @cContaAnt  = @cCONTA 
            SET @cCustoAnt  = @cCUSTO 
            SET @cItemAnt  = @cITEM 
            SET @cClvlAnt  = @cCLVL 
            SET @cMoedaAnt  = @cMOEDA 
            SET @cDataAnt  = @cDATA 
            SET @cDtLpAnt  = @cCT2_DTLP 
            SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
            SET @lPrim  = '0' 
         END 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7010 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_LP  = @cCTX_LP 
            and CQ7_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7010 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = CQ7_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ7010 
                 WITH (ROWLOCK) 
                  SET CQ7_CREDIT  = CQ7_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cAux  = ' ' 
            SET @cTabela  = 'CQ7' 
            SET @cIdent  = ' ' 
            EXEC CTB025_07_01 @cFilial_CQ7 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cCustoAnt  = @cCUSTO 
         SET @cItemAnt  = @cITEM 
         SET @cClvlAnt  = @cCLVL 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
         IF @@fetch_status  = -   1 
         BEGIN 
            SET @cCONTA  = ' ' 
         END 
         IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cCustoAnt  = @cCUSTO  and @cItemAnt  = @cITEM  and @cClvlAnt  = @cCLVL 
            and @cMoedaAnt  = @cMOEDA  and @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
         BEGIN 
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cDtLpAnt  = ' ' 
            BEGIN 
               SET @cCTX_LP  = 'N' 
               SET @cCTX_DTLP  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @cCTX_LP  = 'Z' 
               SET @cCTX_DTLP  = @cDtLpAnt 
            END 
            EXEC LASTDAY_07_01 @cDataAnt , @cDataF output 
            SET @nDebMes  = ROUND ( @nDebMes , 2 )
            SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
              FROM CQ6010 
              WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  = @cDataF  and CQ6_CONTA  = @cContaAnt  and CQ6_CCUSTO  = @cCustoAnt 
               and CQ6_ITEM  = @cItemAnt  and CQ6_CLVL  = @cClvlAnt  and CQ6_MOEDA  = @cMoedaAnt  and CQ6_TPSALD  = @IN_TPSALDO 
               and CQ6_LP  = @cCTX_LP  and CQ6_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
            IF @iRecno  = 0 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ6010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ6010 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                      CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ6 , @cContaAnt , @cCustoAnt , @cItemAnt , @cClvlAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , 
                      @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nDebMes , @nCrdMes , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            ELSE 
            BEGIN 
               Begin Tran 
               IF @cTIPO  = '1' 
               BEGIN 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = CQ6_DEBITO  + @nDebMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               IF @cTIPO  = '2' 
               BEGIN 
                  UPDATE CQ6010 
                    WITH (ROWLOCK) 
                     SET CQ6_CREDIT  = CQ6_CREDIT  + @nCrdMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               commit tran 
            END 
            SET @nDebMes  = 0 
            SET @nCrdMes  = 0 
            SET @lPrim  = '1' 
            IF @cCTX_DTLP  != ' ' 
            BEGIN 
               SET @cTabela  = 'CQ6' 
               SET @cIdent  = ' ' 
               EXEC CTB025_07_01 @cFilial_CQ6 , @cTabela , @cIdent , @cContaAnt , @cCustoAnt , @cItemAnt , @cClvlAnt , @cCTX_DTLP , 
                      @cMoedaAnt , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
            END 
         END 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB231_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB231_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB231_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB231_07_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_CONTA Char( 20) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_EMPANT Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @iMaxRec Integer
DECLARE @iMinRec Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @nVALOR Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cFilAnt Char( 2)
DECLARE @cContaAnt Char( 20)
DECLARE @cCustoAnt Char( 9)
DECLARE @cItemAnt Char( 9)
DECLARE @cClvlAnt Char( 9)
DECLARE @cMoedaAnt Char( 2)
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cDataAnt Char( 08 )
DECLARE @cDtLpAnt Char( 08 )
DECLARE @cAnoMes Char( 06 )
DECLARE @lPrim Char( 01 )
DECLARE @lExec Char( 01 )
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_07_02 @cAux , @IN_FILIAL , @cFilial_CT2 output 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
      SET @cFilAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cItemAnt  = ' ' 
      SET @cMoedaAnt  = ' ' 
      SET @cDataAnt  = ' ' 
      SET @cDtLpAnt  = ' ' 
      SET @cAnoMes  = ' ' 
      SET @nDebMes  = 0 
      SET @nCrdMes  = 0 
      SET @lPrim  = '1' 
       
      -- Cursor declaration CUR_CT4
      DECLARE CUR_CT4 insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_ITEMD  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_DEBITO  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_ITEMC  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_CREDIT  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CT4
      FETCH CUR_CT4 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ4' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ4 output 
         SET @cAux  = 'CQ5' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ5 output 
         EXEC LASTDAY_07_02 @cDATA , @cDataF output 
         IF @lPrim  = '1' 
         BEGIN 
            SET @cFilAnt  = @cFILCT2 
            SET @cContaAnt  = @cCONTA 
            SET @cCustoAnt  = @cCUSTO 
            SET @cItemAnt  = @cITEM 
            SET @cMoedaAnt  = @cMOEDA 
            SET @cDataAnt  = @cDATA 
            SET @cDtLpAnt  = @cCT2_DTLP 
            SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
            SET @lPrim  = '0' 
         END 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
           WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_DATA  = @cDATA  and CQ5_CONTA  = @cCONTA  and CQ5_CCUSTO  = @cCUSTO 
            and CQ5_ITEM  = @cITEM  and CQ5_MOEDA  = @cMOEDA  and CQ5_TPSALD  = @IN_TPSALDO  and CQ5_LP  = @cCTX_LP  and CQ5_DTLP  = @cCTX_DTLP 
            and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ5020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                   CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ5 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , 
                   @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_DEBITO  = CQ5_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ5020 
                 WITH (ROWLOCK) 
                  SET CQ5_CREDIT  = CQ5_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cCLVL  = ' ' 
            SET @cIdent  = ' ' 
            SET @cTabela  = 'CQ5' 
            EXEC CTB025_07_02 @cFilial_CQ5 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cCustoAnt  = @cCUSTO 
         SET @cItemAnt  = @cITEM 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         FETCH CUR_CT4 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
         IF @@fetch_status  = -   1 
         BEGIN 
            SET @cCONTA  = ' ' 
         END 
         IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cCustoAnt  = @cCUSTO  and @cItemAnt  = @cITEM  and @cMoedaAnt  = @cMOEDA 
            and @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
         BEGIN 
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cDtLpAnt  = ' ' 
            BEGIN 
               SET @cCTX_LP  = 'N' 
               SET @cCTX_DTLP  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @cCTX_LP  = 'Z' 
               SET @cCTX_DTLP  = @cDtLpAnt 
            END 
            EXEC LASTDAY_07_02 @cDataAnt , @cDataF output 
            SET @nDebMes  = ROUND ( @nDebMes , 2 )
            SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
              FROM CQ4020 
              WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_DATA  = @cDataF  and CQ4_CONTA  = @cContaAnt  and CQ4_CCUSTO  = @cCustoAnt 
               and CQ4_ITEM  = @cItemAnt  and CQ4_MOEDA  = @cMoedaAnt  and CQ4_TPSALD  = @IN_TPSALDO  and CQ4_LP  = @cCTX_LP 
               and CQ4_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
            IF @iRecno  = 0 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ4020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                      CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ4 , @cContaAnt , @cCustoAnt , @cItemAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , 
                      @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nDebMes , @nCrdMes , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            ELSE 
            BEGIN 
               Begin Tran 
               IF @cTIPO  = '1' 
               BEGIN 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET CQ4_DEBITO  = CQ4_DEBITO  + @nDebMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               IF @cTIPO  = '2' 
               BEGIN 
                  UPDATE CQ4020 
                    WITH (ROWLOCK) 
                     SET CQ4_CREDIT  = CQ4_CREDIT  + @nCrdMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               commit tran 
            END 
            SET @nDebMes  = 0 
            SET @nCrdMes  = 0 
            SET @lPrim  = '1' 
            IF @cCTX_DTLP  != ' ' 
            BEGIN 
               SET @cCLVL  = ' ' 
               SET @cIdent  = ' ' 
               SET @cTabela  = 'CQ4' 
               EXEC CTB025_07_02 @cFilial_CQ4 , @cTabela , @cIdent , @cContaAnt , @cCustoAnt , @cItemAnt , @cCLVL , @cCTX_DTLP , 
                      @cMoedaAnt , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
            END 
         END 
      END 
      CLOSE CUR_CT4
      DEALLOCATE CUR_CT4
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
      SET @cFilAnt  = ' ' 
      SET @cContaAnt  = ' ' 
      SET @cCustoAnt  = ' ' 
      SET @cItemAnt  = ' ' 
      SET @cClvlAnt  = ' ' 
      SET @cMoedaAnt  = ' ' 
      SET @cDataAnt  = ' ' 
      SET @cDtLpAnt  = ' ' 
      SET @cAnoMes  = ' ' 
      SET @nDebMes  = 0 
      SET @nCrdMes  = 0 
      SET @lPrim  = '1' 
       
      -- Cursor declaration CUR_CTI
      DECLARE CUR_CTI insensitive  CURSOR FOR 
      SELECT CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '1' 
        FROM CT2030 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '1'  or CT2_DC  = '3' )  and CT2_CLVLDB  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_DEBITO  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_DEBITO , CT2_CCD , CT2_ITEMD , CT2_CLVLDB , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
      UNION 
      SELECT CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP , SUM(CT2_VALOR ), 
             '2' 
        FROM CT2030 
        WHERE CT2_FILIAL  = @cFilial_CT2  and  (CT2_DC  = '2'  or CT2_DC  = '3' )  and CT2_CLVLCR  != ' '  and CT2_TPSALD  = @IN_TPSALDO 
         and  ( (CT2_MOEDLC  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CT2_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and CT2_CREDIT  = @IN_CONTA  and D_E_L_E_T_  = ' ' 
        GROUP BY CT2_FILIAL , CT2_CREDIT , CT2_CCC , CT2_ITEMC , CT2_CLVLCR , CT2_MOEDLC , CT2_DATA , CT2_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 
      FOR READ ONLY 
       
      OPEN CUR_CTI
      FETCH CUR_CTI 
       INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ6' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         SET @cAux  = 'CQ7' 
         EXEC XFILIAL_07_02 @cAux , @cFILCT2 , @cFilial_CQ7 output 
         IF @lPrim  = '1' 
         BEGIN 
            SET @cFilAnt  = @cFILCT2 
            SET @cContaAnt  = @cCONTA 
            SET @cCustoAnt  = @cCUSTO 
            SET @cItemAnt  = @cITEM 
            SET @cClvlAnt  = @cCLVL 
            SET @cMoedaAnt  = @cMOEDA 
            SET @cDataAnt  = @cDATA 
            SET @cDtLpAnt  = @cCT2_DTLP 
            SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
            SET @lPrim  = '0' 
         END 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = ' ' 
         IF @cTIPO  = '1' 
         BEGIN 
            SET @nCTX_DEBITO  = @nVALOR 
            SET @nCTX_CREDIT  = 0 
         END 
         IF @cTIPO  = '2' 
         BEGIN 
            SET @nCTX_CREDIT  = @nVALOR 
            SET @nCTX_DEBITO  = 0 
         END 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ7020 
           WHERE CQ7_FILIAL  = @cFilial_CQ7  and CQ7_DATA  = @cDATA  and CQ7_CONTA  = @cCONTA  and CQ7_CCUSTO  = @cCUSTO 
            and CQ7_ITEM  = @cITEM  and CQ7_CLVL  = @cCLVL  and CQ7_MOEDA  = @cMOEDA  and CQ7_TPSALD  = @IN_TPSALDO  and CQ7_LP  = @cCTX_LP 
            and CQ7_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ7020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ7020 (CQ7_FILIAL , CQ7_CONTA , CQ7_CCUSTO , CQ7_ITEM , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_TPSALD , 
                   CQ7_SLBASE , CQ7_DTLP , CQ7_LP , CQ7_STATUS , CQ7_DEBITO , CQ7_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ7 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , 
                   @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nVALOR  = ROUND ( @nVALOR , 2 )
            Begin Tran 
            IF @cTIPO  = '1' 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_DEBITO  = CQ7_DEBITO  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               UPDATE CQ7020 
                 WITH (ROWLOCK) 
                  SET CQ7_CREDIT  = CQ7_CREDIT  + @nVALOR 
                WHERE R_E_C_N_O_  = @iRecno 
            END 
            commit tran 
         END 
         IF @cCT2_DTLP  != ' ' 
         BEGIN 
            SET @cAux  = ' ' 
            SET @cTabela  = 'CQ7' 
            SET @cIdent  = ' ' 
            EXEC CTB025_07_02 @cFilial_CQ7 , @cTabela , @cIdent , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cCT2_DTLP , @cMOEDA , 
                   @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
         END 
         SET @cFilAnt  = @cFILCT2 
         SET @cContaAnt  = @cCONTA 
         SET @cCustoAnt  = @cCUSTO 
         SET @cItemAnt  = @cITEM 
         SET @cClvlAnt  = @cCLVL 
         SET @cMoedaAnt  = @cMOEDA 
         SET @cDataAnt  = @cDATA 
         SET @cDtLpAnt  = @cCT2_DTLP 
         SET @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 )
         FETCH CUR_CTI 
          INTO @cFILCT2 , @cCONTA , @cCUSTO , @cITEM , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @nVALOR , @cTIPO 
         IF @@fetch_status  = -   1 
         BEGIN 
            SET @cCONTA  = ' ' 
         END 
         IF @cFilAnt  = @cFILCT2  and @cContaAnt  = @cCONTA  and @cCustoAnt  = @cCUSTO  and @cItemAnt  = @cITEM  and @cClvlAnt  = @cCLVL 
            and @cMoedaAnt  = @cMOEDA  and @cAnoMes  = SUBSTRING ( @cDATA , 1 , 6 ) and @cDtLpAnt  = @cCT2_DTLP 
         BEGIN 
            IF @cTIPO  = '1' 
            BEGIN 
               SET @nDebMes  = @nDebMes  + @nVALOR 
            END 
            IF @cTIPO  = '2' 
            BEGIN 
               SET @nCrdMes  = @nCrdMes  + @nVALOR 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cDtLpAnt  = ' ' 
            BEGIN 
               SET @cCTX_LP  = 'N' 
               SET @cCTX_DTLP  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @cCTX_LP  = 'Z' 
               SET @cCTX_DTLP  = @cDtLpAnt 
            END 
            EXEC LASTDAY_07_02 @cDataAnt , @cDataF output 
            SET @nDebMes  = ROUND ( @nDebMes , 2 )
            SET @nCrdMes  = ROUND ( @nCrdMes , 2 )
            SET @iRecno  = 0 
            SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
              FROM CQ6020 
              WHERE CQ6_FILIAL  = @cFilial_CQ6  and CQ6_DATA  = @cDataF  and CQ6_CONTA  = @cContaAnt  and CQ6_CCUSTO  = @cCustoAnt 
               and CQ6_ITEM  = @cItemAnt  and CQ6_CLVL  = @cClvlAnt  and CQ6_MOEDA  = @cMoedaAnt  and CQ6_TPSALD  = @IN_TPSALDO 
               and CQ6_LP  = @cCTX_LP  and CQ6_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
            IF @iRecno  = 0 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM CQ6020 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                
               INSERT INTO CQ6020 (CQ6_FILIAL , CQ6_CONTA , CQ6_CCUSTO , CQ6_ITEM , CQ6_CLVL , CQ6_MOEDA , CQ6_DATA , CQ6_TPSALD , 
                      CQ6_SLBASE , CQ6_DTLP , CQ6_LP , CQ6_STATUS , CQ6_DEBITO , CQ6_CREDIT , R_E_C_N_O_ ) 
               VALUES (@cFilial_CQ6 , @cContaAnt , @cCustoAnt , @cItemAnt , @cClvlAnt , @cMoedaAnt , @cDataF , @IN_TPSALDO , 
                      @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , @cCTX_STATUS , @nDebMes , @nCrdMes , @iRecno );
                
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            ELSE 
            BEGIN 
               Begin Tran 
               IF @cTIPO  = '1' 
               BEGIN 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET CQ6_DEBITO  = CQ6_DEBITO  + @nDebMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               IF @cTIPO  = '2' 
               BEGIN 
                  UPDATE CQ6020 
                    WITH (ROWLOCK) 
                     SET CQ6_CREDIT  = CQ6_CREDIT  + @nCrdMes 
                   WHERE R_E_C_N_O_  = @iRecno 
               END 
               commit tran 
            END 
            SET @nDebMes  = 0 
            SET @nCrdMes  = 0 
            SET @lPrim  = '1' 
            IF @cCTX_DTLP  != ' ' 
            BEGIN 
               SET @cTabela  = 'CQ6' 
               SET @cIdent  = ' ' 
               EXEC CTB025_07_02 @cFilial_CQ6 , @cTabela , @cIdent , @cContaAnt , @cCustoAnt , @cItemAnt , @cClvlAnt , @cCTX_DTLP , 
                      @cMoedaAnt , @IN_TPSALDO , @IN_EMPANT , @IN_FILIAL , @OUT_RESULTADO output 
            END 
         END 
      END 
      CLOSE CUR_CTI
      DEALLOCATE CUR_CTI
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB232_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB232_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB232_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB232_01_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @cCODIGO Char( 9)
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iTranCount Integer
DECLARE @cDATACQ Char( 06 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cIdent  = 'CTT' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), SUM(CQ3_CREDIT )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCUSTO 
            and CQ9_MOEDA  = @cMOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
            Commit Tran 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
      SET @cIdent  = 'CTT' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CTT
      DECLARE CUR_CTT insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_IDENT  = @cIdent  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF ) 
         and D_E_L_E_T_  = ' ' 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CTT
      FETCH CUR_CTT 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_DATA  = @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            Begin tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DTLP  = @cCTX_DTLP , CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CTT 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTT
      DEALLOCATE CUR_CTT
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cIdent  = 'CTD' 
      SET @iRecno  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP , SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
            Commit Tran 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
      SET @cIdent  = 'CTD' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTD
      DECLARE CUR_CTD insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_IDENT  = @cIdent  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF ) 
         and D_E_L_E_T_  = ' ' 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CTD
      FETCH CUR_CTD 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_DATA  = @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            begin tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DTLP  = @cCTX_DTLP , CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CTD 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTD
      DEALLOCATE CUR_CTD
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTH' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_LP , CQ7_DTLP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_LP , CQ7_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCTX_LP , @cCT2_DTLP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            begin tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCTX_LP , @cCT2_DTLP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
      SET @cIdent  = 'CTH' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTH
      DECLARE CUR_CTH insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_IDENT  = @cIdent  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and D_E_L_E_T_  = ' ' 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CTH
      FETCH CUR_CTH 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_DATA  = @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            begin tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DTLP  = @cCTX_DTLP , CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CTH 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTH
      DEALLOCATE CUR_CTH
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB232_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB232_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB232_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB232_01_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @cCODIGO Char( 9)
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iTranCount Integer
DECLARE @cDATACQ Char( 06 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cIdent  = 'CTT' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), SUM(CQ3_CREDIT )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCUSTO 
            and CQ9_MOEDA  = @cMOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
            Commit Tran 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
      SET @cIdent  = 'CTT' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CTT
      DECLARE CUR_CTT insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_IDENT  = @cIdent  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF ) 
         and D_E_L_E_T_  = ' ' 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CTT
      FETCH CUR_CTT 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_DATA  = @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            Begin tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DTLP  = @cCTX_DTLP , CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CTT 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCTX_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTT
      DEALLOCATE CUR_CTT
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cIdent  = 'CTD' 
      SET @iRecno  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP , SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
            Commit Tran 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
      SET @cIdent  = 'CTD' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTD
      DECLARE CUR_CTD insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_IDENT  = @cIdent  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF ) 
         and D_E_L_E_T_  = ' ' 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CTD
      FETCH CUR_CTD 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_DATA  = @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            begin tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DTLP  = @cCTX_DTLP , CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CTD 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTD
      DEALLOCATE CUR_CTD
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTH' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_LP , CQ7_DTLP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_LP , CQ7_DTLP 
        ORDER BY 1 , 2 , 3 , 4 , 5 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCTX_LP , @cCT2_DTLP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            begin tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCTX_LP , @cCT2_DTLP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
      SET @cIdent  = 'CTH' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_01_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_01_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTH
      DECLARE CUR_CTH insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_IDENT  = @cIdent  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @IN_DATADE and @IN_DATAATE ) 
         and D_E_L_E_T_  = ' ' 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 7 
      FOR READ ONLY 
       
      OPEN CUR_CTH
      FETCH CUR_CTH 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_01_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = @cDATACQ  + '01' 
         EXEC LASTDAY_01_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         SET @cCTX_DTLP  = @cCT2_DTLP 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_DATA  = @cDataF  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and D_E_L_E_T_  = ' ' 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            begin tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DTLP  = @cCTX_DTLP , CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
              
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CTH 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATACQ , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTH
      DEALLOCATE CUR_CTH
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB232_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB232_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB232_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB232_03_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @cCODIGO Char( 9)
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTT' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), SUM(CQ3_CREDIT )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         EXEC LASTDAY_03_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCUSTO 
            and CQ9_MOEDA  = @cMOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
      SET @iNroRegs  = 0 
      SET @cIdent  = 'CTT' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTT
      DECLARE CUR_CTT insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
         and CQ9_IDENT  = @cIdent 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CTT
      FETCH CUR_CTT 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO 
            and CQ8_MOEDA  = @cMOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CTT 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTT
      DEALLOCATE CUR_CTT
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTD' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP , SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         EXEC LASTDAY_03_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
      SET @iNroRegs  = 0 
      SET @cIdent  = 'CTD' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTD
      DECLARE CUR_CTD insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
         and CQ9_IDENT  = @cIdent 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CTD
      FETCH CUR_CTD 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO 
            and CQ8_MOEDA  = @cMOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CTD 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTD
      DEALLOCATE CUR_CTD
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTH' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         EXEC LASTDAY_03_01 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
      SET @iNroRegs  = 0 
      SET @cIdent  = 'CTH' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_01 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_01 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTH
      DECLARE CUR_CTH insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
         and CQ9_IDENT  = @cIdent 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CTH
      FETCH CUR_CTH 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         EXEC XFILIAL_03_01 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_01 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO 
            and CQ8_MOEDA  = @cMOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CTH 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTH
      DEALLOCATE CUR_CTH
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB232_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB232_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB232_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB232_03_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_FILIALATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT2 Char( 2)
DECLARE @cCT2FilDe Char( 2)
DECLARE @cFILCT2 Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ6 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @nDebMes Float
DECLARE @nCrdMes Float
DECLARE @cTabela Char( 03 )
DECLARE @iRecno Integer
DECLARE @nCTX_DEBITO Float
DECLARE @nCTX_CREDIT Float
DECLARE @cCTX_DTLP Char( 08 )
DECLARE @cCTX_LP Char( 1)
DECLARE @cCTX_STATUS Char( 1)
DECLARE @cCTX_SLBASE Char( 1)
DECLARE @cCT2_DTLP Char( 08 )
DECLARE @cTIPO Char( 01 )
DECLARE @cDATA Char( 08 )
DECLARE @cCONTA Char( 20)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @cCODIGO Char( 9)
DECLARE @nVALORDeb Float
DECLARE @nVALORCred Float
DECLARE @cIdent VarChar( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
   IF @IN_FILIAL  = ' ' 
   BEGIN 
      SET @cCT2FilDe  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cCT2FilDe  = @IN_FILIAL 
   END 
   SET @cAux  = 'CT2' 
   EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTT' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), SUM(CQ3_CREDIT )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ3_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         EXEC LASTDAY_03_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCUSTO 
            and CQ9_MOEDA  = @cMOEDA  and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCT2 , @cCUSTO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
      SET @iNroRegs  = 0 
      SET @cIdent  = 'CTT' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTT
      DECLARE CUR_CTT insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
         and CQ9_IDENT  = @cIdent 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CTT
      FETCH CUR_CTT 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO 
            and CQ8_MOEDA  = @cMOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CTT 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTT
      DEALLOCATE CUR_CTT
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTD' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP , SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ5_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         EXEC LASTDAY_03_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCT2 , @cITEM , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
      SET @iNroRegs  = 0 
      SET @cIdent  = 'CTD' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTD
      DECLARE CUR_CTD insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
         and CQ9_IDENT  = @cIdent 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CTD
      FETCH CUR_CTD 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO 
            and CQ8_MOEDA  = @cMOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CTD 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTD
      DEALLOCATE CUR_CTD
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @iNroRegs  = 0 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      SET @cIdent  = 'CTH' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      SET @iRecno  = 0 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ7_DATA  between @IN_DATADE and @IN_DATAATE )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ9 output 
         EXEC LASTDAY_03_02 @cDATA , @cDataF output 
         SET @nCTX_DEBITO  = 0 
         SET @nCTX_CREDIT  = 0 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = @cIdent  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCTX_LP  and CQ9_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , @cIdent , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nVALORDeb , CQ9_CREDIT  = CQ9_CREDIT  + @nVALORCred 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCT2 , @cCLVL , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
      SET @iNroRegs  = 0 
      SET @cIdent  = 'CTH' 
      SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
      EXEC LASTDAY_03_02 @IN_DATAATE , @cDataF output 
      IF @IN_FILIAL  = ' ' 
      BEGIN 
         SET @cCT2FilDe  = ' ' 
      END 
      ELSE 
      BEGIN 
         SET @cCT2FilDe  = @IN_FILIAL 
      END 
      SET @cAux  = 'CT2' 
      EXEC XFILIAL_03_02 @cAux , @cCT2FilDe , @cFilial_CT2 output 
       
      -- Cursor declaration CUR_CTH
      DECLARE CUR_CTH insensitive  CURSOR FOR 
      SELECT CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP , SUM(CQ9_DEBITO ), 
             SUM(CQ9_CREDIT )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CT2 and @IN_FILIALATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
         and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' )  and  (CQ9_DATA  between @cDataI and @cDataF )  and D_E_L_E_T_  = ' ' 
         and CQ9_IDENT  = @cIdent 
        GROUP BY CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , SUBSTRING ( CQ9_DATA , 1 , 6 ), CQ9_DTLP , CQ9_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CTH
      FETCH CUR_CTH 
       INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @iNroRegs  = @iNroRegs  + 1 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ6 output 
         EXEC XFILIAL_03_02 @cAux , @cFILCT2 , @cFilial_CQ8 output 
         SET @cDataI  = SUBSTRING ( @cDATA , 1 , 6 ) + '01' 
         EXEC LASTDAY_03_02 @cDataI , @cDataF output 
         SET @nCTX_DEBITO  = @nVALORDeb 
         SET @nCTX_CREDIT  = @nVALORCred 
         SET @cCTX_STATUS  = '1' 
         SET @cCTX_SLBASE  = 'S' 
         IF @cCT2_DTLP  = ' ' 
         BEGIN 
            SET @cCTX_LP  = 'N' 
            SET @cCTX_DTLP  = ' ' 
         END 
         ELSE 
         BEGIN 
            SET @cCTX_LP  = 'Z' 
            SET @cCTX_DTLP  = @cCT2_DTLP 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = @cIdent  and CQ8_CODIGO  = @cCODIGO 
            and CQ8_MOEDA  = @cMOEDA  and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCTX_LP  and CQ8_DTLP  = @cCTX_DTLP  and D_E_L_E_T_  = ' ' 
           
         IF @iNroRegs  = 1 
         BEGIN 
            Begin Tran 
            SET @iNroRegs  = @iNroRegs 
         END 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , @cIdent , @cCODIGO , @cMOEDA , @cDataF , @IN_TPSALDO , @cCTX_SLBASE , @cCTX_DTLP , @cCTX_LP , 
                   @cCTX_STATUS , @nCTX_DEBITO , @nCTX_CREDIT , @iRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            SET @nCTX_DEBITO  = ROUND ( @nCTX_DEBITO , 2 )
            SET @nCTX_CREDIT  = ROUND ( @nCTX_CREDIT , 2 )
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nCTX_DEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCTX_CREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @iNroRegs  >= 1024 
         BEGIN 
            commit tran 
            SET @iNroRegs  = 0 
         END 
         FETCH CUR_CTH 
          INTO @cFILCT2 , @cIdent , @cCODIGO , @cMOEDA , @cDATA , @cCT2_DTLP , @cCTX_LP , @nVALORDeb , @nVALORCred 
      END 
      CLOSE CUR_CTH
      DEALLOCATE CUR_CTH
      IF @iNroRegs  > 0 
      BEGIN 
          Commit Transaction  
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB233_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB233_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB233_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB233_06_01]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_SINAL Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_VALOR Float , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CTC Char( 2)
DECLARE @iRecno Integer
DECLARE @iRecnoCTC Integer
DECLARE @nValor Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_INF Float
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cAux  = 'CTC' 
   EXEC XFILIAL_06_01 @cAux , @IN_FILIAL , @cFilial_CTC output 
   IF @IN_SINAL  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   ELSE 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR , 2 )
   END 
   SET @nCTC_DEBITOX  = 0 
   SET @nCTC_CREDITX  = 0 
   SET @nCTC_DIGX  = 0 
   SET @nCTC_DIG  = 0 
   SET @nCTC_DEBITO  = 0 
   SET @nCTC_CREDIT  = 0 
   SET @nCTC_INF  = 0 
   SELECT @iRecnoCTC  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
     FROM CTC010 
     WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @IN_DATA  and CTC_LOTE  = @IN_LOTE  and CTC_SBLOTE  = @IN_SBLOTE  and CTC_DOC  = @IN_DOC 
      and CTC_MOEDA  = @IN_MOEDA  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
   IF @iRecnoCTC  = 0 
   BEGIN 
      SELECT @iRecno  = MAX ( R_E_C_N_O_ )
        FROM CTC010 
      SET @iRecno  = @iRecno  + 1 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         SET @iRecno  = 1 
      END 
      IF @IN_DC IN ( '1' , '3'  ) 
      BEGIN 
         SET @nCTC_DEBITOX  = @nValor 
      END 
      IF @IN_DC IN ( '2' , '3'  ) 
      BEGIN 
         SET @nCTC_CREDITX  = @nValor 
      END 
      IF @IN_DC  = '3' 
      BEGIN 
         IF @IN_MVSOMA  = '1' 
         BEGIN 
            SET @nCTC_DIGX  = @nValor 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  =  (2  * @nValor ) 
         END 
      END 
      ELSE 
      BEGIN 
         SET @nCTC_DIGX  = @nValor 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
        FROM CTC010 
        WHERE R_E_C_N_O_  = @iRecnoCTC 
      IF @IN_DC  = '1' 
      BEGIN 
         SET @nCTC_DEBITOX  = @nCTC_DEBITO  + @nValor 
         SET @nCTC_CREDITX  = @nCTC_CREDIT 
      END 
      IF @IN_DC  = '2' 
      BEGIN 
         SET @nCTC_CREDITX  = @nCTC_CREDIT  + @nValor 
         SET @nCTC_DEBITOX  = @nCTC_DEBITO 
      END 
      IF @IN_DC  = '3' 
      BEGIN 
         SET @nCTC_DEBITOX  = @nCTC_DEBITO  + @nValor 
         SET @nCTC_CREDITX  = @nCTC_CREDIT  + @nValor 
         IF @IN_MVSOMA  = '1' 
         BEGIN 
            SET @nCTC_DIGX  = @nCTC_DIG  + @nValor 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = @nCTC_DIG  +  (2  * @nValor ) 
         END 
      END 
      ELSE 
      BEGIN 
         SET @nCTC_DIGX  = @nCTC_DIG  + @nValor 
      END 
   END 
   IF @iRecnoCTC  = 0 
   BEGIN 
      select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
       
      INSERT INTO CTC010 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
             CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
      VALUES (@cFilial_CTC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , '1' , @nCTC_DEBITOX , 
             @nCTC_CREDITX , @nCTC_DIGX , @iRecno );
       
      
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
   END 
   ELSE 
   BEGIN 
      begin Tran 
      UPDATE CTC010 
        WITH (ROWLOCK) 
         SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
       WHERE R_E_C_N_O_  = @iRecnoCTC 
      commit Tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB233_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB233_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB233_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB233_06_02]
(
    @IN_FILIAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 6) , 
    @IN_SBLOTE Char( 3) , 
    @IN_DOC Char( 6) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 01 ) , 
    @IN_DC Char( 01 ) , 
    @IN_SINAL Char( 01 ) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_VALOR Float , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CTC Char( 2)
DECLARE @iRecno Integer
DECLARE @iRecnoCTC Integer
DECLARE @nValor Float
DECLARE @nCTC_DEBITOX Float
DECLARE @nCTC_CREDITX Float
DECLARE @nCTC_DIGX Float
DECLARE @nCTC_DIG Float
DECLARE @nCTC_DEBITO Float
DECLARE @nCTC_CREDIT Float
DECLARE @nCTC_INF Float
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cAux  = 'CTC' 
   EXEC XFILIAL_06_02 @cAux , @IN_FILIAL , @cFilial_CTC output 
   IF @IN_SINAL  = '-' 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR  *  (-   1 ) , 2 )
   END 
   ELSE 
   BEGIN 
      SET @nValor  = ROUND ( @IN_VALOR , 2 )
   END 
   SET @nCTC_DEBITOX  = 0 
   SET @nCTC_CREDITX  = 0 
   SET @nCTC_DIGX  = 0 
   SET @nCTC_DIG  = 0 
   SET @nCTC_DEBITO  = 0 
   SET @nCTC_CREDIT  = 0 
   SET @nCTC_INF  = 0 
   SELECT @iRecnoCTC  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
     FROM CTC030 
     WHERE CTC_FILIAL  = @cFilial_CTC  and CTC_DATA  = @IN_DATA  and CTC_LOTE  = @IN_LOTE  and CTC_SBLOTE  = @IN_SBLOTE  and CTC_DOC  = @IN_DOC 
      and CTC_MOEDA  = @IN_MOEDA  and CTC_TPSALD  = @IN_TPSALDO  and D_E_L_E_T_  = ' ' 
   IF @iRecnoCTC  = 0 
   BEGIN 
      SELECT @iRecno  = MAX ( R_E_C_N_O_ )
        FROM CTC030 
      SET @iRecno  = @iRecno  + 1 
      IF  (@iRecno is null  or @iRecno  = 0 ) 
      BEGIN 
         SET @iRecno  = 1 
      END 
      IF @IN_DC IN ( '1' , '3'  ) 
      BEGIN 
         SET @nCTC_DEBITOX  = @nValor 
      END 
      IF @IN_DC IN ( '2' , '3'  ) 
      BEGIN 
         SET @nCTC_CREDITX  = @nValor 
      END 
      IF @IN_DC  = '3' 
      BEGIN 
         IF @IN_MVSOMA  = '1' 
         BEGIN 
            SET @nCTC_DIGX  = @nValor 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  =  (2  * @nValor ) 
         END 
      END 
      ELSE 
      BEGIN 
         SET @nCTC_DIGX  = @nValor 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @nCTC_DIG  = CTC_DIG , @nCTC_DEBITO  = CTC_DEBITO , @nCTC_CREDIT  = CTC_CREDIT , @nCTC_INF  = CTC_INF 
        FROM CTC030 
        WHERE R_E_C_N_O_  = @iRecnoCTC 
      IF @IN_DC  = '1' 
      BEGIN 
         SET @nCTC_DEBITOX  = @nCTC_DEBITO  + @nValor 
         SET @nCTC_CREDITX  = @nCTC_CREDIT 
      END 
      IF @IN_DC  = '2' 
      BEGIN 
         SET @nCTC_CREDITX  = @nCTC_CREDIT  + @nValor 
         SET @nCTC_DEBITOX  = @nCTC_DEBITO 
      END 
      IF @IN_DC  = '3' 
      BEGIN 
         SET @nCTC_DEBITOX  = @nCTC_DEBITO  + @nValor 
         SET @nCTC_CREDITX  = @nCTC_CREDIT  + @nValor 
         IF @IN_MVSOMA  = '1' 
         BEGIN 
            SET @nCTC_DIGX  = @nCTC_DIG  + @nValor 
         END 
         ELSE 
         BEGIN 
            SET @nCTC_DIGX  = @nCTC_DIG  +  (2  * @nValor ) 
         END 
      END 
      ELSE 
      BEGIN 
         SET @nCTC_DIGX  = @nCTC_DIG  + @nValor 
      END 
   END 
   IF @iRecnoCTC  = 0 
   BEGIN 
      select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
       
      INSERT INTO CTC030 (CTC_FILIAL , CTC_MOEDA , CTC_TPSALD , CTC_DATA , CTC_LOTE , CTC_SBLOTE , CTC_DOC , CTC_STATUS , 
             CTC_DEBITO , CTC_CREDIT , CTC_DIG , R_E_C_N_O_ ) 
      VALUES (@cFilial_CTC , @IN_MOEDA , @IN_TPSALDO , @IN_DATA , @IN_LOTE , @IN_SBLOTE , @IN_DOC , '1' , @nCTC_DEBITOX , 
             @nCTC_CREDITX , @nCTC_DIGX , @iRecno );
       
      
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
   END 
   ELSE 
   BEGIN 
      begin Tran 
      UPDATE CTC030 
        WITH (ROWLOCK) 
         SET CTC_DEBITO  = @nCTC_DEBITOX , CTC_CREDIT  = @nCTC_CREDITX , CTC_DIG  = @nCTC_DIGX 
       WHERE R_E_C_N_O_  = @iRecnoCTC 
      commit Tran 
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB240_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB240_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB240_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB240_07_01]
(
    @IN_FILDE Char( 2) , 
    @IN_FILATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_CONTADE Char( 20) , 
    @IN_CONTAATE Char( 20) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cResult Char( 01 )
DECLARE @cAlias Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cIdent Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cResult  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
   SET @cAlias  = 'CTC' 
   SET @cIdent  = ' ' 
   EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , @IN_INTEGRIDADE , 
          @IN_MVCTB190D , @cIdent , @cResult output 
   SET @cAlias  = 'CQ8' 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cIdent  = 'CTT' 
      EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cIdent  = 'CTD' 
      EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cIdent  = 'CTH' 
      EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   SET @cAlias  = 'CQ9' 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cIdent  = 'CTT' 
      EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cIdent  = 'CTD' 
      EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cIdent  = 'CTH' 
      EXEC CTB241_07_01 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   EXEC CTB023_07_01 @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_MVSOMA , 
          @cResult output 
   EXEC CTB242_07_01 @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_MVSOMA , 
          @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CONTADE , @IN_CONTAATE , @cResult output 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB240_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB240_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB240_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB240_07_02]
(
    @IN_FILDE Char( 2) , 
    @IN_FILATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_CONTADE Char( 20) , 
    @IN_CONTAATE Char( 20) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cResult Char( 01 )
DECLARE @cAlias Char( 03 )
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cIdent Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cResult  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
   SET @cAlias  = 'CTC' 
   SET @cIdent  = ' ' 
   EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , @IN_INTEGRIDADE , 
          @IN_MVCTB190D , @cIdent , @cResult output 
   SET @cAlias  = 'CQ8' 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cIdent  = 'CTT' 
      EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cIdent  = 'CTD' 
      EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cIdent  = 'CTH' 
      EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   SET @cAlias  = 'CQ9' 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cIdent  = 'CTT' 
      EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      SET @cIdent  = 'CTD' 
      EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      SET @cIdent  = 'CTH' 
      EXEC CTB241_07_02 @cAlias , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , 
             @IN_INTEGRIDADE , @IN_MVCTB190D , @cIdent , @cResult output 
   END 
   EXEC CTB023_07_02 @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_MVSOMA , 
          @cResult output 
   EXEC CTB242_07_02 @IN_FILDE , @IN_FILATE , @cDataI , @cDataF , @IN_LMOEDAESP , @IN_MOEDA , @IN_TPSALDO , @IN_MVSOMA , 
          @IN_LCUSTO , @IN_LITEM , @IN_LCLVL , @IN_CONTADE , @IN_CONTAATE , @cResult output 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB241_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB241_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB241_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB241_07_01]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILDE Char( 2) , 
    @IN_FILATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_IDENT Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iLinhas Integer
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @iLinhas  = 1024 
   SET @iMinRecno  = 0 
   SET @iMaxRecno  = 0 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILDE , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC010 
        WHERE CTC_FILIAL  between @cFilial_CTC and @IN_FILATE  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CTC010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CTC010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILDE , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8010 
        WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ8010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
                  DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ8010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILDE , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9010 
        WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ9010 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
                  DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ9010  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9010 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB241_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB241_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB241_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB241_07_02]
(
    @IN_CALIAS Char( 03 ) , 
    @IN_MOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_FILDE Char( 2) , 
    @IN_FILATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_INTEGRIDADE Char( 01 ) , 
    @IN_MVCTB190D Char( 01 ) , 
    @IN_IDENT Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @iMinRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iLinhas Integer
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CTC Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @iLinhas  = 1024 
   SET @iMinRecno  = 0 
   SET @iMaxRecno  = 0 
   IF  (@IN_CALIAS  = 'CTC' ) 
   BEGIN 
      SET @cAux  = 'CTC' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILDE , @cFilial_CTC output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CTC030 
        WHERE CTC_FILIAL  between @cFilial_CTC and @IN_FILATE  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO 
         and  ( (CTC_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CTC030 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
                  DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and D_E_L_E_T_  = '*' 
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CTC030  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                     and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CTC030 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CTC_FILIAL  between @cFilial_CTC and @IN_FILATE 
                  and CTC_DATA  between @IN_DATADE and @IN_DATAATE  and CTC_TPSALD  = @IN_TPSALDO  and  ( (CTC_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' ) 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ8' ) 
   BEGIN 
      SET @cAux  = 'CQ8' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILDE , @cFilial_CQ8 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ8020 
        WHERE CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO 
         and  ( (CQ8_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ8020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
                  DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ8020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                     and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ8020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ8_FILIAL  between @cFilial_CQ8 and @IN_FILATE 
                  and CQ8_DATA  between @IN_DATADE and @IN_DATAATE  and CQ8_TPSALD  = @IN_TPSALDO  and  ( (CQ8_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ8_IDENT  = @IN_IDENT 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   IF  (@IN_CALIAS  = 'CQ9' ) 
   BEGIN 
      SET @cAux  = 'CQ9' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILDE , @cFilial_CQ9 output 
      SELECT @iMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM CQ9020 
        WHERE CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO 
         and  ( (CQ9_MOEDA  = @IN_MOEDA  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
        
      IF @iMinRecno  != 0 
      BEGIN 
         WHILE ( (@iMinRecno  <= @iMaxRecno ) )
         BEGIN
            begin tran 
            IF @IN_MVCTB190D  = '1' 
            BEGIN 
               IF @IN_INTEGRIDADE  = '1' 
               BEGIN 
                  UPDATE CQ9020 
                    WITH (ROWLOCK) 
                     SET D_E_L_E_T_  = '*' 
                   WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
                  DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT  and D_E_L_E_T_  = '*' 
                    
               END 
               ELSE 
               BEGIN 
                  DELETE FROM CQ9020  WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                     and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                     and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
               END 
            END 
            ELSE 
            BEGIN 
               UPDATE CQ9020 
                 WITH (ROWLOCK) 
                  SET D_E_L_E_T_  = '*' , R_E_C_D_E_L_  = R_E_C_N_O_ 
                WHERE R_E_C_N_O_  between @iMinRecno and @iMinRecno  + @iLinhas  and CQ9_FILIAL  between @cFilial_CQ9 and @IN_FILATE 
                  and CQ9_DATA  between @IN_DATADE and @IN_DATAATE  and CQ9_TPSALD  = @IN_TPSALDO  and  ( (CQ9_MOEDA  = @IN_MOEDA 
                  and @IN_MOEDAESP  = '1' )  or @IN_MOEDAESP  = '0' )  and CQ9_IDENT  = @IN_IDENT 
            END 
            commit tran 
            SET @iMinRecno  = @iMinRecno  + @iLinhas 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB242_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB242_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB242_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB242_07_01]
(
    @IN_FILDE Char( 2) , 
    @IN_FILATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_CONTADE Char( 20) , 
    @IN_CONTAATE Char( 20) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCQX Char( 2)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @cDATA Char( 8)
DECLARE @cCQX_DTLP Char( 08 )
DECLARE @cCQX_LP Char( 01 )
DECLARE @cSLBASE Char( 01 )
DECLARE @cSTATUS Char( 01 )
DECLARE @nDEBITO Float
DECLARE @nCREDIT Float
DECLARE @iRecno Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
   SET @cSLBASE  = 'S' 
   SET @cSTATUS  = '1' 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILDE , @cFilial_CQ3 output 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), SUM(CQ3_CREDIT )
        FROM CQ3010 
        WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILATE  and CQ3_CONTA  between @IN_CONTADE and @IN_CONTAATE  and CQ3_DATA  between @cDataI and @cDataF 
         and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and D_E_L_E_T_  = ' ' 
        GROUP BY CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCQX , @cCUSTO , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_01 @cAux , @cFILCQX , @cFilial_CQ9 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_01 @cAux , @cFILCQX , @cFilial_CQ8 output 
         EXEC LASTDAY_07_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCUSTO  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCQX_LP  and CQ9_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTT' , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nDEBITO , CQ9_CREDIT  = CQ9_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCUSTO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCQX_LP  and CQ8_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTT' , @cCUSTO , @cMOEDA , @cDataF , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nDEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCQX , @cCUSTO , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILDE , @cFilial_CQ5 output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP , SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5010 
        WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILATE  and CQ5_CONTA  between @IN_CONTADE and @IN_CONTAATE  and CQ5_DATA  between @cDataI and @cDataF 
         and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and D_E_L_E_T_  = ' ' 
        GROUP BY CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCQX , @cITEM , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_01 @cAux , @cFILCQX , @cFilial_CQ9 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_01 @cAux , @cFILCQX , @cFilial_CQ8 output 
         EXEC LASTDAY_07_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCQX_LP  and CQ9_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTD' , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , @cSTATUS , 
                   @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nDEBITO , CQ9_CREDIT  = CQ9_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cITEM  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCQX_LP  and CQ8_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTD' , @cITEM , @cMOEDA , @cDataF , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nDEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCQX , @cITEM , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      EXEC LASTDAY_07_01 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_07_01 @cAux , @IN_FILDE , @cFilial_CQ7 output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7010 
        WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILATE  and CQ7_CONTA  between @IN_CONTADE and @IN_CONTAATE  and CQ7_DATA  between @cDataI and @cDataF 
         and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and D_E_L_E_T_  = ' ' 
        GROUP BY CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCQX , @cCLVL , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_01 @cAux , @cFILCQX , @cFilial_CQ9 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_01 @cAux , @cFILCQX , @cFilial_CQ8 output 
         EXEC LASTDAY_07_01 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCQX_LP  and CQ9_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTH' , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , @cSTATUS , 
                   @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ9010 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nDEBITO , CQ9_CREDIT  = CQ9_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @cCLVL  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCQX_LP  and CQ8_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8010 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTH' , @cCLVL , @cMOEDA , @cDataF , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ8010 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nDEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCQX , @cCLVL , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB242_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB242_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB242_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB242_07_02]
(
    @IN_FILDE Char( 2) , 
    @IN_FILATE Char( 2) , 
    @IN_DATADE Char( 08 ) , 
    @IN_DATAATE Char( 08 ) , 
    @IN_LMOEDAESP Char( 01 ) , 
    @IN_MOEDA Char( 2) , 
    @IN_TPSALDO Char( 1) , 
    @IN_MVSOMA Char( 01 ) , 
    @IN_LCUSTO Char( 01 ) , 
    @IN_LITEM Char( 01 ) , 
    @IN_LCLVL Char( 01 ) , 
    @IN_CONTADE Char( 20) , 
    @IN_CONTAATE Char( 20) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cDataI Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cAux Char( 03 )
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ7 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFILCQX Char( 2)
DECLARE @cCUSTO Char( 9)
DECLARE @cITEM Char( 9)
DECLARE @cCLVL Char( 9)
DECLARE @cMOEDA Char( 2)
DECLARE @cDATA Char( 8)
DECLARE @cCQX_DTLP Char( 08 )
DECLARE @cCQX_LP Char( 01 )
DECLARE @cSLBASE Char( 01 )
DECLARE @cSTATUS Char( 01 )
DECLARE @nDEBITO Float
DECLARE @nCREDIT Float
DECLARE @iRecno Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cDataI  = SUBSTRING ( @IN_DATADE , 1 , 6 ) + '01' 
   EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
   SET @cSLBASE  = 'S' 
   SET @cSTATUS  = '1' 
   IF @IN_LCUSTO  = '1' 
   BEGIN 
      SET @cAux  = 'CQ3' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILDE , @cFilial_CQ3 output 
       
      -- Cursor declaration CUR_CQ3
      DECLARE CUR_CQ3 insensitive  CURSOR FOR 
      SELECT CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP , SUM(CQ3_DEBITO ), SUM(CQ3_CREDIT )
        FROM CQ3020 
        WHERE CQ3_FILIAL  between @cFilial_CQ3 and @IN_FILATE  and CQ3_CONTA  between @IN_CONTADE and @IN_CONTAATE  and CQ3_DATA  between @cDataI and @cDataF 
         and CQ3_TPSALD  = @IN_TPSALDO  and  ( (CQ3_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and D_E_L_E_T_  = ' ' 
        GROUP BY CQ3_FILIAL , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_DTLP , CQ3_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 
      FOR READ ONLY 
       
      OPEN CUR_CQ3
      FETCH CUR_CQ3 
       INTO @cFILCQX , @cCUSTO , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_02 @cAux , @cFILCQX , @cFilial_CQ9 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_02 @cAux , @cFILCQX , @cFilial_CQ8 output 
         EXEC LASTDAY_07_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCUSTO  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCQX_LP  and CQ9_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTT' , @cCUSTO , @cMOEDA , @cDATA , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nDEBITO , CQ9_CREDIT  = CQ9_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCUSTO  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCQX_LP  and CQ8_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTT' , @cCUSTO , @cMOEDA , @cDataF , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nDEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ3 
          INTO @cFILCQX , @cCUSTO , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      END 
      CLOSE CUR_CQ3
      DEALLOCATE CUR_CQ3
   END 
   IF @IN_LITEM  = '1' 
   BEGIN 
      EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ5' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILDE , @cFilial_CQ5 output 
       
      -- Cursor declaration CUR_CQ5
      DECLARE CUR_CQ5 insensitive  CURSOR FOR 
      SELECT CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP , SUM(CQ5_DEBITO ), SUM(CQ5_CREDIT )
        FROM CQ5020 
        WHERE CQ5_FILIAL  between @cFilial_CQ5 and @IN_FILATE  and CQ5_CONTA  between @IN_CONTADE and @IN_CONTAATE  and CQ5_DATA  between @cDataI and @cDataF 
         and CQ5_TPSALD  = @IN_TPSALDO  and  ( (CQ5_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and D_E_L_E_T_  = ' ' 
        GROUP BY CQ5_FILIAL , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_DTLP , CQ5_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ5
      FETCH CUR_CQ5 
       INTO @cFILCQX , @cITEM , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_02 @cAux , @cFILCQX , @cFilial_CQ9 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_02 @cAux , @cFILCQX , @cFilial_CQ8 output 
         EXEC LASTDAY_07_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cITEM  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCQX_LP  and CQ9_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTD' , @cITEM , @cMOEDA , @cDATA , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , @cSTATUS , 
                   @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nDEBITO , CQ9_CREDIT  = CQ9_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cITEM  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCQX_LP  and CQ8_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTD' , @cITEM , @cMOEDA , @cDataF , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nDEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ5 
          INTO @cFILCQX , @cITEM , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      END 
      CLOSE CUR_CQ5
      DEALLOCATE CUR_CQ5
   END 
   IF @IN_LCLVL  = '1' 
   BEGIN 
      EXEC LASTDAY_07_02 @IN_DATAATE , @cDataF output 
      SET @cAux  = 'CQ7' 
      EXEC XFILIAL_07_02 @cAux , @IN_FILDE , @cFilial_CQ7 output 
       
      -- Cursor declaration CUR_CQ7
      DECLARE CUR_CQ7 insensitive  CURSOR FOR 
      SELECT CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP , SUM(CQ7_DEBITO ), SUM(CQ7_CREDIT )
        FROM CQ7020 
        WHERE CQ7_FILIAL  between @cFilial_CQ7 and @IN_FILATE  and CQ7_CONTA  between @IN_CONTADE and @IN_CONTAATE  and CQ7_DATA  between @cDataI and @cDataF 
         and CQ7_TPSALD  = @IN_TPSALDO  and  ( (CQ7_MOEDA  = @IN_MOEDA  and @IN_LMOEDAESP  = '1' )  or @IN_LMOEDAESP  = '0' 
        )  and D_E_L_E_T_  = ' ' 
        GROUP BY CQ7_FILIAL , CQ7_CLVL , CQ7_MOEDA , CQ7_DATA , CQ7_DTLP , CQ7_LP 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_CQ7
      FETCH CUR_CQ7 
       INTO @cFILCQX , @cCLVL , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @cAux  = 'CQ9' 
         EXEC XFILIAL_07_02 @cAux , @cFILCQX , @cFilial_CQ9 output 
         SET @cAux  = 'CQ8' 
         EXEC XFILIAL_07_02 @cAux , @cFILCQX , @cFilial_CQ8 output 
         EXEC LASTDAY_07_02 @cDATA , @cDataF output 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
           WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_DATA  = @cDATA  and CQ9_IDENT  = 'CTH'  and CQ9_CODIGO  = @cCLVL  and CQ9_MOEDA  = @cMOEDA 
            and CQ9_TPSALD  = @IN_TPSALDO  and CQ9_LP  = @cCQX_LP  and CQ9_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ9020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                   CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ9 , 'CTH' , @cCLVL , @cMOEDA , @cDATA , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , @cSTATUS , 
                   @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ9020 
              WITH (ROWLOCK) 
               SET CQ9_DEBITO  = CQ9_DEBITO  + @nDEBITO , CQ9_CREDIT  = CQ9_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
           WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_DATA  = @cDataF  and CQ8_IDENT  = 'CTH'  and CQ8_CODIGO  = @cCLVL  and CQ8_MOEDA  = @cMOEDA 
            and CQ8_TPSALD  = @IN_TPSALDO  and CQ8_LP  = @cCQX_LP  and CQ8_DTLP  = @cCQX_DTLP 
         IF @iRecno  = 0 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM CQ8020 
            SET @iRecno  = @iRecno  + 1 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
             
            INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                   CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
            VALUES (@cFilial_CQ8 , 'CTH' , @cCLVL , @cMOEDA , @cDataF , @IN_TPSALDO , @cSLBASE , @cCQX_DTLP , @cCQX_LP , 
                   @cSTATUS , @nDEBITO , @nCREDIT , @iRecno );
             
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            Begin Tran 
            UPDATE CQ8020 
              WITH (ROWLOCK) 
               SET CQ8_DEBITO  = CQ8_DEBITO  + @nDEBITO , CQ8_CREDIT  = CQ8_CREDIT  + @nCREDIT 
             WHERE R_E_C_N_O_  = @iRecno 
            commit tran 
         END 
         FETCH CUR_CQ7 
          INTO @cFILCQX , @cCLVL , @cMOEDA , @cDATA , @cCQX_DTLP , @cCQX_LP , @nDEBITO , @nCREDIT 
      END 
      CLOSE CUR_CQ7
      DEALLOCATE CUR_CQ7
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB245_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB245_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB245_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB245_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @nCQX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CQ4' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ4 output 
   SET @cAux  = 'CQ5' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ5 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   IF  (@IN_CT1  = '1' ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CONTA  = ' ' 
   END 
   IF  (@IN_CTT  = '1' ) 
   BEGIN 
      SET @cCTXX_CUSTO  = @IN_CV1_CTTINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CUSTO  = ' ' 
   END 
   SET @cCTXX_ITEM  = @IN_CV1_CTDINI 
   IF @cCTXX_CONTA  != ' ' 
   BEGIN 
      SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
        FROM CT1010 
        WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
   END 
   SET @cCTXX_CLVL  = ' ' 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ4_CREDIT , @nCQX_DEBITO  = CQ4_DEBITO 
     FROM CQ4010 
     WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_MOEDA  = @IN_CV1_MOEDA  and CQ4_TPSALD  = '0'  and CQ4_CONTA  = @cCTXX_CONTA 
      and CQ4_CCUSTO  = @cCTXX_CUSTO  and CQ4_ITEM  = @cCTXX_ITEM  and CQ4_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ4010 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , 
                @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ4010 
        WITH (ROWLOCK) 
         SET CQ4_DEBITO  = @nCTXX_DEBITO , CQ4_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCQX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ5_CREDIT , @nCQX_DEBITO  = CQ5_DEBITO 
     FROM CQ5010 
     WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5_TPSALD  = '0'  and CQ5_CONTA  = @cCTXX_CONTA 
      and CQ5_CCUSTO  = @cCTXX_CUSTO  and CQ5_ITEM  = @cCTXX_ITEM  and CQ5_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ5010 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , 
                @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ5010 
        WITH (ROWLOCK) 
         SET CQ5_DEBITO  = @nCTXX_DEBITO , CQ5_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   SET @iRecno  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ8_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ8_DEBITO , 
          0 )
     FROM CQ8010 CQ8
     WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cCTXX_ITEM 
      and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ8 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ8010 
        WITH (ROWLOCK) 
         SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @iRecno  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ9_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ9_DEBITO , 
          0 )
     FROM CQ9010 CQ9
     WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cCTXX_ITEM 
      and CQ9_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ9 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ9010 
        WITH (ROWLOCK) 
         SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB245_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB245_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB245_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB245_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTDINI Char( 9) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CTT Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CQ4 Char( 2)
DECLARE @cFilial_CQ5 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CTD Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecno Integer
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @cCTXX_CLVL Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @nCQX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CTD' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTD output 
   SET @cAux  = 'CQ4' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ4 output 
   SET @cAux  = 'CQ5' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ5 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cCTXX_NORMAL  = ' ' 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   IF  (@IN_CT1  = '1' ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CONTA  = ' ' 
   END 
   IF  (@IN_CTT  = '1' ) 
   BEGIN 
      SET @cCTXX_CUSTO  = @IN_CV1_CTTINI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CUSTO  = ' ' 
   END 
   SET @cCTXX_ITEM  = @IN_CV1_CTDINI 
   IF @cCTXX_CONTA  != ' ' 
   BEGIN 
      SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
        FROM CT1030 
        WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
   END 
   SET @cCTXX_CLVL  = ' ' 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ4_CREDIT , @nCQX_DEBITO  = CQ4_DEBITO 
     FROM CQ4020 
     WHERE CQ4_FILIAL  = @cFilial_CQ4  and CQ4_MOEDA  = @IN_CV1_MOEDA  and CQ4_TPSALD  = '0'  and CQ4_CONTA  = @cCTXX_CONTA 
      and CQ4_CCUSTO  = @cCTXX_CUSTO  and CQ4_ITEM  = @cCTXX_ITEM  and CQ4_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ4020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ4020 (CQ4_FILIAL , CQ4_CONTA , CQ4_CCUSTO , CQ4_ITEM , CQ4_MOEDA , CQ4_DATA , CQ4_TPSALD , CQ4_SLBASE , 
                CQ4_DTLP , CQ4_LP , CQ4_STATUS , CQ4_DEBITO , CQ4_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ4 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , 
                @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ4020 
        WITH (ROWLOCK) 
         SET CQ4_DEBITO  = @nCTXX_DEBITO , CQ4_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCQX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ5_CREDIT , @nCQX_DEBITO  = CQ5_DEBITO 
     FROM CQ5020 
     WHERE CQ5_FILIAL  = @cFilial_CQ5  and CQ5_MOEDA  = @IN_CV1_MOEDA  and CQ5_TPSALD  = '0'  and CQ5_CONTA  = @cCTXX_CONTA 
      and CQ5_CCUSTO  = @cCTXX_CUSTO  and CQ5_ITEM  = @cCTXX_ITEM  and CQ5_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ5020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ5020 (CQ5_FILIAL , CQ5_CONTA , CQ5_CCUSTO , CQ5_ITEM , CQ5_MOEDA , CQ5_DATA , CQ5_TPSALD , CQ5_SLBASE , 
                CQ5_DTLP , CQ5_LP , CQ5_STATUS , CQ5_DEBITO , CQ5_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ5 , @cCTXX_CONTA , @cCTXX_CUSTO , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , 
                @cDtLp , @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ5020 
        WITH (ROWLOCK) 
         SET CQ5_DEBITO  = @nCTXX_DEBITO , CQ5_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   SET @iRecno  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ8_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ8_DEBITO , 
          0 )
     FROM CQ8020 CQ8
     WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_IDENT  = 'CTD'  and CQ8_CODIGO  = @cCTXX_ITEM 
      and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ8 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ8020 
        WITH (ROWLOCK) 
         SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @iRecno  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ9_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ9_DEBITO , 
          0 )
     FROM CQ9020 CQ9
     WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_IDENT  = 'CTD'  and CQ9_CODIGO  = @cCTXX_ITEM 
      and CQ9_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH ) , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ9 , 'CTD' , @cCTXX_ITEM , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  + @IN_CV1_VALOR  * @IN_FATORCTH , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ9020 
        WITH (ROWLOCK) 
         SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB246_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB246_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB246_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB246_02_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @IN_FATORCTD Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @nCQX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @iRecno Integer
DECLARE @cTab Char( 03 )
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CQ2' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ2 output 
   SET @cAux  = 'CQ3' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ3 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_01 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_01 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   SET @cCTXX_ITEM  = ' ' 
   SET @cCTXX_NORMAL  = ' ' 
   IF  (@IN_CT1  = '1' ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CONTA  = ' ' 
   END 
   SET @cCTXX_CUSTO  = @IN_CV1_CTTINI 
   IF @cCTXX_CONTA  != ' ' 
   BEGIN 
      SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
        FROM CT1010 
        WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ3_CREDIT , @nCQX_DEBITO  = CQ3_DEBITO 
     FROM CQ3010 
     WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3_TPSALD  = '0'  and CQ3_CONTA  = @cCTXX_CONTA 
      and CQ3_CCUSTO  = @cCTXX_CUSTO  and CQ3_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ3010 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ3 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ3010 
        WITH (ROWLOCK) 
         SET CQ3_DEBITO  = @nCTXX_DEBITO , CQ3_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ2_CREDIT , @nCQX_DEBITO  = CQ2_DEBITO 
     FROM CQ2010 
     WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_MOEDA  = @IN_CV1_MOEDA  and CQ2_TPSALD  = '0'  and CQ2_CONTA  = @cCTXX_CONTA 
      and CQ2_CCUSTO  = @cCTXX_CUSTO  and CQ2_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ2010 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ2010 
        WITH (ROWLOCK) 
         SET CQ2_DEBITO  = @nCTXX_DEBITO , CQ2_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ8_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ8_DEBITO , 
          0 )
     FROM CQ8010 
     WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCTXX_CUSTO 
      and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8010 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ8 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ8010 
        WITH (ROWLOCK) 
         SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ9_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ9_DEBITO , 
          0 )
     FROM CQ9010 
     WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCTXX_CUSTO 
      and CQ9_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9010 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ9 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ9010 
        WITH (ROWLOCK) 
         SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[CTB246_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[CTB246_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[CTB246_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[CTB246_02_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CV1_CTTINI Char( 9) , 
    @IN_CV1_CT1INI Char( 20) , 
    @IN_CT1 Char( 01 ) , 
    @IN_CV1_MOEDA Char( 2) , 
    @IN_CV1_DTFIM Char( 8) , 
    @IN_CV1_VALOR Float , 
    @IN_COPERACAO Char( 01 ) , 
    @IN_FATORCTH Integer , 
    @IN_FATORCTD Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_CT1 Char( 2)
DECLARE @cFilial_CTT Char( 2)
DECLARE @cFilial_CQ2 Char( 2)
DECLARE @cFilial_CQ3 Char( 2)
DECLARE @cFilial_CQ8 Char( 2)
DECLARE @cFilial_CQ9 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @nCQX_CREDIT Float
DECLARE @nCQX_DEBITO Float
DECLARE @iRecno Integer
DECLARE @cTab Char( 03 )
DECLARE @cCTXX_CONTA Char( 20)
DECLARE @cCTXX_NORMAL Char( 1)
DECLARE @cCTXX_CUSTO Char( 9)
DECLARE @cCTXX_ITEM Char( 9)
DECLARE @nCTXX_DEBITO Float
DECLARE @nCTXX_CREDIT Float
DECLARE @cTpSaldo Char( 1)
DECLARE @cStatus Char( 1)
DECLARE @cSlBase Char( 1)
DECLARE @cDtLp Char( 08 )
DECLARE @cDataF Char( 08 )
DECLARE @cLp Char( 1)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'CT1' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CT1 output 
   SET @cAux  = 'CTT' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CTT output 
   SET @cAux  = 'CQ2' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ2 output 
   SET @cAux  = 'CQ3' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ3 output 
   SET @cAux  = 'CQ8' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ8 output 
   SET @cAux  = 'CQ9' 
   EXEC XFILIAL_02_02 @cAux , @IN_FILIALCOR , @cFilial_CQ9 output 
   EXEC LASTDAY_02_02 @IN_CV1_DTFIM , @cDataF output 
   SET @OUT_RESULTADO  = '0' 
   SET @cTpSaldo  = '0' 
   SET @cStatus  = '1' 
   SET @cSlBase  = 'S' 
   SET @cDtLp  = ' ' 
   SET @cLp  = 'N' 
   SET @cCTXX_ITEM  = ' ' 
   SET @cCTXX_NORMAL  = ' ' 
   IF  (@IN_CT1  = '1' ) 
   BEGIN 
      SET @cCTXX_CONTA  = @IN_CV1_CT1INI 
   END 
   ELSE 
   BEGIN 
      SET @cCTXX_CONTA  = ' ' 
   END 
   SET @cCTXX_CUSTO  = @IN_CV1_CTTINI 
   IF @cCTXX_CONTA  != ' ' 
   BEGIN 
      SELECT @cCTXX_NORMAL  = COALESCE ( CT1_NORMAL , ' ' )
        FROM CT1030 
        WHERE CT1_FILIAL  = @cFilial_CT1  and CT1_CONTA  = @cCTXX_CONTA  and D_E_L_E_T_  = ' ' 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ3_CREDIT , @nCQX_DEBITO  = CQ3_DEBITO 
     FROM CQ3020 
     WHERE CQ3_FILIAL  = @cFilial_CQ3  and CQ3_MOEDA  = @IN_CV1_MOEDA  and CQ3_TPSALD  = '0'  and CQ3_CONTA  = @cCTXX_CONTA 
      and CQ3_CCUSTO  = @cCTXX_CUSTO  and CQ3_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ3020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ3020 (CQ3_FILIAL , CQ3_CONTA , CQ3_CCUSTO , CQ3_MOEDA , CQ3_DATA , CQ3_TPSALD , CQ3_SLBASE , CQ3_DTLP , 
                CQ3_LP , CQ3_STATUS , CQ3_DEBITO , CQ3_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ3 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , 
                @cLp , @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ3020 
        WITH (ROWLOCK) 
         SET CQ3_DEBITO  = @nCTXX_DEBITO , CQ3_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = CQ2_CREDIT , @nCQX_DEBITO  = CQ2_DEBITO 
     FROM CQ2020 
     WHERE CQ2_FILIAL  = @cFilial_CQ2  and CQ2_MOEDA  = @IN_CV1_MOEDA  and CQ2_TPSALD  = '0'  and CQ2_CONTA  = @cCTXX_CONTA 
      and CQ2_CCUSTO  = @cCTXX_CUSTO  and CQ2_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ2020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ2020 (CQ2_FILIAL , CQ2_CONTA , CQ2_CCUSTO , CQ2_MOEDA , CQ2_DATA , CQ2_TPSALD , CQ2_SLBASE , CQ2_DTLP , 
                CQ2_LP , CQ2_STATUS , CQ2_DEBITO , CQ2_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ2 , @cCTXX_CONTA , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ2020 
        WITH (ROWLOCK) 
         SET CQ2_DEBITO  = @nCTXX_DEBITO , CQ2_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ8_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ8_DEBITO , 
          0 )
     FROM CQ8020 
     WHERE CQ8_FILIAL  = @cFilial_CQ8  and CQ8_MOEDA  = @IN_CV1_MOEDA  and CQ8_TPSALD  = '0'  and CQ8_IDENT  = 'CTT'  and CQ8_CODIGO  = @cCTXX_CUSTO 
      and CQ8_DATA  = @cDataF  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ8020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ8020 (CQ8_FILIAL , CQ8_IDENT , CQ8_CODIGO , CQ8_MOEDA , CQ8_DATA , CQ8_TPSALD , CQ8_SLBASE , CQ8_DTLP , 
                CQ8_LP , CQ8_STATUS , CQ8_DEBITO , CQ8_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ8 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @cDataF , @cTpSaldo , @cSlBase , @cDtLp , @cLp , @cStatus , 
                @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ8020 
        WITH (ROWLOCK) 
         SET CQ8_DEBITO  = @nCTXX_DEBITO , CQ8_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @nCTXX_DEBITO  = 0 
   SET @nCTXX_CREDIT  = 0 
   SET @nCQX_DEBITO  = 0 
   SET @nCQX_CREDIT  = 0 
   SET @iRecno  = 0 
   SELECT @iRecno  = COALESCE ( R_E_C_N_O_ , 0 ), @nCQX_CREDIT  = COALESCE ( CQ9_CREDIT , 0 ), @nCQX_DEBITO  = COALESCE ( CQ9_DEBITO , 
          0 )
     FROM CQ9020 
     WHERE CQ9_FILIAL  = @cFilial_CQ9  and CQ9_MOEDA  = @IN_CV1_MOEDA  and CQ9_TPSALD  = '0'  and CQ9_IDENT  = 'CTT'  and CQ9_CODIGO  = @cCTXX_CUSTO 
      and CQ9_DATA  = @IN_CV1_DTFIM  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is null  or @iRecno  = 0 ) 
   BEGIN 
      IF  (@IN_COPERACAO  = '1' ) 
      BEGIN 
         IF  (@IN_CT1  = '1' ) 
         BEGIN 
            IF  (@cCTXX_NORMAL  = '1' ) 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CV1_VALOR  < 0 ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               ELSE 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            ELSE 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
         END 
         SET @iRecno  = 0 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM CQ9020 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO CQ9020 (CQ9_FILIAL , CQ9_IDENT , CQ9_CODIGO , CQ9_MOEDA , CQ9_DATA , CQ9_TPSALD , CQ9_SLBASE , CQ9_DTLP , 
                CQ9_LP , CQ9_STATUS , CQ9_DEBITO , CQ9_CREDIT , R_E_C_N_O_ ) 
         VALUES (@cFilial_CQ9 , 'CTT' , @cCTXX_CUSTO , @IN_CV1_MOEDA , @IN_CV1_DTFIM , @cTpSaldo , @cSlBase , @cDtLp , @cLp , 
                @cStatus , @nCTXX_DEBITO , @nCTXX_CREDIT , @iRecno );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@IN_CT1  = '1' ) 
      BEGIN 
         IF  (@cCTXX_NORMAL  = '1' ) 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CV1_VALOR  < 0 ) 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 
                         2 )
               END 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
            END 
            ELSE 
            BEGIN 
               IF  (@IN_COPERACAO  = '1' ) 
               BEGIN 
                  SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  + @IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD , 2 )
               END 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_CV1_VALOR  < 0 ) 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT  +  (ABS ( @IN_CV1_VALOR ) * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
                 
            END 
            SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO , 2 )
         END 
         ELSE 
         BEGIN 
            IF  (@IN_COPERACAO  = '1' ) 
            BEGIN 
               SET @nCTXX_DEBITO  = ROUND ( @nCQX_DEBITO  +  (@IN_CV1_VALOR  * @IN_FATORCTH  * @IN_FATORCTD ) , 2 )
            END 
            SET @nCTXX_CREDIT  = ROUND ( @nCQX_CREDIT , 2 )
         END 
      END 
      begin tran 
      UPDATE CQ9020 
        WITH (ROWLOCK) 
         SET CQ9_DEBITO  = @nCTXX_DEBITO , CQ9_CREDIT  = @nCTXX_CREDIT 
       WHERE R_E_C_N_O_  = @iRecno 
      commit tran 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_A1_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_A1_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_A1_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_A1_09_01]
(
    @IN_MVPAR02 Char( 01 ) , 
    @cFilial_A1 Char( 2) , 
    @IN_CLIDE Char( 14) , 
    @IN_CLIATE Char( 14) , 
    @iprimeiro_recno Integer ) AS
 
-- Declaration of variables
BEGIN
   IF  (@IN_MVPAR02  = '1' ) 
   BEGIN 
      UPDATE SA1010 
        WITH (ROWLOCK) 
         SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 , A1_MSALDO  = 0 , A1_METR  = 0 
        , A1_MATR  = 0 , A1_MAIDUPL  = 0 , A1_ATR  = 0 , A1_PAGATR  = 0 , A1_NROPAG  = 0 , A1_ULTCOM  = ' ' , A1_MCOMPRA  = 0 
        , A1_NROCOM  = 0 
       WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
   ELSE 
   BEGIN 
      UPDATE SA1010 
        WITH (ROWLOCK) 
         SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 
       WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_A1_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_A1_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_A1_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_A1_09_02]
(
    @IN_MVPAR02 Char( 01 ) , 
    @cFilial_A1 Char( 2) , 
    @IN_CLIDE Char( 14) , 
    @IN_CLIATE Char( 14) , 
    @iprimeiro_recno Integer ) AS
 
-- Declaration of variables
BEGIN
   IF  (@IN_MVPAR02  = '1' ) 
   BEGIN 
      UPDATE SA1030 
        WITH (ROWLOCK) 
         SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 , A1_MSALDO  = 0 , A1_METR  = 0 
        , A1_MATR  = 0 , A1_MAIDUPL  = 0 , A1_ATR  = 0 , A1_PAGATR  = 0 , A1_NROPAG  = 0 , A1_ULTCOM  = ' ' , A1_MCOMPRA  = 0 
        , A1_NROCOM  = 0 
       WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
   ELSE 
   BEGIN 
      UPDATE SA1030 
        WITH (ROWLOCK) 
         SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 
       WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_A2_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_A2_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_A2_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_A2_09_01]
(
    @IN_MVPAR02 Char( 01 ) , 
    @cFilial_A2 Char( 2) , 
    @IN_FORDE Char( 14) , 
    @IN_FORATE Char( 14) , 
    @iprimeiro_recno Integer ) AS
 
-- Declaration of variables
BEGIN
   IF  (@IN_MVPAR02  = '1' ) 
   BEGIN 
      UPDATE SA2010 
        WITH (ROWLOCK) 
         SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 , A2_NROCOM  = 0 , A2_MSALDO  = 0 
       WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
   ELSE 
   BEGIN 
      UPDATE SA2010 
        WITH (ROWLOCK) 
         SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 
       WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_A2_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_A2_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_A2_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_A2_09_02]
(
    @IN_MVPAR02 Char( 01 ) , 
    @cFilial_A2 Char( 2) , 
    @IN_FORDE Char( 14) , 
    @IN_FORATE Char( 14) , 
    @iprimeiro_recno Integer ) AS
 
-- Declaration of variables
BEGIN
   IF  (@IN_MVPAR02  = '1' ) 
   BEGIN 
      UPDATE SA2030 
        WITH (ROWLOCK) 
         SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 , A2_NROCOM  = 0 , A2_MSALDO  = 0 
       WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
   ELSE 
   BEGIN 
      UPDATE SA2030 
        WITH (ROWLOCK) 
         SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 
       WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
         and D_E_L_E_T_  = ' ' 
   END 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_E1_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_E1_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_E1_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_E1_09_01]
(
    @cFilial_E1 Char( 2) , 
    @cFilial_A1 Char( 2) , 
    @IN_CLIDE Char( 14) , 
    @IN_CLIATE Char( 14) , 
    @OUT_RESULTADO Char( 1 )  output ) AS
 
-- Declaration of variables
BEGIN
    
   -- Cursor declaration curSE1
   DECLARE curSE1  CURSOR FOR 
   SELECT E1_VALOR , E1_SALDO , E1_VALLIQ , E1_VLCRUZ , E1_CLIENTE , E1_LOJA , E1_MOEDA , E1_EMISSAO , E1_TIPO , E1_VENCTO , 
          E1_VENCREA , E1_BAIXA , E1_PREFIXO , E1_NUM , E1_PARCELA , E1_ORIGEM , E1_FATURA , E1_MSFIL , E1_PEDIDO , E1_SERIE 
     FROM SE1010 SE1, SA1010 SA1
     WHERE SE1.E1_FILIAL  = @cFilial_E1  and SA1.A1_FILIAL  = @cFilial_A1  and SA1.A1_COD  between @IN_CLIDE and @IN_CLIATE 
      and SA1.A1_COD  = SE1.E1_CLIENTE  and SA1.A1_LOJA  = SE1.E1_LOJA  and SE1.D_E_L_E_T_  = ' '  and SA1.D_E_L_E_T_  = ' ' 
     
    
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_E1_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_E1_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_E1_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_E1_09_02]
(
    @cFilial_E1 Char( 2) , 
    @cFilial_A1 Char( 2) , 
    @IN_CLIDE Char( 14) , 
    @IN_CLIATE Char( 14) , 
    @OUT_RESULTADO Char( 1 )  output ) AS
 
-- Declaration of variables
BEGIN
    
   -- Cursor declaration curSE1
   DECLARE curSE1  CURSOR FOR 
   SELECT E1_VALOR , E1_SALDO , E1_VALLIQ , E1_VLCRUZ , E1_CLIENTE , E1_LOJA , E1_MOEDA , E1_EMISSAO , E1_TIPO , E1_VENCTO , 
          E1_VENCREA , E1_BAIXA , E1_PREFIXO , E1_NUM , E1_PARCELA , E1_ORIGEM , E1_FATURA , E1_MSFIL , E1_PEDIDO , E1_SERIE 
     FROM SE1030 SE1, SA1030 SA1
     WHERE SE1.E1_FILIAL  = @cFilial_E1  and SA1.A1_FILIAL  = @cFilial_A1  and SA1.A1_COD  between @IN_CLIDE and @IN_CLIATE 
      and SA1.A1_COD  = SE1.E1_CLIENTE  and SA1.A1_LOJA  = SE1.E1_LOJA  and SE1.D_E_L_E_T_  = ' '  and SA1.D_E_L_E_T_  = ' ' 
     
    
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_E2_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_E2_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_E2_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_E2_09_01]
(
    @cFilial_E2 Char( 2) , 
    @cFilial_A2 Char( 2) , 
    @IN_FORDE Char( 14) , 
    @IN_FORATE Char( 14) , 
    @OUT_RESULTADO Char( 1 )  output ) AS
 
-- Declaration of variables
BEGIN
    
   -- Cursor declaration curSE2
   DECLARE curSE2  CURSOR FOR 
   SELECT E2_FORNECE , E2_LOJA , E2_SALDO , E2_MOEDA , E2_EMISSAO , E2_TIPO , E2_ORIGEM , E2_NUM , E2_PREFIXO , E2_VALOR 
     FROM SE2010 SE2, SA2010 SA2
     WHERE SE2.E2_FILIAL  = @cFilial_E2  and SA2.A2_FILIAL  = @cFilial_A2  and SE2.E2_FORNECE  = SA2.A2_COD  and SE2.E2_LOJA  = SA2.A2_LOJA 
      and SA2.A2_COD  between @IN_FORDE and @IN_FORATE  and SE2.D_E_L_E_T_  = ' '  and SA2.D_E_L_E_T_  = ' ' 
    
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[F410SCFT_E2_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[F410SCFT_E2_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[F410SCFT_E2_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[F410SCFT_E2_09_02]
(
    @cFilial_E2 Char( 2) , 
    @cFilial_A2 Char( 2) , 
    @IN_FORDE Char( 14) , 
    @IN_FORATE Char( 14) , 
    @OUT_RESULTADO Char( 1 )  output ) AS
 
-- Declaration of variables
BEGIN
    
   -- Cursor declaration curSE2
   DECLARE curSE2  CURSOR FOR 
   SELECT E2_FORNECE , E2_LOJA , E2_SALDO , E2_MOEDA , E2_EMISSAO , E2_TIPO , E2_ORIGEM , E2_NUM , E2_PREFIXO , E2_VALOR 
     FROM SE2030 SE2, SA2030 SA2
     WHERE SE2.E2_FILIAL  = @cFilial_E2  and SA2.A2_FILIAL  = @cFilial_A2  and SE2.E2_FORNECE  = SA2.A2_COD  and SE2.E2_LOJA  = SA2.A2_LOJA 
      and SA2.A2_COD  between @IN_FORDE and @IN_FORATE  and SE2.D_E_L_E_T_  = ' '  and SA2.D_E_L_E_T_  = ' ' 
    
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[FIN001_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN001_08_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN001_08_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN001_08_01]
(
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 9) , 
    @IN_PARCELA Char( 1) , 
    @IN_CCART Char( 1) , 
    @IN_MOEDA Float , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFORNCLI Char( 14) , 
    @IN_LOJA Char( 4) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_TIPO Char( 3) , 
    @IN_BD Char( 01 ) , 
    @OUT_TOTABAT Float  output ) AS
 
-- Declaration of variables
DECLARE @E1_FILIAL Char( 2)
DECLARE @E2_FILIAL Char( 2)
DECLARE @ValorAbat Float
DECLARE @MoedaAbat Float
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SE1' 
   EXEC XFILIAL_08_01 @cAux , @IN_FILIALCOR , @E1_FILIAL output 
   SET @cAux  = 'SE2' 
   EXEC XFILIAL_08_01 @cAux , @IN_FILIALCOR , @E2_FILIAL output 
   SET @OUT_TOTABAT  = 0 
   SET @ValorAbat  = 0 
   IF @IN_CCART  = 'R' 
   BEGIN 
      IF @IN_BD  = '1' 
      BEGIN 
          
         -- Cursor declaration CUR_SUMABAT_A
         DECLARE CUR_SUMABAT_A  CURSOR FOR 
         SELECT E1_VALOR , E1_MOEDA 
           FROM SE1010 
           WHERE E1_FILIAL  = @E1_FILIAL  and E1_PREFIXO  = @IN_PREFIXO  and E1_NUM  = @IN_NUMERO  and E1_PARCELA  = @IN_PARCELA 
            and E1_TIPO LIKE '%-'  and  (E1_CLIENTE  = @IN_CFORNCLI  or E1_CLIENTE  = 'UNIAO ' )  and  (E1_LOJA  = @IN_LOJA 
            or E1_CLIENTE  = 'UNIAO ' )  and E1_EMISSAO  <= @IN_DATABASE  and  (E1_TITPAI  = @IN_PREFIXO  + @IN_NUMERO  + @IN_PARCELA  + @IN_TIPO  + @IN_CFORNCLI  + @IN_LOJA 
           )  and D_E_L_E_T_  <> '*' 
         FOR READ ONLY 
          
         OPEN CUR_SUMABAT_A
         FETCH CUR_SUMABAT_A 
          INTO @ValorAbat , @MoedaAbat 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            EXEC MAT021_08_01 @ValorAbat , @IN_DDATA , @MoedaAbat , @IN_MOEDA , @ValorAbat output 
            SET @OUT_TOTABAT  = @OUT_TOTABAT  + @ValorAbat 
            FETCH CUR_SUMABAT_A 
             INTO @ValorAbat , @MoedaAbat 
         END 
         CLOSE CUR_SUMABAT_A
         DEALLOCATE CUR_SUMABAT_A
      END 
      ELSE 
      BEGIN 
          
         -- Cursor declaration CUR_SUMABAT_C
         DECLARE CUR_SUMABAT_C  CURSOR FOR 
         SELECT E1_VALOR , E1_MOEDA 
           FROM SE1010 
           WHERE E1_FILIAL  = @E1_FILIAL  and E1_PREFIXO  = @IN_PREFIXO  and E1_NUM  = @IN_NUMERO  and E1_PARCELA  = @IN_PARCELA 
            and E1_TIPO LIKE '%-'  and  (E1_CLIENTE  = @IN_CFORNCLI  or E1_CLIENTE  = 'UNIAO ' )  and  (E1_LOJA  = @IN_LOJA 
            or E1_CLIENTE  = 'UNIAO ' )  and E1_EMISSAO  <= @IN_DATABASE  and  (RTRIM ( E1_TITPAI ) = RTRIM ( @IN_PREFIXO  + @IN_NUMERO  + @IN_PARCELA  + @IN_TIPO  + @IN_CFORNCLI  + @IN_LOJA 
           ))  and D_E_L_E_T_  <> '*' 
         FOR READ ONLY 
          
         OPEN CUR_SUMABAT_C
         FETCH CUR_SUMABAT_C 
          INTO @ValorAbat , @MoedaAbat 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            EXEC MAT021_08_01 @ValorAbat , @IN_DDATA , @MoedaAbat , @IN_MOEDA , @ValorAbat output 
            SET @OUT_TOTABAT  = @OUT_TOTABAT  + @ValorAbat 
            FETCH CUR_SUMABAT_C 
             INTO @ValorAbat , @MoedaAbat 
         END 
         CLOSE CUR_SUMABAT_C
         DEALLOCATE CUR_SUMABAT_C
      END 
   END 
   ELSE 
   BEGIN 
       
      -- Cursor declaration CUR_SUMABAT_B
      DECLARE CUR_SUMABAT_B  CURSOR FOR 
      SELECT E2_VALOR , E2_MOEDA 
        FROM SE2010 
        WHERE E2_FILIAL  = @E2_FILIAL  and E2_PREFIXO  = @IN_PREFIXO  and E2_NUM  = @IN_NUMERO  and E2_PARCELA  = @IN_PARCELA 
         and E2_TIPO LIKE '%-'  and E2_FORNECE  = @IN_CFORNCLI  and E2_LOJA  = @IN_LOJA  and E2_EMISSAO  <= @IN_DATABASE 
         and D_E_L_E_T_  <> '*' 
      FOR READ ONLY 
       
      OPEN CUR_SUMABAT_B
      FETCH CUR_SUMABAT_B 
       INTO @ValorAbat , @MoedaAbat 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         EXEC MAT021_08_01 @ValorAbat , @IN_DDATA , @MoedaAbat , @IN_MOEDA , @ValorAbat output 
         SET @OUT_TOTABAT  = @OUT_TOTABAT  + @ValorAbat 
         FETCH CUR_SUMABAT_B 
          INTO @ValorAbat , @MoedaAbat 
      END 
      CLOSE CUR_SUMABAT_B
      DEALLOCATE CUR_SUMABAT_B
   END 
   IF @OUT_TOTABAT is null 
   BEGIN 
      SET @OUT_TOTABAT  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN001_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN001_08_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN001_08_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN001_08_02]
(
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 8) , 
    @IN_PARCELA Char( 1) , 
    @IN_CCART Char( 1) , 
    @IN_MOEDA Float , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFORNCLI Char( 14) , 
    @IN_LOJA Char( 4) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_TIPO Char( 3) , 
    @IN_BD Char( 01 ) , 
    @OUT_TOTABAT Float  output ) AS
 
-- Declaration of variables
DECLARE @E1_FILIAL Char( 2)
DECLARE @E2_FILIAL Char( 2)
DECLARE @ValorAbat Float
DECLARE @MoedaAbat Float
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SE1' 
   EXEC XFILIAL_08_02 @cAux , @IN_FILIALCOR , @E1_FILIAL output 
   SET @cAux  = 'SE2' 
   EXEC XFILIAL_08_02 @cAux , @IN_FILIALCOR , @E2_FILIAL output 
   SET @OUT_TOTABAT  = 0 
   SET @ValorAbat  = 0 
   IF @IN_CCART  = 'R' 
   BEGIN 
      IF @IN_BD  = '1' 
      BEGIN 
          
         -- Cursor declaration CUR_SUMABAT_A
         DECLARE CUR_SUMABAT_A  CURSOR FOR 
         SELECT E1_VALOR , E1_MOEDA 
           FROM SE1030 
           WHERE E1_FILIAL  = @E1_FILIAL  and E1_PREFIXO  = @IN_PREFIXO  and E1_NUM  = @IN_NUMERO  and E1_PARCELA  = @IN_PARCELA 
            and E1_TIPO LIKE '%-'  and  (E1_CLIENTE  = @IN_CFORNCLI  or E1_CLIENTE  = 'UNIAO ' )  and  (E1_LOJA  = @IN_LOJA 
            or E1_CLIENTE  = 'UNIAO ' )  and E1_EMISSAO  <= @IN_DATABASE  and  (E1_TITPAI  = @IN_PREFIXO  + @IN_NUMERO  + @IN_PARCELA  + @IN_TIPO  + @IN_CFORNCLI  + @IN_LOJA 
           )  and D_E_L_E_T_  <> '*' 
         FOR READ ONLY 
          
         OPEN CUR_SUMABAT_A
         FETCH CUR_SUMABAT_A 
          INTO @ValorAbat , @MoedaAbat 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            EXEC MAT021_08_02 @ValorAbat , @IN_DDATA , @MoedaAbat , @IN_MOEDA , @ValorAbat output 
            SET @OUT_TOTABAT  = @OUT_TOTABAT  + @ValorAbat 
            FETCH CUR_SUMABAT_A 
             INTO @ValorAbat , @MoedaAbat 
         END 
         CLOSE CUR_SUMABAT_A
         DEALLOCATE CUR_SUMABAT_A
      END 
      ELSE 
      BEGIN 
          
         -- Cursor declaration CUR_SUMABAT_C
         DECLARE CUR_SUMABAT_C  CURSOR FOR 
         SELECT E1_VALOR , E1_MOEDA 
           FROM SE1030 
           WHERE E1_FILIAL  = @E1_FILIAL  and E1_PREFIXO  = @IN_PREFIXO  and E1_NUM  = @IN_NUMERO  and E1_PARCELA  = @IN_PARCELA 
            and E1_TIPO LIKE '%-'  and  (E1_CLIENTE  = @IN_CFORNCLI  or E1_CLIENTE  = 'UNIAO ' )  and  (E1_LOJA  = @IN_LOJA 
            or E1_CLIENTE  = 'UNIAO ' )  and E1_EMISSAO  <= @IN_DATABASE  and  (RTRIM ( E1_TITPAI ) = RTRIM ( @IN_PREFIXO  + @IN_NUMERO  + @IN_PARCELA  + @IN_TIPO  + @IN_CFORNCLI  + @IN_LOJA 
           ))  and D_E_L_E_T_  <> '*' 
         FOR READ ONLY 
          
         OPEN CUR_SUMABAT_C
         FETCH CUR_SUMABAT_C 
          INTO @ValorAbat , @MoedaAbat 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            EXEC MAT021_08_02 @ValorAbat , @IN_DDATA , @MoedaAbat , @IN_MOEDA , @ValorAbat output 
            SET @OUT_TOTABAT  = @OUT_TOTABAT  + @ValorAbat 
            FETCH CUR_SUMABAT_C 
             INTO @ValorAbat , @MoedaAbat 
         END 
         CLOSE CUR_SUMABAT_C
         DEALLOCATE CUR_SUMABAT_C
      END 
   END 
   ELSE 
   BEGIN 
       
      -- Cursor declaration CUR_SUMABAT_B
      DECLARE CUR_SUMABAT_B  CURSOR FOR 
      SELECT E2_VALOR , E2_MOEDA 
        FROM SE2030 
        WHERE E2_FILIAL  = @E2_FILIAL  and E2_PREFIXO  = @IN_PREFIXO  and E2_NUM  = @IN_NUMERO  and E2_PARCELA  = @IN_PARCELA 
         and E2_TIPO LIKE '%-'  and E2_FORNECE  = @IN_CFORNCLI  and E2_LOJA  = @IN_LOJA  and E2_EMISSAO  <= @IN_DATABASE 
         and D_E_L_E_T_  <> '*' 
      FOR READ ONLY 
       
      OPEN CUR_SUMABAT_B
      FETCH CUR_SUMABAT_B 
       INTO @ValorAbat , @MoedaAbat 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         EXEC MAT021_08_02 @ValorAbat , @IN_DDATA , @MoedaAbat , @IN_MOEDA , @ValorAbat output 
         SET @OUT_TOTABAT  = @OUT_TOTABAT  + @ValorAbat 
         FETCH CUR_SUMABAT_B 
          INTO @ValorAbat , @MoedaAbat 
      END 
      CLOSE CUR_SUMABAT_B
      DEALLOCATE CUR_SUMABAT_B
   END 
   IF @OUT_TOTABAT is null 
   BEGIN 
      SET @OUT_TOTABAT  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN002_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN002_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN002_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN002_10_01]
(
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 9) , 
    @IN_PARCELA Char( 1) , 
    @IN_TIPO Char( 3) , 
    @IN_CLIFOR Char( 14) , 
    @IN_CONVERSAO Char( 08 ) , 
    @IN_BAIXA Char( 08 ) , 
    @IN_LOJA Char( 4) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_VALORTIT Float , 
    @IN_MOEDATIT Float , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_DISPONI Char( 01 ) , 
    @IN_PCCBAIXA Char( 01 ) , 
    @IN_CART Char( 01 ) , 
    @IN_ADIANT Char( 01 ) , 
    @IN_IRFBAIXA Char( 01 ) , 
    @IN_TXTIT Float , 
    @IN_ISSBAIXA Char( 01 ) , 
    @IN_FILIALORI Char( 2) , 
    @OUT_SALDO Float  output ) AS
 
-- Declaration of variables
DECLARE @OUT_VALOR Float
DECLARE @cE5_FILIAL Char( 2)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_VALOR  = 0 
   SET @OUT_SALDO  = 0 
   SET @cAux  = 'SE5' 
   EXEC XFILIAL_10_01 @cAux , @IN_FILIALCOR , @cE5_FILIAL output 
   IF  (@IN_MOEDATIT  < 2  and @IN_CPAISLOC  = 'BRA' ) 
   BEGIN 
      EXEC FIN004_10_01 @cE5_FILIAL , @IN_PREFIXO , @IN_NUMERO , @IN_PARCELA , @IN_TIPO , @IN_CLIFOR , @IN_CONVERSAO , @IN_BAIXA , 
             @IN_LOJA , @IN_DATABASE , @IN_VALORTIT , @IN_MOEDATIT , @IN_DISPONI , @IN_PCCBAIXA , @IN_CART , @IN_ADIANT , 
             @IN_IRFBAIXA , @IN_ISSBAIXA , @IN_FILIALORI , @OUT_VALOR output 
   END 
   ELSE 
   BEGIN 
      EXEC FIN005_10_01 @cE5_FILIAL , @IN_PREFIXO , @IN_NUMERO , @IN_PARCELA , @IN_TIPO , @IN_CLIFOR , @IN_CONVERSAO , @IN_BAIXA , 
             @IN_LOJA , @IN_DATABASE , @IN_VALORTIT , @IN_MOEDATIT , @IN_DISPONI , @IN_CART , @IN_ADIANT , @IN_CPAISLOC , 
             @IN_TXTIT , @OUT_VALOR output 
   END 
   SET @OUT_SALDO  = @OUT_VALOR 
   IF @OUT_SALDO is null 
   BEGIN 
      SET @OUT_SALDO  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN002_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN002_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN002_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN002_10_02]
(
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 8) , 
    @IN_PARCELA Char( 1) , 
    @IN_TIPO Char( 3) , 
    @IN_CLIFOR Char( 14) , 
    @IN_CONVERSAO Char( 08 ) , 
    @IN_BAIXA Char( 08 ) , 
    @IN_LOJA Char( 4) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_VALORTIT Float , 
    @IN_MOEDATIT Float , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_DISPONI Char( 01 ) , 
    @IN_PCCBAIXA Char( 01 ) , 
    @IN_CART Char( 01 ) , 
    @IN_ADIANT Char( 01 ) , 
    @IN_IRFBAIXA Char( 01 ) , 
    @IN_TXTIT Float , 
    @IN_ISSBAIXA Char( 01 ) , 
    @IN_FILIALORI Char( 2) , 
    @OUT_SALDO Float  output ) AS
 
-- Declaration of variables
DECLARE @OUT_VALOR Float
DECLARE @cE5_FILIAL Char( 2)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_VALOR  = 0 
   SET @OUT_SALDO  = 0 
   SET @cAux  = 'SE5' 
   EXEC XFILIAL_10_02 @cAux , @IN_FILIALCOR , @cE5_FILIAL output 
   IF  (@IN_MOEDATIT  < 2  and @IN_CPAISLOC  = 'BRA' ) 
   BEGIN 
      EXEC FIN004_10_02 @cE5_FILIAL , @IN_PREFIXO , @IN_NUMERO , @IN_PARCELA , @IN_TIPO , @IN_CLIFOR , @IN_CONVERSAO , @IN_BAIXA , 
             @IN_LOJA , @IN_DATABASE , @IN_VALORTIT , @IN_MOEDATIT , @IN_DISPONI , @IN_PCCBAIXA , @IN_CART , @IN_ADIANT , 
             @IN_IRFBAIXA , @IN_ISSBAIXA , @IN_FILIALORI , @OUT_VALOR output 
   END 
   ELSE 
   BEGIN 
      EXEC FIN005_10_02 @cE5_FILIAL , @IN_PREFIXO , @IN_NUMERO , @IN_PARCELA , @IN_TIPO , @IN_CLIFOR , @IN_CONVERSAO , @IN_BAIXA , 
             @IN_LOJA , @IN_DATABASE , @IN_VALORTIT , @IN_MOEDATIT , @IN_DISPONI , @IN_CART , @IN_ADIANT , @IN_CPAISLOC , 
             @IN_TXTIT , @OUT_VALOR output 
   END 
   SET @OUT_SALDO  = @OUT_VALOR 
   IF @OUT_SALDO is null 
   BEGIN 
      SET @OUT_SALDO  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN003_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN003_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN003_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN003_09_01]
(
    @IN_MVPAR01 Char( 01 ) , 
    @IN_MVPAR02 Char( 01 ) , 
    @IN_MCUSTO Char( 01 ) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_TIPOCR VarChar( 250 ) , 
    @IN_TIPOCR1 VarChar( 250 ) , 
    @IN_TIPOCP VarChar( 250 ) , 
    @IN_TIPOLC VarChar( 250 ) , 
    @IN_CLIDE Char( 14) , 
    @IN_CLIATE Char( 14) , 
    @IN_FORDE Char( 14) , 
    @IN_FORATE Char( 14) , 
    @IN_ARRAYFIL1 VarChar( 240 ) , 
    @IN_ARRAYFIL2 VarChar( 240 ) , 
    @IN_ARRAYFIL3 VarChar( 240 ) , 
    @IN_ARRAYFIL4 VarChar( 240 ) , 
    @IN_ARRAYFIL5 VarChar( 240 ) , 
    @IN_ARRAYFIL6 VarChar( 240 ) , 
    @IN_ARRAYFIL7 VarChar( 240 ) , 
    @IN_ARRAYFIL8 VarChar( 240 ) , 
    @IN_ARRAYFIL9 VarChar( 240 ) , 
    @IN_TAMFIL Integer , 
    @IN_MODULO Float , 
    @IN_CLIPAD Char( 14) , 
    @IN_LOJPAD Char( 4) , 
    @IN_SCFILTRO Char( 01 ) , 
    @OUT_RESULTADO Char( 1 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_A1_Ant Char( 2)
DECLARE @cFil_A2_Ant Char( 2)
DECLARE @cFil_E1_Ant Char( 2)
DECLARE @cFil_E2_Ant Char( 2)
DECLARE @cFilial_A1 Char( 2)
DECLARE @cFilial_A2 Char( 2)
DECLARE @cFilial_E1 Char( 2)
DECLARE @cFilial_E2 Char( 2)
DECLARE @cFilial_E5 Char( 2)
DECLARE @cFilial_F1 Char( 2)
DECLARE @cFilial_F2 Char( 2)
DECLARE @cFilial Char( 2)
DECLARE @cMsFil Char( 2)
DECLARE @iprimeiro_recno Integer
DECLARE @iultimo_recno Integer
DECLARE @nValor Float
DECLARE @nSaldo Float
DECLARE @nValLiq Float
DECLARE @nVlcruz Float
DECLARE @cCliente Char( 14)
DECLARE @cLoja Char( 4)
DECLARE @cCliAux Char( 14)
DECLARE @cLojaAux Char( 4)
DECLARE @nMoeda Float
DECLARE @cEmissao Char( 08 )
DECLARE @cTipo Char( 3)
DECLARE @cVencto Char( 08 )
DECLARE @cVencReal Char( 08 )
DECLARE @cBaixa Char( 08 )
DECLARE @nMoedaForte Float
DECLARE @nA1_SALDUP Float
DECLARE @nA1_SALDUPM Float
DECLARE @nA1_SALFIN Float
DECLARE @nA1_SALFINM Float
DECLARE @nA1_MAIDUPL Float
DECLARE @nA1_ATR Float
DECLARE @nA1_PAGATR Float
DECLARE @nA1_NROPAG Float
DECLARE @nA1_VACUM Float
DECLARE @nA1_MOEDALC Float
DECLARE @nA1_MSALDO Float
DECLARE @nA1_MATR Float
DECLARE @nA1_METR Float
DECLARE @nA1_MCOMPRA Float
DECLARE @nA1_NROCOM Float
DECLARE @cA1_PRICOM Char( 8)
DECLARE @cA1_ULTCOM Char( 8)
DECLARE @iPos Integer
DECLARE @iPos1 Integer
DECLARE @iPosFil Integer
DECLARE @nSaldoTit Float
DECLARE @cFornece Char( 14)
DECLARE @nMoedaSalDup Float
DECLARE @nMoedaSalDupM Float
DECLARE @nMoedaSalFin Float
DECLARE @nMoedaSalFinM Float
DECLARE @nMoedaMaiDup Float
DECLARE @nSaldoAcum Float
DECLARE @nMCompra Float
DECLARE @nMSaldo Float
DECLARE @nMSaldoAux Float
DECLARE @nA2_SALDUP Float
DECLARE @nA2_SALDUPM Float
DECLARE @nA2_MCOMPRA Float
DECLARE @nA2_MNOTA Float
DECLARE @nA2_MSALDO Float
DECLARE @nA2_NROCOM Float
DECLARE @nValorAux Float
DECLARE @cA2_PRICOM Char( 8)
DECLARE @cA2_ULTCOM Char( 8)
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @iRecnoLocaliz Integer
DECLARE @iDiferencaDATA Integer
DECLARE @cPrefixo Char( 3)
DECLARE @cNum Char( 9)
DECLARE @cParcela Char( 1)
DECLARE @nQtdBaixas Integer
DECLARE @cOrigem Char( 8)
DECLARE @cOrigemAux Char( 8)
DECLARE @nF2_VALFAT Float
DECLARE @lA1Zerado Char( 01 )
DECLARE @lA2Zerado Char( 01 )
DECLARE @cFatura Char( 9)
DECLARE @cPedido Char( 6)
DECLARE @cPedAux Char( 6)
DECLARE @lExecE1 Char( 01 )
DECLARE @lExecE2 Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @lLojaCartao Char( 01 )
DECLARE @cCliente_SF2 Char( 14)
DECLARE @cLoja_SF2 Char( 4)
DECLARE @nF1_VALBRUT Float
DECLARE @cF1_EMISSAO Char( 08 )
DECLARE @nMaiorVda Float
DECLARE @iRecnoSF2 Integer
DECLARE @cSerie Char( 3)
DECLARE @cFiliais VarChar( 240 )
DECLARE @lArrayFil2 Char( 01 )
DECLARE @lArrayFil3 Char( 01 )
DECLARE @lArrayFil4 Char( 01 )
DECLARE @lArrayFil5 Char( 01 )
DECLARE @lArrayFil6 Char( 01 )
DECLARE @lArrayFil7 Char( 01 )
DECLARE @lArrayFil8 Char( 01 )
DECLARE @lArrayFil9 Char( 01 )
DECLARE @lNroExecSE1 Char( 01 )
DECLARE @lNroExecSE2 Char( 01 )
DECLARE @nResult Char( 01 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @nMoeda  = 0 
   SET @iDiferencaDATA  = 0 
   SET @iNroRegs  = 0 
   SET @nMoedaForte  = CONVERT( Float ,@IN_MCUSTO )
   SET @lA1Zerado  = '0' 
   SET @lA2Zerado  = '0' 
   SET @lExecE1  = '1' 
   SET @lExecE2  = '1' 
   SET @cCliente_SF2  = '' 
   SET @cLoja_SF2  = '' 
   SET @iRecnoSF2  = 0 
   SET @cFiliais  = @IN_ARRAYFIL1 
   SET @lArrayFil2  = '0' 
   SET @lArrayFil3  = '0' 
   SET @lArrayFil4  = '0' 
   SET @lArrayFil5  = '0' 
   SET @lArrayFil6  = '0' 
   SET @lArrayFil7  = '0' 
   SET @lArrayFil8  = '0' 
   SET @lArrayFil9  = '0' 
   SET @cFil_A1_Ant  = '0' 
   SET @cFil_A2_Ant  = '0' 
   SET @cFil_E1_Ant  = '' 
   SET @cFil_E2_Ant  = '' 
   IF LEN ( @IN_ARRAYFIL2 ) > 0 
   BEGIN 
      SET @lArrayFil2  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL3 ) > 0 
   BEGIN 
      SET @lArrayFil3  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL4 ) > 0 
   BEGIN 
      SET @lArrayFil4  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL5 ) > 0 
   BEGIN 
      SET @lArrayFil5  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL6 ) > 0 
   BEGIN 
      SET @lArrayFil6  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL7 ) > 0 
   BEGIN 
      SET @lArrayFil7  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL8 ) > 0 
   BEGIN 
      SET @lArrayFil8  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL9 ) > 0 
   BEGIN 
      SET @lArrayFil9  = '1' 
   END 
   SET @iPosFil  = 1 
   SET @cPedAux  = '' 
   SET @nMSaldo  = 0 
   SET @cCliAux  = '' 
   SET @cLojaAux  = '' 
   SET @lNroExecSE1  = '0' 
   SET @lNroExecSE2  = '0' 
   WHILE (@iPosFil  <= LEN ( @cFiliais ))
   BEGIN
      SET @cFilial  = SUBSTRING ( @cFiliais , @iPosFil , @IN_TAMFIL )
      SET @iPosFil  = @iPosFil  + @IN_TAMFIL 
      SET @cAux  = 'SA1' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_A1 output 
      SET @cAux  = 'SA2' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_A2 output 
      SET @cAux  = 'SE1' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_E1 output 
      SET @cAux  = 'SE2' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_E2 output 
      SET @cAux  = 'SE5' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_E5 output 
      SET @cAux  = 'SF1' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_F1 output 
      SET @cAux  = 'SF2' 
      EXEC XFILIAL_09_01 @cAux , @cFilial , @cFilial_F2 output 
      IF @cFilial_A1  = @cFil_A1_Ant 
      BEGIN 
         SET @lA1Zerado  = '1' 
      END 
      IF @cFilial_A2  = @cFil_A2_Ant 
      BEGIN 
         SET @lA2Zerado  = '1' 
      END 
      IF  (@IN_MVPAR01  <> '3' ) 
      BEGIN 
         IF @lExecE1  = '1' 
         BEGIN 
            IF @lA1Zerado  = '0' 
            BEGIN 
               IF @cFilial_A1  = ' ' 
               BEGIN 
                  SET @lA1Zerado  = '1' 
               END 
               SELECT @iprimeiro_recno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iultimo_recno  = COALESCE ( MAX ( R_E_C_N_O_ ), 
                      0 )
                 FROM SA1010 
                 WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and D_E_L_E_T_  = ' ' 
               WHILE ( (@iprimeiro_recno  <= @iultimo_recno ) )
               BEGIN
                  begin tran 
                  IF  (@IN_SCFILTRO  = '2' ) 
                  BEGIN 
                     EXEC F410SCFT_A1_09_01 @IN_MVPAR02 , @cFilial_A1 , @IN_CLIDE , @IN_CLIATE , @iprimeiro_recno 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_MVPAR02  = '1' ) 
                     BEGIN 
                        UPDATE SA1010 
                          WITH (ROWLOCK) 
                           SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 , A1_MSALDO  = 0 
                          , A1_METR  = 0 , A1_MATR  = 0 , A1_MAIDUPL  = 0 , A1_ATR  = 0 , A1_PAGATR  = 0 , A1_NROPAG  = 0 
                          , A1_ULTCOM  = ' ' , A1_MCOMPRA  = 0 , A1_NROCOM  = 0 
                         WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                     ELSE 
                     BEGIN 
                        UPDATE SA1010 
                          WITH (ROWLOCK) 
                           SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 
                         WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                  END 
                  commit tran 
                  SET @iprimeiro_recno  = @iprimeiro_recno  + 1024 
               END 
            END 
         END 
      END 
      IF  (@IN_MVPAR01  <> '2' ) 
      BEGIN 
         IF @lExecE2  = '1' 
         BEGIN 
            IF @lA2Zerado  = '0' 
            BEGIN 
               IF @cFilial_A2  = ' ' 
               BEGIN 
                  SET @lA2Zerado  = '1' 
               END 
               SELECT @iprimeiro_recno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iultimo_recno  = COALESCE ( MAX ( R_E_C_N_O_ ), 
                      0 )
                 FROM SA2010 
                 WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and D_E_L_E_T_  = ' ' 
               WHILE (@iprimeiro_recno  <= @iultimo_recno )
               BEGIN
                  begin tran 
                  IF  (@IN_SCFILTRO  = '2' ) 
                  BEGIN 
                     EXEC F410SCFT_A2_09_01 @IN_MVPAR02 , @cFilial_A2 , @IN_FORDE , @IN_FORATE , @iprimeiro_recno 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_MVPAR02  = '1' ) 
                     BEGIN 
                        UPDATE SA2010 
                          WITH (ROWLOCK) 
                           SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 , A2_NROCOM  = 0 , A2_MSALDO  = 0 
                          
                         WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                     ELSE 
                     BEGIN 
                        UPDATE SA2010 
                          WITH (ROWLOCK) 
                           SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 
                         WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                  END 
                  commit tran 
                  SET @iprimeiro_recno  = @iprimeiro_recno  + 1024 
               END 
            END 
         END 
      END 
      IF  (@cFilial_E1  <> ' ' )  and  (@cFilial_A1  <> ' ' )  and @IN_TAMFIL  = 2 
      BEGIN 
         SET @cFilial_A1  = @cFilial_E1 
      END 
      IF  (@cFilial_E2  <> ' ' )  and  (@cFilial_A2  <> ' ' )  and @IN_TAMFIL  = 2 
      BEGIN 
         SET @cFilial_A2  = @cFilial_E2 
      END 
      IF  (@IN_MVPAR01  <> '3' )  and  ( (@lNroExecSE1  = '0' )  or  (@cFil_E1_Ant  <> @cFilial_E1 )  or  (@cFil_A1_Ant  <> @cFilial_A1 
        ) ) 
      BEGIN 
         IF @lExecE1  = '1' 
         BEGIN 
            SET @iNroRegs  = 0 
            SET @lNroExecSE1  = '1' 
            IF  (@IN_SCFILTRO  = '2' ) 
            BEGIN 
               EXEC F410SCFT_E1_09_01 @cFilial_E1 , @cFilial_A1 , @IN_CLIDE , @IN_CLIATE , @nResult 
            END 
            ELSE 
            BEGIN 
                
               -- Cursor declaration curSE1
               DECLARE curSE1  CURSOR FOR 
               SELECT E1_VALOR , E1_SALDO , E1_VALLIQ , E1_VLCRUZ , E1_CLIENTE , E1_LOJA , E1_MOEDA , E1_EMISSAO , E1_TIPO , 
                      E1_VENCTO , E1_VENCREA , E1_BAIXA , E1_PREFIXO , E1_NUM , E1_PARCELA , E1_ORIGEM , E1_FATURA , E1_MSFIL , 
                      E1_PEDIDO , E1_SERIE 
                 FROM SE1010 SE1, SA1010 SA1
                 WHERE SE1.E1_FILIAL  = @cFilial_E1  and SA1.A1_FILIAL  = @cFilial_A1  and SA1.A1_COD  between @IN_CLIDE and @IN_CLIATE 
                  and SA1.A1_COD  = SE1.E1_CLIENTE  and SA1.A1_LOJA  = SE1.E1_LOJA  and SE1.D_E_L_E_T_  = ' '  and SA1.D_E_L_E_T_  = ' ' 
                 
                
            END 
            OPEN curSE1
            FETCH curSE1 
             INTO @nValor , @nSaldo , @nValLiq , @nVlcruz , @cCliente , @cLoja , @nMoeda , @cEmissao , @cTipo , @cVencto , 
                   @cVencReal , @cBaixa , @cPrefixo , @cNum , @cParcela , @cOrigem , @cFatura , @cMsFil , @cPedido , @cSerie 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iNroRegs  = @iNroRegs  + 1 
               SET @lLojaCartao  = '0' 
               IF SUBSTRING ( @cOrigem , 1 , 3 ) = 'LOJ' 
               BEGIN 
                  IF @cTipo in ( 'CC' , 'VA' , 'CO' , 'CD' , 'FI'  ) 
                  BEGIN 
                     SET @lLojaCartao  = '1' 
                  END 
               END 
               IF @lLojaCartao  = '1' 
               BEGIN 
                  IF @cFilial_F2  <> ' ' 
                  BEGIN 
                     SET @cFilial_F2  = @cMsFil 
                  END 
                  SELECT @cCliente_SF2  = F2_CLIENTE , @cLoja_SF2  = F2_LOJA 
                    FROM SF2010 
                    WHERE F2_FILIAL  = @cFilial_F2  and F2_DOC  = @cNum  and F2_SERIE  = @cPrefixo  and D_E_L_E_T_  = ' ' 
                    
                  IF @cCliente_SF2  <> ' ' 
                  BEGIN 
                     SET @cCliente  = @cCliente_SF2 
                  END 
                  IF @cLoja_SF2  <> ' ' 
                  BEGIN 
                     SET @cLoja  = @cLoja_SF2 
                  END 
               END 
               SELECT @nA1_SALDUP  = A1_SALDUP , @nA1_SALDUPM  = A1_SALDUPM , @nA1_MAIDUPL  = A1_MAIDUPL , @nA1_ATR  = A1_ATR 
                 , @nA1_PAGATR  = A1_PAGATR , @nA1_NROPAG  = A1_NROPAG , @nA1_VACUM  = A1_VACUM , @cA1_PRICOM  = A1_PRICOM 
                 , @cA1_ULTCOM  = A1_ULTCOM , @nA1_MOEDALC  = A1_MOEDALC , @nA1_SALFIN  = A1_SALFIN , @nA1_SALFINM  = A1_SALFINM 
                 , @nA1_MSALDO  = A1_MSALDO , @nA1_MATR  = A1_MATR , @nA1_METR  = A1_METR , @nA1_MCOMPRA  = A1_MCOMPRA , 
                      @nA1_NROCOM  = A1_NROCOM 
                 FROM SA1010 
                 WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  = @cCliente  and A1_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
               SET @nMoedaSalDup  = 0 
               SET @nMoedaSalDupM  = 0 
               SET @nMoedaSalFin  = 0 
               SET @nMoedaSalFinM  = 0 
               SET @nMoedaMaiDup  = 0 
               SET @nMaiorVda  = 0 
               SET @nMSaldoAux  = 0 
               SET @nSaldoAcum  = 0 
               SET @iPos  = 0 
               SET @iPos1  = 0 
               SET @nQtdBaixas  = 0 
               IF  (@nA1_MOEDALC  > 0  and @nA1_MOEDALC is NOT null ) 
               BEGIN 
                  SET @nMoedaForte  = @nA1_MOEDALC 
               END 
               IF  ( (@cCliente  + @cLoja )  <>  (@cCliAux  + @cLojaAux ) ) 
               BEGIN 
                  SET @cCliAux  = @cCliente 
                  SET @cLojaAux  = @cLoja 
                  SET @nMSaldo  = 0 
               END 
               SET @iPos  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOCR )
               IF @iPos  = 0 
               BEGIN 
                  SET @iPos  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOCR )
               END 
               IF @iPos  > 0 
               BEGIN 
                  SET @iPos1  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOLC )
                  IF @iPos1  = 0 
                  BEGIN 
                     SET @iPos1  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOLC )
                  END 
                  IF @iPos1  <> 0 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nAux , @nMoedaSalFin output 
                     EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalFinM output 
                     SET @nA1_SALFIN  = @nA1_SALFIN  - @nMoedaSalFin 
                     SET @nA1_SALFINM  = @nA1_SALFINM  - @nMoedaSalFinM 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                     EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                     SET @nA1_SALDUP  = @nA1_SALDUP  - @nMoedaSalDup 
                     SET @nA1_SALDUPM  = @nA1_SALDUPM  - @nMoedaSalDupM 
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @nSaldoTit  = @nSaldo 
                  SET @iPos1  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOLC )
                  IF @iPos1  = 0 
                  BEGIN 
                     SET @iPos1  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOLC )
                  END 
                  IF @iPos1  <> 0 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_01 @nSaldoTit , @cEmissao , @nMoeda , @nAux , @nMoedaSalFin output 
                     EXEC MAT021_09_01 @nSaldoTit , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalFinM output 
                     SET @nA1_SALFIN  = @nA1_SALFIN  + @nMoedaSalFin 
                     SET @nA1_SALFINM  = @nA1_SALFINM  + @nMoedaSalFinM 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_01 @nSaldoTit , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                     EXEC MAT021_09_01 @nSaldoTit , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                     SET @nA1_SALDUP  = @nA1_SALDUP  + @nMoedaSalDup 
                     SET @nA1_SALDUPM  = @nA1_SALDUPM  + @nMoedaSalDupM 
                  END 
                  IF @cA1_PRICOM is null  or @cA1_PRICOM  > @cEmissao 
                  BEGIN 
                     SET @cA1_PRICOM  = @cEmissao 
                  END 
                  IF  (@IN_MVPAR02  = '1' ) 
                  BEGIN 
                     IF @cA1_ULTCOM is null  or @cA1_ULTCOM  < @cEmissao 
                     BEGIN 
                        SET @cA1_ULTCOM  = @cEmissao 
                     END 
                  END 
                  IF  (SUBSTRING ( @cEmissao , 1 , 4 ) = SUBSTRING ( @IN_DATABASE , 1 , 4 ) and @cOrigem  != 'FINA280' ) 
                    
                  BEGIN 
                     EXEC MAT021_09_01 @nValor , @cEmissao , @nMoeda , @nMoedaForte , @nSaldoAcum output 
                     SET @nA1_VACUM  = @nA1_VACUM  + @nSaldoAcum 
                  END 
                  SET @cOrigemAux  = @cOrigem 
                  IF @cTipo  != 'PR ' 
                  BEGIN 
                     IF @cOrigemAux  = 'MATA460' 
                     BEGIN 
                        IF @cFilial_F2  <> ' '  and @cMsFil  != ' ' 
                        BEGIN 
                           SET @cFilial_F2  = @cMsFil 
                        END 
                        SELECT @iRecnoSF2  = COALESCE ( R_E_C_N_O_ , 0 )
                          FROM SF2010 
                          WHERE F2_FILIAL  = @cFilial_F2  and F2_CLIENTE  = @cCliente  and F2_LOJA  = @cLoja  and F2_DOC  = @cNum 
                           and F2_SERIE  = @cPrefixo  and D_E_L_E_T_  = ' ' 
                        IF @iRecnoSF2  = 0 
                        BEGIN 
                           SELECT @nF2_VALFAT  = COALESCE ( F2_VALFAT , 0 )
                             FROM SF2010 
                             WHERE F2_FILIAL  = @cFilial_F2  and F2_CLIENTE  = @cCliente  and F2_LOJA  = @cLoja  and F2_DOC  = @cNum 
                              and F2_SERIE  = @cSerie  and D_E_L_E_T_  = ' ' 
                        END 
                        ELSE 
                        BEGIN 
                           SELECT @nF2_VALFAT  = COALESCE ( F2_VALFAT , 0 )
                             FROM SF2010 
                             WHERE F2_FILIAL  = @cFilial_F2  and F2_CLIENTE  = @cCliente  and F2_LOJA  = @cLoja  and F2_DOC  = @cNum 
                              and F2_SERIE  = @cPrefixo  and D_E_L_E_T_  = ' ' 
                        END 
                        EXEC MAT021_09_01 @nF2_VALFAT , @cEmissao , @nMoeda , @nMoedaForte , @nMaiorVda output 
                     END 
                     ELSE 
                     BEGIN 
                        EXEC MAT021_09_01 @nValor , @cEmissao , @nMoeda , @nMoedaForte , @nMaiorVda output 
                     END 
                     IF  (@nA1_MCOMPRA  < @nMaiorVda ) 
                     BEGIN 
                        SET @nA1_MCOMPRA  = @nMaiorVda 
                     END 
                     EXEC MAT021_09_01 @nValor , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaMaiDup output 
                     IF  (@nA1_MAIDUPL  < @nMoedaMaiDup  and @IN_MVPAR02  = '1' ) 
                     BEGIN 
                        SET @nA1_MAIDUPL  = @nMoedaMaiDup 
                     END 
                     SELECT @nQtdBaixas  = COUNT ( * )
                       FROM SE5010 SE5
                       WHERE E5_FILIAL  = @cFilial_E5  and E5_PREFIXO  = @cPrefixo  and E5_NUMERO  = @cNum  and E5_PARCELA  = @cParcela 
                        and E5_TIPO  = @cTipo  and E5_CLIFOR  = @cCliente  and E5_LOJA  = @cLoja  and E5_TIPODOC in ( 'VL' , 
                            'BA' , 'CP' , 'LJ' , 'RA' , 'PA' , 'V2'  )  and E5_SITUACA NOT IN ( 'C' , 'E' , 'X'  )  and E5_TIPODOC  <> 'ES' 
                        and NOT EXISTS (
                     SELECT 0 
                       FROM SE5010 A
                       WHERE A.E5_FILIAL  = SE5.E5_FILIAL  and A.E5_NATUREZ  = SE5.E5_NATUREZ  and A.E5_PREFIXO  = SE5.E5_PREFIXO 
                        and A.E5_NUMERO  = SE5.E5_NUMERO  and A.E5_PARCELA  = SE5.E5_PARCELA  and A.E5_TIPO  = SE5.E5_TIPO 
                        and A.E5_CLIFOR  = SE5.E5_CLIFOR  and A.E5_LOJA  = SE5.E5_LOJA  and A.E5_SEQ  = SE5.E5_SEQ  and A.E5_TIPODOC  = 'ES' 
                        and A.D_E_L_E_T_  = ' ' )  and D_E_L_E_T_  = ' ' 
                     IF  (@IN_MVPAR02  = '1'  and  (@cFatura  = ' '  or SUBSTRING ( @cFatura , 1 , 6 ) = 'NOTFAT' ) ) 
                     BEGIN 
                        IF  (@IN_MODULO  != 12  or @IN_MODULO  != 72 )  or  ( (@IN_CLIPAD  != @cCliente  and @IN_LOJPAD  != @cLoja 
                          ) ) 
                        BEGIN 
                           SET @nA1_NROPAG  = @nA1_NROPAG  + @nQtdBaixas 
                        END 
                     END 
                     IF @nSaldo  = 0 
                     BEGIN 
                        IF  (@cFatura  = ' '  or SUBSTRING ( @cFatura , 1 , 6 ) = 'NOTFAT' ) 
                        BEGIN 
                           IF  ( (@cVencReal  < @cBaixa )  and @IN_MVPAR02  = '1' ) 
                           BEGIN 
                              EXEC MAT021_09_01 @nValLiq , @cEmissao , @nMoeda , @nMoedaForte , @nValLiq output 
                           END 
                           SET @nA1_PAGATR  = @nA1_PAGATR  + @nValLiq 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        SET @iPos1  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOCR1 )
                        IF @iPos1  = 0 
                        BEGIN 
                           SET @iPos1  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOCR1 )
                        END 
                        IF  ( (@cVencReal  < @IN_DATABASE )  and @IN_MVPAR02  = '1' ) 
                        BEGIN 
                           IF @iPos1  = 0 
                           BEGIN 
                              EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nSaldo output 
                           END 
                           SET @nA1_ATR  = @nA1_ATR  + @nSaldo 
                        END 
                     END 
                     IF  (@IN_MVPAR02  = '1' ) 
                     BEGIN 
                        IF @cBaixa  <> ' ' 
                        BEGIN 
                           SET @iDiferencaDATA  =  (DATEDIFF ( DAY , @cVencReal , @cBaixa )) 
                        END 
                        IF @nSaldo  > 0 
                        BEGIN 
                           EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMSaldoAux output 
                           SET @nMSaldo  = @nMSaldo  + @nMSaldoAux 
                        END 
                        IF  (@nA1_SALDUPM  > @nA1_MSALDO ) 
                        BEGIN 
                           SET @nA1_MSALDO  = @nA1_SALDUPM 
                        END 
                        ELSE 
                        BEGIN 
                           IF  (@nMSaldo  > @nA1_MSALDO ) 
                           BEGIN 
                              SET @nA1_MSALDO  = @nMSaldo 
                           END 
                           ELSE 
                           BEGIN 
                              SET @nA1_MSALDO  = @nA1_MSALDO 
                           END 
                        END 
                        EXEC MAT021_09_01 @nValor , @cEmissao , 1 , @nMoedaForte , @nMCompra output 
                        IF @nMCompra  > @nA1_MCOMPRA 
                        BEGIN 
                           SET @nA1_MCOMPRA  = @nMCompra 
                        END 
                        IF @cOrigem  != 'FINA280' 
                        BEGIN 
                           IF @cPedido  != ' ' 
                           BEGIN 
                              IF @cPedido  != @cPedAux 
                              BEGIN 
                                 SET @nA1_NROCOM  = @nA1_NROCOM  + 1 
                              END 
                           END 
                           ELSE 
                           BEGIN 
                              SET @nA1_NROCOM  = @nA1_NROCOM  + 1 
                           END 
                        END 
                        IF  (@cFatura  = ' '  or SUBSTRING ( @cFatura , 1 , 6 ) = 'NOTFAT' ) 
                        BEGIN 
                           IF  (@iDiferencaDATA  > @nA1_MATR ) 
                           BEGIN 
                              SET @nA1_MATR  = @iDiferencaDATA 
                           END 
                           IF  (@cBaixa  <> ' '  and @nA1_NROPAG  > 0 ) 
                           BEGIN 
                              SET @nA1_METR  =  (@nA1_METR  *  (@nA1_NROPAG  - 1 )  + @iDiferencaDATA )  / @nA1_NROPAG 
                           END 
                        END 
                     END 
                  END 
               END 
               SET @cPedAux  = @cPedido 
               IF @iNroRegs  = 1 
               BEGIN 
                  SET @iNroRegs  = @iNroRegs 
                  Begin Tran 
               END 
               UPDATE SA1010 
                 WITH (ROWLOCK) 
                  SET A1_SALDUP  = @nA1_SALDUP , A1_SALDUPM  = @nA1_SALDUPM , A1_VACUM  = @nA1_VACUM , A1_MAIDUPL  = @nA1_MAIDUPL 
                 , A1_ATR  = @nA1_ATR , A1_NROPAG  = @nA1_NROPAG , A1_PAGATR  = @nA1_PAGATR , A1_PRICOM  = @cA1_PRICOM , 
                      A1_ULTCOM  = @cA1_ULTCOM , A1_SALFIN  = @nA1_SALFIN , A1_SALFINM  = @nA1_SALFINM , A1_MSALDO  = @nA1_MSALDO 
                 , A1_MATR  = @nA1_MATR , A1_METR  = @nA1_METR , A1_MCOMPRA  = @nA1_MCOMPRA , A1_NROCOM  = @nA1_NROCOM 
                WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  = @cCliente  and A1_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
               IF @iNroRegs  >= 1024 
               BEGIN 
                  Commit Tran 
                  SET @iNroRegs  = 0 
               END 
               FETCH curSE1 
                INTO @nValor , @nSaldo , @nValLiq , @nVlcruz , @cCliente , @cLoja , @nMoeda , @cEmissao , @cTipo , @cVencto , 
                      @cVencReal , @cBaixa , @cPrefixo , @cNum , @cParcela , @cOrigem , @cFatura , @cMsFil , @cPedido , @cSerie 
            END 
            CLOSE curSE1
            DEALLOCATE curSE1
            IF @iNroRegs  > 0 
            BEGIN 
                Commit Transaction  
            END 
         END 
         IF @cFilial_A1  = ' '  and @cFilial_E1  = ' ' 
         BEGIN 
            SET @lExecE1  = '0' 
         END 
      END 
      IF  (@IN_MVPAR01  <> '2' )  and  ( (@lNroExecSE2  = '0' )  or  (@cFil_E2_Ant  <> @cFilial_E2 )  or  (@cFil_A2_Ant  <> @cFilial_A2 
        ) ) 
      BEGIN 
         SET @nMoedaForte  = CONVERT( Float ,@IN_MCUSTO )
         SET @nValorAux  = 0 
         IF @lExecE2  = '1' 
         BEGIN 
            SET @iPos  = 0 
            SET @iNroRegs  = 0 
            SET @lNroExecSE2  = '1' 
            IF  (@IN_SCFILTRO  = '2' ) 
            BEGIN 
               EXEC F410SCFT_E2_09_01 @cFilial_E2 , @cFilial_A2 , @IN_FORDE , @IN_FORATE , @nResult 
            END 
            ELSE 
            BEGIN 
                
               -- Cursor declaration curSE2
               DECLARE curSE2  CURSOR FOR 
               SELECT E2_FORNECE , E2_LOJA , E2_SALDO , E2_MOEDA , E2_EMISSAO , E2_TIPO , E2_ORIGEM , E2_NUM , E2_PREFIXO , 
                      E2_VALOR 
                 FROM SE2010 SE2, SA2010 SA2
                 WHERE SE2.E2_FILIAL  = @cFilial_E2  and SA2.A2_FILIAL  = @cFilial_A2  and SE2.E2_FORNECE  = SA2.A2_COD  and SE2.E2_LOJA  = SA2.A2_LOJA 
                  and SA2.A2_COD  between @IN_FORDE and @IN_FORATE  and SE2.D_E_L_E_T_  = ' '  and SA2.D_E_L_E_T_  = ' ' 
                 
                
            END 
            OPEN curSE2
            FETCH curSE2 
             INTO @cFornece , @cLoja , @nSaldo , @nMoeda , @cEmissao , @cTipo , @cOrigem , @cNum , @cPrefixo , @nValor 
            WHILE (@@fetch_status  = 0 )
            BEGIN
               SET @iNroRegs  = @iNroRegs  + 1 
               IF  (@IN_MVPAR02  = '1' ) 
               BEGIN 
                  SELECT @nA2_SALDUP  = A2_SALDUP , @nA2_SALDUPM  = A2_SALDUPM , @cA2_PRICOM  = A2_PRICOM , @cA2_ULTCOM  = A2_ULTCOM 
                    , @nA2_MCOMPRA  = A2_MCOMPRA , @nA2_MNOTA  = A2_MNOTA , @nA2_NROCOM  = A2_NROCOM , @nA2_MSALDO  = A2_MSALDO 
                    
                    FROM SA2010 
                    WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               ELSE 
               BEGIN 
                  SELECT @nA2_SALDUP  = A2_SALDUP , @nA2_SALDUPM  = A2_SALDUPM , @cA2_PRICOM  = A2_PRICOM , @cA2_ULTCOM  = A2_ULTCOM 
                    , @nA2_MCOMPRA  = A2_MCOMPRA , @nA2_MNOTA  = A2_MNOTA 
                    FROM SA2010 
                    WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               SET @nMoedaSalDup  = 0 
               SET @nMoedaSalDupM  = 0 
               SET @nValorAux  = 0 
               SET @iPos  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOCP )
               IF @iPos  > 0 
               BEGIN 
                  SET @nAux  = 1 
                  EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                  EXEC MAT021_09_01 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                  SET @nA2_SALDUP  = @nA2_SALDUP  - @nMoedaSalDup 
                  SET @nA2_SALDUPM  = @nA2_SALDUPM  - @nMoedaSalDupM 
                  SET @nAux  = 1 
                  EXEC MAT021_09_01 @nValor , @cEmissao , @nAux , @nMoedaForte , @nValorAux output 
                  IF @nA2_MCOMPRA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MCOMPRA  = @nValorAux 
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @nSaldoTit  = @nSaldo 
                  SET @nAux  = 1 
                  EXEC MAT021_09_01 @nSaldoTit , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                  EXEC MAT021_09_01 @nSaldoTit , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                  SET @nA2_SALDUP  = @nA2_SALDUP  + @nMoedaSalDup 
                  SET @nA2_SALDUPM  = @nA2_SALDUPM  + @nMoedaSalDupM 
                  IF @cA2_PRICOM  > @cEmissao  or @cA2_PRICOM is null 
                  BEGIN 
                     SET @cA2_PRICOM  = @cEmissao 
                  END 
                  IF @cA2_ULTCOM  < @cEmissao  or @cA2_ULTCOM is null 
                  BEGIN 
                     SET @cA2_ULTCOM  = @cEmissao 
                  END 
                  SET @nAux  = 1 
                  EXEC MAT021_09_01 @nValor , @cEmissao , @nAux , @nMoedaForte , @nValorAux output 
                  IF @nA2_MCOMPRA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MCOMPRA  = @nValorAux 
                  END 
                  IF  (@IN_MVPAR02  = '1' ) 
                  BEGIN 
                     IF  (@cOrigem  <> 'FINA290' ) 
                     BEGIN 
                        SET @nA2_NROCOM  = @nA2_NROCOM  + 1 
                     END 
                     IF  (@nA2_SALDUPM  > @nA2_MSALDO ) 
                     BEGIN 
                        SET @nA2_MSALDO  = @nA2_SALDUPM 
                     END 
                  END 
               END 
               IF SUBSTRING ( @cOrigem , 1 , 3 ) = 'FIN' 
               BEGIN 
                  IF @nA2_MNOTA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MNOTA  = @nValorAux 
                  END 
               END 
               ELSE 
               BEGIN 
                  SELECT @nF1_VALBRUT  = F1_VALBRUT , @cF1_EMISSAO  = F1_EMISSAO 
                    FROM SF1010 
                    WHERE F1_FILIAL  = @cFilial_F1  and F1_DOC  = @cNum  and F1_SERIE  = @cPrefixo  and F1_FORNECE  = @cFornece 
                     and F1_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                  SET @nAux  = 1 
                  EXEC MAT021_09_01 @nF1_VALBRUT , @cF1_EMISSAO , @nAux , @nMoedaForte , @nValorAux output 
                  IF @nA2_MNOTA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MNOTA  = @nValorAux 
                  END 
               END 
               IF @iNroRegs  = 1 
               BEGIN 
                  SET @iNroRegs  = @iNroRegs 
                  Begin Tran 
               END 
               IF  (@IN_MVPAR02  = '1' ) 
               BEGIN 
                  UPDATE SA2010 
                    WITH (ROWLOCK) 
                     SET A2_SALDUP  = @nA2_SALDUP , A2_SALDUPM  = @nA2_SALDUPM , A2_PRICOM  = @cA2_PRICOM , A2_ULTCOM  = @cA2_ULTCOM 
                    , A2_MCOMPRA  = @nA2_MCOMPRA , A2_MNOTA  = @nA2_MNOTA , A2_NROCOM  = @nA2_NROCOM , A2_MSALDO  = @nA2_MSALDO 
                    
                   WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               ELSE 
               BEGIN 
                  UPDATE SA2010 
                    WITH (ROWLOCK) 
                     SET A2_SALDUP  = @nA2_SALDUP , A2_SALDUPM  = @nA2_SALDUPM , A2_PRICOM  = @cA2_PRICOM , A2_ULTCOM  = @cA2_ULTCOM 
                    , A2_MCOMPRA  = @nA2_MCOMPRA , A2_MNOTA  = @nA2_MNOTA 
                   WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               IF @iNroRegs  >= 1024 
               BEGIN 
                  Commit Tran 
                  SET @iNroRegs  = 0 
               END 
               FETCH curSE2 
                INTO @cFornece , @cLoja , @nSaldo , @nMoeda , @cEmissao , @cTipo , @cOrigem , @cNum , @cPrefixo , @nValor 
            END 
            CLOSE curSE2
            DEALLOCATE curSE2
            IF @iNroRegs  > 0 
            BEGIN 
                Commit Transaction  
            END 
         END 
         IF @cFilial_A2  = ' '  and @cFilial_E2  = ' ' 
         BEGIN 
            SET @lExecE2  = '0' 
         END 
      END 
      IF @iPosFil  > LEN ( @cFiliais )
      BEGIN 
         IF LEN ( @IN_ARRAYFIL2 ) >= @IN_TAMFIL  and @lArrayFil2  = '1' 
         BEGIN 
            SET @cFiliais  = @IN_ARRAYFIL2 
            SET @iPosFil  = 1 
            SET @lArrayFil2  = '0' 
         END 
         ELSE 
         BEGIN 
            IF LEN ( @IN_ARRAYFIL3 ) >= @IN_TAMFIL  and @lArrayFil3  = '1' 
            BEGIN 
               SET @cFiliais  = @IN_ARRAYFIL3 
               SET @iPosFil  = 1 
               SET @lArrayFil3  = '0' 
            END 
            ELSE 
            BEGIN 
               IF LEN ( @IN_ARRAYFIL4 ) >= @IN_TAMFIL  and @lArrayFil4  = '1' 
               BEGIN 
                  SET @cFiliais  = @IN_ARRAYFIL4 
                  SET @iPosFil  = 1 
                  SET @lArrayFil4  = '0' 
               END 
               ELSE 
               BEGIN 
                  IF LEN ( @IN_ARRAYFIL5 ) >= @IN_TAMFIL  and @lArrayFil5  = '1' 
                  BEGIN 
                     SET @cFiliais  = @IN_ARRAYFIL5 
                     SET @iPosFil  = 1 
                     SET @lArrayFil5  = '0' 
                  END 
                  ELSE 
                  BEGIN 
                     IF LEN ( @IN_ARRAYFIL6 ) >= @IN_TAMFIL  and @lArrayFil6  = '1' 
                     BEGIN 
                        SET @cFiliais  = @IN_ARRAYFIL6 
                        SET @iPosFil  = 1 
                        SET @lArrayFil6  = '0' 
                     END 
                     ELSE 
                     BEGIN 
                        IF LEN ( @IN_ARRAYFIL7 ) >= @IN_TAMFIL  and @lArrayFil7  = '1' 
                        BEGIN 
                           SET @cFiliais  = @IN_ARRAYFIL7 
                           SET @iPosFil  = 1 
                           SET @lArrayFil7  = '0' 
                        END 
                        ELSE 
                        BEGIN 
                           IF LEN ( @IN_ARRAYFIL8 ) >= @IN_TAMFIL  and @lArrayFil8  = '1' 
                           BEGIN 
                              SET @cFiliais  = @IN_ARRAYFIL8 
                              SET @iPosFil  = 1 
                              SET @lArrayFil8  = '0' 
                           END 
                           ELSE 
                           BEGIN 
                              IF LEN ( @IN_ARRAYFIL9 ) >= @IN_TAMFIL  and @lArrayFil9  = '1' 
                              BEGIN 
                                 SET @cFiliais  = @IN_ARRAYFIL9 
                                 SET @iPosFil  = 1 
                                 SET @lArrayFil9  = '0' 
                              END 
                           END 
                        END 
                     END 
                  END 
               END 
            END 
         END 
      END 
      SET @cFil_A1_Ant  = @cFilial_A1 
      SET @cFil_A2_Ant  = @cFilial_A2 
      SET @cFil_E1_Ant  = @cFilial_E1 
      SET @cFil_E2_Ant  = @cFilial_E2 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[FIN003_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN003_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN003_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN003_09_02]
(
    @IN_MVPAR01 Char( 01 ) , 
    @IN_MVPAR02 Char( 01 ) , 
    @IN_MCUSTO Char( 01 ) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_TIPOCR VarChar( 250 ) , 
    @IN_TIPOCR1 VarChar( 250 ) , 
    @IN_TIPOCP VarChar( 250 ) , 
    @IN_TIPOLC VarChar( 250 ) , 
    @IN_CLIDE Char( 14) , 
    @IN_CLIATE Char( 14) , 
    @IN_FORDE Char( 14) , 
    @IN_FORATE Char( 14) , 
    @IN_ARRAYFIL1 VarChar( 240 ) , 
    @IN_ARRAYFIL2 VarChar( 240 ) , 
    @IN_ARRAYFIL3 VarChar( 240 ) , 
    @IN_ARRAYFIL4 VarChar( 240 ) , 
    @IN_ARRAYFIL5 VarChar( 240 ) , 
    @IN_ARRAYFIL6 VarChar( 240 ) , 
    @IN_ARRAYFIL7 VarChar( 240 ) , 
    @IN_ARRAYFIL8 VarChar( 240 ) , 
    @IN_ARRAYFIL9 VarChar( 240 ) , 
    @IN_TAMFIL Integer , 
    @IN_MODULO Float , 
    @IN_CLIPAD Char( 14) , 
    @IN_LOJPAD Char( 4) , 
    @IN_SCFILTRO Char( 01 ) , 
    @OUT_RESULTADO Char( 1 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_A1_Ant Char( 2)
DECLARE @cFil_A2_Ant Char( 2)
DECLARE @cFil_E1_Ant Char( 2)
DECLARE @cFil_E2_Ant Char( 2)
DECLARE @cFilial_A1 Char( 2)
DECLARE @cFilial_A2 Char( 2)
DECLARE @cFilial_E1 Char( 2)
DECLARE @cFilial_E2 Char( 2)
DECLARE @cFilial_E5 Char( 2)
DECLARE @cFilial_F1 Char( 2)
DECLARE @cFilial_F2 Char( 2)
DECLARE @cFilial Char( 2)
DECLARE @cMsFil Char( 2)
DECLARE @iprimeiro_recno Integer
DECLARE @iultimo_recno Integer
DECLARE @nValor Float
DECLARE @nSaldo Float
DECLARE @nValLiq Float
DECLARE @nVlcruz Float
DECLARE @cCliente Char( 14)
DECLARE @cLoja Char( 4)
DECLARE @cCliAux Char( 14)
DECLARE @cLojaAux Char( 4)
DECLARE @nMoeda Float
DECLARE @cEmissao Char( 08 )
DECLARE @cTipo Char( 3)
DECLARE @cVencto Char( 08 )
DECLARE @cVencReal Char( 08 )
DECLARE @cBaixa Char( 08 )
DECLARE @nMoedaForte Float
DECLARE @nA1_SALDUP Float
DECLARE @nA1_SALDUPM Float
DECLARE @nA1_SALFIN Float
DECLARE @nA1_SALFINM Float
DECLARE @nA1_MAIDUPL Float
DECLARE @nA1_ATR Float
DECLARE @nA1_PAGATR Float
DECLARE @nA1_NROPAG Float
DECLARE @nA1_VACUM Float
DECLARE @nA1_MOEDALC Float
DECLARE @nA1_MSALDO Float
DECLARE @nA1_MATR Float
DECLARE @nA1_METR Float
DECLARE @nA1_MCOMPRA Float
DECLARE @nA1_NROCOM Float
DECLARE @cA1_PRICOM Char( 8)
DECLARE @cA1_ULTCOM Char( 8)
DECLARE @iPos Integer
DECLARE @iPos1 Integer
DECLARE @iPosFil Integer
DECLARE @nSaldoTit Float
DECLARE @cFornece Char( 14)
DECLARE @nMoedaSalDup Float
DECLARE @nMoedaSalDupM Float
DECLARE @nMoedaSalFin Float
DECLARE @nMoedaSalFinM Float
DECLARE @nMoedaMaiDup Float
DECLARE @nSaldoAcum Float
DECLARE @nMCompra Float
DECLARE @nMSaldo Float
DECLARE @nMSaldoAux Float
DECLARE @nA2_SALDUP Float
DECLARE @nA2_SALDUPM Float
DECLARE @nA2_MCOMPRA Float
DECLARE @nA2_MNOTA Float
DECLARE @nA2_MSALDO Float
DECLARE @nA2_NROCOM Float
DECLARE @nValorAux Float
DECLARE @cA2_PRICOM Char( 8)
DECLARE @cA2_ULTCOM Char( 8)
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @iRecnoLocaliz Integer
DECLARE @iDiferencaDATA Integer
DECLARE @cPrefixo Char( 3)
DECLARE @cNum Char( 8)
DECLARE @cParcela Char( 1)
DECLARE @nQtdBaixas Integer
DECLARE @cOrigem Char( 8)
DECLARE @cOrigemAux Char( 8)
DECLARE @nF2_VALFAT Float
DECLARE @lA1Zerado Char( 01 )
DECLARE @lA2Zerado Char( 01 )
DECLARE @cFatura Char( 8)
DECLARE @cPedido Char( 6)
DECLARE @cPedAux Char( 6)
DECLARE @lExecE1 Char( 01 )
DECLARE @lExecE2 Char( 01 )
DECLARE @iNroRegs Integer
DECLARE @iTranCount Integer
DECLARE @lLojaCartao Char( 01 )
DECLARE @cCliente_SF2 Char( 14)
DECLARE @cLoja_SF2 Char( 4)
DECLARE @nF1_VALBRUT Float
DECLARE @cF1_EMISSAO Char( 08 )
DECLARE @nMaiorVda Float
DECLARE @iRecnoSF2 Integer
DECLARE @cSerie Char( 3)
DECLARE @cFiliais VarChar( 240 )
DECLARE @lArrayFil2 Char( 01 )
DECLARE @lArrayFil3 Char( 01 )
DECLARE @lArrayFil4 Char( 01 )
DECLARE @lArrayFil5 Char( 01 )
DECLARE @lArrayFil6 Char( 01 )
DECLARE @lArrayFil7 Char( 01 )
DECLARE @lArrayFil8 Char( 01 )
DECLARE @lArrayFil9 Char( 01 )
DECLARE @lNroExecSE1 Char( 01 )
DECLARE @lNroExecSE2 Char( 01 )
DECLARE @nResult Char( 01 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @nMoeda  = 0 
   SET @iDiferencaDATA  = 0 
   SET @iNroRegs  = 0 
   SET @nMoedaForte  = CONVERT( Float ,@IN_MCUSTO )
   SET @lA1Zerado  = '0' 
   SET @lA2Zerado  = '0' 
   SET @lExecE1  = '1' 
   SET @lExecE2  = '1' 
   SET @cCliente_SF2  = '' 
   SET @cLoja_SF2  = '' 
   SET @iRecnoSF2  = 0 
   SET @cFiliais  = @IN_ARRAYFIL1 
   SET @lArrayFil2  = '0' 
   SET @lArrayFil3  = '0' 
   SET @lArrayFil4  = '0' 
   SET @lArrayFil5  = '0' 
   SET @lArrayFil6  = '0' 
   SET @lArrayFil7  = '0' 
   SET @lArrayFil8  = '0' 
   SET @lArrayFil9  = '0' 
   SET @cFil_A1_Ant  = '0' 
   SET @cFil_A2_Ant  = '0' 
   SET @cFil_E1_Ant  = '' 
   SET @cFil_E2_Ant  = '' 
   IF LEN ( @IN_ARRAYFIL2 ) > 0 
   BEGIN 
      SET @lArrayFil2  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL3 ) > 0 
   BEGIN 
      SET @lArrayFil3  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL4 ) > 0 
   BEGIN 
      SET @lArrayFil4  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL5 ) > 0 
   BEGIN 
      SET @lArrayFil5  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL6 ) > 0 
   BEGIN 
      SET @lArrayFil6  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL7 ) > 0 
   BEGIN 
      SET @lArrayFil7  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL8 ) > 0 
   BEGIN 
      SET @lArrayFil8  = '1' 
   END 
   IF LEN ( @IN_ARRAYFIL9 ) > 0 
   BEGIN 
      SET @lArrayFil9  = '1' 
   END 
   SET @iPosFil  = 1 
   SET @cPedAux  = '' 
   SET @nMSaldo  = 0 
   SET @cCliAux  = '' 
   SET @cLojaAux  = '' 
   SET @lNroExecSE1  = '0' 
   SET @lNroExecSE2  = '0' 
   WHILE (@iPosFil  <= LEN ( @cFiliais ))
   BEGIN
      SET @cFilial  = SUBSTRING ( @cFiliais , @iPosFil , @IN_TAMFIL )
      SET @iPosFil  = @iPosFil  + @IN_TAMFIL 
      SET @cAux  = 'SA1' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_A1 output 
      SET @cAux  = 'SA2' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_A2 output 
      SET @cAux  = 'SE1' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_E1 output 
      SET @cAux  = 'SE2' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_E2 output 
      SET @cAux  = 'SE5' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_E5 output 
      SET @cAux  = 'SF1' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_F1 output 
      SET @cAux  = 'SF2' 
      EXEC XFILIAL_09_02 @cAux , @cFilial , @cFilial_F2 output 
      IF @cFilial_A1  = @cFil_A1_Ant 
      BEGIN 
         SET @lA1Zerado  = '1' 
      END 
      IF @cFilial_A2  = @cFil_A2_Ant 
      BEGIN 
         SET @lA2Zerado  = '1' 
      END 
      IF  (@IN_MVPAR01  <> '3' ) 
      BEGIN 
         IF @lExecE1  = '1' 
         BEGIN 
            IF @lA1Zerado  = '0' 
            BEGIN 
               IF @cFilial_A1  = ' ' 
               BEGIN 
                  SET @lA1Zerado  = '1' 
               END 
               SELECT @iprimeiro_recno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iultimo_recno  = COALESCE ( MAX ( R_E_C_N_O_ ), 
                      0 )
                 FROM SA1030 
                 WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and D_E_L_E_T_  = ' ' 
               WHILE ( (@iprimeiro_recno  <= @iultimo_recno ) )
               BEGIN
                  begin tran 
                  IF  (@IN_SCFILTRO  = '2' ) 
                  BEGIN 
                     EXEC F410SCFT_A1_09_02 @IN_MVPAR02 , @cFilial_A1 , @IN_CLIDE , @IN_CLIATE , @iprimeiro_recno 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_MVPAR02  = '1' ) 
                     BEGIN 
                        UPDATE SA1030 
                          WITH (ROWLOCK) 
                           SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 , A1_MSALDO  = 0 
                          , A1_METR  = 0 , A1_MATR  = 0 , A1_MAIDUPL  = 0 , A1_ATR  = 0 , A1_PAGATR  = 0 , A1_NROPAG  = 0 
                          , A1_ULTCOM  = ' ' , A1_MCOMPRA  = 0 , A1_NROCOM  = 0 
                         WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                     ELSE 
                     BEGIN 
                        UPDATE SA1030 
                          WITH (ROWLOCK) 
                           SET A1_SALDUP  = 0 , A1_SALDUPM  = 0 , A1_SALFIN  = 0 , A1_SALFINM  = 0 , A1_VACUM  = 0 
                         WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  between @IN_CLIDE and @IN_CLIATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                  END 
                  commit tran 
                  SET @iprimeiro_recno  = @iprimeiro_recno  + 1024 
               END 
            END 
         END 
      END 
      IF  (@IN_MVPAR01  <> '2' ) 
      BEGIN 
         IF @lExecE2  = '1' 
         BEGIN 
            IF @lA2Zerado  = '0' 
            BEGIN 
               IF @cFilial_A2  = ' ' 
               BEGIN 
                  SET @lA2Zerado  = '1' 
               END 
               SELECT @iprimeiro_recno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @iultimo_recno  = COALESCE ( MAX ( R_E_C_N_O_ ), 
                      0 )
                 FROM SA2030 
                 WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and D_E_L_E_T_  = ' ' 
               WHILE (@iprimeiro_recno  <= @iultimo_recno )
               BEGIN
                  begin tran 
                  IF  (@IN_SCFILTRO  = '2' ) 
                  BEGIN 
                     EXEC F410SCFT_A2_09_02 @IN_MVPAR02 , @cFilial_A2 , @IN_FORDE , @IN_FORATE , @iprimeiro_recno 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@IN_MVPAR02  = '1' ) 
                     BEGIN 
                        UPDATE SA2030 
                          WITH (ROWLOCK) 
                           SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 , A2_NROCOM  = 0 , A2_MSALDO  = 0 
                          
                         WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                     ELSE 
                     BEGIN 
                        UPDATE SA2030 
                          WITH (ROWLOCK) 
                           SET A2_SALDUP  = 0 , A2_SALDUPM  = 0 , A2_MCOMPRA  = 0 , A2_MNOTA  = 0 
                         WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  between @IN_FORDE and @IN_FORATE  and R_E_C_N_O_  between @iprimeiro_recno and @iprimeiro_recno  + 1024 
                           and D_E_L_E_T_  = ' ' 
                     END 
                  END 
                  commit tran 
                  SET @iprimeiro_recno  = @iprimeiro_recno  + 1024 
               END 
            END 
         END 
      END 
      IF  (@cFilial_E1  <> ' ' )  and  (@cFilial_A1  <> ' ' )  and @IN_TAMFIL  = 2 
      BEGIN 
         SET @cFilial_A1  = @cFilial_E1 
      END 
      IF  (@cFilial_E2  <> ' ' )  and  (@cFilial_A2  <> ' ' )  and @IN_TAMFIL  = 2 
      BEGIN 
         SET @cFilial_A2  = @cFilial_E2 
      END 
      IF  (@IN_MVPAR01  <> '3' )  and  ( (@lNroExecSE1  = '0' )  or  (@cFil_E1_Ant  <> @cFilial_E1 )  or  (@cFil_A1_Ant  <> @cFilial_A1 
        ) ) 
      BEGIN 
         IF @lExecE1  = '1' 
         BEGIN 
            SET @iNroRegs  = 0 
            SET @lNroExecSE1  = '1' 
            IF  (@IN_SCFILTRO  = '2' ) 
            BEGIN 
               EXEC F410SCFT_E1_09_02 @cFilial_E1 , @cFilial_A1 , @IN_CLIDE , @IN_CLIATE , @nResult 
            END 
            ELSE 
            BEGIN 
                
               -- Cursor declaration curSE1
               DECLARE curSE1  CURSOR FOR 
               SELECT E1_VALOR , E1_SALDO , E1_VALLIQ , E1_VLCRUZ , E1_CLIENTE , E1_LOJA , E1_MOEDA , E1_EMISSAO , E1_TIPO , 
                      E1_VENCTO , E1_VENCREA , E1_BAIXA , E1_PREFIXO , E1_NUM , E1_PARCELA , E1_ORIGEM , E1_FATURA , E1_MSFIL , 
                      E1_PEDIDO , E1_SERIE 
                 FROM SE1030 SE1, SA1030 SA1
                 WHERE SE1.E1_FILIAL  = @cFilial_E1  and SA1.A1_FILIAL  = @cFilial_A1  and SA1.A1_COD  between @IN_CLIDE and @IN_CLIATE 
                  and SA1.A1_COD  = SE1.E1_CLIENTE  and SA1.A1_LOJA  = SE1.E1_LOJA  and SE1.D_E_L_E_T_  = ' '  and SA1.D_E_L_E_T_  = ' ' 
                 
                
            END 
            OPEN curSE1
            FETCH curSE1 
             INTO @nValor , @nSaldo , @nValLiq , @nVlcruz , @cCliente , @cLoja , @nMoeda , @cEmissao , @cTipo , @cVencto , 
                   @cVencReal , @cBaixa , @cPrefixo , @cNum , @cParcela , @cOrigem , @cFatura , @cMsFil , @cPedido , @cSerie 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iNroRegs  = @iNroRegs  + 1 
               SET @lLojaCartao  = '0' 
               IF SUBSTRING ( @cOrigem , 1 , 3 ) = 'LOJ' 
               BEGIN 
                  IF @cTipo in ( 'CC' , 'VA' , 'CO' , 'CD' , 'FI'  ) 
                  BEGIN 
                     SET @lLojaCartao  = '1' 
                  END 
               END 
               IF @lLojaCartao  = '1' 
               BEGIN 
                  IF @cFilial_F2  <> ' ' 
                  BEGIN 
                     SET @cFilial_F2  = @cMsFil 
                  END 
                  SELECT @cCliente_SF2  = F2_CLIENTE , @cLoja_SF2  = F2_LOJA 
                    FROM SF2030 
                    WHERE F2_FILIAL  = @cFilial_F2  and F2_DOC  = @cNum  and F2_SERIE  = @cPrefixo  and D_E_L_E_T_  = ' ' 
                    
                  IF @cCliente_SF2  <> ' ' 
                  BEGIN 
                     SET @cCliente  = @cCliente_SF2 
                  END 
                  IF @cLoja_SF2  <> ' ' 
                  BEGIN 
                     SET @cLoja  = @cLoja_SF2 
                  END 
               END 
               SELECT @nA1_SALDUP  = A1_SALDUP , @nA1_SALDUPM  = A1_SALDUPM , @nA1_MAIDUPL  = A1_MAIDUPL , @nA1_ATR  = A1_ATR 
                 , @nA1_PAGATR  = A1_PAGATR , @nA1_NROPAG  = A1_NROPAG , @nA1_VACUM  = A1_VACUM , @cA1_PRICOM  = A1_PRICOM 
                 , @cA1_ULTCOM  = A1_ULTCOM , @nA1_MOEDALC  = A1_MOEDALC , @nA1_SALFIN  = A1_SALFIN , @nA1_SALFINM  = A1_SALFINM 
                 , @nA1_MSALDO  = A1_MSALDO , @nA1_MATR  = A1_MATR , @nA1_METR  = A1_METR , @nA1_MCOMPRA  = A1_MCOMPRA , 
                      @nA1_NROCOM  = A1_NROCOM 
                 FROM SA1030 
                 WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  = @cCliente  and A1_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
               SET @nMoedaSalDup  = 0 
               SET @nMoedaSalDupM  = 0 
               SET @nMoedaSalFin  = 0 
               SET @nMoedaSalFinM  = 0 
               SET @nMoedaMaiDup  = 0 
               SET @nMaiorVda  = 0 
               SET @nMSaldoAux  = 0 
               SET @nSaldoAcum  = 0 
               SET @iPos  = 0 
               SET @iPos1  = 0 
               SET @nQtdBaixas  = 0 
               IF  (@nA1_MOEDALC  > 0  and @nA1_MOEDALC is NOT null ) 
               BEGIN 
                  SET @nMoedaForte  = @nA1_MOEDALC 
               END 
               IF  ( (@cCliente  + @cLoja )  <>  (@cCliAux  + @cLojaAux ) ) 
               BEGIN 
                  SET @cCliAux  = @cCliente 
                  SET @cLojaAux  = @cLoja 
                  SET @nMSaldo  = 0 
               END 
               SET @iPos  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOCR )
               IF @iPos  = 0 
               BEGIN 
                  SET @iPos  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOCR )
               END 
               IF @iPos  > 0 
               BEGIN 
                  SET @iPos1  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOLC )
                  IF @iPos1  = 0 
                  BEGIN 
                     SET @iPos1  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOLC )
                  END 
                  IF @iPos1  <> 0 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nAux , @nMoedaSalFin output 
                     EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalFinM output 
                     SET @nA1_SALFIN  = @nA1_SALFIN  - @nMoedaSalFin 
                     SET @nA1_SALFINM  = @nA1_SALFINM  - @nMoedaSalFinM 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                     EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                     SET @nA1_SALDUP  = @nA1_SALDUP  - @nMoedaSalDup 
                     SET @nA1_SALDUPM  = @nA1_SALDUPM  - @nMoedaSalDupM 
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @nSaldoTit  = @nSaldo 
                  SET @iPos1  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOLC )
                  IF @iPos1  = 0 
                  BEGIN 
                     SET @iPos1  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOLC )
                  END 
                  IF @iPos1  <> 0 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_02 @nSaldoTit , @cEmissao , @nMoeda , @nAux , @nMoedaSalFin output 
                     EXEC MAT021_09_02 @nSaldoTit , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalFinM output 
                     SET @nA1_SALFIN  = @nA1_SALFIN  + @nMoedaSalFin 
                     SET @nA1_SALFINM  = @nA1_SALFINM  + @nMoedaSalFinM 
                  END 
                  ELSE 
                  BEGIN 
                     SET @nAux  = 1 
                     EXEC MAT021_09_02 @nSaldoTit , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                     EXEC MAT021_09_02 @nSaldoTit , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                     SET @nA1_SALDUP  = @nA1_SALDUP  + @nMoedaSalDup 
                     SET @nA1_SALDUPM  = @nA1_SALDUPM  + @nMoedaSalDupM 
                  END 
                  IF @cA1_PRICOM is null  or @cA1_PRICOM  > @cEmissao 
                  BEGIN 
                     SET @cA1_PRICOM  = @cEmissao 
                  END 
                  IF  (@IN_MVPAR02  = '1' ) 
                  BEGIN 
                     IF @cA1_ULTCOM is null  or @cA1_ULTCOM  < @cEmissao 
                     BEGIN 
                        SET @cA1_ULTCOM  = @cEmissao 
                     END 
                  END 
                  IF  (SUBSTRING ( @cEmissao , 1 , 4 ) = SUBSTRING ( @IN_DATABASE , 1 , 4 ) and @cOrigem  != 'FINA280' ) 
                    
                  BEGIN 
                     EXEC MAT021_09_02 @nValor , @cEmissao , @nMoeda , @nMoedaForte , @nSaldoAcum output 
                     SET @nA1_VACUM  = @nA1_VACUM  + @nSaldoAcum 
                  END 
                  SET @cOrigemAux  = @cOrigem 
                  IF @cTipo  != 'PR ' 
                  BEGIN 
                     IF @cOrigemAux  = 'MATA460' 
                     BEGIN 
                        IF @cFilial_F2  <> ' '  and @cMsFil  != ' ' 
                        BEGIN 
                           SET @cFilial_F2  = @cMsFil 
                        END 
                        SELECT @iRecnoSF2  = COALESCE ( R_E_C_N_O_ , 0 )
                          FROM SF2030 
                          WHERE F2_FILIAL  = @cFilial_F2  and F2_CLIENTE  = @cCliente  and F2_LOJA  = @cLoja  and F2_DOC  = @cNum 
                           and F2_SERIE  = @cPrefixo  and D_E_L_E_T_  = ' ' 
                        IF @iRecnoSF2  = 0 
                        BEGIN 
                           SELECT @nF2_VALFAT  = COALESCE ( F2_VALFAT , 0 )
                             FROM SF2030 
                             WHERE F2_FILIAL  = @cFilial_F2  and F2_CLIENTE  = @cCliente  and F2_LOJA  = @cLoja  and F2_DOC  = @cNum 
                              and F2_SERIE  = @cSerie  and D_E_L_E_T_  = ' ' 
                        END 
                        ELSE 
                        BEGIN 
                           SELECT @nF2_VALFAT  = COALESCE ( F2_VALFAT , 0 )
                             FROM SF2030 
                             WHERE F2_FILIAL  = @cFilial_F2  and F2_CLIENTE  = @cCliente  and F2_LOJA  = @cLoja  and F2_DOC  = @cNum 
                              and F2_SERIE  = @cPrefixo  and D_E_L_E_T_  = ' ' 
                        END 
                        EXEC MAT021_09_02 @nF2_VALFAT , @cEmissao , @nMoeda , @nMoedaForte , @nMaiorVda output 
                     END 
                     ELSE 
                     BEGIN 
                        EXEC MAT021_09_02 @nValor , @cEmissao , @nMoeda , @nMoedaForte , @nMaiorVda output 
                     END 
                     IF  (@nA1_MCOMPRA  < @nMaiorVda ) 
                     BEGIN 
                        SET @nA1_MCOMPRA  = @nMaiorVda 
                     END 
                     EXEC MAT021_09_02 @nValor , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaMaiDup output 
                     IF  (@nA1_MAIDUPL  < @nMoedaMaiDup  and @IN_MVPAR02  = '1' ) 
                     BEGIN 
                        SET @nA1_MAIDUPL  = @nMoedaMaiDup 
                     END 
                     SELECT @nQtdBaixas  = COUNT ( * )
                       FROM SE5030 SE5
                       WHERE E5_FILIAL  = @cFilial_E5  and E5_PREFIXO  = @cPrefixo  and E5_NUMERO  = @cNum  and E5_PARCELA  = @cParcela 
                        and E5_TIPO  = @cTipo  and E5_CLIFOR  = @cCliente  and E5_LOJA  = @cLoja  and E5_TIPODOC in ( 'VL' , 
                            'BA' , 'CP' , 'LJ' , 'RA' , 'PA' , 'V2'  )  and E5_SITUACA NOT IN ( 'C' , 'E' , 'X'  )  and E5_TIPODOC  <> 'ES' 
                        and NOT EXISTS (
                     SELECT 0 
                       FROM SE5030 A
                       WHERE A.E5_FILIAL  = SE5.E5_FILIAL  and A.E5_NATUREZ  = SE5.E5_NATUREZ  and A.E5_PREFIXO  = SE5.E5_PREFIXO 
                        and A.E5_NUMERO  = SE5.E5_NUMERO  and A.E5_PARCELA  = SE5.E5_PARCELA  and A.E5_TIPO  = SE5.E5_TIPO 
                        and A.E5_CLIFOR  = SE5.E5_CLIFOR  and A.E5_LOJA  = SE5.E5_LOJA  and A.E5_SEQ  = SE5.E5_SEQ  and A.E5_TIPODOC  = 'ES' 
                        and A.D_E_L_E_T_  = ' ' )  and D_E_L_E_T_  = ' ' 
                     IF  (@IN_MVPAR02  = '1'  and  (@cFatura  = ' '  or SUBSTRING ( @cFatura , 1 , 6 ) = 'NOTFAT' ) ) 
                     BEGIN 
                        IF  (@IN_MODULO  != 12  or @IN_MODULO  != 72 )  or  ( (@IN_CLIPAD  != @cCliente  and @IN_LOJPAD  != @cLoja 
                          ) ) 
                        BEGIN 
                           SET @nA1_NROPAG  = @nA1_NROPAG  + @nQtdBaixas 
                        END 
                     END 
                     IF @nSaldo  = 0 
                     BEGIN 
                        IF  (@cFatura  = ' '  or SUBSTRING ( @cFatura , 1 , 6 ) = 'NOTFAT' ) 
                        BEGIN 
                           IF  ( (@cVencReal  < @cBaixa )  and @IN_MVPAR02  = '1' ) 
                           BEGIN 
                              EXEC MAT021_09_02 @nValLiq , @cEmissao , @nMoeda , @nMoedaForte , @nValLiq output 
                           END 
                           SET @nA1_PAGATR  = @nA1_PAGATR  + @nValLiq 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        SET @iPos1  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOCR1 )
                        IF @iPos1  = 0 
                        BEGIN 
                           SET @iPos1  = CHARINDEX ( '|'  + @cTipo , @IN_TIPOCR1 )
                        END 
                        IF  ( (@cVencReal  < @IN_DATABASE )  and @IN_MVPAR02  = '1' ) 
                        BEGIN 
                           IF @iPos1  = 0 
                           BEGIN 
                              EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nSaldo output 
                           END 
                           SET @nA1_ATR  = @nA1_ATR  + @nSaldo 
                        END 
                     END 
                     IF  (@IN_MVPAR02  = '1' ) 
                     BEGIN 
                        IF @cBaixa  <> ' ' 
                        BEGIN 
                           SET @iDiferencaDATA  =  (DATEDIFF ( DAY , @cVencReal , @cBaixa )) 
                        END 
                        IF @nSaldo  > 0 
                        BEGIN 
                           EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMSaldoAux output 
                           SET @nMSaldo  = @nMSaldo  + @nMSaldoAux 
                        END 
                        IF  (@nA1_SALDUPM  > @nA1_MSALDO ) 
                        BEGIN 
                           SET @nA1_MSALDO  = @nA1_SALDUPM 
                        END 
                        ELSE 
                        BEGIN 
                           IF  (@nMSaldo  > @nA1_MSALDO ) 
                           BEGIN 
                              SET @nA1_MSALDO  = @nMSaldo 
                           END 
                           ELSE 
                           BEGIN 
                              SET @nA1_MSALDO  = @nA1_MSALDO 
                           END 
                        END 
                        EXEC MAT021_09_02 @nValor , @cEmissao , 1 , @nMoedaForte , @nMCompra output 
                        IF @nMCompra  > @nA1_MCOMPRA 
                        BEGIN 
                           SET @nA1_MCOMPRA  = @nMCompra 
                        END 
                        IF @cOrigem  != 'FINA280' 
                        BEGIN 
                           IF @cPedido  != ' ' 
                           BEGIN 
                              IF @cPedido  != @cPedAux 
                              BEGIN 
                                 SET @nA1_NROCOM  = @nA1_NROCOM  + 1 
                              END 
                           END 
                           ELSE 
                           BEGIN 
                              SET @nA1_NROCOM  = @nA1_NROCOM  + 1 
                           END 
                        END 
                        IF  (@cFatura  = ' '  or SUBSTRING ( @cFatura , 1 , 6 ) = 'NOTFAT' ) 
                        BEGIN 
                           IF  (@iDiferencaDATA  > @nA1_MATR ) 
                           BEGIN 
                              SET @nA1_MATR  = @iDiferencaDATA 
                           END 
                           IF  (@cBaixa  <> ' '  and @nA1_NROPAG  > 0 ) 
                           BEGIN 
                              SET @nA1_METR  =  (@nA1_METR  *  (@nA1_NROPAG  - 1 )  + @iDiferencaDATA )  / @nA1_NROPAG 
                           END 
                        END 
                     END 
                  END 
               END 
               SET @cPedAux  = @cPedido 
               IF @iNroRegs  = 1 
               BEGIN 
                  SET @iNroRegs  = @iNroRegs 
                  Begin Tran 
               END 
               UPDATE SA1030 
                 WITH (ROWLOCK) 
                  SET A1_SALDUP  = @nA1_SALDUP , A1_SALDUPM  = @nA1_SALDUPM , A1_VACUM  = @nA1_VACUM , A1_MAIDUPL  = @nA1_MAIDUPL 
                 , A1_ATR  = @nA1_ATR , A1_NROPAG  = @nA1_NROPAG , A1_PAGATR  = @nA1_PAGATR , A1_PRICOM  = @cA1_PRICOM , 
                      A1_ULTCOM  = @cA1_ULTCOM , A1_SALFIN  = @nA1_SALFIN , A1_SALFINM  = @nA1_SALFINM , A1_MSALDO  = @nA1_MSALDO 
                 , A1_MATR  = @nA1_MATR , A1_METR  = @nA1_METR , A1_MCOMPRA  = @nA1_MCOMPRA , A1_NROCOM  = @nA1_NROCOM 
                WHERE A1_FILIAL  = @cFilial_A1  and A1_COD  = @cCliente  and A1_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
               IF @iNroRegs  >= 1024 
               BEGIN 
                  Commit Tran 
                  SET @iNroRegs  = 0 
               END 
               FETCH curSE1 
                INTO @nValor , @nSaldo , @nValLiq , @nVlcruz , @cCliente , @cLoja , @nMoeda , @cEmissao , @cTipo , @cVencto , 
                      @cVencReal , @cBaixa , @cPrefixo , @cNum , @cParcela , @cOrigem , @cFatura , @cMsFil , @cPedido , @cSerie 
            END 
            CLOSE curSE1
            DEALLOCATE curSE1
            IF @iNroRegs  > 0 
            BEGIN 
                Commit Transaction  
            END 
         END 
         IF @cFilial_A1  = ' '  and @cFilial_E1  = ' ' 
         BEGIN 
            SET @lExecE1  = '0' 
         END 
      END 
      IF  (@IN_MVPAR01  <> '2' )  and  ( (@lNroExecSE2  = '0' )  or  (@cFil_E2_Ant  <> @cFilial_E2 )  or  (@cFil_A2_Ant  <> @cFilial_A2 
        ) ) 
      BEGIN 
         SET @nMoedaForte  = CONVERT( Float ,@IN_MCUSTO )
         SET @nValorAux  = 0 
         IF @lExecE2  = '1' 
         BEGIN 
            SET @iPos  = 0 
            SET @iNroRegs  = 0 
            SET @lNroExecSE2  = '1' 
            IF  (@IN_SCFILTRO  = '2' ) 
            BEGIN 
               EXEC F410SCFT_E2_09_02 @cFilial_E2 , @cFilial_A2 , @IN_FORDE , @IN_FORATE , @nResult 
            END 
            ELSE 
            BEGIN 
                
               -- Cursor declaration curSE2
               DECLARE curSE2  CURSOR FOR 
               SELECT E2_FORNECE , E2_LOJA , E2_SALDO , E2_MOEDA , E2_EMISSAO , E2_TIPO , E2_ORIGEM , E2_NUM , E2_PREFIXO , 
                      E2_VALOR 
                 FROM SE2030 SE2, SA2030 SA2
                 WHERE SE2.E2_FILIAL  = @cFilial_E2  and SA2.A2_FILIAL  = @cFilial_A2  and SE2.E2_FORNECE  = SA2.A2_COD  and SE2.E2_LOJA  = SA2.A2_LOJA 
                  and SA2.A2_COD  between @IN_FORDE and @IN_FORATE  and SE2.D_E_L_E_T_  = ' '  and SA2.D_E_L_E_T_  = ' ' 
                 
                
            END 
            OPEN curSE2
            FETCH curSE2 
             INTO @cFornece , @cLoja , @nSaldo , @nMoeda , @cEmissao , @cTipo , @cOrigem , @cNum , @cPrefixo , @nValor 
            WHILE (@@fetch_status  = 0 )
            BEGIN
               SET @iNroRegs  = @iNroRegs  + 1 
               IF  (@IN_MVPAR02  = '1' ) 
               BEGIN 
                  SELECT @nA2_SALDUP  = A2_SALDUP , @nA2_SALDUPM  = A2_SALDUPM , @cA2_PRICOM  = A2_PRICOM , @cA2_ULTCOM  = A2_ULTCOM 
                    , @nA2_MCOMPRA  = A2_MCOMPRA , @nA2_MNOTA  = A2_MNOTA , @nA2_NROCOM  = A2_NROCOM , @nA2_MSALDO  = A2_MSALDO 
                    
                    FROM SA2030 
                    WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               ELSE 
               BEGIN 
                  SELECT @nA2_SALDUP  = A2_SALDUP , @nA2_SALDUPM  = A2_SALDUPM , @cA2_PRICOM  = A2_PRICOM , @cA2_ULTCOM  = A2_ULTCOM 
                    , @nA2_MCOMPRA  = A2_MCOMPRA , @nA2_MNOTA  = A2_MNOTA 
                    FROM SA2030 
                    WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               SET @nMoedaSalDup  = 0 
               SET @nMoedaSalDupM  = 0 
               SET @nValorAux  = 0 
               SET @iPos  = CHARINDEX ( '/'  + @cTipo , @IN_TIPOCP )
               IF @iPos  > 0 
               BEGIN 
                  SET @nAux  = 1 
                  EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                  EXEC MAT021_09_02 @nSaldo , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                  SET @nA2_SALDUP  = @nA2_SALDUP  - @nMoedaSalDup 
                  SET @nA2_SALDUPM  = @nA2_SALDUPM  - @nMoedaSalDupM 
                  SET @nAux  = 1 
                  EXEC MAT021_09_02 @nValor , @cEmissao , @nAux , @nMoedaForte , @nValorAux output 
                  IF @nA2_MCOMPRA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MCOMPRA  = @nValorAux 
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @nSaldoTit  = @nSaldo 
                  SET @nAux  = 1 
                  EXEC MAT021_09_02 @nSaldoTit , @cEmissao , @nMoeda , @nAux , @nMoedaSalDup output 
                  EXEC MAT021_09_02 @nSaldoTit , @cEmissao , @nMoeda , @nMoedaForte , @nMoedaSalDupM output 
                  SET @nA2_SALDUP  = @nA2_SALDUP  + @nMoedaSalDup 
                  SET @nA2_SALDUPM  = @nA2_SALDUPM  + @nMoedaSalDupM 
                  IF @cA2_PRICOM  > @cEmissao  or @cA2_PRICOM is null 
                  BEGIN 
                     SET @cA2_PRICOM  = @cEmissao 
                  END 
                  IF @cA2_ULTCOM  < @cEmissao  or @cA2_ULTCOM is null 
                  BEGIN 
                     SET @cA2_ULTCOM  = @cEmissao 
                  END 
                  SET @nAux  = 1 
                  EXEC MAT021_09_02 @nValor , @cEmissao , @nAux , @nMoedaForte , @nValorAux output 
                  IF @nA2_MCOMPRA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MCOMPRA  = @nValorAux 
                  END 
                  IF  (@IN_MVPAR02  = '1' ) 
                  BEGIN 
                     IF  (@cOrigem  <> 'FINA290' ) 
                     BEGIN 
                        SET @nA2_NROCOM  = @nA2_NROCOM  + 1 
                     END 
                     IF  (@nA2_SALDUPM  > @nA2_MSALDO ) 
                     BEGIN 
                        SET @nA2_MSALDO  = @nA2_SALDUPM 
                     END 
                  END 
               END 
               IF SUBSTRING ( @cOrigem , 1 , 3 ) = 'FIN' 
               BEGIN 
                  IF @nA2_MNOTA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MNOTA  = @nValorAux 
                  END 
               END 
               ELSE 
               BEGIN 
                  SELECT @nF1_VALBRUT  = F1_VALBRUT , @cF1_EMISSAO  = F1_EMISSAO 
                    FROM SF1030 
                    WHERE F1_FILIAL  = @cFilial_F1  and F1_DOC  = @cNum  and F1_SERIE  = @cPrefixo  and F1_FORNECE  = @cFornece 
                     and F1_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                  SET @nAux  = 1 
                  EXEC MAT021_09_02 @nF1_VALBRUT , @cF1_EMISSAO , @nAux , @nMoedaForte , @nValorAux output 
                  IF @nA2_MNOTA  < @nValorAux 
                  BEGIN 
                     SET @nA2_MNOTA  = @nValorAux 
                  END 
               END 
               IF @iNroRegs  = 1 
               BEGIN 
                  SET @iNroRegs  = @iNroRegs 
                  Begin Tran 
               END 
               IF  (@IN_MVPAR02  = '1' ) 
               BEGIN 
                  UPDATE SA2030 
                    WITH (ROWLOCK) 
                     SET A2_SALDUP  = @nA2_SALDUP , A2_SALDUPM  = @nA2_SALDUPM , A2_PRICOM  = @cA2_PRICOM , A2_ULTCOM  = @cA2_ULTCOM 
                    , A2_MCOMPRA  = @nA2_MCOMPRA , A2_MNOTA  = @nA2_MNOTA , A2_NROCOM  = @nA2_NROCOM , A2_MSALDO  = @nA2_MSALDO 
                    
                   WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               ELSE 
               BEGIN 
                  UPDATE SA2030 
                    WITH (ROWLOCK) 
                     SET A2_SALDUP  = @nA2_SALDUP , A2_SALDUPM  = @nA2_SALDUPM , A2_PRICOM  = @cA2_PRICOM , A2_ULTCOM  = @cA2_ULTCOM 
                    , A2_MCOMPRA  = @nA2_MCOMPRA , A2_MNOTA  = @nA2_MNOTA 
                   WHERE A2_FILIAL  = @cFilial_A2  and A2_COD  = @cFornece  and A2_LOJA  = @cLoja  and D_E_L_E_T_  = ' ' 
                    
               END 
               IF @iNroRegs  >= 1024 
               BEGIN 
                  Commit Tran 
                  SET @iNroRegs  = 0 
               END 
               FETCH curSE2 
                INTO @cFornece , @cLoja , @nSaldo , @nMoeda , @cEmissao , @cTipo , @cOrigem , @cNum , @cPrefixo , @nValor 
            END 
            CLOSE curSE2
            DEALLOCATE curSE2
            IF @iNroRegs  > 0 
            BEGIN 
                Commit Transaction  
            END 
         END 
         IF @cFilial_A2  = ' '  and @cFilial_E2  = ' ' 
         BEGIN 
            SET @lExecE2  = '0' 
         END 
      END 
      IF @iPosFil  > LEN ( @cFiliais )
      BEGIN 
         IF LEN ( @IN_ARRAYFIL2 ) >= @IN_TAMFIL  and @lArrayFil2  = '1' 
         BEGIN 
            SET @cFiliais  = @IN_ARRAYFIL2 
            SET @iPosFil  = 1 
            SET @lArrayFil2  = '0' 
         END 
         ELSE 
         BEGIN 
            IF LEN ( @IN_ARRAYFIL3 ) >= @IN_TAMFIL  and @lArrayFil3  = '1' 
            BEGIN 
               SET @cFiliais  = @IN_ARRAYFIL3 
               SET @iPosFil  = 1 
               SET @lArrayFil3  = '0' 
            END 
            ELSE 
            BEGIN 
               IF LEN ( @IN_ARRAYFIL4 ) >= @IN_TAMFIL  and @lArrayFil4  = '1' 
               BEGIN 
                  SET @cFiliais  = @IN_ARRAYFIL4 
                  SET @iPosFil  = 1 
                  SET @lArrayFil4  = '0' 
               END 
               ELSE 
               BEGIN 
                  IF LEN ( @IN_ARRAYFIL5 ) >= @IN_TAMFIL  and @lArrayFil5  = '1' 
                  BEGIN 
                     SET @cFiliais  = @IN_ARRAYFIL5 
                     SET @iPosFil  = 1 
                     SET @lArrayFil5  = '0' 
                  END 
                  ELSE 
                  BEGIN 
                     IF LEN ( @IN_ARRAYFIL6 ) >= @IN_TAMFIL  and @lArrayFil6  = '1' 
                     BEGIN 
                        SET @cFiliais  = @IN_ARRAYFIL6 
                        SET @iPosFil  = 1 
                        SET @lArrayFil6  = '0' 
                     END 
                     ELSE 
                     BEGIN 
                        IF LEN ( @IN_ARRAYFIL7 ) >= @IN_TAMFIL  and @lArrayFil7  = '1' 
                        BEGIN 
                           SET @cFiliais  = @IN_ARRAYFIL7 
                           SET @iPosFil  = 1 
                           SET @lArrayFil7  = '0' 
                        END 
                        ELSE 
                        BEGIN 
                           IF LEN ( @IN_ARRAYFIL8 ) >= @IN_TAMFIL  and @lArrayFil8  = '1' 
                           BEGIN 
                              SET @cFiliais  = @IN_ARRAYFIL8 
                              SET @iPosFil  = 1 
                              SET @lArrayFil8  = '0' 
                           END 
                           ELSE 
                           BEGIN 
                              IF LEN ( @IN_ARRAYFIL9 ) >= @IN_TAMFIL  and @lArrayFil9  = '1' 
                              BEGIN 
                                 SET @cFiliais  = @IN_ARRAYFIL9 
                                 SET @iPosFil  = 1 
                                 SET @lArrayFil9  = '0' 
                              END 
                           END 
                        END 
                     END 
                  END 
               END 
            END 
         END 
      END 
      SET @cFil_A1_Ant  = @cFilial_A1 
      SET @cFil_A2_Ant  = @cFilial_A2 
      SET @cFil_E1_Ant  = @cFilial_E1 
      SET @cFil_E2_Ant  = @cFilial_E2 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[FIN004_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN004_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN004_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN004_10_01]
(
    @IN_FILIALE5 Char( 2) , 
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 9) , 
    @IN_PARCELA Char( 1) , 
    @IN_TIPO Char( 3) , 
    @IN_CLIFOR Char( 14) , 
    @IN_CONVERSAO Char( 08 ) , 
    @IN_BAIXA Char( 08 ) , 
    @IN_LOJA Char( 4) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_VALORTIT Float , 
    @IN_MOEDATIT Float , 
    @IN_DISPONI Char( 01 ) , 
    @IN_PCCBAIXA Char( 01 ) , 
    @IN_CART Char( 01 ) , 
    @IN_ADIANT Char( 01 ) , 
    @IN_IRFBAIXA Char( 01 ) , 
    @IN_ISSBAIXA Char( 01 ) , 
    @IN_FILIALORI Char( 2) , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nSaldoMovto Float
DECLARE @nSaldoTitulo Float
DECLARE @nDesconto Float
DECLARE @nMulta Float
DECLARE @nJuros Float
DECLARE @nAcrescimo Float
DECLARE @nRetPis Float
DECLARE @nRetCof Float
DECLARE @nRetCsll Float
DECLARE @nRetIrf Float
DECLARE @nRetIss Float
DECLARE @dBaixa Char( 08 )
DECLARE @iPos Integer
DECLARE @nAux Integer
DECLARE @cCart Char( 01 )
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nSaldoTitulo  = @IN_VALORTIT 
   SET @cCart  = @IN_CART 
   IF @IN_ADIANT  = '1' 
   BEGIN 
      IF @IN_CART  = 'P' 
      BEGIN 
         SET @cCart  = 'R' 
      END 
      ELSE 
      BEGIN 
         SET @cCart  = 'P' 
      END 
   END 
   IF @IN_BAIXA is null 
   BEGIN 
      SET @dBaixa  = @IN_DATABASE 
   END 
   ELSE 
   BEGIN 
      SET @dBaixa  = @IN_BAIXA 
   END 
   SET @nSaldoMovto  = 0 
   SET @nDesconto  = 0 
   SET @nMulta  = 0 
   SET @nJuros  = 0 
   SET @nAcrescimo  = 0 
   SELECT @nSaldoMovto  = COALESCE ( SUM(A.E5_VALOR ), 0 ), @nDesconto  = COALESCE ( SUM(A.E5_VLDESCO ), 0 ), @nMulta  = COALESCE ( SUM(A.E5_VLMULTA ), 
          0 ), @nJuros  = COALESCE ( SUM(A.E5_VLJUROS ), 0 ), @nAcrescimo  = COALESCE ( SUM(A.E5_VLACRES ), 0 )
     FROM SE5010 A
     WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
      and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and A.E5_FILORIG  = @IN_FILIALORI 
      and  ( (A.E5_DATA  <= @dBaixa  and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa  and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa 
      and @IN_DISPONI  = '2' ) )  and  (A.E5_SITUACA  <> 'C'  or A.E5_DTCANBX  > @dBaixa )  and A.E5_TIPODOC in ( 'VL' , 
          'BA' , 'V2' , 'CP' , 'LJ'  )  and  not  (A.E5_TIPODOC  = 'VL'  and A.E5_ORIGEM  = 'LOJXREC '  and @cCart  = 'R' 
     )  and  ( (A.E5_RECPAG  = @cCart )  or  (A.E5_RECPAG  = @IN_CART  and E5_DOCUMEN  != ' ' ) )  and A.D_E_L_E_T_  = ' ' 
      and 0  = (
   SELECT COUNT ( * )
     FROM SE5010 B
     WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
      and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ  and B.E5_TIPODOC  = 'ES' 
      and  ( (B.E5_DATA  <= @IN_DATABASE  and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE  and @IN_DISPONI  = '1' 
     )  or  (B.E5_DTDIGIT  <= @IN_DATABASE  and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' )
   SET @nSaldoMovto  =  (@nSaldoMovto  -  (@nJuros  - @nAcrescimo )  - @nMulta  + @nDesconto ) 
   SET @nAux  = 1 
   IF  (@IN_PCCBAIXA  = '1'  or @IN_IRFBAIXA  = '1'  or @IN_ISSBAIXA  = '1' )  and  (@IN_CART  = 'P' ) 
   BEGIN 
      SELECT @nRetPis  = COALESCE ( SUM(A.E5_VRETPIS ), 0 ), @nRetCof  = COALESCE ( SUM(A.E5_VRETCOF ), 0 ), @nRetCsll  = COALESCE ( SUM(A.E5_VRETCSL ), 
             0 ), @nRetIrf  = COALESCE ( SUM(A.E5_VRETIRF ), 0 ), @nRetIss  = COALESCE ( SUM(A.E5_VRETISS ), 0 )
        FROM SE5010 A
        WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
         and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and  (A.E5_VRETPIS  + A.E5_VRETCOF  + A.E5_VRETCSL 
        )  > 0  and A.E5_MOTBX  <> 'PCC'  and  ( (A.E5_DATA  <= @dBaixa  and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa 
         and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa  and @IN_DISPONI  = '2' ) )  and  (A.E5_SITUACA  <> 'C' 
         or A.E5_DTCANBX  > @dBaixa )  and A.E5_TIPODOC in ( 'VL' , 'BA' , 'V2' , 'CP' , 'LJ'  )  and  not  (A.E5_TIPODOC  = 'VL' 
         and A.E5_ORIGEM  = 'LOJXREC '  and @cCart  = 'R' )  and  ( (A.E5_RECPAG  = @cCart )  or  (A.E5_RECPAG  = @IN_CART 
         and E5_DOCUMEN  != ' ' ) )  and A.D_E_L_E_T_  = ' '  and 0  = (
      SELECT COUNT ( * )
        FROM SE5010 B
        WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
         and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ 
         and B.E5_TIPODOC  = 'ES'  and  (B.E5_VRETPIS  + B.E5_VRETCOF  + B.E5_VRETCSL )  > 0  and B.E5_MOTBX  <> 'PCC'  and  ( (B.E5_DATA  <= @IN_DATABASE 
         and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE  and @IN_DISPONI  = '1' )  or  (B.E5_DTDIGIT  <= @IN_DATABASE 
         and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' )
      SET @nSaldoMovto  = @nSaldoMovto  + @nRetPis  + @nRetCof  + @nRetCsll  + @nRetIrf  + @nRetIss 
      IF  (@nSaldoMovto  < 0.009 ) 
      BEGIN 
         SET @nSaldoMovto  = 0 
      END 
   END 
   EXEC MAT021_10_01 @nSaldoMovto , @IN_CONVERSAO , @nAux , @IN_MOEDATIT , @nSaldoMovto output 
   SET @OUT_VALOR  = @nSaldoTitulo  - @nSaldoMovto 
   IF @OUT_VALOR is null 
   BEGIN 
      SET @OUT_VALOR  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN004_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN004_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN004_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN004_10_02]
(
    @IN_FILIALE5 Char( 2) , 
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 8) , 
    @IN_PARCELA Char( 1) , 
    @IN_TIPO Char( 3) , 
    @IN_CLIFOR Char( 14) , 
    @IN_CONVERSAO Char( 08 ) , 
    @IN_BAIXA Char( 08 ) , 
    @IN_LOJA Char( 4) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_VALORTIT Float , 
    @IN_MOEDATIT Float , 
    @IN_DISPONI Char( 01 ) , 
    @IN_PCCBAIXA Char( 01 ) , 
    @IN_CART Char( 01 ) , 
    @IN_ADIANT Char( 01 ) , 
    @IN_IRFBAIXA Char( 01 ) , 
    @IN_ISSBAIXA Char( 01 ) , 
    @IN_FILIALORI Char( 2) , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nSaldoMovto Float
DECLARE @nSaldoTitulo Float
DECLARE @nDesconto Float
DECLARE @nMulta Float
DECLARE @nJuros Float
DECLARE @nAcrescimo Float
DECLARE @nRetPis Float
DECLARE @nRetCof Float
DECLARE @nRetCsll Float
DECLARE @nRetIrf Float
DECLARE @nRetIss Float
DECLARE @dBaixa Char( 08 )
DECLARE @iPos Integer
DECLARE @nAux Integer
DECLARE @cCart Char( 01 )
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nSaldoTitulo  = @IN_VALORTIT 
   SET @cCart  = @IN_CART 
   IF @IN_ADIANT  = '1' 
   BEGIN 
      IF @IN_CART  = 'P' 
      BEGIN 
         SET @cCart  = 'R' 
      END 
      ELSE 
      BEGIN 
         SET @cCart  = 'P' 
      END 
   END 
   IF @IN_BAIXA is null 
   BEGIN 
      SET @dBaixa  = @IN_DATABASE 
   END 
   ELSE 
   BEGIN 
      SET @dBaixa  = @IN_BAIXA 
   END 
   SET @nSaldoMovto  = 0 
   SET @nDesconto  = 0 
   SET @nMulta  = 0 
   SET @nJuros  = 0 
   SET @nAcrescimo  = 0 
   SELECT @nSaldoMovto  = COALESCE ( SUM(A.E5_VALOR ), 0 ), @nDesconto  = COALESCE ( SUM(A.E5_VLDESCO ), 0 ), @nMulta  = COALESCE ( SUM(A.E5_VLMULTA ), 
          0 ), @nJuros  = COALESCE ( SUM(A.E5_VLJUROS ), 0 ), @nAcrescimo  = COALESCE ( SUM(A.E5_VLACRES ), 0 )
     FROM SE5030 A
     WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
      and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and A.E5_FILORIG  = @IN_FILIALORI 
      and  ( (A.E5_DATA  <= @dBaixa  and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa  and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa 
      and @IN_DISPONI  = '2' ) )  and  (A.E5_SITUACA  <> 'C'  or A.E5_DTCANBX  > @dBaixa )  and A.E5_TIPODOC in ( 'VL' , 
          'BA' , 'V2' , 'CP' , 'LJ'  )  and  not  (A.E5_TIPODOC  = 'VL'  and A.E5_ORIGEM  = 'LOJXREC '  and @cCart  = 'R' 
     )  and  ( (A.E5_RECPAG  = @cCart )  or  (A.E5_RECPAG  = @IN_CART  and E5_DOCUMEN  != ' ' ) )  and A.D_E_L_E_T_  = ' ' 
      and 0  = (
   SELECT COUNT ( * )
     FROM SE5030 B
     WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
      and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ  and B.E5_TIPODOC  = 'ES' 
      and  ( (B.E5_DATA  <= @IN_DATABASE  and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE  and @IN_DISPONI  = '1' 
     )  or  (B.E5_DTDIGIT  <= @IN_DATABASE  and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' )
   SET @nSaldoMovto  =  (@nSaldoMovto  -  (@nJuros  - @nAcrescimo )  - @nMulta  + @nDesconto ) 
   SET @nAux  = 1 
   IF  (@IN_PCCBAIXA  = '1'  or @IN_IRFBAIXA  = '1'  or @IN_ISSBAIXA  = '1' )  and  (@IN_CART  = 'P' ) 
   BEGIN 
      SELECT @nRetPis  = COALESCE ( SUM(A.E5_VRETPIS ), 0 ), @nRetCof  = COALESCE ( SUM(A.E5_VRETCOF ), 0 ), @nRetCsll  = COALESCE ( SUM(A.E5_VRETCSL ), 
             0 ), @nRetIrf  = COALESCE ( SUM(A.E5_VRETIRF ), 0 ), @nRetIss  = COALESCE ( SUM(A.E5_VRETISS ), 0 )
        FROM SE5030 A
        WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
         and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and  (A.E5_VRETPIS  + A.E5_VRETCOF  + A.E5_VRETCSL 
        )  > 0  and A.E5_MOTBX  <> 'PCC'  and  ( (A.E5_DATA  <= @dBaixa  and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa 
         and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa  and @IN_DISPONI  = '2' ) )  and  (A.E5_SITUACA  <> 'C' 
         or A.E5_DTCANBX  > @dBaixa )  and A.E5_TIPODOC in ( 'VL' , 'BA' , 'V2' , 'CP' , 'LJ'  )  and  not  (A.E5_TIPODOC  = 'VL' 
         and A.E5_ORIGEM  = 'LOJXREC '  and @cCart  = 'R' )  and  ( (A.E5_RECPAG  = @cCart )  or  (A.E5_RECPAG  = @IN_CART 
         and E5_DOCUMEN  != ' ' ) )  and A.D_E_L_E_T_  = ' '  and 0  = (
      SELECT COUNT ( * )
        FROM SE5030 B
        WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
         and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ 
         and B.E5_TIPODOC  = 'ES'  and  (B.E5_VRETPIS  + B.E5_VRETCOF  + B.E5_VRETCSL )  > 0  and B.E5_MOTBX  <> 'PCC'  and  ( (B.E5_DATA  <= @IN_DATABASE 
         and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE  and @IN_DISPONI  = '1' )  or  (B.E5_DTDIGIT  <= @IN_DATABASE 
         and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' )
      SET @nSaldoMovto  = @nSaldoMovto  + @nRetPis  + @nRetCof  + @nRetCsll  + @nRetIrf  + @nRetIss 
      IF  (@nSaldoMovto  < 0.009 ) 
      BEGIN 
         SET @nSaldoMovto  = 0 
      END 
   END 
   EXEC MAT021_10_02 @nSaldoMovto , @IN_CONVERSAO , @nAux , @IN_MOEDATIT , @nSaldoMovto output 
   SET @OUT_VALOR  = @nSaldoTitulo  - @nSaldoMovto 
   IF @OUT_VALOR is null 
   BEGIN 
      SET @OUT_VALOR  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN005_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN005_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN005_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN005_10_01]
(
    @IN_FILIALE5 Char( 2) , 
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 9) , 
    @IN_PARCELA Char( 1) , 
    @IN_TIPO Char( 3) , 
    @IN_CLIFOR Char( 14) , 
    @IN_CONVERSAO Char( 08 ) , 
    @IN_BAIXA Char( 08 ) , 
    @IN_LOJA Char( 4) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_VALORTIT Float , 
    @IN_MOEDATIT Float , 
    @IN_DISPONI Char( 01 ) , 
    @IN_CART Char( 01 ) , 
    @IN_ADIANT Char( 01 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_TXTIT Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @cBanco Char( 3)
DECLARE @nE5_VALOR Float
DECLARE @nE5_VLMOED2 Float
DECLARE @nSaldoMovto Float
DECLARE @nSaldoTitulo Float
DECLARE @nSaldoTitAux Float
DECLARE @nDesconto Float
DECLARE @nMulta Float
DECLARE @nJuros Float
DECLARE @dBaixa Char( 08 )
DECLARE @iPos Integer
DECLARE @nAux Integer
DECLARE @cCart Char( 01 )
DECLARE @cData Char( 08 )
DECLARE @cE5_Data Char( 08 )
DECLARE @nVlrDesc Float
DECLARE @nVlrMulta Float
DECLARE @nVlrJuros Float
DECLARE @nVldMoed2 Float
DECLARE @nValor Float
DECLARE @nTxMoeda Float
DECLARE @cE5_DtDigit Char( 08 )
DECLARE @cE5_DtDispo Char( 08 )
DECLARE @cMotBx Char( 03 )
DECLARE @cMoeda Char( 02 )
DECLARE @cTpDoc Char( 02 )
DECLARE @cDtValid Char( 08 )
DECLARE @nTxTit Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nSaldoTitulo  = @IN_VALORTIT 
   SET @cCart  = 'P' 
   SET @nTxTit  = @IN_TXTIT 
   IF @IN_CART  = 'P' 
   BEGIN 
      SET @cCart  = 'R' 
   END 
   IF @IN_BAIXA is null 
   BEGIN 
      SET @dBaixa  = @IN_DATABASE 
   END 
   ELSE 
   BEGIN 
      SET @dBaixa  = @IN_BAIXA 
   END 
   SET @nSaldoMovto  = 0 
   SET @nDesconto  = 0 
   SET @nMulta  = 0 
   SET @nJuros  = 0 
   SET @nVlrDesc  = 0 
   SET @nVlrMulta  = 0 
   SET @nVlrJuros  = 0 
   SET @nE5_VALOR  = 0 
   SET @nE5_VLMOED2  = 0 
   SET @nValor  = 0 
   SET @nTxMoeda  = 0 
   IF @IN_CPAISLOC  = 'BRA' 
   BEGIN 
      SET @nAux  = 1 
      SET @nSaldoTitAux  = 0 
       
      -- Cursor declaration CUR_SUMSALDO_A
      DECLARE CUR_SUMSALDO_A insensitive  CURSOR FOR 
      SELECT A.E5_VLMOED2 , A.E5_VALOR , A.E5_VLDESCO , A.E5_VLMULTA , A.E5_VLJUROS , A.E5_DATA , A.E5_DTDIGIT , A.E5_DTDISPO , 
             A.E5_MOTBX , A.E5_MOEDA , A.E5_TIPODOC , A.E5_TXMOEDA 
        FROM SE5010 A
        WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
         and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and  ( (A.E5_DATA  <= @dBaixa 
         and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa  and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa 
         and @IN_DISPONI  = '2' ) )  and A.E5_SITUACA  <> 'C'  and A.E5_TIPODOC in ( 'VL' , 'BA' , 'V2' , 'CP' , 'LJ'  ) 
         and  ( ( ( (A.E5_RECPAG  = @IN_CART )  or  (A.E5_RECPAG  = @cCart ) )  and @IN_ADIANT  = '1' )  or  ( (A.E5_RECPAG  = @IN_CART 
        )  and @IN_ADIANT  = '0' ) )  and A.D_E_L_E_T_  = ' '  and 0  = (
      SELECT COUNT ( * )
        FROM SE5010 B
        WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
         and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ 
         and B.E5_TIPODOC  = 'ES'  and  ( (B.E5_DATA  <= @IN_DATABASE  and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE 
         and @IN_DISPONI  = '1' )  or  (B.E5_DTDIGIT  <= @IN_DATABASE  and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' 
        )
      FOR READ ONLY 
       
      OPEN CUR_SUMSALDO_A
      FETCH CUR_SUMSALDO_A 
       INTO @nVldMoed2 , @nValor , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cE5_DtDigit , @cE5_DtDispo , @cMotBx , 
             @cMoeda , @cTpDoc , @nTxMoeda 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         IF @IN_DISPONI  = '0' 
         BEGIN 
            SET @cDtValid  = @cE5_Data 
         END 
         ELSE 
         BEGIN 
            IF @IN_DISPONI  = '1' 
            BEGIN 
               SET @cDtValid  = @cE5_DtDispo 
            END 
            ELSE 
            BEGIN 
               SET @cDtValid  = @cE5_DtDigit 
            END 
         END 
         IF @cMoeda  > '01'  and  ( (@cTpDoc IN ( 'CP' , 'BA'  )  and @cMotBx IN ( 'CMP'  ) )  or  (@cTpDoc IN ( 'BA'  )  and @cMotBx IN ( 'LIQ' , 
                'FAT'  ) ) ) 
         BEGIN 
            IF  (@IN_CART  = 'P'  and  (@cDtValid  >= '20180413'  or  (@cDtValid  >= '20171227'  and @cTpDoc  = 'CP'  and @cMotBx IN ( 'CMP'  ) 
              ) ) )  or  (@IN_CART  = 'R'  and @cDtValid  >= '20181129' ) 
            BEGIN 
               SET @nSaldoMovto  = @nValor 
            END 
            ELSE 
            BEGIN 
               SET @nSaldoMovto  = @nVldMoed2 
            END 
         END 
         ELSE 
         BEGIN 
            SET @nSaldoMovto  = @nVldMoed2 
         END 
         IF CONVERT( Integer ,@cMoeda ) < '2' 
         BEGIN 
            IF @nTxMoeda  > 0 
            BEGIN 
               SET @nJuros  = @nVlrJuros  / @nTxMoeda 
               SET @nMulta  = @nVlrMulta  / @nTxMoeda 
               SET @nDesconto  = @nVlrDesc  / @nTxMoeda 
            END 
            ELSE 
            BEGIN 
               IF @nTxTit  > 0 
               BEGIN 
                  SET @nJuros  = @nVlrJuros  / @nTxTit 
                  SET @nMulta  = @nVlrMulta  / @nTxTit 
                  SET @nDesconto  = @nVlrDesc  / @nTxTit 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            SET @nJuros  = @nVlrJuros 
            SET @nMulta  = @nVlrMulta 
            SET @nDesconto  = @nVlrDesc 
         END 
         SET @nSaldoMovto  =  (@nSaldoMovto  - @nJuros  - @nMulta  + @nDesconto ) 
         SET @nAux  = @IN_MOEDATIT 
         EXEC MAT021_10_01 @nSaldoMovto , @IN_CONVERSAO , @nAux , @IN_MOEDATIT , @nSaldoMovto output 
         SET @nSaldoTitAux  = @nSaldoTitAux  + @nSaldoMovto 
         FETCH CUR_SUMSALDO_A 
          INTO @nVldMoed2 , @nValor , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cE5_DtDigit , @cE5_DtDispo , @cMotBx , 
                @cMoeda , @cTpDoc , @nTxMoeda 
      END 
      CLOSE CUR_SUMSALDO_A
      DEALLOCATE CUR_SUMSALDO_A
      SET @nSaldoMovto  = @nSaldoTitAux 
   END 
   ELSE 
   BEGIN 
      SET @nAux  = 1 
       
      -- Cursor declaration CUR_SUMSALDO_B
      DECLARE CUR_SUMSALDO_B insensitive  CURSOR FOR 
      SELECT A.E5_VLMOED2 , A.E5_VALOR , A.E5_VLDESCO , A.E5_VLMULTA , A.E5_VLJUROS , A.E5_DATA , A.E5_BANCO 
        FROM SE5010 A
        WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
         and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and  ( (A.E5_DATA  <= @dBaixa 
         and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa  and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa 
         and @IN_DISPONI  = '2' ) )  and A.E5_SITUACA  != 'C'  and A.E5_TIPODOC in ( 'VL' , 'BA' , 'V2' , 'CP' , 'LJ'  ) 
         and  ( ( ( (A.E5_RECPAG  = @IN_CART )  or  (A.E5_RECPAG  = @cCart ) )  and @IN_ADIANT  = '1' )  or  ( (A.E5_RECPAG  = @IN_CART 
        )  and @IN_ADIANT  = '0' ) )  and A.D_E_L_E_T_  = ' '  and 0  = (
      SELECT COUNT ( * )
        FROM SE5010 B
        WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
         and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ 
         and B.E5_TIPODOC  = 'ES'  and  ( (B.E5_DATA  <= @IN_DATABASE  and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE 
         and @IN_DISPONI  = '1' )  or  (B.E5_DTDIGIT  <= @IN_DATABASE  and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' 
        )
      FOR READ ONLY 
       
      OPEN CUR_SUMSALDO_B
      FETCH CUR_SUMSALDO_B 
       INTO @nE5_VLMOED2 , @nE5_VALOR , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cBanco 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         EXEC MAT021_10_01 @nVlrJuros , @cE5_Data , @nAux , @IN_MOEDATIT , @nJuros output 
         EXEC MAT021_10_01 @nVlrMulta , @cE5_Data , @nAux , @IN_MOEDATIT , @nMulta output 
         EXEC MAT021_10_01 @nVlrDesc , @cE5_Data , @nAux , @IN_MOEDATIT , @nDesconto output 
         SET @nSaldoMovto  = @nSaldoMovto  +  (@nE5_VALOR  - @nJuros  - @nMulta  + @nDesconto ) 
         SET @nAux  = @IN_MOEDATIT 
         EXEC MAT021_10_01 @nSaldoMovto , @IN_CONVERSAO , @nAux , @IN_MOEDATIT , @nSaldoMovto output 
         FETCH CUR_SUMSALDO_B 
          INTO @nE5_VLMOED2 , @nE5_VALOR , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cBanco 
      END 
      CLOSE CUR_SUMSALDO_B
      DEALLOCATE CUR_SUMSALDO_B
   END 
   SET @OUT_VALOR  = @nSaldoTitulo  - @nSaldoMovto 
   IF @OUT_VALOR is null 
   BEGIN 
      SET @OUT_VALOR  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[FIN005_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[FIN005_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[FIN005_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[FIN005_10_02]
(
    @IN_FILIALE5 Char( 2) , 
    @IN_PREFIXO Char( 3) , 
    @IN_NUMERO Char( 8) , 
    @IN_PARCELA Char( 1) , 
    @IN_TIPO Char( 3) , 
    @IN_CLIFOR Char( 14) , 
    @IN_CONVERSAO Char( 08 ) , 
    @IN_BAIXA Char( 08 ) , 
    @IN_LOJA Char( 4) , 
    @IN_DATABASE Char( 08 ) , 
    @IN_VALORTIT Float , 
    @IN_MOEDATIT Float , 
    @IN_DISPONI Char( 01 ) , 
    @IN_CART Char( 01 ) , 
    @IN_ADIANT Char( 01 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_TXTIT Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @cBanco Char( 3)
DECLARE @nE5_VALOR Float
DECLARE @nE5_VLMOED2 Float
DECLARE @nSaldoMovto Float
DECLARE @nSaldoTitulo Float
DECLARE @nSaldoTitAux Float
DECLARE @nDesconto Float
DECLARE @nMulta Float
DECLARE @nJuros Float
DECLARE @dBaixa Char( 08 )
DECLARE @iPos Integer
DECLARE @nAux Integer
DECLARE @cCart Char( 01 )
DECLARE @cData Char( 08 )
DECLARE @cE5_Data Char( 08 )
DECLARE @nVlrDesc Float
DECLARE @nVlrMulta Float
DECLARE @nVlrJuros Float
DECLARE @nVldMoed2 Float
DECLARE @nValor Float
DECLARE @nTxMoeda Float
DECLARE @cE5_DtDigit Char( 08 )
DECLARE @cE5_DtDispo Char( 08 )
DECLARE @cMotBx Char( 03 )
DECLARE @cMoeda Char( 02 )
DECLARE @cTpDoc Char( 02 )
DECLARE @cDtValid Char( 08 )
DECLARE @nTxTit Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nSaldoTitulo  = @IN_VALORTIT 
   SET @cCart  = 'P' 
   SET @nTxTit  = @IN_TXTIT 
   IF @IN_CART  = 'P' 
   BEGIN 
      SET @cCart  = 'R' 
   END 
   IF @IN_BAIXA is null 
   BEGIN 
      SET @dBaixa  = @IN_DATABASE 
   END 
   ELSE 
   BEGIN 
      SET @dBaixa  = @IN_BAIXA 
   END 
   SET @nSaldoMovto  = 0 
   SET @nDesconto  = 0 
   SET @nMulta  = 0 
   SET @nJuros  = 0 
   SET @nVlrDesc  = 0 
   SET @nVlrMulta  = 0 
   SET @nVlrJuros  = 0 
   SET @nE5_VALOR  = 0 
   SET @nE5_VLMOED2  = 0 
   SET @nValor  = 0 
   SET @nTxMoeda  = 0 
   IF @IN_CPAISLOC  = 'BRA' 
   BEGIN 
      SET @nAux  = 1 
      SET @nSaldoTitAux  = 0 
       
      -- Cursor declaration CUR_SUMSALDO_A
      DECLARE CUR_SUMSALDO_A insensitive  CURSOR FOR 
      SELECT A.E5_VLMOED2 , A.E5_VALOR , A.E5_VLDESCO , A.E5_VLMULTA , A.E5_VLJUROS , A.E5_DATA , A.E5_DTDIGIT , A.E5_DTDISPO , 
             A.E5_MOTBX , A.E5_MOEDA , A.E5_TIPODOC , A.E5_TXMOEDA 
        FROM SE5030 A
        WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
         and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and  ( (A.E5_DATA  <= @dBaixa 
         and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa  and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa 
         and @IN_DISPONI  = '2' ) )  and A.E5_SITUACA  <> 'C'  and A.E5_TIPODOC in ( 'VL' , 'BA' , 'V2' , 'CP' , 'LJ'  ) 
         and  ( ( ( (A.E5_RECPAG  = @IN_CART )  or  (A.E5_RECPAG  = @cCart ) )  and @IN_ADIANT  = '1' )  or  ( (A.E5_RECPAG  = @IN_CART 
        )  and @IN_ADIANT  = '0' ) )  and A.D_E_L_E_T_  = ' '  and 0  = (
      SELECT COUNT ( * )
        FROM SE5030 B
        WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
         and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ 
         and B.E5_TIPODOC  = 'ES'  and  ( (B.E5_DATA  <= @IN_DATABASE  and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE 
         and @IN_DISPONI  = '1' )  or  (B.E5_DTDIGIT  <= @IN_DATABASE  and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' 
        )
      FOR READ ONLY 
       
      OPEN CUR_SUMSALDO_A
      FETCH CUR_SUMSALDO_A 
       INTO @nVldMoed2 , @nValor , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cE5_DtDigit , @cE5_DtDispo , @cMotBx , 
             @cMoeda , @cTpDoc , @nTxMoeda 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         IF @IN_DISPONI  = '0' 
         BEGIN 
            SET @cDtValid  = @cE5_Data 
         END 
         ELSE 
         BEGIN 
            IF @IN_DISPONI  = '1' 
            BEGIN 
               SET @cDtValid  = @cE5_DtDispo 
            END 
            ELSE 
            BEGIN 
               SET @cDtValid  = @cE5_DtDigit 
            END 
         END 
         IF @cMoeda  > '01'  and  ( (@cTpDoc IN ( 'CP' , 'BA'  )  and @cMotBx IN ( 'CMP'  ) )  or  (@cTpDoc IN ( 'BA'  )  and @cMotBx IN ( 'LIQ' , 
                'FAT'  ) ) ) 
         BEGIN 
            IF  (@IN_CART  = 'P'  and  (@cDtValid  >= '20180413'  or  (@cDtValid  >= '20171227'  and @cTpDoc  = 'CP'  and @cMotBx IN ( 'CMP'  ) 
              ) ) )  or  (@IN_CART  = 'R'  and @cDtValid  >= '20181129' ) 
            BEGIN 
               SET @nSaldoMovto  = @nValor 
            END 
            ELSE 
            BEGIN 
               SET @nSaldoMovto  = @nVldMoed2 
            END 
         END 
         ELSE 
         BEGIN 
            SET @nSaldoMovto  = @nVldMoed2 
         END 
         IF CONVERT( Integer ,@cMoeda ) < '2' 
         BEGIN 
            IF @nTxMoeda  > 0 
            BEGIN 
               SET @nJuros  = @nVlrJuros  / @nTxMoeda 
               SET @nMulta  = @nVlrMulta  / @nTxMoeda 
               SET @nDesconto  = @nVlrDesc  / @nTxMoeda 
            END 
            ELSE 
            BEGIN 
               IF @nTxTit  > 0 
               BEGIN 
                  SET @nJuros  = @nVlrJuros  / @nTxTit 
                  SET @nMulta  = @nVlrMulta  / @nTxTit 
                  SET @nDesconto  = @nVlrDesc  / @nTxTit 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            SET @nJuros  = @nVlrJuros 
            SET @nMulta  = @nVlrMulta 
            SET @nDesconto  = @nVlrDesc 
         END 
         SET @nSaldoMovto  =  (@nSaldoMovto  - @nJuros  - @nMulta  + @nDesconto ) 
         SET @nAux  = @IN_MOEDATIT 
         EXEC MAT021_10_02 @nSaldoMovto , @IN_CONVERSAO , @nAux , @IN_MOEDATIT , @nSaldoMovto output 
         SET @nSaldoTitAux  = @nSaldoTitAux  + @nSaldoMovto 
         FETCH CUR_SUMSALDO_A 
          INTO @nVldMoed2 , @nValor , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cE5_DtDigit , @cE5_DtDispo , @cMotBx , 
                @cMoeda , @cTpDoc , @nTxMoeda 
      END 
      CLOSE CUR_SUMSALDO_A
      DEALLOCATE CUR_SUMSALDO_A
      SET @nSaldoMovto  = @nSaldoTitAux 
   END 
   ELSE 
   BEGIN 
      SET @nAux  = 1 
       
      -- Cursor declaration CUR_SUMSALDO_B
      DECLARE CUR_SUMSALDO_B insensitive  CURSOR FOR 
      SELECT A.E5_VLMOED2 , A.E5_VALOR , A.E5_VLDESCO , A.E5_VLMULTA , A.E5_VLJUROS , A.E5_DATA , A.E5_BANCO 
        FROM SE5030 A
        WHERE A.E5_FILIAL  = @IN_FILIALE5  and A.E5_PREFIXO  = @IN_PREFIXO  and A.E5_NUMERO  = @IN_NUMERO  and A.E5_PARCELA  = @IN_PARCELA 
         and A.E5_TIPO  = @IN_TIPO  and A.E5_CLIFOR  = @IN_CLIFOR  and A.E5_LOJA  = @IN_LOJA  and  ( (A.E5_DATA  <= @dBaixa 
         and @IN_DISPONI  = '0' )  or  (A.E5_DTDISPO  <= @dBaixa  and @IN_DISPONI  = '1' )  or  (A.E5_DTDIGIT  <= @dBaixa 
         and @IN_DISPONI  = '2' ) )  and A.E5_SITUACA  != 'C'  and A.E5_TIPODOC in ( 'VL' , 'BA' , 'V2' , 'CP' , 'LJ'  ) 
         and  ( ( ( (A.E5_RECPAG  = @IN_CART )  or  (A.E5_RECPAG  = @cCart ) )  and @IN_ADIANT  = '1' )  or  ( (A.E5_RECPAG  = @IN_CART 
        )  and @IN_ADIANT  = '0' ) )  and A.D_E_L_E_T_  = ' '  and 0  = (
      SELECT COUNT ( * )
        FROM SE5030 B
        WHERE B.E5_FILIAL  = A.E5_FILIAL  and B.E5_PREFIXO  = A.E5_PREFIXO  and B.E5_NUMERO  = A.E5_NUMERO  and B.E5_PARCELA  = A.E5_PARCELA 
         and B.E5_TIPO  = A.E5_TIPO  and B.E5_CLIFOR  = A.E5_CLIFOR  and B.E5_LOJA  = A.E5_LOJA  and B.E5_SEQ  = A.E5_SEQ 
         and B.E5_TIPODOC  = 'ES'  and  ( (B.E5_DATA  <= @IN_DATABASE  and @IN_DISPONI  = '0' )  or  (B.E5_DTDISPO  <= @IN_DATABASE 
         and @IN_DISPONI  = '1' )  or  (B.E5_DTDIGIT  <= @IN_DATABASE  and @IN_DISPONI  = '2' ) )  and B.D_E_L_E_T_  = ' ' 
        )
      FOR READ ONLY 
       
      OPEN CUR_SUMSALDO_B
      FETCH CUR_SUMSALDO_B 
       INTO @nE5_VLMOED2 , @nE5_VALOR , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cBanco 
      WHILE ( (@@fetch_status  = 0 ) )
      BEGIN
         EXEC MAT021_10_02 @nVlrJuros , @cE5_Data , @nAux , @IN_MOEDATIT , @nJuros output 
         EXEC MAT021_10_02 @nVlrMulta , @cE5_Data , @nAux , @IN_MOEDATIT , @nMulta output 
         EXEC MAT021_10_02 @nVlrDesc , @cE5_Data , @nAux , @IN_MOEDATIT , @nDesconto output 
         SET @nSaldoMovto  = @nSaldoMovto  +  (@nE5_VALOR  - @nJuros  - @nMulta  + @nDesconto ) 
         SET @nAux  = @IN_MOEDATIT 
         EXEC MAT021_10_02 @nSaldoMovto , @IN_CONVERSAO , @nAux , @IN_MOEDATIT , @nSaldoMovto output 
         FETCH CUR_SUMSALDO_B 
          INTO @nE5_VLMOED2 , @nE5_VALOR , @nVlrDesc , @nVlrMulta , @nVlrJuros , @cE5_Data , @cBanco 
      END 
      CLOSE CUR_SUMSALDO_B
      DEALLOCATE CUR_SUMSALDO_B
   END 
   SET @OUT_VALOR  = @nSaldoTitulo  - @nSaldoMovto 
   IF @OUT_VALOR is null 
   BEGIN 
      SET @OUT_VALOR  = 0 
   END 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_01_01]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_01_02]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_02_01]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_02_02]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_03_01]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_03_02]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_06_01]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_06_02]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_07_01]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_07_02]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_23_01]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[LASTDAY_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[LASTDAY_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[LASTDAY_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[LASTDAY_23_02]
(
    @IN_DATA Char( 08 ) , 
    @OUT_DATA Char( 08 )  output ) AS
 
-- Declaration of variables
DECLARE @cData VarChar( 08 )
DECLARE @iAno Float
DECLARE @iResto Float
DECLARE @iPos Integer
DECLARE @cResto VarChar( 10 )
BEGIN
   SET @OUT_DATA  = ' ' 
   SET @cData  = SUBSTRING ( @IN_DATA , 5 , 2 )
   SET @iAno  = 0 
   SET @iResto  = 0 
   SET @iPos  = 0 
   SET @cResto  = '' 
   IF @cData IN ( '01' , '03' , '05' , '07' , '08' , '10' , '12'  ) 
   BEGIN 
      SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '31' 
   END 
   ELSE 
   BEGIN 
      IF @cData  = '02' 
      BEGIN 
         SET @iAno  = CONVERT( Float ,SUBSTRING ( @IN_DATA , 1 , 4 ))
         SET @iResto  = @iAno  / 4 
         SET @cResto  = CONVERT( VarChar( 10 ) ,@iResto )
         SET @iPos  = CHARINDEX ( '.' , @cResto )
         IF @iPos  = 0 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '29' 
            IF @iAno in ( 2100 , 2200 , 2300 , 2500  ) 
            BEGIN 
               SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '28' 
         END 
      END 
      ELSE 
      BEGIN 
         SET @cData  = SUBSTRING ( @IN_DATA , 1 , 6 ) + '30' 
      END 
   END 
   SET @OUT_DATA  = @cData 
END
GO

GO
--SqlScripter----[dbo].[M280SB9_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M280SB9_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M280SB9_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M280SB9_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_LOCAL Char( 2) ) AS
 
-- Declaration of variables
DECLARE @cRetirar Char( 01 )
BEGIN
   SET @cRetirar  = '1' 
END
GO

GO
--SqlScripter----[dbo].[M280SB9_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M280SB9_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M280SB9_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M280SB9_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_LOCAL Char( 2) ) AS
 
-- Declaration of variables
DECLARE @cRetirar Char( 01 )
BEGIN
   SET @cRetirar  = '1' 
END
GO

GO
--SqlScripter----[dbo].[M300SB8_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M300SB8_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M300SB8_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M300SB8_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_LOTECTL Char( 10) , 
    @IN_NUMLOTE Char( 6) ) AS
 
-- Declaration of variables
DECLARE @cRetirar Char( 01 )
BEGIN
   SET @cRetirar  = '1' 
END
GO

GO
--SqlScripter----[dbo].[M300SB8_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M300SB8_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M300SB8_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M300SB8_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_LOTECTL Char( 10) , 
    @IN_NUMLOTE Char( 6) ) AS
 
-- Declaration of variables
DECLARE @cRetirar Char( 01 )
BEGIN
   SET @cRetirar  = '1' 
END
GO

GO
--SqlScripter----[dbo].[M330CMU_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M330CMU_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M330CMU_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M330CMU_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODORIMOD Char( 15) , 
    @IN_DDATABASE Char( 08 ) , 
    @IN_TRB_CM1 Float , 
    @IN_TRB_CM2 Float , 
    @IN_TRB_CM3 Float , 
    @IN_TRB_CM4 Float , 
    @IN_TRB_CM5 Float , 
    @OUT_TRB_CM1 Float  output , 
    @OUT_TRB_CM2 Float  output , 
    @OUT_TRB_CM3 Float  output , 
    @OUT_TRB_CM4 Float  output , 
    @OUT_TRB_CM5 Float  output , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @OutResult VarChar( 01 )
BEGIN
   SET @OUT_TRB_CM1  = @IN_TRB_CM1 
   SET @OUT_TRB_CM2  = @IN_TRB_CM2 
   SET @OUT_TRB_CM3  = @IN_TRB_CM3 
   SET @OUT_TRB_CM4  = @IN_TRB_CM4 
   SET @OUT_TRB_CM5  = @IN_TRB_CM5 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[M330CMU_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M330CMU_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M330CMU_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M330CMU_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODORIMOD Char( 15) , 
    @IN_DDATABASE Char( 08 ) , 
    @IN_TRB_CM1 Float , 
    @IN_TRB_CM2 Float , 
    @IN_TRB_CM3 Float , 
    @IN_TRB_CM4 Float , 
    @IN_TRB_CM5 Float , 
    @OUT_TRB_CM1 Float  output , 
    @OUT_TRB_CM2 Float  output , 
    @OUT_TRB_CM3 Float  output , 
    @OUT_TRB_CM4 Float  output , 
    @OUT_TRB_CM5 Float  output , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @OutResult VarChar( 01 )
BEGIN
   SET @OUT_TRB_CM1  = @IN_TRB_CM1 
   SET @OUT_TRB_CM2  = @IN_TRB_CM2 
   SET @OUT_TRB_CM3  = @IN_TRB_CM3 
   SET @OUT_TRB_CM4  = @IN_TRB_CM4 
   SET @OUT_TRB_CM5  = @IN_TRB_CM5 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[M330INB2CP_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M330INB2CP_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M330INB2CP_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M330INB2CP_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_CUSUNIF Char( 01 ) , 
    @IN_COD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_RECNOSB2 Integer ) AS
 
-- Declaration of variables
DECLARE @iRecnoTRT Integer
BEGIN
   SET @iRecnoTRT  = 0 
END
GO

GO
--SqlScripter----[dbo].[M330INB2CP_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M330INB2CP_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M330INB2CP_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M330INB2CP_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_CUSUNIF Char( 01 ) , 
    @IN_COD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_RECNOSB2 Integer ) AS
 
-- Declaration of variables
DECLARE @iRecnoTRT Integer
BEGIN
   SET @iRecnoTRT  = 0 
END
GO

GO
--SqlScripter----[dbo].[M330INC2CP_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M330INC2CP_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M330INC2CP_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M330INC2CP_01]
(
    @IN_FILIALCOR Char( 2) ) AS
 
-- Declaration of variables
DECLARE @nRec Integer
BEGIN
   SET @nRec  = 0 
END
GO

GO
--SqlScripter----[dbo].[M330INC2CP_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[M330INC2CP_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[M330INC2CP_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[M330INC2CP_02]
(
    @IN_FILIALCOR Char( 2) ) AS
 
-- Declaration of variables
DECLARE @nRec Integer
BEGIN
   SET @nRec  = 0 
END
GO

GO
--SqlScripter----[dbo].[MA280CON_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA280CON_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA280CON_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA280CON_01]
(
    @IN_CODIGO Char( 15) , 
    @IN_LFATCONV Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_RESULTADO  = @IN_LFATCONV 
END
GO

GO
--SqlScripter----[dbo].[MA280CON_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA280CON_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA280CON_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA280CON_02]
(
    @IN_CODIGO Char( 15) , 
    @IN_LFATCONV Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_RESULTADO  = @IN_LFATCONV 
END
GO

GO
--SqlScripter----[dbo].[MA280INB9CP_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA280INB9CP_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA280INB9CP_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA280INB9CP_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_CUSZERO Char( 01 ) , 
    @IN_RECNOSB9 Integer , 
    @IN_RECNOSB2 Integer , 
    @IN_NDIVISOR Float , 
    @IN_B9_VINI1 Float , 
    @IN_B9_VINI2 Float , 
    @IN_B9_VINI3 Float , 
    @IN_B9_VINI4 Float , 
    @IN_B9_VINI5 Float ) AS
 
-- Declaration of variables
DECLARE @iRecnoTRT Integer
BEGIN
   SET @iRecnoTRT  = 0 
END
GO

GO
--SqlScripter----[dbo].[MA280INB9CP_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA280INB9CP_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA280INB9CP_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA280INB9CP_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_CUSZERO Char( 01 ) , 
    @IN_RECNOSB9 Integer , 
    @IN_RECNOSB2 Integer , 
    @IN_NDIVISOR Float , 
    @IN_B9_VINI1 Float , 
    @IN_B9_VINI2 Float , 
    @IN_B9_VINI3 Float , 
    @IN_B9_VINI4 Float , 
    @IN_B9_VINI5 Float ) AS
 
-- Declaration of variables
DECLARE @iRecnoTRT Integer
BEGIN
   SET @iRecnoTRT  = 0 
END
GO

GO
--SqlScripter----[dbo].[MA280INC2CP_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA280INC2CP_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA280INC2CP_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA280INC2CP_01]
(
    @IN_RECNOSC2 Integer ) AS
 
-- Declaration of variables
DECLARE @nRec Integer
BEGIN
   SET @nRec  = 0 
END
GO

GO
--SqlScripter----[dbo].[MA280INC2CP_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA280INC2CP_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA280INC2CP_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA280INC2CP_02]
(
    @IN_RECNOSC2 Integer ) AS
 
-- Declaration of variables
DECLARE @nRec Integer
BEGIN
   SET @nRec  = 0 
END
GO

GO
--SqlScripter----[dbo].[MA330AL_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA330AL_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA330AL_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA330AL_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_RECNOSB2 Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_RESULTADO  = '0' 
END
GO

GO
--SqlScripter----[dbo].[MA330AL_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA330AL_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA330AL_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA330AL_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_RECNOSB2 Integer , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_RESULTADO  = '0' 
END
GO

GO
--SqlScripter----[dbo].[MA330SEQ_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA330SEQ_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA330SEQ_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA330SEQ_01]
(
    @IN_ORDEM Char( 03 ) , 
    @IN_CALIAS Char( 03 ) , 
    @IN_RECFILE Integer , 
    @OUT_ORDEM Char( 03 )  output , 
    @OUT_ALIAS Char( 03 )  output , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_ORDEM  = @IN_ORDEM 
   SET @OUT_ALIAS  = @IN_CALIAS 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MA330SEQ_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MA330SEQ_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MA330SEQ_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MA330SEQ_02]
(
    @IN_ORDEM Char( 03 ) , 
    @IN_CALIAS Char( 03 ) , 
    @IN_RECFILE Integer , 
    @OUT_ORDEM Char( 03 )  output , 
    @OUT_ALIAS Char( 03 )  output , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_ORDEM  = @IN_ORDEM 
   SET @OUT_ALIAS  = @IN_CALIAS 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT004_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT004_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT004_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT004_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_NIVALT Char( 01 ) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_PAR09 Integer , 
    @IN_MV_PAR11 Integer , 
    @IN_MV_PAR14 Integer , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_LOCALIZ Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_TAM_TRB_DOC Integer , 
    @IN_COPCOES Char( 04 ) , 
    @IN_CUSUNIF Char( 01 ) , 
    @IN_MV_PRODPR0 Integer , 
    @IN_DDATABASE Char( 08 ) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @IN_RECNOSMO Integer , 
    @IN_MV_PAR18 Integer , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_PRODMNT Char( 15) , 
    @IN_MV_MOEDACM Char( 5 ) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CUSREP Char( 01 ) , 
    @IN_MV_PAR15 Integer , 
    @IN_USAFILTRF Char( 01 ) , 
    @IN_SEQ500 Char( 01 ) , 
    @IN_MVULMES Char( 08 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @IN_MV_SEQREBE Char( 03 ) , 
    @IN_MV_330JCM1 Char( 05 ) , 
    @IN_MV_PROCQE6 Char( 01 ) , 
    @IN_FILIALPROC Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_AFN Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cExecutou Char( 01 )
DECLARE @vContador Integer
DECLARE @vRecnoD1 Integer
DECLARE @vRecnoMNT Integer
DECLARE @cF4_PODER3 Char( 1)
DECLARE @cF4_ESTOQUE Char( 1)
DECLARE @cD1_COD Char( 15)
DECLARE @cD1_TIPO Char( 1)
DECLARE @cD1_OP Char( 13)
DECLARE @cD1_NUMSEQ Char( 6)
DECLARE @cD1_LOCAL Char( 2)
DECLARE @cD1_DOC Char( 9)
DECLARE @cD1_SERIE Char( 3)
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cD1_LOJA Char( 4)
DECLARE @cD1_ITEM Char( 4)
DECLARE @cD1_TIPODOC Char( 2)
DECLARE @vRecnoD2 Integer
DECLARE @cD2_COD Char( 15)
DECLARE @cD2_LOCAL Char( 2)
DECLARE @cD2_TIPO Char( 1)
DECLARE @cD2_TIPODOC Char( 2)
DECLARE @vRecnoD3 Integer
DECLARE @vRecnoD7 Integer
DECLARE @cD3_COD Char( 15)
DECLARE @cD3_LOCAL Char( 2)
DECLARE @cD3_CF Char( 3)
DECLARE @cD3_NUMSEQ Char( 6)
DECLARE @cD3_DOC Char( 9)
DECLARE @cD3_ESTORNO Char( 1)
DECLARE @cD3_LOTECTL Char( 10)
DECLARE @cD3_NUMLOTE Char( 6)
DECLARE @cD3_PROJPMS Char( 10)
DECLARE @cD3_OP Char( 14)
DECLARE @cD3_IDENT Char( 6)
DECLARE @cD3_EMISSAO Char( 8)
DECLARE @cD3_CHAVE Char( 2)
DECLARE @nRecTRB Integer
DECLARE @iRecCount Integer
DECLARE @MV_PAR14 Integer
DECLARE @cMDia Char( 01 )
DECLARE @cAux VarChar( 3 )
DECLARE @cAux1 VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nAptmPMS Integer
DECLARE @nAptmPMSTMP Integer
DECLARE @iTRA_RECNO Integer
DECLARE @cTransf Char( 01 )
DECLARE @nRecnoSD3 Integer
DECLARE @cD3_STATUS VarChar( 2 )
DECLARE @fim_CUR Integer
DECLARE @cMV_PAR1 Char( 08 )
DECLARE @cDINICIO Char( 08 )
DECLARE @cMV_PRODMNT Char( 15)
DECLARE @cFILIALCOR Char( 2)
DECLARE @cMV_CQ Char( 2)
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @nConSD3 Char( 01 )
BEGIN
   SET @cMV_PAR1  = @IN_MV_PAR1 
   SET @cDINICIO  = @IN_DINICIO 
   SET @cMV_PRODMNT  = @IN_MV_PRODMNT 
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cMV_CQ  = @IN_MV_CQ 
   SET @cAux  = 'AFN' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_AFN output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SG1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SG1 output 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SB1 output 
   SET @OUT_RESULTADO  = '0' 
   SET @cExecutou  = ' ' 
   SET @vRecnoD3  = 0 
   SET @vRecnoD7  = 0 
   SET @cD3_ESTORNO  = ' ' 
   SET @MV_PAR14  = @IN_MV_PAR14 
   SET @cTransf  = '0' 
   SET @nAptmPMS  = 0 
   SET @nAptmPMSTMP  = 0 
   SET @cD3_STATUS  = '  ' 
   SET @vRecnoD1  = 0 
   SET @cB1_CCCUSTO  = ' ' 
   SET @nConSD3  = '0' 
   SET @cAux  = '  ' 
   EXEC MAT007_19_01 @cFILIALCOR , @cAux , @cDINICIO , @IN_MV_LOCPROC , @IN_COPCOES , @IN_CUSUNIF , @IN_DDATABASE , @IN_MV_NEGESTR , 
          @IN_MV_MOEDACM , @IN_MV_PAR1 , @IN_MV_CUSFIFO , @cMV_PRODMNT , @IN_MV_D3SERVI , @IN_INTDL , @cMV_CQ , @IN_MVULMES , 
          @IN_MV_WMSNEW , @IN_MV_PRODMOD , @cExecutou output 
    
   -- Cursor declaration SD1_Cursor
   DECLARE SD1_Cursor insensitive  CURSOR FOR 
   SELECT SD1.R_E_C_N_O_ , SF4.F4_PODER3 , D1_COD , D1_TIPO , D1_OP , D1_NUMSEQ , D1_DOC , D1_SERIE , D1_FORNECE , D1_LOJA , 
          D1_ITEM , D1_TIPODOC , D1_LOCAL , SF4.F4_ESTOQUE 
     FROM SD1010 SD1, SF4010 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SF4.F4_FILIAL  = @cFil_SF4  and SD1.D1_DTDIGIT  >= @cDINICIO  and SD1.D1_DTDIGIT  <= @cMV_PAR1 
      and SD1.D1_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' '  and SD1.D_E_L_E_T_  = ' ' 
      and SF4.D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN SD1_Cursor
   FETCH SD1_Cursor 
    INTO @vRecnoD1 , @cF4_PODER3 , @cD1_COD , @cD1_TIPO , @cD1_OP , @cD1_NUMSEQ , @cD1_DOC , @cD1_SERIE , @cD1_FORNECE , 
          @cD1_LOJA , @cD1_ITEM , @cD1_TIPODOC , @cD1_LOCAL , @cF4_ESTOQUE 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nRecnoSD3  = 0 
      SET @cB1_CCCUSTO  = ' ' 
      IF  (@cD1_OP  <> ' ' )  and  (@cF4_ESTOQUE  = 'S' )  and  (@cF4_PODER3 NOT IN ( 'R' , 'S'  ) ) 
      BEGIN 
         SELECT @nRecnoSD3  = COALESCE ( R_E_C_N_O_ , 0 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and  ( ( (@cMV_CQ  = @cD1_LOCAL )  and  (SD3.D3_IDENT  = @cD1_NUMSEQ ) )  or  ( (@cMV_CQ  <> @cD1_LOCAL 
           )  and  (SD3.D3_NUMSEQ  = @cD1_NUMSEQ ) ) )  and SD3.D3_EMISSAO  >= @cDINICIO  and SD3.D3_EMISSAO  <= @cMV_PAR1 
            and SD3.D3_CF  = 'RE5'  and SD3.D3_COD  = @cD1_COD  and SD3.D3_OP  = @cD1_OP  and SD3.D3_ESTORNO  = ' '  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @nRecnoSD3 is null 
      BEGIN 
         SET @nRecnoSD3  = 0 
      END 
      IF  (@cD1_TIPO  <> 'D' ) 
      BEGIN 
         IF  (@cF4_PODER3  = 'D' ) 
         BEGIN 
            SET @cAux  = 'D' 
            EXEC MAT042_19_01 @cFILIALCOR , @cAux , @cMV_PAR1 , @IN_MV_PAR14 , @vRecnoD1 , @cDINICIO , @cMDia output 
            IF  (@cMDia  = '1' ) 
            BEGIN 
               SET @cAux  = 'SD1' 
               SET @cAux1  = '300' 
               SET @nAux  = 0 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               SET @cAux  = 'SD1' 
               SET @cAux1  = '280' 
               SET @nAux  = 0 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@cF4_PODER3  = 'R' ) 
            BEGIN 
               SET @cAux  = 'SD1' 
               SET @cAux1  = '250' 
               SET @nAux  = 0 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF @nRecnoSD3  = 0 
               BEGIN 
                  SET @cAux  = 'SD1' 
                  SET @nAux  = 0 
                  IF  (@cD1_TIPODOC  >= '50' ) 
                  BEGIN 
                     SET @cAux1  = '095' 
                     SET @nAux  = 0 
                     EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                            @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                            @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cAux1  = '100' 
                     SET @nAux  = 0 
                     EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                            @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                            @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                  END 
               END 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@cD1_TIPO  = 'D' ) 
         BEGIN 
            SET @cAux  = 'V' 
            EXEC MAT042_19_01 @cFILIALCOR , @cAux , @cMV_PAR1 , @IN_MV_PAR14 , @vRecnoD1 , @cDINICIO , @cMDia output 
            SET @cAux  = 'SD1' 
            SET @nAux  = 0 
            IF  (@cMDia  = '1' ) 
            BEGIN 
               IF  (@cD1_TIPODOC  >= '50' ) 
               BEGIN 
                  SET @cAux1  = '545' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  SET @cAux1  = '500' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@cD1_TIPODOC  >= '50' ) 
               BEGIN 
                  SET @cAux1  = '195' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  SET @cAux1  = '200' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
         END 
      END 
      IF  ( (@cD1_OP  <> ' ' )  or  (@nAptmPMS  > 0 ) )  and  (@cF4_PODER3 NOT in ( 'R' , 'S'  ) ) 
      BEGIN 
         SELECT @nAptmPMS  = COALESCE ( COUNT ( * ), 0 )
           FROM AFN010 AFN
           WHERE AFN_FILIAL  = @cFil_AFN  and AFN_DOC  = @cD1_DOC  and AFN_SERIE  = @cD1_SERIE  and AFN_FORNEC  = @cD1_FORNECE 
            and AFN_LOJA  = @cD1_LOJA  and AFN_ITEM  = @cD1_ITEM  and AFN_ESTOQU  <> '2'  and D_E_L_E_T_  = ' ' 
         SELECT @nRecTRB  = MAX ( R_E_C_N_O_ )
           FROM TRB01SP 
           WHERE TRB_FILIAL  = @cFILIALCOR 
         IF @nRecTRB is null 
         BEGIN 
            SET @nRecTRB  = 0 
         END 
         SET @nConSD3  = '0' 
          
         -- Cursor declaration SD3_Cursor01
         DECLARE SD3_Cursor01 insensitive  CURSOR FOR 
         SELECT SD3.R_E_C_N_O_ , D3_COD , D3_NUMSEQ , D3_LOCAL , D3_LOTECTL , D3_NUMLOTE , D3_DOC , D3_ESTORNO , COALESCE ( SB1.B1_CCCUSTO , 
                ' ' )
           FROM SD3010 SD3 left join SB1010 SB1 ON SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.D_E_L_E_T_  = ' ' 
           
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and  ( ( (SD3.D3_IDENT  = @cD1_NUMSEQ ) )  or  ( (@cMV_CQ  <> @cD1_LOCAL )  and  (SD3.D3_NUMSEQ  = @cD1_NUMSEQ 
           ) ) )  and SD3.D3_EMISSAO  >= @cDINICIO  and SD3.D3_EMISSAO  <= @cMV_PAR1  and SD3.D3_CF  = 'RE5'  and SD3.D3_COD  = @cD1_COD 
            and SD3.D3_OP  = @cD1_OP  and SD3.D3_ESTORNO  = ' '  and SD3.D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN SD3_Cursor01
         FETCH SD3_Cursor01 
          INTO @vRecnoD3 , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC , @cD3_ESTORNO , 
                @cB1_CCCUSTO 
         WHILE (@@Fetch_Status  = 0 )
         BEGIN
            IF  (@vRecnoD3 is null ) 
            BEGIN 
               SET @vRecnoD3  = 0 
            END 
            IF  (@nConSD3  = '0' ) 
            BEGIN 
               IF @cMV_CQ  = @cD1_LOCAL 
               BEGIN 
                  SET @nConSD3  = '1' 
               END 
               IF  (@cD1_TIPO  <> 'D' ) 
               BEGIN 
                  IF  (@cF4_PODER3  = 'D' ) 
                  BEGIN 
                     SET @cAux  = 'D' 
                     EXEC MAT042_19_01 @cFILIALCOR , @cAux , @cMV_PAR1 , @IN_MV_PAR14 , @vRecnoD1 , @cDINICIO , @cMDia output 
                     IF  (@cMDia  = '1' ) 
                     BEGIN 
                        SET @cAux  = 'SD3' 
                        SET @cAux1  = '300' 
                        EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                               @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                               @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cAux  = 'SD3' 
                        SET @cAux1  = '280' 
                        EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                               @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                               @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                     END 
                     Begin tran 
                     UPDATE TRB01SP 
                       WITH (ROWLOCK) 
                        SET TRB_RECSD1  = @vRecnoD3 
                      WHERE R_E_C_N_O_  = @nRecTRB 
                     Commit Tran 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@cF4_PODER3  <> 'R' ) 
                     BEGIN 
                        IF  (@nAptmPMS  > 0 ) 
                        BEGIN 
                           SET @vContador  = @nAptmPMS 
                           WHILE ( (@vContador  > 0 ) )
                           BEGIN
                              SET @cAux1  = '300' 
                              SET @cAux  = 'SD1' 
                              SET @nRecTRB  = 0 
                              EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @vRecnoD3 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , 
                                     @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                     @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                     @IN_MV_PROCQE6 , ' ' , @IN_FILIALPROC 
                              SELECT @nRecTRB  = MAX ( R_E_C_N_O_ )
                                FROM TRB01SP 
                                WHERE TRB_FILIAL  = @cFILIALCOR 
                              IF @nRecTRB is null 
                              BEGIN 
                                 SET @nRecTRB  = 0 
                              END 
                              SET @cAux1  = '300' 
                              SET @cAux  = 'SD3' 
                              EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , 
                                     @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                     @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                     @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                              SET @vContador  = @vContador  - 1 
                           END 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cAux1  = '300' 
                           SET @cAux  = 'SD1' 
                           SET @nAux  = 0 
                           SET @nRecTRB  = 0 
                           EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD1 , @nAux , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , ' ' , @IN_FILIALPROC 
                           SELECT @nRecTRB  = MAX ( R_E_C_N_O_ )
                             FROM TRB01SP 
                             WHERE TRB_FILIAL  = @cFILIALCOR 
                           IF @nRecTRB is null 
                           BEGIN 
                              SET @nRecTRB  = 0 
                           END 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '300' 
                           EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , 
                                  @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                  @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                  @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                        END 
                     END 
                  END 
               END 
            END 
            SET @fim_CUR  = 0 
            FETCH SD3_Cursor01 
             INTO @vRecnoD3 , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC , @cD3_ESTORNO , 
                   @cB1_CCCUSTO 
         END 
         CLOSE SD3_Cursor01
         DEALLOCATE SD3_Cursor01
      END 
      SET @fim_CUR  = 0 
      FETCH SD1_Cursor 
       INTO @vRecnoD1 , @cF4_PODER3 , @cD1_COD , @cD1_TIPO , @cD1_OP , @cD1_NUMSEQ , @cD1_DOC , @cD1_SERIE , @cD1_FORNECE , 
             @cD1_LOJA , @cD1_ITEM , @cD1_TIPODOC , @cD1_LOCAL , @cF4_ESTOQUE 
   END 
   CLOSE SD1_Cursor
   DEALLOCATE SD1_Cursor
   SET @nAptmPMSTMP  = 0 
   SET @cAux  = 'SD2' 
    
   -- Cursor declaration SD2_Cursor
   DECLARE SD2_Cursor insensitive  CURSOR FOR 
   SELECT SD2.R_E_C_N_O_ , D2_COD , D2_LOCAL , D2_TIPO , F4_PODER3 , D2_TIPODOC 
     FROM SD2010 SD2, SF4010 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D2_EMISSAO  >= @cDINICIO  and SD2.D2_EMISSAO  <= @cMV_PAR1 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' '  or SD2.D2_REMITO  <> ' ' 
      and SD2.D2_TPDCENV in ( '1' , 'A'  ) )  and SF4.F4_ESTOQUE  = 'S'  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   FOR READ ONLY 
    
   OPEN SD2_Cursor
   FETCH SD2_Cursor 
    INTO @vRecnoD2 , @cD2_COD , @cD2_LOCAL , @cD2_TIPO , @cF4_PODER3 , @cD2_TIPODOC 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @cB1_CCCUSTO  = ' ' 
      IF  (@cD2_TIPO  <> 'D' ) 
      BEGIN 
         IF  (@cF4_PODER3  = 'R' ) 
         BEGIN 
            SET @cAux1  = '300' 
            EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                   @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , 
                   @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
         END 
         ELSE 
         BEGIN 
            IF  (@cF4_PODER3  = 'D' ) 
            BEGIN 
               SET @cAux1  = @IN_MV_SEQREBE 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF  (@cD2_TIPODOC  >= '50' ) 
               BEGIN 
                  SET @cAux1  = '495' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  SET @cAux1  = '500' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@cD2_TIPODOC  >= '50' ) 
         BEGIN 
            SET @cAux1  = '145' 
            EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                   @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , 
                   @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
         END 
         ELSE 
         BEGIN 
            SELECT @vRecnoD1  = COALESCE ( SD1.R_E_C_N_O_ , 0 ), @cD1_LOCAL  = SD1.D1_LOCAL 
              FROM SD1010 SD1, SD2010 SD2
              WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD2.D2_FILIAL  = @cFil_SD2  and SD1.D1_DOC  = SD2.D2_NFORI  and SD1.D1_SERIE  = SD2.D2_SERIORI 
               and SD1.D1_FORNECE  = SD2.D2_CLIENTE  and SD1.D1_LOJA  = SD2.D2_LOJA  and SD1.D1_COD  = SD2.D2_COD  and SD1.D1_ITEM  = SD2.D2_ITEMORI 
               and SD2.R_E_C_N_O_  = @vRecnoD2  and SD1.D_E_L_E_T_  = ' '  and SD2.D_E_L_E_T_  = ' ' 
            IF @vRecnoD1  = 0  or  (@vRecnoD1  > 0  and  (@cD1_LOCAL  = @cD2_LOCAL  or @cD1_LOCAL  <> @cMV_CQ ) ) 
            BEGIN 
               SET @cAux1  = '150' 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF @vRecnoD1  > 0  and  (@cD1_LOCAL  <> @cD2_LOCAL  and @cD1_LOCAL  = @cMV_CQ ) 
               BEGIN 
                  SET @cAux1  = '500' 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
         END 
      END 
      SET @fim_CUR  = 0 
      FETCH SD2_Cursor 
       INTO @vRecnoD2 , @cD2_COD , @cD2_LOCAL , @cD2_TIPO , @cF4_PODER3 , @cD2_TIPODOC 
   END 
   CLOSE SD2_Cursor
   DEALLOCATE SD2_Cursor
   SET @cF4_PODER3  = ' ' 
    
   -- Cursor declaration SD3_Cursor
   DECLARE SD3_Cursor insensitive  CURSOR FOR 
   SELECT COALESCE ( SD3.R_E_C_N_O_ , 0 ) R_E_C_N_O_ , D3_COD , D3_LOCAL , D3_CF , D3_NUMSEQ , D3_DOC , D3_ESTORNO , D3_LOTECTL , 
          D3_NUMLOTE , D3_PROJPMS , D3_OP , D3_IDENT , D3_EMISSAO , D3_CHAVE , COALESCE ( SB1.B1_CCCUSTO , ' ' )
     FROM SD3010 SD3 left join SB1010 SB1 ON SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.D_E_L_E_T_  = ' ' 
     
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_EMISSAO  >= @cDINICIO  and SD3.D3_EMISSAO  <= @cMV_PAR1  and SD3.D3_ESTORNO  = ' ' 
      and SD3.D_E_L_E_T_  = ' ' 
     ORDER BY SD3.D3_EMISSAO , SD3.D3_NUMSEQ , SD3.D3_CHAVE , SD3.D3_COD , SD3.R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN SD3_Cursor
   FETCH SD3_Cursor 
    INTO @vRecnoD3 , @cD3_COD , @cD3_LOCAL , @cD3_CF , @cD3_NUMSEQ , @cD3_DOC , @cD3_ESTORNO , @cD3_LOTECTL , @cD3_NUMLOTE , 
          @cD3_PROJPMS , @cD3_OP , @cD3_IDENT , @cD3_EMISSAO , @cD3_CHAVE , @cB1_CCCUSTO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      IF  (@vRecnoD3 is null ) 
      BEGIN 
         SET @vRecnoD3  = 0 
      END 
      IF  (@cD3_CF in ( 'RE5' , 'DE5'  ) ) 
      BEGIN 
         SET @iRecCount  = 0 
         SELECT @iRecCount  = COALESCE ( R_E_C_N_O_ , 0 )
           FROM TRB01SP 
           WHERE TRB_RECNO  = @vRecnoD3  and TRB_ALIAS  = 'SD3' 
         IF @iRecCount is null 
         BEGIN 
            SET @iRecCount  = 0 
         END 
         IF @iRecCount  = 0 
         BEGIN 
            IF @cD3_IDENT  <> ' ' 
            BEGIN 
               SET @vRecnoD1  = 0 
               SELECT @vRecnoD1  = COALESCE ( R_E_C_N_O_ , 0 )
                 FROM SD1010 
                 WHERE D1_FILIAL  = @cFil_SD1  and D1_NUMSEQ  = @cD3_IDENT  and D_E_L_E_T_  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @vRecnoD1  = 0 
            END 
            IF @vRecnoD1  = 0 
            BEGIN 
               SET @cAux  = 'SD3' 
               SET @cAux1  = '300' 
               SET @nAux  = 0 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , @cFILIALCOR , 
                      @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , 
                      @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               SET @cAux  = 'SD3' 
               SET @cAux1  = '300' 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@cD3_CF in ( 'RE8' , 'DE8'  ) ) 
         BEGIN 
            SET @cAux  = 'SD3' 
            SET @cAux1  = '100' 
            SET @nAux  = 0 
            EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , @cFILIALCOR , 
                   @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , 
                   @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
         END 
         ELSE 
         BEGIN 
            IF @cD3_PROJPMS  <> ' ' 
            BEGIN 
               SET @cAux  = 'SD3' 
               SET @cAux1  = '480' 
               SET @nAux  = 0 
               EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , @cFILIALCOR , 
                      @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , 
                      @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF  (@cD3_CF  = 'RE0' )  and  (@cD3_OP  = ' ' ) 
               BEGIN 
                  SET @cAux  = 'SD3' 
                  SET @cAux1  = '301' 
                  SET @nAux  = 0 
                  EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  IF  (@cD3_CF  = 'RE4'  or @cD3_CF  = 'DE4' )  and @cD3_ESTORNO  = 'S' 
                  BEGIN 
                     SET @iTRA_RECNO  = 0 
                     SELECT @iTRA_RECNO  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                       FROM TRA01SP 
                       WHERE TRA_FILIAL  = @cFILIALCOR  and TRA_NUMSEQ  = @cD3_NUMSEQ  and TRA_CF  = @cD3_CF  and TRA_COD  = @cD3_COD 
                        and D_E_L_E_T_  = ' ' 
                     IF @iTRA_RECNO  = 0 
                     BEGIN 
                        begin tran 
                        INSERT INTO TRA01SP (TRA_FILIAL , TRA_NUMSEQ , TRA_CF , TRA_COD ) 
                        VALUES (@cFILIALCOR , @cD3_NUMSEQ , @cD3_CF , @cD3_COD );
                        Commit Tran 
                        SET @cTransf  = '1' 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cTransf  = '2' 
                     END 
                     SET @cAux  = 'SD3' 
                     SET @cAux1  = '300' 
                     SET @nAux  = 0 
                     EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                            @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                            @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@cD3_CF  = 'RE6'  or @cD3_CF  = 'DE6' ) 
                     BEGIN 
                        SELECT @vRecnoD7  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                          FROM SD7010 
                          WHERE D7_FILIAL  = @cFILIALCOR  and D7_PRODUTO  = @cD3_COD  and D7_NUMSEQ  = @cD3_NUMSEQ  and D7_NUMERO  = @cD3_DOC 
                           and D7_ORIGLAN  = 'CP'  and D_E_L_E_T_  = ' ' 
                        IF @cD3_LOCAL  = @cMV_CQ  and @vRecnoD7  > 0 
                        BEGIN 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '110' 
                           SET @nAux  = 0 
                           EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , 
                                  @IN_FILIALPROC 
                        END 
                        ELSE 
                        BEGIN 
                           IF @vRecnoD7  > 0 
                           BEGIN 
                              SET @cAux  = 'SD3' 
                              SET @cAux1  = '110' 
                              SET @nAux  = 0 
                              EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                     @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , 
                                     @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , 
                                     @cB1_CCCUSTO , @IN_FILIALPROC 
                           END 
                           ELSE 
                           BEGIN 
                              IF @IN_MV_CUSREP  = '1' 
                              BEGIN 
                                 SELECT @cD3_STATUS  = COALESCE ( SD3.D3_STATUS , '  ' )
                                   FROM SD3010 SD3
                                   WHERE SD3.R_E_C_N_O_  = @vRecnoD3  and SD3.D_E_L_E_T_  = ' ' 
                                 IF @cD3_STATUS  = 'RP' 
                                 BEGIN 
                                    SET @cAux  = 'SD3' 
                                    SET @cAux1  = '610' 
                                    SET @nAux  = 0 
                                    EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                           @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                           @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                           @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                 END 
                                 ELSE 
                                 BEGIN 
                                    SET @cAux  = 'SD3' 
                                    SET @cAux1  = '300' 
                                    SET @nAux  = 0 
                                    EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                           @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                           @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                           @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                 END 
                              END 
                              ELSE 
                              BEGIN 
                                 IF @IN_CPAISLOC  = 'BOL' 
                                 BEGIN 
                                    SELECT @cD3_STATUS  = COALESCE ( SD3.D3_STATUS , '  ' )
                                      FROM SD3010 SD3
                                      WHERE SD3.R_E_C_N_O_  = @vRecnoD3  and SD3.D_E_L_E_T_  = ' ' 
                                    IF @cD3_STATUS  = 'AC' 
                                    BEGIN 
                                       SET @cAux  = 'SD3' 
                                       SET @cAux1  = '080' 
                                       SET @nAux  = 0 
                                       EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                              @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                              @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                              @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                    END 
                                    ELSE 
                                    BEGIN 
                                       SET @cAux  = 'SD3' 
                                       SET @cAux1  = '300' 
                                       SET @nAux  = 0 
                                       EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                              @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                              @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                              @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                    END 
                                 END 
                                 ELSE 
                                 BEGIN 
                                    SET @cAux  = 'SD3' 
                                    SET @cAux1  = '300' 
                                    SET @nAux  = 0 
                                    EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                           @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                           @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                           @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                 END 
                              END 
                           END 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF  (@cD3_CF  = 'REA'  or @cD3_CF  = 'DEA' ) 
                        BEGIN 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '600' 
                           SET @nAux  = 0 
                           EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , 
                                  @IN_FILIALPROC 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '300' 
                           SET @nAux  = 0 
                           EXEC MAT009_19_01 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , 
                                  @IN_FILIALPROC 
                        END 
                     END 
                  END 
               END 
            END 
         END 
      END 
      SET @fim_CUR  = 0 
      FETCH SD3_Cursor 
       INTO @vRecnoD3 , @cD3_COD , @cD3_LOCAL , @cD3_CF , @cD3_NUMSEQ , @cD3_DOC , @cD3_ESTORNO , @cD3_LOTECTL , @cD3_NUMLOTE , 
             @cD3_PROJPMS , @cD3_OP , @cD3_IDENT , @cD3_EMISSAO , @cD3_CHAVE , @cB1_CCCUSTO 
   END 
   CLOSE SD3_Cursor
   DEALLOCATE SD3_Cursor
   IF  (@cMV_PRODMNT  <> ' ' ) 
   BEGIN 
      SELECT @vRecnoMNT  = COALESCE ( COUNT ( * ), 0 )
        FROM SB1010 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @cMV_PRODMNT  and D_E_L_E_T_  = ' ' 
      IF @vRecnoMNT  > 0 
      BEGIN 
         begin tran 
         DELETE FROM TRB01SP  WHERE TRB_COD  = @cMV_PRODMNT 
         commit tran 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT004_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT004_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT004_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT004_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_NIVALT Char( 01 ) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_PAR09 Integer , 
    @IN_MV_PAR11 Integer , 
    @IN_MV_PAR14 Integer , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_LOCALIZ Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_TAM_TRB_DOC Integer , 
    @IN_COPCOES Char( 04 ) , 
    @IN_CUSUNIF Char( 01 ) , 
    @IN_MV_PRODPR0 Integer , 
    @IN_DDATABASE Char( 08 ) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @IN_RECNOSMO Integer , 
    @IN_MV_PAR18 Integer , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_PRODMNT Char( 15) , 
    @IN_MV_MOEDACM Char( 5 ) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CUSREP Char( 01 ) , 
    @IN_MV_PAR15 Integer , 
    @IN_USAFILTRF Char( 01 ) , 
    @IN_SEQ500 Char( 01 ) , 
    @IN_MVULMES Char( 08 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @IN_MV_SEQREBE Char( 03 ) , 
    @IN_MV_330JCM1 Char( 05 ) , 
    @IN_MV_PROCQE6 Char( 01 ) , 
    @IN_FILIALPROC Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_AFN Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cExecutou Char( 01 )
DECLARE @vContador Integer
DECLARE @vRecnoD1 Integer
DECLARE @vRecnoMNT Integer
DECLARE @cF4_PODER3 Char( 1)
DECLARE @cF4_ESTOQUE Char( 1)
DECLARE @cD1_COD Char( 15)
DECLARE @cD1_TIPO Char( 1)
DECLARE @cD1_OP Char( 13)
DECLARE @cD1_NUMSEQ Char( 6)
DECLARE @cD1_LOCAL Char( 2)
DECLARE @cD1_DOC Char( 8)
DECLARE @cD1_SERIE Char( 3)
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cD1_LOJA Char( 4)
DECLARE @cD1_ITEM Char( 4)
DECLARE @cD1_TIPODOC Char( 2)
DECLARE @vRecnoD2 Integer
DECLARE @cD2_COD Char( 15)
DECLARE @cD2_LOCAL Char( 2)
DECLARE @cD2_TIPO Char( 1)
DECLARE @cD2_TIPODOC Char( 2)
DECLARE @vRecnoD3 Integer
DECLARE @vRecnoD7 Integer
DECLARE @cD3_COD Char( 15)
DECLARE @cD3_LOCAL Char( 2)
DECLARE @cD3_CF Char( 3)
DECLARE @cD3_NUMSEQ Char( 6)
DECLARE @cD3_DOC Char( 8)
DECLARE @cD3_ESTORNO Char( 1)
DECLARE @cD3_LOTECTL Char( 10)
DECLARE @cD3_NUMLOTE Char( 6)
DECLARE @cD3_PROJPMS Char( 10)
DECLARE @cD3_OP Char( 14)
DECLARE @cD3_IDENT Char( 6)
DECLARE @cD3_EMISSAO Char( 8)
DECLARE @cD3_CHAVE Char( 2)
DECLARE @nRecTRB Integer
DECLARE @iRecCount Integer
DECLARE @MV_PAR14 Integer
DECLARE @cMDia Char( 01 )
DECLARE @cAux VarChar( 3 )
DECLARE @cAux1 VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nAptmPMS Integer
DECLARE @nAptmPMSTMP Integer
DECLARE @iTRA_RECNO Integer
DECLARE @cTransf Char( 01 )
DECLARE @nRecnoSD3 Integer
DECLARE @cD3_STATUS VarChar( 2 )
DECLARE @fim_CUR Integer
DECLARE @cMV_PAR1 Char( 08 )
DECLARE @cDINICIO Char( 08 )
DECLARE @cMV_PRODMNT Char( 15)
DECLARE @cFILIALCOR Char( 2)
DECLARE @cMV_CQ Char( 2)
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @nConSD3 Char( 01 )
BEGIN
   SET @cMV_PAR1  = @IN_MV_PAR1 
   SET @cDINICIO  = @IN_DINICIO 
   SET @cMV_PRODMNT  = @IN_MV_PRODMNT 
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cMV_CQ  = @IN_MV_CQ 
   SET @cAux  = 'AFN' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_AFN output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SG1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SG1 output 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SB1 output 
   SET @OUT_RESULTADO  = '0' 
   SET @cExecutou  = ' ' 
   SET @vRecnoD3  = 0 
   SET @vRecnoD7  = 0 
   SET @cD3_ESTORNO  = ' ' 
   SET @MV_PAR14  = @IN_MV_PAR14 
   SET @cTransf  = '0' 
   SET @nAptmPMS  = 0 
   SET @nAptmPMSTMP  = 0 
   SET @cD3_STATUS  = '  ' 
   SET @vRecnoD1  = 0 
   SET @cB1_CCCUSTO  = ' ' 
   SET @nConSD3  = '0' 
   SET @cAux  = '  ' 
   EXEC MAT007_19_02 @cFILIALCOR , @cAux , @cDINICIO , @IN_MV_LOCPROC , @IN_COPCOES , @IN_CUSUNIF , @IN_DDATABASE , @IN_MV_NEGESTR , 
          @IN_MV_MOEDACM , @IN_MV_PAR1 , @IN_MV_CUSFIFO , @cMV_PRODMNT , @IN_MV_D3SERVI , @IN_INTDL , @cMV_CQ , @IN_MVULMES , 
          @IN_MV_WMSNEW , @IN_MV_PRODMOD , @cExecutou output 
    
   -- Cursor declaration SD1_Cursor
   DECLARE SD1_Cursor insensitive  CURSOR FOR 
   SELECT SD1.R_E_C_N_O_ , SF4.F4_PODER3 , D1_COD , D1_TIPO , D1_OP , D1_NUMSEQ , D1_DOC , D1_SERIE , D1_FORNECE , D1_LOJA , 
          D1_ITEM , D1_TIPODOC , D1_LOCAL , SF4.F4_ESTOQUE 
     FROM SD1030 SD1, SF4030 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SF4.F4_FILIAL  = @cFil_SF4  and SD1.D1_DTDIGIT  >= @cDINICIO  and SD1.D1_DTDIGIT  <= @cMV_PAR1 
      and SD1.D1_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' '  and SD1.D_E_L_E_T_  = ' ' 
      and SF4.D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN SD1_Cursor
   FETCH SD1_Cursor 
    INTO @vRecnoD1 , @cF4_PODER3 , @cD1_COD , @cD1_TIPO , @cD1_OP , @cD1_NUMSEQ , @cD1_DOC , @cD1_SERIE , @cD1_FORNECE , 
          @cD1_LOJA , @cD1_ITEM , @cD1_TIPODOC , @cD1_LOCAL , @cF4_ESTOQUE 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nRecnoSD3  = 0 
      SET @cB1_CCCUSTO  = ' ' 
      IF  (@cD1_OP  <> ' ' )  and  (@cF4_ESTOQUE  = 'S' )  and  (@cF4_PODER3 NOT IN ( 'R' , 'S'  ) ) 
      BEGIN 
         SELECT @nRecnoSD3  = COALESCE ( R_E_C_N_O_ , 0 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and  ( ( (@cMV_CQ  = @cD1_LOCAL )  and  (SD3.D3_IDENT  = @cD1_NUMSEQ ) )  or  ( (@cMV_CQ  <> @cD1_LOCAL 
           )  and  (SD3.D3_NUMSEQ  = @cD1_NUMSEQ ) ) )  and SD3.D3_EMISSAO  >= @cDINICIO  and SD3.D3_EMISSAO  <= @cMV_PAR1 
            and SD3.D3_CF  = 'RE5'  and SD3.D3_COD  = @cD1_COD  and SD3.D3_OP  = @cD1_OP  and SD3.D3_ESTORNO  = ' '  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @nRecnoSD3 is null 
      BEGIN 
         SET @nRecnoSD3  = 0 
      END 
      IF  (@cD1_TIPO  <> 'D' ) 
      BEGIN 
         IF  (@cF4_PODER3  = 'D' ) 
         BEGIN 
            SET @cAux  = 'D' 
            EXEC MAT042_19_02 @cFILIALCOR , @cAux , @cMV_PAR1 , @IN_MV_PAR14 , @vRecnoD1 , @cDINICIO , @cMDia output 
            IF  (@cMDia  = '1' ) 
            BEGIN 
               SET @cAux  = 'SD1' 
               SET @cAux1  = '300' 
               SET @nAux  = 0 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               SET @cAux  = 'SD1' 
               SET @cAux1  = '280' 
               SET @nAux  = 0 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@cF4_PODER3  = 'R' ) 
            BEGIN 
               SET @cAux  = 'SD1' 
               SET @cAux1  = '250' 
               SET @nAux  = 0 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF @nRecnoSD3  = 0 
               BEGIN 
                  SET @cAux  = 'SD1' 
                  SET @nAux  = 0 
                  IF  (@cD1_TIPODOC  >= '50' ) 
                  BEGIN 
                     SET @cAux1  = '095' 
                     SET @nAux  = 0 
                     EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                            @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                            @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cAux1  = '100' 
                     SET @nAux  = 0 
                     EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                            @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                            @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                  END 
               END 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@cD1_TIPO  = 'D' ) 
         BEGIN 
            SET @cAux  = 'V' 
            EXEC MAT042_19_02 @cFILIALCOR , @cAux , @cMV_PAR1 , @IN_MV_PAR14 , @vRecnoD1 , @cDINICIO , @cMDia output 
            SET @cAux  = 'SD1' 
            SET @nAux  = 0 
            IF  (@cMDia  = '1' ) 
            BEGIN 
               IF  (@cD1_TIPODOC  >= '50' ) 
               BEGIN 
                  SET @cAux1  = '545' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  SET @cAux1  = '500' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@cD1_TIPODOC  >= '50' ) 
               BEGIN 
                  SET @cAux1  = '195' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  SET @cAux1  = '200' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nRecnoSD3 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
         END 
      END 
      IF  ( (@cD1_OP  <> ' ' )  or  (@nAptmPMS  > 0 ) )  and  (@cF4_PODER3 NOT in ( 'R' , 'S'  ) ) 
      BEGIN 
         SELECT @nAptmPMS  = COALESCE ( COUNT ( * ), 0 )
           FROM AFN030 AFN
           WHERE AFN_FILIAL  = @cFil_AFN  and AFN_DOC  = @cD1_DOC  and AFN_SERIE  = @cD1_SERIE  and AFN_FORNEC  = @cD1_FORNECE 
            and AFN_LOJA  = @cD1_LOJA  and AFN_ITEM  = @cD1_ITEM  and AFN_ESTOQU  <> '2'  and D_E_L_E_T_  = ' ' 
         SELECT @nRecTRB  = MAX ( R_E_C_N_O_ )
           FROM TRB02SP 
           WHERE TRB_FILIAL  = @cFILIALCOR 
         IF @nRecTRB is null 
         BEGIN 
            SET @nRecTRB  = 0 
         END 
         SET @nConSD3  = '0' 
          
         -- Cursor declaration SD3_Cursor01
         DECLARE SD3_Cursor01 insensitive  CURSOR FOR 
         SELECT SD3.R_E_C_N_O_ , D3_COD , D3_NUMSEQ , D3_LOCAL , D3_LOTECTL , D3_NUMLOTE , D3_DOC , D3_ESTORNO , COALESCE ( SB1.B1_CCCUSTO , 
                ' ' )
           FROM SD3030 SD3 left join SB1030 SB1 ON SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.D_E_L_E_T_  = ' ' 
           
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and  ( ( (SD3.D3_IDENT  = @cD1_NUMSEQ ) )  or  ( (@cMV_CQ  <> @cD1_LOCAL )  and  (SD3.D3_NUMSEQ  = @cD1_NUMSEQ 
           ) ) )  and SD3.D3_EMISSAO  >= @cDINICIO  and SD3.D3_EMISSAO  <= @cMV_PAR1  and SD3.D3_CF  = 'RE5'  and SD3.D3_COD  = @cD1_COD 
            and SD3.D3_OP  = @cD1_OP  and SD3.D3_ESTORNO  = ' '  and SD3.D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN SD3_Cursor01
         FETCH SD3_Cursor01 
          INTO @vRecnoD3 , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC , @cD3_ESTORNO , 
                @cB1_CCCUSTO 
         WHILE (@@Fetch_Status  = 0 )
         BEGIN
            IF  (@vRecnoD3 is null ) 
            BEGIN 
               SET @vRecnoD3  = 0 
            END 
            IF  (@nConSD3  = '0' ) 
            BEGIN 
               IF @cMV_CQ  = @cD1_LOCAL 
               BEGIN 
                  SET @nConSD3  = '1' 
               END 
               IF  (@cD1_TIPO  <> 'D' ) 
               BEGIN 
                  IF  (@cF4_PODER3  = 'D' ) 
                  BEGIN 
                     SET @cAux  = 'D' 
                     EXEC MAT042_19_02 @cFILIALCOR , @cAux , @cMV_PAR1 , @IN_MV_PAR14 , @vRecnoD1 , @cDINICIO , @cMDia output 
                     IF  (@cMDia  = '1' ) 
                     BEGIN 
                        SET @cAux  = 'SD3' 
                        SET @cAux1  = '300' 
                        EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                               @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                               @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cAux  = 'SD3' 
                        SET @cAux1  = '280' 
                        EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                               @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                               @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                     END 
                     Begin tran 
                     UPDATE TRB02SP 
                       WITH (ROWLOCK) 
                        SET TRB_RECSD1  = @vRecnoD3 
                      WHERE R_E_C_N_O_  = @nRecTRB 
                     Commit Tran 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@cF4_PODER3  <> 'R' ) 
                     BEGIN 
                        IF  (@nAptmPMS  > 0 ) 
                        BEGIN 
                           SET @vContador  = @nAptmPMS 
                           WHILE ( (@vContador  > 0 ) )
                           BEGIN
                              SET @cAux1  = '300' 
                              SET @cAux  = 'SD1' 
                              SET @nRecTRB  = 0 
                              EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @vRecnoD3 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , 
                                     @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                     @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                     @IN_MV_PROCQE6 , ' ' , @IN_FILIALPROC 
                              SELECT @nRecTRB  = MAX ( R_E_C_N_O_ )
                                FROM TRB02SP 
                                WHERE TRB_FILIAL  = @cFILIALCOR 
                              IF @nRecTRB is null 
                              BEGIN 
                                 SET @nRecTRB  = 0 
                              END 
                              SET @cAux1  = '300' 
                              SET @cAux  = 'SD3' 
                              EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , 
                                     @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                     @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                     @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                              SET @vContador  = @vContador  - 1 
                           END 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cAux1  = '300' 
                           SET @cAux  = 'SD1' 
                           SET @nAux  = 0 
                           SET @nRecTRB  = 0 
                           EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD1 , @nAux , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , ' ' , @IN_FILIALPROC 
                           SELECT @nRecTRB  = MAX ( R_E_C_N_O_ )
                             FROM TRB02SP 
                             WHERE TRB_FILIAL  = @cFILIALCOR 
                           IF @nRecTRB is null 
                           BEGIN 
                              SET @nRecTRB  = 0 
                           END 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '300' 
                           EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nRecTRB , @MV_PAR14 , @cMV_PAR1 , 
                                  @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                  @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                  @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                        END 
                     END 
                  END 
               END 
            END 
            SET @fim_CUR  = 0 
            FETCH SD3_Cursor01 
             INTO @vRecnoD3 , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC , @cD3_ESTORNO , 
                   @cB1_CCCUSTO 
         END 
         CLOSE SD3_Cursor01
         DEALLOCATE SD3_Cursor01
      END 
      SET @fim_CUR  = 0 
      FETCH SD1_Cursor 
       INTO @vRecnoD1 , @cF4_PODER3 , @cD1_COD , @cD1_TIPO , @cD1_OP , @cD1_NUMSEQ , @cD1_DOC , @cD1_SERIE , @cD1_FORNECE , 
             @cD1_LOJA , @cD1_ITEM , @cD1_TIPODOC , @cD1_LOCAL , @cF4_ESTOQUE 
   END 
   CLOSE SD1_Cursor
   DEALLOCATE SD1_Cursor
   SET @nAptmPMSTMP  = 0 
   SET @cAux  = 'SD2' 
    
   -- Cursor declaration SD2_Cursor
   DECLARE SD2_Cursor insensitive  CURSOR FOR 
   SELECT SD2.R_E_C_N_O_ , D2_COD , D2_LOCAL , D2_TIPO , F4_PODER3 , D2_TIPODOC 
     FROM SD2030 SD2, SF4030 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D2_EMISSAO  >= @cDINICIO  and SD2.D2_EMISSAO  <= @cMV_PAR1 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' '  or SD2.D2_REMITO  <> ' ' 
      and SD2.D2_TPDCENV in ( '1' , 'A'  ) )  and SF4.F4_ESTOQUE  = 'S'  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   FOR READ ONLY 
    
   OPEN SD2_Cursor
   FETCH SD2_Cursor 
    INTO @vRecnoD2 , @cD2_COD , @cD2_LOCAL , @cD2_TIPO , @cF4_PODER3 , @cD2_TIPODOC 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @cB1_CCCUSTO  = ' ' 
      IF  (@cD2_TIPO  <> 'D' ) 
      BEGIN 
         IF  (@cF4_PODER3  = 'R' ) 
         BEGIN 
            SET @cAux1  = '300' 
            EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                   @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , 
                   @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
         END 
         ELSE 
         BEGIN 
            IF  (@cF4_PODER3  = 'D' ) 
            BEGIN 
               SET @cAux1  = @IN_MV_SEQREBE 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF  (@cD2_TIPODOC  >= '50' ) 
               BEGIN 
                  SET @cAux1  = '495' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  SET @cAux1  = '500' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@cD2_TIPODOC  >= '50' ) 
         BEGIN 
            SET @cAux1  = '145' 
            EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                   @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , 
                   @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
         END 
         ELSE 
         BEGIN 
            SELECT @vRecnoD1  = COALESCE ( SD1.R_E_C_N_O_ , 0 ), @cD1_LOCAL  = SD1.D1_LOCAL 
              FROM SD1030 SD1, SD2030 SD2
              WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD2.D2_FILIAL  = @cFil_SD2  and SD1.D1_DOC  = SD2.D2_NFORI  and SD1.D1_SERIE  = SD2.D2_SERIORI 
               and SD1.D1_FORNECE  = SD2.D2_CLIENTE  and SD1.D1_LOJA  = SD2.D2_LOJA  and SD1.D1_COD  = SD2.D2_COD  and SD1.D1_ITEM  = SD2.D2_ITEMORI 
               and SD2.R_E_C_N_O_  = @vRecnoD2  and SD1.D_E_L_E_T_  = ' '  and SD2.D_E_L_E_T_  = ' ' 
            IF @vRecnoD1  = 0  or  (@vRecnoD1  > 0  and  (@cD1_LOCAL  = @cD2_LOCAL  or @cD1_LOCAL  <> @cMV_CQ ) ) 
            BEGIN 
               SET @cAux1  = '150' 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF @vRecnoD1  > 0  and  (@cD1_LOCAL  <> @cD2_LOCAL  and @cD1_LOCAL  = @cMV_CQ ) 
               BEGIN 
                  SET @cAux1  = '500' 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD2 , @nAptmPMSTMP , @nAptmPMSTMP , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
            END 
         END 
      END 
      SET @fim_CUR  = 0 
      FETCH SD2_Cursor 
       INTO @vRecnoD2 , @cD2_COD , @cD2_LOCAL , @cD2_TIPO , @cF4_PODER3 , @cD2_TIPODOC 
   END 
   CLOSE SD2_Cursor
   DEALLOCATE SD2_Cursor
   SET @cF4_PODER3  = ' ' 
    
   -- Cursor declaration SD3_Cursor
   DECLARE SD3_Cursor insensitive  CURSOR FOR 
   SELECT COALESCE ( SD3.R_E_C_N_O_ , 0 ) R_E_C_N_O_ , D3_COD , D3_LOCAL , D3_CF , D3_NUMSEQ , D3_DOC , D3_ESTORNO , D3_LOTECTL , 
          D3_NUMLOTE , D3_PROJPMS , D3_OP , D3_IDENT , D3_EMISSAO , D3_CHAVE , COALESCE ( SB1.B1_CCCUSTO , ' ' )
     FROM SD3030 SD3 left join SB1030 SB1 ON SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.D_E_L_E_T_  = ' ' 
     
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_EMISSAO  >= @cDINICIO  and SD3.D3_EMISSAO  <= @cMV_PAR1  and SD3.D3_ESTORNO  = ' ' 
      and SD3.D_E_L_E_T_  = ' ' 
     ORDER BY SD3.D3_EMISSAO , SD3.D3_NUMSEQ , SD3.D3_CHAVE , SD3.D3_COD , SD3.R_E_C_N_O_ 
   FOR READ ONLY 
    
   OPEN SD3_Cursor
   FETCH SD3_Cursor 
    INTO @vRecnoD3 , @cD3_COD , @cD3_LOCAL , @cD3_CF , @cD3_NUMSEQ , @cD3_DOC , @cD3_ESTORNO , @cD3_LOTECTL , @cD3_NUMLOTE , 
          @cD3_PROJPMS , @cD3_OP , @cD3_IDENT , @cD3_EMISSAO , @cD3_CHAVE , @cB1_CCCUSTO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      IF  (@vRecnoD3 is null ) 
      BEGIN 
         SET @vRecnoD3  = 0 
      END 
      IF  (@cD3_CF in ( 'RE5' , 'DE5'  ) ) 
      BEGIN 
         SET @iRecCount  = 0 
         SELECT @iRecCount  = COALESCE ( R_E_C_N_O_ , 0 )
           FROM TRB02SP 
           WHERE TRB_RECNO  = @vRecnoD3  and TRB_ALIAS  = 'SD3' 
         IF @iRecCount is null 
         BEGIN 
            SET @iRecCount  = 0 
         END 
         IF @iRecCount  = 0 
         BEGIN 
            IF @cD3_IDENT  <> ' ' 
            BEGIN 
               SET @vRecnoD1  = 0 
               SELECT @vRecnoD1  = COALESCE ( R_E_C_N_O_ , 0 )
                 FROM SD1030 
                 WHERE D1_FILIAL  = @cFil_SD1  and D1_NUMSEQ  = @cD3_IDENT  and D_E_L_E_T_  = ' ' 
            END 
            ELSE 
            BEGIN 
               SET @vRecnoD1  = 0 
            END 
            IF @vRecnoD1  = 0 
            BEGIN 
               SET @cAux  = 'SD3' 
               SET @cAux1  = '300' 
               SET @nAux  = 0 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , @cFILIALCOR , 
                      @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , 
                      @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               SET @cAux  = 'SD3' 
               SET @cAux1  = '300' 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @vRecnoD1 , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                      @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                      @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@cD3_CF in ( 'RE8' , 'DE8'  ) ) 
         BEGIN 
            SET @cAux  = 'SD3' 
            SET @cAux1  = '100' 
            SET @nAux  = 0 
            EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , @cFILIALCOR , 
                   @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , 
                   @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
         END 
         ELSE 
         BEGIN 
            IF @cD3_PROJPMS  <> ' ' 
            BEGIN 
               SET @cAux  = 'SD3' 
               SET @cAux1  = '480' 
               SET @nAux  = 0 
               EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , @cFILIALCOR , 
                      @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , 
                      @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
            END 
            ELSE 
            BEGIN 
               IF  (@cD3_CF  = 'RE0' )  and  (@cD3_OP  = ' ' ) 
               BEGIN 
                  SET @cAux  = 'SD3' 
                  SET @cAux1  = '301' 
                  SET @nAux  = 0 
                  EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                         @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                         @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
               END 
               ELSE 
               BEGIN 
                  IF  (@cD3_CF  = 'RE4'  or @cD3_CF  = 'DE4' )  and @cD3_ESTORNO  = 'S' 
                  BEGIN 
                     SET @iTRA_RECNO  = 0 
                     SELECT @iTRA_RECNO  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                       FROM TRA02SP 
                       WHERE TRA_FILIAL  = @cFILIALCOR  and TRA_NUMSEQ  = @cD3_NUMSEQ  and TRA_CF  = @cD3_CF  and TRA_COD  = @cD3_COD 
                        and D_E_L_E_T_  = ' ' 
                     IF @iTRA_RECNO  = 0 
                     BEGIN 
                        begin tran 
                        INSERT INTO TRA02SP (TRA_FILIAL , TRA_NUMSEQ , TRA_CF , TRA_COD ) 
                        VALUES (@cFILIALCOR , @cD3_NUMSEQ , @cD3_CF , @cD3_COD );
                        Commit Tran 
                        SET @cTransf  = '1' 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cTransf  = '2' 
                     END 
                     SET @cAux  = 'SD3' 
                     SET @cAux1  = '300' 
                     SET @nAux  = 0 
                     EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                            @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                            @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@cD3_CF  = 'RE6'  or @cD3_CF  = 'DE6' ) 
                     BEGIN 
                        SELECT @vRecnoD7  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                          FROM SD7030 
                          WHERE D7_FILIAL  = @cFILIALCOR  and D7_PRODUTO  = @cD3_COD  and D7_NUMSEQ  = @cD3_NUMSEQ  and D7_NUMERO  = @cD3_DOC 
                           and D7_ORIGLAN  = 'CP'  and D_E_L_E_T_  = ' ' 
                        IF @cD3_LOCAL  = @cMV_CQ  and @vRecnoD7  > 0 
                        BEGIN 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '110' 
                           SET @nAux  = 0 
                           EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , 
                                  @IN_FILIALPROC 
                        END 
                        ELSE 
                        BEGIN 
                           IF @vRecnoD7  > 0 
                           BEGIN 
                              SET @cAux  = 'SD3' 
                              SET @cAux1  = '110' 
                              SET @nAux  = 0 
                              EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                     @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , 
                                     @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , 
                                     @cB1_CCCUSTO , @IN_FILIALPROC 
                           END 
                           ELSE 
                           BEGIN 
                              IF @IN_MV_CUSREP  = '1' 
                              BEGIN 
                                 SELECT @cD3_STATUS  = COALESCE ( SD3.D3_STATUS , '  ' )
                                   FROM SD3030 SD3
                                   WHERE SD3.R_E_C_N_O_  = @vRecnoD3  and SD3.D_E_L_E_T_  = ' ' 
                                 IF @cD3_STATUS  = 'RP' 
                                 BEGIN 
                                    SET @cAux  = 'SD3' 
                                    SET @cAux1  = '610' 
                                    SET @nAux  = 0 
                                    EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                           @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                           @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                           @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                 END 
                                 ELSE 
                                 BEGIN 
                                    SET @cAux  = 'SD3' 
                                    SET @cAux1  = '300' 
                                    SET @nAux  = 0 
                                    EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                           @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                           @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                           @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                 END 
                              END 
                              ELSE 
                              BEGIN 
                                 IF @IN_CPAISLOC  = 'BOL' 
                                 BEGIN 
                                    SELECT @cD3_STATUS  = COALESCE ( SD3.D3_STATUS , '  ' )
                                      FROM SD3030 SD3
                                      WHERE SD3.R_E_C_N_O_  = @vRecnoD3  and SD3.D_E_L_E_T_  = ' ' 
                                    IF @cD3_STATUS  = 'AC' 
                                    BEGIN 
                                       SET @cAux  = 'SD3' 
                                       SET @cAux1  = '080' 
                                       SET @nAux  = 0 
                                       EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                              @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                              @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                              @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                    END 
                                    ELSE 
                                    BEGIN 
                                       SET @cAux  = 'SD3' 
                                       SET @cAux1  = '300' 
                                       SET @nAux  = 0 
                                       EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                              @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                              @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                              @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                    END 
                                 END 
                                 ELSE 
                                 BEGIN 
                                    SET @cAux  = 'SD3' 
                                    SET @cAux1  = '300' 
                                    SET @nAux  = 0 
                                    EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , 
                                           @IN_MV_PRODPR0 , @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , 
                                           @IN_SEQ500 , @IN_MV_PRODMOD , @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , 
                                           @IN_MV_PROCQE6 , @cB1_CCCUSTO , @IN_FILIALPROC 
                                 END 
                              END 
                           END 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF  (@cD3_CF  = 'REA'  or @cD3_CF  = 'DEA' ) 
                        BEGIN 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '600' 
                           SET @nAux  = 0 
                           EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , 
                                  @IN_FILIALPROC 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cAux  = 'SD3' 
                           SET @cAux1  = '300' 
                           SET @nAux  = 0 
                           EXEC MAT009_19_02 @cAux , @cAux1 , @vRecnoD3 , @nAux , @nAux , @MV_PAR14 , @cMV_PAR1 , @IN_MV_PRODPR0 , 
                                  @cFILIALCOR , @IN_RECNOSMO , @cTransf , @IN_CPAISLOC , @IN_USAFILTRF , @IN_SEQ500 , @IN_MV_PRODMOD , 
                                  @cMV_CQ , @IN_MV_PAR11 , @IN_MV_PAR18 , @IN_MV_330JCM1 , @IN_MV_PROCQE6 , @cB1_CCCUSTO , 
                                  @IN_FILIALPROC 
                        END 
                     END 
                  END 
               END 
            END 
         END 
      END 
      SET @fim_CUR  = 0 
      FETCH SD3_Cursor 
       INTO @vRecnoD3 , @cD3_COD , @cD3_LOCAL , @cD3_CF , @cD3_NUMSEQ , @cD3_DOC , @cD3_ESTORNO , @cD3_LOTECTL , @cD3_NUMLOTE , 
             @cD3_PROJPMS , @cD3_OP , @cD3_IDENT , @cD3_EMISSAO , @cD3_CHAVE , @cB1_CCCUSTO 
   END 
   CLOSE SD3_Cursor
   DEALLOCATE SD3_Cursor
   IF  (@cMV_PRODMNT  <> ' ' ) 
   BEGIN 
      SELECT @vRecnoMNT  = COALESCE ( COUNT ( * ), 0 )
        FROM SB1030 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @cMV_PRODMNT  and D_E_L_E_T_  = ' ' 
      IF @vRecnoMNT  > 0 
      BEGIN 
         begin tran 
         DELETE FROM TRB02SP  WHERE TRB_COD  = @cMV_PRODMNT 
         commit tran 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT005_20_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT005_20_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT005_20_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT005_20_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_ARQUIVO Char( 01 ) , 
    @IN_FILIALPROC Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @vNivel Integer
DECLARE @vProduto Char( 15)
DECLARE @cNivel VarChar( 3)
DECLARE @cNivelAux VarChar( 3)
DECLARE @cNivelInv VarChar( 3)
DECLARE @cFil_SG1 Char( 2)
DECLARE @nCount Integer
DECLARE @nContador Integer
DECLARE @nRecno Integer
DECLARE @cTipo VarChar( 2 )
DECLARE @cAux VarChar( 3 )
DECLARE @iTranCount Integer
DECLARE @cFILIALCOR Char( 2)
DECLARE @cFILIALPROC Char( 2)
DECLARE @cARQUIVO Char( 01 )
BEGIN
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cFILIALPROC  = @IN_FILIALPROC 
   SET @cARQUIVO  = @IN_ARQUIVO 
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SG1' 
   EXEC XFILIAL_20_01 @cAux , @cFILIALCOR , @cFil_SG1 output 
   IF  (@cARQUIVO  = '0' ) 
   BEGIN 
      SET @nContador  = 0 
       
      -- Cursor declaration LISTA_SG1
      DECLARE LISTA_SG1 INSENSITIVE  CURSOR FOR 
      SELECT * 
        FROM (
      SELECT G1.R_E_C_N_O_ , 'PA'  TIPO 
        FROM SG1010 G1
        WHERE G1.G1_FILIAL  = @cFil_SG1  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD NOT IN ( 
      SELECT distinct A.G1_COMP 
        FROM SG1010 A
        WHERE A.G1_FILIAL  = @cFil_SG1  and A.D_E_L_E_T_  = ' '  ) 
      UNION 
      SELECT G1.R_E_C_N_O_ , 'PI'  TIPO 
        FROM SG1010 G1
        WHERE G1.G1_FILIAL  = @cFil_SG1  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD IN ( 
      SELECT distinct A.G1_COMP 
        FROM SG1010 A
        WHERE A.G1_FILIAL  = @cFil_SG1  and A.D_E_L_E_T_  = ' '  ) ) TMP
      FOR READ ONLY 
       
      OPEN LISTA_SG1
      FETCH LISTA_SG1 
       INTO @nRecno , @cTipo 
      WHILE (@@Fetch_Status  = 0 )
      BEGIN
         SET @nContador  = @nContador  + 1 
         IF @nContador  = 1 
         BEGIN 
            Begin tran 
            SET @nContador  = @nContador 
         END 
         IF @cTipo  = 'PA' 
         BEGIN 
            UPDATE SG1010 
              WITH (ROWLOCK) 
               SET G1_NIV  = '01' , G1_NIVINV  = '99' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         ELSE 
         BEGIN 
            UPDATE SG1010 
              WITH (ROWLOCK) 
               SET G1_NIV  = '  ' , G1_NIVINV  = '  ' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         FETCH LISTA_SG1 
          INTO @nRecno , @cTipo 
         IF  (@nContador  > 1023 ) 
         BEGIN 
            Commit Tran 
            SET @nContador  = 0 
         END 
      END 
      CLOSE LISTA_SG1
      DEALLOCATE LISTA_SG1
      IF  (@nContador  > 0 ) 
      BEGIN 
          Commit Transaction  
      END 
      SET @vNivel  = 1 
      SET @cNivel  = '01' 
      WHILE (1  = 1 )
      BEGIN
         SET @cNivelAux  = @cNivel 
         SELECT @nCount  = COUNT ( * )
           FROM SG1010 
           WHERE G1_FILIAL  = @cFil_SG1  and G1_NIV  = @cNivelAux  and D_E_L_E_T_  = ' ' 
         IF  (@nCount  = 0 ) 
         BEGIN 
            break
         END 
         IF  (@cNivelAux  = '99' ) 
         BEGIN 
            break
         END 
         SET @vNivel  = @vNivel  + 1 
         SET @cNivel  = CONVERT( VarChar( 2 ) ,@vNivel )
         IF @vNivel  <= 9 
         BEGIN 
            SET @cNivel  = '0'  + @cNivel 
         END 
         SET @cNivelInv  = CONVERT( VarChar( 02 ) ,100  - @vNivel )
         SET @nContador  = 0 
          
         -- Cursor declaration LISTA_DE_PAS
         DECLARE LISTA_DE_PAS INSENSITIVE  CURSOR FOR 
         SELECT distinct A.G1_COMP 
           FROM SG1010 A, SG1010 B
           WHERE A.G1_FILIAL  = @cFil_SG1  and B.G1_FILIAL  = @cFil_SG1  and A.G1_NIV  = @cNivelAux  and A.D_E_L_E_T_  = ' ' 
            and B.D_E_L_E_T_  = ' '  and A.G1_COMP  = B.G1_COD 
         FOR READ ONLY 
          
         OPEN LISTA_DE_PAS
         FETCH LISTA_DE_PAS 
          INTO @vProduto 
         WHILE (@@Fetch_Status  = 0 )
         BEGIN
            SET @nContador  = @nContador  + 1 
            IF @nContador  = 1 
            BEGIN 
               Begin tran 
               SET @nContador  = @nContador 
            END 
            UPDATE SG1010 
              WITH (ROWLOCK) 
               SET G1_NIV  = SUBSTRING ( @cNivel , 1 , 2 ), G1_NIVINV  = SUBSTRING ( @cNivelInv , 1 , 2 )
             WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @vProduto  and D_E_L_E_T_  = ' ' 
            FETCH LISTA_DE_PAS 
             INTO @vProduto 
            IF  (@nContador  > 1023 ) 
            BEGIN 
               Commit Tran 
               SET @nContador  = 0 
            END 
         END 
         CLOSE LISTA_DE_PAS
         DEALLOCATE LISTA_DE_PAS
         IF  (@nContador  > 0 ) 
         BEGIN 
             Commit Transaction  
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nContador  = 0 
       
      -- Cursor declaration LISTA_SG1TRB
      DECLARE LISTA_SG1TRB INSENSITIVE  CURSOR FOR 
      SELECT * 
        FROM (
      SELECT G1.R_E_C_N_O_ , 'PA'  TIPO 
        FROM TRB01SPSG1 G1
        WHERE G1.G1_FILPROC  = @cFILIALPROC  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD NOT IN ( 
      SELECT distinct A.G1_COMP 
        FROM TRB01SPSG1 A
        WHERE A.G1_FILPROC  = @cFILIALPROC  and A.D_E_L_E_T_  = ' '  ) 
      UNION 
      SELECT G1.R_E_C_N_O_ , 'PI'  TIPO 
        FROM TRB01SPSG1 G1
        WHERE G1.G1_FILPROC  = @cFILIALPROC  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD IN ( 
      SELECT distinct A.G1_COMP 
        FROM TRB01SPSG1 A
        WHERE A.G1_FILPROC  = @cFILIALPROC  and A.D_E_L_E_T_  = ' '  ) ) TMP
      FOR READ ONLY 
       
      OPEN LISTA_SG1TRB
      FETCH LISTA_SG1TRB 
       INTO @nRecno , @cTipo 
      WHILE (@@Fetch_Status  = 0 )
      BEGIN
         SET @nContador  = @nContador  + 1 
         IF @nContador  = 1 
         BEGIN 
            Begin tran 
            SET @nContador  = @nContador 
         END 
         IF @cTipo  = 'PA' 
         BEGIN 
            UPDATE TRB01SPSG1 
              WITH (ROWLOCK) 
               SET G1_NIV  = '01' , G1_NIVINV  = '99' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         ELSE 
         BEGIN 
            UPDATE TRB01SPSG1 
              WITH (ROWLOCK) 
               SET G1_NIV  = '  ' , G1_NIVINV  = '  ' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         FETCH LISTA_SG1TRB 
          INTO @nRecno , @cTipo 
         IF  (@nContador  > 1023 ) 
         BEGIN 
            Commit Tran 
            SET @nContador  = 0 
         END 
      END 
      CLOSE LISTA_SG1TRB
      DEALLOCATE LISTA_SG1TRB
      IF  (@nContador  > 0 ) 
      BEGIN 
          Commit Transaction  
      END 
      SET @vNivel  = 1 
      SET @cNivel  = '01' 
      WHILE (1  = 1 )
      BEGIN
         SET @cNivelAux  = @cNivel 
         SELECT @nCount  = COUNT ( * )
           FROM TRB01SPSG1 
           WHERE G1_FILPROC  = @cFILIALPROC  and G1_NIV  = @cNivelAux  and D_E_L_E_T_  = ' ' 
         IF  (@nCount  = 0 ) 
         BEGIN 
            break
         END 
         IF  (@cNivelAux  = '99' ) 
         BEGIN 
            break
         END 
         SET @vNivel  = @vNivel  + 1 
         SET @cNivel  = CONVERT( VarChar( 2 ) ,@vNivel )
         IF @vNivel  <= 9 
         BEGIN 
            SET @cNivel  = '0'  + @cNivel 
         END 
         SET @cNivelInv  = CONVERT( VarChar( 02 ) ,100  - @vNivel )
         SET @nContador  = 0 
          
         -- Cursor declaration LISTA_DE_PASTRB
         DECLARE LISTA_DE_PASTRB INSENSITIVE  CURSOR FOR 
         SELECT distinct A.G1_COMP 
           FROM TRB01SPSG1 A, TRB01SPSG1 B
           WHERE A.G1_FILPROC  = @cFILIALPROC  and B.G1_FILPROC  = @cFILIALPROC  and A.G1_NIV  = @cNivelAux  and A.D_E_L_E_T_  = ' ' 
            and B.D_E_L_E_T_  = ' '  and A.G1_COMP  = B.G1_COD 
         FOR READ ONLY 
          
         OPEN LISTA_DE_PASTRB
         FETCH LISTA_DE_PASTRB 
          INTO @vProduto 
         WHILE (@@Fetch_Status  = 0 )
         BEGIN
            SET @nContador  = @nContador  + 1 
            IF @nContador  = 1 
            BEGIN 
               Begin tran 
               SET @nContador  = @nContador 
            END 
            UPDATE TRB01SPSG1 
              WITH (ROWLOCK) 
               SET G1_NIV  = SUBSTRING ( @cNivel , 1 , 2 ), G1_NIVINV  = SUBSTRING ( @cNivelInv , 1 , 2 )
             WHERE G1_FILPROC  = @cFILIALPROC  and G1_COD  = @vProduto  and D_E_L_E_T_  = ' ' 
            FETCH LISTA_DE_PASTRB 
             INTO @vProduto 
            IF  (@nContador  > 1023 ) 
            BEGIN 
               Commit Tran 
               SET @nContador  = 0 
            END 
         END 
         CLOSE LISTA_DE_PASTRB
         DEALLOCATE LISTA_DE_PASTRB
         IF  (@nContador  > 0 ) 
         BEGIN 
             Commit Transaction  
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT005_20_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT005_20_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT005_20_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT005_20_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_ARQUIVO Char( 01 ) , 
    @IN_FILIALPROC Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @vNivel Integer
DECLARE @vProduto Char( 15)
DECLARE @cNivel VarChar( 3)
DECLARE @cNivelAux VarChar( 3)
DECLARE @cNivelInv VarChar( 3)
DECLARE @cFil_SG1 Char( 2)
DECLARE @nCount Integer
DECLARE @nContador Integer
DECLARE @nRecno Integer
DECLARE @cTipo VarChar( 2 )
DECLARE @cAux VarChar( 3 )
DECLARE @iTranCount Integer
DECLARE @cFILIALCOR Char( 2)
DECLARE @cFILIALPROC Char( 2)
DECLARE @cARQUIVO Char( 01 )
BEGIN
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cFILIALPROC  = @IN_FILIALPROC 
   SET @cARQUIVO  = @IN_ARQUIVO 
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SG1' 
   EXEC XFILIAL_20_02 @cAux , @cFILIALCOR , @cFil_SG1 output 
   IF  (@cARQUIVO  = '0' ) 
   BEGIN 
      SET @nContador  = 0 
       
      -- Cursor declaration LISTA_SG1
      DECLARE LISTA_SG1 INSENSITIVE  CURSOR FOR 
      SELECT * 
        FROM (
      SELECT G1.R_E_C_N_O_ , 'PA'  TIPO 
        FROM SG1030 G1
        WHERE G1.G1_FILIAL  = @cFil_SG1  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD NOT IN ( 
      SELECT distinct A.G1_COMP 
        FROM SG1030 A
        WHERE A.G1_FILIAL  = @cFil_SG1  and A.D_E_L_E_T_  = ' '  ) 
      UNION 
      SELECT G1.R_E_C_N_O_ , 'PI'  TIPO 
        FROM SG1030 G1
        WHERE G1.G1_FILIAL  = @cFil_SG1  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD IN ( 
      SELECT distinct A.G1_COMP 
        FROM SG1030 A
        WHERE A.G1_FILIAL  = @cFil_SG1  and A.D_E_L_E_T_  = ' '  ) ) TMP
      FOR READ ONLY 
       
      OPEN LISTA_SG1
      FETCH LISTA_SG1 
       INTO @nRecno , @cTipo 
      WHILE (@@Fetch_Status  = 0 )
      BEGIN
         SET @nContador  = @nContador  + 1 
         IF @nContador  = 1 
         BEGIN 
            Begin tran 
            SET @nContador  = @nContador 
         END 
         IF @cTipo  = 'PA' 
         BEGIN 
            UPDATE SG1030 
              WITH (ROWLOCK) 
               SET G1_NIV  = '01' , G1_NIVINV  = '99' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         ELSE 
         BEGIN 
            UPDATE SG1030 
              WITH (ROWLOCK) 
               SET G1_NIV  = '  ' , G1_NIVINV  = '  ' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         FETCH LISTA_SG1 
          INTO @nRecno , @cTipo 
         IF  (@nContador  > 1023 ) 
         BEGIN 
            Commit Tran 
            SET @nContador  = 0 
         END 
      END 
      CLOSE LISTA_SG1
      DEALLOCATE LISTA_SG1
      IF  (@nContador  > 0 ) 
      BEGIN 
          Commit Transaction  
      END 
      SET @vNivel  = 1 
      SET @cNivel  = '01' 
      WHILE (1  = 1 )
      BEGIN
         SET @cNivelAux  = @cNivel 
         SELECT @nCount  = COUNT ( * )
           FROM SG1030 
           WHERE G1_FILIAL  = @cFil_SG1  and G1_NIV  = @cNivelAux  and D_E_L_E_T_  = ' ' 
         IF  (@nCount  = 0 ) 
         BEGIN 
            break
         END 
         IF  (@cNivelAux  = '99' ) 
         BEGIN 
            break
         END 
         SET @vNivel  = @vNivel  + 1 
         SET @cNivel  = CONVERT( VarChar( 2 ) ,@vNivel )
         IF @vNivel  <= 9 
         BEGIN 
            SET @cNivel  = '0'  + @cNivel 
         END 
         SET @cNivelInv  = CONVERT( VarChar( 02 ) ,100  - @vNivel )
         SET @nContador  = 0 
          
         -- Cursor declaration LISTA_DE_PAS
         DECLARE LISTA_DE_PAS INSENSITIVE  CURSOR FOR 
         SELECT distinct A.G1_COMP 
           FROM SG1030 A, SG1030 B
           WHERE A.G1_FILIAL  = @cFil_SG1  and B.G1_FILIAL  = @cFil_SG1  and A.G1_NIV  = @cNivelAux  and A.D_E_L_E_T_  = ' ' 
            and B.D_E_L_E_T_  = ' '  and A.G1_COMP  = B.G1_COD 
         FOR READ ONLY 
          
         OPEN LISTA_DE_PAS
         FETCH LISTA_DE_PAS 
          INTO @vProduto 
         WHILE (@@Fetch_Status  = 0 )
         BEGIN
            SET @nContador  = @nContador  + 1 
            IF @nContador  = 1 
            BEGIN 
               Begin tran 
               SET @nContador  = @nContador 
            END 
            UPDATE SG1030 
              WITH (ROWLOCK) 
               SET G1_NIV  = SUBSTRING ( @cNivel , 1 , 2 ), G1_NIVINV  = SUBSTRING ( @cNivelInv , 1 , 2 )
             WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @vProduto  and D_E_L_E_T_  = ' ' 
            FETCH LISTA_DE_PAS 
             INTO @vProduto 
            IF  (@nContador  > 1023 ) 
            BEGIN 
               Commit Tran 
               SET @nContador  = 0 
            END 
         END 
         CLOSE LISTA_DE_PAS
         DEALLOCATE LISTA_DE_PAS
         IF  (@nContador  > 0 ) 
         BEGIN 
             Commit Transaction  
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nContador  = 0 
       
      -- Cursor declaration LISTA_SG1TRB
      DECLARE LISTA_SG1TRB INSENSITIVE  CURSOR FOR 
      SELECT * 
        FROM (
      SELECT G1.R_E_C_N_O_ , 'PA'  TIPO 
        FROM TRB02SPSG1 G1
        WHERE G1.G1_FILPROC  = @cFILIALPROC  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD NOT IN ( 
      SELECT distinct A.G1_COMP 
        FROM TRB02SPSG1 A
        WHERE A.G1_FILPROC  = @cFILIALPROC  and A.D_E_L_E_T_  = ' '  ) 
      UNION 
      SELECT G1.R_E_C_N_O_ , 'PI'  TIPO 
        FROM TRB02SPSG1 G1
        WHERE G1.G1_FILPROC  = @cFILIALPROC  and G1.D_E_L_E_T_  = ' '  and G1.G1_COD IN ( 
      SELECT distinct A.G1_COMP 
        FROM TRB02SPSG1 A
        WHERE A.G1_FILPROC  = @cFILIALPROC  and A.D_E_L_E_T_  = ' '  ) ) TMP
      FOR READ ONLY 
       
      OPEN LISTA_SG1TRB
      FETCH LISTA_SG1TRB 
       INTO @nRecno , @cTipo 
      WHILE (@@Fetch_Status  = 0 )
      BEGIN
         SET @nContador  = @nContador  + 1 
         IF @nContador  = 1 
         BEGIN 
            Begin tran 
            SET @nContador  = @nContador 
         END 
         IF @cTipo  = 'PA' 
         BEGIN 
            UPDATE TRB02SPSG1 
              WITH (ROWLOCK) 
               SET G1_NIV  = '01' , G1_NIVINV  = '99' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         ELSE 
         BEGIN 
            UPDATE TRB02SPSG1 
              WITH (ROWLOCK) 
               SET G1_NIV  = '  ' , G1_NIVINV  = '  ' 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         FETCH LISTA_SG1TRB 
          INTO @nRecno , @cTipo 
         IF  (@nContador  > 1023 ) 
         BEGIN 
            Commit Tran 
            SET @nContador  = 0 
         END 
      END 
      CLOSE LISTA_SG1TRB
      DEALLOCATE LISTA_SG1TRB
      IF  (@nContador  > 0 ) 
      BEGIN 
          Commit Transaction  
      END 
      SET @vNivel  = 1 
      SET @cNivel  = '01' 
      WHILE (1  = 1 )
      BEGIN
         SET @cNivelAux  = @cNivel 
         SELECT @nCount  = COUNT ( * )
           FROM TRB02SPSG1 
           WHERE G1_FILPROC  = @cFILIALPROC  and G1_NIV  = @cNivelAux  and D_E_L_E_T_  = ' ' 
         IF  (@nCount  = 0 ) 
         BEGIN 
            break
         END 
         IF  (@cNivelAux  = '99' ) 
         BEGIN 
            break
         END 
         SET @vNivel  = @vNivel  + 1 
         SET @cNivel  = CONVERT( VarChar( 2 ) ,@vNivel )
         IF @vNivel  <= 9 
         BEGIN 
            SET @cNivel  = '0'  + @cNivel 
         END 
         SET @cNivelInv  = CONVERT( VarChar( 02 ) ,100  - @vNivel )
         SET @nContador  = 0 
          
         -- Cursor declaration LISTA_DE_PASTRB
         DECLARE LISTA_DE_PASTRB INSENSITIVE  CURSOR FOR 
         SELECT distinct A.G1_COMP 
           FROM TRB02SPSG1 A, TRB02SPSG1 B
           WHERE A.G1_FILPROC  = @cFILIALPROC  and B.G1_FILPROC  = @cFILIALPROC  and A.G1_NIV  = @cNivelAux  and A.D_E_L_E_T_  = ' ' 
            and B.D_E_L_E_T_  = ' '  and A.G1_COMP  = B.G1_COD 
         FOR READ ONLY 
          
         OPEN LISTA_DE_PASTRB
         FETCH LISTA_DE_PASTRB 
          INTO @vProduto 
         WHILE (@@Fetch_Status  = 0 )
         BEGIN
            SET @nContador  = @nContador  + 1 
            IF @nContador  = 1 
            BEGIN 
               Begin tran 
               SET @nContador  = @nContador 
            END 
            UPDATE TRB02SPSG1 
              WITH (ROWLOCK) 
               SET G1_NIV  = SUBSTRING ( @cNivel , 1 , 2 ), G1_NIVINV  = SUBSTRING ( @cNivelInv , 1 , 2 )
             WHERE G1_FILPROC  = @cFILIALPROC  and G1_COD  = @vProduto  and D_E_L_E_T_  = ' ' 
            FETCH LISTA_DE_PASTRB 
             INTO @vProduto 
            IF  (@nContador  > 1023 ) 
            BEGIN 
               Commit Tran 
               SET @nContador  = 0 
            END 
         END 
         CLOSE LISTA_DE_PASTRB
         DEALLOCATE LISTA_DE_PASTRB
         IF  (@nContador  > 0 ) 
         BEGIN 
             Commit Transaction  
         END 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT006_14_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_14_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_14_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_14_01]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_14_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_14_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_14_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_14_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_14_01 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_14_01 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1010 SD1, SF4010 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3010 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5010 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2010 SD2, SF4010 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_14_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_14_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_14_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_14_02]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_14_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_14_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_14_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_14_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_14_02 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_14_02 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1030 SD1, SF4030 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3030 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5030 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2030 SD2, SF4030 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_18_01]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1010 SD1, SF4010 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3010 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5010 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2010 SD2, SF4010 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_18_02]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1030 SD1, SF4030 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3030 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5030 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2030 SD2, SF4030 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_19_01]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1010 SD1, SF4010 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3010 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5010 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2010 SD2, SF4010 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_19_02]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1030 SD1, SF4030 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3030 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5030 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2030 SD2, SF4030 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_22_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_22_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_22_01]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1010 SD1, SF4010 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3010 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5010 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2010 SD2, SF4010 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5010 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3010 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3010 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT006_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT006_22_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT006_22_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT006_22_02]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_CFILAUX VarChar( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_CONSTESTERC Char( 01 ) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QTSEGUM Float  output , 
    @OUT_B9_CM1 Float  output , 
    @OUT_B9_CM2 Float  output , 
    @OUT_B9_CM3 Float  output , 
    @OUT_B9_CM4 Float  output , 
    @OUT_B9_CM5 Float  output , 
    @OUT_B9_CMRP1 Float  output , 
    @OUT_B9_CMRP2 Float  output , 
    @OUT_B9_CMRP3 Float  output , 
    @OUT_B9_CMRP4 Float  output , 
    @OUT_B9_CMRP5 Float  output , 
    @OUT_CUSTORP1 Float  output , 
    @OUT_CUSTORP2 Float  output , 
    @OUT_CUSTORP3 Float  output , 
    @OUT_CUSTORP4 Float  output , 
    @OUT_CUSTORP5 Float  output ) AS
 
-- Declaration of variables
DECLARE @vFilEmpty Char( 2)
DECLARE @cFil_SD1 VarChar( 2)
DECLARE @cFil_SD2 VarChar( 2)
DECLARE @cFil_SD3 VarChar( 2)
DECLARE @cFil_SF4 VarChar( 2)
DECLARE @cFil_SB9 VarChar( 2)
DECLARE @cFil_SF5 VarChar( 2)
DECLARE @vB9_QINI Decimal( 14 , 2 )
DECLARE @vB9_VINI1 Decimal( 14 , 2 )
DECLARE @vB9_VINI2 Decimal( 14 , 2 )
DECLARE @vB9_VINI3 Decimal( 14 , 2 )
DECLARE @vB9_VINI4 Decimal( 14 , 2 )
DECLARE @vB9_VINI5 Decimal( 14 , 2 )
DECLARE @vB9_QTSEGUM Decimal( 14 , 2 )
DECLARE @vB9_CM1 Decimal( 14 , 4 )
DECLARE @vB9_CM2 Decimal( 14 , 4 )
DECLARE @vB9_CM3 Decimal( 14 , 4 )
DECLARE @vB9_CM4 Decimal( 14 , 4 )
DECLARE @vB9_CM5 Decimal( 14 , 4 )
DECLARE @vB9_CMRP1 Decimal( 14 , 4 )
DECLARE @vB9_CMRP2 Decimal( 14 , 4 )
DECLARE @vB9_CMRP3 Decimal( 14 , 4 )
DECLARE @vB9_CMRP4 Decimal( 14 , 4 )
DECLARE @vB9_CMRP5 Decimal( 14 , 4 )
DECLARE @vB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @vB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @vQEntradas Float
DECLARE @vD1_QUANT Decimal( 14 , 2 )
DECLARE @vD1_CUSTO Decimal( 14 , 2 )
DECLARE @vD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @vD1_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD1_CUSRP5 Decimal( 14 , 2 )
DECLARE @vQSaidas Float
DECLARE @vD2_QUANT Decimal( 14 , 2 )
DECLARE @vD2_CUSTO Decimal( 14 , 2 )
DECLARE @vD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD2_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @vQMovEntr Float
DECLARE @vQMovSaid Float
DECLARE @vQMovEntrP Float
DECLARE @vQMovSaidP Float
DECLARE @vD3E_QUANT Decimal( 11 , 2 )
DECLARE @vD3E_CUSTO Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3E_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3E_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3E_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3S_QUANT Decimal( 11 , 2 )
DECLARE @vD3S_CUSTO Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3S_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3S_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3S_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3EP_QUANT Decimal( 11 , 2 )
DECLARE @vD3EP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3EP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3EP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3EP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vD3SP_QUANT Decimal( 11 , 2 )
DECLARE @vD3SP_CUSTO Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSTO5 Decimal( 14 , 2 )
DECLARE @vD3SP_QTSEGUM Decimal( 12 , 2 )
DECLARE @vD3SP_CUSRP1 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP2 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP3 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP4 Decimal( 14 , 2 )
DECLARE @vD3SP_CUSRP5 Decimal( 14 , 2 )
DECLARE @vDtVai VarChar( 08 )
DECLARE @vDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
BEGIN
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF5' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SF5 output 
   SET @vFilEmpty  = '  ' 
   SET @vQMovEntrP  = 0 
   SET @vQMovSaidP  = 0 
   SET @vD3EP_QUANT  = 0 
   SET @vD3EP_QTSEGUM  = 0 
   SET @vD3SP_QUANT  = 0 
   SET @vD3SP_QTSEGUM  = 0 
   SET @vB9_CM1  = 0 
   SET @vB9_CM2  = 0 
   SET @vB9_CM3  = 0 
   SET @vB9_CM4  = 0 
   SET @vB9_CM5  = 0 
   SET @vB9_CMRP1  = 0 
   SET @vB9_CMRP2  = 0 
   SET @vB9_CMRP3  = 0 
   SET @vB9_CMRP4  = 0 
   SET @vB9_CMRP5  = 0 
   SET @vB9_VINIRP1  = 0 
   SET @vB9_VINIRP2  = 0 
   SET @vB9_VINIRP3  = 0 
   SET @vB9_VINIRP4  = 0 
   SET @vB9_VINIRP5  = 0 
   SET @vD1_CUSRP1  = 0 
   SET @vD1_CUSRP2  = 0 
   SET @vD1_CUSRP3  = 0 
   SET @vD1_CUSRP4  = 0 
   SET @vD1_CUSRP5  = 0 
   SET @vD2_CUSRP1  = 0 
   SET @vD2_CUSRP2  = 0 
   SET @vD2_CUSRP3  = 0 
   SET @vD2_CUSRP4  = 0 
   SET @vD2_CUSRP5  = 0 
   SET @vD3E_CUSRP1  = 0 
   SET @vD3E_CUSRP2  = 0 
   SET @vD3E_CUSRP3  = 0 
   SET @vD3E_CUSRP4  = 0 
   SET @vD3E_CUSRP5  = 0 
   SET @vD3S_CUSRP1  = 0 
   SET @vD3S_CUSRP2  = 0 
   SET @vD3S_CUSRP3  = 0 
   SET @vD3S_CUSRP4  = 0 
   SET @vD3S_CUSRP5  = 0 
   SET @vD3EP_CUSRP1  = 0 
   SET @vD3EP_CUSRP2  = 0 
   SET @vD3EP_CUSRP3  = 0 
   SET @vD3EP_CUSRP4  = 0 
   SET @vD3EP_CUSRP5  = 0 
   SET @vD3SP_CUSRP1  = 0 
   SET @vD3SP_CUSRP2  = 0 
   SET @vD3SP_CUSRP3  = 0 
   SET @vD3SP_CUSRP4  = 0 
   SET @vD3SP_CUSRP5  = 0 
   SET @vD3EP_CUSTO  = 0 
   SET @vD3EP_CUSTO2  = 0 
   SET @vD3EP_CUSTO3  = 0 
   SET @vD3EP_CUSTO4  = 0 
   SET @vD3EP_CUSTO5  = 0 
   SET @vD3SP_CUSTO  = 0 
   SET @vD3SP_CUSTO2  = 0 
   SET @vD3SP_CUSTO3  = 0 
   SET @vD3SP_CUSTO4  = 0 
   SET @vD3SP_CUSTO5  = 0 
   SET @vB9_QINI  = 0 
   SET @vB9_VINI1  = 0 
   SET @vB9_VINI2  = 0 
   SET @vB9_VINI3  = 0 
   SET @vB9_VINI4  = 0 
   SET @vB9_VINI5  = 0 
   SELECT @vB9_QINI  = B9_QINI , @vB9_VINI1  = B9_VINI1 , @vB9_VINI2  = B9_VINI2 , @vB9_VINI3  = B9_VINI3 , @vB9_VINI4  = B9_VINI4 
     , @vB9_VINI5  = B9_VINI5 , @vB9_QTSEGUM  = B9_QISEGUM , @vDtVai  = B9_DATA , @vB9_CM1  = B9_CM1 , @vB9_CM2  = B9_CM2 
     , @vB9_CM3  = B9_CM3 , @vB9_CM4  = B9_CM4 , @vB9_CM5  = B9_CM5 , @vB9_CMRP1  = B9_CMRP1 , @vB9_CMRP2  = B9_CMRP2 , @vB9_CMRP3  = B9_CMRP3 
     , @vB9_CMRP4  = B9_CMRP4 , @vB9_CMRP5  = B9_CMRP5 , @vB9_VINIRP1  = B9_VINIRP1 , @vB9_VINIRP2  = B9_VINIRP2 , @vB9_VINIRP3  = B9_VINIRP3 
     , @vB9_VINIRP4  = B9_VINIRP4 , @vB9_VINIRP5  = B9_VINIRP5 
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  = (
   SELECT MAX ( B9_DATA )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @IN_CCOD  and B9_LOCAL  = @IN_CLOCAL  and B9_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
     ) and D_E_L_E_T_  = ' ' 
   SET @vDtVai  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @vDtVai ),112 )
   IF @vB9_QINI is null 
   BEGIN 
      SET @vB9_QINI  = 0 
   END 
   IF @vB9_VINI1 is null 
   BEGIN 
      SET @vB9_VINI1  = 0 
   END 
   IF @vB9_VINI2 is null 
   BEGIN 
      SET @vB9_VINI2  = 0 
   END 
   IF @vB9_VINI3 is null 
   BEGIN 
      SET @vB9_VINI3  = 0 
   END 
   IF @vB9_VINI4 is null 
   BEGIN 
      SET @vB9_VINI4  = 0 
   END 
   IF @vB9_VINI5 is null 
   BEGIN 
      SET @vB9_VINI5  = 0 
   END 
   IF @vB9_QTSEGUM is null 
   BEGIN 
      SET @vB9_QTSEGUM  = 0 
   END 
   IF @vB9_CM1 is null 
   BEGIN 
      SET @vB9_CM1  = 0 
   END 
   IF @vB9_CM2 is null 
   BEGIN 
      SET @vB9_CM2  = 0 
   END 
   IF @vB9_CM3 is null 
   BEGIN 
      SET @vB9_CM3  = 0 
   END 
   IF @vB9_CM4 is null 
   BEGIN 
      SET @vB9_CM4  = 0 
   END 
   IF @vB9_CM5 is null 
   BEGIN 
      SET @vB9_CM5  = 0 
   END 
   IF @vB9_CMRP1 is null 
   BEGIN 
      SET @vB9_CMRP1  = 0 
   END 
   IF @vB9_CMRP2 is null 
   BEGIN 
      SET @vB9_CMRP2  = 0 
   END 
   IF @vB9_CMRP3 is null 
   BEGIN 
      SET @vB9_CMRP3  = 0 
   END 
   IF @vB9_CMRP4 is null 
   BEGIN 
      SET @vB9_CMRP4  = 0 
   END 
   IF @vB9_CMRP5 is null 
   BEGIN 
      SET @vB9_CMRP5  = 0 
   END 
   IF @vB9_VINIRP1 is null 
   BEGIN 
      SET @vB9_VINIRP1  = 0 
   END 
   IF @vB9_VINIRP2 is null 
   BEGIN 
      SET @vB9_VINIRP2  = 0 
   END 
   IF @vB9_VINIRP3 is null 
   BEGIN 
      SET @vB9_VINIRP3  = 0 
   END 
   IF @vB9_VINIRP4 is null 
   BEGIN 
      SET @vB9_VINIRP4  = 0 
   END 
   IF @vB9_VINIRP5 is null 
   BEGIN 
      SET @vB9_VINIRP5  = 0 
   END 
   IF @vDtVai is null 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   IF @vDtVai  = ' ' 
   BEGIN 
      SET @vDtVai  = '19800101' 
   END 
   SELECT @vQEntradas  = SUM(SD1.D1_QUANT ), @vD1_CUSTO  = SUM(SD1.D1_CUSTO ), @vD1_CUSTO2  = SUM(SD1.D1_CUSTO2 ), @vD1_CUSTO3  = SUM(SD1.D1_CUSTO3 )
     , @vD1_CUSTO4  = SUM(SD1.D1_CUSTO4 ), @vD1_CUSTO5  = SUM(SD1.D1_CUSTO5 ), @vD1_QTSEGUM  = SUM(SD1.D1_QTSEGUM ), @vD1_CUSRP1  = SUM(SD1.D1_CUSRP1 )
     , @vD1_CUSRP2  = SUM(SD1.D1_CUSRP2 ), @vD1_CUSRP3  = SUM(SD1.D1_CUSRP3 ), @vD1_CUSRP4  = SUM(SD1.D1_CUSRP4 ), @vD1_CUSRP5  = SUM(SD1.D1_CUSRP5 )
     
     FROM SD1030 SD1, SF4030 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = @IN_CCOD  and SD1.D1_LOCAL  = @IN_CLOCAL  and SD1.D1_TES  = SF4.F4_CODIGO 
      and SD1.D1_DTDIGIT  >= @vDtVai  and SD1.D1_DTDIGIT  < @IN_DDATA  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = ' ' 
      and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1'  and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
   IF @vQEntradas is null 
   BEGIN 
      SET @vQEntradas  = 0 
   END 
   IF @vD1_CUSTO is null 
   BEGIN 
      SET @vD1_CUSTO  = 0 
   END 
   IF @vD1_CUSTO2 is null 
   BEGIN 
      SET @vD1_CUSTO2  = 0 
   END 
   IF @vD1_CUSTO3 is null 
   BEGIN 
      SET @vD1_CUSTO3  = 0 
   END 
   IF @vD1_CUSTO4 is null 
   BEGIN 
      SET @vD1_CUSTO4  = 0 
   END 
   IF @vD1_CUSTO5 is null 
   BEGIN 
      SET @vD1_CUSTO5  = 0 
   END 
   IF @vD1_CUSRP1 is null 
   BEGIN 
      SET @vD1_CUSRP1  = 0 
   END 
   IF @vD1_CUSRP2 is null 
   BEGIN 
      SET @vD1_CUSRP2  = 0 
   END 
   IF @vD1_CUSRP3 is null 
   BEGIN 
      SET @vD1_CUSRP3  = 0 
   END 
   IF @vD1_CUSRP4 is null 
   BEGIN 
      SET @vD1_CUSRP4  = 0 
   END 
   IF @vD1_CUSRP5 is null 
   BEGIN 
      SET @vD1_CUSRP5  = 0 
   END 
   IF @vD1_QTSEGUM is null 
   BEGIN 
      SET @vD1_QTSEGUM  = 0 
   END 
   SELECT @vQMovEntr  = SUM(D3_QUANT ), @vD3E_CUSTO  = SUM(D3_CUSTO1 ), @vD3E_CUSTO2  = SUM(D3_CUSTO2 ), @vD3E_CUSTO3  = SUM(D3_CUSTO3 )
     , @vD3E_CUSTO4  = SUM(D3_CUSTO4 ), @vD3E_CUSTO5  = SUM(D3_CUSTO5 ), @vD3E_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3E_CUSRP1  = SUM(SD3.D3_CUSRP1 )
     , @vD3E_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3E_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3E_CUSRP4  = SUM(SD3.D3_CUSRP4 ), @vD3E_CUSRP5  = SUM(SD3.D3_CUSRP5 )
     
     FROM SD3030 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
      and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '499' 
      or 0  < (
   SELECT COUNT ( * )
     FROM SF5030 SF5
     WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   IF @vQMovEntr is null 
   BEGIN 
      SET @vQMovEntr  = 0 
   END 
   IF @vD3E_CUSTO is null 
   BEGIN 
      SET @vD3E_CUSTO  = 0 
   END 
   IF @vD3E_CUSTO2 is null 
   BEGIN 
      SET @vD3E_CUSTO2  = 0 
   END 
   IF @vD3E_CUSTO3 is null 
   BEGIN 
      SET @vD3E_CUSTO3  = 0 
   END 
   IF @vD3E_CUSTO4 is null 
   BEGIN 
      SET @vD3E_CUSTO4  = 0 
   END 
   IF @vD3E_CUSTO5 is null 
   BEGIN 
      SET @vD3E_CUSTO5  = 0 
   END 
   IF @vD3E_CUSRP1 is null 
   BEGIN 
      SET @vD3E_CUSRP1  = 0 
   END 
   IF @vD3E_CUSRP2 is null 
   BEGIN 
      SET @vD3E_CUSRP2  = 0 
   END 
   IF @vD3E_CUSRP3 is null 
   BEGIN 
      SET @vD3E_CUSRP3  = 0 
   END 
   IF @vD3E_CUSRP4 is null 
   BEGIN 
      SET @vD3E_CUSRP4  = 0 
   END 
   IF @vD3E_CUSRP5 is null 
   BEGIN 
      SET @vD3E_CUSRP5  = 0 
   END 
   IF @vD3E_QTSEGUM is null 
   BEGIN 
      SET @vD3E_QTSEGUM  = 0 
   END 
   SELECT @vQSaidas  = SUM(SD2.D2_QUANT ), @vD2_CUSTO  = SUM(SD2.D2_CUSTO1 ), @vD2_CUSTO2  = SUM(SD2.D2_CUSTO2 ), @vD2_CUSTO3  = SUM(SD2.D2_CUSTO3 )
     , @vD2_CUSTO4  = SUM(SD2.D2_CUSTO4 ), @vD2_CUSTO5  = SUM(SD2.D2_CUSTO5 ), @vD2_QTSEGUM  = SUM(SD2.D2_QTSEGUM ), @vD2_CUSRP1  = SUM(SD2.D2_CUSRP1 )
     , @vD2_CUSRP2  = SUM(SD2.D2_CUSRP2 ), @vD2_CUSRP3  = SUM(SD2.D2_CUSRP3 ), @vD2_CUSRP4  = SUM(SD2.D2_CUSRP4 ), @vD2_CUSRP5  = SUM(SD2.D2_CUSRP5 )
     
     FROM SD2030 SD2, SF4030 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = @IN_CCOD  and SD2.D2_LOCAL  = @IN_CLOCAL  and SD2.D2_EMISSAO  >= @vDtVai 
      and SD2.D2_EMISSAO  < @IN_DDATA  and SD2.D2_TES  = SF4.F4_CODIGO  and SD2.D2_ORIGLAN  <> 'LF'  and  (SD2.D2_REMITO  = ' ' 
      or  (SD2.D2_REMITO  <> ' '  and SD2.D2_TPDCENV in ( '1' , 'A'  ) ) )  and  (SF4.F4_ESTOQUE  = 'S'  or  (@IN_CONSTESTERC  = '1' 
      and  (SF4.F4_PODER3 in ( 'R' , 'D'  ) ) ) )  and SF4.F4_FILIAL  = @cFil_SF4  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     
   IF @vQSaidas is null 
   BEGIN 
      SET @vQSaidas  = 0 
   END 
   IF @vD2_CUSTO is null 
   BEGIN 
      SET @vD2_CUSTO  = 0 
   END 
   IF @vD2_CUSTO2 is null 
   BEGIN 
      SET @vD2_CUSTO2  = 0 
   END 
   IF @vD2_CUSTO3 is null 
   BEGIN 
      SET @vD2_CUSTO3  = 0 
   END 
   IF @vD2_CUSTO4 is null 
   BEGIN 
      SET @vD2_CUSTO4  = 0 
   END 
   IF @vD2_CUSTO5 is null 
   BEGIN 
      SET @vD2_CUSTO5  = 0 
   END 
   IF @vD2_CUSRP1 is null 
   BEGIN 
      SET @vD2_CUSRP1  = 0 
   END 
   IF @vD2_CUSRP2 is null 
   BEGIN 
      SET @vD2_CUSRP2  = 0 
   END 
   IF @vD2_CUSRP3 is null 
   BEGIN 
      SET @vD2_CUSRP3  = 0 
   END 
   IF @vD2_CUSRP4 is null 
   BEGIN 
      SET @vD2_CUSRP4  = 0 
   END 
   IF @vD2_CUSRP5 is null 
   BEGIN 
      SET @vD2_CUSRP5  = 0 
   END 
   IF @vD2_QTSEGUM is null 
   BEGIN 
      SET @vD2_QTSEGUM  = 0 
   END 
   IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_SERVIC  = '   ' 
         or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
        ) )  and  (SD3.D3_TM  = '999'  or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   ELSE 
   BEGIN 
      SELECT @vQMovSaid  = SUM(D3_QUANT ), @vD3S_CUSTO  = SUM(D3_CUSTO1 ), @vD3S_CUSTO2  = SUM(D3_CUSTO2 ), @vD3S_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3S_CUSTO4  = SUM(D3_CUSTO4 ), @vD3S_CUSTO5  = SUM(D3_CUSTO5 ), @vD3S_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3S_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3S_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3S_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3S_CUSRP4  = SUM(SD3.D3_CUSRP4 ), 
             @vD3S_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  = @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D_E_L_E_T_  = ' '  and  (SD3.D3_TM  = '999' 
         or 0  < (
      SELECT COUNT ( * )
        FROM SF5030 SF5
        WHERE F5_FILIAL  = @cFil_SF5  and F5_CODIGO  = SD3.D3_TM  and SF5.D_E_L_E_T_  = ' ' )) 
   END 
   IF @vQMovSaid is null 
   BEGIN 
      SET @vQMovSaid  = 0 
   END 
   IF @vD3S_CUSTO is null 
   BEGIN 
      SET @vD3S_CUSTO  = 0 
   END 
   IF @vD3S_CUSTO2 is null 
   BEGIN 
      SET @vD3S_CUSTO2  = 0 
   END 
   IF @vD3S_CUSTO3 is null 
   BEGIN 
      SET @vD3S_CUSTO3  = 0 
   END 
   IF @vD3S_CUSTO4 is null 
   BEGIN 
      SET @vD3S_CUSTO4  = 0 
   END 
   IF @vD3S_CUSTO5 is null 
   BEGIN 
      SET @vD3S_CUSTO5  = 0 
   END 
   IF @vD3S_CUSRP1 is null 
   BEGIN 
      SET @vD3S_CUSRP1  = 0 
   END 
   IF @vD3S_CUSRP2 is null 
   BEGIN 
      SET @vD3S_CUSRP2  = 0 
   END 
   IF @vD3S_CUSRP3 is null 
   BEGIN 
      SET @vD3S_CUSRP3  = 0 
   END 
   IF @vD3S_CUSRP4 is null 
   BEGIN 
      SET @vD3S_CUSRP4  = 0 
   END 
   IF @vD3S_CUSRP5 is null 
   BEGIN 
      SET @vD3S_CUSRP5  = 0 
   END 
   IF @vD3S_QTSEGUM is null 
   BEGIN 
      SET @vD3S_QTSEGUM  = 0 
   END 
   IF @IN_CLOCAL  = @IN_MV_LOCPROC 
   BEGIN 
      IF @IN_INTDL  = '1'  and @IN_MV_D3SERVI  = '0' 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and  (SD3.D3_SERVIC  = '   ' 
            or  (SD3.D3_SERVIC  <> '   '  and SD3.D3_LOCAL  = @IN_MV_CQ )  or  (@IN_MV_WMSNEW  = '1'  and SD3.D3_SERVIC  <> '   ' 
           ) )  and SD3.D_E_L_E_T_  = ' ' 
      END 
      ELSE 
      BEGIN 
         SELECT @vQMovEntrP  = SUM(D3_QUANT ), @vD3EP_CUSTO  = SUM(D3_CUSTO1 ), @vD3EP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3EP_CUSTO3  = SUM(D3_CUSTO3 )
           , @vD3EP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3EP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3EP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3EP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
           , @vD3EP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3EP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3EP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
           , @vD3EP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
           FROM SD3030 SD3
           WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
            and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  > '500'  and SD3.D3_CF  = 'RE3'  and SD3.D_E_L_E_T_  = ' ' 
           
      END 
      IF @vQMovEntrP is null 
      BEGIN 
         SET @vQMovEntrP  = 0 
      END 
      IF @vD3EP_CUSTO is null 
      BEGIN 
         SET @vD3EP_CUSTO  = 0 
      END 
      IF @vD3EP_CUSTO2 is null 
      BEGIN 
         SET @vD3EP_CUSTO2  = 0 
      END 
      IF @vD3EP_CUSTO3 is null 
      BEGIN 
         SET @vD3EP_CUSTO3  = 0 
      END 
      IF @vD3EP_CUSTO4 is null 
      BEGIN 
         SET @vD3EP_CUSTO4  = 0 
      END 
      IF @vD3EP_CUSTO5 is null 
      BEGIN 
         SET @vD3EP_CUSTO5  = 0 
      END 
      IF @vD3EP_CUSRP1 is null 
      BEGIN 
         SET @vD3EP_CUSRP1  = 0 
      END 
      IF @vD3EP_CUSRP2 is null 
      BEGIN 
         SET @vD3EP_CUSRP2  = 0 
      END 
      IF @vD3EP_CUSRP3 is null 
      BEGIN 
         SET @vD3EP_CUSRP3  = 0 
      END 
      IF @vD3EP_CUSRP4 is null 
      BEGIN 
         SET @vD3EP_CUSRP4  = 0 
      END 
      IF @vD3EP_CUSRP5 is null 
      BEGIN 
         SET @vD3EP_CUSRP5  = 0 
      END 
      IF @vD3EP_QTSEGUM is null 
      BEGIN 
         SET @vD3EP_QTSEGUM  = 0 
      END 
      SELECT @vQMovSaidP  = SUM(D3_QUANT ), @vD3SP_CUSTO  = SUM(D3_CUSTO1 ), @vD3SP_CUSTO2  = SUM(D3_CUSTO2 ), @vD3SP_CUSTO3  = SUM(D3_CUSTO3 )
        , @vD3SP_CUSTO4  = SUM(D3_CUSTO4 ), @vD3SP_CUSTO5  = SUM(D3_CUSTO5 ), @vD3SP_QTSEGUM  = SUM(D3_QTSEGUM ), @vD3SP_CUSRP1  = SUM(SD3.D3_CUSRP1 )
        , @vD3SP_CUSRP2  = SUM(SD3.D3_CUSRP2 ), @vD3SP_CUSRP3  = SUM(SD3.D3_CUSRP3 ), @vD3SP_CUSRP4  = SUM(SD3.D3_CUSRP4 )
        , @vD3SP_CUSRP5  = SUM(SD3.D3_CUSRP5 )
        FROM SD3030 SD3
        WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = @IN_CCOD  and SD3.D3_LOCAL  <> @IN_CLOCAL  and SD3.D3_EMISSAO  >= @vDtVai 
         and SD3.D3_EMISSAO  < @IN_DDATA  and SD3.D3_ESTORNO  = ' '  and SD3.D3_TM  <= '500'  and SD3.D3_CF  = 'DE3'  and SD3.D_E_L_E_T_  = ' ' 
        
      IF @vQMovSaidP is null 
      BEGIN 
         SET @vQMovSaidP  = 0 
      END 
      IF @vD3SP_CUSTO is null 
      BEGIN 
         SET @vD3SP_CUSTO  = 0 
      END 
      IF @vD3SP_CUSTO2 is null 
      BEGIN 
         SET @vD3SP_CUSTO2  = 0 
      END 
      IF @vD3SP_CUSTO3 is null 
      BEGIN 
         SET @vD3SP_CUSTO3  = 0 
      END 
      IF @vD3SP_CUSTO4 is null 
      BEGIN 
         SET @vD3SP_CUSTO4  = 0 
      END 
      IF @vD3SP_CUSTO5 is null 
      BEGIN 
         SET @vD3SP_CUSTO5  = 0 
      END 
      IF @vD3SP_CUSRP1 is null 
      BEGIN 
         SET @vD3SP_CUSRP1  = 0 
      END 
      IF @vD3SP_CUSRP2 is null 
      BEGIN 
         SET @vD3SP_CUSRP2  = 0 
      END 
      IF @vD3SP_CUSRP3 is null 
      BEGIN 
         SET @vD3SP_CUSRP3  = 0 
      END 
      IF @vD3SP_CUSRP4 is null 
      BEGIN 
         SET @vD3SP_CUSRP4  = 0 
      END 
      IF @vD3SP_CUSRP5 is null 
      BEGIN 
         SET @vD3SP_CUSRP5  = 0 
      END 
      IF @vD3SP_QTSEGUM is null 
      BEGIN 
         SET @vD3SP_QTSEGUM  = 0 
      END 
   END 
   SET @OUT_QSALDOATU  =  (@vB9_QINI  + @vQEntradas  + @vQMovEntr  + @vQMovEntrP )  -  (@vQSaidas  + @vQMovSaid  + @vQMovSaidP 
     ) 
   SET @OUT_CUSTOATU  =  (@vB9_VINI1  + @vD1_CUSTO  + @vD3E_CUSTO  + @vD3EP_CUSTO )  -  (@vD2_CUSTO  + @vD3S_CUSTO  + @vD3SP_CUSTO 
     ) 
   SET @OUT_CUSTOATU2  =  (@vB9_VINI2  + @vD1_CUSTO2  + @vD3E_CUSTO2  + @vD3EP_CUSTO2 )  -  (@vD2_CUSTO2  + @vD3S_CUSTO2  + @vD3SP_CUSTO2 
     ) 
   SET @OUT_CUSTOATU3  =  (@vB9_VINI3  + @vD1_CUSTO3  + @vD3E_CUSTO3  + @vD3EP_CUSTO3 )  -  (@vD2_CUSTO3  + @vD3S_CUSTO3  + @vD3SP_CUSTO3 
     ) 
   SET @OUT_CUSTOATU4  =  (@vB9_VINI4  + @vD1_CUSTO4  + @vD3E_CUSTO4  + @vD3EP_CUSTO4 )  -  (@vD2_CUSTO4  + @vD3S_CUSTO4  + @vD3SP_CUSTO4 
     ) 
   SET @OUT_CUSTOATU5  =  (@vB9_VINI5  + @vD1_CUSTO5  + @vD3E_CUSTO5  + @vD3EP_CUSTO5 )  -  (@vD2_CUSTO5  + @vD3S_CUSTO5  + @vD3SP_CUSTO5 
     ) 
   SET @OUT_QTSEGUM  =  (@vB9_QTSEGUM  + @vD1_QTSEGUM  + @vD3E_QTSEGUM  + @vD3EP_QTSEGUM )  -  (@vD2_QTSEGUM  + @vD3S_QTSEGUM  + @vD3SP_QTSEGUM 
     ) 
   SET @OUT_B9_CM1  =  (@vB9_CM1 ) 
   SET @OUT_B9_CM2  =  (@vB9_CM2 ) 
   SET @OUT_B9_CM3  =  (@vB9_CM3 ) 
   SET @OUT_B9_CM4  =  (@vB9_CM4 ) 
   SET @OUT_B9_CM5  =  (@vB9_CM5 ) 
   SET @OUT_B9_CMRP1  =  (@vB9_CMRP1 ) 
   SET @OUT_B9_CMRP2  =  (@vB9_CMRP2 ) 
   SET @OUT_B9_CMRP3  =  (@vB9_CMRP3 ) 
   SET @OUT_B9_CMRP4  =  (@vB9_CMRP4 ) 
   SET @OUT_B9_CMRP5  =  (@vB9_CMRP5 ) 
   SET @OUT_CUSTORP1  =  (@vB9_VINIRP1  + @vD1_CUSRP1  + @vD3E_CUSRP1  + @vD3EP_CUSRP1 )  -  (@vD2_CUSRP1  + @vD3S_CUSRP1  + @vD3SP_CUSRP1 
     ) 
   SET @OUT_CUSTORP2  =  (@vB9_VINIRP2  + @vD1_CUSRP2  + @vD3E_CUSRP2  + @vD3EP_CUSRP2 )  -  (@vD2_CUSRP2  + @vD3S_CUSRP2  + @vD3SP_CUSRP2 
     ) 
   SET @OUT_CUSTORP3  =  (@vB9_VINIRP3  + @vD1_CUSRP3  + @vD3E_CUSRP3  + @vD3EP_CUSRP3 )  -  (@vD2_CUSRP3  + @vD3S_CUSRP3  + @vD3SP_CUSRP3 
     ) 
   SET @OUT_CUSTORP4  =  (@vB9_VINIRP4  + @vD1_CUSRP4  + @vD3E_CUSRP4  + @vD3EP_CUSRP4 )  -  (@vD2_CUSRP4  + @vD3S_CUSRP4  + @vD3SP_CUSRP4 
     ) 
   SET @OUT_CUSTORP5  =  (@vB9_VINIRP5  + @vD1_CUSRP5  + @vD3E_CUSRP5  + @vD3EP_CUSRP5 )  -  (@vD2_CUSRP5  + @vD3S_CUSRP5  + @vD3SP_CUSRP5 
     ) 
END
GO

GO
--SqlScripter----[dbo].[MAT007_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT007_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT007_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT007_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CFILAUX Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_COPCOES Char( 04 ) , 
    @IN_CUSUNIF Char( 01 ) , 
    @IN_DDATABASE Char( 08 ) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @IN_MV_PRODMNT Char( 15) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MVULMES Char( 08 ) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cCod Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cLocalOri Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SC2 Char( 2)
DECLARE @cFil_SB9 Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cCodOriMod Char( 15)
DECLARE @cB1_CC Char( 01 )
DECLARE @cFILAUX Char( 2)
DECLARE @cCusFilAux Char( 2)
DECLARE @cFiltra Char( 01 )
DECLARE @cExecutou Char( 01 )
DECLARE @cAux VarChar( 03 )
DECLARE @OutResult VarChar( 01 )
DECLARE @nSaldo01 Decimal( 12 , 2 )
DECLARE @nSaldo02 Decimal( 14 , 2 )
DECLARE @nSaldo03 Decimal( 14 , 2 )
DECLARE @nSaldo04 Decimal( 14 , 2 )
DECLARE @nSaldo05 Decimal( 14 , 2 )
DECLARE @nSaldo06 Decimal( 14 , 2 )
DECLARE @nSaldo07 Decimal( 12 , 2 )
DECLARE @nVFim01 Float
DECLARE @nVFim02 Float
DECLARE @nVFim03 Float
DECLARE @nVFim04 Float
DECLARE @nVFim05 Float
DECLARE @nQFim01 Float
DECLARE @nQFim02 Float
DECLARE @nQFim03 Float
DECLARE @nQFim04 Float
DECLARE @nQFim05 Float
DECLARE @nTRB_QFIM Float
DECLARE @nQtd Float
DECLARE @nQSaldoAtuFF Float
DECLARE @nCustoAtuFF01 Float
DECLARE @nCustoAtuFF02 Float
DECLARE @nCustoAtuFF03 Float
DECLARE @nCustoAtuFF04 Float
DECLARE @nCustoAtuFF05 Float
DECLARE @nQt2umFF Float
DECLARE @nB2_CM1 Decimal( 14 , 4 )
DECLARE @nB2_CM2 Decimal( 14 , 4 )
DECLARE @nB2_CM3 Decimal( 14 , 4 )
DECLARE @nB2_CM4 Decimal( 14 , 4 )
DECLARE @nB2_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CM1 Decimal( 14 , 4 )
DECLARE @nB9_CM2 Decimal( 14 , 4 )
DECLARE @nB9_CM3 Decimal( 14 , 4 )
DECLARE @nB9_CM4 Decimal( 14 , 4 )
DECLARE @nB9_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CMRP1 Decimal( 14 , 4 )
DECLARE @nB9_CMRP2 Decimal( 14 , 4 )
DECLARE @nB9_CMRP3 Decimal( 14 , 4 )
DECLARE @nB9_CMRP4 Decimal( 14 , 4 )
DECLARE @nB9_CMRP5 Decimal( 14 , 4 )
DECLARE @nB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @nB2_QFIM Decimal( 12 , 2 )
DECLARE @nB2_VFIM1 Decimal( 14 , 2 )
DECLARE @nB2_VFIM2 Decimal( 14 , 2 )
DECLARE @nB2_VFIM3 Decimal( 14 , 2 )
DECLARE @nB2_VFIM4 Decimal( 14 , 2 )
DECLARE @nB2_VFIM5 Decimal( 14 , 2 )
DECLARE @nB2_QFIM2 Decimal( 12 , 2 )
DECLARE @nB2_QFIMFF Decimal( 12 , 2 )
DECLARE @nB2_CMFF1 Decimal( 14 , 4 )
DECLARE @nB2_CMFF2 Decimal( 14 , 4 )
DECLARE @nB2_CMFF3 Decimal( 14 , 4 )
DECLARE @nB2_CMFF4 Decimal( 14 , 4 )
DECLARE @nB2_CMFF5 Decimal( 14 , 4 )
DECLARE @nB2_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM1 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM2 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM3 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM4 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM5 Decimal( 14 , 2 )
DECLARE @nTRB_CM1 Decimal( 14 , 4 )
DECLARE @nTRB_CM2 Decimal( 14 , 4 )
DECLARE @nTRB_CM3 Decimal( 14 , 4 )
DECLARE @nTRB_CM4 Decimal( 14 , 4 )
DECLARE @nTRB_CM5 Decimal( 14 , 4 )
DECLARE @nCM1aux Decimal( 14 , 4 )
DECLARE @nCM2aux Decimal( 14 , 4 )
DECLARE @nCM3aux Decimal( 14 , 4 )
DECLARE @nCM4aux Decimal( 14 , 4 )
DECLARE @nCM5aux Decimal( 14 , 4 )
DECLARE @nQTMOD Decimal( 12 , 2 )
DECLARE @nTOTCM1 Decimal( 14 , 4 )
DECLARE @nRec Integer
DECLARE @nRecAnt Integer
DECLARE @nMaxRecnoSC2 Integer
DECLARE @iRecnoTRT Integer
DECLARE @iRECNO_AUX Integer
DECLARE @iTranCount Integer
DECLARE @iPos Integer
DECLARE @iRecno Integer
DECLARE @nRecno Integer
DECLARE @nCHKSB2 Integer
DECLARE @cFILIALCOR Char( 2)
DECLARE @dDTINICIO Char( 08 )
DECLARE @cMV_PAR1 Char( 08 )
DECLARE @cMVULMES Char( 08 )
DECLARE @cB1_CCCUSTO Char( 9)
BEGIN
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @dDTINICIO  = @IN_DINICIO 
   SET @cMV_PAR1  = @IN_MV_PAR1 
   SET @cMVULMES  = @IN_MVULMES 
   IF @IN_CUSUNIF  = '1' 
   BEGIN 
      SET @cCusFilAux  = @IN_FILIALCOR 
   END 
   ELSE 
   BEGIN 
      SET @cCusFilAux  = '  ' 
   END 
   SET @OUT_RESULTADO  = '0' 
   SET @cFILAUX  = @IN_CFILAUX 
   IF @cFILAUX is null 
   BEGIN 
      SET @cFILAUX  = '  ' 
   END 
   SET @cB1_CC  = '0' 
   SET @nB2_QFIM  = 0 
   SET @nB2_CM1  = 0 
   SET @nB2_CM2  = 0 
   SET @nB2_CM3  = 0 
   SET @nB2_CM4  = 0 
   SET @nB2_CM5  = 0 
   SET @nB9_CM1  = 0 
   SET @nB9_CM2  = 0 
   SET @nB9_CM3  = 0 
   SET @nB9_CM4  = 0 
   SET @nB9_CM5  = 0 
   SET @nB9_CMRP1  = 0 
   SET @nB9_CMRP2  = 0 
   SET @nB9_CMRP3  = 0 
   SET @nB9_CMRP4  = 0 
   SET @nB9_CMRP5  = 0 
   SET @nB9_VINIRP1  = 0 
   SET @nB9_VINIRP2  = 0 
   SET @nB9_VINIRP3  = 0 
   SET @nB9_VINIRP4  = 0 
   SET @nB9_VINIRP5  = 0 
   SET @nB2_QFIM2  = 0 
   SET @nB2_VFIM1  = 0 
   SET @nB2_VFIM2  = 0 
   SET @nB2_VFIM3  = 0 
   SET @nB2_VFIM4  = 0 
   SET @nB2_VFIM5  = 0 
   SET @nTRB_CM1  = 0 
   SET @nTRB_CM2  = 0 
   SET @nTRB_CM3  = 0 
   SET @nTRB_CM4  = 0 
   SET @nTRB_CM5  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SC2 output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD3 output 
   SET @cCodOriMod  = ' ' 
   SET @cFiltra  = '0' 
    
   -- Cursor declaration CUR_A330INI
   DECLARE CUR_A330INI INSENSITIVE  CURSOR FOR 
   SELECT SB2.B2_FILIAL , SB2.B2_COD , SB2.B2_LOCAL , SB2.R_E_C_N_O_ , SB2.B2_QFIM , SB2.B2_VFIM1 , SB2.B2_VFIM2 , SB2.B2_VFIM3 , 
          SB2.B2_VFIM4 , SB2.B2_VFIM5 , SB2.B2_QFIM2 , SB2.B2_CM1 , SB2.B2_CM2 , SB2.B2_CM3 , SB2.B2_CM4 , SB2.B2_CM5 , SB1.B1_CCCUSTO 
     FROM SB2010 SB2, SB1010 SB1
     WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB1.B1_FILIAL  = @cFil_SB1  and SB2.B2_COD  = SB1.B1_COD  and SB2.D_E_L_E_T_  = ' ' 
      and SB1.D_E_L_E_T_  = ' '  and  (SB2.B2_QFIM  <> 0  or SB2.B2_VFIM1  <> 0  or SB2.B2_VFIM2  <> 0  or SB2.B2_VFIM3  <> 0 
      or SB2.B2_VFIM4  <> 0  or SB2.B2_VFIM5  <> 0  or  (SUBSTRING ( SB1.B1_COD , 1 , 3 ) = 'MOD'  or SB1.B1_CCCUSTO  <> ' ' 
     )  or EXISTS (
   SELECT 1 
     FROM SB9010 SB9
     WHERE SB9.B9_FILIAL  = @cFil_SB9  and SB9.B9_COD  = SB2.B2_COD  and SB9.B9_LOCAL  = SB2.B2_LOCAL  and  (SB9.B9_DATA  = @cMVULMES 
      or SB9.B9_DATA  = ' ' )  and SB9.D_E_L_E_T_  = ' '  and  (SB9.B9_QINI  <> 0  or SB9.B9_VINI1  <> 0  or SB9.B9_VINI2  <> 0 
      or SB9.B9_VINI3  <> 0  or SB9.B9_VINI4  <> 0  or SB9.B9_VINI5  <> 0 ) )  or EXISTS (
   SELECT 1 
     FROM SD1010 SD1, SF4010 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = SB2.B2_COD  and SD1.D1_LOCAL  = SB2.B2_LOCAL  and SD1.D1_DTDIGIT  > (
   SELECT CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , MAX ( B9_DATA )),112 )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = SD1.D1_COD  and B9_LOCAL  = SD1.D1_LOCAL  and B9_DATA  < @dDTINICIO  and D_E_L_E_T_  = ' ' 
     ) and SD1.D1_DTDIGIT  <= @cMV_PAR1  and SD1.D1_ORIGLAN  <> 'LF'  and SF4.F4_FILIAL  = @cFil_SF4  and SF4.F4_CODIGO  = SD1.D1_TES 
      and SF4.F4_ESTOQUE  = 'S'  and SF4.D_E_L_E_T_  = ' '  and SD1.D_E_L_E_T_  = ' ' )  or EXISTS (
   SELECT 1 
     FROM SD2010 SD2, SF4010 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = SB2.B2_COD  and SD2.D2_LOCAL  = SB2.B2_LOCAL  and SD2.D2_EMISSAO  > (
   SELECT CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , MAX ( B9_DATA )),112 )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = SD2.D2_COD  and B9_LOCAL  = SD2.D2_LOCAL  and B9_DATA  < @dDTINICIO  and D_E_L_E_T_  = ' ' 
     ) and SD2.D2_EMISSAO  <= @cMV_PAR1  and SD2.D2_ORIGLAN  <> 'LF'  and SF4.F4_FILIAL  = @cFil_SF4  and SF4.F4_CODIGO  = SD2.D2_TES 
      and SF4.F4_ESTOQUE  = 'S'  and SF4.D_E_L_E_T_  = ' '  and SD2.D_E_L_E_T_  = ' ' )  or EXISTS (
   SELECT 1 
     FROM SD3010 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = SB2.B2_COD  and SD3.D3_LOCAL  = SB2.B2_LOCAL  and SD3.D3_EMISSAO  > (
   SELECT CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , MAX ( B9_DATA )),112 )
     FROM SB9010 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = SD3.D3_COD  and B9_LOCAL  = SD3.D3_LOCAL  and B9_DATA  < @dDTINICIO  and D_E_L_E_T_  = ' ' 
     ) and SD3.D3_EMISSAO  <= @cMV_PAR1  and SD3.D3_ESTORNO  = ' '  and SD3.D_E_L_E_T_  = ' ' ) ) 
     ORDER BY SB2.B2_FILIAL , SB2.B2_COD , SB2.B2_LOCAL 
   FOR READ ONLY 
    
   OPEN CUR_A330INI
   FETCH CUR_A330INI 
    INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
          @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      IF @IN_MV_PRODMNT  = @cCod 
      BEGIN 
         FETCH CUR_A330INI 
          INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
                @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
         CONTINUE 
      END 
      IF @cB1_CCCUSTO  = ' ' 
      BEGIN 
         SET @cB1_CC  = '0' 
      END 
      ELSE 
      BEGIN 
         SET @cB1_CC  = '1' 
      END 
      SET @cFiltra  = '0' 
      EXEC MA330AL_01 @cFILIALCOR , @cCod , @cLocal , @nRecno , @cFiltra output 
      IF @cFiltra  = '1' 
      BEGIN 
         FETCH CUR_A330INI 
          INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
                @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
         CONTINUE 
      END 
      SET @nTRB_VFIM1  = 0 
      SET @nTRB_VFIM2  = 0 
      SET @nTRB_VFIM3  = 0 
      SET @nTRB_VFIM4  = 0 
      SET @nTRB_VFIM5  = 0 
      SET @nTRB_QFIM  = 0 
      SET @nVFim01  = 0 
      SET @nVFim02  = 0 
      SET @nVFim03  = 0 
      SET @nVFim04  = 0 
      SET @nVFim05  = 0 
      SET @nQFim01  = 0 
      SET @nQFim02  = 0 
      SET @nQFim03  = 0 
      SET @nQFim04  = 0 
      SET @nQFim05  = 0 
      SET @nB9_CM1  = 0 
      SET @nB9_CM2  = 0 
      SET @nB9_CM3  = 0 
      SET @nB9_CM4  = 0 
      SET @nB9_CM5  = 0 
      SET @nB9_CMRP1  = 0 
      SET @nB9_CMRP2  = 0 
      SET @nB9_CMRP3  = 0 
      SET @nB9_CMRP4  = 0 
      SET @nB9_CMRP5  = 0 
      SET @nB9_VINIRP1  = 0 
      SET @nB9_VINIRP2  = 0 
      SET @nB9_VINIRP3  = 0 
      SET @nB9_VINIRP4  = 0 
      SET @nB9_VINIRP5  = 0 
      SET @cLocalOri  = @cLocal 
      IF  (@IN_MV_PRODMOD  = '0'  and @cB1_CCCUSTO  <> ' ' )  or  ( (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , 
             '0' ) = '0' ) 
      BEGIN 
         EXEC MAT006_19_01 @cCod , @cLocal , @dDTINICIO , @cFILAUX , @IN_MV_LOCPROC , @cFILIALCOR , @IN_MV_D3SERVI , @IN_INTDL , 
                @IN_MV_CQ , @IN_MV_WMSNEW , '0' , @nSaldo01 output , @nSaldo02 output , @nSaldo03 output , @nSaldo04 output , 
                @nSaldo05 output , @nSaldo06 output , @nSaldo07 output , @nB9_CM1 output , @nB9_CM2 output , @nB9_CM3 output , 
                @nB9_CM4 output , @nB9_CM5 output , @nB9_CMRP1 output , @nB9_CMRP2 output , @nB9_CMRP3 output , @nB9_CMRP4 output , 
                @nB9_CMRP5 output , @nB9_VINIRP1 output , @nB9_VINIRP2 output , @nB9_VINIRP3 output , @nB9_VINIRP4 output , 
                @nB9_VINIRP5 output 
         IF @IN_CUSUNIF in ( '1' , '2'  ) 
         BEGIN 
            IF @cCod  <> @cCodOriMod 
            BEGIN 
               SET @cCodOriMod  = @cCod 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cCodOriMod  = ' ' 
         END 
      END 
      ELSE 
      BEGIN 
         IF SUBSTRING ( @IN_COPCOES , 1 , 1 ) = '1' 
         BEGIN 
            SET @cCodOriMod  = ' ' 
            SET @nSaldo01  = @nB2_QFIM 
            SET @nSaldo02  = @nB2_VFIM1 
            SET @nSaldo03  = @nB2_VFIM2 
            SET @nSaldo04  = @nB2_VFIM3 
            SET @nSaldo05  = @nB2_VFIM4 
            SET @nSaldo06  = @nB2_VFIM5 
            SET @nSaldo07  = @nB2_QFIM2 
         END 
         ELSE 
         BEGIN 
            IF @IN_CUSUNIF in ( '1' , '2'  ) 
            BEGIN 
               IF @cCod  <> @cCodOriMod 
               BEGIN 
                  SET @cCodOriMod  = @cCod 
               END 
            END 
            ELSE 
            BEGIN 
               SET @cCodOriMod  = ' ' 
            END 
            SET @nSaldo01  = 0 
            SET @nSaldo02  = 0 
            SET @nSaldo03  = 0 
            SET @nSaldo04  = 0 
            SET @nSaldo05  = 0 
            SET @nSaldo06  = 0 
            SET @nSaldo07  = 0 
         END 
      END 
      SET @nSaldo01  = COALESCE ( @nSaldo01 , 0 )
      SET @nSaldo02  = COALESCE ( @nSaldo02 , 0 )
      SET @nSaldo03  = COALESCE ( @nSaldo03 , 0 )
      SET @nSaldo04  = COALESCE ( @nSaldo04 , 0 )
      SET @nSaldo05  = COALESCE ( @nSaldo05 , 0 )
      SET @nSaldo06  = COALESCE ( @nSaldo06 , 0 )
      SET @nSaldo07  = COALESCE ( @nSaldo07 , 0 )
      SET @nB9_CM1  = COALESCE ( @nB9_CM1 , 0 )
      SET @nB9_CM2  = COALESCE ( @nB9_CM2 , 0 )
      SET @nB9_CM3  = COALESCE ( @nB9_CM3 , 0 )
      SET @nB9_CM4  = COALESCE ( @nB9_CM4 , 0 )
      SET @nB9_CM5  = COALESCE ( @nB9_CM5 , 0 )
      SET @nB9_CMRP1  = COALESCE ( @nB9_CMRP1 , 0 )
      SET @nB9_CMRP2  = COALESCE ( @nB9_CMRP2 , 0 )
      SET @nB9_CMRP3  = COALESCE ( @nB9_CMRP3 , 0 )
      SET @nB9_CMRP4  = COALESCE ( @nB9_CMRP4 , 0 )
      SET @nB9_CMRP5  = COALESCE ( @nB9_CMRP5 , 0 )
      SET @nB9_VINIRP1  = COALESCE ( @nB9_VINIRP1 , 0 )
      SET @nB9_VINIRP2  = COALESCE ( @nB9_VINIRP2 , 0 )
      SET @nB9_VINIRP3  = COALESCE ( @nB9_VINIRP3 , 0 )
      SET @nB9_VINIRP4  = COALESCE ( @nB9_VINIRP4 , 0 )
      SET @nB9_VINIRP5  = COALESCE ( @nB9_VINIRP5 , 0 )
      IF  (@nSaldo01  > 0 ) 
      BEGIN 
         SET @nVFim01  = @nSaldo02 
         SET @nVFim02  = @nSaldo03 
         SET @nVFim03  = @nSaldo04 
         SET @nVFim04  = @nSaldo05 
         SET @nVFim05  = @nSaldo06 
         SET @nQFim01  = @nSaldo01 
         SET @nQFim02  = @nSaldo01 
         SET @nQFim03  = @nSaldo01 
         SET @nQFim04  = @nSaldo01 
         SET @nQFim05  = @nSaldo01 
         IF @nVFim01  <= 0 
         BEGIN 
            SET @nVFim01  = COALESCE ( @nB2_CM1 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim01  = COALESCE ( @nB9_CM1 , 0 )
            END 
            SET @nQFim01  = 1 
         END 
         IF @nVFim02  <= 0 
         BEGIN 
            SET @nVFim02  = COALESCE ( @nB2_CM2 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim02  = COALESCE ( @nB9_CM2 , 0 )
            END 
            SET @nQFim02  = 1 
         END 
         IF @nVFim03  <= 0 
         BEGIN 
            SET @nVFim03  = COALESCE ( @nB2_CM3 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim03  = COALESCE ( @nB9_CM3 , 0 )
            END 
            SET @nQFim03  = 1 
         END 
         IF @nVFim04  <= 0 
         BEGIN 
            SET @nVFim04  = COALESCE ( @nB2_CM4 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim04  = COALESCE ( @nB9_CM4 , 0 )
            END 
            SET @nQFim04  = 1 
         END 
         IF @nVFim05  <= 0 
         BEGIN 
            SET @nVFim05  = COALESCE ( @nB2_CM5 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim05  = COALESCE ( @nB9_CM5 , 0 )
            END 
            SET @nQFim05  = 1 
         END 
         IF @nQFim01  = 0 
         BEGIN 
            SET @nQFim01  = 1 
         END 
         IF @nQFim02  = 0 
         BEGIN 
            SET @nQFim02  = 1 
         END 
         IF @nQFim03  = 0 
         BEGIN 
            SET @nQFim03  = 1 
         END 
         IF @nQFim04  = 0 
         BEGIN 
            SET @nQFim04  = 1 
         END 
         IF @nQFim05  = 0 
         BEGIN 
            SET @nQFim05  = 1 
         END 
         SET @nB2_CM1  = @nVFim01  / @nQFim01 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM2  = @nVFim02  / @nQFim02 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM3  = @nVFim03  / @nQFim03 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM4  = @nVFim04  / @nQFim04 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM5  = @nVFim05  / @nQFim05 
         END 
         begin transaction 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_QFIM  = @nSaldo01 , B2_VFIM1  = @nSaldo02 , B2_CMFIM1  = @nB2_CM1 , B2_QFIM2  = @nSaldo07 , B2_CMRP1  = @nB9_CMRP1 
           , B2_VFRP1  = @nB9_VINIRP1 
          WHERE R_E_C_N_O_  = @nRecno 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VFIM2  = @nSaldo03 , B2_CMFIM2  = @nB2_CM2 , B2_CMRP2  = @nB9_CMRP2 , B2_VFRP2  = @nB9_VINIRP2 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VFIM3  = @nSaldo04 , B2_CMFIM3  = @nB2_CM3 , B2_CMRP3  = @nB9_CMRP3 , B2_VFRP3  = @nB9_VINIRP3 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VFIM4  = @nSaldo05 , B2_CMFIM4  = @nB2_CM4 , B2_CMRP4  = @nB9_CMRP4 , B2_VFRP4  = @nB9_VINIRP4 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VFIM5  = @nSaldo06 , B2_CMFIM5  = @nB2_CM5 , B2_CMRP5  = @nB9_CMRP5 , B2_VFRP5  = @nB9_VINIRP5 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         commit transaction 
      END 
      ELSE 
      BEGIN 
         begin transaction 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_QFIM  = @nSaldo01 , B2_VFIM1  = @nSaldo02 , B2_QFIM2  = @nSaldo07 , B2_CMFIM1  = @nB9_CM1 , B2_CMRP1  = @nB9_CMRP1 
              , B2_VFRP1  = @nB9_VINIRP1 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         ELSE 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_QFIM  = @nSaldo01 , B2_VFIM1  = @nSaldo02 , B2_QFIM2  = @nSaldo07 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM2  = @nSaldo03 , B2_CMFIM2  = @nB9_CM2 , B2_CMRP2  = @nB9_CMRP2 , B2_VFRP2  = @nB9_VINIRP2 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM2  = @nSaldo03 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM3  = @nSaldo04 , B2_CMFIM3  = @nB9_CM3 , B2_CMRP3  = @nB9_CMRP3 , B2_VFRP3  = @nB9_VINIRP3 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM3  = @nSaldo04 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM4  = @nSaldo05 , B2_CMFIM4  = @nB9_CM4 , B2_CMRP4  = @nB9_CMRP4 , B2_VFRP4  = @nB9_VINIRP4 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM4  = @nSaldo05 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM5  = @nSaldo06 , B2_CMFIM5  = @nB9_CM5 , B2_CMRP5  = @nB9_CMRP5 , B2_VFRP5  = @nB9_VINIRP5 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VFIM5  = @nSaldo06 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            SET @nB2_CM1  = @nB9_CM1 
            SET @nB2_CM2  = @nB9_CM2 
            SET @nB2_CM3  = @nB9_CM3 
            SET @nB2_CM4  = @nB9_CM4 
            SET @nB2_CM5  = @nB9_CM5 
         END 
         commit transaction 
      END 
      IF @IN_CUSUNIF in ( '1' , '2'  ) 
      BEGIN 
         SET @iRecnoTRT  = 0 
         SELECT @iRecnoTRT  = COALESCE ( R_E_C_N_O_ , 0 ), @nTRB_QFIM  = TRB_QFIM 
           FROM TRT01SP 
           WHERE TRB_FILIAL  = @cCusFilAux  and TRB_COD  = @cCod 
         IF COALESCE ( @iRecnoTRT , 0 ) = 0 
         BEGIN 
            INSERT INTO TRT01SP (TRB_FILIAL , TRB_COD ) 
            VALUES (@cCusFilAux , @cCod );
            SELECT @iRecnoTRT  = MAX ( R_E_C_N_O_ )
              FROM TRT01SP 
              WHERE TRB_FILIAL  = @cCusFilAux  and TRB_COD  = @cCod 
         END 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            SELECT @nCHKSB2  = R_E_C_N_O_ 
              FROM SB2010 
              WHERE B2_FILIAL  = @cCusFilAux  and B2_COD  = @cCod  and B2_LOCAL  = @cLocal  and B2_QATU  = 0  and B2_CMFIM1  = 0 
               and D_E_L_E_T_  = ' ' 
            IF COALESCE ( @nCHKSB2 , 0 ) > 0 
            BEGIN 
               SELECT @nQTMOD  = TRB_QTDMOD , @nTOTCM1  = TRB_TOTCM1 
                 FROM TRT01SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
               IF @nQTMOD  > 0  and @nB2_CM1  = 0 
               BEGIN 
                  SET @nB2_CM1  = @nTOTCM1  / @nQTMOD 
               END 
            END 
            UPDATE TRT01SP 
              WITH (ROWLOCK) 
               SET TRB_QFIM  = TRB_QFIM  + @nSaldo01 , TRB_QFIM2  = TRB_QFIM2  + @nSaldo07 , TRB_VFIM1  = TRB_VFIM1  + @nSaldo02 
              , TRB_QTDMOD  = TRB_QTDMOD  + 1 , TRB_TOTCM1  = TRB_TOTCM1  + @nB2_CM1 
             WHERE R_E_C_N_O_  = @iRecnoTRT 
            SELECT @nTRB_QFIM  = TRB_QFIM , @nTRB_VFIM1  = TRB_VFIM1 
              FROM TRT01SP 
              WHERE R_E_C_N_O_  = @iRecnoTRT 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM2  = TRB_VFIM2  + @nSaldo03 , TRB_TOTCM2  = TRB_TOTCM2  + @nB2_CM2 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM2  = TRB_VFIM2 
                 FROM TRT01SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM3  = TRB_VFIM3  + @nSaldo04 , TRB_TOTCM3  = TRB_TOTCM3  + @nB2_CM3 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM3  = TRB_VFIM3 
                 FROM TRT01SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM4  = TRB_VFIM4  + @nSaldo05 , TRB_TOTCM4  = TRB_TOTCM4  + @nB2_CM4 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM4  = TRB_VFIM4 
                 FROM TRT01SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM5  = TRB_VFIM5  + @nSaldo06 , TRB_TOTCM5  = TRB_TOTCM5  + @nB2_CM5 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM5  = TRB_VFIM5 
                 FROM TRT01SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
         END 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            IF @nTRB_VFIM1  > 0  and @nTRB_QFIM  > 0 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = TRB_VFIM1  / @nTRB_QFIM 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            ELSE 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = TRB_TOTCM1  / TRB_QTDMOD 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM2  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = TRB_VFIM2  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = TRB_TOTCM2  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM3  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = TRB_VFIM3  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = TRB_TOTCM3  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM4  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = TRB_VFIM4  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = TRB_TOTCM4  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM5  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = TRB_VFIM5  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = TRB_TOTCM5  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (SUBSTRING ( @IN_COPCOES , 1 , 1 ) <> '1' ) 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_QTDMOD  = TRB_QTDMOD  + 1 , TRB_TOTCM1  = TRB_TOTCM1  + @nB2_CM1 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = TRB_TOTCM1  / TRB_QTDMOD 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM2  = TRB_TOTCM2  + @nB2_CM2 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = TRB_TOTCM2  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM3  = TRB_TOTCM3  + @nB2_CM3 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = TRB_TOTCM3  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM4  = TRB_TOTCM4  + @nB2_CM4 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = TRB_TOTCM4  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM5  = TRB_TOTCM5  + @nB2_CM5 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = TRB_TOTCM5  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
         END 
      END 
      EXEC M330INB2CP_01 @cFILIALCOR , @dDTINICIO , @IN_CUSUNIF , @cCod , @cLocal , @nRecno 
      IF @IN_MV_CUSFIFO  = '1' 
      BEGIN 
         EXEC MAT049_19_01 @cCod , @cLocal , @dDTINICIO , @cFILIALCOR , @nQSaldoAtuFF output , @nCustoAtuFF01 output , @nCustoAtuFF02 output , 
                @nCustoAtuFF03 output , @nCustoAtuFF04 output , @nCustoAtuFF05 output , @nQt2umFF output 
         SET @nB2_QFIMFF  = @nQSaldoAtuFF 
         SET @nB2_VFIMFF1  = 0 
         SET @nB2_VFIMFF2  = 0 
         SET @nB2_VFIMFF3  = 0 
         SET @nB2_VFIMFF4  = 0 
         SET @nB2_VFIMFF5  = 0 
         SET @nB2_CMFF1  = 0 
         SET @nB2_CMFF2  = 0 
         SET @nB2_CMFF3  = 0 
         SET @nB2_CMFF4  = 0 
         SET @nB2_CMFF5  = 0 
         SET @nB2_VFIMFF1  = @nCustoAtuFF01 
         IF  (@nSaldo01  > 0 )  and  (@nCustoAtuFF01  > 0 ) 
         BEGIN 
            SET @nB2_CMFF1  = @nB2_VFIMFF1  / @nSaldo01 
         END 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF2  = @nCustoAtuFF02 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF2  > 0 ) 
            BEGIN 
               SET @nB2_CMFF2  = @nB2_VFIMFF2  / @nSaldo01 
            END 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF3  = @nCustoAtuFF03 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF3  > 0 ) 
            BEGIN 
               SET @nB2_CMFF3  = @nB2_VFIMFF3  / @nSaldo01 
            END 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF4  = @nCustoAtuFF04 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF4  > 0 ) 
            BEGIN 
               SET @nB2_CMFF4  = @nB2_VFIMFF4  / @nSaldo01 
            END 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF5  = @nCustoAtuFF05 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF5  > 0 ) 
            BEGIN 
               SET @nB2_CMFF5  = @nB2_VFIMFF5  / @nSaldo01 
            END 
         END 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VFIMFF1  = @nB2_VFIMFF1 , B2_CMFF1  = @nB2_CMFF1 , B2_VFIMFF2  = @nB2_VFIMFF2 , B2_CMFF2  = @nB2_CMFF2 
           , B2_VFIMFF3  = @nB2_VFIMFF3 , B2_CMFF3  = @nB2_CMFF3 , B2_VFIMFF4  = @nB2_VFIMFF4 , B2_CMFF4  = @nB2_CMFF4 , 
                B2_VFIMFF5  = @nB2_VFIMFF5 , B2_CMFF5  = @nB2_CMFF5 , B2_QFIMFF  = @nB2_QFIMFF 
          WHERE R_E_C_N_O_  = @nRecno 
      END 
      FETCH CUR_A330INI 
       INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
             @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
      IF @IN_CUSUNIF in ( '1' , '2'  ) 
      BEGIN 
         EXEC MAT043_19_01 @cFILIALCOR , @cCodOriMod , @IN_MV_NEGESTR , @OutResult output 
         IF  (@OutResult  = '1' ) 
         BEGIN 
            SELECT @nCM1aux  = TRB_CM1 , @nCM2aux  = TRB_CM2 , @nCM3aux  = TRB_CM3 , @nCM4aux  = TRB_CM4 , @nCM5aux  = TRB_CM5 
              
              FROM TRT01SP 
              WHERE TRB_FILIAL  = @cCusFilAux  and TRB_COD  = @cCodOriMod 
            EXEC M330CMU_01 @cFILIALCOR , @cCodOriMod , @IN_DDATABASE , @nCM1aux , @nCM2aux , @nCM3aux , @nCM4aux , @nCM5aux , 
                   @nTRB_CM1 output , @nTRB_CM2 output , @nTRB_CM3 output , @nTRB_CM4 output , @nTRB_CM5 output , @cExecutou output 
            IF  (@cExecutou  = '1' ) 
            BEGIN 
               UPDATE TRT01SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = COALESCE ( @nTRB_CM1 , 0 )
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = COALESCE ( @nTRB_CM2 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = COALESCE ( @nTRB_CM3 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = COALESCE ( @nTRB_CM4 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT01SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = COALESCE ( @nTRB_CM5 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
         END 
      END 
   END 
   CLOSE CUR_A330INI
   DEALLOCATE CUR_A330INI
   begin transaction 
   UPDATE SC2010 
     WITH (ROWLOCK) 
      SET C2_VFIM1  = C2_VINI1 , C2_APRFIM1  = C2_APRINI1 , C2_VFIMRP1  = C2_APRINI1 , C2_APRFRP1  = C2_APRIRP1 
    WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VFIM2  = C2_VINI2 , C2_APRFIM2  = C2_APRINI2 , C2_VFIMRP2  = C2_APRINI2 , C2_APRFRP2  = C2_APRIRP2 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VFIM3  = C2_VINI3 , C2_APRFIM3  = C2_APRINI3 , C2_VFIMRP3  = C2_APRINI3 , C2_APRFRP3  = C2_APRIRP3 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VFIM4  = C2_VINI4 , C2_APRFIM4  = C2_APRINI4 , C2_VFIMRP4  = C2_APRINI4 , C2_APRFRP4  = C2_APRIRP4 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VFIM5  = C2_VINI5 , C2_APRFIM5  = C2_APRINI5 , C2_VFIMRP5  = C2_APRINI5 , C2_APRFRP5  = C2_APRIRP5 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   IF @IN_MV_CUSFIFO  = '1' 
   BEGIN 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VFIMFF1  = C2_VINIFF1 , C2_APFIFF1  = C2_APINFF1 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2010 
           WITH (ROWLOCK) 
            SET C2_VFIMFF2  = C2_VINIFF2 , C2_APFIFF2  = C2_APINFF2 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2010 
           WITH (ROWLOCK) 
            SET C2_VFIMFF3  = C2_VINIFF3 , C2_APFIFF3  = C2_APINFF3 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2010 
           WITH (ROWLOCK) 
            SET C2_VFIMFF4  = C2_VINIFF4 , C2_APFIFF4  = C2_APINFF4 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2010 
           WITH (ROWLOCK) 
            SET C2_VFIMFF5  = C2_VINIFF5 , C2_APFIFF5  = C2_APINFF5 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
   END 
   commit transaction 
   EXEC M330INC2CP_01 @cFILIALCOR 
   EXEC MAT054_19_01 @cFILIALCOR , @IN_CFILAUX , @dDTINICIO , @IN_MV_MOEDACM , @cMV_PAR1 , @IN_MV_CUSFIFO , @OutResult output 
   IF  (@OutResult  = '1' ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT007_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT007_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT007_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT007_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CFILAUX Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_COPCOES Char( 04 ) , 
    @IN_CUSUNIF Char( 01 ) , 
    @IN_DDATABASE Char( 08 ) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @IN_MV_PRODMNT Char( 15) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MVULMES Char( 08 ) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cCod Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cLocalOri Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SC2 Char( 2)
DECLARE @cFil_SB9 Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cCodOriMod Char( 15)
DECLARE @cB1_CC Char( 01 )
DECLARE @cFILAUX Char( 2)
DECLARE @cCusFilAux Char( 2)
DECLARE @cFiltra Char( 01 )
DECLARE @cExecutou Char( 01 )
DECLARE @cAux VarChar( 03 )
DECLARE @OutResult VarChar( 01 )
DECLARE @nSaldo01 Decimal( 12 , 2 )
DECLARE @nSaldo02 Decimal( 14 , 2 )
DECLARE @nSaldo03 Decimal( 14 , 2 )
DECLARE @nSaldo04 Decimal( 14 , 2 )
DECLARE @nSaldo05 Decimal( 14 , 2 )
DECLARE @nSaldo06 Decimal( 14 , 2 )
DECLARE @nSaldo07 Decimal( 12 , 2 )
DECLARE @nVFim01 Float
DECLARE @nVFim02 Float
DECLARE @nVFim03 Float
DECLARE @nVFim04 Float
DECLARE @nVFim05 Float
DECLARE @nQFim01 Float
DECLARE @nQFim02 Float
DECLARE @nQFim03 Float
DECLARE @nQFim04 Float
DECLARE @nQFim05 Float
DECLARE @nTRB_QFIM Float
DECLARE @nQtd Float
DECLARE @nQSaldoAtuFF Float
DECLARE @nCustoAtuFF01 Float
DECLARE @nCustoAtuFF02 Float
DECLARE @nCustoAtuFF03 Float
DECLARE @nCustoAtuFF04 Float
DECLARE @nCustoAtuFF05 Float
DECLARE @nQt2umFF Float
DECLARE @nB2_CM1 Decimal( 14 , 4 )
DECLARE @nB2_CM2 Decimal( 14 , 4 )
DECLARE @nB2_CM3 Decimal( 14 , 4 )
DECLARE @nB2_CM4 Decimal( 14 , 4 )
DECLARE @nB2_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CM1 Decimal( 14 , 4 )
DECLARE @nB9_CM2 Decimal( 14 , 4 )
DECLARE @nB9_CM3 Decimal( 14 , 4 )
DECLARE @nB9_CM4 Decimal( 14 , 4 )
DECLARE @nB9_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CMRP1 Decimal( 14 , 4 )
DECLARE @nB9_CMRP2 Decimal( 14 , 4 )
DECLARE @nB9_CMRP3 Decimal( 14 , 4 )
DECLARE @nB9_CMRP4 Decimal( 14 , 4 )
DECLARE @nB9_CMRP5 Decimal( 14 , 4 )
DECLARE @nB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @nB2_QFIM Decimal( 12 , 2 )
DECLARE @nB2_VFIM1 Decimal( 14 , 2 )
DECLARE @nB2_VFIM2 Decimal( 14 , 2 )
DECLARE @nB2_VFIM3 Decimal( 14 , 2 )
DECLARE @nB2_VFIM4 Decimal( 14 , 2 )
DECLARE @nB2_VFIM5 Decimal( 14 , 2 )
DECLARE @nB2_QFIM2 Decimal( 12 , 2 )
DECLARE @nB2_QFIMFF Decimal( 12 , 2 )
DECLARE @nB2_CMFF1 Decimal( 14 , 4 )
DECLARE @nB2_CMFF2 Decimal( 14 , 4 )
DECLARE @nB2_CMFF3 Decimal( 14 , 4 )
DECLARE @nB2_CMFF4 Decimal( 14 , 4 )
DECLARE @nB2_CMFF5 Decimal( 14 , 4 )
DECLARE @nB2_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM1 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM2 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM3 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM4 Decimal( 14 , 2 )
DECLARE @nTRB_VFIM5 Decimal( 14 , 2 )
DECLARE @nTRB_CM1 Decimal( 14 , 4 )
DECLARE @nTRB_CM2 Decimal( 14 , 4 )
DECLARE @nTRB_CM3 Decimal( 14 , 4 )
DECLARE @nTRB_CM4 Decimal( 14 , 4 )
DECLARE @nTRB_CM5 Decimal( 14 , 4 )
DECLARE @nCM1aux Decimal( 14 , 4 )
DECLARE @nCM2aux Decimal( 14 , 4 )
DECLARE @nCM3aux Decimal( 14 , 4 )
DECLARE @nCM4aux Decimal( 14 , 4 )
DECLARE @nCM5aux Decimal( 14 , 4 )
DECLARE @nQTMOD Decimal( 12 , 2 )
DECLARE @nTOTCM1 Decimal( 14 , 4 )
DECLARE @nRec Integer
DECLARE @nRecAnt Integer
DECLARE @nMaxRecnoSC2 Integer
DECLARE @iRecnoTRT Integer
DECLARE @iRECNO_AUX Integer
DECLARE @iTranCount Integer
DECLARE @iPos Integer
DECLARE @iRecno Integer
DECLARE @nRecno Integer
DECLARE @nCHKSB2 Integer
DECLARE @cFILIALCOR Char( 2)
DECLARE @dDTINICIO Char( 08 )
DECLARE @cMV_PAR1 Char( 08 )
DECLARE @cMVULMES Char( 08 )
DECLARE @cB1_CCCUSTO Char( 9)
BEGIN
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @dDTINICIO  = @IN_DINICIO 
   SET @cMV_PAR1  = @IN_MV_PAR1 
   SET @cMVULMES  = @IN_MVULMES 
   IF @IN_CUSUNIF  = '1' 
   BEGIN 
      SET @cCusFilAux  = @IN_FILIALCOR 
   END 
   ELSE 
   BEGIN 
      SET @cCusFilAux  = '  ' 
   END 
   SET @OUT_RESULTADO  = '0' 
   SET @cFILAUX  = @IN_CFILAUX 
   IF @cFILAUX is null 
   BEGIN 
      SET @cFILAUX  = '  ' 
   END 
   SET @cB1_CC  = '0' 
   SET @nB2_QFIM  = 0 
   SET @nB2_CM1  = 0 
   SET @nB2_CM2  = 0 
   SET @nB2_CM3  = 0 
   SET @nB2_CM4  = 0 
   SET @nB2_CM5  = 0 
   SET @nB9_CM1  = 0 
   SET @nB9_CM2  = 0 
   SET @nB9_CM3  = 0 
   SET @nB9_CM4  = 0 
   SET @nB9_CM5  = 0 
   SET @nB9_CMRP1  = 0 
   SET @nB9_CMRP2  = 0 
   SET @nB9_CMRP3  = 0 
   SET @nB9_CMRP4  = 0 
   SET @nB9_CMRP5  = 0 
   SET @nB9_VINIRP1  = 0 
   SET @nB9_VINIRP2  = 0 
   SET @nB9_VINIRP3  = 0 
   SET @nB9_VINIRP4  = 0 
   SET @nB9_VINIRP5  = 0 
   SET @nB2_QFIM2  = 0 
   SET @nB2_VFIM1  = 0 
   SET @nB2_VFIM2  = 0 
   SET @nB2_VFIM3  = 0 
   SET @nB2_VFIM4  = 0 
   SET @nB2_VFIM5  = 0 
   SET @nTRB_CM1  = 0 
   SET @nTRB_CM2  = 0 
   SET @nTRB_CM3  = 0 
   SET @nTRB_CM4  = 0 
   SET @nTRB_CM5  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SC2 output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD3 output 
   SET @cCodOriMod  = ' ' 
   SET @cFiltra  = '0' 
    
   -- Cursor declaration CUR_A330INI
   DECLARE CUR_A330INI INSENSITIVE  CURSOR FOR 
   SELECT SB2.B2_FILIAL , SB2.B2_COD , SB2.B2_LOCAL , SB2.R_E_C_N_O_ , SB2.B2_QFIM , SB2.B2_VFIM1 , SB2.B2_VFIM2 , SB2.B2_VFIM3 , 
          SB2.B2_VFIM4 , SB2.B2_VFIM5 , SB2.B2_QFIM2 , SB2.B2_CM1 , SB2.B2_CM2 , SB2.B2_CM3 , SB2.B2_CM4 , SB2.B2_CM5 , SB1.B1_CCCUSTO 
     FROM SB2030 SB2, SB1030 SB1
     WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB1.B1_FILIAL  = @cFil_SB1  and SB2.B2_COD  = SB1.B1_COD  and SB2.D_E_L_E_T_  = ' ' 
      and SB1.D_E_L_E_T_  = ' '  and  (SB2.B2_QFIM  <> 0  or SB2.B2_VFIM1  <> 0  or SB2.B2_VFIM2  <> 0  or SB2.B2_VFIM3  <> 0 
      or SB2.B2_VFIM4  <> 0  or SB2.B2_VFIM5  <> 0  or  (SUBSTRING ( SB1.B1_COD , 1 , 3 ) = 'MOD'  or SB1.B1_CCCUSTO  <> ' ' 
     )  or EXISTS (
   SELECT 1 
     FROM SB9030 SB9
     WHERE SB9.B9_FILIAL  = @cFil_SB9  and SB9.B9_COD  = SB2.B2_COD  and SB9.B9_LOCAL  = SB2.B2_LOCAL  and  (SB9.B9_DATA  = @cMVULMES 
      or SB9.B9_DATA  = ' ' )  and SB9.D_E_L_E_T_  = ' '  and  (SB9.B9_QINI  <> 0  or SB9.B9_VINI1  <> 0  or SB9.B9_VINI2  <> 0 
      or SB9.B9_VINI3  <> 0  or SB9.B9_VINI4  <> 0  or SB9.B9_VINI5  <> 0 ) )  or EXISTS (
   SELECT 1 
     FROM SD1030 SD1, SF4030 SF4
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  = SB2.B2_COD  and SD1.D1_LOCAL  = SB2.B2_LOCAL  and SD1.D1_DTDIGIT  > (
   SELECT CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , MAX ( B9_DATA )),112 )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = SD1.D1_COD  and B9_LOCAL  = SD1.D1_LOCAL  and B9_DATA  < @dDTINICIO  and D_E_L_E_T_  = ' ' 
     ) and SD1.D1_DTDIGIT  <= @cMV_PAR1  and SD1.D1_ORIGLAN  <> 'LF'  and SF4.F4_FILIAL  = @cFil_SF4  and SF4.F4_CODIGO  = SD1.D1_TES 
      and SF4.F4_ESTOQUE  = 'S'  and SF4.D_E_L_E_T_  = ' '  and SD1.D_E_L_E_T_  = ' ' )  or EXISTS (
   SELECT 1 
     FROM SD2030 SD2, SF4030 SF4
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  = SB2.B2_COD  and SD2.D2_LOCAL  = SB2.B2_LOCAL  and SD2.D2_EMISSAO  > (
   SELECT CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , MAX ( B9_DATA )),112 )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = SD2.D2_COD  and B9_LOCAL  = SD2.D2_LOCAL  and B9_DATA  < @dDTINICIO  and D_E_L_E_T_  = ' ' 
     ) and SD2.D2_EMISSAO  <= @cMV_PAR1  and SD2.D2_ORIGLAN  <> 'LF'  and SF4.F4_FILIAL  = @cFil_SF4  and SF4.F4_CODIGO  = SD2.D2_TES 
      and SF4.F4_ESTOQUE  = 'S'  and SF4.D_E_L_E_T_  = ' '  and SD2.D_E_L_E_T_  = ' ' )  or EXISTS (
   SELECT 1 
     FROM SD3030 SD3
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  = SB2.B2_COD  and SD3.D3_LOCAL  = SB2.B2_LOCAL  and SD3.D3_EMISSAO  > (
   SELECT CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , MAX ( B9_DATA )),112 )
     FROM SB9030 
     WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = SD3.D3_COD  and B9_LOCAL  = SD3.D3_LOCAL  and B9_DATA  < @dDTINICIO  and D_E_L_E_T_  = ' ' 
     ) and SD3.D3_EMISSAO  <= @cMV_PAR1  and SD3.D3_ESTORNO  = ' '  and SD3.D_E_L_E_T_  = ' ' ) ) 
     ORDER BY SB2.B2_FILIAL , SB2.B2_COD , SB2.B2_LOCAL 
   FOR READ ONLY 
    
   OPEN CUR_A330INI
   FETCH CUR_A330INI 
    INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
          @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      IF @IN_MV_PRODMNT  = @cCod 
      BEGIN 
         FETCH CUR_A330INI 
          INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
                @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
         CONTINUE 
      END 
      IF @cB1_CCCUSTO  = ' ' 
      BEGIN 
         SET @cB1_CC  = '0' 
      END 
      ELSE 
      BEGIN 
         SET @cB1_CC  = '1' 
      END 
      SET @cFiltra  = '0' 
      EXEC MA330AL_02 @cFILIALCOR , @cCod , @cLocal , @nRecno , @cFiltra output 
      IF @cFiltra  = '1' 
      BEGIN 
         FETCH CUR_A330INI 
          INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
                @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
         CONTINUE 
      END 
      SET @nTRB_VFIM1  = 0 
      SET @nTRB_VFIM2  = 0 
      SET @nTRB_VFIM3  = 0 
      SET @nTRB_VFIM4  = 0 
      SET @nTRB_VFIM5  = 0 
      SET @nTRB_QFIM  = 0 
      SET @nVFim01  = 0 
      SET @nVFim02  = 0 
      SET @nVFim03  = 0 
      SET @nVFim04  = 0 
      SET @nVFim05  = 0 
      SET @nQFim01  = 0 
      SET @nQFim02  = 0 
      SET @nQFim03  = 0 
      SET @nQFim04  = 0 
      SET @nQFim05  = 0 
      SET @nB9_CM1  = 0 
      SET @nB9_CM2  = 0 
      SET @nB9_CM3  = 0 
      SET @nB9_CM4  = 0 
      SET @nB9_CM5  = 0 
      SET @nB9_CMRP1  = 0 
      SET @nB9_CMRP2  = 0 
      SET @nB9_CMRP3  = 0 
      SET @nB9_CMRP4  = 0 
      SET @nB9_CMRP5  = 0 
      SET @nB9_VINIRP1  = 0 
      SET @nB9_VINIRP2  = 0 
      SET @nB9_VINIRP3  = 0 
      SET @nB9_VINIRP4  = 0 
      SET @nB9_VINIRP5  = 0 
      SET @cLocalOri  = @cLocal 
      IF  (@IN_MV_PRODMOD  = '0'  and @cB1_CCCUSTO  <> ' ' )  or  ( (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , 
             '0' ) = '0' ) 
      BEGIN 
         EXEC MAT006_19_02 @cCod , @cLocal , @dDTINICIO , @cFILAUX , @IN_MV_LOCPROC , @cFILIALCOR , @IN_MV_D3SERVI , @IN_INTDL , 
                @IN_MV_CQ , @IN_MV_WMSNEW , '0' , @nSaldo01 output , @nSaldo02 output , @nSaldo03 output , @nSaldo04 output , 
                @nSaldo05 output , @nSaldo06 output , @nSaldo07 output , @nB9_CM1 output , @nB9_CM2 output , @nB9_CM3 output , 
                @nB9_CM4 output , @nB9_CM5 output , @nB9_CMRP1 output , @nB9_CMRP2 output , @nB9_CMRP3 output , @nB9_CMRP4 output , 
                @nB9_CMRP5 output , @nB9_VINIRP1 output , @nB9_VINIRP2 output , @nB9_VINIRP3 output , @nB9_VINIRP4 output , 
                @nB9_VINIRP5 output 
         IF @IN_CUSUNIF in ( '1' , '2'  ) 
         BEGIN 
            IF @cCod  <> @cCodOriMod 
            BEGIN 
               SET @cCodOriMod  = @cCod 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cCodOriMod  = ' ' 
         END 
      END 
      ELSE 
      BEGIN 
         IF SUBSTRING ( @IN_COPCOES , 1 , 1 ) = '1' 
         BEGIN 
            SET @cCodOriMod  = ' ' 
            SET @nSaldo01  = @nB2_QFIM 
            SET @nSaldo02  = @nB2_VFIM1 
            SET @nSaldo03  = @nB2_VFIM2 
            SET @nSaldo04  = @nB2_VFIM3 
            SET @nSaldo05  = @nB2_VFIM4 
            SET @nSaldo06  = @nB2_VFIM5 
            SET @nSaldo07  = @nB2_QFIM2 
         END 
         ELSE 
         BEGIN 
            IF @IN_CUSUNIF in ( '1' , '2'  ) 
            BEGIN 
               IF @cCod  <> @cCodOriMod 
               BEGIN 
                  SET @cCodOriMod  = @cCod 
               END 
            END 
            ELSE 
            BEGIN 
               SET @cCodOriMod  = ' ' 
            END 
            SET @nSaldo01  = 0 
            SET @nSaldo02  = 0 
            SET @nSaldo03  = 0 
            SET @nSaldo04  = 0 
            SET @nSaldo05  = 0 
            SET @nSaldo06  = 0 
            SET @nSaldo07  = 0 
         END 
      END 
      SET @nSaldo01  = COALESCE ( @nSaldo01 , 0 )
      SET @nSaldo02  = COALESCE ( @nSaldo02 , 0 )
      SET @nSaldo03  = COALESCE ( @nSaldo03 , 0 )
      SET @nSaldo04  = COALESCE ( @nSaldo04 , 0 )
      SET @nSaldo05  = COALESCE ( @nSaldo05 , 0 )
      SET @nSaldo06  = COALESCE ( @nSaldo06 , 0 )
      SET @nSaldo07  = COALESCE ( @nSaldo07 , 0 )
      SET @nB9_CM1  = COALESCE ( @nB9_CM1 , 0 )
      SET @nB9_CM2  = COALESCE ( @nB9_CM2 , 0 )
      SET @nB9_CM3  = COALESCE ( @nB9_CM3 , 0 )
      SET @nB9_CM4  = COALESCE ( @nB9_CM4 , 0 )
      SET @nB9_CM5  = COALESCE ( @nB9_CM5 , 0 )
      SET @nB9_CMRP1  = COALESCE ( @nB9_CMRP1 , 0 )
      SET @nB9_CMRP2  = COALESCE ( @nB9_CMRP2 , 0 )
      SET @nB9_CMRP3  = COALESCE ( @nB9_CMRP3 , 0 )
      SET @nB9_CMRP4  = COALESCE ( @nB9_CMRP4 , 0 )
      SET @nB9_CMRP5  = COALESCE ( @nB9_CMRP5 , 0 )
      SET @nB9_VINIRP1  = COALESCE ( @nB9_VINIRP1 , 0 )
      SET @nB9_VINIRP2  = COALESCE ( @nB9_VINIRP2 , 0 )
      SET @nB9_VINIRP3  = COALESCE ( @nB9_VINIRP3 , 0 )
      SET @nB9_VINIRP4  = COALESCE ( @nB9_VINIRP4 , 0 )
      SET @nB9_VINIRP5  = COALESCE ( @nB9_VINIRP5 , 0 )
      IF  (@nSaldo01  > 0 ) 
      BEGIN 
         SET @nVFim01  = @nSaldo02 
         SET @nVFim02  = @nSaldo03 
         SET @nVFim03  = @nSaldo04 
         SET @nVFim04  = @nSaldo05 
         SET @nVFim05  = @nSaldo06 
         SET @nQFim01  = @nSaldo01 
         SET @nQFim02  = @nSaldo01 
         SET @nQFim03  = @nSaldo01 
         SET @nQFim04  = @nSaldo01 
         SET @nQFim05  = @nSaldo01 
         IF @nVFim01  <= 0 
         BEGIN 
            SET @nVFim01  = COALESCE ( @nB2_CM1 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim01  = COALESCE ( @nB9_CM1 , 0 )
            END 
            SET @nQFim01  = 1 
         END 
         IF @nVFim02  <= 0 
         BEGIN 
            SET @nVFim02  = COALESCE ( @nB2_CM2 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim02  = COALESCE ( @nB9_CM2 , 0 )
            END 
            SET @nQFim02  = 1 
         END 
         IF @nVFim03  <= 0 
         BEGIN 
            SET @nVFim03  = COALESCE ( @nB2_CM3 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim03  = COALESCE ( @nB9_CM3 , 0 )
            END 
            SET @nQFim03  = 1 
         END 
         IF @nVFim04  <= 0 
         BEGIN 
            SET @nVFim04  = COALESCE ( @nB2_CM4 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim04  = COALESCE ( @nB9_CM4 , 0 )
            END 
            SET @nQFim04  = 1 
         END 
         IF @nVFim05  <= 0 
         BEGIN 
            SET @nVFim05  = COALESCE ( @nB2_CM5 , 0 )
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               SET @nVFim05  = COALESCE ( @nB9_CM5 , 0 )
            END 
            SET @nQFim05  = 1 
         END 
         IF @nQFim01  = 0 
         BEGIN 
            SET @nQFim01  = 1 
         END 
         IF @nQFim02  = 0 
         BEGIN 
            SET @nQFim02  = 1 
         END 
         IF @nQFim03  = 0 
         BEGIN 
            SET @nQFim03  = 1 
         END 
         IF @nQFim04  = 0 
         BEGIN 
            SET @nQFim04  = 1 
         END 
         IF @nQFim05  = 0 
         BEGIN 
            SET @nQFim05  = 1 
         END 
         SET @nB2_CM1  = @nVFim01  / @nQFim01 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM2  = @nVFim02  / @nQFim02 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM3  = @nVFim03  / @nQFim03 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM4  = @nVFim04  / @nQFim04 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_CM5  = @nVFim05  / @nQFim05 
         END 
         begin transaction 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_QFIM  = @nSaldo01 , B2_VFIM1  = @nSaldo02 , B2_CMFIM1  = @nB2_CM1 , B2_QFIM2  = @nSaldo07 , B2_CMRP1  = @nB9_CMRP1 
           , B2_VFRP1  = @nB9_VINIRP1 
          WHERE R_E_C_N_O_  = @nRecno 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VFIM2  = @nSaldo03 , B2_CMFIM2  = @nB2_CM2 , B2_CMRP2  = @nB9_CMRP2 , B2_VFRP2  = @nB9_VINIRP2 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VFIM3  = @nSaldo04 , B2_CMFIM3  = @nB2_CM3 , B2_CMRP3  = @nB9_CMRP3 , B2_VFRP3  = @nB9_VINIRP3 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VFIM4  = @nSaldo05 , B2_CMFIM4  = @nB2_CM4 , B2_CMRP4  = @nB9_CMRP4 , B2_VFRP4  = @nB9_VINIRP4 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VFIM5  = @nSaldo06 , B2_CMFIM5  = @nB2_CM5 , B2_CMRP5  = @nB9_CMRP5 , B2_VFRP5  = @nB9_VINIRP5 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         commit transaction 
      END 
      ELSE 
      BEGIN 
         begin transaction 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_QFIM  = @nSaldo01 , B2_VFIM1  = @nSaldo02 , B2_QFIM2  = @nSaldo07 , B2_CMFIM1  = @nB9_CM1 , B2_CMRP1  = @nB9_CMRP1 
              , B2_VFRP1  = @nB9_VINIRP1 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         ELSE 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_QFIM  = @nSaldo01 , B2_VFIM1  = @nSaldo02 , B2_QFIM2  = @nSaldo07 
             WHERE R_E_C_N_O_  = @nRecno 
         END 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM2  = @nSaldo03 , B2_CMFIM2  = @nB9_CM2 , B2_CMRP2  = @nB9_CMRP2 , B2_VFRP2  = @nB9_VINIRP2 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM2  = @nSaldo03 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM3  = @nSaldo04 , B2_CMFIM3  = @nB9_CM3 , B2_CMRP3  = @nB9_CMRP3 , B2_VFRP3  = @nB9_VINIRP3 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM3  = @nSaldo04 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM4  = @nSaldo05 , B2_CMFIM4  = @nB9_CM4 , B2_CMRP4  = @nB9_CMRP4 , B2_VFRP4  = @nB9_VINIRP4 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM4  = @nSaldo05 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM5  = @nSaldo06 , B2_CMFIM5  = @nB9_CM5 , B2_CMRP5  = @nB9_CMRP5 , B2_VFRP5  = @nB9_VINIRP5 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VFIM5  = @nSaldo06 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            SET @nB2_CM1  = @nB9_CM1 
            SET @nB2_CM2  = @nB9_CM2 
            SET @nB2_CM3  = @nB9_CM3 
            SET @nB2_CM4  = @nB9_CM4 
            SET @nB2_CM5  = @nB9_CM5 
         END 
         commit transaction 
      END 
      IF @IN_CUSUNIF in ( '1' , '2'  ) 
      BEGIN 
         SET @iRecnoTRT  = 0 
         SELECT @iRecnoTRT  = COALESCE ( R_E_C_N_O_ , 0 ), @nTRB_QFIM  = TRB_QFIM 
           FROM TRT02SP 
           WHERE TRB_FILIAL  = @cCusFilAux  and TRB_COD  = @cCod 
         IF COALESCE ( @iRecnoTRT , 0 ) = 0 
         BEGIN 
            INSERT INTO TRT02SP (TRB_FILIAL , TRB_COD ) 
            VALUES (@cCusFilAux , @cCod );
            SELECT @iRecnoTRT  = MAX ( R_E_C_N_O_ )
              FROM TRT02SP 
              WHERE TRB_FILIAL  = @cCusFilAux  and TRB_COD  = @cCod 
         END 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            SELECT @nCHKSB2  = R_E_C_N_O_ 
              FROM SB2030 
              WHERE B2_FILIAL  = @cCusFilAux  and B2_COD  = @cCod  and B2_LOCAL  = @cLocal  and B2_QATU  = 0  and B2_CMFIM1  = 0 
               and D_E_L_E_T_  = ' ' 
            IF COALESCE ( @nCHKSB2 , 0 ) > 0 
            BEGIN 
               SELECT @nQTMOD  = TRB_QTDMOD , @nTOTCM1  = TRB_TOTCM1 
                 FROM TRT02SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
               IF @nQTMOD  > 0  and @nB2_CM1  = 0 
               BEGIN 
                  SET @nB2_CM1  = @nTOTCM1  / @nQTMOD 
               END 
            END 
            UPDATE TRT02SP 
              WITH (ROWLOCK) 
               SET TRB_QFIM  = TRB_QFIM  + @nSaldo01 , TRB_QFIM2  = TRB_QFIM2  + @nSaldo07 , TRB_VFIM1  = TRB_VFIM1  + @nSaldo02 
              , TRB_QTDMOD  = TRB_QTDMOD  + 1 , TRB_TOTCM1  = TRB_TOTCM1  + @nB2_CM1 
             WHERE R_E_C_N_O_  = @iRecnoTRT 
            SELECT @nTRB_QFIM  = TRB_QFIM , @nTRB_VFIM1  = TRB_VFIM1 
              FROM TRT02SP 
              WHERE R_E_C_N_O_  = @iRecnoTRT 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM2  = TRB_VFIM2  + @nSaldo03 , TRB_TOTCM2  = TRB_TOTCM2  + @nB2_CM2 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM2  = TRB_VFIM2 
                 FROM TRT02SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM3  = TRB_VFIM3  + @nSaldo04 , TRB_TOTCM3  = TRB_TOTCM3  + @nB2_CM3 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM3  = TRB_VFIM3 
                 FROM TRT02SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM4  = TRB_VFIM4  + @nSaldo05 , TRB_TOTCM4  = TRB_TOTCM4  + @nB2_CM4 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM4  = TRB_VFIM4 
                 FROM TRT02SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_VFIM5  = TRB_VFIM5  + @nSaldo06 , TRB_TOTCM5  = TRB_TOTCM5  + @nB2_CM5 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SELECT @nTRB_VFIM5  = TRB_VFIM5 
                 FROM TRT02SP 
                 WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
         END 
         IF  (SUBSTRING ( @cCod , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CC , '0' ) = '0' 
         BEGIN 
            IF @nTRB_VFIM1  > 0  and @nTRB_QFIM  > 0 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = TRB_VFIM1  / @nTRB_QFIM 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            ELSE 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = TRB_TOTCM1  / TRB_QTDMOD 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
            END 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM2  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = TRB_VFIM2  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = TRB_TOTCM2  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM3  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = TRB_VFIM3  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = TRB_TOTCM3  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM4  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = TRB_VFIM4  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = TRB_TOTCM4  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               IF @nTRB_VFIM5  > 0  and @nTRB_QFIM  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = TRB_VFIM5  / @nTRB_QFIM 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               ELSE 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = TRB_TOTCM5  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (SUBSTRING ( @IN_COPCOES , 1 , 1 ) <> '1' ) 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_QTDMOD  = TRB_QTDMOD  + 1 , TRB_TOTCM1  = TRB_TOTCM1  + @nB2_CM1 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = TRB_TOTCM1  / TRB_QTDMOD 
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM2  = TRB_TOTCM2  + @nB2_CM2 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = TRB_TOTCM2  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM3  = TRB_TOTCM3  + @nB2_CM3 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = TRB_TOTCM3  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM4  = TRB_TOTCM4  + @nB2_CM4 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = TRB_TOTCM4  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_TOTCM5  = TRB_TOTCM5  + @nB2_CM5 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = TRB_TOTCM5  / TRB_QTDMOD 
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
         END 
      END 
      EXEC M330INB2CP_02 @cFILIALCOR , @dDTINICIO , @IN_CUSUNIF , @cCod , @cLocal , @nRecno 
      IF @IN_MV_CUSFIFO  = '1' 
      BEGIN 
         EXEC MAT049_19_02 @cCod , @cLocal , @dDTINICIO , @cFILIALCOR , @nQSaldoAtuFF output , @nCustoAtuFF01 output , @nCustoAtuFF02 output , 
                @nCustoAtuFF03 output , @nCustoAtuFF04 output , @nCustoAtuFF05 output , @nQt2umFF output 
         SET @nB2_QFIMFF  = @nQSaldoAtuFF 
         SET @nB2_VFIMFF1  = 0 
         SET @nB2_VFIMFF2  = 0 
         SET @nB2_VFIMFF3  = 0 
         SET @nB2_VFIMFF4  = 0 
         SET @nB2_VFIMFF5  = 0 
         SET @nB2_CMFF1  = 0 
         SET @nB2_CMFF2  = 0 
         SET @nB2_CMFF3  = 0 
         SET @nB2_CMFF4  = 0 
         SET @nB2_CMFF5  = 0 
         SET @nB2_VFIMFF1  = @nCustoAtuFF01 
         IF  (@nSaldo01  > 0 )  and  (@nCustoAtuFF01  > 0 ) 
         BEGIN 
            SET @nB2_CMFF1  = @nB2_VFIMFF1  / @nSaldo01 
         END 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF2  = @nCustoAtuFF02 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF2  > 0 ) 
            BEGIN 
               SET @nB2_CMFF2  = @nB2_VFIMFF2  / @nSaldo01 
            END 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF3  = @nCustoAtuFF03 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF3  > 0 ) 
            BEGIN 
               SET @nB2_CMFF3  = @nB2_VFIMFF3  / @nSaldo01 
            END 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF4  = @nCustoAtuFF04 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF4  > 0 ) 
            BEGIN 
               SET @nB2_CMFF4  = @nB2_VFIMFF4  / @nSaldo01 
            END 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            SET @nB2_VFIMFF5  = @nCustoAtuFF05 
            IF  (@nSaldo01  > 0 )  and  (@nB2_VFIMFF5  > 0 ) 
            BEGIN 
               SET @nB2_CMFF5  = @nB2_VFIMFF5  / @nSaldo01 
            END 
         END 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VFIMFF1  = @nB2_VFIMFF1 , B2_CMFF1  = @nB2_CMFF1 , B2_VFIMFF2  = @nB2_VFIMFF2 , B2_CMFF2  = @nB2_CMFF2 
           , B2_VFIMFF3  = @nB2_VFIMFF3 , B2_CMFF3  = @nB2_CMFF3 , B2_VFIMFF4  = @nB2_VFIMFF4 , B2_CMFF4  = @nB2_CMFF4 , 
                B2_VFIMFF5  = @nB2_VFIMFF5 , B2_CMFF5  = @nB2_CMFF5 , B2_QFIMFF  = @nB2_QFIMFF 
          WHERE R_E_C_N_O_  = @nRecno 
      END 
      FETCH CUR_A330INI 
       INTO @cFil_SB2 , @cCod , @cLocal , @nRecno , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
             @nB2_QFIM2 , @nB2_CM1 , @nB2_CM2 , @nB2_CM3 , @nB2_CM4 , @nB2_CM5 , @cB1_CCCUSTO 
      IF @IN_CUSUNIF in ( '1' , '2'  ) 
      BEGIN 
         EXEC MAT043_19_02 @cFILIALCOR , @cCodOriMod , @IN_MV_NEGESTR , @OutResult output 
         IF  (@OutResult  = '1' ) 
         BEGIN 
            SELECT @nCM1aux  = TRB_CM1 , @nCM2aux  = TRB_CM2 , @nCM3aux  = TRB_CM3 , @nCM4aux  = TRB_CM4 , @nCM5aux  = TRB_CM5 
              
              FROM TRT02SP 
              WHERE TRB_FILIAL  = @cCusFilAux  and TRB_COD  = @cCodOriMod 
            EXEC M330CMU_02 @cFILIALCOR , @cCodOriMod , @IN_DDATABASE , @nCM1aux , @nCM2aux , @nCM3aux , @nCM4aux , @nCM5aux , 
                   @nTRB_CM1 output , @nTRB_CM2 output , @nTRB_CM3 output , @nTRB_CM4 output , @nTRB_CM5 output , @cExecutou output 
            IF  (@cExecutou  = '1' ) 
            BEGIN 
               UPDATE TRT02SP 
                 WITH (ROWLOCK) 
                  SET TRB_CM1  = COALESCE ( @nTRB_CM1 , 0 )
                WHERE R_E_C_N_O_  = @iRecnoTRT 
               SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM2  = COALESCE ( @nTRB_CM2 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM3  = COALESCE ( @nTRB_CM3 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM4  = COALESCE ( @nTRB_CM4 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
               SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
               IF @iPos  > 0 
               BEGIN 
                  UPDATE TRT02SP 
                    WITH (ROWLOCK) 
                     SET TRB_CM5  = COALESCE ( @nTRB_CM5 , 0 )
                   WHERE R_E_C_N_O_  = @iRecnoTRT 
               END 
            END 
         END 
      END 
   END 
   CLOSE CUR_A330INI
   DEALLOCATE CUR_A330INI
   begin transaction 
   UPDATE SC2030 
     WITH (ROWLOCK) 
      SET C2_VFIM1  = C2_VINI1 , C2_APRFIM1  = C2_APRINI1 , C2_VFIMRP1  = C2_APRINI1 , C2_APRFRP1  = C2_APRIRP1 
    WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VFIM2  = C2_VINI2 , C2_APRFIM2  = C2_APRINI2 , C2_VFIMRP2  = C2_APRINI2 , C2_APRFRP2  = C2_APRIRP2 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VFIM3  = C2_VINI3 , C2_APRFIM3  = C2_APRINI3 , C2_VFIMRP3  = C2_APRINI3 , C2_APRFRP3  = C2_APRIRP3 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VFIM4  = C2_VINI4 , C2_APRFIM4  = C2_APRINI4 , C2_VFIMRP4  = C2_APRINI4 , C2_APRFRP4  = C2_APRIRP4 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
   IF @iPos  > 0 
   BEGIN 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VFIM5  = C2_VINI5 , C2_APRFIM5  = C2_APRINI5 , C2_VFIMRP5  = C2_APRINI5 , C2_APRFRP5  = C2_APRIRP5 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
   END 
   IF @IN_MV_CUSFIFO  = '1' 
   BEGIN 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VFIMFF1  = C2_VINIFF1 , C2_APFIFF1  = C2_APINFF1 
       WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2030 
           WITH (ROWLOCK) 
            SET C2_VFIMFF2  = C2_VINIFF2 , C2_APFIFF2  = C2_APINFF2 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2030 
           WITH (ROWLOCK) 
            SET C2_VFIMFF3  = C2_VINIFF3 , C2_APFIFF3  = C2_APINFF3 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2030 
           WITH (ROWLOCK) 
            SET C2_VFIMFF4  = C2_VINIFF4 , C2_APFIFF4  = C2_APINFF4 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         UPDATE SC2030 
           WITH (ROWLOCK) 
            SET C2_VFIMFF5  = C2_VINIFF5 , C2_APFIFF5  = C2_APINFF5 
          WHERE C2_FILIAL  = @cFil_SC2  and D_E_L_E_T_  = ' '  and  (C2_DATRF  = ' '  or C2_DATRF  >= @dDTINICIO ) 
      END 
   END 
   commit transaction 
   EXEC M330INC2CP_02 @cFILIALCOR 
   EXEC MAT054_19_02 @cFILIALCOR , @IN_CFILAUX , @dDTINICIO , @IN_MV_MOEDACM , @cMV_PAR1 , @IN_MV_CUSFIFO , @OutResult output 
   IF  (@OutResult  = '1' ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT009_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT009_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT009_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT009_19_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_ORDEM Char( 03 ) , 
    @IN_RECFILE Integer , 
    @IN_NRECRE5 Integer , 
    @IN_NRECTRB Integer , 
    @IN_MV_PAR14 Integer , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_PRODPR0 Integer , 
    @IN_FILIALCOR Char( 2) , 
    @IN_RECNOSMO Integer , 
    @IN_CTRANSF Char( 01 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_USAFILTRF Char( 01 ) , 
    @IN_SEQ500 Char( 01 ) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_PAR11 Integer , 
    @IN_MV_PAR18 Integer , 
    @IN_MV_330JCM1 Char( 05 ) , 
    @IN_MV_PROCQE6 Char( 01 ) , 
    @cB1_CCCUSTO Char( 01 ) , 
    @IN_FILIALPROC Char( 2) ) AS
 
-- Declaration of variables
DECLARE @cTRB_NIVEL VarChar( 03 )
DECLARE @cTRB_NIVSD3 Char( 01 )
DECLARE @cBKP_NIVSD3 Char( 01 )
DECLARE @cTRB_COD Char( 15)
DECLARE @cTRB_LOCAL Char( 2)
DECLARE @cTRB_CHAVE VarChar( 60)
DECLARE @cTRB_OP Char( 14)
DECLARE @cTRB_CF Char( 3)
DECLARE @cTRB_SEQ Char( 6)
DECLARE @cTRB_SEQPRO Char( 6)
DECLARE @cTRB_TES Char( 3)
DECLARE @dTRB_DTORIG Char( 08 )
DECLARE @nTRB_RECSD1 Integer
DECLARE @cTRB_DOC Char( 9)
DECLARE @cTRB_TIPO Char( 01 )
DECLARE @cTRB_TIPONF Char( 1)
DECLARE @nTRB_QUANT Float
DECLARE @cOPVAZIA Char( 14)
DECLARE @nTRX_QUANT Float
DECLARE @nTRX_QPERDA Float
DECLARE @dTRB_DTBASE Char( 08 )
DECLARE @cTRB_LOJA Char( 4)
DECLARE @cD3_ESTORNO Char( 1)
DECLARE @cTRB_CLI Char( 14)
DECLARE @cTRB_SERIE Char( 3)
DECLARE @lGrava Char( 01 )
DECLARE @cOrdem Char( 03 )
DECLARE @cExecutou Char( 01 )
DECLARE @cAlias Char( 03 )
DECLARE @dDtBusca Char( 08 )
DECLARE @iContador Integer
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cAliasAux Char( 03 )
DECLARE @cRetFil Char( 2)
DECLARE @cTRB_ESPECIE Char( 5 )
DECLARE @cTRB_TIPODOC Char( 2 )
DECLARE @cTRB_FILTRA Char( 1 )
DECLARE @cTRB_ITEM Char( 4)
DECLARE @cTRB_MOD Char( 1 )
DECLARE @cAux Char( 3 )
DECLARE @nAux Integer
DECLARE @nBypass Integer
DECLARE @cNumSeq Char( 6)
DECLARE @cPrCQE6 Char( 2 )
DECLARE @cNPrCQE6 Char( 2 )
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SC2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SD7 Char( 2)
DECLARE @F4Estoque Char( 1 )
DECLARE @F4Poder3 Char( 1 )
DECLARE @D7OrigLan Char( 2 )
DECLARE @G1Niv Char( 2 )
DECLARE @G1NivComp Char( 2 )
DECLARE @cOldORDEM Char( 03 )
DECLARE @cOldTRB_NIVEL Char( 03 )
DECLARE @cOldTRB_NIVSD3 Char( 01 )
DECLARE @cOldTRB_TIPO Char( 01 )
DECLARE @cOldTRB_CF Char( 3)
DECLARE @cOldTRB_CHAVE VarChar( 60)
DECLARE @cTRB_CHAVEREAD VarChar( 60)
DECLARE @nRECFILE Integer
DECLARE @cFILIALCOR Char( 2)
DECLARE @cFILIALPROC Char( 2)
DECLARE @cNRECRE5 Integer
DECLARE @nNRECTRB Integer
DECLARE @cFil_SB1 Char( 2)
DECLARE @cD3CF Char( 3)
DECLARE @cD3OP Char( 14)
DECLARE @cD3EMI Char( 8)
DECLARE @cD3SEQ Char( 6)
DECLARE @cD7SEQ Char( 6)
BEGIN
   SET @lGrava  = '0' 
   SET @cTRB_NIVEL  = '  ' 
   SET @cTRB_NIVSD3  = ' ' 
   SET @cBKP_NIVSD3  = ' ' 
   SET @cTRB_COD  = ' ' 
   SET @cTRB_LOCAL  = ' ' 
   SET @cTRB_CHAVE  = ' ' 
   SET @cTRB_OP  = ' ' 
   SET @cTRB_CF  = ' ' 
   SET @cTRB_SEQ  = ' ' 
   SET @cTRB_SEQPRO  = ' ' 
   SET @dTRB_DTORIG  = ' ' 
   SET @nTRB_RECSD1  = 0 
   SET @cTRB_TES  = ' ' 
   SET @cTRB_DOC  = ' ' 
   SET @cTRB_TIPO  = ' ' 
   SET @cTRB_TIPONF  = ' ' 
   SET @cOPVAZIA  = '   ' 
   SET @nTRX_QUANT  = 0 
   SET @nTRX_QPERDA  = 0 
   SET @cExecutou  = '0' 
   SET @cTRB_CLI  = ' ' 
   SET @cTRB_SERIE  = ' ' 
   SET @nTRB_QUANT  = 0 
   SET @cRetFil  = ' ' 
   SET @cTRB_LOJA  = ' ' 
   SET @cTRB_ESPECIE  = '     ' 
   SET @cTRB_TIPODOC  = '  ' 
   SET @cTRB_FILTRA  = ' ' 
   SET @cTRB_ITEM  = '    ' 
   SET @cTRB_MOD  = ' ' 
   SET @G1Niv  = '  ' 
   SET @G1NivComp  = '  ' 
   SET @nAux  = 0 
   SET @nBypass  = 0 
   SET @cOldORDEM  = '   ' 
   SET @cOldTRB_NIVEL  = '   ' 
   SET @cOldTRB_NIVSD3  = ' ' 
   SET @cOldTRB_TIPO  = ' ' 
   SET @cOldTRB_CHAVE  = ' ' 
   SET @cTRB_CHAVEREAD  = ' ' 
   SET @nRECFILE  = @IN_RECFILE 
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cFILIALPROC  = @IN_FILIALPROC 
   SET @cNRECRE5  = @IN_NRECRE5 
   SET @nNRECTRB  = @IN_NRECTRB 
   SET @cAlias  = ' ' 
   SET @cOrdem  = ' ' 
   SET @cExecutou  = ' ' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SC2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SD7' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SD7 output 
   IF @IN_MV_PAR11  = 1 
   BEGIN 
      SET @cFil_SG1  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cAux  = 'SG1' 
      EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SG1 output 
   END 
   EXEC MA330SEQ_01 @IN_ORDEM , @IN_ALIAS , @nRECFILE , @cOrdem output , @cAlias output , @cExecutou output 
   IF  (@cExecutou  = '1' ) 
   BEGIN 
      IF @cAlias  = 'SD1' 
      BEGIN 
         SET @lGrava  = '1' 
         SELECT @cTRB_COD  = D1_COD , @cTRB_LOCAL  = D1_LOCAL , @cTRB_SEQ  = D1_NUMSEQ , @dTRB_DTORIG  = D1_DTDIGIT , @cTRB_TES  = D1_TES 
           , @cTRB_DOC  = D1_DOC , @cTRB_TIPONF  = D1_TIPO , @cD1_FORNECE  = D1_FORNECE , @cTRB_SERIE  = D1_SERIE , @nTRB_QUANT  = D1_QUANT 
           , @cTRB_LOJA  = D1_LOJA , @cTRB_OP  = D1_OP , @cTRB_ITEM  = D1_ITEM , @cTRB_ESPECIE  = D1_ESPECIE , @cTRB_TIPODOC  = D1_TIPODOC 
           
           FROM SD1010 
           WHERE R_E_C_N_O_  = @nRECFILE 
         SET @cAliasAux  = 'SD1' 
         EXEC MAT047_19_01 @cFILIALCOR , @cAliasAux , @cTRB_TES , @cTRB_ESPECIE , @cTRB_TIPODOC , @IN_CPAISLOC , @cTRB_DOC , 
                @cTRB_SERIE , @cD1_FORNECE , @cTRB_LOJA , @IN_USAFILTRF , @cRetFil output 
         IF  (@IN_MV_PAR14  = 1 ) 
         BEGIN 
            SET @cTRB_SEQPRO  = @cTRB_SEQ 
         END 
         IF @cOrdem  = '300' 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cOPVAZIA  + 'E'  + @dTRB_DTORIG  + @cTRB_SEQ  + '9y' ) 
            SELECT @F4Estoque  = F4_ESTOQUE , @F4Poder3  = F4_PODER3 
              FROM SF4010 
              WHERE D_E_L_E_T_  = ' '  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cTRB_TES 
            IF  (@F4Estoque  = 'S'  and @F4Poder3  = 'D' ) 
            BEGIN 
               IF @cTRB_NIVEL  = '  ' 
               BEGIN 
                  IF @IN_MV_PAR11  = 1 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM TRB01SPSG1 
                       WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC  and D_E_L_E_T_  = ' ' 
                       
                  END 
                  ELSE 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM TRB01SPSG1 
                       WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and D_E_L_E_T_  = ' ' 
                  END 
                  IF @G1Niv  <> '  ' 
                  BEGIN 
                     SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
                  END 
               END 
               SET @cTRB_NIVSD3  = '5' 
               IF @cTRB_OP  <> @cOPVAZIA 
               BEGIN 
                  SELECT @cTRB_NIVEL  = COALESCE ( C2_NIVEL , '  ' )
                    FROM SC2010 
                    WHERE D_E_L_E_T_  = ' '  and C2_FILIAL  = @cFil_SC2  and C2_NUM  = SUBSTRING ( @cTRB_OP , 01 , 6 ) and C2_ITEM  = SUBSTRING ( @cTRB_OP , 
                         07 , 2 ) and C2_SEQUEN  = SUBSTRING ( @cTRB_OP , 09 , 3 ) and C2_ITEMGRD  = SUBSTRING ( @cTRB_OP , 
                         12 , 3 )
                  SELECT @cD3OP  = D3_OP , @cD3CF  = D3_CF , @cD3EMI  = D3_EMISSAO , @cD3SEQ  = D3_NUMSEQ 
                    FROM SD3010 
                    WHERE R_E_C_N_O_  = @cNRECRE5 
                  SET @cTRB_CHAVE  =  (@cD3OP  + SUBSTRING ( @cD3CF , 2 , 1 ) + @dTRB_DTORIG  + @cTRB_SEQ ) 
                  IF @cD3CF in ( 'DE4' , 'DE6' , 'DE7'  ) 
                  BEGIN 
                     SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '9y' ) 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '0y' ) 
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'y' ) 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cOrdem  = '500'  and @IN_SEQ500  = '1' 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cTRB_SEQ  + @cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
         END 
      END 
      IF @cAlias  = 'SD2' 
      BEGIN 
         SET @lGrava  = '1' 
         SELECT @cTRB_COD  = D2_COD , @cTRB_LOCAL  = D2_LOCAL , @cTRB_SEQ  = D2_NUMSEQ , @dTRB_DTORIG  = D2_EMISSAO , @cTRB_TES  = D2_TES 
           , @cTRB_DOC  = D2_DOC , @cTRB_CLI  = D2_CLIENTE , @cTRB_SERIE  = D2_SERIE , @nTRB_QUANT  = D2_QUANT , @cTRB_LOJA  = D2_LOJA 
           , @cTRB_ITEM  = D2_ITEM , @cTRB_ESPECIE  = D2_ESPECIE , @cTRB_TIPODOC  = D2_TIPODOC 
           FROM SD2010 
           WHERE R_E_C_N_O_  = @nRECFILE 
         SET @cAliasAux  = 'SD2' 
         EXEC MAT047_19_01 @cFILIALCOR , @cAliasAux , @cTRB_TES , @cTRB_ESPECIE , @cTRB_TIPODOC , @IN_CPAISLOC , @cTRB_DOC , 
                @cTRB_SERIE , @cTRB_CLI , @cTRB_LOJA , @IN_USAFILTRF , @cRetFil output 
         IF  (@IN_MV_PAR14  = 1 ) 
         BEGIN 
            SET @cTRB_SEQPRO  = @cTRB_SEQ 
         END 
         IF @cOrdem  <> '300' 
         BEGIN 
            IF @cOrdem  = '500'  and @IN_SEQ500  = '1' 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cTRB_SEQ  + @cTRB_CLI  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cTRB_CLI  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cOPVAZIA  + 'E'  + @dTRB_DTORIG  + @cTRB_SEQ  + '9x' ) 
         END 
         IF @cOrdem  = '300'  or @cRetFil  <> ' ' 
         BEGIN 
            SET @F4Estoque  = ' ' 
            SET @F4Poder3  = ' ' 
            IF @cRetFil  = ' ' 
            BEGIN 
               SELECT @F4Estoque  = F4_ESTOQUE , @F4Poder3  = F4_PODER3 
                 FROM SF4010 
                 WHERE D_E_L_E_T_  = ' '  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cTRB_TES 
            END 
            IF @cRetFil  <> ' '  or  (@F4Estoque  = 'S'  and @F4Poder3  = 'R' ) 
            BEGIN 
               SET @G1Niv  = '  ' 
               IF @IN_MV_PAR11  = 1 
               BEGIN 
                  SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM TRB01SPSG1 
                    WHERE  (D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC 
                    ) 
                  SELECT @G1NivComp  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM TRB01SPSG1 
                    WHERE  (D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COMP  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC 
                    ) 
               END 
               ELSE 
               BEGIN 
                  SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM SG1010 
                    WHERE D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD 
                  SELECT @G1NivComp  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM SG1010 
                    WHERE D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COMP  = @cTRB_COD 
               END 
               IF  (@G1NivComp is null ) 
               BEGIN 
                  SET @G1NivComp  = ' ' 
               END 
               IF  (@G1Niv is null ) 
               BEGIN 
                  SET @G1Niv  = ' ' 
               END 
               IF @G1Niv  <> '  ' 
               BEGIN 
                  SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
               END 
               SET @cTRB_NIVSD3  = '5' 
               SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'x' ) 
            END 
         END 
      END 
      IF @cAlias  = 'SD3' 
      BEGIN 
         SET @lGrava  = '1' 
         SELECT @cTRB_COD  = D3_COD , @cTRB_LOCAL  = D3_LOCAL , @cTRB_SEQ  = D3_NUMSEQ , @dTRB_DTORIG  = D3_EMISSAO , @cTRB_DOC  = D3_DOC 
           , @cTRB_CF  = D3_CF , @cTRB_OP  = D3_OP , @cD3_ESTORNO  = D3_ESTORNO , @nTRX_QPERDA  = D3_PERDA , @nTRB_QUANT  = D3_QUANT 
           
           FROM SD3010 SD3
           WHERE SD3.R_E_C_N_O_  = @nRECFILE 
         SET @nTRX_QUANT  = @nTRB_QUANT 
         IF  (@IN_MV_PAR14  = 1 ) 
         BEGIN 
            SET @cTRB_SEQPRO  = @cTRB_SEQ 
         END 
         SET @cTRB_CHAVE  =  (@cTRB_OP  + SUBSTRING ( @cTRB_CF , 2 , 1 ) + @dTRB_DTORIG  + @cTRB_SEQ  + @IN_CTRANSF ) 
         IF @cTRB_CF in ( 'DE4' , 'DE6' , 'DE7'  ) 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '9' ) 
         END 
         ELSE 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '0' ) 
         END 
         IF @cNRECRE5  > 0 
         BEGIN 
            SELECT @cD1_FORNECE  = D1_FORNECE , @cTRB_DOC  = D1_DOC , @cTRB_SERIE  = D1_SERIE , @cD3SEQ  = D1_NUMSEQ , @dTRB_DTORIG  = D1_DTDIGIT 
              , @cTRB_ITEM  = D1_ITEM 
              FROM SD1010 
              WHERE R_E_C_N_O_  = @cNRECRE5 
            IF @cOrdem  = '300' 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cOPVAZIA  + 'E'  + @dTRB_DTORIG  + @cD3SEQ  + '9z' ) 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cD3SEQ  + @cTRB_DOC  + @cTRB_SERIE  + 'z' ) 
            END 
         END 
         IF  (@cTRB_CF in ( 'PR0' , 'PR1'  ) )  and  (@cD3_ESTORNO  <> 'S' ) 
         BEGIN 
            IF  (@IN_MV_PAR14  <> 3 ) 
            BEGIN 
               SET @dDtBusca  = @IN_MV_PAR1 
               SELECT @iContador  = COUNT ( * )
                 FROM TRX01SP TRX
                 WHERE TRX_FILIAL  = @cFILIALCOR  and TRX_DATA  = @dDtBusca  and TRX_OP  = @cTRB_OP  and TRX_COD  = @cTRB_COD 
                  and TRX_LOCAL  = @cTRB_LOCAL 
            END 
            ELSE 
            BEGIN 
               SET @dDtBusca  = @dTRB_DTORIG 
               SELECT @iContador  = COUNT ( * )
                 FROM TRX01SP TRX
                 WHERE TRX_FILIAL  = @cFILIALCOR  and TRX_DATA  = @dDtBusca  and TRX_OP  = @cTRB_OP  and TRX_COD  = @cTRB_COD 
                  and TRX_LOCAL  = @cTRB_LOCAL 
            END 
            IF @iContador is null 
            BEGIN 
               SET @iContador  = 0 
            END 
            IF  (@iContador  > 0 ) 
            BEGIN 
               UPDATE TRX01SP 
                 WITH (ROWLOCK) 
                  SET TRX_QUANT  = TRX_QUANT  + @nTRX_QUANT , TRX_QPERDA  = TRX_QPERDA  + @nTRX_QPERDA 
                WHERE TRX_FILIAL  = @cFILIALCOR  and TRX_DATA  = @dDtBusca  and TRX_OP  = @cTRB_OP  and TRX_COD  = @cTRB_COD 
                  and TRX_LOCAL  = @cTRB_LOCAL 
            END 
            ELSE 
            BEGIN 
               INSERT INTO TRX01SP (TRX_FILIAL , TRX_COD , TRX_DATA , TRX_OP , TRX_LOCAL , TRX_QUANT , TRX_QPERDA ) 
               VALUES (@cFILIALCOR , @cTRB_COD , @dDtBusca , @cTRB_OP , @cTRB_LOCAL , @nTRX_QUANT , @nTRX_QPERDA );
            END 
         END 
         IF @cTRB_CF  = 'DE0'  and @cTRB_OP  <> ' ' 
         BEGIN 
            SET @nBypass  = 1 
         END 
         IF @nBypass  = 0  and @cTRB_OP  <> ' '  and SUBSTRING ( @cTRB_CF , 2 , 2 ) <> 'E3'  and  (@cTRB_CF  <> 'RE5'  or @cOrdem  = '300' 
           ) 
         BEGIN 
            IF @cTRB_CF  = 'RE5'  and @cOrdem  = '300' 
            BEGIN 
               SET @cTRB_NIVEL  = '  ' 
               SET @cTRB_NIVSD3  = ' ' 
               IF @cNRECRE5  > 0 
               BEGIN 
                  SELECT @cTRB_TES  = D1_TES 
                    FROM SD1010 
                    WHERE R_E_C_N_O_  = @cNRECRE5 
                  SELECT @F4Estoque  = F4_ESTOQUE , @F4Poder3  = F4_PODER3 
                    FROM SF4010 
                    WHERE D_E_L_E_T_  = ' '  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cTRB_TES 
                  SET @cTRB_TES  = ' ' 
                  IF @F4Estoque  = 'S'  and @F4Poder3  = 'D' 
                  BEGIN 
                     SET @cTRB_CHAVE  =  (@cTRB_OP  + SUBSTRING ( @cTRB_CF , 2 , 1 ) + @dTRB_DTORIG  + @cD3SEQ ) 
                     IF @cTRB_CF in ( 'DE4' , 'DE6' , 'DE7'  ) 
                     BEGIN 
                        SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '9z' ) 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '0z' ) 
                        SELECT @cTRB_NIVEL  = C2_NIVEL 
                          FROM SC2010 
                          WHERE D_E_L_E_T_  = ' '  and C2_FILIAL  = @cFil_SC2  and C2_NUM  = SUBSTRING ( @cTRB_OP , 01 , 
                               6 ) and C2_ITEM  = SUBSTRING ( @cTRB_OP , 07 , 2 ) and C2_SEQUEN  = SUBSTRING ( @cTRB_OP , 
                               09 , 3 ) and C2_ITEMGRD  = SUBSTRING ( @cTRB_OP , 12 , 3 )
                        SET @cTRB_NIVSD3  = '5' 
                     END 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               SELECT @cTRB_NIVEL  = C2_NIVEL 
                 FROM SC2010 
                 WHERE D_E_L_E_T_  = ' '  and C2_FILIAL  = @cFil_SC2  and C2_NUM  = SUBSTRING ( @cTRB_OP , 01 , 6 ) and C2_ITEM  = SUBSTRING ( @cTRB_OP , 
                      07 , 2 ) and C2_SEQUEN  = SUBSTRING ( @cTRB_OP , 09 , 3 ) and C2_ITEMGRD  = SUBSTRING ( @cTRB_OP , 
                      12 , 3 )
               SET @cTRB_NIVSD3  = '5' 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (SUBSTRING ( @cTRB_CF , 2 , 2 )in ( 'E4' , 'E7'  ) )  or  ( (SUBSTRING ( @cTRB_CF , 2 , 2 ) = 'E6' )  and  (@cTRB_LOCAL  = @IN_MV_CQ 
              ) ) 
            BEGIN 
               IF @cTRB_CF in ( 'RE4' , 'RE7' , 'RE6'  ) 
               BEGIN 
                  IF @IN_MV_PROCQE6  = '1' 
                  BEGIN 
                     SET @cPrCQE6  = 'E4' 
                     SET @cNPrCQE6  = 'E6' 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cPrCQE6  = 'E6' 
                     SET @cNPrCQE6  = 'E4' 
                  END 
                  SET @cAux  = ' ' 
                  SET @D7OrigLan  = ' ' 
                  SET @cTRB_NIVSD3  = '5' 
                  IF @cTRB_LOCAL  = @IN_MV_CQ 
                  BEGIN 
                     SELECT @D7OrigLan  = COALESCE ( D7_ORIGLAN , ' ' )
                       FROM SD7010 
                       WHERE D_E_L_E_T_  = ' '  and D7_FILIAL  = @cFil_SD7  and D7_PRODUTO  = @cTRB_COD  and D7_NUMSEQ  = @cTRB_SEQ 
                        and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                     IF @D7OrigLan  = 'PR' 
                     BEGIN 
                        IF SUBSTRING ( @cTRB_CF , 2 , 2 ) = @cPrCQE6 
                        BEGIN 
                           UPDATE SD3010 
                             WITH (ROWLOCK) 
                              SET D3_CF  =  (''  + SUBSTRING ( D3_CF , 1 , 1 ) + @cNPrCQE6 ) 
                            WHERE R_E_C_N_O_  = @nRECFILE 
                           SET @cTRB_CF  =  (''  + SUBSTRING ( @cTRB_CF , 1 , 1 ) + @cNPrCQE6 ) 
                           SET @cNPrCQE6  = ' ' 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @D7OrigLan  <> ' ' 
                        BEGIN 
                           IF @cTRB_CF in ( 'RE6'  ) 
                           BEGIN 
                              SELECT @cD7SEQ  = D7_NUMSEQ 
                                FROM SD7010 
                                WHERE D7_FILIAL  = @cFILIALCOR  and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                                 and D7_PRODUTO  = @cTRB_COD  and D7_LOCAL  = @cTRB_LOCAL  and D7_TIPO  = 0 
                              SELECT @cAux  = COALESCE ( TRB_NIVEL , ' ' )
                                FROM TRB01SP 
                                WHERE D_E_L_E_T_  = ' '  and TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD3'  and TRB_ORDEM  <> '100' 
                                 and TRB_LOCAL  = @cTRB_LOCAL  and TRB_SEQ  = @cD7SEQ 
                           END 
                           ELSE 
                           BEGIN 
                              SELECT @cAux  = COALESCE ( TRB_NIVEL , ' ' )
                                FROM TRB01SP 
                                WHERE D_E_L_E_T_  = ' '  and TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD1'  and TRB_SEQ  = @cTRB_SEQ 
                                 and TRB_ORDEM  <> '100' 
                              IF @cAux is null 
                              BEGIN 
                                 SET @cAux  = ' ' 
                              END 
                           END 
                        END 
                     END 
                  END 
                  IF @IN_MV_PAR11  = 1 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM TRB01SPSG1 
                       WHERE  (D_E_L_E_T_  = ' '  and G1_FILPROC  = @cFILIALPROC  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD 
                       ) 
                  END 
                  ELSE 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM SG1010 
                       WHERE D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD 
                  END 
                  IF @G1Niv  <> '  ' 
                  BEGIN 
                     SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
                     IF @IN_MV_PROCQE6  = '1'  and @D7OrigLan  <> ' '  and @cNPrCQE6  = ' ' 
                     BEGIN 
                        IF @cTRB_CF in ( 'DE6' , 'RE6' , 'DE7' , 'RE7'  ) 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'w' ) 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + ' ' ) 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @cTRB_CF in ( 'DE4' , 'RE4' , 'DE7' , 'RE7'  ) 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'w' ) 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + ' ' ) 
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @cAux  = ' '  and @D7OrigLan  = ' ' 
                     BEGIN 
                        SET @cTRB_NIVEL  = '  w' 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cTRB_NIVEL  = @cAux 
                     END 
                  END 
                  IF SUBSTRING ( @cTRB_CF , 2 , 2 ) = 'E6' 
                  BEGIN 
                     SELECT @cNumSeq  = COALESCE ( MAX ( D3_NUMSEQ ), ' ' )
                       FROM SD3010 
                       WHERE D_E_L_E_T_  = ' '  and D3_ESTORNO  <> 'S'  and D3_FILIAL  = @cFil_SD3  and D3_NUMSEQ  = @cTRB_SEQ 
                        and D3_LOCAL  = @IN_MV_CQ  and D3_COD  = @cTRB_COD  and D3_QUANT  = @nTRB_QUANT 
                     IF @cNumSeq  = ' ' 
                     BEGIN 
                        IF @IN_MV_PAR18  = 1 
                        BEGIN 
                           SET @cTRB_NIVSD3  = '1' 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cTRB_NIVSD3  = '9' 
                        END 
                     END 
                  END 
                  SET @cTRB_TIPO  = 'T' 
               END 
               SET @cBKP_NIVSD3  = @cTRB_NIVSD3 
            END 
            ELSE 
            BEGIN 
               IF  (SUBSTRING ( @cTRB_CF , 2 , 2 ) <> 'E3'  and @cOrdem  <> '280' ) 
               BEGIN 
                  SET @cTRB_NIVSD3  = '9' 
               END 
               ELSE 
               BEGIN 
                  IF  (@cOrdem  <> '280' ) 
                  BEGIN 
                     SET @cTRB_NIVSD3  = '7' 
                  END 
               END 
            END 
         END 
         IF @cTRB_CF in ( 'DE4' , 'DE7' , 'DE6'  ) 
         BEGIN 
            SET @cOldTRB_NIVEL  = @cTRB_NIVEL 
            SET @cOldTRB_NIVSD3  = @cTRB_NIVSD3 
            SET @cOldTRB_TIPO  = @cTRB_TIPO 
            SET @cOldTRB_CF  = @cTRB_CF 
            SELECT @cTRB_NIVEL  = TRB.TRB_NIVEL , @cTRB_NIVSD3  = TRB.TRB_NIVSD3 , @cTRB_TIPO  = TRB.TRB_TIPO , @cTRB_CF  = SUBSTRING ( @cTRB_CF , 
                   1 , 1 ) + SUBSTRING ( TRB.TRB_CF , 2 , 2 )
              FROM TRB01SP TRB
              WHERE TRB.TRB_FILIAL  = @cFILIALCOR  and TRB.TRB_ALIAS  = 'SD3'  and TRB.TRB_SEQ  = @cTRB_SEQ  and TRB.TRB_DTORIG  = @dTRB_DTORIG 
               and TRB.TRB_CF  <> 'RE5'  and SUBSTRING ( TRB.TRB_CF , 1 , 1 ) = 'R'  and  (@cTRB_CF  = 'DE7'  or TRB.TRB_QUANT  = @nTRX_QUANT 
              )  and TRB.D_E_L_E_T_  = ' ' 
              GROUP BY TRB.TRB_NIVEL , TRB.TRB_NIVSD3 , TRB.TRB_TIPO , TRB.TRB_CF 
            IF  (@cTRB_NIVEL is null ) 
            BEGIN 
               SET @cTRB_NIVEL  = @cOldTRB_NIVEL 
            END 
            IF  (@cTRB_NIVSD3 is null ) 
            BEGIN 
               SET @cTRB_NIVSD3  = @cOldTRB_NIVSD3 
            END 
            IF  (@cTRB_TIPO is null ) 
            BEGIN 
               SET @cTRB_TIPO  = @cOldTRB_TIPO 
            END 
            IF  (@cTRB_CF is null ) 
            BEGIN 
               SET @cTRB_CF  = @cOldTRB_CF 
            END 
            UPDATE SD3010 
              WITH (ROWLOCK) 
               SET D3_CF  = @cTRB_CF 
             WHERE R_E_C_N_O_  = @nRECFILE 
            SET @cBKP_NIVSD3  = @cTRB_NIVSD3 
         END 
         IF SUBSTRING ( @cTRB_CF , 2 , 2 ) = 'E6' 
         BEGIN 
            IF @cTRB_LOCAL  <> @IN_MV_CQ 
            BEGIN 
               IF @IN_MV_PAR18  = 1 
               BEGIN 
                  SET @cTRB_NIVSD3  = '1' 
               END 
               ELSE 
               BEGIN 
                  SET @cTRB_NIVSD3  = '9' 
               END 
               SELECT @nAux  = COUNT ( D3_NUMSEQ )
                 FROM SD3010 
                 WHERE D_E_L_E_T_  = ' '  and D3_FILIAL  = @cFil_SD3  and D3_NUMSEQ  = @cTRB_SEQ  and D3_LOCAL  = @IN_MV_CQ 
                  and D3_ESTORNO  <> 'S' 
               IF @nAux  > 0 
               BEGIN 
                  SET @cTRB_NIVSD3  = @cBKP_NIVSD3 
               END 
            END 
         END 
         IF @cTRB_CF in ( 'RE6' , 'DE6'  )  and @IN_MV_PAR14  <> 1 
         BEGIN 
            IF @nTRB_QUANT  > 0 
            BEGIN 
               SELECT @D7OrigLan  = COALESCE ( D7_ORIGLAN , '  ' ), @cNumSeq  = D7_NUMSEQ 
                 FROM SD7010 
                 WHERE D_E_L_E_T_  = ' '  and D7_FILIAL  = @cFil_SD7  and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                  and D7_PRODUTO  = @cTRB_COD  and D7_LOCAL  = @IN_MV_CQ  and D7_TIPO  = 0 
               IF @D7OrigLan  = 'CP' 
               BEGIN 
                  SET @cOldORDEM  = @cOrdem 
                  SET @cOldTRB_NIVEL  = @cTRB_NIVEL 
                  SET @cOldTRB_NIVSD3  = @cTRB_NIVSD3 
                  SET @cTRB_CHAVEREAD  = ' ' 
                  SELECT @cTRB_CHAVEREAD  = TRB_CHAVE , @cOrdem  = TRB_ORDEM , @cTRB_NIVEL  = TRB_NIVEL , @cTRB_NIVSD3  = TRB_NIVSD3 
                    , @nTRB_RECSD1  = TRB_RECNO 
                    FROM TRB01SP 
                    WHERE TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD1'  and TRB_SEQ  = @cNumSeq  and D_E_L_E_T_  = ' ' 
                    
                  IF  (@cTRB_CHAVEREAD  <> ' ' ) 
                  BEGIN 
                     SET @cOldTRB_CHAVE  = @cTRB_CHAVE 
                     SET @cTRB_CHAVE  = ' ' 
                     SELECT @cTRB_SEQ  = D1_NUMSEQ , @dTRB_DTORIG  = D1_DTDIGIT , @cTRB_DOC  = D1_DOC , @cTRB_SERIE  = D1_SERIE 
                       , @cD1_FORNECE  = D1_FORNECE 
                       FROM SD1010 
                       WHERE R_E_C_N_O_  = @nTRB_RECSD1 
                     IF @cOrdem  = '500'  and @IN_SEQ500  = '1' 
                     BEGIN 
                        IF RTRIM ( @cTRB_CHAVEREAD ) =  (@cTRB_SEQ  + @cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE 
                          ) 
                        BEGIN 
                           SET @cTRB_CHAVE  =  (@cTRB_SEQ  + @cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE  + 'x' 
                             ) 
                        END 
                     END 
                     IF @cTRB_CHAVE  = ' '  and RTRIM ( @cTRB_CHAVEREAD ) =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE 
                       ) 
                     BEGIN 
                        SET @cTRB_CHAVE  =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE  + 'x' 
                          ) 
                     END 
                     IF @cTRB_CHAVE  = ' ' 
                     BEGIN 
                        SET @cTRB_CHAVE  = RTRIM ( @cTRB_CHAVEREAD ) + 'x' 
                     END 
                  END 
                  IF  (@cOrdem is null ) 
                  BEGIN 
                     SET @cOrdem  = @cOldORDEM 
                  END 
                  IF  (@cTRB_NIVEL is null ) 
                  BEGIN 
                     SET @cTRB_NIVEL  = @cOldTRB_NIVEL 
                  END 
                  IF  (@cTRB_NIVSD3 is null ) 
                  BEGIN 
                     SET @cTRB_NIVSD3  = @cOldTRB_NIVSD3 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF @D7OrigLan  = 'PR' 
                  BEGIN 
                     SET @cOldORDEM  = @cOrdem 
                     SET @cOldTRB_NIVEL  = @cTRB_NIVEL 
                     SET @cOldTRB_NIVSD3  = @cTRB_NIVSD3 
                     SET @cTRB_CHAVEREAD  = ' ' 
                     SELECT @cTRB_CHAVEREAD  = TRB_CHAVE , @cOrdem  = TRB_ORDEM , @cTRB_NIVEL  = TRB_NIVEL , @cTRB_NIVSD3  = TRB_NIVSD3 
                       
                       FROM TRB01SP 
                       WHERE TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD3'  and TRB_SEQ  = @cNumSeq  and SUBSTRING ( TRB_CF , 
                            1 , 2 ) = 'PR'  and D_E_L_E_T_  = ' ' 
                     IF  (@cTRB_CHAVEREAD  <> ' ' ) 
                     BEGIN 
                        SET @cTRB_CHAVE  = RTRIM ( @cTRB_CHAVEREAD ) + 'x' 
                     END 
                     IF  (@cOrdem is null ) 
                     BEGIN 
                        SET @cOrdem  = @cOldORDEM 
                     END 
                     IF  (@cTRB_NIVEL is null ) 
                     BEGIN 
                        SET @cTRB_NIVEL  = @cOldTRB_NIVEL 
                     END 
                     IF  (@cTRB_NIVSD3 is null ) 
                     BEGIN 
                        SET @cTRB_NIVSD3  = @cOldTRB_NIVSD3 
                     END 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               SELECT @cNumSeq  = COALESCE ( MAX ( D7_NUMSEQ ), ' ' )
                 FROM SD7010 
                 WHERE D_E_L_E_T_  = ' '  and D7_FILIAL  = @cFil_SD7  and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                  and D7_PRODUTO  = @cTRB_COD  and D7_LOCAL  = @IN_MV_CQ  and D7_TIPO  = 8 
               IF @cNumSeq  <> ' ' 
               BEGIN 
                  SET @cTRB_CHAVEREAD  = ' ' 
                  SELECT @cTRB_CHAVEREAD  = TRB_CHAVE , @cOrdem  = TRB_ORDEM , @cTRB_NIVEL  = TRB_NIVEL , @cTRB_NIVSD3  = TRB_NIVSD3 
                    
                    FROM TRB01SP 
                    WHERE TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD1'  and TRB_SEQ  = @cNumSeq  and D_E_L_E_T_  = ' ' 
                    
                  IF  (@cTRB_CHAVEREAD  <> ' ' ) 
                  BEGIN 
                     SET @cTRB_CHAVE  = RTRIM ( @cTRB_CHAVEREAD ) + 'x' 
                  END 
               END 
            END 
            IF @cOrdem  = '100'  and @IN_MV_330JCM1 like '%1%' 
            BEGIN 
               SET @cOrdem  = '101' 
            END 
         END 
      END 
      IF @cTRB_NIVEL  = '  ' 
      BEGIN 
         IF @IN_MV_PAR11  = 1 
         BEGIN 
            SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
              FROM TRB01SPSG1 
              WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
              FROM SG1010 
              WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and D_E_L_E_T_  = ' ' 
         END 
         IF @G1Niv  <> '  ' 
         BEGIN 
            SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
         END 
      END 
      IF @cAlias  = 'SD3' 
      BEGIN 
         IF  (SUBSTRING ( @cTRB_COD , 1 , 3 ) = 'MOD' ) 
         BEGIN 
            SET @cTRB_MOD  = '1' 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PRODMOD  = '1'  and @cB1_CCCUSTO  <> ' ' 
            BEGIN 
               SET @cTRB_MOD  = '1' 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_MOD  = '0' 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         EXEC MAT059_19_01 @cFILIALCOR , @cTRB_COD , @IN_MV_PRODMOD , @cTRB_MOD output 
      END 
      IF  (@lGrava  = '1' ) 
      BEGIN 
         begin transaction 
         SET @dTRB_DTBASE  = @dTRB_DTORIG 
         SET @cTRB_CHAVE  = COALESCE ( @cTRB_CHAVE , '  ' )
         IF  (@IN_MV_PAR14  <> 3 ) 
         BEGIN 
            SET @dTRB_DTBASE  = @IN_MV_PAR1 
         END 
         IF  (@cRetFil  <> ' ' ) 
         BEGIN 
            SET @cTRB_FILTRA  = 'S' 
         END 
         INSERT INTO TRB01SP (TRB_FILIAL , TRB_FILTRA , TRB_ALIAS , TRB_RECNO , TRB_ORDEM , TRB_CHAVE , TRB_NIVEL , TRB_NIVSD3 , 
                TRB_COD , TRB_DTBASE , TRB_OP , TRB_CF , TRB_SEQ , TRB_SEQPRO , TRB_DTORIG , TRB_RECSD1 , TRB_TES , TRB_DOC , 
                TRB_SERIE , TRB_TIPO , TRB_LOCAL , TRB_RECTRB , TRB_TIPONF , TRB_QUANT , TRB_USATRA , TRB_ITEM , TRB_MOD ) 
         VALUES (@cFILIALCOR , @cRetFil , @cAlias , @nRECFILE , @cOrdem , @cTRB_CHAVE , @cTRB_NIVEL , @cTRB_NIVSD3 , @cTRB_COD , 
                @dTRB_DTBASE , @cTRB_OP , @cTRB_CF , @cTRB_SEQ , @cTRB_SEQPRO , @dTRB_DTORIG , @cNRECRE5 , @cTRB_TES , @cTRB_DOC , 
                @cTRB_SERIE , @cTRB_TIPO , @cTRB_LOCAL , @nNRECTRB , @cTRB_TIPONF , @nTRB_QUANT , @cTRB_FILTRA , @cTRB_ITEM , 
                @cTRB_MOD );
         commit transaction 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT009_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT009_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT009_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT009_19_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_ORDEM Char( 03 ) , 
    @IN_RECFILE Integer , 
    @IN_NRECRE5 Integer , 
    @IN_NRECTRB Integer , 
    @IN_MV_PAR14 Integer , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_PRODPR0 Integer , 
    @IN_FILIALCOR Char( 2) , 
    @IN_RECNOSMO Integer , 
    @IN_CTRANSF Char( 01 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_USAFILTRF Char( 01 ) , 
    @IN_SEQ500 Char( 01 ) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_PAR11 Integer , 
    @IN_MV_PAR18 Integer , 
    @IN_MV_330JCM1 Char( 05 ) , 
    @IN_MV_PROCQE6 Char( 01 ) , 
    @cB1_CCCUSTO Char( 01 ) , 
    @IN_FILIALPROC Char( 2) ) AS
 
-- Declaration of variables
DECLARE @cTRB_NIVEL VarChar( 03 )
DECLARE @cTRB_NIVSD3 Char( 01 )
DECLARE @cBKP_NIVSD3 Char( 01 )
DECLARE @cTRB_COD Char( 15)
DECLARE @cTRB_LOCAL Char( 2)
DECLARE @cTRB_CHAVE VarChar( 59)
DECLARE @cTRB_OP Char( 14)
DECLARE @cTRB_CF Char( 3)
DECLARE @cTRB_SEQ Char( 6)
DECLARE @cTRB_SEQPRO Char( 6)
DECLARE @cTRB_TES Char( 3)
DECLARE @dTRB_DTORIG Char( 08 )
DECLARE @nTRB_RECSD1 Integer
DECLARE @cTRB_DOC Char( 8)
DECLARE @cTRB_TIPO Char( 01 )
DECLARE @cTRB_TIPONF Char( 1)
DECLARE @nTRB_QUANT Float
DECLARE @cOPVAZIA Char( 14)
DECLARE @nTRX_QUANT Float
DECLARE @nTRX_QPERDA Float
DECLARE @dTRB_DTBASE Char( 08 )
DECLARE @cTRB_LOJA Char( 4)
DECLARE @cD3_ESTORNO Char( 1)
DECLARE @cTRB_CLI Char( 14)
DECLARE @cTRB_SERIE Char( 3)
DECLARE @lGrava Char( 01 )
DECLARE @cOrdem Char( 03 )
DECLARE @cExecutou Char( 01 )
DECLARE @cAlias Char( 03 )
DECLARE @dDtBusca Char( 08 )
DECLARE @iContador Integer
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cAliasAux Char( 03 )
DECLARE @cRetFil Char( 2)
DECLARE @cTRB_ESPECIE Char( 5 )
DECLARE @cTRB_TIPODOC Char( 2 )
DECLARE @cTRB_FILTRA Char( 1 )
DECLARE @cTRB_ITEM Char( 4)
DECLARE @cTRB_MOD Char( 1 )
DECLARE @cAux Char( 3 )
DECLARE @nAux Integer
DECLARE @nBypass Integer
DECLARE @cNumSeq Char( 6)
DECLARE @cPrCQE6 Char( 2 )
DECLARE @cNPrCQE6 Char( 2 )
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SC2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SD7 Char( 2)
DECLARE @F4Estoque Char( 1 )
DECLARE @F4Poder3 Char( 1 )
DECLARE @D7OrigLan Char( 2 )
DECLARE @G1Niv Char( 2 )
DECLARE @G1NivComp Char( 2 )
DECLARE @cOldORDEM Char( 03 )
DECLARE @cOldTRB_NIVEL Char( 03 )
DECLARE @cOldTRB_NIVSD3 Char( 01 )
DECLARE @cOldTRB_TIPO Char( 01 )
DECLARE @cOldTRB_CF Char( 3)
DECLARE @cOldTRB_CHAVE VarChar( 59)
DECLARE @cTRB_CHAVEREAD VarChar( 59)
DECLARE @nRECFILE Integer
DECLARE @cFILIALCOR Char( 2)
DECLARE @cFILIALPROC Char( 2)
DECLARE @cNRECRE5 Integer
DECLARE @nNRECTRB Integer
DECLARE @cFil_SB1 Char( 2)
DECLARE @cD3CF Char( 3)
DECLARE @cD3OP Char( 14)
DECLARE @cD3EMI Char( 8)
DECLARE @cD3SEQ Char( 6)
DECLARE @cD7SEQ Char( 6)
BEGIN
   SET @lGrava  = '0' 
   SET @cTRB_NIVEL  = '  ' 
   SET @cTRB_NIVSD3  = ' ' 
   SET @cBKP_NIVSD3  = ' ' 
   SET @cTRB_COD  = ' ' 
   SET @cTRB_LOCAL  = ' ' 
   SET @cTRB_CHAVE  = ' ' 
   SET @cTRB_OP  = ' ' 
   SET @cTRB_CF  = ' ' 
   SET @cTRB_SEQ  = ' ' 
   SET @cTRB_SEQPRO  = ' ' 
   SET @dTRB_DTORIG  = ' ' 
   SET @nTRB_RECSD1  = 0 
   SET @cTRB_TES  = ' ' 
   SET @cTRB_DOC  = ' ' 
   SET @cTRB_TIPO  = ' ' 
   SET @cTRB_TIPONF  = ' ' 
   SET @cOPVAZIA  = '   ' 
   SET @nTRX_QUANT  = 0 
   SET @nTRX_QPERDA  = 0 
   SET @cExecutou  = '0' 
   SET @cTRB_CLI  = ' ' 
   SET @cTRB_SERIE  = ' ' 
   SET @nTRB_QUANT  = 0 
   SET @cRetFil  = ' ' 
   SET @cTRB_LOJA  = ' ' 
   SET @cTRB_ESPECIE  = '     ' 
   SET @cTRB_TIPODOC  = '  ' 
   SET @cTRB_FILTRA  = ' ' 
   SET @cTRB_ITEM  = '    ' 
   SET @cTRB_MOD  = ' ' 
   SET @G1Niv  = '  ' 
   SET @G1NivComp  = '  ' 
   SET @nAux  = 0 
   SET @nBypass  = 0 
   SET @cOldORDEM  = '   ' 
   SET @cOldTRB_NIVEL  = '   ' 
   SET @cOldTRB_NIVSD3  = ' ' 
   SET @cOldTRB_TIPO  = ' ' 
   SET @cOldTRB_CHAVE  = ' ' 
   SET @cTRB_CHAVEREAD  = ' ' 
   SET @nRECFILE  = @IN_RECFILE 
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cFILIALPROC  = @IN_FILIALPROC 
   SET @cNRECRE5  = @IN_NRECRE5 
   SET @nNRECTRB  = @IN_NRECTRB 
   SET @cAlias  = ' ' 
   SET @cOrdem  = ' ' 
   SET @cExecutou  = ' ' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SC2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SD7' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SD7 output 
   IF @IN_MV_PAR11  = 1 
   BEGIN 
      SET @cFil_SG1  = ' ' 
   END 
   ELSE 
   BEGIN 
      SET @cAux  = 'SG1' 
      EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SG1 output 
   END 
   EXEC MA330SEQ_02 @IN_ORDEM , @IN_ALIAS , @nRECFILE , @cOrdem output , @cAlias output , @cExecutou output 
   IF  (@cExecutou  = '1' ) 
   BEGIN 
      IF @cAlias  = 'SD1' 
      BEGIN 
         SET @lGrava  = '1' 
         SELECT @cTRB_COD  = D1_COD , @cTRB_LOCAL  = D1_LOCAL , @cTRB_SEQ  = D1_NUMSEQ , @dTRB_DTORIG  = D1_DTDIGIT , @cTRB_TES  = D1_TES 
           , @cTRB_DOC  = D1_DOC , @cTRB_TIPONF  = D1_TIPO , @cD1_FORNECE  = D1_FORNECE , @cTRB_SERIE  = D1_SERIE , @nTRB_QUANT  = D1_QUANT 
           , @cTRB_LOJA  = D1_LOJA , @cTRB_OP  = D1_OP , @cTRB_ITEM  = D1_ITEM , @cTRB_ESPECIE  = D1_ESPECIE , @cTRB_TIPODOC  = D1_TIPODOC 
           
           FROM SD1030 
           WHERE R_E_C_N_O_  = @nRECFILE 
         SET @cAliasAux  = 'SD1' 
         EXEC MAT047_19_02 @cFILIALCOR , @cAliasAux , @cTRB_TES , @cTRB_ESPECIE , @cTRB_TIPODOC , @IN_CPAISLOC , @cTRB_DOC , 
                @cTRB_SERIE , @cD1_FORNECE , @cTRB_LOJA , @IN_USAFILTRF , @cRetFil output 
         IF  (@IN_MV_PAR14  = 1 ) 
         BEGIN 
            SET @cTRB_SEQPRO  = @cTRB_SEQ 
         END 
         IF @cOrdem  = '300' 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cOPVAZIA  + 'E'  + @dTRB_DTORIG  + @cTRB_SEQ  + '9y' ) 
            SELECT @F4Estoque  = F4_ESTOQUE , @F4Poder3  = F4_PODER3 
              FROM SF4030 
              WHERE D_E_L_E_T_  = ' '  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cTRB_TES 
            IF  (@F4Estoque  = 'S'  and @F4Poder3  = 'D' ) 
            BEGIN 
               IF @cTRB_NIVEL  = '  ' 
               BEGIN 
                  IF @IN_MV_PAR11  = 1 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM TRB02SPSG1 
                       WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC  and D_E_L_E_T_  = ' ' 
                       
                  END 
                  ELSE 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM TRB02SPSG1 
                       WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and D_E_L_E_T_  = ' ' 
                  END 
                  IF @G1Niv  <> '  ' 
                  BEGIN 
                     SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
                  END 
               END 
               SET @cTRB_NIVSD3  = '5' 
               IF @cTRB_OP  <> @cOPVAZIA 
               BEGIN 
                  SELECT @cTRB_NIVEL  = COALESCE ( C2_NIVEL , '  ' )
                    FROM SC2030 
                    WHERE D_E_L_E_T_  = ' '  and C2_FILIAL  = @cFil_SC2  and C2_NUM  = SUBSTRING ( @cTRB_OP , 01 , 6 ) and C2_ITEM  = SUBSTRING ( @cTRB_OP , 
                         07 , 2 ) and C2_SEQUEN  = SUBSTRING ( @cTRB_OP , 09 , 3 ) and C2_ITEMGRD  = SUBSTRING ( @cTRB_OP , 
                         12 , 3 )
                  SELECT @cD3OP  = D3_OP , @cD3CF  = D3_CF , @cD3EMI  = D3_EMISSAO , @cD3SEQ  = D3_NUMSEQ 
                    FROM SD3030 
                    WHERE R_E_C_N_O_  = @cNRECRE5 
                  SET @cTRB_CHAVE  =  (@cD3OP  + SUBSTRING ( @cD3CF , 2 , 1 ) + @dTRB_DTORIG  + @cTRB_SEQ ) 
                  IF @cD3CF in ( 'DE4' , 'DE6' , 'DE7'  ) 
                  BEGIN 
                     SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '9y' ) 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '0y' ) 
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'y' ) 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cOrdem  = '500'  and @IN_SEQ500  = '1' 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cTRB_SEQ  + @cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
         END 
      END 
      IF @cAlias  = 'SD2' 
      BEGIN 
         SET @lGrava  = '1' 
         SELECT @cTRB_COD  = D2_COD , @cTRB_LOCAL  = D2_LOCAL , @cTRB_SEQ  = D2_NUMSEQ , @dTRB_DTORIG  = D2_EMISSAO , @cTRB_TES  = D2_TES 
           , @cTRB_DOC  = D2_DOC , @cTRB_CLI  = D2_CLIENTE , @cTRB_SERIE  = D2_SERIE , @nTRB_QUANT  = D2_QUANT , @cTRB_LOJA  = D2_LOJA 
           , @cTRB_ITEM  = D2_ITEM , @cTRB_ESPECIE  = D2_ESPECIE , @cTRB_TIPODOC  = D2_TIPODOC 
           FROM SD2030 
           WHERE R_E_C_N_O_  = @nRECFILE 
         SET @cAliasAux  = 'SD2' 
         EXEC MAT047_19_02 @cFILIALCOR , @cAliasAux , @cTRB_TES , @cTRB_ESPECIE , @cTRB_TIPODOC , @IN_CPAISLOC , @cTRB_DOC , 
                @cTRB_SERIE , @cTRB_CLI , @cTRB_LOJA , @IN_USAFILTRF , @cRetFil output 
         IF  (@IN_MV_PAR14  = 1 ) 
         BEGIN 
            SET @cTRB_SEQPRO  = @cTRB_SEQ 
         END 
         IF @cOrdem  <> '300' 
         BEGIN 
            IF @cOrdem  = '500'  and @IN_SEQ500  = '1' 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cTRB_SEQ  + @cTRB_CLI  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cTRB_CLI  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE ) 
            END 
         END 
         ELSE 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cOPVAZIA  + 'E'  + @dTRB_DTORIG  + @cTRB_SEQ  + '9x' ) 
         END 
         IF @cOrdem  = '300'  or @cRetFil  <> ' ' 
         BEGIN 
            SET @F4Estoque  = ' ' 
            SET @F4Poder3  = ' ' 
            IF @cRetFil  = ' ' 
            BEGIN 
               SELECT @F4Estoque  = F4_ESTOQUE , @F4Poder3  = F4_PODER3 
                 FROM SF4030 
                 WHERE D_E_L_E_T_  = ' '  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cTRB_TES 
            END 
            IF @cRetFil  <> ' '  or  (@F4Estoque  = 'S'  and @F4Poder3  = 'R' ) 
            BEGIN 
               SET @G1Niv  = '  ' 
               IF @IN_MV_PAR11  = 1 
               BEGIN 
                  SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM TRB02SPSG1 
                    WHERE  (D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC 
                    ) 
                  SELECT @G1NivComp  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM TRB02SPSG1 
                    WHERE  (D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COMP  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC 
                    ) 
               END 
               ELSE 
               BEGIN 
                  SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM SG1030 
                    WHERE D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD 
                  SELECT @G1NivComp  = COALESCE ( MIN ( G1_NIV ), '  ' )
                    FROM SG1030 
                    WHERE D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COMP  = @cTRB_COD 
               END 
               IF  (@G1NivComp is null ) 
               BEGIN 
                  SET @G1NivComp  = ' ' 
               END 
               IF  (@G1Niv is null ) 
               BEGIN 
                  SET @G1Niv  = ' ' 
               END 
               IF @G1Niv  <> '  ' 
               BEGIN 
                  SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
               END 
               SET @cTRB_NIVSD3  = '5' 
               SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'x' ) 
            END 
         END 
      END 
      IF @cAlias  = 'SD3' 
      BEGIN 
         SET @lGrava  = '1' 
         SELECT @cTRB_COD  = D3_COD , @cTRB_LOCAL  = D3_LOCAL , @cTRB_SEQ  = D3_NUMSEQ , @dTRB_DTORIG  = D3_EMISSAO , @cTRB_DOC  = D3_DOC 
           , @cTRB_CF  = D3_CF , @cTRB_OP  = D3_OP , @cD3_ESTORNO  = D3_ESTORNO , @nTRX_QPERDA  = D3_PERDA , @nTRB_QUANT  = D3_QUANT 
           
           FROM SD3030 SD3
           WHERE SD3.R_E_C_N_O_  = @nRECFILE 
         SET @nTRX_QUANT  = @nTRB_QUANT 
         IF  (@IN_MV_PAR14  = 1 ) 
         BEGIN 
            SET @cTRB_SEQPRO  = @cTRB_SEQ 
         END 
         SET @cTRB_CHAVE  =  (@cTRB_OP  + SUBSTRING ( @cTRB_CF , 2 , 1 ) + @dTRB_DTORIG  + @cTRB_SEQ  + @IN_CTRANSF ) 
         IF @cTRB_CF in ( 'DE4' , 'DE6' , 'DE7'  ) 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '9' ) 
         END 
         ELSE 
         BEGIN 
            SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '0' ) 
         END 
         IF @cNRECRE5  > 0 
         BEGIN 
            SELECT @cD1_FORNECE  = D1_FORNECE , @cTRB_DOC  = D1_DOC , @cTRB_SERIE  = D1_SERIE , @cD3SEQ  = D1_NUMSEQ , @dTRB_DTORIG  = D1_DTDIGIT 
              , @cTRB_ITEM  = D1_ITEM 
              FROM SD1030 
              WHERE R_E_C_N_O_  = @cNRECRE5 
            IF @cOrdem  = '300' 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cOPVAZIA  + 'E'  + @dTRB_DTORIG  + @cD3SEQ  + '9z' ) 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_CHAVE  =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cD3SEQ  + @cTRB_DOC  + @cTRB_SERIE  + 'z' ) 
            END 
         END 
         IF  (@cTRB_CF in ( 'PR0' , 'PR1'  ) )  and  (@cD3_ESTORNO  <> 'S' ) 
         BEGIN 
            IF  (@IN_MV_PAR14  <> 3 ) 
            BEGIN 
               SET @dDtBusca  = @IN_MV_PAR1 
               SELECT @iContador  = COUNT ( * )
                 FROM TRX02SP TRX
                 WHERE TRX_FILIAL  = @cFILIALCOR  and TRX_DATA  = @dDtBusca  and TRX_OP  = @cTRB_OP  and TRX_COD  = @cTRB_COD 
                  and TRX_LOCAL  = @cTRB_LOCAL 
            END 
            ELSE 
            BEGIN 
               SET @dDtBusca  = @dTRB_DTORIG 
               SELECT @iContador  = COUNT ( * )
                 FROM TRX02SP TRX
                 WHERE TRX_FILIAL  = @cFILIALCOR  and TRX_DATA  = @dDtBusca  and TRX_OP  = @cTRB_OP  and TRX_COD  = @cTRB_COD 
                  and TRX_LOCAL  = @cTRB_LOCAL 
            END 
            IF @iContador is null 
            BEGIN 
               SET @iContador  = 0 
            END 
            IF  (@iContador  > 0 ) 
            BEGIN 
               UPDATE TRX02SP 
                 WITH (ROWLOCK) 
                  SET TRX_QUANT  = TRX_QUANT  + @nTRX_QUANT , TRX_QPERDA  = TRX_QPERDA  + @nTRX_QPERDA 
                WHERE TRX_FILIAL  = @cFILIALCOR  and TRX_DATA  = @dDtBusca  and TRX_OP  = @cTRB_OP  and TRX_COD  = @cTRB_COD 
                  and TRX_LOCAL  = @cTRB_LOCAL 
            END 
            ELSE 
            BEGIN 
               INSERT INTO TRX02SP (TRX_FILIAL , TRX_COD , TRX_DATA , TRX_OP , TRX_LOCAL , TRX_QUANT , TRX_QPERDA ) 
               VALUES (@cFILIALCOR , @cTRB_COD , @dDtBusca , @cTRB_OP , @cTRB_LOCAL , @nTRX_QUANT , @nTRX_QPERDA );
            END 
         END 
         IF @cTRB_CF  = 'DE0'  and @cTRB_OP  <> ' ' 
         BEGIN 
            SET @nBypass  = 1 
         END 
         IF @nBypass  = 0  and @cTRB_OP  <> ' '  and SUBSTRING ( @cTRB_CF , 2 , 2 ) <> 'E3'  and  (@cTRB_CF  <> 'RE5'  or @cOrdem  = '300' 
           ) 
         BEGIN 
            IF @cTRB_CF  = 'RE5'  and @cOrdem  = '300' 
            BEGIN 
               SET @cTRB_NIVEL  = '  ' 
               SET @cTRB_NIVSD3  = ' ' 
               IF @cNRECRE5  > 0 
               BEGIN 
                  SELECT @cTRB_TES  = D1_TES 
                    FROM SD1030 
                    WHERE R_E_C_N_O_  = @cNRECRE5 
                  SELECT @F4Estoque  = F4_ESTOQUE , @F4Poder3  = F4_PODER3 
                    FROM SF4030 
                    WHERE D_E_L_E_T_  = ' '  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cTRB_TES 
                  SET @cTRB_TES  = ' ' 
                  IF @F4Estoque  = 'S'  and @F4Poder3  = 'D' 
                  BEGIN 
                     SET @cTRB_CHAVE  =  (@cTRB_OP  + SUBSTRING ( @cTRB_CF , 2 , 1 ) + @dTRB_DTORIG  + @cD3SEQ ) 
                     IF @cTRB_CF in ( 'DE4' , 'DE6' , 'DE7'  ) 
                     BEGIN 
                        SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '9z' ) 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cTRB_CHAVE  =  (@cTRB_CHAVE  + '0z' ) 
                        SELECT @cTRB_NIVEL  = C2_NIVEL 
                          FROM SC2030 
                          WHERE D_E_L_E_T_  = ' '  and C2_FILIAL  = @cFil_SC2  and C2_NUM  = SUBSTRING ( @cTRB_OP , 01 , 
                               6 ) and C2_ITEM  = SUBSTRING ( @cTRB_OP , 07 , 2 ) and C2_SEQUEN  = SUBSTRING ( @cTRB_OP , 
                               09 , 3 ) and C2_ITEMGRD  = SUBSTRING ( @cTRB_OP , 12 , 3 )
                        SET @cTRB_NIVSD3  = '5' 
                     END 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               SELECT @cTRB_NIVEL  = C2_NIVEL 
                 FROM SC2030 
                 WHERE D_E_L_E_T_  = ' '  and C2_FILIAL  = @cFil_SC2  and C2_NUM  = SUBSTRING ( @cTRB_OP , 01 , 6 ) and C2_ITEM  = SUBSTRING ( @cTRB_OP , 
                      07 , 2 ) and C2_SEQUEN  = SUBSTRING ( @cTRB_OP , 09 , 3 ) and C2_ITEMGRD  = SUBSTRING ( @cTRB_OP , 
                      12 , 3 )
               SET @cTRB_NIVSD3  = '5' 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (SUBSTRING ( @cTRB_CF , 2 , 2 )in ( 'E4' , 'E7'  ) )  or  ( (SUBSTRING ( @cTRB_CF , 2 , 2 ) = 'E6' )  and  (@cTRB_LOCAL  = @IN_MV_CQ 
              ) ) 
            BEGIN 
               IF @cTRB_CF in ( 'RE4' , 'RE7' , 'RE6'  ) 
               BEGIN 
                  IF @IN_MV_PROCQE6  = '1' 
                  BEGIN 
                     SET @cPrCQE6  = 'E4' 
                     SET @cNPrCQE6  = 'E6' 
                  END 
                  ELSE 
                  BEGIN 
                     SET @cPrCQE6  = 'E6' 
                     SET @cNPrCQE6  = 'E4' 
                  END 
                  SET @cAux  = ' ' 
                  SET @D7OrigLan  = ' ' 
                  SET @cTRB_NIVSD3  = '5' 
                  IF @cTRB_LOCAL  = @IN_MV_CQ 
                  BEGIN 
                     SELECT @D7OrigLan  = COALESCE ( D7_ORIGLAN , ' ' )
                       FROM SD7030 
                       WHERE D_E_L_E_T_  = ' '  and D7_FILIAL  = @cFil_SD7  and D7_PRODUTO  = @cTRB_COD  and D7_NUMSEQ  = @cTRB_SEQ 
                        and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                     IF @D7OrigLan  = 'PR' 
                     BEGIN 
                        IF SUBSTRING ( @cTRB_CF , 2 , 2 ) = @cPrCQE6 
                        BEGIN 
                           UPDATE SD3030 
                             WITH (ROWLOCK) 
                              SET D3_CF  =  (''  + SUBSTRING ( D3_CF , 1 , 1 ) + @cNPrCQE6 ) 
                            WHERE R_E_C_N_O_  = @nRECFILE 
                           SET @cTRB_CF  =  (''  + SUBSTRING ( @cTRB_CF , 1 , 1 ) + @cNPrCQE6 ) 
                           SET @cNPrCQE6  = ' ' 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @D7OrigLan  <> ' ' 
                        BEGIN 
                           IF @cTRB_CF in ( 'RE6'  ) 
                           BEGIN 
                              SELECT @cD7SEQ  = D7_NUMSEQ 
                                FROM SD7030 
                                WHERE D7_FILIAL  = @cFILIALCOR  and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                                 and D7_PRODUTO  = @cTRB_COD  and D7_LOCAL  = @cTRB_LOCAL  and D7_TIPO  = 0 
                              SELECT @cAux  = COALESCE ( TRB_NIVEL , ' ' )
                                FROM TRB02SP 
                                WHERE D_E_L_E_T_  = ' '  and TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD3'  and TRB_ORDEM  <> '100' 
                                 and TRB_LOCAL  = @cTRB_LOCAL  and TRB_SEQ  = @cD7SEQ 
                           END 
                           ELSE 
                           BEGIN 
                              SELECT @cAux  = COALESCE ( TRB_NIVEL , ' ' )
                                FROM TRB02SP 
                                WHERE D_E_L_E_T_  = ' '  and TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD1'  and TRB_SEQ  = @cTRB_SEQ 
                                 and TRB_ORDEM  <> '100' 
                              IF @cAux is null 
                              BEGIN 
                                 SET @cAux  = ' ' 
                              END 
                           END 
                        END 
                     END 
                  END 
                  IF @IN_MV_PAR11  = 1 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM TRB02SPSG1 
                       WHERE  (D_E_L_E_T_  = ' '  and G1_FILPROC  = @cFILIALPROC  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD 
                       ) 
                  END 
                  ELSE 
                  BEGIN 
                     SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
                       FROM SG1030 
                       WHERE D_E_L_E_T_  = ' '  and G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD 
                  END 
                  IF @G1Niv  <> '  ' 
                  BEGIN 
                     SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
                     IF @IN_MV_PROCQE6  = '1'  and @D7OrigLan  <> ' '  and @cNPrCQE6  = ' ' 
                     BEGIN 
                        IF @cTRB_CF in ( 'DE6' , 'RE6' , 'DE7' , 'RE7'  ) 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'w' ) 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + ' ' ) 
                        END 
                     END 
                     ELSE 
                     BEGIN 
                        IF @cTRB_CF in ( 'DE4' , 'RE4' , 'DE7' , 'RE7'  ) 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + 'w' ) 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cTRB_NIVEL  =  (@cTRB_NIVEL  + ' ' ) 
                        END 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     IF @cAux  = ' '  and @D7OrigLan  = ' ' 
                     BEGIN 
                        SET @cTRB_NIVEL  = '  w' 
                     END 
                     ELSE 
                     BEGIN 
                        SET @cTRB_NIVEL  = @cAux 
                     END 
                  END 
                  IF SUBSTRING ( @cTRB_CF , 2 , 2 ) = 'E6' 
                  BEGIN 
                     SELECT @cNumSeq  = COALESCE ( MAX ( D3_NUMSEQ ), ' ' )
                       FROM SD3030 
                       WHERE D_E_L_E_T_  = ' '  and D3_ESTORNO  <> 'S'  and D3_FILIAL  = @cFil_SD3  and D3_NUMSEQ  = @cTRB_SEQ 
                        and D3_LOCAL  = @IN_MV_CQ  and D3_COD  = @cTRB_COD  and D3_QUANT  = @nTRB_QUANT 
                     IF @cNumSeq  = ' ' 
                     BEGIN 
                        IF @IN_MV_PAR18  = 1 
                        BEGIN 
                           SET @cTRB_NIVSD3  = '1' 
                        END 
                        ELSE 
                        BEGIN 
                           SET @cTRB_NIVSD3  = '9' 
                        END 
                     END 
                  END 
                  SET @cTRB_TIPO  = 'T' 
               END 
               SET @cBKP_NIVSD3  = @cTRB_NIVSD3 
            END 
            ELSE 
            BEGIN 
               IF  (SUBSTRING ( @cTRB_CF , 2 , 2 ) <> 'E3'  and @cOrdem  <> '280' ) 
               BEGIN 
                  SET @cTRB_NIVSD3  = '9' 
               END 
               ELSE 
               BEGIN 
                  IF  (@cOrdem  <> '280' ) 
                  BEGIN 
                     SET @cTRB_NIVSD3  = '7' 
                  END 
               END 
            END 
         END 
         IF @cTRB_CF in ( 'DE4' , 'DE7' , 'DE6'  ) 
         BEGIN 
            SET @cOldTRB_NIVEL  = @cTRB_NIVEL 
            SET @cOldTRB_NIVSD3  = @cTRB_NIVSD3 
            SET @cOldTRB_TIPO  = @cTRB_TIPO 
            SET @cOldTRB_CF  = @cTRB_CF 
            SELECT @cTRB_NIVEL  = TRB.TRB_NIVEL , @cTRB_NIVSD3  = TRB.TRB_NIVSD3 , @cTRB_TIPO  = TRB.TRB_TIPO , @cTRB_CF  = SUBSTRING ( @cTRB_CF , 
                   1 , 1 ) + SUBSTRING ( TRB.TRB_CF , 2 , 2 )
              FROM TRB02SP TRB
              WHERE TRB.TRB_FILIAL  = @cFILIALCOR  and TRB.TRB_ALIAS  = 'SD3'  and TRB.TRB_SEQ  = @cTRB_SEQ  and TRB.TRB_DTORIG  = @dTRB_DTORIG 
               and TRB.TRB_CF  <> 'RE5'  and SUBSTRING ( TRB.TRB_CF , 1 , 1 ) = 'R'  and  (@cTRB_CF  = 'DE7'  or TRB.TRB_QUANT  = @nTRX_QUANT 
              )  and TRB.D_E_L_E_T_  = ' ' 
              GROUP BY TRB.TRB_NIVEL , TRB.TRB_NIVSD3 , TRB.TRB_TIPO , TRB.TRB_CF 
            IF  (@cTRB_NIVEL is null ) 
            BEGIN 
               SET @cTRB_NIVEL  = @cOldTRB_NIVEL 
            END 
            IF  (@cTRB_NIVSD3 is null ) 
            BEGIN 
               SET @cTRB_NIVSD3  = @cOldTRB_NIVSD3 
            END 
            IF  (@cTRB_TIPO is null ) 
            BEGIN 
               SET @cTRB_TIPO  = @cOldTRB_TIPO 
            END 
            IF  (@cTRB_CF is null ) 
            BEGIN 
               SET @cTRB_CF  = @cOldTRB_CF 
            END 
            UPDATE SD3030 
              WITH (ROWLOCK) 
               SET D3_CF  = @cTRB_CF 
             WHERE R_E_C_N_O_  = @nRECFILE 
            SET @cBKP_NIVSD3  = @cTRB_NIVSD3 
         END 
         IF SUBSTRING ( @cTRB_CF , 2 , 2 ) = 'E6' 
         BEGIN 
            IF @cTRB_LOCAL  <> @IN_MV_CQ 
            BEGIN 
               IF @IN_MV_PAR18  = 1 
               BEGIN 
                  SET @cTRB_NIVSD3  = '1' 
               END 
               ELSE 
               BEGIN 
                  SET @cTRB_NIVSD3  = '9' 
               END 
               SELECT @nAux  = COUNT ( D3_NUMSEQ )
                 FROM SD3030 
                 WHERE D_E_L_E_T_  = ' '  and D3_FILIAL  = @cFil_SD3  and D3_NUMSEQ  = @cTRB_SEQ  and D3_LOCAL  = @IN_MV_CQ 
                  and D3_ESTORNO  <> 'S' 
               IF @nAux  > 0 
               BEGIN 
                  SET @cTRB_NIVSD3  = @cBKP_NIVSD3 
               END 
            END 
         END 
         IF @cTRB_CF in ( 'RE6' , 'DE6'  )  and @IN_MV_PAR14  <> 1 
         BEGIN 
            IF @nTRB_QUANT  > 0 
            BEGIN 
               SELECT @D7OrigLan  = COALESCE ( D7_ORIGLAN , '  ' ), @cNumSeq  = D7_NUMSEQ 
                 FROM SD7030 
                 WHERE D_E_L_E_T_  = ' '  and D7_FILIAL  = @cFil_SD7  and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                  and D7_PRODUTO  = @cTRB_COD  and D7_LOCAL  = @IN_MV_CQ  and D7_TIPO  = 0 
               IF @D7OrigLan  = 'CP' 
               BEGIN 
                  SET @cOldORDEM  = @cOrdem 
                  SET @cOldTRB_NIVEL  = @cTRB_NIVEL 
                  SET @cOldTRB_NIVSD3  = @cTRB_NIVSD3 
                  SET @cTRB_CHAVEREAD  = ' ' 
                  SELECT @cTRB_CHAVEREAD  = TRB_CHAVE , @cOrdem  = TRB_ORDEM , @cTRB_NIVEL  = TRB_NIVEL , @cTRB_NIVSD3  = TRB_NIVSD3 
                    , @nTRB_RECSD1  = TRB_RECNO 
                    FROM TRB02SP 
                    WHERE TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD1'  and TRB_SEQ  = @cNumSeq  and D_E_L_E_T_  = ' ' 
                    
                  IF  (@cTRB_CHAVEREAD  <> ' ' ) 
                  BEGIN 
                     SET @cOldTRB_CHAVE  = @cTRB_CHAVE 
                     SET @cTRB_CHAVE  = ' ' 
                     SELECT @cTRB_SEQ  = D1_NUMSEQ , @dTRB_DTORIG  = D1_DTDIGIT , @cTRB_DOC  = D1_DOC , @cTRB_SERIE  = D1_SERIE 
                       , @cD1_FORNECE  = D1_FORNECE 
                       FROM SD1030 
                       WHERE R_E_C_N_O_  = @nTRB_RECSD1 
                     IF @cOrdem  = '500'  and @IN_SEQ500  = '1' 
                     BEGIN 
                        IF RTRIM ( @cTRB_CHAVEREAD ) =  (@cTRB_SEQ  + @cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE 
                          ) 
                        BEGIN 
                           SET @cTRB_CHAVE  =  (@cTRB_SEQ  + @cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_DOC  + @cTRB_SERIE  + 'x' 
                             ) 
                        END 
                     END 
                     IF @cTRB_CHAVE  = ' '  and RTRIM ( @cTRB_CHAVEREAD ) =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE 
                       ) 
                     BEGIN 
                        SET @cTRB_CHAVE  =  (@cD1_FORNECE  + @dTRB_DTORIG  + @cTRB_SEQ  + @cTRB_DOC  + @cTRB_SERIE  + 'x' 
                          ) 
                     END 
                     IF @cTRB_CHAVE  = ' ' 
                     BEGIN 
                        SET @cTRB_CHAVE  = RTRIM ( @cTRB_CHAVEREAD ) + 'x' 
                     END 
                  END 
                  IF  (@cOrdem is null ) 
                  BEGIN 
                     SET @cOrdem  = @cOldORDEM 
                  END 
                  IF  (@cTRB_NIVEL is null ) 
                  BEGIN 
                     SET @cTRB_NIVEL  = @cOldTRB_NIVEL 
                  END 
                  IF  (@cTRB_NIVSD3 is null ) 
                  BEGIN 
                     SET @cTRB_NIVSD3  = @cOldTRB_NIVSD3 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF @D7OrigLan  = 'PR' 
                  BEGIN 
                     SET @cOldORDEM  = @cOrdem 
                     SET @cOldTRB_NIVEL  = @cTRB_NIVEL 
                     SET @cOldTRB_NIVSD3  = @cTRB_NIVSD3 
                     SET @cTRB_CHAVEREAD  = ' ' 
                     SELECT @cTRB_CHAVEREAD  = TRB_CHAVE , @cOrdem  = TRB_ORDEM , @cTRB_NIVEL  = TRB_NIVEL , @cTRB_NIVSD3  = TRB_NIVSD3 
                       
                       FROM TRB02SP 
                       WHERE TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD3'  and TRB_SEQ  = @cNumSeq  and SUBSTRING ( TRB_CF , 
                            1 , 2 ) = 'PR'  and D_E_L_E_T_  = ' ' 
                     IF  (@cTRB_CHAVEREAD  <> ' ' ) 
                     BEGIN 
                        SET @cTRB_CHAVE  = RTRIM ( @cTRB_CHAVEREAD ) + 'x' 
                     END 
                     IF  (@cOrdem is null ) 
                     BEGIN 
                        SET @cOrdem  = @cOldORDEM 
                     END 
                     IF  (@cTRB_NIVEL is null ) 
                     BEGIN 
                        SET @cTRB_NIVEL  = @cOldTRB_NIVEL 
                     END 
                     IF  (@cTRB_NIVSD3 is null ) 
                     BEGIN 
                        SET @cTRB_NIVSD3  = @cOldTRB_NIVSD3 
                     END 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               SELECT @cNumSeq  = COALESCE ( MAX ( D7_NUMSEQ ), ' ' )
                 FROM SD7030 
                 WHERE D_E_L_E_T_  = ' '  and D7_FILIAL  = @cFil_SD7  and D7_NUMERO  = SUBSTRING ( @cTRB_DOC , 1 , LEN ( D7_NUMERO ))
                  and D7_PRODUTO  = @cTRB_COD  and D7_LOCAL  = @IN_MV_CQ  and D7_TIPO  = 8 
               IF @cNumSeq  <> ' ' 
               BEGIN 
                  SET @cTRB_CHAVEREAD  = ' ' 
                  SELECT @cTRB_CHAVEREAD  = TRB_CHAVE , @cOrdem  = TRB_ORDEM , @cTRB_NIVEL  = TRB_NIVEL , @cTRB_NIVSD3  = TRB_NIVSD3 
                    
                    FROM TRB02SP 
                    WHERE TRB_FILIAL  = @cFILIALCOR  and TRB_ALIAS  = 'SD1'  and TRB_SEQ  = @cNumSeq  and D_E_L_E_T_  = ' ' 
                    
                  IF  (@cTRB_CHAVEREAD  <> ' ' ) 
                  BEGIN 
                     SET @cTRB_CHAVE  = RTRIM ( @cTRB_CHAVEREAD ) + 'x' 
                  END 
               END 
            END 
            IF @cOrdem  = '100'  and @IN_MV_330JCM1 like '%1%' 
            BEGIN 
               SET @cOrdem  = '101' 
            END 
         END 
      END 
      IF @cTRB_NIVEL  = '  ' 
      BEGIN 
         IF @IN_MV_PAR11  = 1 
         BEGIN 
            SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
              FROM TRB02SPSG1 
              WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and G1_FILPROC  = @cFILIALPROC  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            SELECT @G1Niv  = COALESCE ( MIN ( G1_NIV ), '  ' )
              FROM SG1030 
              WHERE G1_FILIAL  = @cFil_SG1  and G1_COD  = @cTRB_COD  and D_E_L_E_T_  = ' ' 
         END 
         IF @G1Niv  <> '  ' 
         BEGIN 
            SET @cTRB_NIVEL  = CONVERT( Char( 2 ) ,100  - CONVERT( Integer ,@G1Niv ))
         END 
      END 
      IF @cAlias  = 'SD3' 
      BEGIN 
         IF  (SUBSTRING ( @cTRB_COD , 1 , 3 ) = 'MOD' ) 
         BEGIN 
            SET @cTRB_MOD  = '1' 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PRODMOD  = '1'  and @cB1_CCCUSTO  <> ' ' 
            BEGIN 
               SET @cTRB_MOD  = '1' 
            END 
            ELSE 
            BEGIN 
               SET @cTRB_MOD  = '0' 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         EXEC MAT059_19_02 @cFILIALCOR , @cTRB_COD , @IN_MV_PRODMOD , @cTRB_MOD output 
      END 
      IF  (@lGrava  = '1' ) 
      BEGIN 
         begin transaction 
         SET @dTRB_DTBASE  = @dTRB_DTORIG 
         SET @cTRB_CHAVE  = COALESCE ( @cTRB_CHAVE , '  ' )
         IF  (@IN_MV_PAR14  <> 3 ) 
         BEGIN 
            SET @dTRB_DTBASE  = @IN_MV_PAR1 
         END 
         IF  (@cRetFil  <> ' ' ) 
         BEGIN 
            SET @cTRB_FILTRA  = 'S' 
         END 
         INSERT INTO TRB02SP (TRB_FILIAL , TRB_FILTRA , TRB_ALIAS , TRB_RECNO , TRB_ORDEM , TRB_CHAVE , TRB_NIVEL , TRB_NIVSD3 , 
                TRB_COD , TRB_DTBASE , TRB_OP , TRB_CF , TRB_SEQ , TRB_SEQPRO , TRB_DTORIG , TRB_RECSD1 , TRB_TES , TRB_DOC , 
                TRB_SERIE , TRB_TIPO , TRB_LOCAL , TRB_RECTRB , TRB_TIPONF , TRB_QUANT , TRB_USATRA , TRB_ITEM , TRB_MOD ) 
         VALUES (@cFILIALCOR , @cRetFil , @cAlias , @nRECFILE , @cOrdem , @cTRB_CHAVE , @cTRB_NIVEL , @cTRB_NIVSD3 , @cTRB_COD , 
                @dTRB_DTBASE , @cTRB_OP , @cTRB_CF , @cTRB_SEQ , @cTRB_SEQPRO , @dTRB_DTORIG , @cNRECRE5 , @cTRB_TES , @cTRB_DOC , 
                @cTRB_SERIE , @cTRB_TIPO , @cTRB_LOCAL , @nNRECTRB , @cTRB_TIPONF , @nTRB_QUANT , @cTRB_FILTRA , @cTRB_ITEM , 
                @cTRB_MOD );
         commit transaction 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT011_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT011_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT011_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT011_17_01]
(
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_PRODUTO Char( 15) , 
    @IN_TIPO Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_RASTRO Char( 1)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   IF  (@IN_MV_RASTRO  = '1' )  or  (@IN_MV_RASTRO  = 'S' ) 
   BEGIN 
      SET @cTipo  = @IN_TIPO 
      IF  (@cTipo is null ) 
      BEGIN 
         SET @cTipo  = ' ' 
      END 
      SELECT @B1_RASTRO  = B1_RASTRO 
        FROM SB1010 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@cTipo  = ' ' ) 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , 'S' ) > 0 )  or  (CHARINDEX ( @B1_RASTRO , 'L' ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , @cTipo ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT011_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT011_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT011_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT011_17_02]
(
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_PRODUTO Char( 15) , 
    @IN_TIPO Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_RASTRO Char( 1)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   IF  (@IN_MV_RASTRO  = '1' )  or  (@IN_MV_RASTRO  = 'S' ) 
   BEGIN 
      SET @cTipo  = @IN_TIPO 
      IF  (@cTipo is null ) 
      BEGIN 
         SET @cTipo  = ' ' 
      END 
      SELECT @B1_RASTRO  = B1_RASTRO 
        FROM SB1030 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@cTipo  = ' ' ) 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , 'S' ) > 0 )  or  (CHARINDEX ( @B1_RASTRO , 'L' ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , @cTipo ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT011_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT011_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT011_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT011_18_01]
(
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_PRODUTO Char( 15) , 
    @IN_TIPO Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_RASTRO Char( 1)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   IF  (@IN_MV_RASTRO  = '1' )  or  (@IN_MV_RASTRO  = 'S' ) 
   BEGIN 
      SET @cTipo  = @IN_TIPO 
      IF  (@cTipo is null ) 
      BEGIN 
         SET @cTipo  = ' ' 
      END 
      SELECT @B1_RASTRO  = B1_RASTRO 
        FROM SB1010 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@cTipo  = ' ' ) 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , 'S' ) > 0 )  or  (CHARINDEX ( @B1_RASTRO , 'L' ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , @cTipo ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT011_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT011_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT011_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT011_18_02]
(
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_PRODUTO Char( 15) , 
    @IN_TIPO Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_RASTRO Char( 1)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   IF  (@IN_MV_RASTRO  = '1' )  or  (@IN_MV_RASTRO  = 'S' ) 
   BEGIN 
      SET @cTipo  = @IN_TIPO 
      IF  (@cTipo is null ) 
      BEGIN 
         SET @cTipo  = ' ' 
      END 
      SELECT @B1_RASTRO  = B1_RASTRO 
        FROM SB1030 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@cTipo  = ' ' ) 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , 'S' ) > 0 )  or  (CHARINDEX ( @B1_RASTRO , 'L' ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , @cTipo ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT011_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT011_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT011_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT011_19_01]
(
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_PRODUTO Char( 15) , 
    @IN_TIPO Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_RASTRO Char( 1)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   IF  (@IN_MV_RASTRO  = '1' )  or  (@IN_MV_RASTRO  = 'S' ) 
   BEGIN 
      SET @cTipo  = @IN_TIPO 
      IF  (@cTipo is null ) 
      BEGIN 
         SET @cTipo  = ' ' 
      END 
      SELECT @B1_RASTRO  = B1_RASTRO 
        FROM SB1010 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@cTipo  = ' ' ) 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , 'S' ) > 0 )  or  (CHARINDEX ( @B1_RASTRO , 'L' ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , @cTipo ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT011_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT011_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT011_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT011_19_02]
(
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_PRODUTO Char( 15) , 
    @IN_TIPO Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cTipo Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_RASTRO Char( 1)
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   IF  (@IN_MV_RASTRO  = '1' )  or  (@IN_MV_RASTRO  = 'S' ) 
   BEGIN 
      SET @cTipo  = @IN_TIPO 
      IF  (@cTipo is null ) 
      BEGIN 
         SET @cTipo  = ' ' 
      END 
      SELECT @B1_RASTRO  = B1_RASTRO 
        FROM SB1030 
        WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@cTipo  = ' ' ) 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , 'S' ) > 0 )  or  (CHARINDEX ( @B1_RASTRO , 'L' ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (CHARINDEX ( @B1_RASTRO , @cTipo ) > 0 ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT012_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT012_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT012_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT012_17_01]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQDPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_LOCALIZ Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_LOCALIZ Char( 1)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B1_LOCALIZ  = B1_LOCALIZ 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF  (@IN_MV_WMSNEW  = '1' )  or  (@IN_MV_ARQDPROD  = 'SBZ' ) 
   BEGIN 
      SELECT @BZ_LOCALIZ  = BZ_LOCALIZ 
        FROM SBZ010 
        WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' )  or  (@BZ_LOCALIZ  = '0' )  or  (@BZ_LOCALIZ  = 'N' ) 
      BEGIN 
         IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT012_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT012_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT012_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT012_17_02]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQDPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_LOCALIZ Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_LOCALIZ Char( 1)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B1_LOCALIZ  = B1_LOCALIZ 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF  (@IN_MV_WMSNEW  = '1' )  or  (@IN_MV_ARQDPROD  = 'SBZ' ) 
   BEGIN 
      SELECT @BZ_LOCALIZ  = BZ_LOCALIZ 
        FROM SBZ030 
        WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' )  or  (@BZ_LOCALIZ  = '0' )  or  (@BZ_LOCALIZ  = 'N' ) 
      BEGIN 
         IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT012_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT012_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT012_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT012_18_01]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQDPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_LOCALIZ Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_LOCALIZ Char( 1)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B1_LOCALIZ  = B1_LOCALIZ 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF  (@IN_MV_WMSNEW  = '1' )  or  (@IN_MV_ARQDPROD  = 'SBZ' ) 
   BEGIN 
      SELECT @BZ_LOCALIZ  = BZ_LOCALIZ 
        FROM SBZ010 
        WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' )  or  (@BZ_LOCALIZ  = '0' )  or  (@BZ_LOCALIZ  = 'N' ) 
      BEGIN 
         IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT012_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT012_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT012_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT012_18_02]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQDPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_LOCALIZ Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_LOCALIZ Char( 1)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B1_LOCALIZ  = B1_LOCALIZ 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF  (@IN_MV_WMSNEW  = '1' )  or  (@IN_MV_ARQDPROD  = 'SBZ' ) 
   BEGIN 
      SELECT @BZ_LOCALIZ  = BZ_LOCALIZ 
        FROM SBZ030 
        WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' )  or  (@BZ_LOCALIZ  = '0' )  or  (@BZ_LOCALIZ  = 'N' ) 
      BEGIN 
         IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT012_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT012_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT012_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT012_19_01]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQDPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_LOCALIZ Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_LOCALIZ Char( 1)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B1_LOCALIZ  = B1_LOCALIZ 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF  (@IN_MV_WMSNEW  = '1' )  or  (@IN_MV_ARQDPROD  = 'SBZ' ) 
   BEGIN 
      SELECT @BZ_LOCALIZ  = BZ_LOCALIZ 
        FROM SBZ010 
        WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' )  or  (@BZ_LOCALIZ  = '0' )  or  (@BZ_LOCALIZ  = 'N' ) 
      BEGIN 
         IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT012_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT012_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT012_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT012_19_02]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQDPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @B1_LOCALIZ Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_LOCALIZ Char( 1)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B1_LOCALIZ  = B1_LOCALIZ 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF  (@IN_MV_WMSNEW  = '1' )  or  (@IN_MV_ARQDPROD  = 'SBZ' ) 
   BEGIN 
      SELECT @BZ_LOCALIZ  = BZ_LOCALIZ 
        FROM SBZ030 
        WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
      IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' )  or  (@BZ_LOCALIZ  = '0' )  or  (@BZ_LOCALIZ  = 'N' ) 
      BEGIN 
         IF  (@BZ_LOCALIZ  = '1' )  or  (@BZ_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
         BEGIN 
            SET @OUT_RESULTADO  = '1' 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = '0' 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B1_LOCALIZ  = '1' )  or  (@B1_LOCALIZ  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT013_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT013_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT013_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT013_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_LOCALIZ Char( 01 ) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SD5 Char( 2)
DECLARE @cFil_SDB Char( 2)
DECLARE @cRastro Char( 01 )
DECLARE @cLocaliza Char( 01 )
DECLARE @cD3_COD Char( 15)
DECLARE @cD3_NUMSEQ Char( 6)
DECLARE @cD3_LOCAL Char( 2)
DECLARE @cD3_LOTECTL Char( 10)
DECLARE @cD3_NUMLOTE Char( 6)
DECLARE @cD3_DOC Char( 9)
DECLARE @iD3_Recno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nContador Integer
DECLARE @dDINICIO Char( 08 )
DECLARE @cMV_PAR1 Char( 08 )
DECLARE @iTranCount Integer
BEGIN
   SET @dDINICIO  = @IN_DINICIO 
   SET @cMV_PAR1  = @IN_MV_PAR1 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SD5' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD5 output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SDB output 
   SET @nContador  = 0 
    
   -- Cursor declaration Cur_D3_ESTORNO
   DECLARE Cur_D3_ESTORNO insensitive  CURSOR FOR 
   SELECT R_E_C_N_O_ , D3_COD , D3_NUMSEQ , D3_LOCAL , D3_LOTECTL , D3_NUMLOTE , D3_DOC 
     FROM SD3010 SD3
     WHERE D3_FILIAL  = @cFil_SD3  and D3_EMISSAO  >= @dDINICIO  and D3_EMISSAO  <= @cMV_PAR1  and D3_ESTORNO  = 'S'  and SD3.D_E_L_E_T_  = ' ' 
     
    
   OPEN Cur_D3_ESTORNO
   FETCH Cur_D3_ESTORNO 
    INTO @iD3_Recno , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cRastro  = ' ' 
      SET @cAux  = ' ' 
      EXEC MAT011_19_01 @IN_MV_RASTRO , @cD3_COD , @cAux , @IN_FILIALCOR , @cRastro output 
      IF @nContador  = 1 
      BEGIN 
         SET @nContador  = @nContador 
         Begin Tran 
      END 
      IF  (@cRastro  = '1' ) 
      BEGIN 
         SET @cAux  = 'S' 
         EXEC MAT011_19_01 @IN_MV_RASTRO , @cD3_COD , @cAux , @IN_FILIALCOR , @cRastro output 
         IF  (@cRastro  = '1' ) 
         BEGIN 
            DELETE FROM SD5010  WHERE D5_FILIAL  = @cFil_SD5  and D5_NUMSEQ  = @cD3_NUMSEQ  and D5_PRODUTO  = @cD3_COD  and D5_LOCAL  = @cD3_LOCAL 
               and D5_LOTECTL  = @cD3_LOTECTL  and D5_ESTORNO  = 'S'  and D5_NUMLOTE  = @cD3_NUMLOTE  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            DELETE FROM SD5010  WHERE D5_FILIAL  = @cFil_SD5  and D5_NUMSEQ  = @cD3_NUMSEQ  and D5_PRODUTO  = @cD3_COD  and D5_LOCAL  = @cD3_LOCAL 
               and D5_LOTECTL  = @cD3_LOTECTL  and D5_ESTORNO  = 'S'  and D_E_L_E_T_  = ' ' 
         END 
      END 
      IF  (@IN_MV_LOCALIZ  = 'S' ) 
      BEGIN 
         EXEC MAT012_19_01 @cD3_COD , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @cLocaliza output 
         IF @cLocaliza  = '1' 
         BEGIN 
            DELETE FROM SDB010  WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @cD3_COD  and DB_LOCAL  = @cD3_LOCAL  and DB_NUMSEQ  = @cD3_NUMSEQ 
               and DB_DOC  = @cD3_DOC  and DB_ESTORNO  = 'S'  and D_E_L_E_T_  = ' ' 
         END 
      END 
      DELETE FROM SD3010  WHERE R_E_C_N_O_  = @iD3_Recno 
      FETCH Cur_D3_ESTORNO 
       INTO @iD3_Recno , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE Cur_D3_ESTORNO
   DEALLOCATE Cur_D3_ESTORNO
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT013_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT013_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT013_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT013_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_LOCALIZ Char( 01 ) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SD5 Char( 2)
DECLARE @cFil_SDB Char( 2)
DECLARE @cRastro Char( 01 )
DECLARE @cLocaliza Char( 01 )
DECLARE @cD3_COD Char( 15)
DECLARE @cD3_NUMSEQ Char( 6)
DECLARE @cD3_LOCAL Char( 2)
DECLARE @cD3_LOTECTL Char( 10)
DECLARE @cD3_NUMLOTE Char( 6)
DECLARE @cD3_DOC Char( 8)
DECLARE @iD3_Recno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nContador Integer
DECLARE @dDINICIO Char( 08 )
DECLARE @cMV_PAR1 Char( 08 )
DECLARE @iTranCount Integer
BEGIN
   SET @dDINICIO  = @IN_DINICIO 
   SET @cMV_PAR1  = @IN_MV_PAR1 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SD5' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD5 output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SDB output 
   SET @nContador  = 0 
    
   -- Cursor declaration Cur_D3_ESTORNO
   DECLARE Cur_D3_ESTORNO insensitive  CURSOR FOR 
   SELECT R_E_C_N_O_ , D3_COD , D3_NUMSEQ , D3_LOCAL , D3_LOTECTL , D3_NUMLOTE , D3_DOC 
     FROM SD3030 SD3
     WHERE D3_FILIAL  = @cFil_SD3  and D3_EMISSAO  >= @dDINICIO  and D3_EMISSAO  <= @cMV_PAR1  and D3_ESTORNO  = 'S'  and SD3.D_E_L_E_T_  = ' ' 
     
    
   OPEN Cur_D3_ESTORNO
   FETCH Cur_D3_ESTORNO 
    INTO @iD3_Recno , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cRastro  = ' ' 
      SET @cAux  = ' ' 
      EXEC MAT011_19_02 @IN_MV_RASTRO , @cD3_COD , @cAux , @IN_FILIALCOR , @cRastro output 
      IF @nContador  = 1 
      BEGIN 
         SET @nContador  = @nContador 
         Begin Tran 
      END 
      IF  (@cRastro  = '1' ) 
      BEGIN 
         SET @cAux  = 'S' 
         EXEC MAT011_19_02 @IN_MV_RASTRO , @cD3_COD , @cAux , @IN_FILIALCOR , @cRastro output 
         IF  (@cRastro  = '1' ) 
         BEGIN 
            DELETE FROM SD5030  WHERE D5_FILIAL  = @cFil_SD5  and D5_NUMSEQ  = @cD3_NUMSEQ  and D5_PRODUTO  = @cD3_COD  and D5_LOCAL  = @cD3_LOCAL 
               and D5_LOTECTL  = @cD3_LOTECTL  and D5_ESTORNO  = 'S'  and D5_NUMLOTE  = @cD3_NUMLOTE  and D_E_L_E_T_  = ' ' 
              
         END 
         ELSE 
         BEGIN 
            DELETE FROM SD5030  WHERE D5_FILIAL  = @cFil_SD5  and D5_NUMSEQ  = @cD3_NUMSEQ  and D5_PRODUTO  = @cD3_COD  and D5_LOCAL  = @cD3_LOCAL 
               and D5_LOTECTL  = @cD3_LOTECTL  and D5_ESTORNO  = 'S'  and D_E_L_E_T_  = ' ' 
         END 
      END 
      IF  (@IN_MV_LOCALIZ  = 'S' ) 
      BEGIN 
         EXEC MAT012_19_02 @cD3_COD , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @cLocaliza output 
         IF @cLocaliza  = '1' 
         BEGIN 
            DELETE FROM SDB030  WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @cD3_COD  and DB_LOCAL  = @cD3_LOCAL  and DB_NUMSEQ  = @cD3_NUMSEQ 
               and DB_DOC  = @cD3_DOC  and DB_ESTORNO  = 'S'  and D_E_L_E_T_  = ' ' 
         END 
      END 
      DELETE FROM SD3030  WHERE R_E_C_N_O_  = @iD3_Recno 
      FETCH Cur_D3_ESTORNO 
       INTO @iD3_Recno , @cD3_COD , @cD3_NUMSEQ , @cD3_LOCAL , @cD3_LOTECTL , @cD3_NUMLOTE , @cD3_DOC 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE Cur_D3_ESTORNO
   DEALLOCATE Cur_D3_ESTORNO
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT016_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT016_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT016_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT016_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cDATA VarChar( 08 )
DECLARE @cOP VarChar( 14)
DECLARE @cCOD VarChar( 15)
DECLARE @cFil VarChar( 2)
DECLARE @vQuant Float
DECLARE @vPerda Float
BEGIN
    
   -- Cursor declaration TRX_Cursor
   DECLARE TRX_Cursor insensitive  CURSOR FOR 
   SELECT TRX_FILIAL , TRX_DATA , TRX_OP , TRX_COD , COALESCE ( SUM(TRX_QUANT ), 0 ) QUANT , COALESCE ( SUM(TRX_QPERDA ), 
          0 ) PERDA 
     FROM TRX01SP 
     WHERE TRX_FILIAL  = @IN_FILIALCOR 
     GROUP BY TRX_FILIAL , TRX_DATA , TRX_OP , TRX_COD 
    
   OPEN TRX_Cursor
   FETCH TRX_Cursor 
    INTO @cFil , @cDATA , @cOP , @cCOD , @vQuant , @vPerda 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      UPDATE TRX01SP 
        WITH (ROWLOCK) 
         SET TRX_TOTAL  = @vQuant , TRX_TPERDA  = @vPerda 
       WHERE TRX_FILIAL  = @cFil  and TRX_DATA  = @cDATA  and TRX_OP  = @cOP  and TRX_COD  = @cCOD 
      FETCH TRX_Cursor 
       INTO @cFil , @cDATA , @cOP , @cCOD , @vQuant , @vPerda 
   END 
   CLOSE TRX_Cursor
   DEALLOCATE TRX_Cursor
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT016_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT016_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT016_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT016_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cDATA VarChar( 08 )
DECLARE @cOP VarChar( 14)
DECLARE @cCOD VarChar( 15)
DECLARE @cFil VarChar( 2)
DECLARE @vQuant Float
DECLARE @vPerda Float
BEGIN
    
   -- Cursor declaration TRX_Cursor
   DECLARE TRX_Cursor insensitive  CURSOR FOR 
   SELECT TRX_FILIAL , TRX_DATA , TRX_OP , TRX_COD , COALESCE ( SUM(TRX_QUANT ), 0 ) QUANT , COALESCE ( SUM(TRX_QPERDA ), 
          0 ) PERDA 
     FROM TRX02SP 
     WHERE TRX_FILIAL  = @IN_FILIALCOR 
     GROUP BY TRX_FILIAL , TRX_DATA , TRX_OP , TRX_COD 
    
   OPEN TRX_Cursor
   FETCH TRX_Cursor 
    INTO @cFil , @cDATA , @cOP , @cCOD , @vQuant , @vPerda 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      UPDATE TRX02SP 
        WITH (ROWLOCK) 
         SET TRX_TOTAL  = @vQuant , TRX_TPERDA  = @vPerda 
       WHERE TRX_FILIAL  = @cFil  and TRX_DATA  = @cDATA  and TRX_OP  = @cOP  and TRX_COD  = @cCOD 
      FETCH TRX_Cursor 
       INTO @cFil , @cDATA , @cOP , @cCOD , @vQuant , @vPerda 
   END 
   CLOSE TRX_Cursor
   DEALLOCATE TRX_Cursor
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT018_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT018_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT018_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT018_17_01]
(
    @IN_CCOD Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_NQTD1 Float , 
    @IN_NQTD2 Float , 
    @IN_NUNID Float , 
    @OUT_RESULTADO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilialSB1 Char( 2)
DECLARE @vB1_Conv Float
DECLARE @vB1_TipConv Char( 01 )
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_RESULTADO  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFilialSB1 output 
   SELECT @vB1_Conv  = B1_CONV , @vB1_TipConv  = B1_TIPCONV 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFilialSB1  and B1_COD  = @IN_CCOD  and D_E_L_E_T_  = ' ' 
   IF @vB1_Conv  <> 0 
   BEGIN 
      IF @vB1_TipConv  = 'D' 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  * @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  / @vB1_Conv 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  / @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  * @vB1_Conv 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = @IN_NQTD2 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT018_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT018_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT018_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT018_17_02]
(
    @IN_CCOD Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_NQTD1 Float , 
    @IN_NQTD2 Float , 
    @IN_NUNID Float , 
    @OUT_RESULTADO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilialSB1 Char( 2)
DECLARE @vB1_Conv Float
DECLARE @vB1_TipConv Char( 01 )
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_RESULTADO  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFilialSB1 output 
   SELECT @vB1_Conv  = B1_CONV , @vB1_TipConv  = B1_TIPCONV 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFilialSB1  and B1_COD  = @IN_CCOD  and D_E_L_E_T_  = ' ' 
   IF @vB1_Conv  <> 0 
   BEGIN 
      IF @vB1_TipConv  = 'D' 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  * @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  / @vB1_Conv 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  / @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  * @vB1_Conv 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = @IN_NQTD2 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT018_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT018_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT018_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT018_18_01]
(
    @IN_CCOD Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_NQTD1 Float , 
    @IN_NQTD2 Float , 
    @IN_NUNID Float , 
    @OUT_RESULTADO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilialSB1 Char( 2)
DECLARE @vB1_Conv Float
DECLARE @vB1_TipConv Char( 01 )
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_RESULTADO  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFilialSB1 output 
   SELECT @vB1_Conv  = B1_CONV , @vB1_TipConv  = B1_TIPCONV 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFilialSB1  and B1_COD  = @IN_CCOD  and D_E_L_E_T_  = ' ' 
   IF @vB1_Conv  <> 0 
   BEGIN 
      IF @vB1_TipConv  = 'D' 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  * @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  / @vB1_Conv 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  / @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  * @vB1_Conv 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = @IN_NQTD2 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT018_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT018_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT018_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT018_18_02]
(
    @IN_CCOD Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_NQTD1 Float , 
    @IN_NQTD2 Float , 
    @IN_NUNID Float , 
    @OUT_RESULTADO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilialSB1 Char( 2)
DECLARE @vB1_Conv Float
DECLARE @vB1_TipConv Char( 01 )
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_RESULTADO  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFilialSB1 output 
   SELECT @vB1_Conv  = B1_CONV , @vB1_TipConv  = B1_TIPCONV 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFilialSB1  and B1_COD  = @IN_CCOD  and D_E_L_E_T_  = ' ' 
   IF @vB1_Conv  <> 0 
   BEGIN 
      IF @vB1_TipConv  = 'D' 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  * @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  / @vB1_Conv 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  / @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  * @vB1_Conv 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = @IN_NQTD2 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT018_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT018_21_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT018_21_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT018_21_01]
(
    @IN_CCOD Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_NQTD1 Float , 
    @IN_NQTD2 Float , 
    @IN_NUNID Float , 
    @OUT_RESULTADO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilialSB1 Char( 2)
DECLARE @vB1_Conv Float
DECLARE @vB1_TipConv Char( 01 )
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_RESULTADO  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_21_01 @cAux , @IN_FILIALCOR , @cFilialSB1 output 
   SELECT @vB1_Conv  = B1_CONV , @vB1_TipConv  = B1_TIPCONV 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFilialSB1  and B1_COD  = @IN_CCOD  and D_E_L_E_T_  = ' ' 
   IF @vB1_Conv  <> 0 
   BEGIN 
      IF @vB1_TipConv  = 'D' 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  * @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  / @vB1_Conv 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  / @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  * @vB1_Conv 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = @IN_NQTD2 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT018_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT018_21_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT018_21_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT018_21_02]
(
    @IN_CCOD Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_NQTD1 Float , 
    @IN_NQTD2 Float , 
    @IN_NUNID Float , 
    @OUT_RESULTADO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilialSB1 Char( 2)
DECLARE @vB1_Conv Float
DECLARE @vB1_TipConv Char( 01 )
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @OUT_RESULTADO  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_21_02 @cAux , @IN_FILIALCOR , @cFilialSB1 output 
   SELECT @vB1_Conv  = B1_CONV , @vB1_TipConv  = B1_TIPCONV 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFilialSB1  and B1_COD  = @IN_CCOD  and D_E_L_E_T_  = ' ' 
   IF @vB1_Conv  <> 0 
   BEGIN 
      IF @vB1_TipConv  = 'D' 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  * @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  / @vB1_Conv 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_NUNID  = 1 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD2  / @vB1_Conv 
         END 
         ELSE 
         BEGIN 
            SET @OUT_RESULTADO  = @IN_NQTD1  * @vB1_Conv 
         END 
      END 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = @IN_NQTD2 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT020_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT020_08_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT020_08_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT020_08_01]
(
    @IN_DATA Char( 08 ) , 
    @IN_MOEDA Float , 
    @OUT_TAXA Float  output ) AS
 
-- Declaration of variables
DECLARE @DataAnt DateTime
DECLARE @TaxaM2 Float
DECLARE @TaxaM3 Float
DECLARE @TaxaM4 Float
DECLARE @TaxaM5 Float
BEGIN
   IF @IN_MOEDA is null  or @IN_MOEDA  = 0 
   BEGIN 
      SET @OUT_TAXA  = 1 
   END 
   ELSE 
   BEGIN 
      SELECT @TaxaM2  = M2_MOEDA2 , @TaxaM3  = M2_MOEDA3 , @TaxaM4  = M2_MOEDA4 , @TaxaM5  = M2_MOEDA5 
        FROM SM2010 
        WHERE M2_DATA  = (
      SELECT MAX ( SUBSTRING ( M2_DATA , 1 , 8 ))
        FROM SM2010 
        WHERE M2_DATA  <= @IN_DATA  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      SET @OUT_TAXA  = 1 
      IF @IN_MOEDA  = 2 
      BEGIN 
         SET @OUT_TAXA  = @TaxaM2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MOEDA  = 3 
         BEGIN 
            SET @OUT_TAXA  = @TaxaM3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MOEDA  = 4 
            BEGIN 
               SET @OUT_TAXA  = @TaxaM4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MOEDA  = 5 
               BEGIN 
                  SET @OUT_TAXA  = @TaxaM5 
               END 
            END 
         END 
      END 
      IF @OUT_TAXA is null 
      BEGIN 
         SET @OUT_TAXA  = 1 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT020_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT020_08_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT020_08_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT020_08_02]
(
    @IN_DATA Char( 08 ) , 
    @IN_MOEDA Float , 
    @OUT_TAXA Float  output ) AS
 
-- Declaration of variables
DECLARE @DataAnt DateTime
DECLARE @TaxaM2 Float
DECLARE @TaxaM3 Float
DECLARE @TaxaM4 Float
DECLARE @TaxaM5 Float
BEGIN
   IF @IN_MOEDA is null  or @IN_MOEDA  = 0 
   BEGIN 
      SET @OUT_TAXA  = 1 
   END 
   ELSE 
   BEGIN 
      SELECT @TaxaM2  = M2_MOEDA2 , @TaxaM3  = M2_MOEDA3 , @TaxaM4  = M2_MOEDA4 , @TaxaM5  = M2_MOEDA5 
        FROM SM2030 
        WHERE M2_DATA  = (
      SELECT MAX ( SUBSTRING ( M2_DATA , 1 , 8 ))
        FROM SM2030 
        WHERE M2_DATA  <= @IN_DATA  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      SET @OUT_TAXA  = 1 
      IF @IN_MOEDA  = 2 
      BEGIN 
         SET @OUT_TAXA  = @TaxaM2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MOEDA  = 3 
         BEGIN 
            SET @OUT_TAXA  = @TaxaM3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MOEDA  = 4 
            BEGIN 
               SET @OUT_TAXA  = @TaxaM4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MOEDA  = 5 
               BEGIN 
                  SET @OUT_TAXA  = @TaxaM5 
               END 
            END 
         END 
      END 
      IF @OUT_TAXA is null 
      BEGIN 
         SET @OUT_TAXA  = 1 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT020_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT020_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT020_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT020_09_01]
(
    @IN_DATA Char( 08 ) , 
    @IN_MOEDA Float , 
    @OUT_TAXA Float  output ) AS
 
-- Declaration of variables
DECLARE @DataAnt DateTime
DECLARE @TaxaM2 Float
DECLARE @TaxaM3 Float
DECLARE @TaxaM4 Float
DECLARE @TaxaM5 Float
BEGIN
   IF @IN_MOEDA is null  or @IN_MOEDA  = 0 
   BEGIN 
      SET @OUT_TAXA  = 1 
   END 
   ELSE 
   BEGIN 
      SELECT @TaxaM2  = M2_MOEDA2 , @TaxaM3  = M2_MOEDA3 , @TaxaM4  = M2_MOEDA4 , @TaxaM5  = M2_MOEDA5 
        FROM SM2010 
        WHERE M2_DATA  = (
      SELECT MAX ( SUBSTRING ( M2_DATA , 1 , 8 ))
        FROM SM2010 
        WHERE M2_DATA  <= @IN_DATA  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      SET @OUT_TAXA  = 1 
      IF @IN_MOEDA  = 2 
      BEGIN 
         SET @OUT_TAXA  = @TaxaM2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MOEDA  = 3 
         BEGIN 
            SET @OUT_TAXA  = @TaxaM3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MOEDA  = 4 
            BEGIN 
               SET @OUT_TAXA  = @TaxaM4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MOEDA  = 5 
               BEGIN 
                  SET @OUT_TAXA  = @TaxaM5 
               END 
            END 
         END 
      END 
      IF @OUT_TAXA is null 
      BEGIN 
         SET @OUT_TAXA  = 1 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT020_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT020_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT020_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT020_09_02]
(
    @IN_DATA Char( 08 ) , 
    @IN_MOEDA Float , 
    @OUT_TAXA Float  output ) AS
 
-- Declaration of variables
DECLARE @DataAnt DateTime
DECLARE @TaxaM2 Float
DECLARE @TaxaM3 Float
DECLARE @TaxaM4 Float
DECLARE @TaxaM5 Float
BEGIN
   IF @IN_MOEDA is null  or @IN_MOEDA  = 0 
   BEGIN 
      SET @OUT_TAXA  = 1 
   END 
   ELSE 
   BEGIN 
      SELECT @TaxaM2  = M2_MOEDA2 , @TaxaM3  = M2_MOEDA3 , @TaxaM4  = M2_MOEDA4 , @TaxaM5  = M2_MOEDA5 
        FROM SM2030 
        WHERE M2_DATA  = (
      SELECT MAX ( SUBSTRING ( M2_DATA , 1 , 8 ))
        FROM SM2030 
        WHERE M2_DATA  <= @IN_DATA  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      SET @OUT_TAXA  = 1 
      IF @IN_MOEDA  = 2 
      BEGIN 
         SET @OUT_TAXA  = @TaxaM2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MOEDA  = 3 
         BEGIN 
            SET @OUT_TAXA  = @TaxaM3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MOEDA  = 4 
            BEGIN 
               SET @OUT_TAXA  = @TaxaM4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MOEDA  = 5 
               BEGIN 
                  SET @OUT_TAXA  = @TaxaM5 
               END 
            END 
         END 
      END 
      IF @OUT_TAXA is null 
      BEGIN 
         SET @OUT_TAXA  = 1 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT020_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT020_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT020_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT020_10_01]
(
    @IN_DATA Char( 08 ) , 
    @IN_MOEDA Float , 
    @OUT_TAXA Float  output ) AS
 
-- Declaration of variables
DECLARE @DataAnt DateTime
DECLARE @TaxaM2 Float
DECLARE @TaxaM3 Float
DECLARE @TaxaM4 Float
DECLARE @TaxaM5 Float
BEGIN
   IF @IN_MOEDA is null  or @IN_MOEDA  = 0 
   BEGIN 
      SET @OUT_TAXA  = 1 
   END 
   ELSE 
   BEGIN 
      SELECT @TaxaM2  = M2_MOEDA2 , @TaxaM3  = M2_MOEDA3 , @TaxaM4  = M2_MOEDA4 , @TaxaM5  = M2_MOEDA5 
        FROM SM2010 
        WHERE M2_DATA  = (
      SELECT MAX ( SUBSTRING ( M2_DATA , 1 , 8 ))
        FROM SM2010 
        WHERE M2_DATA  <= @IN_DATA  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      SET @OUT_TAXA  = 1 
      IF @IN_MOEDA  = 2 
      BEGIN 
         SET @OUT_TAXA  = @TaxaM2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MOEDA  = 3 
         BEGIN 
            SET @OUT_TAXA  = @TaxaM3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MOEDA  = 4 
            BEGIN 
               SET @OUT_TAXA  = @TaxaM4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MOEDA  = 5 
               BEGIN 
                  SET @OUT_TAXA  = @TaxaM5 
               END 
            END 
         END 
      END 
      IF @OUT_TAXA is null 
      BEGIN 
         SET @OUT_TAXA  = 1 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT020_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT020_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT020_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT020_10_02]
(
    @IN_DATA Char( 08 ) , 
    @IN_MOEDA Float , 
    @OUT_TAXA Float  output ) AS
 
-- Declaration of variables
DECLARE @DataAnt DateTime
DECLARE @TaxaM2 Float
DECLARE @TaxaM3 Float
DECLARE @TaxaM4 Float
DECLARE @TaxaM5 Float
BEGIN
   IF @IN_MOEDA is null  or @IN_MOEDA  = 0 
   BEGIN 
      SET @OUT_TAXA  = 1 
   END 
   ELSE 
   BEGIN 
      SELECT @TaxaM2  = M2_MOEDA2 , @TaxaM3  = M2_MOEDA3 , @TaxaM4  = M2_MOEDA4 , @TaxaM5  = M2_MOEDA5 
        FROM SM2030 
        WHERE M2_DATA  = (
      SELECT MAX ( SUBSTRING ( M2_DATA , 1 , 8 ))
        FROM SM2030 
        WHERE M2_DATA  <= @IN_DATA  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      SET @OUT_TAXA  = 1 
      IF @IN_MOEDA  = 2 
      BEGIN 
         SET @OUT_TAXA  = @TaxaM2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MOEDA  = 3 
         BEGIN 
            SET @OUT_TAXA  = @TaxaM3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MOEDA  = 4 
            BEGIN 
               SET @OUT_TAXA  = @TaxaM4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MOEDA  = 5 
               BEGIN 
                  SET @OUT_TAXA  = @TaxaM5 
               END 
            END 
         END 
      END 
      IF @OUT_TAXA is null 
      BEGIN 
         SET @OUT_TAXA  = 1 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT021_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT021_08_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT021_08_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT021_08_01]
(
    @IN_VALOR Float , 
    @IN_DATA Char( 08 ) , 
    @IN_MOEDAO Float , 
    @IN_MOEDAD Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxa Float
DECLARE @nMoedaO Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nTaxa  = 0 
   IF @IN_MOEDAO  = @IN_MOEDAD 
   BEGIN 
      SET @OUT_VALOR  = @IN_VALOR 
   END 
   ELSE 
   BEGIN 
      SET @nMoedaO  = @IN_MOEDAO 
      IF  (@nMoedaO is null )  or  (@nMoedaO  = 0 ) 
      BEGIN 
         SET @nMoedaO  = 1 
      END 
      IF @nMoedaO  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_08_01 @IN_DATA , @nMoedaO , @nTaxa output 
      END 
      SET @OUT_VALOR  =  (@IN_VALOR  * @nTaxa ) 
      SET @nTaxa  = Null 
      IF @IN_MOEDAD  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_08_01 @IN_DATA , @IN_MOEDAD , @nTaxa output 
      END 
      IF @nTaxa  = 0 
      BEGIN 
         SET @OUT_VALOR  = 0 
      END 
      ELSE 
      BEGIN 
         SET @OUT_VALOR  =  (@OUT_VALOR  / @nTaxa ) 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT021_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT021_08_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT021_08_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT021_08_02]
(
    @IN_VALOR Float , 
    @IN_DATA Char( 08 ) , 
    @IN_MOEDAO Float , 
    @IN_MOEDAD Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxa Float
DECLARE @nMoedaO Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nTaxa  = 0 
   IF @IN_MOEDAO  = @IN_MOEDAD 
   BEGIN 
      SET @OUT_VALOR  = @IN_VALOR 
   END 
   ELSE 
   BEGIN 
      SET @nMoedaO  = @IN_MOEDAO 
      IF  (@nMoedaO is null )  or  (@nMoedaO  = 0 ) 
      BEGIN 
         SET @nMoedaO  = 1 
      END 
      IF @nMoedaO  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_08_02 @IN_DATA , @nMoedaO , @nTaxa output 
      END 
      SET @OUT_VALOR  =  (@IN_VALOR  * @nTaxa ) 
      SET @nTaxa  = Null 
      IF @IN_MOEDAD  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_08_02 @IN_DATA , @IN_MOEDAD , @nTaxa output 
      END 
      IF @nTaxa  = 0 
      BEGIN 
         SET @OUT_VALOR  = 0 
      END 
      ELSE 
      BEGIN 
         SET @OUT_VALOR  =  (@OUT_VALOR  / @nTaxa ) 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT021_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT021_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT021_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT021_09_01]
(
    @IN_VALOR Float , 
    @IN_DATA Char( 08 ) , 
    @IN_MOEDAO Float , 
    @IN_MOEDAD Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxa Float
DECLARE @nMoedaO Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nTaxa  = 0 
   IF @IN_MOEDAO  = @IN_MOEDAD 
   BEGIN 
      SET @OUT_VALOR  = @IN_VALOR 
   END 
   ELSE 
   BEGIN 
      SET @nMoedaO  = @IN_MOEDAO 
      IF  (@nMoedaO is null )  or  (@nMoedaO  = 0 ) 
      BEGIN 
         SET @nMoedaO  = 1 
      END 
      IF @nMoedaO  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_09_01 @IN_DATA , @nMoedaO , @nTaxa output 
      END 
      SET @OUT_VALOR  =  (@IN_VALOR  * @nTaxa ) 
      SET @nTaxa  = Null 
      IF @IN_MOEDAD  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_09_01 @IN_DATA , @IN_MOEDAD , @nTaxa output 
      END 
      IF @nTaxa  = 0 
      BEGIN 
         SET @OUT_VALOR  = 0 
      END 
      ELSE 
      BEGIN 
         SET @OUT_VALOR  =  (@OUT_VALOR  / @nTaxa ) 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT021_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT021_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT021_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT021_09_02]
(
    @IN_VALOR Float , 
    @IN_DATA Char( 08 ) , 
    @IN_MOEDAO Float , 
    @IN_MOEDAD Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxa Float
DECLARE @nMoedaO Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nTaxa  = 0 
   IF @IN_MOEDAO  = @IN_MOEDAD 
   BEGIN 
      SET @OUT_VALOR  = @IN_VALOR 
   END 
   ELSE 
   BEGIN 
      SET @nMoedaO  = @IN_MOEDAO 
      IF  (@nMoedaO is null )  or  (@nMoedaO  = 0 ) 
      BEGIN 
         SET @nMoedaO  = 1 
      END 
      IF @nMoedaO  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_09_02 @IN_DATA , @nMoedaO , @nTaxa output 
      END 
      SET @OUT_VALOR  =  (@IN_VALOR  * @nTaxa ) 
      SET @nTaxa  = Null 
      IF @IN_MOEDAD  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_09_02 @IN_DATA , @IN_MOEDAD , @nTaxa output 
      END 
      IF @nTaxa  = 0 
      BEGIN 
         SET @OUT_VALOR  = 0 
      END 
      ELSE 
      BEGIN 
         SET @OUT_VALOR  =  (@OUT_VALOR  / @nTaxa ) 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT021_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT021_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT021_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT021_10_01]
(
    @IN_VALOR Float , 
    @IN_DATA Char( 08 ) , 
    @IN_MOEDAO Float , 
    @IN_MOEDAD Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxa Float
DECLARE @nMoedaO Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nTaxa  = 0 
   IF @IN_MOEDAO  = @IN_MOEDAD 
   BEGIN 
      SET @OUT_VALOR  = @IN_VALOR 
   END 
   ELSE 
   BEGIN 
      SET @nMoedaO  = @IN_MOEDAO 
      IF  (@nMoedaO is null )  or  (@nMoedaO  = 0 ) 
      BEGIN 
         SET @nMoedaO  = 1 
      END 
      IF @nMoedaO  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_10_01 @IN_DATA , @nMoedaO , @nTaxa output 
      END 
      SET @OUT_VALOR  =  (@IN_VALOR  * @nTaxa ) 
      SET @nTaxa  = Null 
      IF @IN_MOEDAD  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_10_01 @IN_DATA , @IN_MOEDAD , @nTaxa output 
      END 
      IF @nTaxa  = 0 
      BEGIN 
         SET @OUT_VALOR  = 0 
      END 
      ELSE 
      BEGIN 
         SET @OUT_VALOR  =  (@OUT_VALOR  / @nTaxa ) 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT021_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT021_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT021_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT021_10_02]
(
    @IN_VALOR Float , 
    @IN_DATA Char( 08 ) , 
    @IN_MOEDAO Float , 
    @IN_MOEDAD Float , 
    @OUT_VALOR Float  output ) AS
 
-- Declaration of variables
DECLARE @nTaxa Float
DECLARE @nMoedaO Float
BEGIN
   SET @OUT_VALOR  = 0 
   SET @nTaxa  = 0 
   IF @IN_MOEDAO  = @IN_MOEDAD 
   BEGIN 
      SET @OUT_VALOR  = @IN_VALOR 
   END 
   ELSE 
   BEGIN 
      SET @nMoedaO  = @IN_MOEDAO 
      IF  (@nMoedaO is null )  or  (@nMoedaO  = 0 ) 
      BEGIN 
         SET @nMoedaO  = 1 
      END 
      IF @nMoedaO  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_10_02 @IN_DATA , @nMoedaO , @nTaxa output 
      END 
      SET @OUT_VALOR  =  (@IN_VALOR  * @nTaxa ) 
      SET @nTaxa  = Null 
      IF @IN_MOEDAD  = 1 
      BEGIN 
         SET @nTaxa  = 1 
      END 
      ELSE 
      BEGIN 
         EXEC MAT020_10_02 @IN_DATA , @IN_MOEDAD , @nTaxa output 
      END 
      IF @nTaxa  = 0 
      BEGIN 
         SET @OUT_VALOR  = 0 
      END 
      ELSE 
      BEGIN 
         SET @OUT_VALOR  =  (@OUT_VALOR  / @nTaxa ) 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT025_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT025_15_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT025_15_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT025_15_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CPRODUTO Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @OUT_RESULTADO Integer  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @nContador Integer
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SELECT @nContador  = COALESCE ( R_E_C_N_O_ , 0 )
     FROM SB2010 
     WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CPRODUTO  and B2_LOCAL  = @IN_CLOCAL  and D_E_L_E_T_  = ' ' 
   IF  (@nContador  = 0 ) 
   BEGIN 
      SELECT @nContador  = MAX ( R_E_C_N_O_ )
        FROM SB2010 
      IF @nContador is null 
      BEGIN 
         SET @nContador  = 0 
      END 
      SET @nContador  = @nContador  + 1 
      begin tran 
      INSERT INTO SB2010 (B2_FILIAL , B2_COD , B2_LOCAL , R_E_C_N_O_ ) 
      VALUES (@cFil_SB2 , @IN_CPRODUTO , @IN_CLOCAL , @nContador );
      Commit Tran 
   END 
   SET @OUT_RESULTADO  = @nContador 
END
GO

GO
--SqlScripter----[dbo].[MAT025_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT025_15_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT025_15_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT025_15_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CPRODUTO Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @OUT_RESULTADO Integer  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @nContador Integer
DECLARE @cAux VarChar( 3 )
BEGIN
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SELECT @nContador  = COALESCE ( R_E_C_N_O_ , 0 )
     FROM SB2030 
     WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CPRODUTO  and B2_LOCAL  = @IN_CLOCAL  and D_E_L_E_T_  = ' ' 
   IF  (@nContador  = 0 ) 
   BEGIN 
      SELECT @nContador  = MAX ( R_E_C_N_O_ )
        FROM SB2030 
      IF @nContador is null 
      BEGIN 
         SET @nContador  = 0 
      END 
      SET @nContador  = @nContador  + 1 
      begin tran 
      INSERT INTO SB2030 (B2_FILIAL , B2_COD , B2_LOCAL , R_E_C_N_O_ ) 
      VALUES (@cFil_SB2 , @IN_CPRODUTO , @IN_CLOCAL , @nContador );
      Commit Tran 
   END 
   SET @OUT_RESULTADO  = @nContador 
END
GO

GO
--SqlScripter----[dbo].[MAT026_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT026_21_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT026_21_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT026_21_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_USUARIO Char( 08 ) , 
    @IN_DDATABASE Char( 08 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cCod Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @nRecno Integer
DECLARE @nFatorConv Float
DECLARE @nQSALDOATU Float
DECLARE @nCUSTOATU Float
DECLARE @nCUSTOATU2 Float
DECLARE @nCUSTOATU3 Float
DECLARE @nCUSTOATU4 Float
DECLARE @nCUSTOATU5 Float
DECLARE @nQTSEGUM Float
DECLARE @nB2_VATU1 Float
DECLARE @nB2_VATU2 Float
DECLARE @nB2_VATU3 Float
DECLARE @nB2_VATU4 Float
DECLARE @nB2_VATU5 Float
DECLARE @cFil_SB1 VarChar( 2)
DECLARE @cFil_SB2 VarChar( 2)
DECLARE @cFil_SC2 VarChar( 2)
DECLARE @cFil_AF9 VarChar( 2)
DECLARE @nRec Integer
DECLARE @nRecAnt Integer
DECLARE @nMaxRecnoSC2 Integer
DECLARE @nMaxRecnoAF9 Integer
DECLARE @nContador Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nAux1 Integer
DECLARE @iTranCount Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cCod  = ' ' 
   SET @cLocal  = ' ' 
   SET @nRecno  = 0 
   SET @nFatorConv  = 0 
   SET @nQSALDOATU  = 0 
   SET @nCUSTOATU  = 0 
   SET @nCUSTOATU2  = 0 
   SET @nCUSTOATU3  = 0 
   SET @nCUSTOATU4  = 0 
   SET @nCUSTOATU5  = 0 
   SET @nQTSEGUM  = 0 
   SET @nB2_VATU1  = 0 
   SET @nB2_VATU2  = 0 
   SET @nB2_VATU3  = 0 
   SET @nB2_VATU4  = 0 
   SET @nB2_VATU5  = 0 
   SET @nContador  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_21_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_21_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_21_01 @cAux , @IN_FILIALCOR , @cFil_SC2 output 
   SET @cAux  = 'AF9' 
   EXEC XFILIAL_21_01 @cAux , @IN_FILIALCOR , @cFil_AF9 output 
    
   -- Cursor declaration CUR_A350INI
   DECLARE CUR_A350INI INSENSITIVE  CURSOR FOR 
   SELECT SB2.B2_COD , SB2.B2_LOCAL , SB2.B2_QATU , SB2.B2_QTSEGUM , SB2.B2_CM1 , SB2.B2_CM2 , SB2.B2_CM3 , SB2.B2_CM4 , 
          SB2.B2_CM5 , SB2.B2_VATU1 , SB2.B2_VATU2 , SB2.B2_VATU3 , SB2.B2_VATU4 , SB2.B2_VATU5 , SB2.R_E_C_N_O_ , SB1.B1_CONV 
     FROM SB2010 SB2, SB1010 SB1
     WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SB2.B2_COD  and SB2.B2_COD NOT like 'MOD%'  and SB2.D_E_L_E_T_  = ' ' 
      and SB1.D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_A350INI
   FETCH CUR_A350INI 
    INTO @cCod , @cLocal , @nQSALDOATU , @nQTSEGUM , @nCUSTOATU , @nCUSTOATU2 , @nCUSTOATU3 , @nCUSTOATU4 , @nCUSTOATU5 , 
          @nB2_VATU1 , @nB2_VATU2 , @nB2_VATU3 , @nB2_VATU4 , @nB2_VATU5 , @nRecno , @nFatorConv 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF  (@nFatorConv  <> 0 ) 
      BEGIN 
         SET @nAux  = 0 
         SET @nAux1  = 2 
         EXEC MAT018_21_01 @cCod , @IN_FILIALCOR , @nQSALDOATU , @nAux , @nAux1 , @nQTSEGUM output 
      END 
      IF @nContador  = 1 
      BEGIN 
         begin tran 
         SET @nContador  = @nContador 
      END 
      IF  (@nQSALDOATU  <> 0 ) 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_QFIM  = @nQSALDOATU , B2_QFIM2  = @nQTSEGUM , B2_VFIM1  = @nB2_VATU1 , B2_VFIM2  = @nB2_VATU2 , B2_VFIM3  = @nB2_VATU3 
           , B2_VFIM4  = @nB2_VATU4 , B2_VFIM5  = @nB2_VATU5 , B2_CM1  =  (@nB2_VATU1  / @nQSALDOATU ) , B2_CM2  =  (@nB2_VATU2  / @nQSALDOATU 
           ) , B2_CM3  =  (@nB2_VATU3  / @nQSALDOATU ) , B2_CM4  =  (@nB2_VATU4  / @nQSALDOATU ) , B2_CM5  =  (@nB2_VATU5  / @nQSALDOATU 
           ) 
          WHERE R_E_C_N_O_  = @nRecno 
      END 
      ELSE 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_QFIM  = @nQSALDOATU , B2_QFIM2  = @nQTSEGUM , B2_VFIM1  = @nB2_VATU1 , B2_VFIM2  = @nB2_VATU2 , B2_VFIM3  = @nB2_VATU3 
           , B2_VFIM4  = @nB2_VATU4 , B2_VFIM5  = @nB2_VATU5 
          WHERE R_E_C_N_O_  = @nRecno 
      END 
      FETCH CUR_A350INI 
       INTO @cCod , @cLocal , @nQSALDOATU , @nQTSEGUM , @nCUSTOATU , @nCUSTOATU2 , @nCUSTOATU3 , @nCUSTOATU4 , @nCUSTOATU5 , 
             @nB2_VATU1 , @nB2_VATU2 , @nB2_VATU3 , @nB2_VATU4 , @nB2_VATU5 , @nRecno , @nFatorConv 
      IF  (@nContador  > 1023 ) 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF  (@nContador  <> 0 ) 
   BEGIN 
      SET @nContador  = 0 
       Commit Transaction  
   END 
   CLOSE CUR_A350INI
   DEALLOCATE CUR_A350INI
   SET @nRec  = 0 
   SET @nRecAnt  = 0 
   SET @nMaxRecnoSC2  = 0 
   SET @nContador  = 0 
   SELECT @nMaxRecnoSC2  = MAX ( R_E_C_N_O_ )
     FROM SC2010 SC2
     WHERE C2_FILIAL  = @cFil_SC2 
   IF @nMaxRecnoSC2 is null 
   BEGIN 
      SET @nMaxRecnoSC2  = 0 
   END 
   SET @nRec  = 0 
   WHILE (@nRec  <= @nMaxRecnoSC2 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nRecAnt  = @nRec 
      SET @nRec  = @nRec  + 1024 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VFIM1  = C2_VATU1 , C2_VFIM2  = C2_VATU2 , C2_VFIM3  = C2_VATU3 , C2_VFIM4  = C2_VATU4 , C2_VFIM5  = C2_VATU5 
        , C2_APRFIM1  = C2_APRATU1 , C2_APRFIM2  = C2_APRATU2 , C2_APRFIM3  = C2_APRATU3 , C2_APRFIM4  = C2_APRATU4 , C2_APRFIM5  = C2_APRATU5 
        
       WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and C2_FILIAL  = @cFil_SC2 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nRec  = 0 
   SET @nRecAnt  = 0 
   SET @nMaxRecnoAF9  = 0 
   SET @nContador  = 0 
   SELECT @nMaxRecnoAF9  = MAX ( R_E_C_N_O_ )
     FROM AF9010 AF9
     WHERE AF9_FILIAL  = @cFil_AF9 
   IF @nMaxRecnoAF9 is null 
   BEGIN 
      SET @nMaxRecnoAF9  = 0 
   END 
   SET @nRec  = 0 
   WHILE (@nRec  <= @nMaxRecnoAF9 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nRecAnt  = @nRec 
      SET @nRec  = @nRec  + 1024 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      UPDATE AF9010 
        WITH (ROWLOCK) 
         SET AF9_VFIM1  = AF9_VATU1 , AF9_VFIM2  = AF9_VATU2 , AF9_VFIM3  = AF9_VATU3 , AF9_VFIM4  = AF9_VATU4 , AF9_VFIM5  = AF9_VATU5 
        
       WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and AF9_FILIAL  = @cFil_AF9 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT026_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT026_21_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT026_21_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT026_21_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_USUARIO Char( 08 ) , 
    @IN_DDATABASE Char( 08 ) , 
    @OUT_RESULT Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cCod Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @nRecno Integer
DECLARE @nFatorConv Float
DECLARE @nQSALDOATU Float
DECLARE @nCUSTOATU Float
DECLARE @nCUSTOATU2 Float
DECLARE @nCUSTOATU3 Float
DECLARE @nCUSTOATU4 Float
DECLARE @nCUSTOATU5 Float
DECLARE @nQTSEGUM Float
DECLARE @nB2_VATU1 Float
DECLARE @nB2_VATU2 Float
DECLARE @nB2_VATU3 Float
DECLARE @nB2_VATU4 Float
DECLARE @nB2_VATU5 Float
DECLARE @cFil_SB1 VarChar( 2)
DECLARE @cFil_SB2 VarChar( 2)
DECLARE @cFil_SC2 VarChar( 2)
DECLARE @cFil_AF9 VarChar( 2)
DECLARE @nRec Integer
DECLARE @nRecAnt Integer
DECLARE @nMaxRecnoSC2 Integer
DECLARE @nMaxRecnoAF9 Integer
DECLARE @nContador Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nAux1 Integer
DECLARE @iTranCount Integer
BEGIN
   SET @OUT_RESULT  = '0' 
   SET @cCod  = ' ' 
   SET @cLocal  = ' ' 
   SET @nRecno  = 0 
   SET @nFatorConv  = 0 
   SET @nQSALDOATU  = 0 
   SET @nCUSTOATU  = 0 
   SET @nCUSTOATU2  = 0 
   SET @nCUSTOATU3  = 0 
   SET @nCUSTOATU4  = 0 
   SET @nCUSTOATU5  = 0 
   SET @nQTSEGUM  = 0 
   SET @nB2_VATU1  = 0 
   SET @nB2_VATU2  = 0 
   SET @nB2_VATU3  = 0 
   SET @nB2_VATU4  = 0 
   SET @nB2_VATU5  = 0 
   SET @nContador  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_21_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_21_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_21_02 @cAux , @IN_FILIALCOR , @cFil_SC2 output 
   SET @cAux  = 'AF9' 
   EXEC XFILIAL_21_02 @cAux , @IN_FILIALCOR , @cFil_AF9 output 
    
   -- Cursor declaration CUR_A350INI
   DECLARE CUR_A350INI INSENSITIVE  CURSOR FOR 
   SELECT SB2.B2_COD , SB2.B2_LOCAL , SB2.B2_QATU , SB2.B2_QTSEGUM , SB2.B2_CM1 , SB2.B2_CM2 , SB2.B2_CM3 , SB2.B2_CM4 , 
          SB2.B2_CM5 , SB2.B2_VATU1 , SB2.B2_VATU2 , SB2.B2_VATU3 , SB2.B2_VATU4 , SB2.B2_VATU5 , SB2.R_E_C_N_O_ , SB1.B1_CONV 
     FROM SB2030 SB2, SB1030 SB1
     WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SB2.B2_COD  and SB2.B2_COD NOT like 'MOD%'  and SB2.D_E_L_E_T_  = ' ' 
      and SB1.D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_A350INI
   FETCH CUR_A350INI 
    INTO @cCod , @cLocal , @nQSALDOATU , @nQTSEGUM , @nCUSTOATU , @nCUSTOATU2 , @nCUSTOATU3 , @nCUSTOATU4 , @nCUSTOATU5 , 
          @nB2_VATU1 , @nB2_VATU2 , @nB2_VATU3 , @nB2_VATU4 , @nB2_VATU5 , @nRecno , @nFatorConv 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF  (@nFatorConv  <> 0 ) 
      BEGIN 
         SET @nAux  = 0 
         SET @nAux1  = 2 
         EXEC MAT018_21_02 @cCod , @IN_FILIALCOR , @nQSALDOATU , @nAux , @nAux1 , @nQTSEGUM output 
      END 
      IF @nContador  = 1 
      BEGIN 
         begin tran 
         SET @nContador  = @nContador 
      END 
      IF  (@nQSALDOATU  <> 0 ) 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_QFIM  = @nQSALDOATU , B2_QFIM2  = @nQTSEGUM , B2_VFIM1  = @nB2_VATU1 , B2_VFIM2  = @nB2_VATU2 , B2_VFIM3  = @nB2_VATU3 
           , B2_VFIM4  = @nB2_VATU4 , B2_VFIM5  = @nB2_VATU5 , B2_CM1  =  (@nB2_VATU1  / @nQSALDOATU ) , B2_CM2  =  (@nB2_VATU2  / @nQSALDOATU 
           ) , B2_CM3  =  (@nB2_VATU3  / @nQSALDOATU ) , B2_CM4  =  (@nB2_VATU4  / @nQSALDOATU ) , B2_CM5  =  (@nB2_VATU5  / @nQSALDOATU 
           ) 
          WHERE R_E_C_N_O_  = @nRecno 
      END 
      ELSE 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_QFIM  = @nQSALDOATU , B2_QFIM2  = @nQTSEGUM , B2_VFIM1  = @nB2_VATU1 , B2_VFIM2  = @nB2_VATU2 , B2_VFIM3  = @nB2_VATU3 
           , B2_VFIM4  = @nB2_VATU4 , B2_VFIM5  = @nB2_VATU5 
          WHERE R_E_C_N_O_  = @nRecno 
      END 
      FETCH CUR_A350INI 
       INTO @cCod , @cLocal , @nQSALDOATU , @nQTSEGUM , @nCUSTOATU , @nCUSTOATU2 , @nCUSTOATU3 , @nCUSTOATU4 , @nCUSTOATU5 , 
             @nB2_VATU1 , @nB2_VATU2 , @nB2_VATU3 , @nB2_VATU4 , @nB2_VATU5 , @nRecno , @nFatorConv 
      IF  (@nContador  > 1023 ) 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF  (@nContador  <> 0 ) 
   BEGIN 
      SET @nContador  = 0 
       Commit Transaction  
   END 
   CLOSE CUR_A350INI
   DEALLOCATE CUR_A350INI
   SET @nRec  = 0 
   SET @nRecAnt  = 0 
   SET @nMaxRecnoSC2  = 0 
   SET @nContador  = 0 
   SELECT @nMaxRecnoSC2  = MAX ( R_E_C_N_O_ )
     FROM SC2030 SC2
     WHERE C2_FILIAL  = @cFil_SC2 
   IF @nMaxRecnoSC2 is null 
   BEGIN 
      SET @nMaxRecnoSC2  = 0 
   END 
   SET @nRec  = 0 
   WHILE (@nRec  <= @nMaxRecnoSC2 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nRecAnt  = @nRec 
      SET @nRec  = @nRec  + 1024 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VFIM1  = C2_VATU1 , C2_VFIM2  = C2_VATU2 , C2_VFIM3  = C2_VATU3 , C2_VFIM4  = C2_VATU4 , C2_VFIM5  = C2_VATU5 
        , C2_APRFIM1  = C2_APRATU1 , C2_APRFIM2  = C2_APRATU2 , C2_APRFIM3  = C2_APRATU3 , C2_APRFIM4  = C2_APRATU4 , C2_APRFIM5  = C2_APRATU5 
        
       WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and C2_FILIAL  = @cFil_SC2 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nRec  = 0 
   SET @nRecAnt  = 0 
   SET @nMaxRecnoAF9  = 0 
   SET @nContador  = 0 
   SELECT @nMaxRecnoAF9  = MAX ( R_E_C_N_O_ )
     FROM AF9030 AF9
     WHERE AF9_FILIAL  = @cFil_AF9 
   IF @nMaxRecnoAF9 is null 
   BEGIN 
      SET @nMaxRecnoAF9  = 0 
   END 
   SET @nRec  = 0 
   WHILE (@nRec  <= @nMaxRecnoAF9 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nRecAnt  = @nRec 
      SET @nRec  = @nRec  + 1024 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      UPDATE AF9030 
        WITH (ROWLOCK) 
         SET AF9_VFIM1  = AF9_VATU1 , AF9_VFIM2  = AF9_VATU2 , AF9_VFIM3  = AF9_VATU3 , AF9_VFIM4  = AF9_VATU4 , AF9_VFIM5  = AF9_VATU5 
        
       WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and AF9_FILIAL  = @cFil_AF9 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULT  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT029_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT029_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT029_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT029_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PROD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 10) , 
    @IN_SUBLOTE Char( 6) , 
    @IN_LOCALIZA Char( 15) , 
    @IN_NUMSER Char( 20) , 
    @IN_CONSSUB Char( 01 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_PRDORI Char( 15) , 
    @OUT_SALDO1 Float  output , 
    @OUT_SALDO2 Float  output , 
    @OUT_SALDO3 Float  output , 
    @OUT_SALDO4 Float  output , 
    @OUT_SALDO5 Float  output , 
    @OUT_SALDO6 Float  output , 
    @OUT_SALDO7 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_SBJ Char( 2)
DECLARE @cFilial_SBK Char( 2)
DECLARE @cFilial_SD5 Char( 2)
DECLARE @cFilial_SDB Char( 2)
DECLARE @cRastroL Char( 01 )
DECLARE @cRastroS Char( 01 )
DECLARE @lAvalia Char( 01 )
DECLARE @cDtSaldo Char( 08 )
DECLARE @execDB Char( 01 )
DECLARE @nBJ_QINI Decimal( 14 , 2 )
DECLARE @nBJ_QISEGUM Decimal( 14 , 2 )
DECLARE @cBJ_NUMLOTE Char( 6)
DECLARE @cBJ_DATA Char( 08 )
DECLARE @nBK_QINI Decimal( 14 , 2 )
DECLARE @nBK_QISEGUM Decimal( 14 , 2 )
DECLARE @cBK_NUMLOTE Char( 6)
DECLARE @cBK_LOTECTL Char( 10)
DECLARE @cBK_DATA Char( 08 )
DECLARE @cAux VarChar( 3 )
DECLARE @cAux1 VarChar( 1 )
DECLARE @nSLD1SD5 Float
DECLARE @nSLD7SD5 Float
DECLARE @nSLD1SDB Float
DECLARE @nSLD7SDB Float
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cData Char( 08 )
DECLARE @cLote Char( 10)
DECLARE @cSubLote Char( 6)
DECLARE @cLocaliza Char( 15)
DECLARE @cNumSer Char( 20)
BEGIN
   SET @cProduto  = @IN_PROD 
   SET @cLocal  = @IN_LOCAL 
   SET @cData  = @IN_DATA 
   SET @cLote  = @IN_LOTE 
   SET @cSubLote  = @IN_SUBLOTE 
   SET @cLocaliza  = @IN_LOCALIZA 
   SET @cNumSer  = @IN_NUMSER 
   SET @cDtSaldo  = null 
   SET @cAux  = 'SBJ' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFilial_SBJ output 
   SET @cAux  = 'SBK' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFilial_SBK output 
   SET @cAux  = 'SD5' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFilial_SD5 output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFilial_SDB output 
   SET @cAux  = 'S' 
   SET @cAux1  = null 
   EXEC MAT011_17_01 @cAux , @cProduto , @cAux1 , @IN_FILIALCOR , @cRastroL output 
   SET @cAux  = 'S' 
   EXEC MAT011_17_01 @cAux , @cProduto , @cAux , @IN_FILIALCOR , @cRastroS output 
   SET @OUT_SALDO1  = 0 
   SET @OUT_SALDO2  = 0 
   SET @OUT_SALDO3  = 0 
   SET @OUT_SALDO4  = 0 
   SET @OUT_SALDO5  = 0 
   SET @OUT_SALDO6  = 0 
   SET @OUT_SALDO7  = 0 
   SET @execDB  = '1' 
   SET @nSLD1SD5  = 0 
   SET @nSLD7SD5  = 0 
   SET @nSLD1SDB  = 0 
   SET @nSLD7SDB  = 0 
   IF  (@IN_CONSSUB  = '1' )  and @cRastroL  = '1'  and  (@cSubLote  <> ' ' ) 
   BEGIN 
      SET @cRastroS  = '1' 
   END 
   IF  (COALESCE ( LTRIM ( RTRIM ( @cLocaliza  + @cNumSer )), ' ' ) = ' ' )  and  (@cLote  <> ' ' ) 
   BEGIN 
       
      -- Cursor declaration CUR_MAT029_A
      DECLARE CUR_MAT029_A insensitive  CURSOR FOR 
      SELECT BJ_QINI , BJ_QISEGUM , BJ_NUMLOTE , BJ_DATA 
        FROM SBJ010 
        WHERE BJ_FILIAL  = @cFilial_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and BJ_LOTECTL  = @cLote  and BJ_NUMLOTE  = @cSubLote 
         and BJ_DATA  = (
      SELECT MAX ( BJ_DATA )
        FROM SBJ010 
        WHERE BJ_FILIAL  = @cFilial_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and BJ_LOTECTL  = @cLote  and BJ_DATA  < @cData 
         and BJ_NUMLOTE  = @cSubLote  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      FOR READ ONLY 
       
      OPEN CUR_MAT029_A
      FETCH CUR_MAT029_A 
       INTO @nBJ_QINI , @nBJ_QISEGUM , @cBJ_NUMLOTE , @cBJ_DATA 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @lAvalia  = '1' 
         IF  (@cSubLote  <> ' ' )  and  (@cRastroS  = '1' )  and  (@cBJ_NUMLOTE  <> @cSubLote ) 
         BEGIN 
            SET @lAvalia  = '0' 
         END 
         IF @lAvalia  = '1' 
         BEGIN 
            SET @OUT_SALDO1  = @nBJ_QINI 
            SET @OUT_SALDO7  = @nBJ_QISEGUM 
            SET @cDtSaldo  = @cBJ_DATA 
         END 
         FETCH CUR_MAT029_A 
          INTO @nBJ_QINI , @nBJ_QISEGUM , @cBJ_NUMLOTE , @cBJ_DATA 
      END 
      CLOSE CUR_MAT029_A
      DEALLOCATE CUR_MAT029_A
      IF @OUT_SALDO1 is null 
      BEGIN 
         SET @OUT_SALDO1  = 0 
      END 
      IF @OUT_SALDO7 is null 
      BEGIN 
         SET @OUT_SALDO7  = 0 
      END 
      IF  (@IN_300SALNEG  = '1'  or  (@OUT_SALDO1  + @OUT_SALDO7  = 0 ) )  or  (@IN_300SALNEG  = '1'  or  ( (@OUT_SALDO1  + @OUT_SALDO7 
         > 0 ) )  and  (@cDtSaldo is NOT null ) ) 
      BEGIN 
         IF @cDtSaldo is null 
         BEGIN 
            SET @cDtSaldo  = '19800101' 
         END 
         SET @nSLD1SD5  = @OUT_SALDO1 
         SET @nSLD7SD5  = @OUT_SALDO7 
         IF @nSLD1SD5 is null 
         BEGIN 
            SET @nSLD1SD5  = 0 
         END 
         IF @nSLD7SD5 is null 
         BEGIN 
            SET @nSLD7SD5  = 0 
         END 
         EXEC MAT045_17_01 @cFilial_SD5 , @cProduto , @cLocal , @cLote , @cData , @cSubLote , @cDtSaldo , @cRastroS , @nSLD1SD5 , 
                @nSLD7SD5 , @OUT_SALDO1 output , @OUT_SALDO7 output 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (COALESCE ( LTRIM ( RTRIM ( @cLocaliza  + @cNumSer )), ' ' ) <> ' ' ) 
      BEGIN 
          
         -- Cursor declaration CUR_MAT029_C
         DECLARE CUR_MAT029_C insensitive  CURSOR FOR 
         SELECT BK_QINI , BK_QISEGUM , BK_NUMLOTE , BK_LOTECTL , BK_DATA 
           FROM SBK010 
           WHERE BK_FILIAL  = @cFilial_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOCALIZ  = @cLocaliza 
            and BK_NUMSERI  = @cNumSer  and BK_LOTECTL  = @cLote  and BK_DATA  = (
         SELECT MAX ( BK_DATA )
           FROM SBK010 
           WHERE BK_FILIAL  = @cFilial_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOTECTL  = @cLote  and BK_LOCALIZ  = @cLocaliza 
            and BK_NUMSERI  = @cNumSer  and BK_DATA  < @cData  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN CUR_MAT029_C
         FETCH CUR_MAT029_C 
          INTO @nBK_QINI , @nBK_QISEGUM , @cBK_NUMLOTE , @cBK_LOTECTL , @cBK_DATA 
         WHILE ( (@@Fetch_status  = 0 ) )
         BEGIN
            SET @lAvalia  = '1' 
            IF @cRastroL  = '1' 
            BEGIN 
               IF @cLote  <> @cBK_LOTECTL 
               BEGIN 
                  SET @lAvalia  = '0' 
               END 
               IF @lAvalia  = '1'  and  (@cSubLote  <> ' ' )  and  (@cRastroS  = '1' )  and  (@cBK_NUMLOTE  <> @cSubLote 
                 ) 
               BEGIN 
                  SET @lAvalia  = '0' 
               END 
            END 
            IF @lAvalia  = '1' 
            BEGIN 
               SET @OUT_SALDO1  = @nBK_QINI 
               SET @OUT_SALDO7  = @nBK_QISEGUM 
               SET @cDtSaldo  = @cBK_DATA 
               IF @cBK_DATA  = @cData 
               BEGIN 
                  SET @execDB  = '0' 
               END 
            END 
            FETCH CUR_MAT029_C 
             INTO @nBK_QINI , @nBK_QISEGUM , @cBK_NUMLOTE , @cBK_LOTECTL , @cBK_DATA 
         END 
         CLOSE CUR_MAT029_C
         DEALLOCATE CUR_MAT029_C
         IF @OUT_SALDO1 is null 
         BEGIN 
            SET @OUT_SALDO1  = 0 
         END 
         IF @OUT_SALDO7 is null 
         BEGIN 
            SET @OUT_SALDO7  = 0 
         END 
         IF @execDB  = '1'  and  (@IN_300SALNEG  = '1'  or  (@OUT_SALDO1  + @OUT_SALDO7  = 0 )  or  (@IN_300SALNEG  = '1' 
            or  (@OUT_SALDO1  + @OUT_SALDO7  > 0 )  and  (@cDtSaldo is NOT null ) ) ) 
         BEGIN 
            IF @cDtSaldo is null 
            BEGIN 
               SET @cDtSaldo  = '19800101' 
            END 
            SET @nSLD1SDB  = @OUT_SALDO1 
            SET @nSLD7SDB  = @OUT_SALDO7 
            IF @nSLD1SDB is null 
            BEGIN 
               SET @nSLD1SDB  = 0 
            END 
            IF @nSLD7SDB is null 
            BEGIN 
               SET @nSLD7SDB  = 0 
            END 
            EXEC MAT046_17_01 @cFilial_SDB , @cProduto , @cLocal , @cLote , @cLocaliza , @cNumSer , @cSubLote , @cData , 
                   @cDtSaldo , @cRastroL , @cRastroS , @nSLD1SDB , @nSLD7SDB , @IN_MV_WMSNEW , @IN_PRDORI , @OUT_SALDO1 output , 
                   @OUT_SALDO7 output 
            IF @OUT_SALDO1 is null 
            BEGIN 
               SET @OUT_SALDO1  = 0 
            END 
            IF @OUT_SALDO7 is null 
            BEGIN 
               SET @OUT_SALDO7  = 0 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT029_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT029_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT029_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT029_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PROD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_LOTE Char( 10) , 
    @IN_SUBLOTE Char( 6) , 
    @IN_LOCALIZA Char( 15) , 
    @IN_NUMSER Char( 20) , 
    @IN_CONSSUB Char( 01 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_PRDORI Char( 15) , 
    @OUT_SALDO1 Float  output , 
    @OUT_SALDO2 Float  output , 
    @OUT_SALDO3 Float  output , 
    @OUT_SALDO4 Float  output , 
    @OUT_SALDO5 Float  output , 
    @OUT_SALDO6 Float  output , 
    @OUT_SALDO7 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFilial_SBJ Char( 2)
DECLARE @cFilial_SBK Char( 2)
DECLARE @cFilial_SD5 Char( 2)
DECLARE @cFilial_SDB Char( 2)
DECLARE @cRastroL Char( 01 )
DECLARE @cRastroS Char( 01 )
DECLARE @lAvalia Char( 01 )
DECLARE @cDtSaldo Char( 08 )
DECLARE @execDB Char( 01 )
DECLARE @nBJ_QINI Decimal( 14 , 2 )
DECLARE @nBJ_QISEGUM Decimal( 14 , 2 )
DECLARE @cBJ_NUMLOTE Char( 6)
DECLARE @cBJ_DATA Char( 08 )
DECLARE @nBK_QINI Decimal( 14 , 2 )
DECLARE @nBK_QISEGUM Decimal( 14 , 2 )
DECLARE @cBK_NUMLOTE Char( 6)
DECLARE @cBK_LOTECTL Char( 10)
DECLARE @cBK_DATA Char( 08 )
DECLARE @cAux VarChar( 3 )
DECLARE @cAux1 VarChar( 1 )
DECLARE @nSLD1SD5 Float
DECLARE @nSLD7SD5 Float
DECLARE @nSLD1SDB Float
DECLARE @nSLD7SDB Float
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cData Char( 08 )
DECLARE @cLote Char( 10)
DECLARE @cSubLote Char( 6)
DECLARE @cLocaliza Char( 15)
DECLARE @cNumSer Char( 20)
BEGIN
   SET @cProduto  = @IN_PROD 
   SET @cLocal  = @IN_LOCAL 
   SET @cData  = @IN_DATA 
   SET @cLote  = @IN_LOTE 
   SET @cSubLote  = @IN_SUBLOTE 
   SET @cLocaliza  = @IN_LOCALIZA 
   SET @cNumSer  = @IN_NUMSER 
   SET @cDtSaldo  = null 
   SET @cAux  = 'SBJ' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFilial_SBJ output 
   SET @cAux  = 'SBK' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFilial_SBK output 
   SET @cAux  = 'SD5' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFilial_SD5 output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFilial_SDB output 
   SET @cAux  = 'S' 
   SET @cAux1  = null 
   EXEC MAT011_17_02 @cAux , @cProduto , @cAux1 , @IN_FILIALCOR , @cRastroL output 
   SET @cAux  = 'S' 
   EXEC MAT011_17_02 @cAux , @cProduto , @cAux , @IN_FILIALCOR , @cRastroS output 
   SET @OUT_SALDO1  = 0 
   SET @OUT_SALDO2  = 0 
   SET @OUT_SALDO3  = 0 
   SET @OUT_SALDO4  = 0 
   SET @OUT_SALDO5  = 0 
   SET @OUT_SALDO6  = 0 
   SET @OUT_SALDO7  = 0 
   SET @execDB  = '1' 
   SET @nSLD1SD5  = 0 
   SET @nSLD7SD5  = 0 
   SET @nSLD1SDB  = 0 
   SET @nSLD7SDB  = 0 
   IF  (@IN_CONSSUB  = '1' )  and @cRastroL  = '1'  and  (@cSubLote  <> ' ' ) 
   BEGIN 
      SET @cRastroS  = '1' 
   END 
   IF  (COALESCE ( LTRIM ( RTRIM ( @cLocaliza  + @cNumSer )), ' ' ) = ' ' )  and  (@cLote  <> ' ' ) 
   BEGIN 
       
      -- Cursor declaration CUR_MAT029_A
      DECLARE CUR_MAT029_A insensitive  CURSOR FOR 
      SELECT BJ_QINI , BJ_QISEGUM , BJ_NUMLOTE , BJ_DATA 
        FROM SBJ030 
        WHERE BJ_FILIAL  = @cFilial_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and BJ_LOTECTL  = @cLote  and BJ_NUMLOTE  = @cSubLote 
         and BJ_DATA  = (
      SELECT MAX ( BJ_DATA )
        FROM SBJ030 
        WHERE BJ_FILIAL  = @cFilial_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and BJ_LOTECTL  = @cLote  and BJ_DATA  < @cData 
         and BJ_NUMLOTE  = @cSubLote  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      FOR READ ONLY 
       
      OPEN CUR_MAT029_A
      FETCH CUR_MAT029_A 
       INTO @nBJ_QINI , @nBJ_QISEGUM , @cBJ_NUMLOTE , @cBJ_DATA 
      WHILE ( (@@Fetch_status  = 0 ) )
      BEGIN
         SET @lAvalia  = '1' 
         IF  (@cSubLote  <> ' ' )  and  (@cRastroS  = '1' )  and  (@cBJ_NUMLOTE  <> @cSubLote ) 
         BEGIN 
            SET @lAvalia  = '0' 
         END 
         IF @lAvalia  = '1' 
         BEGIN 
            SET @OUT_SALDO1  = @nBJ_QINI 
            SET @OUT_SALDO7  = @nBJ_QISEGUM 
            SET @cDtSaldo  = @cBJ_DATA 
         END 
         FETCH CUR_MAT029_A 
          INTO @nBJ_QINI , @nBJ_QISEGUM , @cBJ_NUMLOTE , @cBJ_DATA 
      END 
      CLOSE CUR_MAT029_A
      DEALLOCATE CUR_MAT029_A
      IF @OUT_SALDO1 is null 
      BEGIN 
         SET @OUT_SALDO1  = 0 
      END 
      IF @OUT_SALDO7 is null 
      BEGIN 
         SET @OUT_SALDO7  = 0 
      END 
      IF  (@IN_300SALNEG  = '1'  or  (@OUT_SALDO1  + @OUT_SALDO7  = 0 ) )  or  (@IN_300SALNEG  = '1'  or  ( (@OUT_SALDO1  + @OUT_SALDO7 
         > 0 ) )  and  (@cDtSaldo is NOT null ) ) 
      BEGIN 
         IF @cDtSaldo is null 
         BEGIN 
            SET @cDtSaldo  = '19800101' 
         END 
         SET @nSLD1SD5  = @OUT_SALDO1 
         SET @nSLD7SD5  = @OUT_SALDO7 
         IF @nSLD1SD5 is null 
         BEGIN 
            SET @nSLD1SD5  = 0 
         END 
         IF @nSLD7SD5 is null 
         BEGIN 
            SET @nSLD7SD5  = 0 
         END 
         EXEC MAT045_17_02 @cFilial_SD5 , @cProduto , @cLocal , @cLote , @cData , @cSubLote , @cDtSaldo , @cRastroS , @nSLD1SD5 , 
                @nSLD7SD5 , @OUT_SALDO1 output , @OUT_SALDO7 output 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (COALESCE ( LTRIM ( RTRIM ( @cLocaliza  + @cNumSer )), ' ' ) <> ' ' ) 
      BEGIN 
          
         -- Cursor declaration CUR_MAT029_C
         DECLARE CUR_MAT029_C insensitive  CURSOR FOR 
         SELECT BK_QINI , BK_QISEGUM , BK_NUMLOTE , BK_LOTECTL , BK_DATA 
           FROM SBK030 
           WHERE BK_FILIAL  = @cFilial_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOCALIZ  = @cLocaliza 
            and BK_NUMSERI  = @cNumSer  and BK_LOTECTL  = @cLote  and BK_DATA  = (
         SELECT MAX ( BK_DATA )
           FROM SBK030 
           WHERE BK_FILIAL  = @cFilial_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOTECTL  = @cLote  and BK_LOCALIZ  = @cLocaliza 
            and BK_NUMSERI  = @cNumSer  and BK_DATA  < @cData  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN CUR_MAT029_C
         FETCH CUR_MAT029_C 
          INTO @nBK_QINI , @nBK_QISEGUM , @cBK_NUMLOTE , @cBK_LOTECTL , @cBK_DATA 
         WHILE ( (@@Fetch_status  = 0 ) )
         BEGIN
            SET @lAvalia  = '1' 
            IF @cRastroL  = '1' 
            BEGIN 
               IF @cLote  <> @cBK_LOTECTL 
               BEGIN 
                  SET @lAvalia  = '0' 
               END 
               IF @lAvalia  = '1'  and  (@cSubLote  <> ' ' )  and  (@cRastroS  = '1' )  and  (@cBK_NUMLOTE  <> @cSubLote 
                 ) 
               BEGIN 
                  SET @lAvalia  = '0' 
               END 
            END 
            IF @lAvalia  = '1' 
            BEGIN 
               SET @OUT_SALDO1  = @nBK_QINI 
               SET @OUT_SALDO7  = @nBK_QISEGUM 
               SET @cDtSaldo  = @cBK_DATA 
               IF @cBK_DATA  = @cData 
               BEGIN 
                  SET @execDB  = '0' 
               END 
            END 
            FETCH CUR_MAT029_C 
             INTO @nBK_QINI , @nBK_QISEGUM , @cBK_NUMLOTE , @cBK_LOTECTL , @cBK_DATA 
         END 
         CLOSE CUR_MAT029_C
         DEALLOCATE CUR_MAT029_C
         IF @OUT_SALDO1 is null 
         BEGIN 
            SET @OUT_SALDO1  = 0 
         END 
         IF @OUT_SALDO7 is null 
         BEGIN 
            SET @OUT_SALDO7  = 0 
         END 
         IF @execDB  = '1'  and  (@IN_300SALNEG  = '1'  or  (@OUT_SALDO1  + @OUT_SALDO7  = 0 )  or  (@IN_300SALNEG  = '1' 
            or  (@OUT_SALDO1  + @OUT_SALDO7  > 0 )  and  (@cDtSaldo is NOT null ) ) ) 
         BEGIN 
            IF @cDtSaldo is null 
            BEGIN 
               SET @cDtSaldo  = '19800101' 
            END 
            SET @nSLD1SDB  = @OUT_SALDO1 
            SET @nSLD7SDB  = @OUT_SALDO7 
            IF @nSLD1SDB is null 
            BEGIN 
               SET @nSLD1SDB  = 0 
            END 
            IF @nSLD7SDB is null 
            BEGIN 
               SET @nSLD7SDB  = 0 
            END 
            EXEC MAT046_17_02 @cFilial_SDB , @cProduto , @cLocal , @cLote , @cLocaliza , @cNumSer , @cSubLote , @cData , 
                   @cDtSaldo , @cRastroL , @cRastroS , @nSLD1SDB , @nSLD7SDB , @IN_MV_WMSNEW , @IN_PRDORI , @OUT_SALDO1 output , 
                   @OUT_SALDO7 output 
            IF @OUT_SALDO1 is null 
            BEGIN 
               SET @OUT_SALDO1  = 0 
            END 
            IF @OUT_SALDO7 is null 
            BEGIN 
               SET @OUT_SALDO7  = 0 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT035_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT035_15_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT035_15_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT035_15_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_IDENT Char( 6) , 
    @IN_TES Char( 3) , 
    @IN_TIPO Char( 1) , 
    @IN_DTINI Char( 08 ) , 
    @IN_DTFIN Char( 08 ) , 
    @OUT_QTD Float  output , 
    @OUT_QULIB Float  output , 
    @OUT_SALDO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB6 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @dDtIni Char( 08 )
DECLARE @dDtFin Char( 08 )
DECLARE @cB6_TPCF Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @nSaldo1 Decimal( 11 , 2 )
DECLARE @nSaldo2 Decimal( 11 , 2 )
DECLARE @nSaldo3 Decimal( 12 , 2 )
DECLARE @nSaldo1Aux Decimal( 11 , 2 )
DECLARE @nB6_QUANT Decimal( 11 , 2 )
DECLARE @cF4_PODER3 Char( 1)
DECLARE @nB6_QULIB Decimal( 11 , 2 )
DECLARE @nB6_PRUNIT Decimal( 12 , 2 )
DECLARE @cB6_IDENTB6 Char( 6)
DECLARE @cB6_TES Char( 3)
BEGIN
   SET @OUT_SALDO  = 0 
   SET @OUT_QTD  = 0 
   SET @OUT_QULIB  = 0 
   SET @dDtIni  = @IN_DTINI 
   SET @dDtFin  = @IN_DTFIN 
   IF @dDtIni  = ' ' 
   BEGIN 
      SET @dDtIni  = '17000102' 
   END 
   IF @dDtFin  = ' ' 
   BEGIN 
      SET @dDtFin  = '99999999' 
   END 
   IF @IN_IDENT  <> ' ' 
   BEGIN 
      SET @cAux  = 'SB6' 
      EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SB6 output 
      SET @cAux  = 'SF4' 
      EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
       
      -- Cursor declaration CUR_B6
      DECLARE CUR_B6 insensitive  CURSOR FOR 
      SELECT B6_QUANT , B6_QULIB , B6_TES , B6_TPCF , B6_PRUNIT , B6_IDENTB6 , SF4.F4_PODER3 
        FROM SB6010 SB6, SF4010 SF4
        WHERE B6_FILIAL  = @cFil_SB6  and  ( (B6_IDENT  = @IN_IDENT  and B6_IDENTB6  = ' ' )  or  (B6_IDENT  = @IN_IDENT 
         and B6_IDENTB6  = @IN_IDENT ) )  and B6_PRODUTO  = @IN_PRODUTO  and B6_DTDIGIT  between @dDtIni and @dDtFin  and F4_FILIAL  = @cFil_SF4 
         and F4_CODIGO  = B6_TES  and SB6.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      FOR READ ONLY 
       
      OPEN CUR_B6
      FETCH CUR_B6 
       INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
      SET @nSaldo1  = 0 
      SET @nSaldo2  = 0 
      SET @nSaldo3  = 0 
      SET @nSaldo1Aux  = 0 
      WHILE (@@Fetch_status  = 0 )
      BEGIN
         IF @IN_TES  <= '500' 
         BEGIN 
            IF  (@IN_TIPO  = 'B'  and @cB6_TPCF  <> 'C' )  or  (@IN_TIPO  = 'N'  and @cB6_TPCF  <> 'F' ) 
            BEGIN 
               FETCH CUR_B6 
                INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
               CONTINUE 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_TIPO  = 'B'  and @cB6_TPCF  <> 'F' )  or  (@IN_TIPO  = 'N'  and @cB6_TPCF  <> 'C' ) 
            BEGIN 
               FETCH CUR_B6 
                INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
               CONTINUE 
            END 
         END 
         IF @cF4_PODER3  = 'R' 
         BEGIN 
            SET @nSaldo1  = @nSaldo1  + @nB6_QUANT 
            SET @nSaldo2  = @nSaldo2  + @nB6_QULIB 
            IF @nSaldo1  = 0 
            BEGIN 
               SET @nSaldo1Aux  = 1 
            END 
            ELSE 
            BEGIN 
               SET @nSaldo1Aux  = @nSaldo1 
            END 
            SET @nSaldo3  = @nSaldo3  +  (@nB6_PRUNIT  * @nSaldo1Aux ) 
         END 
         ELSE 
         BEGIN 
            IF @cF4_PODER3  = 'D' 
            BEGIN 
               SET @nSaldo1  = @nSaldo1  - @nB6_QUANT 
            END 
         END 
         FETCH CUR_B6 
          INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
      END 
      CLOSE CUR_B6
      DEALLOCATE CUR_B6
   END 
   SET @OUT_QTD  = @nSaldo1 
   SET @OUT_QULIB  = @nSaldo2 
   SET @OUT_SALDO  = @nSaldo3 
END
GO

GO
--SqlScripter----[dbo].[MAT035_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT035_15_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT035_15_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT035_15_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_IDENT Char( 6) , 
    @IN_TES Char( 3) , 
    @IN_TIPO Char( 1) , 
    @IN_DTINI Char( 08 ) , 
    @IN_DTFIN Char( 08 ) , 
    @OUT_QTD Float  output , 
    @OUT_QULIB Float  output , 
    @OUT_SALDO Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB6 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @dDtIni Char( 08 )
DECLARE @dDtFin Char( 08 )
DECLARE @cB6_TPCF Char( 1)
DECLARE @cAux VarChar( 3 )
DECLARE @nSaldo1 Decimal( 11 , 2 )
DECLARE @nSaldo2 Decimal( 11 , 2 )
DECLARE @nSaldo3 Decimal( 12 , 2 )
DECLARE @nSaldo1Aux Decimal( 11 , 2 )
DECLARE @nB6_QUANT Decimal( 11 , 2 )
DECLARE @cF4_PODER3 Char( 1)
DECLARE @nB6_QULIB Decimal( 11 , 2 )
DECLARE @nB6_PRUNIT Decimal( 12 , 2 )
DECLARE @cB6_IDENTB6 Char( 6)
DECLARE @cB6_TES Char( 3)
BEGIN
   SET @OUT_SALDO  = 0 
   SET @OUT_QTD  = 0 
   SET @OUT_QULIB  = 0 
   SET @dDtIni  = @IN_DTINI 
   SET @dDtFin  = @IN_DTFIN 
   IF @dDtIni  = ' ' 
   BEGIN 
      SET @dDtIni  = '17000102' 
   END 
   IF @dDtFin  = ' ' 
   BEGIN 
      SET @dDtFin  = '99999999' 
   END 
   IF @IN_IDENT  <> ' ' 
   BEGIN 
      SET @cAux  = 'SB6' 
      EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SB6 output 
      SET @cAux  = 'SF4' 
      EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
       
      -- Cursor declaration CUR_B6
      DECLARE CUR_B6 insensitive  CURSOR FOR 
      SELECT B6_QUANT , B6_QULIB , B6_TES , B6_TPCF , B6_PRUNIT , B6_IDENTB6 , SF4.F4_PODER3 
        FROM SB6030 SB6, SF4030 SF4
        WHERE B6_FILIAL  = @cFil_SB6  and  ( (B6_IDENT  = @IN_IDENT  and B6_IDENTB6  = ' ' )  or  (B6_IDENT  = @IN_IDENT 
         and B6_IDENTB6  = @IN_IDENT ) )  and B6_PRODUTO  = @IN_PRODUTO  and B6_DTDIGIT  between @dDtIni and @dDtFin  and F4_FILIAL  = @cFil_SF4 
         and F4_CODIGO  = B6_TES  and SB6.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      FOR READ ONLY 
       
      OPEN CUR_B6
      FETCH CUR_B6 
       INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
      SET @nSaldo1  = 0 
      SET @nSaldo2  = 0 
      SET @nSaldo3  = 0 
      SET @nSaldo1Aux  = 0 
      WHILE (@@Fetch_status  = 0 )
      BEGIN
         IF @IN_TES  <= '500' 
         BEGIN 
            IF  (@IN_TIPO  = 'B'  and @cB6_TPCF  <> 'C' )  or  (@IN_TIPO  = 'N'  and @cB6_TPCF  <> 'F' ) 
            BEGIN 
               FETCH CUR_B6 
                INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
               CONTINUE 
            END 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_TIPO  = 'B'  and @cB6_TPCF  <> 'F' )  or  (@IN_TIPO  = 'N'  and @cB6_TPCF  <> 'C' ) 
            BEGIN 
               FETCH CUR_B6 
                INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
               CONTINUE 
            END 
         END 
         IF @cF4_PODER3  = 'R' 
         BEGIN 
            SET @nSaldo1  = @nSaldo1  + @nB6_QUANT 
            SET @nSaldo2  = @nSaldo2  + @nB6_QULIB 
            IF @nSaldo1  = 0 
            BEGIN 
               SET @nSaldo1Aux  = 1 
            END 
            ELSE 
            BEGIN 
               SET @nSaldo1Aux  = @nSaldo1 
            END 
            SET @nSaldo3  = @nSaldo3  +  (@nB6_PRUNIT  * @nSaldo1Aux ) 
         END 
         ELSE 
         BEGIN 
            IF @cF4_PODER3  = 'D' 
            BEGIN 
               SET @nSaldo1  = @nSaldo1  - @nB6_QUANT 
            END 
         END 
         FETCH CUR_B6 
          INTO @nB6_QUANT , @nB6_QULIB , @cB6_TES , @cB6_TPCF , @nB6_PRUNIT , @cB6_IDENTB6 , @cF4_PODER3 
      END 
      CLOSE CUR_B6
      DEALLOCATE CUR_B6
   END 
   SET @OUT_QTD  = @nSaldo1 
   SET @OUT_QULIB  = @nSaldo2 
   SET @OUT_SALDO  = @nSaldo3 
END
GO

GO
--SqlScripter----[dbo].[MAT036_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT036_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT036_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT036_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CODIGO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_B2_QFIM Float , 
    @IN_B2_QACLASS Float , 
    @IN_CONSULTA Char( 01 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @OUT_SOMASB8 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB8 Char( 2)
DECLARE @cFil_SBJ Char( 2)
DECLARE @cRastroL Char( 01 )
DECLARE @cB8_PRODUTO Char( 15)
DECLARE @cB8_LOCAL Char( 2)
DECLARE @cB8_LOTECTL Char( 10)
DECLARE @cB8_NUMLOTE Char( 6)
DECLARE @dB8_DATA Char( 08 )
DECLARE @dB8_DTVALID Char( 08 )
DECLARE @nSaldoLote Float
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @nSaldoAux Float
DECLARE @dtFech Char( 08 )
DECLARE @vRecno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @cAux1 VarChar( 1 )
DECLARE @nAux Integer
DECLARE @nDifSB2 Float
DECLARE @iRecno Integer
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cData Char( 8 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_SOMASB8  = 0 
   SET @cAux1  = ' ' 
   SET @nDifSB2  = 0 
   SET @cProduto  = @IN_CODIGO 
   SET @cLocal  = @IN_LOCAL 
   SET @cData  = @IN_DATA 
   EXEC MAT011_17_01 @IN_MV_RASTRO , @cProduto , @cAux1 , @IN_FILIALCOR , @cRastroL output 
   IF  (@cRastroL  = '1' ) 
   BEGIN 
      SET @cAux  = 'SB1' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
      SET @cAux  = 'SB2' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
      SET @cAux  = 'SB8' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB8 output 
      SET @cAux  = 'SBJ' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SBJ output 
      SET @dtFech  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATA ),112 )
       
      -- Cursor declaration CUR_BJ
      DECLARE CUR_BJ insensitive  CURSOR FOR 
      SELECT B8_PRODUTO , B8_LOCAL , B8_LOTECTL , B8_NUMLOTE , B8_DATA , B8_DTVALID 
        FROM SB2010 SB2, SB1010 SB1, SB8010 SB8
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = B2_COD  and B8_LOCAL  = B2_LOCAL  and SB2.D_E_L_E_T_  = ' '  and SB1.D_E_L_E_T_  = ' ' 
         and SB8.D_E_L_E_T_  = ' ' 
      FOR READ ONLY 
       
      OPEN CUR_BJ
      FETCH CUR_BJ 
       INTO @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @dB8_DATA , @dB8_DTVALID 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nSaldoLote  = 0 
         SET @nSaldoLtUM  = 0 
         SET @cAux  = ' ' 
         SET @cAux1  = '1' 
         EXEC MAT029_17_01 @IN_FILIALCOR , @cB8_PRODUTO , @cB8_LOCAL , @dtFech , @cB8_LOTECTL , @cB8_NUMLOTE , @cAux , @cAux , 
                @cAux1 , @IN_MV_ULMES , @IN_300SALNEG , @IN_MV_WMSNEW , @cB8_PRODUTO , @nSaldoLote output , @nSaldoLtUM output , 
                @nSaldoLtUM output , @nSaldoLtUM output , @nSaldoLtUM output , @nSaldoLtUM output , @nSaldoLtUM output 
         IF @dB8_DATA  > @cData 
         BEGIN 
            IF @nSaldoLote  = 0 
            BEGIN 
               FETCH CUR_BJ 
                INTO @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @dB8_DATA , @dB8_DTVALID 
               CONTINUE 
            END 
            ELSE 
            BEGIN 
               IF @nSaldoLote  < 0  and @IN_300SALNEG  = '0' 
               BEGIN 
                  SET @nSaldoLote  = 0 
                  SET @nSaldoLtUM  = 0 
               END 
            END 
         END 
         SET @nAux  = 2 
         SET @nSaldoAux  = @nSaldoLtUM 
         EXEC MAT018_17_01 @cB8_PRODUTO , @IN_FILIALCOR , @nSaldoLote , @nSaldoAux , @nAux , @nSaldoLtUM output 
         IF  (@nSaldoLtUM  = 0  and @nSaldoAux  <> 0 ) 
         BEGIN 
            SET @nSaldoLtUM  = @nSaldoAux 
         END 
         SET @vRecno  = null 
         IF @IN_CONSULTA  = '1' 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM TRJ010_SP 
              WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cB8_PRODUTO  and BJ_LOCAL  = @cB8_LOCAL  and BJ_LOTECTL  = @cB8_LOTECTL 
               and BJ_NUMLOTE  = @cB8_NUMLOTE  and BJ_DATA  = @dtFech  and D_E_L_E_T_  = ' ' 
         END 
         ELSE 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM SBJ010 
              WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cB8_PRODUTO  and BJ_LOCAL  = @cB8_LOCAL  and BJ_LOTECTL  = @cB8_LOTECTL 
               and BJ_NUMLOTE  = @cB8_NUMLOTE  and BJ_DATA  = @dtFech  and D_E_L_E_T_  = ' ' 
         END 
         IF @vRecno is null 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               INSERT INTO TRJ010_SP (BJ_FILIAL , BJ_COD , BJ_LOCAL , BJ_LOTECTL , BJ_NUMLOTE , BJ_DATA , BJ_QINI , BJ_QISEGUM ) 
               VALUES (@cFil_SBJ , @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @cData , @nSaldoLote , @nSaldoLtUM );
            END 
            ELSE 
            BEGIN 
               SELECT @vRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SBJ010 
               IF @vRecno is null 
               BEGIN 
                  SET @vRecno  = 1 
               END 
               ELSE 
               BEGIN 
                  SET @vRecno  = @vRecno  + 1 
               END 
               IF @dB8_DTVALID  = ' ' 
               BEGIN 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                  INSERT INTO SBJ010 (BJ_FILIAL , BJ_COD , BJ_LOCAL , BJ_LOTECTL , BJ_NUMLOTE , BJ_DATA , BJ_QINI , BJ_QISEGUM , 
                         R_E_C_N_O_ ) 
                  VALUES (@cFil_SBJ , @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @cData , @nSaldoLote , @nSaldoLtUM , 
                         @vRecno );
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                  INSERT INTO SBJ010 (BJ_FILIAL , BJ_COD , BJ_LOCAL , BJ_LOTECTL , BJ_NUMLOTE , BJ_DATA , BJ_QINI , BJ_QISEGUM , 
                         BJ_DTVALID , R_E_C_N_O_ ) 
                  VALUES (@cFil_SBJ , @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @cData , @nSaldoLote , @nSaldoLtUM , 
                         @dB8_DTVALID , @vRecno );
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               UPDATE TRJ010_SP 
                 WITH (ROWLOCK) 
                  SET BJ_FILIAL  = @cFil_SBJ , BJ_COD  = @cB8_PRODUTO , BJ_LOCAL  = @cB8_LOCAL , BJ_LOTECTL  = @cB8_LOTECTL 
                 , BJ_NUMLOTE  = @cB8_NUMLOTE , BJ_DATA  = @cData , BJ_QINI  = @nSaldoLote , BJ_QISEGUM  = @nSaldoLtUM 
                WHERE R_E_C_N_O_  = @vRecno 
            END 
            ELSE 
            BEGIN 
               IF @dB8_DTVALID  = ' ' 
               BEGIN 
                  UPDATE SBJ010 
                    WITH (ROWLOCK) 
                     SET BJ_FILIAL  = @cFil_SBJ , BJ_COD  = @cB8_PRODUTO , BJ_LOCAL  = @cB8_LOCAL , BJ_LOTECTL  = @cB8_LOTECTL 
                    , BJ_NUMLOTE  = @cB8_NUMLOTE , BJ_DATA  = @cData , BJ_QINI  = @nSaldoLote , BJ_QISEGUM  = @nSaldoLtUM 
                    
                   WHERE R_E_C_N_O_  = @vRecno 
               END 
               ELSE 
               BEGIN 
                  UPDATE SBJ010 
                    WITH (ROWLOCK) 
                     SET BJ_FILIAL  = @cFil_SBJ , BJ_COD  = @cB8_PRODUTO , BJ_LOCAL  = @cB8_LOCAL , BJ_LOTECTL  = @cB8_LOTECTL 
                    , BJ_NUMLOTE  = @cB8_NUMLOTE , BJ_DATA  = @cData , BJ_QINI  = @nSaldoLote , BJ_QISEGUM  = @nSaldoLtUM 
                    , BJ_DTVALID  = @dB8_DTVALID 
                   WHERE R_E_C_N_O_  = @vRecno 
               END 
            END 
         END 
         SET @OUT_SOMASB8  = @OUT_SOMASB8  + @nSaldoLote 
         SET @nDifSB2  = @nDifSB2  + @nSaldoLote 
         FETCH CUR_BJ 
          INTO @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @dB8_DATA , @dB8_DTVALID 
      END 
      IF @IN_CONSULTA  <> '1'  and  (ROUND ( @IN_B2_QFIM , 6 ) - @IN_B2_QACLASS )  <> ROUND ( @nDifSB2 , 6 )
      BEGIN 
         SET @cAux  = 'SB8' 
         INSERT INTO TRC010_SP (TRC_FILIAL , TRC_COD , TRC_LOCAL , TRC_ALIAS , TRC_QFIM , TRC_DIVERG ) 
         VALUES (@IN_FILIALCOR , @cProduto , @cLocal , @cAux , @IN_B2_QFIM , @nDifSB2 );
      END 
      CLOSE CUR_BJ
      DEALLOCATE CUR_BJ
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT036_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT036_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT036_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT036_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CODIGO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_B2_QFIM Float , 
    @IN_B2_QACLASS Float , 
    @IN_CONSULTA Char( 01 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @OUT_SOMASB8 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB8 Char( 2)
DECLARE @cFil_SBJ Char( 2)
DECLARE @cRastroL Char( 01 )
DECLARE @cB8_PRODUTO Char( 15)
DECLARE @cB8_LOCAL Char( 2)
DECLARE @cB8_LOTECTL Char( 10)
DECLARE @cB8_NUMLOTE Char( 6)
DECLARE @dB8_DATA Char( 08 )
DECLARE @dB8_DTVALID Char( 08 )
DECLARE @nSaldoLote Float
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @nSaldoAux Float
DECLARE @dtFech Char( 08 )
DECLARE @vRecno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @cAux1 VarChar( 1 )
DECLARE @nAux Integer
DECLARE @nDifSB2 Float
DECLARE @iRecno Integer
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cData Char( 8 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_SOMASB8  = 0 
   SET @cAux1  = ' ' 
   SET @nDifSB2  = 0 
   SET @cProduto  = @IN_CODIGO 
   SET @cLocal  = @IN_LOCAL 
   SET @cData  = @IN_DATA 
   EXEC MAT011_17_02 @IN_MV_RASTRO , @cProduto , @cAux1 , @IN_FILIALCOR , @cRastroL output 
   IF  (@cRastroL  = '1' ) 
   BEGIN 
      SET @cAux  = 'SB1' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
      SET @cAux  = 'SB2' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
      SET @cAux  = 'SB8' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB8 output 
      SET @cAux  = 'SBJ' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SBJ output 
      SET @dtFech  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATA ),112 )
       
      -- Cursor declaration CUR_BJ
      DECLARE CUR_BJ insensitive  CURSOR FOR 
      SELECT B8_PRODUTO , B8_LOCAL , B8_LOTECTL , B8_NUMLOTE , B8_DATA , B8_DTVALID 
        FROM SB2030 SB2, SB1030 SB1, SB8030 SB8
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = B2_COD  and B8_LOCAL  = B2_LOCAL  and SB2.D_E_L_E_T_  = ' '  and SB1.D_E_L_E_T_  = ' ' 
         and SB8.D_E_L_E_T_  = ' ' 
      FOR READ ONLY 
       
      OPEN CUR_BJ
      FETCH CUR_BJ 
       INTO @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @dB8_DATA , @dB8_DTVALID 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nSaldoLote  = 0 
         SET @nSaldoLtUM  = 0 
         SET @cAux  = ' ' 
         SET @cAux1  = '1' 
         EXEC MAT029_17_02 @IN_FILIALCOR , @cB8_PRODUTO , @cB8_LOCAL , @dtFech , @cB8_LOTECTL , @cB8_NUMLOTE , @cAux , @cAux , 
                @cAux1 , @IN_MV_ULMES , @IN_300SALNEG , @IN_MV_WMSNEW , @cB8_PRODUTO , @nSaldoLote output , @nSaldoLtUM output , 
                @nSaldoLtUM output , @nSaldoLtUM output , @nSaldoLtUM output , @nSaldoLtUM output , @nSaldoLtUM output 
         IF @dB8_DATA  > @cData 
         BEGIN 
            IF @nSaldoLote  = 0 
            BEGIN 
               FETCH CUR_BJ 
                INTO @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @dB8_DATA , @dB8_DTVALID 
               CONTINUE 
            END 
            ELSE 
            BEGIN 
               IF @nSaldoLote  < 0  and @IN_300SALNEG  = '0' 
               BEGIN 
                  SET @nSaldoLote  = 0 
                  SET @nSaldoLtUM  = 0 
               END 
            END 
         END 
         SET @nAux  = 2 
         SET @nSaldoAux  = @nSaldoLtUM 
         EXEC MAT018_17_02 @cB8_PRODUTO , @IN_FILIALCOR , @nSaldoLote , @nSaldoAux , @nAux , @nSaldoLtUM output 
         IF  (@nSaldoLtUM  = 0  and @nSaldoAux  <> 0 ) 
         BEGIN 
            SET @nSaldoLtUM  = @nSaldoAux 
         END 
         SET @vRecno  = null 
         IF @IN_CONSULTA  = '1' 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM TRJ020_SP 
              WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cB8_PRODUTO  and BJ_LOCAL  = @cB8_LOCAL  and BJ_LOTECTL  = @cB8_LOTECTL 
               and BJ_NUMLOTE  = @cB8_NUMLOTE  and BJ_DATA  = @dtFech  and D_E_L_E_T_  = ' ' 
         END 
         ELSE 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM SBJ030 
              WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cB8_PRODUTO  and BJ_LOCAL  = @cB8_LOCAL  and BJ_LOTECTL  = @cB8_LOTECTL 
               and BJ_NUMLOTE  = @cB8_NUMLOTE  and BJ_DATA  = @dtFech  and D_E_L_E_T_  = ' ' 
         END 
         IF @vRecno is null 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               INSERT INTO TRJ020_SP (BJ_FILIAL , BJ_COD , BJ_LOCAL , BJ_LOTECTL , BJ_NUMLOTE , BJ_DATA , BJ_QINI , BJ_QISEGUM ) 
               VALUES (@cFil_SBJ , @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @cData , @nSaldoLote , @nSaldoLtUM );
            END 
            ELSE 
            BEGIN 
               SELECT @vRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SBJ030 
               IF @vRecno is null 
               BEGIN 
                  SET @vRecno  = 1 
               END 
               ELSE 
               BEGIN 
                  SET @vRecno  = @vRecno  + 1 
               END 
               IF @dB8_DTVALID  = ' ' 
               BEGIN 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                  INSERT INTO SBJ030 (BJ_FILIAL , BJ_COD , BJ_LOCAL , BJ_LOTECTL , BJ_NUMLOTE , BJ_DATA , BJ_QINI , BJ_QISEGUM , 
                         R_E_C_N_O_ ) 
                  VALUES (@cFil_SBJ , @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @cData , @nSaldoLote , @nSaldoLtUM , 
                         @vRecno );
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
               ELSE 
               BEGIN 
                  select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                  INSERT INTO SBJ030 (BJ_FILIAL , BJ_COD , BJ_LOCAL , BJ_LOTECTL , BJ_NUMLOTE , BJ_DATA , BJ_QINI , BJ_QISEGUM , 
                         BJ_DTVALID , R_E_C_N_O_ ) 
                  VALUES (@cFil_SBJ , @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @cData , @nSaldoLote , @nSaldoLtUM , 
                         @dB8_DTVALID , @vRecno );
                  
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               UPDATE TRJ020_SP 
                 WITH (ROWLOCK) 
                  SET BJ_FILIAL  = @cFil_SBJ , BJ_COD  = @cB8_PRODUTO , BJ_LOCAL  = @cB8_LOCAL , BJ_LOTECTL  = @cB8_LOTECTL 
                 , BJ_NUMLOTE  = @cB8_NUMLOTE , BJ_DATA  = @cData , BJ_QINI  = @nSaldoLote , BJ_QISEGUM  = @nSaldoLtUM 
                WHERE R_E_C_N_O_  = @vRecno 
            END 
            ELSE 
            BEGIN 
               IF @dB8_DTVALID  = ' ' 
               BEGIN 
                  UPDATE SBJ030 
                    WITH (ROWLOCK) 
                     SET BJ_FILIAL  = @cFil_SBJ , BJ_COD  = @cB8_PRODUTO , BJ_LOCAL  = @cB8_LOCAL , BJ_LOTECTL  = @cB8_LOTECTL 
                    , BJ_NUMLOTE  = @cB8_NUMLOTE , BJ_DATA  = @cData , BJ_QINI  = @nSaldoLote , BJ_QISEGUM  = @nSaldoLtUM 
                    
                   WHERE R_E_C_N_O_  = @vRecno 
               END 
               ELSE 
               BEGIN 
                  UPDATE SBJ030 
                    WITH (ROWLOCK) 
                     SET BJ_FILIAL  = @cFil_SBJ , BJ_COD  = @cB8_PRODUTO , BJ_LOCAL  = @cB8_LOCAL , BJ_LOTECTL  = @cB8_LOTECTL 
                    , BJ_NUMLOTE  = @cB8_NUMLOTE , BJ_DATA  = @cData , BJ_QINI  = @nSaldoLote , BJ_QISEGUM  = @nSaldoLtUM 
                    , BJ_DTVALID  = @dB8_DTVALID 
                   WHERE R_E_C_N_O_  = @vRecno 
               END 
            END 
         END 
         SET @OUT_SOMASB8  = @OUT_SOMASB8  + @nSaldoLote 
         SET @nDifSB2  = @nDifSB2  + @nSaldoLote 
         FETCH CUR_BJ 
          INTO @cB8_PRODUTO , @cB8_LOCAL , @cB8_LOTECTL , @cB8_NUMLOTE , @dB8_DATA , @dB8_DTVALID 
      END 
      IF @IN_CONSULTA  <> '1'  and  (ROUND ( @IN_B2_QFIM , 6 ) - @IN_B2_QACLASS )  <> ROUND ( @nDifSB2 , 6 )
      BEGIN 
         SET @cAux  = 'SB8' 
         INSERT INTO TRC020_SP (TRC_FILIAL , TRC_COD , TRC_LOCAL , TRC_ALIAS , TRC_QFIM , TRC_DIVERG ) 
         VALUES (@IN_FILIALCOR , @cProduto , @cLocal , @cAux , @IN_B2_QFIM , @nDifSB2 );
      END 
      CLOSE CUR_BJ
      DEALLOCATE CUR_BJ
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT037_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT037_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT037_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT037_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CODIGO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_B2_QFIM Float , 
    @IN_CONSULTA Char( 01 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @IN_cRASTRO Char( 01 ) , 
    @OUT_SOMASBF Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SBF Char( 2)
DECLARE @cFil_SBK Char( 2)
DECLARE @cFil_SDB Char( 2)
DECLARE @lLocaliz Char( 01 )
DECLARE @cXX_PRODUTO Char( 15)
DECLARE @cXX_LOCAL Char( 2)
DECLARE @cXX_LOTECTL Char( 10)
DECLARE @cXX_NUMLOTE Char( 6)
DECLARE @cXX_LOCALIZ Char( 15)
DECLARE @cXX_NUMSERI Char( 20)
DECLARE @nSaldoLote Float
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @nSaldoAux Float
DECLARE @nSaldo2 Float
DECLARE @nSaldo3 Float
DECLARE @nSaldo4 Float
DECLARE @nSaldo5 Float
DECLARE @nSaldo6 Float
DECLARE @dtFech Char( 08 )
DECLARE @vRecno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nDifSB2 Float
DECLARE @iRecno Integer
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cData Char( 8 )
DECLARE @cMV_ULMES Char( 8 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_SOMASBF  = 0 
   SET @nDifSB2  = 0 
   SET @cProduto  = @IN_CODIGO 
   SET @cLocal  = @IN_LOCAL 
   SET @cData  = @IN_DATA 
   SET @cMV_ULMES  = @IN_MV_ULMES 
   EXEC MAT012_17_01 @cProduto , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
   IF @lLocaliz  = '1' 
   BEGIN 
      SET @cAux  = 'SB1' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
      SET @cAux  = 'SB2' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
      SET @cAux  = 'SBF' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SBF output 
      SET @cAux  = 'SBK' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SBK output 
      SET @cAux  = 'SDB' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SDB output 
      SET @dtFech  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATA ),112 )
       
      -- Cursor declaration CUR_BK1
      DECLARE CUR_BK1 insensitive  CURSOR FOR 
      SELECT BF_PRODUTO , BF_LOCAL , BF_LOTECTL , BF_NUMLOTE , BF_LOCALIZ , BF_NUMSERI 
        FROM SB2010 SB2, SB1010 SB1, SBF010 SBF
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = B2_COD  and BF_LOCAL  = B2_LOCAL  and  (BF_QUANT  > 0  and @IN_300SALNEG  = '0' 
        )  and SB2.D_E_L_E_T_  = ' '  and SB1.D_E_L_E_T_  = ' '  and SBF.D_E_L_E_T_  = ' ' 
      UNION 
      SELECT DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_LOCALIZ , DB_NUMSERI 
        FROM SB2010 SB2, SB1010 SB1, SDB010 SDB
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = B2_COD  and DB_LOCAL  = B2_LOCAL  and  ( (@IN_cRASTRO  = '1'  and DB_LOTECTL  <> ' ' 
        )  or  (@IN_cRASTRO  <> '1'  and DB_LOTECTL  = ' ' ) )  and DB_DATA  between @cMV_ULMES and @cData  and DB_ESTORNO  = ' ' 
         and SB2.D_E_L_E_T_  = ' '  and SB1.D_E_L_E_T_  = ' '  and SDB.D_E_L_E_T_  = ' ' 
      UNION 
      SELECT BK_COD , BK_LOCAL , BK_LOTECTL , BK_NUMLOTE , BK_LOCALIZ , BK_NUMSERI 
        FROM SB2010 SB2, SB1010 SB1, SBK010 SBK
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and BK_FILIAL  = @cFil_SBK  and BK_COD  = B2_COD  and BK_LOCAL  = B2_LOCAL  and  ( (@IN_cRASTRO  = '1'  and BK_LOTECTL  <> ' ' 
        )  or  (@IN_cRASTRO  <> '1'  and BK_LOTECTL  = ' ' ) )  and BK_DATA  >= @cMV_ULMES  and BK_DATA  < @cData  and SB2.D_E_L_E_T_  = ' ' 
         and SB1.D_E_L_E_T_  = ' '  and SBK.D_E_L_E_T_  = ' ' 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_BK1
      FETCH CUR_BK1 
       INTO @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nSaldoLote  = 0 
         SET @nSaldoLtUM  = 0 
         SET @cAux  = '1' 
         EXEC MAT029_17_01 @IN_FILIALCOR , @cXX_PRODUTO , @cXX_LOCAL , @dtFech , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , 
                @cXX_NUMSERI , @cAux , @IN_MV_ULMES , @IN_300SALNEG , @IN_MV_WMSNEW , @cXX_PRODUTO , @nSaldoLote output , 
                @nSaldo2 output , @nSaldo3 output , @nSaldo4 output , @nSaldo5 output , @nSaldo6 output , @nSaldoLtUM output 
         SET @nAux  = 2 
         SET @nSaldoAux  = @nSaldoLtUM 
         EXEC MAT018_17_01 @cXX_PRODUTO , @IN_FILIALCOR , @nSaldoLote , @nSaldoAux , @nAux , @nSaldoLtUM output 
         IF  (@nSaldoLtUM  = 0  and @nSaldoAux  <> 0 ) 
         BEGIN 
            SET @nSaldoLtUM  = @nSaldoAux 
         END 
         SET @vRecno  = null 
         IF @IN_CONSULTA  = '1' 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM TRK010_SP 
              WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cXX_PRODUTO  and BK_LOCAL  = @cXX_LOCAL  and BK_LOTECTL  = @cXX_LOTECTL 
               and BK_NUMLOTE  = @cXX_NUMLOTE  and BK_LOCALIZ  = @cXX_LOCALIZ  and BK_NUMSERI  = @cXX_NUMSERI  and BK_DATA  = @cData 
               and D_E_L_E_T_  = ' ' 
         END 
         ELSE 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM SBK010 
              WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cXX_PRODUTO  and BK_LOCAL  = @cXX_LOCAL  and BK_LOTECTL  = @cXX_LOTECTL 
               and BK_NUMLOTE  = @cXX_NUMLOTE  and BK_LOCALIZ  = @cXX_LOCALIZ  and BK_NUMSERI  = @cXX_NUMSERI  and BK_DATA  = @cData 
               and D_E_L_E_T_  = ' ' 
         END 
         IF @nSaldoLtUM is null 
         BEGIN 
            SET @nSaldoLtUM  = 0 
         END 
         IF @vRecno is null 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               INSERT INTO TRK010_SP (BK_FILIAL , BK_COD , BK_LOCAL , BK_LOTECTL , BK_NUMLOTE , BK_LOCALIZ , BK_NUMSERI , BK_DATA , 
                      BK_QINI , BK_QISEGUM ) 
               VALUES (@cFil_SBK , @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI , 
                      @cData , @nSaldoLote , @nSaldoLtUM );
            END 
            ELSE 
            BEGIN 
               SELECT @vRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SBK010 
               IF @vRecno is null 
               BEGIN 
                  SET @vRecno  = 1 
               END 
               ELSE 
               BEGIN 
                  SET @vRecno  = @vRecno  + 1 
               END 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
               INSERT INTO SBK010 (BK_FILIAL , BK_COD , BK_LOCAL , BK_LOTECTL , BK_NUMLOTE , BK_LOCALIZ , BK_NUMSERI , BK_DATA , 
                      BK_QINI , BK_QISEGUM , R_E_C_N_O_ ) 
               VALUES (@cFil_SBK , @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI , 
                      @cData , @nSaldoLote , @nSaldoLtUM , @vRecno );
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               UPDATE TRK010_SP 
                 WITH (ROWLOCK) 
                  SET BK_FILIAL  = @cFil_SBK , BK_COD  = @cXX_PRODUTO , BK_LOCAL  = @cXX_LOCAL , BK_LOTECTL  = @cXX_LOTECTL 
                 , BK_NUMLOTE  = @cXX_NUMLOTE , BK_LOCALIZ  = @cXX_LOCALIZ , BK_NUMSERI  = @cXX_NUMSERI , BK_DATA  = @cData 
                 , BK_QINI  = @nSaldoLote , BK_QISEGUM  = @nSaldoLtUM 
                WHERE R_E_C_N_O_  = @vRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SBK010 
                 WITH (ROWLOCK) 
                  SET BK_FILIAL  = @cFil_SBK , BK_COD  = @cXX_PRODUTO , BK_LOCAL  = @cXX_LOCAL , BK_LOTECTL  = @cXX_LOTECTL 
                 , BK_NUMLOTE  = @cXX_NUMLOTE , BK_LOCALIZ  = @cXX_LOCALIZ , BK_NUMSERI  = @cXX_NUMSERI , BK_DATA  = @cData 
                 , BK_QINI  = @nSaldoLote , BK_QISEGUM  = @nSaldoLtUM 
                WHERE R_E_C_N_O_  = @vRecno 
            END 
         END 
         SET @OUT_SOMASBF  = @OUT_SOMASBF  + @nSaldoLote 
         SET @nDifSB2  = @nDifSB2  + @nSaldoLote 
         FETCH CUR_BK1 
          INTO @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI 
      END 
      IF @IN_CONSULTA  <> '1'  and ROUND ( @nDifSB2 , 6 ) > ROUND ( @IN_B2_QFIM , 6 )
      BEGIN 
         SET @cAux  = 'SBF' 
         INSERT INTO TRC010_SP (TRC_FILIAL , TRC_COD , TRC_LOCAL , TRC_ALIAS , TRC_QFIM , TRC_DIVERG ) 
         VALUES (@IN_FILIALCOR , @cProduto , @cLocal , @cAux , @IN_B2_QFIM , @nDifSB2 );
      END 
      CLOSE CUR_BK1
      DEALLOCATE CUR_BK1
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT037_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT037_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT037_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT037_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CODIGO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_B2_QFIM Float , 
    @IN_CONSULTA Char( 01 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @IN_cRASTRO Char( 01 ) , 
    @OUT_SOMASBF Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SBF Char( 2)
DECLARE @cFil_SBK Char( 2)
DECLARE @cFil_SDB Char( 2)
DECLARE @lLocaliz Char( 01 )
DECLARE @cXX_PRODUTO Char( 15)
DECLARE @cXX_LOCAL Char( 2)
DECLARE @cXX_LOTECTL Char( 10)
DECLARE @cXX_NUMLOTE Char( 6)
DECLARE @cXX_LOCALIZ Char( 15)
DECLARE @cXX_NUMSERI Char( 20)
DECLARE @nSaldoLote Float
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @nSaldoAux Float
DECLARE @nSaldo2 Float
DECLARE @nSaldo3 Float
DECLARE @nSaldo4 Float
DECLARE @nSaldo5 Float
DECLARE @nSaldo6 Float
DECLARE @dtFech Char( 08 )
DECLARE @vRecno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nDifSB2 Float
DECLARE @iRecno Integer
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cData Char( 8 )
DECLARE @cMV_ULMES Char( 8 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_SOMASBF  = 0 
   SET @nDifSB2  = 0 
   SET @cProduto  = @IN_CODIGO 
   SET @cLocal  = @IN_LOCAL 
   SET @cData  = @IN_DATA 
   SET @cMV_ULMES  = @IN_MV_ULMES 
   EXEC MAT012_17_02 @cProduto , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
   IF @lLocaliz  = '1' 
   BEGIN 
      SET @cAux  = 'SB1' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
      SET @cAux  = 'SB2' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
      SET @cAux  = 'SBF' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SBF output 
      SET @cAux  = 'SBK' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SBK output 
      SET @cAux  = 'SDB' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SDB output 
      SET @dtFech  = CONVERT( Char( 08 ) ,DATEADD ( DAY , 1 , @IN_DATA ),112 )
       
      -- Cursor declaration CUR_BK1
      DECLARE CUR_BK1 insensitive  CURSOR FOR 
      SELECT BF_PRODUTO , BF_LOCAL , BF_LOTECTL , BF_NUMLOTE , BF_LOCALIZ , BF_NUMSERI 
        FROM SB2030 SB2, SB1030 SB1, SBF030 SBF
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = B2_COD  and BF_LOCAL  = B2_LOCAL  and  (BF_QUANT  > 0  and @IN_300SALNEG  = '0' 
        )  and SB2.D_E_L_E_T_  = ' '  and SB1.D_E_L_E_T_  = ' '  and SBF.D_E_L_E_T_  = ' ' 
      UNION 
      SELECT DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_LOCALIZ , DB_NUMSERI 
        FROM SB2030 SB2, SB1030 SB1, SDB030 SDB
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = B2_COD  and DB_LOCAL  = B2_LOCAL  and  ( (@IN_cRASTRO  = '1'  and DB_LOTECTL  <> ' ' 
        )  or  (@IN_cRASTRO  <> '1'  and DB_LOTECTL  = ' ' ) )  and DB_DATA  between @cMV_ULMES and @cData  and DB_ESTORNO  = ' ' 
         and SB2.D_E_L_E_T_  = ' '  and SB1.D_E_L_E_T_  = ' '  and SDB.D_E_L_E_T_  = ' ' 
      UNION 
      SELECT BK_COD , BK_LOCAL , BK_LOTECTL , BK_NUMLOTE , BK_LOCALIZ , BK_NUMSERI 
        FROM SB2030 SB2, SB1030 SB1, SBK030 SBK
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and B1_FILIAL  = @cFil_SB1  and B1_COD  = B2_COD 
         and BK_FILIAL  = @cFil_SBK  and BK_COD  = B2_COD  and BK_LOCAL  = B2_LOCAL  and  ( (@IN_cRASTRO  = '1'  and BK_LOTECTL  <> ' ' 
        )  or  (@IN_cRASTRO  <> '1'  and BK_LOTECTL  = ' ' ) )  and BK_DATA  >= @cMV_ULMES  and BK_DATA  < @cData  and SB2.D_E_L_E_T_  = ' ' 
         and SB1.D_E_L_E_T_  = ' '  and SBK.D_E_L_E_T_  = ' ' 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 
      FOR READ ONLY 
       
      OPEN CUR_BK1
      FETCH CUR_BK1 
       INTO @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nSaldoLote  = 0 
         SET @nSaldoLtUM  = 0 
         SET @cAux  = '1' 
         EXEC MAT029_17_02 @IN_FILIALCOR , @cXX_PRODUTO , @cXX_LOCAL , @dtFech , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , 
                @cXX_NUMSERI , @cAux , @IN_MV_ULMES , @IN_300SALNEG , @IN_MV_WMSNEW , @cXX_PRODUTO , @nSaldoLote output , 
                @nSaldo2 output , @nSaldo3 output , @nSaldo4 output , @nSaldo5 output , @nSaldo6 output , @nSaldoLtUM output 
         SET @nAux  = 2 
         SET @nSaldoAux  = @nSaldoLtUM 
         EXEC MAT018_17_02 @cXX_PRODUTO , @IN_FILIALCOR , @nSaldoLote , @nSaldoAux , @nAux , @nSaldoLtUM output 
         IF  (@nSaldoLtUM  = 0  and @nSaldoAux  <> 0 ) 
         BEGIN 
            SET @nSaldoLtUM  = @nSaldoAux 
         END 
         SET @vRecno  = null 
         IF @IN_CONSULTA  = '1' 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM TRK020_SP 
              WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cXX_PRODUTO  and BK_LOCAL  = @cXX_LOCAL  and BK_LOTECTL  = @cXX_LOTECTL 
               and BK_NUMLOTE  = @cXX_NUMLOTE  and BK_LOCALIZ  = @cXX_LOCALIZ  and BK_NUMSERI  = @cXX_NUMSERI  and BK_DATA  = @cData 
               and D_E_L_E_T_  = ' ' 
         END 
         ELSE 
         BEGIN 
            SELECT @vRecno  = R_E_C_N_O_ 
              FROM SBK030 
              WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cXX_PRODUTO  and BK_LOCAL  = @cXX_LOCAL  and BK_LOTECTL  = @cXX_LOTECTL 
               and BK_NUMLOTE  = @cXX_NUMLOTE  and BK_LOCALIZ  = @cXX_LOCALIZ  and BK_NUMSERI  = @cXX_NUMSERI  and BK_DATA  = @cData 
               and D_E_L_E_T_  = ' ' 
         END 
         IF @nSaldoLtUM is null 
         BEGIN 
            SET @nSaldoLtUM  = 0 
         END 
         IF @vRecno is null 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               INSERT INTO TRK020_SP (BK_FILIAL , BK_COD , BK_LOCAL , BK_LOTECTL , BK_NUMLOTE , BK_LOCALIZ , BK_NUMSERI , BK_DATA , 
                      BK_QINI , BK_QISEGUM ) 
               VALUES (@cFil_SBK , @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI , 
                      @cData , @nSaldoLote , @nSaldoLtUM );
            END 
            ELSE 
            BEGIN 
               SELECT @vRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SBK030 
               IF @vRecno is null 
               BEGIN 
                  SET @vRecno  = 1 
               END 
               ELSE 
               BEGIN 
                  SET @vRecno  = @vRecno  + 1 
               END 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
               INSERT INTO SBK030 (BK_FILIAL , BK_COD , BK_LOCAL , BK_LOTECTL , BK_NUMLOTE , BK_LOCALIZ , BK_NUMSERI , BK_DATA , 
                      BK_QINI , BK_QISEGUM , R_E_C_N_O_ ) 
               VALUES (@cFil_SBK , @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI , 
                      @cData , @nSaldoLote , @nSaldoLtUM , @vRecno );
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CONSULTA  = '1' 
            BEGIN 
               UPDATE TRK020_SP 
                 WITH (ROWLOCK) 
                  SET BK_FILIAL  = @cFil_SBK , BK_COD  = @cXX_PRODUTO , BK_LOCAL  = @cXX_LOCAL , BK_LOTECTL  = @cXX_LOTECTL 
                 , BK_NUMLOTE  = @cXX_NUMLOTE , BK_LOCALIZ  = @cXX_LOCALIZ , BK_NUMSERI  = @cXX_NUMSERI , BK_DATA  = @cData 
                 , BK_QINI  = @nSaldoLote , BK_QISEGUM  = @nSaldoLtUM 
                WHERE R_E_C_N_O_  = @vRecno 
            END 
            ELSE 
            BEGIN 
               UPDATE SBK030 
                 WITH (ROWLOCK) 
                  SET BK_FILIAL  = @cFil_SBK , BK_COD  = @cXX_PRODUTO , BK_LOCAL  = @cXX_LOCAL , BK_LOTECTL  = @cXX_LOTECTL 
                 , BK_NUMLOTE  = @cXX_NUMLOTE , BK_LOCALIZ  = @cXX_LOCALIZ , BK_NUMSERI  = @cXX_NUMSERI , BK_DATA  = @cData 
                 , BK_QINI  = @nSaldoLote , BK_QISEGUM  = @nSaldoLtUM 
                WHERE R_E_C_N_O_  = @vRecno 
            END 
         END 
         SET @OUT_SOMASBF  = @OUT_SOMASBF  + @nSaldoLote 
         SET @nDifSB2  = @nDifSB2  + @nSaldoLote 
         FETCH CUR_BK1 
          INTO @cXX_PRODUTO , @cXX_LOCAL , @cXX_LOTECTL , @cXX_NUMLOTE , @cXX_LOCALIZ , @cXX_NUMSERI 
      END 
      IF @IN_CONSULTA  <> '1'  and ROUND ( @nDifSB2 , 6 ) > ROUND ( @IN_B2_QFIM , 6 )
      BEGIN 
         SET @cAux  = 'SBF' 
         INSERT INTO TRC020_SP (TRC_FILIAL , TRC_COD , TRC_LOCAL , TRC_ALIAS , TRC_QFIM , TRC_DIVERG ) 
         VALUES (@IN_FILIALCOR , @cProduto , @cLocal , @cAux , @IN_B2_QFIM , @nDifSB2 );
      END 
      CLOSE CUR_BK1
      DEALLOCATE CUR_BK1
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT038_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT038_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT038_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT038_17_01]
(
    @IN_FILIALLOGIN Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_THREAD Char( 02 ) , 
    @IN_DATA Char( 08 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_MV_PAR02 Integer , 
    @IN_MV_CUSZERO Char( 01 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_MV_CUSMED Char( 01 ) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_CUSEMP Char( 01 ) , 
    @IN_MV_PAR04 Integer , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB9 Char( 2)
DECLARE @lIntDl Char( 01 )
DECLARE @cB2_COD Char( 15)
DECLARE @cB2_LOCAL Char( 2)
DECLARE @SB2_RECNO Integer
DECLARE @vRecno Integer
DECLARE @nB2_QFIM Decimal( 12 , 2 )
DECLARE @nB2_QFIM2 Decimal( 12 , 2 )
DECLARE @nB2_VFIM1 Decimal( 14 , 2 )
DECLARE @nB2_VFIM2 Decimal( 14 , 2 )
DECLARE @nB2_VFIM3 Decimal( 14 , 2 )
DECLARE @nB2_VFIM4 Decimal( 14 , 2 )
DECLARE @nB2_VFIM5 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nB2_QACLASS Decimal( 12 , 2 )
DECLARE @nB1_CONV Decimal( 5 , 2 )
DECLARE @nB1_CUSTD Decimal( 12 , 2 )
DECLARE @cB1_MCUSTD Char( 1)
DECLARE @nB2_CMFIM1 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM2 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM3 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM4 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM5 Decimal( 14 , 4 )
DECLARE @nB2_CMRP1 Decimal( 14 , 4 )
DECLARE @nB2_CMRP2 Decimal( 14 , 4 )
DECLARE @nB2_CMRP3 Decimal( 14 , 4 )
DECLARE @nB2_CMRP4 Decimal( 14 , 4 )
DECLARE @nB2_CMRP5 Decimal( 14 , 4 )
DECLARE @nB2_VFRP1 Decimal( 14 , 2 )
DECLARE @nB2_VFRP2 Decimal( 14 , 2 )
DECLARE @nB2_VFRP3 Decimal( 14 , 2 )
DECLARE @nB2_VFRP4 Decimal( 14 , 2 )
DECLARE @nB2_VFRP5 Decimal( 14 , 2 )
DECLARE @nRetAtuComB2 Float
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @dtFech Char( 08 )
DECLARE @lFatConv Char( 01 )
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nAux1 Integer
DECLARE @cFatConvAux Char( 01 )
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @cRastro Char( 01 )
DECLARE @cLocaliza Char( 01 )
DECLARE @nResult Char( 01 )
DECLARE @nMod Integer
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cB1_RASTRO Char( 1)
DECLARE @cB1_LOCALIZ Char( 1)
DECLARE @cFilialLogin Char( 2)
DECLARE @cFilialCor Char( 2)
DECLARE @cThread Char( 02 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @dtFech  = @IN_DATA 
   SET @lFatConv  = '0' 
   SET @OUT_RESULTADO  = '0' 
   SET @cFilialLogin  = @IN_FILIALLOGIN 
   SET @cFilialCor  = @IN_FILIALCOR 
   SET @cThread  = @IN_THREAD 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_M280
   DECLARE CUR_M280 insensitive  CURSOR FOR 
   SELECT B2_COD , B2_LOCAL , B2_SB2RECN , B2_QFIM , B2_VFIM1 , B2_VFIM2 , B2_VFIM3 , B2_VFIM4 , B2_VFIM5 , B2_VFIMFF1 , 
          B2_VFIMFF2 , B2_VFIMFF3 , B2_VFIMFF4 , B2_VFIMFF5 , B1_CONV , B1_CUSTD , B1_MCUSTD , B2_QFIM2 , B2_QACLASS , B2_CMFIM1 , 
          B2_CMFIM2 , B2_CMFIM3 , B2_CMFIM4 , B2_CMFIM5 , B2_CMRP1 , B2_CMRP2 , B2_CMRP3 , B2_CMRP4 , B2_CMRP5 , B2_VFRP1 , 
          B2_VFRP2 , B2_VFRP3 , B2_VFRP4 , B2_VFRP5 , B1_CCCUSTO , B1_RASTRO , B1_LOCALIZ 
     FROM TRB010_SPMATA280 TRB
     WHERE FILIAL  = @cFilialCor  and FILLOG  = @cFilialLogin  and THREAD  = @cThread 
   FOR READ ONLY 
    
   OPEN CUR_M280
   FETCH CUR_M280 
    INTO @cB2_COD , @cB2_LOCAL , @SB2_RECNO , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
          @nB2_VFIMFF1 , @nB2_VFIMFF2 , @nB2_VFIMFF3 , @nB2_VFIMFF4 , @nB2_VFIMFF5 , @nB1_CONV , @nB1_CUSTD , @cB1_MCUSTD , 
          @nB2_QFIM2 , @nB2_QACLASS , @nB2_CMFIM1 , @nB2_CMFIM2 , @nB2_CMFIM3 , @nB2_CMFIM4 , @nB2_CMFIM5 , @nB2_CMRP1 , 
          @nB2_CMRP2 , @nB2_CMRP3 , @nB2_CMRP4 , @nB2_CMRP5 , @nB2_VFRP1 , @nB2_VFRP2 , @nB2_VFRP3 , @nB2_VFRP4 , @nB2_VFRP5 , 
          @cB1_CCCUSTO , @cB1_RASTRO , @cB1_LOCALIZ 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nSaldoLtUM  = 0 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      SET @nMod  = 0 
      IF SUBSTRING ( @cB2_COD , 1 , 3 ) = 'MOD' 
      BEGIN 
         SET @nMod  = 1 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PRODMOD  = '1' 
         BEGIN 
            IF @cB1_CCCUSTO  <> ' ' 
            BEGIN 
               SET @nMod  = 1 
            END 
         END 
      END 
      IF @nMod  = 1  and @IN_MV_PAR04  = 1 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_QATU  =  (B2_QATU  - B2_QFIM ) , B2_QFIM  = 0 , B2_VATU1  =  (B2_QATU  * B2_CM1 ) , B2_VFIM1  = 0 , B2_VATU2  =  (B2_QATU  * B2_CM2 
           ) , B2_VFIM2  = 0 , B2_VATU3  =  (B2_QATU  * B2_CM3 ) , B2_VFIM3  = 0 , B2_VATU4  =  (B2_QATU  * B2_CM4 ) , B2_VFIM4  = 0 
           , B2_VATU5  =  (B2_QATU  * B2_CM5 ) , B2_VFIM5  = 0 , B2_CMFIM1  = 0 , B2_CMFIM2  = 0 , B2_CMFIM3  = 0 , B2_CMFIM4  = 0 
           , B2_CMFIM5  = 0 , B2_CMRP1  = 0 , B2_CMRP2  = 0 , B2_CMRP3  = 0 , B2_CMRP4  = 0 , B2_CMRP5  = 0 , B2_VFRP1  = 0 
           , B2_VFRP2  = 0 , B2_VFRP3  = 0 , B2_VFRP4  = 0 , B2_VFRP5  = 0 
          WHERE R_E_C_N_O_  = @SB2_RECNO 
         IF @IN_MV_CUSMED  = '1'  and  (@IN_MV_CUSFIL  = '1'  or @IN_MV_CUSEMP  = '1' ) 
         BEGIN 
            EXEC MAT050_17_01 @IN_FILIALCOR , @cB2_COD , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nResult output 
         END 
         SET @nB2_QFIM  = 0 
         SET @nB2_QFIM2  = 0 
         SET @nB2_VFIM1  = 0 
         SET @nB2_VFIM2  = 0 
         SET @nB2_VFIM3  = 0 
         SET @nB2_VFIM4  = 0 
         SET @nB2_VFIM5  = 0 
      END 
      IF @nMod  = 0  or @IN_MV_PAR02  = 1 
      BEGIN 
         SET @vRecno  = null 
         SELECT @vRecno  = R_E_C_N_O_ 
           FROM SB9010 
           WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @cB2_COD  and B9_LOCAL  = @cB2_LOCAL  and B9_DATA  = @dtFech  and D_E_L_E_T_  = ' ' 
           
         SET @lFatConv  = '0' 
         IF @nB1_CONV  <> 0 
         BEGIN 
            SET @lFatConv  = '1' 
         END 
         SET @cFatConvAux  = @lFatConv 
         EXEC MA280CON_01 @cB2_COD , @cFatConvAux , @lFatConv output 
         SET @nSaldoLtUM  = @nB2_QFIM2 
         IF @lFatConv  = '1' 
         BEGIN 
            SET @nAux  = 0 
            SET @nAux1  = 2 
            EXEC MAT018_17_01 @cB2_COD , @IN_FILIALCOR , @nB2_QFIM , @nAux , @nAux1 , @nSaldoLtUM output 
            IF  (@nSaldoLtUM  = 0  and @nB2_QFIM2  <> 0 ) 
            BEGIN 
               SET @nSaldoLtUM  = @nB2_QFIM2 
            END 
         END 
         SET @cRastro  = ' ' 
         SET @cAux  = ' ' 
         SET @cRastro  = @cB1_RASTRO 
         SET @cLocaliza  = @cB1_LOCALIZ 
         IF  (@cRastro  = '1'  or @cLocaliza  = '1' )  and @nB2_QFIM  < 0  and @IN_300SALNEG  = '0' 
         BEGIN 
            SET @nB2_QFIM  = 0 
            SET @nB2_QFIM2  = 0 
            SET @nB2_VFIM1  = 0 
            SET @nB2_VFIM2  = 0 
            SET @nB2_VFIM3  = 0 
            SET @nB2_VFIM4  = 0 
            SET @nB2_VFIM5  = 0 
         END 
         IF @vRecno is null 
         BEGIN 
            SELECT @vRecno  = MAX ( R_E_C_N_O_ )
              FROM SB9010 
            IF @vRecno is null 
            BEGIN 
               SET @vRecno  = 1 
            END 
            ELSE 
            BEGIN 
               SET @vRecno  = @vRecno  + 1 
            END 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO SB9010 (B9_FILIAL , B9_COD , B9_LOCAL , B9_DATA , B9_QINI , B9_QISEGUM , B9_VINI1 , B9_VINI2 , B9_VINI3 , 
                   B9_VINI4 , B9_VINI5 , B9_VINIFF1 , B9_VINIFF2 , B9_VINIFF3 , B9_VINIFF4 , B9_VINIFF5 , B9_CUSTD , B9_MCUSTD , 
                   B9_CM1 , B9_CM2 , B9_CM3 , B9_CM4 , B9_CM5 , B9_CMRP1 , B9_CMRP2 , B9_CMRP3 , B9_CMRP4 , B9_CMRP5 , B9_VINIRP1 , 
                   B9_VINIRP2 , B9_VINIRP3 , B9_VINIRP4 , B9_VINIRP5 , R_E_C_N_O_ ) 
            VALUES (@cFil_SB9 , @cB2_COD , @cB2_LOCAL , @dtFech , @nB2_QFIM , @nSaldoLtUM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , 
                   @nB2_VFIM4 , @nB2_VFIM5 , @nB2_VFIMFF1 , @nB2_VFIMFF2 , @nB2_VFIMFF3 , @nB2_VFIMFF4 , @nB2_VFIMFF5 , @nB1_CUSTD , 
                   @cB1_MCUSTD , @nB2_CMFIM1 , @nB2_CMFIM2 , @nB2_CMFIM3 , @nB2_CMFIM4 , @nB2_CMFIM5 , @nB2_CMRP1 , @nB2_CMRP2 , 
                   @nB2_CMRP3 , @nB2_CMRP4 , @nB2_CMRP5 , @nB2_VFRP1 , @nB2_VFRP2 , @nB2_VFRP3 , @nB2_VFRP4 , @nB2_VFRP5 , 
                   @vRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE SB9010 
              WITH (ROWLOCK) 
               SET B9_QINI  = @nB2_QFIM , B9_QISEGUM  = @nSaldoLtUM , B9_VINI1  = @nB2_VFIM1 , B9_VINI2  = @nB2_VFIM2 , B9_VINI3  = @nB2_VFIM3 
              , B9_VINI4  = @nB2_VFIM4 , B9_VINI5  = @nB2_VFIM5 , B9_DATA  = @dtFech , B9_VINIFF1  = @nB2_VFIMFF1 , B9_VINIFF2  = @nB2_VFIMFF2 
              , B9_VINIFF3  = @nB2_VFIMFF3 , B9_VINIFF4  = @nB2_VFIMFF4 , B9_VINIFF5  = @nB2_VFIMFF5 , B9_CUSTD  = @nB1_CUSTD 
              , B9_MCUSTD  = @cB1_MCUSTD , B9_CM1  = @nB2_CMFIM1 , B9_CM2  = @nB2_CMFIM2 , B9_CM3  = @nB2_CMFIM3 , B9_CM4  = @nB2_CMFIM4 
              , B9_CM5  = @nB2_CMFIM5 , B9_CMRP1  = @nB2_CMRP1 , B9_CMRP2  = @nB2_CMRP2 , B9_CMRP3  = @nB2_CMRP3 , B9_CMRP4  = @nB2_CMRP4 
              , B9_CMRP5  = @nB2_CMRP5 , B9_VINIRP1  = @nB2_VFRP1 , B9_VINIRP2  = @nB2_VFRP2 , B9_VINIRP3  = @nB2_VFRP3 , 
                   B9_VINIRP4  = @nB2_VFRP4 , B9_VINIRP5  = @nB2_VFRP5 
             WHERE R_E_C_N_O_  = @vRecno 
         END 
         EXEC MA280INB9CP_01 @IN_FILIALCOR , @cB2_COD , @IN_MV_CUSZERO , @vRecno , @SB2_RECNO , @nB2_QFIM , @nB2_VFIM1 , 
                @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 
         EXEC M280SB9_01 @IN_FILIALCOR , @cB2_COD , @cB2_LOCAL 
         EXEC MAT036_17_01 @IN_FILIALCOR , @IN_DATA , @cB2_COD , @cB2_LOCAL , @IN_MV_RASTRO , @IN_MV_ULMES , @IN_300SALNEG , 
                @nB2_QFIM , @nB2_QACLASS , '0' , @IN_FILSEQ , @IN_MV_WMSNEW , @nRetAtuComB2 output 
         IF @cLocaliza  = '1' 
         BEGIN 
            IF @IN_MV_WMSNEW  = '1' 
            BEGIN 
               EXEC MAT057_17_01 @cB2_COD , @IN_FILIALCOR , @lIntDl output 
            END 
            ELSE 
            BEGIN 
               SET @lIntDl  = '0' 
            END 
         END 
         IF  (@IN_MV_WMSNEW  = '1'  and @lIntDl  = '1' ) 
         BEGIN 
            EXEC MAT058_17_01 @IN_FILIALCOR , @IN_DATA , @cB2_COD , @cB2_LOCAL , @IN_MV_ULMES , @IN_300SALNEG , @nB2_QFIM , 
                   '0' , @IN_FILSEQ , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @nRetAtuComB2 output 
         END 
         ELSE 
         BEGIN 
            EXEC MAT037_17_01 @IN_FILIALCOR , @IN_DATA , @cB2_COD , @cB2_LOCAL , @IN_MV_ULMES , @IN_300SALNEG , @nB2_QFIM , 
                   '0' , @IN_FILSEQ , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @cRastro , @nRetAtuComB2 output 
         END 
         IF @nContador  > 1023 
         BEGIN 
            Commit Transaction 
            SET @nContador  = 0 
         END 
      END 
      FETCH CUR_M280 
       INTO @cB2_COD , @cB2_LOCAL , @SB2_RECNO , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
             @nB2_VFIMFF1 , @nB2_VFIMFF2 , @nB2_VFIMFF3 , @nB2_VFIMFF4 , @nB2_VFIMFF5 , @nB1_CONV , @nB1_CUSTD , @cB1_MCUSTD , 
             @nB2_QFIM2 , @nB2_QACLASS , @nB2_CMFIM1 , @nB2_CMFIM2 , @nB2_CMFIM3 , @nB2_CMFIM4 , @nB2_CMFIM5 , @nB2_CMRP1 , 
             @nB2_CMRP2 , @nB2_CMRP3 , @nB2_CMRP4 , @nB2_CMRP5 , @nB2_VFRP1 , @nB2_VFRP2 , @nB2_VFRP3 , @nB2_VFRP4 , @nB2_VFRP5 , 
             @cB1_CCCUSTO , @cB1_RASTRO , @cB1_LOCALIZ 
   END 
   CLOSE CUR_M280
   DEALLOCATE CUR_M280
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT038_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT038_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT038_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT038_17_02]
(
    @IN_FILIALLOGIN Char( 2) , 
    @IN_FILIALCOR Char( 2) , 
    @IN_THREAD Char( 02 ) , 
    @IN_DATA Char( 08 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_MV_PAR02 Integer , 
    @IN_MV_CUSZERO Char( 01 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_MV_CUSMED Char( 01 ) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_CUSEMP Char( 01 ) , 
    @IN_MV_PAR04 Integer , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB9 Char( 2)
DECLARE @lIntDl Char( 01 )
DECLARE @cB2_COD Char( 15)
DECLARE @cB2_LOCAL Char( 2)
DECLARE @SB2_RECNO Integer
DECLARE @vRecno Integer
DECLARE @nB2_QFIM Decimal( 12 , 2 )
DECLARE @nB2_QFIM2 Decimal( 12 , 2 )
DECLARE @nB2_VFIM1 Decimal( 14 , 2 )
DECLARE @nB2_VFIM2 Decimal( 14 , 2 )
DECLARE @nB2_VFIM3 Decimal( 14 , 2 )
DECLARE @nB2_VFIM4 Decimal( 14 , 2 )
DECLARE @nB2_VFIM5 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nB2_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nB2_QACLASS Decimal( 12 , 2 )
DECLARE @nB1_CONV Decimal( 5 , 2 )
DECLARE @nB1_CUSTD Decimal( 12 , 2 )
DECLARE @cB1_MCUSTD Char( 1)
DECLARE @nB2_CMFIM1 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM2 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM3 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM4 Decimal( 14 , 4 )
DECLARE @nB2_CMFIM5 Decimal( 14 , 4 )
DECLARE @nB2_CMRP1 Decimal( 14 , 4 )
DECLARE @nB2_CMRP2 Decimal( 14 , 4 )
DECLARE @nB2_CMRP3 Decimal( 14 , 4 )
DECLARE @nB2_CMRP4 Decimal( 14 , 4 )
DECLARE @nB2_CMRP5 Decimal( 14 , 4 )
DECLARE @nB2_VFRP1 Decimal( 14 , 2 )
DECLARE @nB2_VFRP2 Decimal( 14 , 2 )
DECLARE @nB2_VFRP3 Decimal( 14 , 2 )
DECLARE @nB2_VFRP4 Decimal( 14 , 2 )
DECLARE @nB2_VFRP5 Decimal( 14 , 2 )
DECLARE @nRetAtuComB2 Float
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @dtFech Char( 08 )
DECLARE @lFatConv Char( 01 )
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nAux1 Integer
DECLARE @cFatConvAux Char( 01 )
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @cRastro Char( 01 )
DECLARE @cLocaliza Char( 01 )
DECLARE @nResult Char( 01 )
DECLARE @nMod Integer
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cB1_RASTRO Char( 1)
DECLARE @cB1_LOCALIZ Char( 1)
DECLARE @cFilialLogin Char( 2)
DECLARE @cFilialCor Char( 2)
DECLARE @cThread Char( 02 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @dtFech  = @IN_DATA 
   SET @lFatConv  = '0' 
   SET @OUT_RESULTADO  = '0' 
   SET @cFilialLogin  = @IN_FILIALLOGIN 
   SET @cFilialCor  = @IN_FILIALCOR 
   SET @cThread  = @IN_THREAD 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_M280
   DECLARE CUR_M280 insensitive  CURSOR FOR 
   SELECT B2_COD , B2_LOCAL , B2_SB2RECN , B2_QFIM , B2_VFIM1 , B2_VFIM2 , B2_VFIM3 , B2_VFIM4 , B2_VFIM5 , B2_VFIMFF1 , 
          B2_VFIMFF2 , B2_VFIMFF3 , B2_VFIMFF4 , B2_VFIMFF5 , B1_CONV , B1_CUSTD , B1_MCUSTD , B2_QFIM2 , B2_QACLASS , B2_CMFIM1 , 
          B2_CMFIM2 , B2_CMFIM3 , B2_CMFIM4 , B2_CMFIM5 , B2_CMRP1 , B2_CMRP2 , B2_CMRP3 , B2_CMRP4 , B2_CMRP5 , B2_VFRP1 , 
          B2_VFRP2 , B2_VFRP3 , B2_VFRP4 , B2_VFRP5 , B1_CCCUSTO , B1_RASTRO , B1_LOCALIZ 
     FROM TRB020_SPMATA280 TRB
     WHERE FILIAL  = @cFilialCor  and FILLOG  = @cFilialLogin  and THREAD  = @cThread 
   FOR READ ONLY 
    
   OPEN CUR_M280
   FETCH CUR_M280 
    INTO @cB2_COD , @cB2_LOCAL , @SB2_RECNO , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
          @nB2_VFIMFF1 , @nB2_VFIMFF2 , @nB2_VFIMFF3 , @nB2_VFIMFF4 , @nB2_VFIMFF5 , @nB1_CONV , @nB1_CUSTD , @cB1_MCUSTD , 
          @nB2_QFIM2 , @nB2_QACLASS , @nB2_CMFIM1 , @nB2_CMFIM2 , @nB2_CMFIM3 , @nB2_CMFIM4 , @nB2_CMFIM5 , @nB2_CMRP1 , 
          @nB2_CMRP2 , @nB2_CMRP3 , @nB2_CMRP4 , @nB2_CMRP5 , @nB2_VFRP1 , @nB2_VFRP2 , @nB2_VFRP3 , @nB2_VFRP4 , @nB2_VFRP5 , 
          @cB1_CCCUSTO , @cB1_RASTRO , @cB1_LOCALIZ 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nSaldoLtUM  = 0 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      SET @nMod  = 0 
      IF SUBSTRING ( @cB2_COD , 1 , 3 ) = 'MOD' 
      BEGIN 
         SET @nMod  = 1 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PRODMOD  = '1' 
         BEGIN 
            IF @cB1_CCCUSTO  <> ' ' 
            BEGIN 
               SET @nMod  = 1 
            END 
         END 
      END 
      IF @nMod  = 1  and @IN_MV_PAR04  = 1 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_QATU  =  (B2_QATU  - B2_QFIM ) , B2_QFIM  = 0 , B2_VATU1  =  (B2_QATU  * B2_CM1 ) , B2_VFIM1  = 0 , B2_VATU2  =  (B2_QATU  * B2_CM2 
           ) , B2_VFIM2  = 0 , B2_VATU3  =  (B2_QATU  * B2_CM3 ) , B2_VFIM3  = 0 , B2_VATU4  =  (B2_QATU  * B2_CM4 ) , B2_VFIM4  = 0 
           , B2_VATU5  =  (B2_QATU  * B2_CM5 ) , B2_VFIM5  = 0 , B2_CMFIM1  = 0 , B2_CMFIM2  = 0 , B2_CMFIM3  = 0 , B2_CMFIM4  = 0 
           , B2_CMFIM5  = 0 , B2_CMRP1  = 0 , B2_CMRP2  = 0 , B2_CMRP3  = 0 , B2_CMRP4  = 0 , B2_CMRP5  = 0 , B2_VFRP1  = 0 
           , B2_VFRP2  = 0 , B2_VFRP3  = 0 , B2_VFRP4  = 0 , B2_VFRP5  = 0 
          WHERE R_E_C_N_O_  = @SB2_RECNO 
         IF @IN_MV_CUSMED  = '1'  and  (@IN_MV_CUSFIL  = '1'  or @IN_MV_CUSEMP  = '1' ) 
         BEGIN 
            EXEC MAT050_17_02 @IN_FILIALCOR , @cB2_COD , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nResult output 
         END 
         SET @nB2_QFIM  = 0 
         SET @nB2_QFIM2  = 0 
         SET @nB2_VFIM1  = 0 
         SET @nB2_VFIM2  = 0 
         SET @nB2_VFIM3  = 0 
         SET @nB2_VFIM4  = 0 
         SET @nB2_VFIM5  = 0 
      END 
      IF @nMod  = 0  or @IN_MV_PAR02  = 1 
      BEGIN 
         SET @vRecno  = null 
         SELECT @vRecno  = R_E_C_N_O_ 
           FROM SB9030 
           WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @cB2_COD  and B9_LOCAL  = @cB2_LOCAL  and B9_DATA  = @dtFech  and D_E_L_E_T_  = ' ' 
           
         SET @lFatConv  = '0' 
         IF @nB1_CONV  <> 0 
         BEGIN 
            SET @lFatConv  = '1' 
         END 
         SET @cFatConvAux  = @lFatConv 
         EXEC MA280CON_02 @cB2_COD , @cFatConvAux , @lFatConv output 
         SET @nSaldoLtUM  = @nB2_QFIM2 
         IF @lFatConv  = '1' 
         BEGIN 
            SET @nAux  = 0 
            SET @nAux1  = 2 
            EXEC MAT018_17_02 @cB2_COD , @IN_FILIALCOR , @nB2_QFIM , @nAux , @nAux1 , @nSaldoLtUM output 
            IF  (@nSaldoLtUM  = 0  and @nB2_QFIM2  <> 0 ) 
            BEGIN 
               SET @nSaldoLtUM  = @nB2_QFIM2 
            END 
         END 
         SET @cRastro  = ' ' 
         SET @cAux  = ' ' 
         SET @cRastro  = @cB1_RASTRO 
         SET @cLocaliza  = @cB1_LOCALIZ 
         IF  (@cRastro  = '1'  or @cLocaliza  = '1' )  and @nB2_QFIM  < 0  and @IN_300SALNEG  = '0' 
         BEGIN 
            SET @nB2_QFIM  = 0 
            SET @nB2_QFIM2  = 0 
            SET @nB2_VFIM1  = 0 
            SET @nB2_VFIM2  = 0 
            SET @nB2_VFIM3  = 0 
            SET @nB2_VFIM4  = 0 
            SET @nB2_VFIM5  = 0 
         END 
         IF @vRecno is null 
         BEGIN 
            SELECT @vRecno  = MAX ( R_E_C_N_O_ )
              FROM SB9030 
            IF @vRecno is null 
            BEGIN 
               SET @vRecno  = 1 
            END 
            ELSE 
            BEGIN 
               SET @vRecno  = @vRecno  + 1 
            END 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO SB9030 (B9_FILIAL , B9_COD , B9_LOCAL , B9_DATA , B9_QINI , B9_QISEGUM , B9_VINI1 , B9_VINI2 , B9_VINI3 , 
                   B9_VINI4 , B9_VINI5 , B9_VINIFF1 , B9_VINIFF2 , B9_VINIFF3 , B9_VINIFF4 , B9_VINIFF5 , B9_CUSTD , B9_MCUSTD , 
                   B9_CM1 , B9_CM2 , B9_CM3 , B9_CM4 , B9_CM5 , B9_CMRP1 , B9_CMRP2 , B9_CMRP3 , B9_CMRP4 , B9_CMRP5 , B9_VINIRP1 , 
                   B9_VINIRP2 , B9_VINIRP3 , B9_VINIRP4 , B9_VINIRP5 , R_E_C_N_O_ ) 
            VALUES (@cFil_SB9 , @cB2_COD , @cB2_LOCAL , @dtFech , @nB2_QFIM , @nSaldoLtUM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , 
                   @nB2_VFIM4 , @nB2_VFIM5 , @nB2_VFIMFF1 , @nB2_VFIMFF2 , @nB2_VFIMFF3 , @nB2_VFIMFF4 , @nB2_VFIMFF5 , @nB1_CUSTD , 
                   @cB1_MCUSTD , @nB2_CMFIM1 , @nB2_CMFIM2 , @nB2_CMFIM3 , @nB2_CMFIM4 , @nB2_CMFIM5 , @nB2_CMRP1 , @nB2_CMRP2 , 
                   @nB2_CMRP3 , @nB2_CMRP4 , @nB2_CMRP5 , @nB2_VFRP1 , @nB2_VFRP2 , @nB2_VFRP3 , @nB2_VFRP4 , @nB2_VFRP5 , 
                   @vRecno );
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         ELSE 
         BEGIN 
            UPDATE SB9030 
              WITH (ROWLOCK) 
               SET B9_QINI  = @nB2_QFIM , B9_QISEGUM  = @nSaldoLtUM , B9_VINI1  = @nB2_VFIM1 , B9_VINI2  = @nB2_VFIM2 , B9_VINI3  = @nB2_VFIM3 
              , B9_VINI4  = @nB2_VFIM4 , B9_VINI5  = @nB2_VFIM5 , B9_DATA  = @dtFech , B9_VINIFF1  = @nB2_VFIMFF1 , B9_VINIFF2  = @nB2_VFIMFF2 
              , B9_VINIFF3  = @nB2_VFIMFF3 , B9_VINIFF4  = @nB2_VFIMFF4 , B9_VINIFF5  = @nB2_VFIMFF5 , B9_CUSTD  = @nB1_CUSTD 
              , B9_MCUSTD  = @cB1_MCUSTD , B9_CM1  = @nB2_CMFIM1 , B9_CM2  = @nB2_CMFIM2 , B9_CM3  = @nB2_CMFIM3 , B9_CM4  = @nB2_CMFIM4 
              , B9_CM5  = @nB2_CMFIM5 , B9_CMRP1  = @nB2_CMRP1 , B9_CMRP2  = @nB2_CMRP2 , B9_CMRP3  = @nB2_CMRP3 , B9_CMRP4  = @nB2_CMRP4 
              , B9_CMRP5  = @nB2_CMRP5 , B9_VINIRP1  = @nB2_VFRP1 , B9_VINIRP2  = @nB2_VFRP2 , B9_VINIRP3  = @nB2_VFRP3 , 
                   B9_VINIRP4  = @nB2_VFRP4 , B9_VINIRP5  = @nB2_VFRP5 
             WHERE R_E_C_N_O_  = @vRecno 
         END 
         EXEC MA280INB9CP_02 @IN_FILIALCOR , @cB2_COD , @IN_MV_CUSZERO , @vRecno , @SB2_RECNO , @nB2_QFIM , @nB2_VFIM1 , 
                @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 
         EXEC M280SB9_02 @IN_FILIALCOR , @cB2_COD , @cB2_LOCAL 
         EXEC MAT036_17_02 @IN_FILIALCOR , @IN_DATA , @cB2_COD , @cB2_LOCAL , @IN_MV_RASTRO , @IN_MV_ULMES , @IN_300SALNEG , 
                @nB2_QFIM , @nB2_QACLASS , '0' , @IN_FILSEQ , @IN_MV_WMSNEW , @nRetAtuComB2 output 
         IF @cLocaliza  = '1' 
         BEGIN 
            IF @IN_MV_WMSNEW  = '1' 
            BEGIN 
               EXEC MAT057_17_02 @cB2_COD , @IN_FILIALCOR , @lIntDl output 
            END 
            ELSE 
            BEGIN 
               SET @lIntDl  = '0' 
            END 
         END 
         IF  (@IN_MV_WMSNEW  = '1'  and @lIntDl  = '1' ) 
         BEGIN 
            EXEC MAT058_17_02 @IN_FILIALCOR , @IN_DATA , @cB2_COD , @cB2_LOCAL , @IN_MV_ULMES , @IN_300SALNEG , @nB2_QFIM , 
                   '0' , @IN_FILSEQ , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @nRetAtuComB2 output 
         END 
         ELSE 
         BEGIN 
            EXEC MAT037_17_02 @IN_FILIALCOR , @IN_DATA , @cB2_COD , @cB2_LOCAL , @IN_MV_ULMES , @IN_300SALNEG , @nB2_QFIM , 
                   '0' , @IN_FILSEQ , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @cRastro , @nRetAtuComB2 output 
         END 
         IF @nContador  > 1023 
         BEGIN 
            Commit Transaction 
            SET @nContador  = 0 
         END 
      END 
      FETCH CUR_M280 
       INTO @cB2_COD , @cB2_LOCAL , @SB2_RECNO , @nB2_QFIM , @nB2_VFIM1 , @nB2_VFIM2 , @nB2_VFIM3 , @nB2_VFIM4 , @nB2_VFIM5 , 
             @nB2_VFIMFF1 , @nB2_VFIMFF2 , @nB2_VFIMFF3 , @nB2_VFIMFF4 , @nB2_VFIMFF5 , @nB1_CONV , @nB1_CUSTD , @cB1_MCUSTD , 
             @nB2_QFIM2 , @nB2_QACLASS , @nB2_CMFIM1 , @nB2_CMFIM2 , @nB2_CMFIM3 , @nB2_CMFIM4 , @nB2_CMFIM5 , @nB2_CMRP1 , 
             @nB2_CMRP2 , @nB2_CMRP3 , @nB2_CMRP4 , @nB2_CMRP5 , @nB2_VFRP1 , @nB2_VFRP2 , @nB2_VFRP3 , @nB2_VFRP4 , @nB2_VFRP5 , 
             @cB1_CCCUSTO , @cB1_RASTRO , @cB1_LOCALIZ 
   END 
   CLOSE CUR_M280
   DEALLOCATE CUR_M280
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT038A_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT038A_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT038A_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT038A_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_CFECHFIFO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SBD Char( 2)
DECLARE @cFil_SCC Char( 2)
DECLARE @cFil_SD8 Char( 2)
DECLARE @vRecno Integer
DECLARE @nBD_QFIM Decimal( 12 , 2 )
DECLARE @nBD_QFIM2UM Decimal( 12 , 2 )
DECLARE @nBD_CUSFIM1 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @cBD_PRODUTO Char( 15)
DECLARE @cBD_LOCAL Char( 2)
DECLARE @cBD_SEQ Char( 6)
DECLARE @vBD_QINI Decimal( 12 , 2 )
DECLARE @vBD_QINI2UM Decimal( 12 , 2 )
DECLARE @vBD_CUSINI1 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI2 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI3 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI4 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI5 Decimal( 14 , 4 )
DECLARE @vBD_QFIM Decimal( 12 , 2 )
DECLARE @vBD_QFIM2UM Decimal( 12 , 2 )
DECLARE @vBD_CUSFIM1 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @cBD_DATA Char( 8)
DECLARE @cBD_OP Char( 14)
DECLARE @vXXBD_CUSINI2 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSINI3 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSINI4 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSINI5 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @iPos Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SBD' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SBD output 
   SET @cAux  = 'SD8' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SD8 output 
   SET @cAux  = 'SCC' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SCC output 
   SET @nContador  = 0 
   IF @IN_MV_CUSFIFO  = '1' 
   BEGIN 
      IF @IN_CFECHFIFO  = '1' 
      BEGIN 
         UPDATE SCC010 
           WITH (ROWLOCK) 
            SET CC_STATUS  = 'E' 
          WHERE CC_FILIAL  = @cFil_SCC  and CC_STATUS  = 'A'  and D_E_L_E_T_  = ' ' 
         UPDATE SD8010 
           WITH (ROWLOCK) 
            SET D8_QFIMDEV  = 0 
          WHERE D8_FILIAL  = @cFil_SD8  and D8_TM  > '500'  and D8_ITEM  <> ' '  and D8_QFIMDEV  > 0  and D_E_L_E_T_  = ' ' 
           
          
         -- Cursor declaration CUR_M280SBD
         DECLARE CUR_M280SBD insensitive  CURSOR FOR 
         SELECT BD_PRODUTO , BD_LOCAL , BD_SEQ , BD_QINI , BD_QINI2UM , BD_CUSINI1 , BD_CUSINI2 , BD_CUSINI3 , BD_CUSINI4 , 
                BD_CUSINI5 , BD_QFIM , BD_QFIM2UM , BD_CUSFIM1 , BD_CUSFIM2 , BD_CUSFIM3 , BD_CUSFIM4 , BD_CUSFIM5 , BD_DATA , 
                BD_OP 
           FROM SBD010 
           WHERE BD_FILIAL  = @cFil_SBD  and BD_STATUS  <> 'Z'  and D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN CUR_M280SBD
         FETCH CUR_M280SBD 
          INTO @cBD_PRODUTO , @cBD_LOCAL , @cBD_SEQ , @vBD_QINI , @vBD_QINI2UM , @vBD_CUSINI1 , @vBD_CUSINI2 , @vBD_CUSINI3 , 
                @vBD_CUSINI4 , @vBD_CUSINI5 , @vBD_QFIM , @vBD_QFIM2UM , @vBD_CUSFIM1 , @vBD_CUSFIM2 , @vBD_CUSFIM3 , @vBD_CUSFIM4 , 
                @vBD_CUSFIM5 , @cBD_DATA , @cBD_OP 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            SET @vXXBD_CUSINI2  = 0 
            SET @vXXBD_CUSINI3  = 0 
            SET @vXXBD_CUSINI4  = 0 
            SET @vXXBD_CUSINI5  = 0 
            SET @vXXBD_CUSFIM2  = 0 
            SET @vXXBD_CUSFIM3  = 0 
            SET @vXXBD_CUSFIM4  = 0 
            SET @vXXBD_CUSFIM5  = 0 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI2  = @vBD_CUSINI2 
               SET @vXXBD_CUSFIM2  = @vBD_CUSFIM2 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI3  = @vBD_CUSINI3 
               SET @vXXBD_CUSFIM3  = @vBD_CUSFIM3 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI4  = @vBD_CUSINI4 
               SET @vXXBD_CUSFIM4  = @vBD_CUSFIM4 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI5  = @vBD_CUSINI5 
               SET @vXXBD_CUSFIM5  = @vBD_CUSFIM5 
            END 
            SELECT @vRecno  = MAX ( R_E_C_N_O_ )
              FROM SCC010 
            IF @vRecno is null 
            BEGIN 
               SET @vRecno  = 1 
            END 
            ELSE 
            BEGIN 
               SET @vRecno  = @vRecno  + 1 
            END 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO SCC010 (CC_FILIAL , CC_PRODUTO , CC_LOCAL , CC_DATA , CC_QINI , CC_QINI2UM , CC_VINIFF1 , CC_VINIFF2 , 
                   CC_VINIFF3 , CC_VINIFF4 , CC_VINIFF5 , CC_QFIM , CC_QFIM2UM , CC_VFIMFF1 , CC_VFIMFF2 , CC_VFIMFF3 , CC_VFIMFF4 , 
                   CC_VFIMFF5 , CC_DTORIG , CC_OP , CC_SEQ , CC_STATUS , R_E_C_N_O_ ) 
            VALUES (@cFil_SCC , @cBD_PRODUTO , @cBD_LOCAL , @IN_DATA , @vBD_QINI , @vBD_CUSINI2 , @vBD_CUSINI1 , @vXXBD_CUSINI2 , 
                   @vXXBD_CUSINI3 , @vXXBD_CUSINI4 , @vXXBD_CUSINI5 , @vBD_QFIM , @vBD_QFIM2UM , @vBD_CUSFIM1 , @vXXBD_CUSFIM2 , 
                   @vXXBD_CUSFIM3 , @vXXBD_CUSFIM4 , @vXXBD_CUSFIM5 , @cBD_DATA , @cBD_OP , @cBD_SEQ , 'A' , @vRecno );
            FETCH CUR_M280SBD 
             INTO @cBD_PRODUTO , @cBD_LOCAL , @cBD_SEQ , @vBD_QINI , @vBD_QINI2UM , @vBD_CUSINI1 , @vBD_CUSINI2 , @vBD_CUSINI3 , 
                   @vBD_CUSINI4 , @vBD_CUSINI5 , @vBD_QFIM , @vBD_QFIM2UM , @vBD_CUSFIM1 , @vBD_CUSFIM2 , @vBD_CUSFIM3 , 
                   @vBD_CUSFIM4 , @vBD_CUSFIM5 , @cBD_DATA , @cBD_OP 
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         CLOSE CUR_M280SBD
         DEALLOCATE CUR_M280SBD
      END 
      ELSE 
      BEGIN 
         SET @nContador  = 0 
          
         -- Cursor declaration CUR_M280SBD2
         DECLARE CUR_M280SBD2 insensitive  CURSOR FOR 
         SELECT BD_PRODUTO , BD_QFIM , BD_QFIM2UM , BD_CUSFIM1 , BD_CUSFIM2 , BD_CUSFIM3 , BD_CUSFIM4 , BD_CUSFIM5 , R_E_C_N_O_ 
           FROM SBD010 
           WHERE BD_FILIAL  = @cFil_SBD  and D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN CUR_M280SBD2
         FETCH CUR_M280SBD2 
          INTO @cBD_PRODUTO , @nBD_QFIM , @nBD_QFIM2UM , @nBD_CUSFIM1 , @nBD_CUSFIM2 , @nBD_CUSFIM3 , @nBD_CUSFIM4 , @nBD_CUSFIM5 , 
                @vRecno 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            SET @nContador  = @nContador  + 1 
            SET @nAux  = 2 
            EXEC MAT018_17_01 @cBD_PRODUTO , @IN_FILIALCOR , @nBD_QFIM , @nBD_QFIM2UM , @nAux , @nSaldoLtUM output 
            IF @nContador  = 1 
            BEGIN 
               begin Tran 
               SET @nContador  = @nContador 
            END 
            UPDATE SBD010 
              WITH (ROWLOCK) 
               SET BD_QINI  = @nBD_QFIM , BD_QINI2UM  = @nSaldoLtUM , BD_CUSINI1  = @nBD_CUSFIM1 , BD_CUSINI2  = @nBD_CUSFIM2 
              , BD_CUSINI3  = @nBD_CUSFIM3 , BD_CUSINI4  = @nBD_CUSFIM4 , BD_CUSINI5  = @nBD_CUSFIM5 
             WHERE R_E_C_N_O_  = @vRecno 
            FETCH CUR_M280SBD2 
             INTO @cBD_PRODUTO , @nBD_QFIM , @nBD_QFIM2UM , @nBD_CUSFIM1 , @nBD_CUSFIM2 , @nBD_CUSFIM3 , @nBD_CUSFIM4 , @nBD_CUSFIM5 , 
                   @vRecno 
            IF @nContador  > 1023 
            BEGIN 
               commit Tran 
               SET @nContador  = 0 
            END 
         END 
         CLOSE CUR_M280SBD2
         DEALLOCATE CUR_M280SBD2
         IF @nContador  > 0 
         BEGIN 
             Commit Transaction  
         END 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT038A_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT038A_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT038A_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT038A_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_CFECHFIFO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SBD Char( 2)
DECLARE @cFil_SCC Char( 2)
DECLARE @cFil_SD8 Char( 2)
DECLARE @vRecno Integer
DECLARE @nBD_QFIM Decimal( 12 , 2 )
DECLARE @nBD_QFIM2UM Decimal( 12 , 2 )
DECLARE @nBD_CUSFIM1 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @nBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @cBD_PRODUTO Char( 15)
DECLARE @cBD_LOCAL Char( 2)
DECLARE @cBD_SEQ Char( 6)
DECLARE @vBD_QINI Decimal( 12 , 2 )
DECLARE @vBD_QINI2UM Decimal( 12 , 2 )
DECLARE @vBD_CUSINI1 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI2 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI3 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI4 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI5 Decimal( 14 , 4 )
DECLARE @vBD_QFIM Decimal( 12 , 2 )
DECLARE @vBD_QFIM2UM Decimal( 12 , 2 )
DECLARE @vBD_CUSFIM1 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @cBD_DATA Char( 8)
DECLARE @cBD_OP Char( 14)
DECLARE @vXXBD_CUSINI2 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSINI3 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSINI4 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSINI5 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @vXXBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @nSaldoLtUM Decimal( 14 , 2 )
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @iPos Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SBD' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SBD output 
   SET @cAux  = 'SD8' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SD8 output 
   SET @cAux  = 'SCC' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SCC output 
   SET @nContador  = 0 
   IF @IN_MV_CUSFIFO  = '1' 
   BEGIN 
      IF @IN_CFECHFIFO  = '1' 
      BEGIN 
         UPDATE SCC030 
           WITH (ROWLOCK) 
            SET CC_STATUS  = 'E' 
          WHERE CC_FILIAL  = @cFil_SCC  and CC_STATUS  = 'A'  and D_E_L_E_T_  = ' ' 
         UPDATE SD8030 
           WITH (ROWLOCK) 
            SET D8_QFIMDEV  = 0 
          WHERE D8_FILIAL  = @cFil_SD8  and D8_TM  > '500'  and D8_ITEM  <> ' '  and D8_QFIMDEV  > 0  and D_E_L_E_T_  = ' ' 
           
          
         -- Cursor declaration CUR_M280SBD
         DECLARE CUR_M280SBD insensitive  CURSOR FOR 
         SELECT BD_PRODUTO , BD_LOCAL , BD_SEQ , BD_QINI , BD_QINI2UM , BD_CUSINI1 , BD_CUSINI2 , BD_CUSINI3 , BD_CUSINI4 , 
                BD_CUSINI5 , BD_QFIM , BD_QFIM2UM , BD_CUSFIM1 , BD_CUSFIM2 , BD_CUSFIM3 , BD_CUSFIM4 , BD_CUSFIM5 , BD_DATA , 
                BD_OP 
           FROM SBD030 
           WHERE BD_FILIAL  = @cFil_SBD  and BD_STATUS  <> 'Z'  and D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN CUR_M280SBD
         FETCH CUR_M280SBD 
          INTO @cBD_PRODUTO , @cBD_LOCAL , @cBD_SEQ , @vBD_QINI , @vBD_QINI2UM , @vBD_CUSINI1 , @vBD_CUSINI2 , @vBD_CUSINI3 , 
                @vBD_CUSINI4 , @vBD_CUSINI5 , @vBD_QFIM , @vBD_QFIM2UM , @vBD_CUSFIM1 , @vBD_CUSFIM2 , @vBD_CUSFIM3 , @vBD_CUSFIM4 , 
                @vBD_CUSFIM5 , @cBD_DATA , @cBD_OP 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            SET @vXXBD_CUSINI2  = 0 
            SET @vXXBD_CUSINI3  = 0 
            SET @vXXBD_CUSINI4  = 0 
            SET @vXXBD_CUSINI5  = 0 
            SET @vXXBD_CUSFIM2  = 0 
            SET @vXXBD_CUSFIM3  = 0 
            SET @vXXBD_CUSFIM4  = 0 
            SET @vXXBD_CUSFIM5  = 0 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI2  = @vBD_CUSINI2 
               SET @vXXBD_CUSFIM2  = @vBD_CUSFIM2 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI3  = @vBD_CUSINI3 
               SET @vXXBD_CUSFIM3  = @vBD_CUSFIM3 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI4  = @vBD_CUSINI4 
               SET @vXXBD_CUSFIM4  = @vBD_CUSFIM4 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vXXBD_CUSINI5  = @vBD_CUSINI5 
               SET @vXXBD_CUSFIM5  = @vBD_CUSFIM5 
            END 
            SELECT @vRecno  = MAX ( R_E_C_N_O_ )
              FROM SCC030 
            IF @vRecno is null 
            BEGIN 
               SET @vRecno  = 1 
            END 
            ELSE 
            BEGIN 
               SET @vRecno  = @vRecno  + 1 
            END 
            select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
            INSERT INTO SCC030 (CC_FILIAL , CC_PRODUTO , CC_LOCAL , CC_DATA , CC_QINI , CC_QINI2UM , CC_VINIFF1 , CC_VINIFF2 , 
                   CC_VINIFF3 , CC_VINIFF4 , CC_VINIFF5 , CC_QFIM , CC_QFIM2UM , CC_VFIMFF1 , CC_VFIMFF2 , CC_VFIMFF3 , CC_VFIMFF4 , 
                   CC_VFIMFF5 , CC_DTORIG , CC_OP , CC_SEQ , CC_STATUS , R_E_C_N_O_ ) 
            VALUES (@cFil_SCC , @cBD_PRODUTO , @cBD_LOCAL , @IN_DATA , @vBD_QINI , @vBD_CUSINI2 , @vBD_CUSINI1 , @vXXBD_CUSINI2 , 
                   @vXXBD_CUSINI3 , @vXXBD_CUSINI4 , @vXXBD_CUSINI5 , @vBD_QFIM , @vBD_QFIM2UM , @vBD_CUSFIM1 , @vXXBD_CUSFIM2 , 
                   @vXXBD_CUSFIM3 , @vXXBD_CUSFIM4 , @vXXBD_CUSFIM5 , @cBD_DATA , @cBD_OP , @cBD_SEQ , 'A' , @vRecno );
            FETCH CUR_M280SBD 
             INTO @cBD_PRODUTO , @cBD_LOCAL , @cBD_SEQ , @vBD_QINI , @vBD_QINI2UM , @vBD_CUSINI1 , @vBD_CUSINI2 , @vBD_CUSINI3 , 
                   @vBD_CUSINI4 , @vBD_CUSINI5 , @vBD_QFIM , @vBD_QFIM2UM , @vBD_CUSFIM1 , @vBD_CUSFIM2 , @vBD_CUSFIM3 , 
                   @vBD_CUSFIM4 , @vBD_CUSFIM5 , @cBD_DATA , @cBD_OP 
            
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @vRecno = @vRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
         END 
         CLOSE CUR_M280SBD
         DEALLOCATE CUR_M280SBD
      END 
      ELSE 
      BEGIN 
         SET @nContador  = 0 
          
         -- Cursor declaration CUR_M280SBD2
         DECLARE CUR_M280SBD2 insensitive  CURSOR FOR 
         SELECT BD_PRODUTO , BD_QFIM , BD_QFIM2UM , BD_CUSFIM1 , BD_CUSFIM2 , BD_CUSFIM3 , BD_CUSFIM4 , BD_CUSFIM5 , R_E_C_N_O_ 
           FROM SBD030 
           WHERE BD_FILIAL  = @cFil_SBD  and D_E_L_E_T_  = ' ' 
         FOR READ ONLY 
          
         OPEN CUR_M280SBD2
         FETCH CUR_M280SBD2 
          INTO @cBD_PRODUTO , @nBD_QFIM , @nBD_QFIM2UM , @nBD_CUSFIM1 , @nBD_CUSFIM2 , @nBD_CUSFIM3 , @nBD_CUSFIM4 , @nBD_CUSFIM5 , 
                @vRecno 
         WHILE ( (@@fetch_status  = 0 ) )
         BEGIN
            SET @nContador  = @nContador  + 1 
            SET @nAux  = 2 
            EXEC MAT018_17_02 @cBD_PRODUTO , @IN_FILIALCOR , @nBD_QFIM , @nBD_QFIM2UM , @nAux , @nSaldoLtUM output 
            IF @nContador  = 1 
            BEGIN 
               begin Tran 
               SET @nContador  = @nContador 
            END 
            UPDATE SBD030 
              WITH (ROWLOCK) 
               SET BD_QINI  = @nBD_QFIM , BD_QINI2UM  = @nSaldoLtUM , BD_CUSINI1  = @nBD_CUSFIM1 , BD_CUSINI2  = @nBD_CUSFIM2 
              , BD_CUSINI3  = @nBD_CUSFIM3 , BD_CUSINI4  = @nBD_CUSFIM4 , BD_CUSINI5  = @nBD_CUSFIM5 
             WHERE R_E_C_N_O_  = @vRecno 
            FETCH CUR_M280SBD2 
             INTO @cBD_PRODUTO , @nBD_QFIM , @nBD_QFIM2UM , @nBD_CUSFIM1 , @nBD_CUSFIM2 , @nBD_CUSFIM3 , @nBD_CUSFIM4 , @nBD_CUSFIM5 , 
                   @vRecno 
            IF @nContador  > 1023 
            BEGIN 
               commit Tran 
               SET @nContador  = 0 
            END 
         END 
         CLOSE CUR_M280SBD2
         DEALLOCATE CUR_M280SBD2
         IF @nContador  > 0 
         BEGIN 
             Commit Transaction  
         END 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT038B_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT038B_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT038B_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT038B_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SC2 Char( 2)
DECLARE @vRecno Integer
DECLARE @nC2_VFIM1 Decimal( 14 , 2 )
DECLARE @nC2_VFIM2 Decimal( 14 , 2 )
DECLARE @nC2_VFIM3 Decimal( 14 , 2 )
DECLARE @nC2_VFIM4 Decimal( 14 , 2 )
DECLARE @nC2_VFIM5 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM1 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM2 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM3 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM4 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM5 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP1 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP2 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP3 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP4 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP5 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP1 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP2 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP3 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP4 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP5 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF5 Decimal( 14 , 2 )
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SC2 output 
   SET @nContador  = 0 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_M280SC2
   DECLARE CUR_M280SC2 insensitive  CURSOR FOR 
   SELECT C2_VFIM1 , C2_VFIM2 , C2_VFIM3 , C2_VFIM4 , C2_VFIM5 , C2_APRFIM1 , C2_APRFIM2 , C2_APRFIM3 , C2_APRFIM4 , C2_APRFIM5 , 
          R_E_C_N_O_ , C2_VFIMRP1 , C2_VFIMRP2 , C2_VFIMRP3 , C2_VFIMRP4 , C2_VFIMRP5 , C2_APRFRP1 , C2_APRFRP2 , C2_APRFRP3 , 
          C2_APRFRP4 , C2_APRFRP5 , C2_VFIMFF1 , C2_VFIMFF2 , C2_VFIMFF3 , C2_VFIMFF4 , C2_VFIMFF5 
     FROM SC2010 
     WHERE C2_FILIAL  = @cFil_SC2  and  (C2_DATRF  > @IN_MV_ULMES  or C2_DATRF  = '        ' )  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_M280SC2
   FETCH CUR_M280SC2 
    INTO @nC2_VFIM1 , @nC2_VFIM2 , @nC2_VFIM3 , @nC2_VFIM4 , @nC2_VFIM5 , @nC2_APRFIM1 , @nC2_APRFIM2 , @nC2_APRFIM3 , @nC2_APRFIM4 , 
          @nC2_APRFIM5 , @vRecno , @nC2_VFIMRP1 , @nC2_VFIMRP2 , @nC2_VFIMRP3 , @nC2_VFIMRP4 , @nC2_VFIMRP5 , @nC2_APRFRP1 , 
          @nC2_APRFRP2 , @nC2_APRFRP3 , @nC2_APRFRP4 , @nC2_APRFRP5 , @nC2_VFIMFF1 , @nC2_VFIMFF2 , @nC2_VFIMFF3 , @nC2_VFIMFF4 , 
          @nC2_VFIMFF5 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      UPDATE SC2010 
        WITH (ROWLOCK) 
         SET C2_VINI1  = @nC2_VFIM1 , C2_VINI2  = @nC2_VFIM2 , C2_VINI3  = @nC2_VFIM3 , C2_VINI4  = @nC2_VFIM4 , C2_VINI5  = @nC2_VFIM5 
        , C2_APRINI1  = @nC2_APRFIM1 , C2_APRINI2  = @nC2_APRFIM2 , C2_APRINI3  = @nC2_APRFIM3 , C2_APRINI4  = @nC2_APRFIM4 
        , C2_APRINI5  = @nC2_APRFIM5 , C2_VINIRP1  = @nC2_VFIMRP1 , C2_VINIRP2  = @nC2_VFIMRP2 , C2_VINIRP3  = @nC2_VFIMRP3 
        , C2_VINIRP4  = @nC2_VFIMRP4 , C2_VINIRP5  = @nC2_VFIMRP5 , C2_APRIRP1  = @nC2_APRFRP1 , C2_APRIRP2  = @nC2_APRFRP2 
        , C2_APRIRP3  = @nC2_APRFRP3 , C2_APRIRP4  = @nC2_APRFRP4 , C2_APRIRP5  = @nC2_APRFRP5 , C2_VINIFF1  = @nC2_VFIMFF1 
        , C2_VINIFF2  = @nC2_VFIMFF2 , C2_VINIFF3  = @nC2_VFIMFF3 , C2_VINIFF4  = @nC2_VFIMFF4 , C2_VINIFF5  = @nC2_VFIMFF5 
        
       WHERE R_E_C_N_O_  = @vRecno 
      EXEC MA280INC2CP_01 @vRecno 
      FETCH CUR_M280SC2 
       INTO @nC2_VFIM1 , @nC2_VFIM2 , @nC2_VFIM3 , @nC2_VFIM4 , @nC2_VFIM5 , @nC2_APRFIM1 , @nC2_APRFIM2 , @nC2_APRFIM3 , 
             @nC2_APRFIM4 , @nC2_APRFIM5 , @vRecno , @nC2_VFIMRP1 , @nC2_VFIMRP2 , @nC2_VFIMRP3 , @nC2_VFIMRP4 , @nC2_VFIMRP5 , 
             @nC2_APRFRP1 , @nC2_APRFRP2 , @nC2_APRFRP3 , @nC2_APRFRP4 , @nC2_APRFRP5 , @nC2_VFIMFF1 , @nC2_VFIMFF2 , @nC2_VFIMFF3 , 
             @nC2_VFIMFF4 , @nC2_VFIMFF5 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_M280SC2
   DEALLOCATE CUR_M280SC2
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT038B_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT038B_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT038B_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT038B_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SC2 Char( 2)
DECLARE @vRecno Integer
DECLARE @nC2_VFIM1 Decimal( 14 , 2 )
DECLARE @nC2_VFIM2 Decimal( 14 , 2 )
DECLARE @nC2_VFIM3 Decimal( 14 , 2 )
DECLARE @nC2_VFIM4 Decimal( 14 , 2 )
DECLARE @nC2_VFIM5 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM1 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM2 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM3 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM4 Decimal( 14 , 2 )
DECLARE @nC2_APRFIM5 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP1 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP2 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP3 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP4 Decimal( 14 , 2 )
DECLARE @nC2_VFIMRP5 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP1 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP2 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP3 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP4 Decimal( 14 , 2 )
DECLARE @nC2_APRFRP5 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nC2_VFIMFF5 Decimal( 14 , 2 )
DECLARE @cAux VarChar( 3 )
DECLARE @nAux Integer
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SC2' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SC2 output 
   SET @nContador  = 0 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_M280SC2
   DECLARE CUR_M280SC2 insensitive  CURSOR FOR 
   SELECT C2_VFIM1 , C2_VFIM2 , C2_VFIM3 , C2_VFIM4 , C2_VFIM5 , C2_APRFIM1 , C2_APRFIM2 , C2_APRFIM3 , C2_APRFIM4 , C2_APRFIM5 , 
          R_E_C_N_O_ , C2_VFIMRP1 , C2_VFIMRP2 , C2_VFIMRP3 , C2_VFIMRP4 , C2_VFIMRP5 , C2_APRFRP1 , C2_APRFRP2 , C2_APRFRP3 , 
          C2_APRFRP4 , C2_APRFRP5 , C2_VFIMFF1 , C2_VFIMFF2 , C2_VFIMFF3 , C2_VFIMFF4 , C2_VFIMFF5 
     FROM SC2030 
     WHERE C2_FILIAL  = @cFil_SC2  and  (C2_DATRF  > @IN_MV_ULMES  or C2_DATRF  = '        ' )  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_M280SC2
   FETCH CUR_M280SC2 
    INTO @nC2_VFIM1 , @nC2_VFIM2 , @nC2_VFIM3 , @nC2_VFIM4 , @nC2_VFIM5 , @nC2_APRFIM1 , @nC2_APRFIM2 , @nC2_APRFIM3 , @nC2_APRFIM4 , 
          @nC2_APRFIM5 , @vRecno , @nC2_VFIMRP1 , @nC2_VFIMRP2 , @nC2_VFIMRP3 , @nC2_VFIMRP4 , @nC2_VFIMRP5 , @nC2_APRFRP1 , 
          @nC2_APRFRP2 , @nC2_APRFRP3 , @nC2_APRFRP4 , @nC2_APRFRP5 , @nC2_VFIMFF1 , @nC2_VFIMFF2 , @nC2_VFIMFF3 , @nC2_VFIMFF4 , 
          @nC2_VFIMFF5 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      UPDATE SC2030 
        WITH (ROWLOCK) 
         SET C2_VINI1  = @nC2_VFIM1 , C2_VINI2  = @nC2_VFIM2 , C2_VINI3  = @nC2_VFIM3 , C2_VINI4  = @nC2_VFIM4 , C2_VINI5  = @nC2_VFIM5 
        , C2_APRINI1  = @nC2_APRFIM1 , C2_APRINI2  = @nC2_APRFIM2 , C2_APRINI3  = @nC2_APRFIM3 , C2_APRINI4  = @nC2_APRFIM4 
        , C2_APRINI5  = @nC2_APRFIM5 , C2_VINIRP1  = @nC2_VFIMRP1 , C2_VINIRP2  = @nC2_VFIMRP2 , C2_VINIRP3  = @nC2_VFIMRP3 
        , C2_VINIRP4  = @nC2_VFIMRP4 , C2_VINIRP5  = @nC2_VFIMRP5 , C2_APRIRP1  = @nC2_APRFRP1 , C2_APRIRP2  = @nC2_APRFRP2 
        , C2_APRIRP3  = @nC2_APRFRP3 , C2_APRIRP4  = @nC2_APRFRP4 , C2_APRIRP5  = @nC2_APRFRP5 , C2_VINIFF1  = @nC2_VFIMFF1 
        , C2_VINIFF2  = @nC2_VFIMFF2 , C2_VINIFF3  = @nC2_VFIMFF3 , C2_VINIFF4  = @nC2_VFIMFF4 , C2_VINIFF5  = @nC2_VFIMFF5 
        
       WHERE R_E_C_N_O_  = @vRecno 
      EXEC MA280INC2CP_02 @vRecno 
      FETCH CUR_M280SC2 
       INTO @nC2_VFIM1 , @nC2_VFIM2 , @nC2_VFIM3 , @nC2_VFIM4 , @nC2_VFIM5 , @nC2_APRFIM1 , @nC2_APRFIM2 , @nC2_APRFIM3 , 
             @nC2_APRFIM4 , @nC2_APRFIM5 , @vRecno , @nC2_VFIMRP1 , @nC2_VFIMRP2 , @nC2_VFIMRP3 , @nC2_VFIMRP4 , @nC2_VFIMRP5 , 
             @nC2_APRFRP1 , @nC2_APRFRP2 , @nC2_APRFRP3 , @nC2_APRFRP4 , @nC2_APRFRP5 , @nC2_VFIMFF1 , @nC2_VFIMFF2 , @nC2_VFIMFF3 , 
             @nC2_VFIMFF4 , @nC2_VFIMFF5 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_M280SC2
   DEALLOCATE CUR_M280SC2
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT039_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT039_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT039_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT039_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MES Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB3 Char( 2)
DECLARE @nMaxRecnoSB3 Integer
DECLARE @nRec Integer
DECLARE @nRecAnt Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nContador Integer
DECLARE @iTranCount Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB3' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB3 output 
   SELECT @nMaxRecnoSB3  = MAX ( R_E_C_N_O_ )
     FROM SB3010 
     WHERE B3_FILIAL  = @cFil_SB3 
   IF @nMaxRecnoSB3 is null 
   BEGIN 
      SET @nMaxRecnoSB3  = 0 
   END 
   SET @nRec  = 0 
   SET @nContador  = 0 
   WHILE (@nRec  <= @nMaxRecnoSB3 )
   BEGIN
      SET @nRecAnt  = @nRec 
      SET @nRec  = @nRec  + 1024 
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         begin tran 
         SET @nContador  = @nContador 
      END 
      IF  (@IN_MES  = '01' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q01  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '02' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q02  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '03' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q03  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '04' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q04  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '05' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q05  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '06' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q06  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '07' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q07  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '08' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q08  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '09' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q09  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '10' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q10  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '11' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q11  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '12' ) 
      BEGIN 
         UPDATE SB3010 
           WITH (ROWLOCK) 
            SET B3_Q12  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT039_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT039_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT039_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT039_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MES Char( 02 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB3 Char( 2)
DECLARE @nMaxRecnoSB3 Integer
DECLARE @nRec Integer
DECLARE @nRecAnt Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nContador Integer
DECLARE @iTranCount Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB3' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB3 output 
   SELECT @nMaxRecnoSB3  = MAX ( R_E_C_N_O_ )
     FROM SB3030 
     WHERE B3_FILIAL  = @cFil_SB3 
   IF @nMaxRecnoSB3 is null 
   BEGIN 
      SET @nMaxRecnoSB3  = 0 
   END 
   SET @nRec  = 0 
   SET @nContador  = 0 
   WHILE (@nRec  <= @nMaxRecnoSB3 )
   BEGIN
      SET @nRecAnt  = @nRec 
      SET @nRec  = @nRec  + 1024 
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         begin tran 
         SET @nContador  = @nContador 
      END 
      IF  (@IN_MES  = '01' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q01  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '02' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q02  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '03' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q03  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '04' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q04  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '05' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q05  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '06' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q06  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '07' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q07  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '08' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q08  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '09' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q09  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '10' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q10  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '11' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q11  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF  (@IN_MES  = '12' ) 
      BEGIN 
         UPDATE SB3030 
           WITH (ROWLOCK) 
            SET B3_Q12  = 0 
          WHERE R_E_C_N_O_  > @nRecAnt  and R_E_C_N_O_  <= @nRec  and B3_FILIAL  = @cFil_SB3  and D_E_L_E_T_  = ' ' 
      END 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT040_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT040_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT040_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT040_18_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DELOCAL Char( 2) , 
    @IN_ATELOCAL Char( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_PAR03 Char( 15) , 
    @IN_MV_PAR04 Char( 15) , 
    @IN_MV_PAR05 Integer , 
    @IN_MV_PAR06 Integer , 
    @IN_L300SALNEG Char( 01 ) , 
    @IN_MV_CUSMED Char( 01 ) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_CUSEMP Char( 01 ) , 
    @IN_MV_MOEDACM Char( 5 ) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB8 Char( 2)
DECLARE @cFil_SB9 Char( 2)
DECLARE @cFil_SBF Char( 2)
DECLARE @cFil_SBJ Char( 2)
DECLARE @cFil_SBK Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SD5 Char( 2)
DECLARE @cFil_SDB Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SBE Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cLocal Char( 2)
DECLARE @lLocaliz Char( 01 )
DECLARE @lRastro Char( 01 )
DECLARE @lIntDl Char( 01 )
DECLARE @dUltSaiSD3 Char( 08 )
DECLARE @dUltSaiSD2 Char( 08 )
DECLARE @dUltSai Char( 08 )
DECLARE @dBJ_DATA Char( 8)
DECLARE @dBJ_DTVALID Char( 8)
DECLARE @cBJ_LOTECTL Char( 10)
DECLARE @cBJ_NUMLOTE Char( 6)
DECLARE @dB8_DTVALID Char( 8)
DECLARE @cD5_PRODUTO Char( 15)
DECLARE @cD5_LOCAL Char( 2)
DECLARE @cD5_LOTECTL Char( 10)
DECLARE @cD5_NUMLOTE Char( 6)
DECLARE @dD5_DATA Char( 8)
DECLARE @dD5_DTVALID Char( 8)
DECLARE @dBK_DATA Char( 8)
DECLARE @cBK_LOTECTL Char( 10)
DECLARE @cBK_NUMLOTE Char( 6)
DECLARE @cBK_LOCALIZ Char( 15)
DECLARE @cBK_NUMSERI Char( 20)
DECLARE @cBK_COD Char( 15)
DECLARE @cBK_LOCAL Char( 2)
DECLARE @nBK_QINI Decimal( 14 , 2 )
DECLARE @nBK_QISEGUM Decimal( 14 , 2 )
DECLARE @cBK_PRIOR Char( 3)
DECLARE @nOUT_QSALDOATU Float
DECLARE @nOUT_CUSTOATU Float
DECLARE @nOUT_CUSTOATU2 Float
DECLARE @nOUT_CUSTOATU3 Float
DECLARE @nOUT_CUSTOATU4 Float
DECLARE @nOUT_CUSTOATU5 Float
DECLARE @nOUT_QTSEGUM Decimal( 14 , 2 )
DECLARE @nIN_QTSEGUM Decimal( 14 , 2 )
DECLARE @nB2_CM1 Decimal( 14 , 4 )
DECLARE @nB2_CM2 Decimal( 14 , 4 )
DECLARE @nB2_CM3 Decimal( 14 , 4 )
DECLARE @nB2_CM4 Decimal( 14 , 4 )
DECLARE @nB2_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CM1 Decimal( 14 , 4 )
DECLARE @nB9_CM2 Decimal( 14 , 4 )
DECLARE @nB9_CM3 Decimal( 14 , 4 )
DECLARE @nB9_CM4 Decimal( 14 , 4 )
DECLARE @nB9_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CMRP1 Decimal( 14 , 4 )
DECLARE @nB9_CMRP2 Decimal( 14 , 4 )
DECLARE @nB9_CMRP3 Decimal( 14 , 4 )
DECLARE @nB9_CMRP4 Decimal( 14 , 4 )
DECLARE @nB9_CMRP5 Decimal( 14 , 4 )
DECLARE @nB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @nBJ_QINI Decimal( 14 , 2 )
DECLARE @nBJ_QISEGUM Decimal( 14 , 2 )
DECLARE @nB8_QTDORI Decimal( 14 , 2 )
DECLARE @nB8_QTDORI2 Decimal( 14 , 2 )
DECLARE @nB8_SALDO Decimal( 14 , 2 )
DECLARE @nB8_SALDO2 Decimal( 14 , 2 )
DECLARE @nED5_QUANT Decimal( 12 , 2 )
DECLARE @nED5_QTSEGUM Decimal( 12 , 2 )
DECLARE @nSD5_QUANT Decimal( 12 , 2 )
DECLARE @nSD5_QTSEGUM Decimal( 12 , 2 )
DECLARE @nQuant Decimal( 14 , 2 )
DECLARE @nQuant2 Decimal( 14 , 2 )
DECLARE @iRecno Integer
DECLARE @iRecCount Integer
DECLARE @iRec Integer
DECLARE @iMaxRecno Integer
DECLARE @iRecAnt Integer
DECLARE @cAux VarChar( 6 )
DECLARE @dAux Char( 8 )
DECLARE @nMinRecno Integer
DECLARE @nMaxRecno Integer
DECLARE @lSaldoIni VarChar( 1 )
DECLARE @dData Char( 08 )
DECLARE @cEstFis Char( 6)
DECLARE @cPrior Char( 3)
DECLARE @BF_LOCAL Char( 2)
DECLARE @BF_LOCALIZ Char( 15 )
DECLARE @nValorMax Decimal( 14 , 2 )
DECLARE @nValorMax2 Decimal( 14 , 2 )
DECLARE @nResult Char( 01 )
DECLARE @cFilialAux VarChar( 2)
DECLARE @cTipo VarChar( 2)
DECLARE @ccCusto VarChar( 9)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @lSaldoIni  = '0' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SB8' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB8 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SBF' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBF output 
   SET @cAux  = 'SBJ' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBJ output 
   SET @cAux  = 'SBK' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBK output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SD5' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SD5 output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SDB output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SBE' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBE output 
   SET @cFilialAux  = '  ' 
   SET @cTipo  = '  ' 
   SET @cPrior  = '   ' 
   SET @cEstFis  = '      ' 
   SET @ccCusto  = '         ' 
    
   -- Cursor declaration LISTA_DE_PROD
   DECLARE LISTA_DE_PROD insensitive  CURSOR FOR 
   SELECT B1_COD , B1_CCCUSTO 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  between @IN_MV_PAR03 and @IN_MV_PAR04  and  ( (@IN_MV_PAR05  = 1  or @IN_MV_PAR06  = 1 
      or @IN_MV_PAR05  = 3  or @IN_MV_PAR06  = 3 )  or  ( (B1_COD NOT LIKE 'MOD%'  and B1_CCCUSTO  = @ccCusto )  and @IN_MV_PAR05  = 2 
      and @IN_MV_PAR06  = 2 ) )  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN LISTA_DE_PROD
   FETCH LISTA_DE_PROD 
    INTO @cProduto , @cB1_CCCUSTO 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @cLocal  = null 
       
      -- Cursor declaration CUR_LOCAL
      DECLARE CUR_LOCAL insensitive  CURSOR FOR 
      SELECT B2_LOCAL  as xLOCAL 
        FROM SB2010 
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and  ( (B2_LOCAL  >= @IN_DELOCAL  and B2_LOCAL  <= @IN_ATELOCAL 
        )  or B2_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT B9_LOCAL  as xLOCAL 
        FROM SB9010 
        WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @cProduto  and  ( (B9_LOCAL  >= @IN_DELOCAL  and B9_LOCAL  <= @IN_ATELOCAL 
        )  or B9_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT D1_LOCAL  as xLOCAL 
        FROM SD1010 
        WHERE D1_FILIAL  = @cFil_SD1  and D1_COD  = @cProduto  and  ( (D1_LOCAL  >= @IN_DELOCAL  and D1_LOCAL  <= @IN_ATELOCAL 
        )  or D1_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT D2_LOCAL  as xLOCAL 
        FROM SD2010 
        WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  = @cProduto  and  ( (D2_LOCAL  >= @IN_DELOCAL  and D2_LOCAL  <= @IN_ATELOCAL 
        )  or D2_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT D3_LOCAL  as xLOCAL 
        FROM SD3010 
        WHERE D3_FILIAL  = @cFil_SD3  and D3_COD  = @cProduto  and  ( (D3_LOCAL  >= @IN_DELOCAL  and D3_LOCAL  <= @IN_ATELOCAL 
        )  or D3_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
        ORDER BY 1 
      FOR READ ONLY 
       
      OPEN CUR_LOCAL
      FETCH CUR_LOCAL 
       INTO @cLocal 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nB2_CM1  = 0 
         SET @nB2_CM2  = 0 
         SET @nB2_CM3  = 0 
         SET @nB2_CM4  = 0 
         SET @nB2_CM5  = 0 
         IF  (@cLocal is NOT null ) 
         BEGIN 
            begin tran 
            SET @dAux  = '20491231' 
            EXEC MAT006_18_01 @cProduto , @cLocal , @dAux , @cFilialAux , @IN_MV_LOCPROC , @IN_FILIALCOR , @IN_MV_D3SERVI , 
                   @IN_INTDL , @IN_MV_CQ , @IN_MV_WMSNEW , '0' , @nOUT_QSALDOATU output , @nOUT_CUSTOATU output , @nOUT_CUSTOATU2 output , 
                   @nOUT_CUSTOATU3 output , @nOUT_CUSTOATU4 output , @nOUT_CUSTOATU5 output , @nOUT_QTSEGUM output , @nB9_CM1 output , 
                   @nB9_CM2 output , @nB9_CM3 output , @nB9_CM4 output , @nB9_CM5 output , @nB9_CMRP1 output , @nB9_CMRP2 output , 
                   @nB9_CMRP3 output , @nB9_CMRP4 output , @nB9_CMRP5 output , @nB9_VINIRP1 output , @nB9_VINIRP2 output , 
                   @nB9_VINIRP3 output , @nB9_VINIRP4 output , @nB9_VINIRP5 output 
            SELECT @iRecCount  = COALESCE ( COUNT ( * ), 0 )
              FROM SB2010 
              WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
            IF @iRecCount  > 0 
            BEGIN 
               SELECT @iRecCount  = MIN ( R_E_C_N_O_ )
                 FROM SB2010 
                 WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
               DELETE FROM SB2010  WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and R_E_C_N_O_  <> @iRecCount 
                  and D_E_L_E_T_  = ' ' 
            END 
            ELSE 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SB2010 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
               INSERT INTO SB2010 (B2_FILIAL , B2_COD , B2_LOCAL , R_E_C_N_O_ ) 
               VALUES (@cFil_SB2 , @cProduto , @cLocal , @iRecno );
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            SELECT @dUltSaiSD3  = MAX ( SUBSTRING ( D3_EMISSAO , 1 , 8 ))
              FROM SD3010 
              WHERE D3_FILIAL  = @cFil_SD3  and D3_COD  = @cProduto  and D3_LOCAL  = @cLocal  and D3_TM  > '500'  and D_E_L_E_T_  = ' ' 
              
            SET @dUltSaiSD3  = COALESCE ( @dUltSaiSD3 , '19800101' )
            SELECT @dUltSaiSD2  = MAX ( SUBSTRING ( D2_EMISSAO , 1 , 8 ))
              FROM SD2010 SD2, SF4010 SF4
              WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  = @cProduto  and D2_LOCAL  = @cLocal  and F4_FILIAL  = @cFil_SF4 
               and F4_CODIGO  = D2_TES  and F4_ESTOQUE  = 'S'  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
            SET @dUltSaiSD2  = COALESCE ( @dUltSaiSD2 , '19800101' )
            SET @dUltSai  = @dUltSaiSD3 
            IF @dUltSaiSD3  < @dUltSaiSD2 
            BEGIN 
               SET @dUltSai  = @dUltSaiSD2 
            END 
            IF @dUltSai  <> '19800101' 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_USAI  = @dUltSai 
                WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
            END 
            SELECT @nMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @nMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SB2010 
              WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
            SET @nMinRecno  = COALESCE ( @nMinRecno , 0 )
            SET @nMaxRecno  = COALESCE ( @nMaxRecno , 0 )
            IF  (UPPER ( SUBSTRING ( @cProduto , 1 , 3 )) = 'MOD'  or @cB1_CCCUSTO  <> ' ' )  and  (@IN_MV_PAR05  <> 3  and @IN_MV_PAR06  <> 3 
              ) 
            BEGIN 
               IF  (@IN_MV_PAR05  = 1 ) 
               BEGIN 
                  IF  (@IN_MV_PAR06  = 1 ) 
                  BEGIN 
                     WHILE ( (@nMinRecno  <= @nMaxRecno ) )
                     BEGIN
                        UPDATE SB2010 
                          WITH (ROWLOCK) 
                           SET B2_VATU1  = 0 , B2_VATU2  = 0 , B2_VATU3  = 0 , B2_VATU4  = 0 , B2_VATU5  = 0 , B2_QATU  = 0 
                          , B2_QTSEGUM  = 0 , B2_CM1  = 0 , B2_CM2  = 0 , B2_CM3  = 0 , B2_CM4  = 0 , B2_CM5  = 0 
                         WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                           and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                        SET @nMinRecno  = @nMinRecno  + 4096 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     WHILE ( (@nMinRecno  <= @nMaxRecno ) )
                     BEGIN
                        UPDATE SB2010 
                          WITH (ROWLOCK) 
                           SET B2_VATU1  = 0 , B2_VATU2  = 0 , B2_VATU3  = 0 , B2_VATU4  = 0 , B2_VATU5  = 0 , B2_QATU  = 0 
                          , B2_QTSEGUM  = 0 
                         WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                           and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                        SET @nMinRecno  = @nMinRecno  + 4096 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_MV_PAR06  = 1 ) 
                  BEGIN 
                     WHILE ( (@nMinRecno  <= @nMaxRecno ) )
                     BEGIN
                        UPDATE SB2010 
                          WITH (ROWLOCK) 
                           SET B2_CM1  = 0 , B2_CM2  = 0 , B2_CM3  = 0 , B2_CM4  = 0 , B2_CM5  = 0 
                         WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                           and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                        SET @nMinRecno  = @nMinRecno  + 4096 
                     END 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               SET @nOUT_QSALDOATU  = ROUND ( @nOUT_QSALDOATU , 8 )
               IF @nOUT_QSALDOATU  > 0.00000001 
               BEGIN 
                  SET @nB2_CM1  = @nOUT_CUSTOATU  / @nOUT_QSALDOATU 
                  SET @nB2_CM2  = @nOUT_CUSTOATU2  / @nOUT_QSALDOATU 
                  SET @nB2_CM3  = @nOUT_CUSTOATU3  / @nOUT_QSALDOATU 
                  SET @nB2_CM4  = @nOUT_CUSTOATU4  / @nOUT_QSALDOATU 
                  SET @nB2_CM5  = @nOUT_CUSTOATU5  / @nOUT_QSALDOATU 
               END 
               ELSE 
               BEGIN 
                  SELECT @nB2_CM1  = COALESCE ( B2_CM1 , 0 ), @nB2_CM2  = COALESCE ( B2_CM2 , 0 ), @nB2_CM3  = COALESCE ( B2_CM3 , 
                         0 ), @nB2_CM4  = COALESCE ( B2_CM4 , 0 ), @nB2_CM5  = COALESCE ( B2_CM5 , 0 )
                    FROM SB2010 
                    WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                    
               END 
               SET @nIN_QTSEGUM  = @nOUT_QTSEGUM 
               EXEC MAT018_18_01 @cProduto , @IN_FILIALCOR , @nOUT_QSALDOATU , @nIN_QTSEGUM , 2 , @nOUT_QTSEGUM output 
               WHILE ( (@nMinRecno  <= @nMaxRecno ) )
               BEGIN
                  UPDATE SB2010 
                    WITH (ROWLOCK) 
                     SET B2_QATU  = @nOUT_QSALDOATU , B2_VATU1  = @nOUT_CUSTOATU , B2_VATU2  = @nOUT_CUSTOATU2 , B2_VATU3  = @nOUT_CUSTOATU3 
                    , B2_VATU4  = @nOUT_CUSTOATU4 , B2_VATU5  = @nOUT_CUSTOATU5 , B2_CM1  = @nB2_CM1 , B2_CM2  = @nB2_CM2 
                    , B2_CM3  = @nB2_CM3 , B2_CM4  = @nB2_CM4 , B2_CM5  = @nB2_CM5 , B2_QTSEGUM  = @nOUT_QTSEGUM 
                   WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                     and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                  SET @nMinRecno  = @nMinRecno  + 4096 
               END 
            END 
            SET @lSaldoIni  = '0' 
            SET @cAux  = @cTipo 
            EXEC MAT011_18_01 @IN_MV_RASTRO , @cProduto , @cAux , @IN_FILIALCOR , @lRastro output 
            IF  (@lRastro  = '1' ) 
            BEGIN 
               SELECT @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SB8010 
                 WHERE B8_FILIAL  = @cFil_SB8  and B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto  and B8_LOCAL  = @cLocal 
                  and D_E_L_E_T_  = ' ' 
               SET @iRec  = 0 
               SET @iMaxRecno  = COALESCE ( @iMaxRecno , 0 )
               WHILE ( (@iRec  <= @iMaxRecno ) )
               BEGIN
                  SET @iRecAnt  = @iRec 
                  SET @iRec  = @iRec  + 50000 
                  UPDATE SB8010 
                    WITH (ROWLOCK) 
                     SET B8_SALDO  = 0 , B8_SALDO2  = 0 
                   WHERE R_E_C_N_O_  between @iRecAnt and @iRec  and B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto 
                     and B8_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
               END 
                
               -- Cursor declaration CUR_SBJ
               DECLARE CUR_SBJ insensitive  CURSOR FOR 
               SELECT BJ_DATA , BJ_DTVALID , BJ_LOTECTL , BJ_NUMLOTE , BJ_QINI , BJ_QISEGUM 
                 FROM SBJ010 SBJ
                 WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and BJ_DATA  = (
               SELECT MAX ( SUBSTRING ( BJ_DATA , 1 , 8 ))
                 FROM SBJ010 SBJ
                 WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
                 
                
               OPEN CUR_SBJ
               FETCH CUR_SBJ 
                INTO @dBJ_DATA , @dBJ_DTVALID , @cBJ_LOTECTL , @cBJ_NUMLOTE , @nBJ_QINI , @nBJ_QISEGUM 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  IF @dBJ_DATA  = @IN_MV_ULMES 
                  BEGIN 
                     SET @lSaldoIni  = '1' 
                     SET @iRecno  = null 
                     SELECT @iRecno  = R_E_C_N_O_ , @dB8_DTVALID  = B8_DTVALID , @nB8_QTDORI  = B8_QTDORI , @nB8_QTDORI2  = B8_QTDORI2 
                       
                       FROM SB8010 
                       WHERE B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto  and B8_LOCAL  = @cLocal  and B8_LOTECTL  = @cBJ_LOTECTL 
                        and B8_NUMLOTE  = @cBJ_NUMLOTE  and D_E_L_E_T_  = ' ' 
                     SET @nIN_QTSEGUM  = @nBJ_QISEGUM 
                     EXEC MAT018_18_01 @cProduto , @IN_FILIALCOR , @nBJ_QINI , @nIN_QTSEGUM , 2 , @nBJ_QISEGUM output 
                     IF @iRecno is null 
                     BEGIN 
                        SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                          FROM SB8010 
                        SET @iRecno  = @iRecno  + 1 
                        select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                        INSERT INTO SB8010 (B8_FILIAL , B8_PRODUTO , B8_LOCAL , B8_LOTECTL , B8_NUMLOTE , B8_DATA , B8_ORIGLAN , 
                               B8_SALDO , B8_SALDO2 , B8_QTDORI , B8_QTDORI2 , B8_DTVALID , R_E_C_N_O_ ) 
                        VALUES (@cFil_SB8 , @cProduto , @cLocal , @cBJ_LOTECTL , @cBJ_NUMLOTE , @dBJ_DATA , ' ' , @nBJ_QINI , 
                               @nBJ_QISEGUM , @nBJ_QINI , @nBJ_QISEGUM , @dBJ_DTVALID , @iRecno );
                        
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                     END 
                     ELSE 
                     BEGIN 
                        IF  (@nBJ_QINI  > @nB8_QTDORI ) 
                        BEGIN 
                           SET @nB8_QTDORI  = @nBJ_QINI 
                        END 
                        IF  (@nBJ_QISEGUM  > @nB8_QTDORI2 ) 
                        BEGIN 
                           SET @nB8_QTDORI2  = @nBJ_QISEGUM 
                        END 
                        UPDATE SB8010 
                          WITH (ROWLOCK) 
                           SET B8_ORIGLAN  = ' ' , B8_SALDO  = @nBJ_QINI , B8_SALDO2  = @nBJ_QISEGUM , B8_QTDORI  = @nB8_QTDORI 
                          , B8_QTDORI2  = @nB8_QTDORI2 
                         WHERE R_E_C_N_O_  = @iRecno 
                     END 
                  END 
                  FETCH CUR_SBJ 
                   INTO @dBJ_DATA , @dBJ_DTVALID , @cBJ_LOTECTL , @cBJ_NUMLOTE , @nBJ_QINI , @nBJ_QISEGUM 
               END 
               CLOSE CUR_SBJ
               DEALLOCATE CUR_SBJ
                
               -- Cursor declaration CUR_SD5
               DECLARE CUR_SD5 insensitive  CURSOR FOR 
               SELECT D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                 FROM SD5010 SD5
                 WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_ESTORNO  <> 'S' 
                  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and D_E_L_E_T_  = ' ' 
                 GROUP BY D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                
               OPEN CUR_SD5
               FETCH CUR_SD5 
                INTO @cD5_PRODUTO , @cD5_LOCAL , @cD5_LOTECTL , @cD5_NUMLOTE 
               WHILE (@@fetch_status  = 0 )
               BEGIN
                  SET @nSD5_QUANT  = 0 
                  SET @nED5_QUANT  = 0 
                  SET @nED5_QTSEGUM  = 0 
                  SET @nSD5_QTSEGUM  = 0 
                  SELECT @dD5_DATA  = MIN ( SUBSTRING ( D5_DATA , 1 , 8 )), @dD5_DTVALID  = MAX ( SUBSTRING ( D5_DTVALID , 
                         1 , 8 ))
                    FROM SD5010 SD5
                    WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cD5_PRODUTO  and D5_LOCAL  = @cD5_LOCAL  and D5_LOTECTL  = @cD5_LOTECTL 
                     and D5_NUMLOTE  = @cD5_NUMLOTE  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and D_E_L_E_T_  = ' ' 
                    
                  SELECT @nED5_QUANT  = COALESCE ( SUM(D5_QUANT ), 0 ), @nED5_QTSEGUM  = COALESCE ( SUM(D5_QTSEGUM ), 0 )
                    
                    FROM SD5010 SD5
                    WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cD5_LOTECTL 
                     and D5_NUMLOTE  = @cD5_NUMLOTE  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and  ( (D5_ORIGLAN  <= '500' 
                    )  or  (SUBSTRING ( D5_ORIGLAN , 1 , 2 )in ( 'DE' , 'PR'  ) )  or  (D5_ORIGLAN  = 'MAN' ) )  and D_E_L_E_T_  = ' ' 
                    
                    GROUP BY D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                  SET @nED5_QUANT  = COALESCE ( @nED5_QUANT , 0 )
                  SET @nED5_QTSEGUM  = COALESCE ( @nED5_QTSEGUM , 0 )
                  SELECT @nSD5_QUANT  = COALESCE ( SUM(D5_QUANT ), 0 ), @nSD5_QTSEGUM  = COALESCE ( SUM(D5_QTSEGUM ), 0 )
                    
                    FROM SD5010 SD5
                    WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cD5_LOTECTL 
                     and D5_NUMLOTE  = @cD5_NUMLOTE  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and D5_ORIGLAN  > '500' 
                     and  (SUBSTRING ( D5_ORIGLAN , 1 , 2 )NOT IN ( 'DE' , 'PR'  ) )  and  (D5_ORIGLAN  <> 'MAN' )  and D_E_L_E_T_  = ' ' 
                    
                    GROUP BY D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                  SET @nSD5_QUANT  = COALESCE ( @nSD5_QUANT , 0 )
                  SET @nSD5_QTSEGUM  = COALESCE ( @nSD5_QTSEGUM , 0 )
                  SET @nQuant  = @nED5_QUANT  - @nSD5_QUANT 
                  SET @nQuant2  = @nED5_QTSEGUM  - @nSD5_QTSEGUM 
                  SET @iRecno  = null 
                  SELECT @iRecno  = R_E_C_N_O_ , @dB8_DTVALID  = B8_DTVALID , @nB8_QTDORI  = B8_QTDORI , @nB8_QTDORI2  = B8_QTDORI2 
                    , @nB8_SALDO  = B8_SALDO , @nB8_SALDO2  = B8_SALDO2 
                    FROM SB8010 
                    WHERE B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto  and B8_LOCAL  = @cLocal  and B8_LOTECTL  = @cD5_LOTECTL 
                     and B8_NUMLOTE  = @cD5_NUMLOTE  and D_E_L_E_T_  = ' ' 
                  IF @iRecno is null 
                  BEGIN 
                     IF  (@nQuant  < 0 ) 
                     BEGIN 
                        SET @nQuant  = 0 
                     END 
                     IF  (@nQuant2  < 0 ) 
                     BEGIN 
                        SET @nQuant2  = 0 
                     END 
                     SET @nIN_QTSEGUM  = @nQuant2 
                     EXEC MAT018_18_01 @cProduto , @IN_FILIALCOR , @nQuant , @nIN_QTSEGUM , 2 , @nQuant2 output 
                     SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                       FROM SB8010 
                     SET @iRecno  = COALESCE ( @iRecno , 0 )
                     SET @iRecno  = @iRecno  + 1 
                     select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                     INSERT INTO SB8010 (B8_FILIAL , B8_PRODUTO , B8_LOCAL , B8_LOTECTL , B8_NUMLOTE , B8_DATA , B8_ORIGLAN , 
                            B8_SALDO , B8_SALDO2 , B8_QTDORI , B8_QTDORI2 , B8_DTVALID , R_E_C_N_O_ ) 
                     VALUES (@cFil_SB8 , @cProduto , @cLocal , @cD5_LOTECTL , @cD5_NUMLOTE , @dD5_DATA , ' ' , @nQuant , 
                            @nQuant2 , @nQuant , @nQuant2 , @dD5_DTVALID , @iRecno );
                     
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@nB8_SALDO  + @nQuant  > 0 )  or  (@IN_L300SALNEG  = '1' ) 
                     BEGIN 
                        SET @nB8_SALDO  = @nB8_SALDO  + @nQuant 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nB8_SALDO  = 0 
                     END 
                     IF  (@nB8_SALDO2  + @nQuant2  > 0 )  or  (@IN_L300SALNEG  = '1' ) 
                     BEGIN 
                        SET @nB8_SALDO2  = @nB8_SALDO2  + @nQuant2 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nB8_SALDO2  = 0 
                     END 
                     SET @nValorMax  = 0 
                     IF @nB8_SALDO  > @nB8_QTDORI 
                     BEGIN 
                        SET @nValorMax  = @nB8_SALDO 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nValorMax  = @nB8_QTDORI 
                     END 
                     IF @nValorMax  > 0  or @IN_L300SALNEG  = '1' 
                     BEGIN 
                        SET @nB8_QTDORI  = @nValorMax 
                     END 
                     IF @nB8_SALDO2  > @nB8_QTDORI2 
                     BEGIN 
                        SET @nValorMax2  = @nB8_SALDO2 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nValorMax2  = @nB8_QTDORI2 
                     END 
                     IF @nValorMax2  > 0  or @IN_L300SALNEG  = '1' 
                     BEGIN 
                        SET @nB8_QTDORI2  = @nValorMax2 
                     END 
                     SET @nIN_QTSEGUM  = @nB8_SALDO2 
                     EXEC MAT018_18_01 @cProduto , @IN_FILIALCOR , @nB8_SALDO , @nIN_QTSEGUM , 2 , @nB8_SALDO2 output 
                     UPDATE SB8010 
                       WITH (ROWLOCK) 
                        SET B8_SALDO  = @nB8_SALDO , B8_SALDO2  = @nB8_SALDO2 , B8_QTDORI  = @nB8_QTDORI , B8_QTDORI2  = @nB8_QTDORI2 
                       
                      WHERE R_E_C_N_O_  = @iRecno 
                  END 
                  EXEC M300SB8_01 @IN_FILIALCOR , @cProduto , @cLocal , @cD5_LOTECTL , @cD5_NUMLOTE 
                  FETCH CUR_SD5 
                   INTO @cD5_PRODUTO , @cD5_LOCAL , @cD5_LOTECTL , @cD5_NUMLOTE 
               END 
               CLOSE CUR_SD5
               DEALLOCATE CUR_SD5
            END 
            SET @lSaldoIni  = '0' 
            EXEC MAT012_18_01 @cProduto , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
            IF @IN_MV_WMSNEW  = '1' 
            BEGIN 
               EXEC MAT057_18_01 @cProduto , @IN_FILIALCOR , @lIntDl output 
            END 
            ELSE 
            BEGIN 
               SET @lIntDl  = '0' 
            END 
            IF @lLocaliz  = '1'  and  not  (@IN_MV_WMSNEW  = '1'  and @lIntDl  = '1' ) 
            BEGIN 
               UPDATE SBF010 
                 WITH (ROWLOCK) 
                  SET BF_QUANT  = 0 , BF_QTSEGUM  = 0 
                WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                 
                
               -- Cursor declaration CUR_SBK
               DECLARE CUR_SBK insensitive  CURSOR FOR 
               SELECT BK_LOCAL , BK_LOCALIZ , BK_COD , BK_NUMSERI , BK_LOTECTL , BK_NUMLOTE , BK_DATA , BK_QINI , BK_QISEGUM , 
                      BK_PRIOR 
                 FROM SBK010 SBK
                 WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_DATA  = (
               SELECT MAX ( SUBSTRING ( BK_DATA , 1 , 8 ))
                 FROM SBK010 SBKSUB
                 WHERE SBKSUB.BK_FILIAL  = @cFil_SBK  and SBKSUB.BK_COD  = @cProduto  and SBKSUB.BK_LOCAL  = @cLocal  and SBKSUB.BK_LOTECTL  = SBK.BK_LOTECTL 
                  and SBKSUB.BK_NUMLOTE  = SBK.BK_NUMLOTE  and SBKSUB.BK_LOCALIZ  = SBK.BK_LOCALIZ  and SBKSUB.BK_NUMSERI  = SBK.BK_NUMSERI 
                  and SBKSUB.BK_DATA  >= @IN_MV_ULMES  and SBKSUB.D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
                 ORDER BY BK_LOCAL , BK_LOCALIZ , BK_COD , BK_NUMSERI , BK_LOTECTL , BK_NUMLOTE , BK_DATA 
                
               OPEN CUR_SBK
               FETCH CUR_SBK 
                INTO @cBK_LOCAL , @cBK_LOCALIZ , @cBK_COD , @cBK_NUMSERI , @cBK_LOTECTL , @cBK_NUMLOTE , @dBK_DATA , @nBK_QINI , 
                      @nBK_QISEGUM , @cBK_PRIOR 
               WHILE (@@fetch_status  = 0 )
               BEGIN
                  SET @iRecCount  = null 
                  SELECT @iRecCount  = COALESCE ( COUNT ( * ), 0 )
                    FROM SBK010 SBK
                    WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOTECTL  = @cBK_LOTECTL 
                     and BK_NUMLOTE  = @cBK_NUMLOTE  and BK_LOCALIZ  = @cBK_LOCALIZ  and BK_NUMSERI  = @cBK_NUMSERI  and BK_DATA  = (
                  SELECT MAX ( SUBSTRING ( BK_DATA , 1 , 8 ))
                    FROM SBK010 SBK
                    WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOTECTL  = @cBK_LOTECTL 
                     and BK_NUMLOTE  = @cBK_NUMLOTE  and BK_LOCALIZ  = @cBK_LOCALIZ  and BK_NUMSERI  = @cBK_NUMSERI  and D_E_L_E_T_  = ' ' 
                    ) and BK_DATA  > @IN_MV_ULMES  and D_E_L_E_T_  = ' ' 
                  IF @iRecCount  = 0 
                  BEGIN 
                     SELECT @cEstFis  = BE_ESTFIS , @cPrior  = BE_PRIOR 
                       FROM SBE010 
                       WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @cLocal  and BE_LOCALIZ  = @cBK_LOCALIZ  and D_E_L_E_T_  = ' ' 
                       
                     IF @IN_INTDL  = '0' 
                     BEGIN 
                        SET @cEstFis  = ' ' 
                     END 
                     IF @cPrior is null 
                     BEGIN 
                        SET @cPrior  = ' ' 
                     END 
                     IF @cEstFis is null 
                     BEGIN 
                        SET @cEstFis  = ' ' 
                     END 
                     SET @lSaldoIni  = '1' 
                     SET @iRecno  = null 
                     SELECT @iRecno  = R_E_C_N_O_ 
                       FROM SBF010 
                       WHERE BF_FILIAL  = @cFil_SBF  and BF_LOCAL  = @cLocal  and BF_LOCALIZ  = @cBK_LOCALIZ  and BF_ESTFIS  = @cEstFis 
                        and BF_PRODUTO  = @cProduto  and BF_NUMSERI  = @cBK_NUMSERI  and BF_LOTECTL  = @cBK_LOTECTL  and BF_NUMLOTE  = @cBK_NUMLOTE 
                        and D_E_L_E_T_  = ' ' 
                     SET @nIN_QTSEGUM  = @nBK_QISEGUM 
                     EXEC MAT018_18_01 @cProduto , @IN_FILIALCOR , @nBK_QINI , @nIN_QTSEGUM , 2 , @nBK_QISEGUM output 
                     IF @iRecno is null 
                     BEGIN 
                        SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                          FROM SBF010 
                        SET @iRecno  = COALESCE ( @iRecno , 0 )
                        SET @iRecno  = @iRecno  + 1 
                        select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                        INSERT INTO SBF010 (BF_FILIAL , BF_PRODUTO , BF_LOCAL , BF_LOTECTL , BF_NUMLOTE , BF_LOCALIZ , BF_NUMSERI , 
                               BF_QUANT , BF_QTSEGUM , BF_PRIOR , BF_ESTFIS , BF_EMPENHO , BF_EMPEN2 , R_E_C_N_O_ ) 
                        VALUES (@cFil_SBF , @cProduto , @cLocal , @cBK_LOTECTL , @cBK_NUMLOTE , @cBK_LOCALIZ , @cBK_NUMSERI , 
                               @nBK_QINI , @nBK_QISEGUM , @cPrior , @cEstFis , 0 , 0 , @iRecno );
                        
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                     END 
                     ELSE 
                     BEGIN 
                        UPDATE SBF010 
                          WITH (ROWLOCK) 
                           SET BF_QUANT  = @nBK_QINI , BF_QTSEGUM  = @nBK_QISEGUM 
                         WHERE R_E_C_N_O_  = @iRecno 
                     END 
                  END 
                  SET @lSaldoIni  = '1' 
                  FETCH CUR_SBK 
                   INTO @cBK_LOCAL , @cBK_LOCALIZ , @cBK_COD , @cBK_NUMSERI , @cBK_LOTECTL , @cBK_NUMLOTE , @dBK_DATA , @nBK_QINI , 
                         @nBK_QISEGUM , @cBK_PRIOR 
               END 
               CLOSE CUR_SBK
               DEALLOCATE CUR_SBK
               EXEC MAT044_18_01 @IN_FILIALCOR , @cProduto , @cLocal , @lSaldoIni , @IN_MV_ULMES , @IN_MV_RASTRO , @IN_INTDL 
            END 
            Commit transaction 
         END 
         FETCH CUR_LOCAL 
          INTO @cLocal 
      END 
      CLOSE CUR_LOCAL
      DEALLOCATE CUR_LOCAL
      IF @IN_MV_CUSMED  = '1'  and  (@IN_MV_CUSFIL  = '1'  or @IN_MV_CUSEMP  = '1' ) 
      BEGIN 
         EXEC MAT050_18_01 @IN_FILIALCOR , @cProduto , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nResult output 
      END 
      FETCH LISTA_DE_PROD 
       INTO @cProduto , @cB1_CCCUSTO 
   END 
   CLOSE LISTA_DE_PROD
   DEALLOCATE LISTA_DE_PROD
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT040_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT040_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT040_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT040_18_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DELOCAL Char( 2) , 
    @IN_ATELOCAL Char( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_MV_PAR03 Char( 15) , 
    @IN_MV_PAR04 Char( 15) , 
    @IN_MV_PAR05 Integer , 
    @IN_MV_PAR06 Integer , 
    @IN_L300SALNEG Char( 01 ) , 
    @IN_MV_CUSMED Char( 01 ) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_CUSEMP Char( 01 ) , 
    @IN_MV_MOEDACM Char( 5 ) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB8 Char( 2)
DECLARE @cFil_SB9 Char( 2)
DECLARE @cFil_SBF Char( 2)
DECLARE @cFil_SBJ Char( 2)
DECLARE @cFil_SBK Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SD5 Char( 2)
DECLARE @cFil_SDB Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SBE Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cLocal Char( 2)
DECLARE @lLocaliz Char( 01 )
DECLARE @lRastro Char( 01 )
DECLARE @lIntDl Char( 01 )
DECLARE @dUltSaiSD3 Char( 08 )
DECLARE @dUltSaiSD2 Char( 08 )
DECLARE @dUltSai Char( 08 )
DECLARE @dBJ_DATA Char( 8)
DECLARE @dBJ_DTVALID Char( 8)
DECLARE @cBJ_LOTECTL Char( 10)
DECLARE @cBJ_NUMLOTE Char( 6)
DECLARE @dB8_DTVALID Char( 8)
DECLARE @cD5_PRODUTO Char( 15)
DECLARE @cD5_LOCAL Char( 2)
DECLARE @cD5_LOTECTL Char( 10)
DECLARE @cD5_NUMLOTE Char( 6)
DECLARE @dD5_DATA Char( 8)
DECLARE @dD5_DTVALID Char( 8)
DECLARE @dBK_DATA Char( 8)
DECLARE @cBK_LOTECTL Char( 10)
DECLARE @cBK_NUMLOTE Char( 6)
DECLARE @cBK_LOCALIZ Char( 15)
DECLARE @cBK_NUMSERI Char( 20)
DECLARE @cBK_COD Char( 15)
DECLARE @cBK_LOCAL Char( 2)
DECLARE @nBK_QINI Decimal( 14 , 2 )
DECLARE @nBK_QISEGUM Decimal( 14 , 2 )
DECLARE @cBK_PRIOR Char( 3)
DECLARE @nOUT_QSALDOATU Float
DECLARE @nOUT_CUSTOATU Float
DECLARE @nOUT_CUSTOATU2 Float
DECLARE @nOUT_CUSTOATU3 Float
DECLARE @nOUT_CUSTOATU4 Float
DECLARE @nOUT_CUSTOATU5 Float
DECLARE @nOUT_QTSEGUM Decimal( 14 , 2 )
DECLARE @nIN_QTSEGUM Decimal( 14 , 2 )
DECLARE @nB2_CM1 Decimal( 14 , 4 )
DECLARE @nB2_CM2 Decimal( 14 , 4 )
DECLARE @nB2_CM3 Decimal( 14 , 4 )
DECLARE @nB2_CM4 Decimal( 14 , 4 )
DECLARE @nB2_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CM1 Decimal( 14 , 4 )
DECLARE @nB9_CM2 Decimal( 14 , 4 )
DECLARE @nB9_CM3 Decimal( 14 , 4 )
DECLARE @nB9_CM4 Decimal( 14 , 4 )
DECLARE @nB9_CM5 Decimal( 14 , 4 )
DECLARE @nB9_CMRP1 Decimal( 14 , 4 )
DECLARE @nB9_CMRP2 Decimal( 14 , 4 )
DECLARE @nB9_CMRP3 Decimal( 14 , 4 )
DECLARE @nB9_CMRP4 Decimal( 14 , 4 )
DECLARE @nB9_CMRP5 Decimal( 14 , 4 )
DECLARE @nB9_VINIRP1 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP2 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP3 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP4 Decimal( 14 , 2 )
DECLARE @nB9_VINIRP5 Decimal( 14 , 2 )
DECLARE @nBJ_QINI Decimal( 14 , 2 )
DECLARE @nBJ_QISEGUM Decimal( 14 , 2 )
DECLARE @nB8_QTDORI Decimal( 14 , 2 )
DECLARE @nB8_QTDORI2 Decimal( 14 , 2 )
DECLARE @nB8_SALDO Decimal( 14 , 2 )
DECLARE @nB8_SALDO2 Decimal( 14 , 2 )
DECLARE @nED5_QUANT Decimal( 12 , 2 )
DECLARE @nED5_QTSEGUM Decimal( 12 , 2 )
DECLARE @nSD5_QUANT Decimal( 12 , 2 )
DECLARE @nSD5_QTSEGUM Decimal( 12 , 2 )
DECLARE @nQuant Decimal( 14 , 2 )
DECLARE @nQuant2 Decimal( 14 , 2 )
DECLARE @iRecno Integer
DECLARE @iRecCount Integer
DECLARE @iRec Integer
DECLARE @iMaxRecno Integer
DECLARE @iRecAnt Integer
DECLARE @cAux VarChar( 6 )
DECLARE @dAux Char( 8 )
DECLARE @nMinRecno Integer
DECLARE @nMaxRecno Integer
DECLARE @lSaldoIni VarChar( 1 )
DECLARE @dData Char( 08 )
DECLARE @cEstFis Char( 6)
DECLARE @cPrior Char( 3)
DECLARE @BF_LOCAL Char( 2)
DECLARE @BF_LOCALIZ Char( 15 )
DECLARE @nValorMax Decimal( 14 , 2 )
DECLARE @nValorMax2 Decimal( 14 , 2 )
DECLARE @nResult Char( 01 )
DECLARE @cFilialAux VarChar( 2)
DECLARE @cTipo VarChar( 2)
DECLARE @ccCusto VarChar( 9)
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @lSaldoIni  = '0' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SB8' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB8 output 
   SET @cAux  = 'SB9' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB9 output 
   SET @cAux  = 'SBF' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBF output 
   SET @cAux  = 'SBJ' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBJ output 
   SET @cAux  = 'SBK' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBK output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SD5' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SD5 output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SDB output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SBE' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBE output 
   SET @cFilialAux  = '  ' 
   SET @cTipo  = '  ' 
   SET @cPrior  = '   ' 
   SET @cEstFis  = '      ' 
   SET @ccCusto  = '         ' 
    
   -- Cursor declaration LISTA_DE_PROD
   DECLARE LISTA_DE_PROD insensitive  CURSOR FOR 
   SELECT B1_COD , B1_CCCUSTO 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  between @IN_MV_PAR03 and @IN_MV_PAR04  and  ( (@IN_MV_PAR05  = 1  or @IN_MV_PAR06  = 1 
      or @IN_MV_PAR05  = 3  or @IN_MV_PAR06  = 3 )  or  ( (B1_COD NOT LIKE 'MOD%'  and B1_CCCUSTO  = @ccCusto )  and @IN_MV_PAR05  = 2 
      and @IN_MV_PAR06  = 2 ) )  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN LISTA_DE_PROD
   FETCH LISTA_DE_PROD 
    INTO @cProduto , @cB1_CCCUSTO 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @cLocal  = null 
       
      -- Cursor declaration CUR_LOCAL
      DECLARE CUR_LOCAL insensitive  CURSOR FOR 
      SELECT B2_LOCAL  as xLOCAL 
        FROM SB2030 
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and  ( (B2_LOCAL  >= @IN_DELOCAL  and B2_LOCAL  <= @IN_ATELOCAL 
        )  or B2_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT B9_LOCAL  as xLOCAL 
        FROM SB9030 
        WHERE B9_FILIAL  = @cFil_SB9  and B9_COD  = @cProduto  and  ( (B9_LOCAL  >= @IN_DELOCAL  and B9_LOCAL  <= @IN_ATELOCAL 
        )  or B9_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT D1_LOCAL  as xLOCAL 
        FROM SD1030 
        WHERE D1_FILIAL  = @cFil_SD1  and D1_COD  = @cProduto  and  ( (D1_LOCAL  >= @IN_DELOCAL  and D1_LOCAL  <= @IN_ATELOCAL 
        )  or D1_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT D2_LOCAL  as xLOCAL 
        FROM SD2030 
        WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  = @cProduto  and  ( (D2_LOCAL  >= @IN_DELOCAL  and D2_LOCAL  <= @IN_ATELOCAL 
        )  or D2_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
      UNION 
      SELECT D3_LOCAL  as xLOCAL 
        FROM SD3030 
        WHERE D3_FILIAL  = @cFil_SD3  and D3_COD  = @cProduto  and  ( (D3_LOCAL  >= @IN_DELOCAL  and D3_LOCAL  <= @IN_ATELOCAL 
        )  or D3_LOCAL  = @IN_MV_LOCPROC )  and D_E_L_E_T_  = ' ' 
        ORDER BY 1 
      FOR READ ONLY 
       
      OPEN CUR_LOCAL
      FETCH CUR_LOCAL 
       INTO @cLocal 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nB2_CM1  = 0 
         SET @nB2_CM2  = 0 
         SET @nB2_CM3  = 0 
         SET @nB2_CM4  = 0 
         SET @nB2_CM5  = 0 
         IF  (@cLocal is NOT null ) 
         BEGIN 
            begin tran 
            SET @dAux  = '20491231' 
            EXEC MAT006_18_02 @cProduto , @cLocal , @dAux , @cFilialAux , @IN_MV_LOCPROC , @IN_FILIALCOR , @IN_MV_D3SERVI , 
                   @IN_INTDL , @IN_MV_CQ , @IN_MV_WMSNEW , '0' , @nOUT_QSALDOATU output , @nOUT_CUSTOATU output , @nOUT_CUSTOATU2 output , 
                   @nOUT_CUSTOATU3 output , @nOUT_CUSTOATU4 output , @nOUT_CUSTOATU5 output , @nOUT_QTSEGUM output , @nB9_CM1 output , 
                   @nB9_CM2 output , @nB9_CM3 output , @nB9_CM4 output , @nB9_CM5 output , @nB9_CMRP1 output , @nB9_CMRP2 output , 
                   @nB9_CMRP3 output , @nB9_CMRP4 output , @nB9_CMRP5 output , @nB9_VINIRP1 output , @nB9_VINIRP2 output , 
                   @nB9_VINIRP3 output , @nB9_VINIRP4 output , @nB9_VINIRP5 output 
            SELECT @iRecCount  = COALESCE ( COUNT ( * ), 0 )
              FROM SB2030 
              WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
            IF @iRecCount  > 0 
            BEGIN 
               SELECT @iRecCount  = MIN ( R_E_C_N_O_ )
                 FROM SB2030 
                 WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
               DELETE FROM SB2030  WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and R_E_C_N_O_  <> @iRecCount 
                  and D_E_L_E_T_  = ' ' 
            END 
            ELSE 
            BEGIN 
               SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SB2030 
               SET @iRecno  = @iRecno  + 1 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
               INSERT INTO SB2030 (B2_FILIAL , B2_COD , B2_LOCAL , R_E_C_N_O_ ) 
               VALUES (@cFil_SB2 , @cProduto , @cLocal , @iRecno );
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
            SELECT @dUltSaiSD3  = MAX ( SUBSTRING ( D3_EMISSAO , 1 , 8 ))
              FROM SD3030 
              WHERE D3_FILIAL  = @cFil_SD3  and D3_COD  = @cProduto  and D3_LOCAL  = @cLocal  and D3_TM  > '500'  and D_E_L_E_T_  = ' ' 
              
            SET @dUltSaiSD3  = COALESCE ( @dUltSaiSD3 , '19800101' )
            SELECT @dUltSaiSD2  = MAX ( SUBSTRING ( D2_EMISSAO , 1 , 8 ))
              FROM SD2030 SD2, SF4030 SF4
              WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  = @cProduto  and D2_LOCAL  = @cLocal  and F4_FILIAL  = @cFil_SF4 
               and F4_CODIGO  = D2_TES  and F4_ESTOQUE  = 'S'  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
            SET @dUltSaiSD2  = COALESCE ( @dUltSaiSD2 , '19800101' )
            SET @dUltSai  = @dUltSaiSD3 
            IF @dUltSaiSD3  < @dUltSaiSD2 
            BEGIN 
               SET @dUltSai  = @dUltSaiSD2 
            END 
            IF @dUltSai  <> '19800101' 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_USAI  = @dUltSai 
                WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
            END 
            SELECT @nMinRecno  = COALESCE ( MIN ( R_E_C_N_O_ ), 0 ), @nMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SB2030 
              WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
            SET @nMinRecno  = COALESCE ( @nMinRecno , 0 )
            SET @nMaxRecno  = COALESCE ( @nMaxRecno , 0 )
            IF  (UPPER ( SUBSTRING ( @cProduto , 1 , 3 )) = 'MOD'  or @cB1_CCCUSTO  <> ' ' )  and  (@IN_MV_PAR05  <> 3  and @IN_MV_PAR06  <> 3 
              ) 
            BEGIN 
               IF  (@IN_MV_PAR05  = 1 ) 
               BEGIN 
                  IF  (@IN_MV_PAR06  = 1 ) 
                  BEGIN 
                     WHILE ( (@nMinRecno  <= @nMaxRecno ) )
                     BEGIN
                        UPDATE SB2030 
                          WITH (ROWLOCK) 
                           SET B2_VATU1  = 0 , B2_VATU2  = 0 , B2_VATU3  = 0 , B2_VATU4  = 0 , B2_VATU5  = 0 , B2_QATU  = 0 
                          , B2_QTSEGUM  = 0 , B2_CM1  = 0 , B2_CM2  = 0 , B2_CM3  = 0 , B2_CM4  = 0 , B2_CM5  = 0 
                         WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                           and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                        SET @nMinRecno  = @nMinRecno  + 4096 
                     END 
                  END 
                  ELSE 
                  BEGIN 
                     WHILE ( (@nMinRecno  <= @nMaxRecno ) )
                     BEGIN
                        UPDATE SB2030 
                          WITH (ROWLOCK) 
                           SET B2_VATU1  = 0 , B2_VATU2  = 0 , B2_VATU3  = 0 , B2_VATU4  = 0 , B2_VATU5  = 0 , B2_QATU  = 0 
                          , B2_QTSEGUM  = 0 
                         WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                           and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                        SET @nMinRecno  = @nMinRecno  + 4096 
                     END 
                  END 
               END 
               ELSE 
               BEGIN 
                  IF  (@IN_MV_PAR06  = 1 ) 
                  BEGIN 
                     WHILE ( (@nMinRecno  <= @nMaxRecno ) )
                     BEGIN
                        UPDATE SB2030 
                          WITH (ROWLOCK) 
                           SET B2_CM1  = 0 , B2_CM2  = 0 , B2_CM3  = 0 , B2_CM4  = 0 , B2_CM5  = 0 
                         WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                           and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                        SET @nMinRecno  = @nMinRecno  + 4096 
                     END 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               SET @nOUT_QSALDOATU  = ROUND ( @nOUT_QSALDOATU , 8 )
               IF @nOUT_QSALDOATU  > 0.00000001 
               BEGIN 
                  SET @nB2_CM1  = @nOUT_CUSTOATU  / @nOUT_QSALDOATU 
                  SET @nB2_CM2  = @nOUT_CUSTOATU2  / @nOUT_QSALDOATU 
                  SET @nB2_CM3  = @nOUT_CUSTOATU3  / @nOUT_QSALDOATU 
                  SET @nB2_CM4  = @nOUT_CUSTOATU4  / @nOUT_QSALDOATU 
                  SET @nB2_CM5  = @nOUT_CUSTOATU5  / @nOUT_QSALDOATU 
               END 
               ELSE 
               BEGIN 
                  SELECT @nB2_CM1  = COALESCE ( B2_CM1 , 0 ), @nB2_CM2  = COALESCE ( B2_CM2 , 0 ), @nB2_CM3  = COALESCE ( B2_CM3 , 
                         0 ), @nB2_CM4  = COALESCE ( B2_CM4 , 0 ), @nB2_CM5  = COALESCE ( B2_CM5 , 0 )
                    FROM SB2030 
                    WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                    
               END 
               SET @nIN_QTSEGUM  = @nOUT_QTSEGUM 
               EXEC MAT018_18_02 @cProduto , @IN_FILIALCOR , @nOUT_QSALDOATU , @nIN_QTSEGUM , 2 , @nOUT_QTSEGUM output 
               WHILE ( (@nMinRecno  <= @nMaxRecno ) )
               BEGIN
                  UPDATE SB2030 
                    WITH (ROWLOCK) 
                     SET B2_QATU  = @nOUT_QSALDOATU , B2_VATU1  = @nOUT_CUSTOATU , B2_VATU2  = @nOUT_CUSTOATU2 , B2_VATU3  = @nOUT_CUSTOATU3 
                    , B2_VATU4  = @nOUT_CUSTOATU4 , B2_VATU5  = @nOUT_CUSTOATU5 , B2_CM1  = @nB2_CM1 , B2_CM2  = @nB2_CM2 
                    , B2_CM3  = @nB2_CM3 , B2_CM4  = @nB2_CM4 , B2_CM5  = @nB2_CM5 , B2_QTSEGUM  = @nOUT_QTSEGUM 
                   WHERE R_E_C_N_O_  between @nMinRecno and  (@nMinRecno  + 4095 )  and B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto 
                     and B2_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                  SET @nMinRecno  = @nMinRecno  + 4096 
               END 
            END 
            SET @lSaldoIni  = '0' 
            SET @cAux  = @cTipo 
            EXEC MAT011_18_02 @IN_MV_RASTRO , @cProduto , @cAux , @IN_FILIALCOR , @lRastro output 
            IF  (@lRastro  = '1' ) 
            BEGIN 
               SELECT @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                 FROM SB8030 
                 WHERE B8_FILIAL  = @cFil_SB8  and B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto  and B8_LOCAL  = @cLocal 
                  and D_E_L_E_T_  = ' ' 
               SET @iRec  = 0 
               SET @iMaxRecno  = COALESCE ( @iMaxRecno , 0 )
               WHILE ( (@iRec  <= @iMaxRecno ) )
               BEGIN
                  SET @iRecAnt  = @iRec 
                  SET @iRec  = @iRec  + 50000 
                  UPDATE SB8030 
                    WITH (ROWLOCK) 
                     SET B8_SALDO  = 0 , B8_SALDO2  = 0 
                   WHERE R_E_C_N_O_  between @iRecAnt and @iRec  and B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto 
                     and B8_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
               END 
                
               -- Cursor declaration CUR_SBJ
               DECLARE CUR_SBJ insensitive  CURSOR FOR 
               SELECT BJ_DATA , BJ_DTVALID , BJ_LOTECTL , BJ_NUMLOTE , BJ_QINI , BJ_QISEGUM 
                 FROM SBJ030 SBJ
                 WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and BJ_DATA  = (
               SELECT MAX ( SUBSTRING ( BJ_DATA , 1 , 8 ))
                 FROM SBJ030 SBJ
                 WHERE BJ_FILIAL  = @cFil_SBJ  and BJ_COD  = @cProduto  and BJ_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
                 
                
               OPEN CUR_SBJ
               FETCH CUR_SBJ 
                INTO @dBJ_DATA , @dBJ_DTVALID , @cBJ_LOTECTL , @cBJ_NUMLOTE , @nBJ_QINI , @nBJ_QISEGUM 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  IF @dBJ_DATA  = @IN_MV_ULMES 
                  BEGIN 
                     SET @lSaldoIni  = '1' 
                     SET @iRecno  = null 
                     SELECT @iRecno  = R_E_C_N_O_ , @dB8_DTVALID  = B8_DTVALID , @nB8_QTDORI  = B8_QTDORI , @nB8_QTDORI2  = B8_QTDORI2 
                       
                       FROM SB8030 
                       WHERE B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto  and B8_LOCAL  = @cLocal  and B8_LOTECTL  = @cBJ_LOTECTL 
                        and B8_NUMLOTE  = @cBJ_NUMLOTE  and D_E_L_E_T_  = ' ' 
                     SET @nIN_QTSEGUM  = @nBJ_QISEGUM 
                     EXEC MAT018_18_02 @cProduto , @IN_FILIALCOR , @nBJ_QINI , @nIN_QTSEGUM , 2 , @nBJ_QISEGUM output 
                     IF @iRecno is null 
                     BEGIN 
                        SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                          FROM SB8030 
                        SET @iRecno  = @iRecno  + 1 
                        select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                        INSERT INTO SB8030 (B8_FILIAL , B8_PRODUTO , B8_LOCAL , B8_LOTECTL , B8_NUMLOTE , B8_DATA , B8_ORIGLAN , 
                               B8_SALDO , B8_SALDO2 , B8_QTDORI , B8_QTDORI2 , B8_DTVALID , R_E_C_N_O_ ) 
                        VALUES (@cFil_SB8 , @cProduto , @cLocal , @cBJ_LOTECTL , @cBJ_NUMLOTE , @dBJ_DATA , ' ' , @nBJ_QINI , 
                               @nBJ_QISEGUM , @nBJ_QINI , @nBJ_QISEGUM , @dBJ_DTVALID , @iRecno );
                        
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                     END 
                     ELSE 
                     BEGIN 
                        IF  (@nBJ_QINI  > @nB8_QTDORI ) 
                        BEGIN 
                           SET @nB8_QTDORI  = @nBJ_QINI 
                        END 
                        IF  (@nBJ_QISEGUM  > @nB8_QTDORI2 ) 
                        BEGIN 
                           SET @nB8_QTDORI2  = @nBJ_QISEGUM 
                        END 
                        UPDATE SB8030 
                          WITH (ROWLOCK) 
                           SET B8_ORIGLAN  = ' ' , B8_SALDO  = @nBJ_QINI , B8_SALDO2  = @nBJ_QISEGUM , B8_QTDORI  = @nB8_QTDORI 
                          , B8_QTDORI2  = @nB8_QTDORI2 
                         WHERE R_E_C_N_O_  = @iRecno 
                     END 
                  END 
                  FETCH CUR_SBJ 
                   INTO @dBJ_DATA , @dBJ_DTVALID , @cBJ_LOTECTL , @cBJ_NUMLOTE , @nBJ_QINI , @nBJ_QISEGUM 
               END 
               CLOSE CUR_SBJ
               DEALLOCATE CUR_SBJ
                
               -- Cursor declaration CUR_SD5
               DECLARE CUR_SD5 insensitive  CURSOR FOR 
               SELECT D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                 FROM SD5030 SD5
                 WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_ESTORNO  <> 'S' 
                  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and D_E_L_E_T_  = ' ' 
                 GROUP BY D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                
               OPEN CUR_SD5
               FETCH CUR_SD5 
                INTO @cD5_PRODUTO , @cD5_LOCAL , @cD5_LOTECTL , @cD5_NUMLOTE 
               WHILE (@@fetch_status  = 0 )
               BEGIN
                  SET @nSD5_QUANT  = 0 
                  SET @nED5_QUANT  = 0 
                  SET @nED5_QTSEGUM  = 0 
                  SET @nSD5_QTSEGUM  = 0 
                  SELECT @dD5_DATA  = MIN ( SUBSTRING ( D5_DATA , 1 , 8 )), @dD5_DTVALID  = MAX ( SUBSTRING ( D5_DTVALID , 
                         1 , 8 ))
                    FROM SD5030 SD5
                    WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cD5_PRODUTO  and D5_LOCAL  = @cD5_LOCAL  and D5_LOTECTL  = @cD5_LOTECTL 
                     and D5_NUMLOTE  = @cD5_NUMLOTE  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and D_E_L_E_T_  = ' ' 
                    
                  SELECT @nED5_QUANT  = COALESCE ( SUM(D5_QUANT ), 0 ), @nED5_QTSEGUM  = COALESCE ( SUM(D5_QTSEGUM ), 0 )
                    
                    FROM SD5030 SD5
                    WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cD5_LOTECTL 
                     and D5_NUMLOTE  = @cD5_NUMLOTE  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and  ( (D5_ORIGLAN  <= '500' 
                    )  or  (SUBSTRING ( D5_ORIGLAN , 1 , 2 )in ( 'DE' , 'PR'  ) )  or  (D5_ORIGLAN  = 'MAN' ) )  and D_E_L_E_T_  = ' ' 
                    
                    GROUP BY D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                  SET @nED5_QUANT  = COALESCE ( @nED5_QUANT , 0 )
                  SET @nED5_QTSEGUM  = COALESCE ( @nED5_QTSEGUM , 0 )
                  SELECT @nSD5_QUANT  = COALESCE ( SUM(D5_QUANT ), 0 ), @nSD5_QTSEGUM  = COALESCE ( SUM(D5_QTSEGUM ), 0 )
                    
                    FROM SD5030 SD5
                    WHERE D5_FILIAL  = @cFil_SD5  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cD5_LOTECTL 
                     and D5_NUMLOTE  = @cD5_NUMLOTE  and  ( (D5_DATA  > @IN_MV_ULMES )  or  (@lSaldoIni  = '0' ) )  and D5_ORIGLAN  > '500' 
                     and  (SUBSTRING ( D5_ORIGLAN , 1 , 2 )NOT IN ( 'DE' , 'PR'  ) )  and  (D5_ORIGLAN  <> 'MAN' )  and D_E_L_E_T_  = ' ' 
                    
                    GROUP BY D5_PRODUTO , D5_LOCAL , D5_LOTECTL , D5_NUMLOTE 
                  SET @nSD5_QUANT  = COALESCE ( @nSD5_QUANT , 0 )
                  SET @nSD5_QTSEGUM  = COALESCE ( @nSD5_QTSEGUM , 0 )
                  SET @nQuant  = @nED5_QUANT  - @nSD5_QUANT 
                  SET @nQuant2  = @nED5_QTSEGUM  - @nSD5_QTSEGUM 
                  SET @iRecno  = null 
                  SELECT @iRecno  = R_E_C_N_O_ , @dB8_DTVALID  = B8_DTVALID , @nB8_QTDORI  = B8_QTDORI , @nB8_QTDORI2  = B8_QTDORI2 
                    , @nB8_SALDO  = B8_SALDO , @nB8_SALDO2  = B8_SALDO2 
                    FROM SB8030 
                    WHERE B8_FILIAL  = @cFil_SB8  and B8_PRODUTO  = @cProduto  and B8_LOCAL  = @cLocal  and B8_LOTECTL  = @cD5_LOTECTL 
                     and B8_NUMLOTE  = @cD5_NUMLOTE  and D_E_L_E_T_  = ' ' 
                  IF @iRecno is null 
                  BEGIN 
                     IF  (@nQuant  < 0 ) 
                     BEGIN 
                        SET @nQuant  = 0 
                     END 
                     IF  (@nQuant2  < 0 ) 
                     BEGIN 
                        SET @nQuant2  = 0 
                     END 
                     SET @nIN_QTSEGUM  = @nQuant2 
                     EXEC MAT018_18_02 @cProduto , @IN_FILIALCOR , @nQuant , @nIN_QTSEGUM , 2 , @nQuant2 output 
                     SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                       FROM SB8030 
                     SET @iRecno  = COALESCE ( @iRecno , 0 )
                     SET @iRecno  = @iRecno  + 1 
                     select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                     INSERT INTO SB8030 (B8_FILIAL , B8_PRODUTO , B8_LOCAL , B8_LOTECTL , B8_NUMLOTE , B8_DATA , B8_ORIGLAN , 
                            B8_SALDO , B8_SALDO2 , B8_QTDORI , B8_QTDORI2 , B8_DTVALID , R_E_C_N_O_ ) 
                     VALUES (@cFil_SB8 , @cProduto , @cLocal , @cD5_LOTECTL , @cD5_NUMLOTE , @dD5_DATA , ' ' , @nQuant , 
                            @nQuant2 , @nQuant , @nQuant2 , @dD5_DTVALID , @iRecno );
                     
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                  END 
                  ELSE 
                  BEGIN 
                     IF  (@nB8_SALDO  + @nQuant  > 0 )  or  (@IN_L300SALNEG  = '1' ) 
                     BEGIN 
                        SET @nB8_SALDO  = @nB8_SALDO  + @nQuant 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nB8_SALDO  = 0 
                     END 
                     IF  (@nB8_SALDO2  + @nQuant2  > 0 )  or  (@IN_L300SALNEG  = '1' ) 
                     BEGIN 
                        SET @nB8_SALDO2  = @nB8_SALDO2  + @nQuant2 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nB8_SALDO2  = 0 
                     END 
                     SET @nValorMax  = 0 
                     IF @nB8_SALDO  > @nB8_QTDORI 
                     BEGIN 
                        SET @nValorMax  = @nB8_SALDO 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nValorMax  = @nB8_QTDORI 
                     END 
                     IF @nValorMax  > 0  or @IN_L300SALNEG  = '1' 
                     BEGIN 
                        SET @nB8_QTDORI  = @nValorMax 
                     END 
                     IF @nB8_SALDO2  > @nB8_QTDORI2 
                     BEGIN 
                        SET @nValorMax2  = @nB8_SALDO2 
                     END 
                     ELSE 
                     BEGIN 
                        SET @nValorMax2  = @nB8_QTDORI2 
                     END 
                     IF @nValorMax2  > 0  or @IN_L300SALNEG  = '1' 
                     BEGIN 
                        SET @nB8_QTDORI2  = @nValorMax2 
                     END 
                     SET @nIN_QTSEGUM  = @nB8_SALDO2 
                     EXEC MAT018_18_02 @cProduto , @IN_FILIALCOR , @nB8_SALDO , @nIN_QTSEGUM , 2 , @nB8_SALDO2 output 
                     UPDATE SB8030 
                       WITH (ROWLOCK) 
                        SET B8_SALDO  = @nB8_SALDO , B8_SALDO2  = @nB8_SALDO2 , B8_QTDORI  = @nB8_QTDORI , B8_QTDORI2  = @nB8_QTDORI2 
                       
                      WHERE R_E_C_N_O_  = @iRecno 
                  END 
                  EXEC M300SB8_02 @IN_FILIALCOR , @cProduto , @cLocal , @cD5_LOTECTL , @cD5_NUMLOTE 
                  FETCH CUR_SD5 
                   INTO @cD5_PRODUTO , @cD5_LOCAL , @cD5_LOTECTL , @cD5_NUMLOTE 
               END 
               CLOSE CUR_SD5
               DEALLOCATE CUR_SD5
            END 
            SET @lSaldoIni  = '0' 
            EXEC MAT012_18_02 @cProduto , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
            IF @IN_MV_WMSNEW  = '1' 
            BEGIN 
               EXEC MAT057_18_02 @cProduto , @IN_FILIALCOR , @lIntDl output 
            END 
            ELSE 
            BEGIN 
               SET @lIntDl  = '0' 
            END 
            IF @lLocaliz  = '1'  and  not  (@IN_MV_WMSNEW  = '1'  and @lIntDl  = '1' ) 
            BEGIN 
               UPDATE SBF030 
                 WITH (ROWLOCK) 
                  SET BF_QUANT  = 0 , BF_QTSEGUM  = 0 
                WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  = @cLocal  and D_E_L_E_T_  = ' ' 
                 
                
               -- Cursor declaration CUR_SBK
               DECLARE CUR_SBK insensitive  CURSOR FOR 
               SELECT BK_LOCAL , BK_LOCALIZ , BK_COD , BK_NUMSERI , BK_LOTECTL , BK_NUMLOTE , BK_DATA , BK_QINI , BK_QISEGUM , 
                      BK_PRIOR 
                 FROM SBK030 SBK
                 WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_DATA  = (
               SELECT MAX ( SUBSTRING ( BK_DATA , 1 , 8 ))
                 FROM SBK030 SBKSUB
                 WHERE SBKSUB.BK_FILIAL  = @cFil_SBK  and SBKSUB.BK_COD  = @cProduto  and SBKSUB.BK_LOCAL  = @cLocal  and SBKSUB.BK_LOTECTL  = SBK.BK_LOTECTL 
                  and SBKSUB.BK_NUMLOTE  = SBK.BK_NUMLOTE  and SBKSUB.BK_LOCALIZ  = SBK.BK_LOCALIZ  and SBKSUB.BK_NUMSERI  = SBK.BK_NUMSERI 
                  and SBKSUB.BK_DATA  >= @IN_MV_ULMES  and SBKSUB.D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
                 ORDER BY BK_LOCAL , BK_LOCALIZ , BK_COD , BK_NUMSERI , BK_LOTECTL , BK_NUMLOTE , BK_DATA 
                
               OPEN CUR_SBK
               FETCH CUR_SBK 
                INTO @cBK_LOCAL , @cBK_LOCALIZ , @cBK_COD , @cBK_NUMSERI , @cBK_LOTECTL , @cBK_NUMLOTE , @dBK_DATA , @nBK_QINI , 
                      @nBK_QISEGUM , @cBK_PRIOR 
               WHILE (@@fetch_status  = 0 )
               BEGIN
                  SET @iRecCount  = null 
                  SELECT @iRecCount  = COALESCE ( COUNT ( * ), 0 )
                    FROM SBK030 SBK
                    WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOTECTL  = @cBK_LOTECTL 
                     and BK_NUMLOTE  = @cBK_NUMLOTE  and BK_LOCALIZ  = @cBK_LOCALIZ  and BK_NUMSERI  = @cBK_NUMSERI  and BK_DATA  = (
                  SELECT MAX ( SUBSTRING ( BK_DATA , 1 , 8 ))
                    FROM SBK030 SBK
                    WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cProduto  and BK_LOCAL  = @cLocal  and BK_LOTECTL  = @cBK_LOTECTL 
                     and BK_NUMLOTE  = @cBK_NUMLOTE  and BK_LOCALIZ  = @cBK_LOCALIZ  and BK_NUMSERI  = @cBK_NUMSERI  and D_E_L_E_T_  = ' ' 
                    ) and BK_DATA  > @IN_MV_ULMES  and D_E_L_E_T_  = ' ' 
                  IF @iRecCount  = 0 
                  BEGIN 
                     SELECT @cEstFis  = BE_ESTFIS , @cPrior  = BE_PRIOR 
                       FROM SBE030 
                       WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @cLocal  and BE_LOCALIZ  = @cBK_LOCALIZ  and D_E_L_E_T_  = ' ' 
                       
                     IF @IN_INTDL  = '0' 
                     BEGIN 
                        SET @cEstFis  = ' ' 
                     END 
                     IF @cPrior is null 
                     BEGIN 
                        SET @cPrior  = ' ' 
                     END 
                     IF @cEstFis is null 
                     BEGIN 
                        SET @cEstFis  = ' ' 
                     END 
                     SET @lSaldoIni  = '1' 
                     SET @iRecno  = null 
                     SELECT @iRecno  = R_E_C_N_O_ 
                       FROM SBF030 
                       WHERE BF_FILIAL  = @cFil_SBF  and BF_LOCAL  = @cLocal  and BF_LOCALIZ  = @cBK_LOCALIZ  and BF_ESTFIS  = @cEstFis 
                        and BF_PRODUTO  = @cProduto  and BF_NUMSERI  = @cBK_NUMSERI  and BF_LOTECTL  = @cBK_LOTECTL  and BF_NUMLOTE  = @cBK_NUMLOTE 
                        and D_E_L_E_T_  = ' ' 
                     SET @nIN_QTSEGUM  = @nBK_QISEGUM 
                     EXEC MAT018_18_02 @cProduto , @IN_FILIALCOR , @nBK_QINI , @nIN_QTSEGUM , 2 , @nBK_QISEGUM output 
                     IF @iRecno is null 
                     BEGIN 
                        SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
                          FROM SBF030 
                        SET @iRecno  = COALESCE ( @iRecno , 0 )
                        SET @iRecno  = @iRecno  + 1 
                        select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
                        INSERT INTO SBF030 (BF_FILIAL , BF_PRODUTO , BF_LOCAL , BF_LOTECTL , BF_NUMLOTE , BF_LOCALIZ , BF_NUMSERI , 
                               BF_QUANT , BF_QTSEGUM , BF_PRIOR , BF_ESTFIS , BF_EMPENHO , BF_EMPEN2 , R_E_C_N_O_ ) 
                        VALUES (@cFil_SBF , @cProduto , @cLocal , @cBK_LOTECTL , @cBK_NUMLOTE , @cBK_LOCALIZ , @cBK_NUMSERI , 
                               @nBK_QINI , @nBK_QISEGUM , @cPrior , @cEstFis , 0 , 0 , @iRecno );
                        
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
                     END 
                     ELSE 
                     BEGIN 
                        UPDATE SBF030 
                          WITH (ROWLOCK) 
                           SET BF_QUANT  = @nBK_QINI , BF_QTSEGUM  = @nBK_QISEGUM 
                         WHERE R_E_C_N_O_  = @iRecno 
                     END 
                  END 
                  SET @lSaldoIni  = '1' 
                  FETCH CUR_SBK 
                   INTO @cBK_LOCAL , @cBK_LOCALIZ , @cBK_COD , @cBK_NUMSERI , @cBK_LOTECTL , @cBK_NUMLOTE , @dBK_DATA , @nBK_QINI , 
                         @nBK_QISEGUM , @cBK_PRIOR 
               END 
               CLOSE CUR_SBK
               DEALLOCATE CUR_SBK
               EXEC MAT044_18_02 @IN_FILIALCOR , @cProduto , @cLocal , @lSaldoIni , @IN_MV_ULMES , @IN_MV_RASTRO , @IN_INTDL 
            END 
            Commit transaction 
         END 
         FETCH CUR_LOCAL 
          INTO @cLocal 
      END 
      CLOSE CUR_LOCAL
      DEALLOCATE CUR_LOCAL
      IF @IN_MV_CUSMED  = '1'  and  (@IN_MV_CUSFIL  = '1'  or @IN_MV_CUSEMP  = '1' ) 
      BEGIN 
         EXEC MAT050_18_02 @IN_FILIALCOR , @cProduto , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nResult output 
      END 
      FETCH LISTA_DE_PROD 
       INTO @cProduto , @cB1_CCCUSTO 
   END 
   CLOSE LISTA_DE_PROD
   DEALLOCATE LISTA_DE_PROD
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT041_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT041_15_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT041_15_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT041_15_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_PAR01 Char( 15) , 
    @IN_MV_PAR02 Char( 15) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB6 Char( 2)
DECLARE @cFil_SC6 Char( 2)
DECLARE @cFil_SC9 Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cD2_CLIENTE Char( 14)
DECLARE @cD2_LOJA Char( 4)
DECLARE @cD2_COD Char( 15)
DECLARE @cD2_LOCAL Char( 2)
DECLARE @cD2_SEGUM Char( 2)
DECLARE @cD2_DOC Char( 9)
DECLARE @cD2_SERIE Char( 3)
DECLARE @dD2_EMISSAO Char( 8)
DECLARE @cD2_TIPO Char( 1)
DECLARE @cD2_NFORI Char( 9)
DECLARE @cD2_SERIORI Char( 3)
DECLARE @cD2_ITEMORI Char( 4)
DECLARE @cD2_TES Char( 3)
DECLARE @cD2_UM Char( 2)
DECLARE @cD2_IDENTB6 Char( 6)
DECLARE @cD2_NUMSEQ Char( 6)
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cD1_LOJA Char( 4)
DECLARE @cD1_COD Char( 15)
DECLARE @cD1_LOCAL Char( 2)
DECLARE @cD1_SEGUM Char( 2)
DECLARE @cD1_DOC Char( 9)
DECLARE @cD1_SERIE Char( 3)
DECLARE @dD1_EMISSAO Char( 8)
DECLARE @cD1_TES Char( 3)
DECLARE @cD1_UM Char( 2)
DECLARE @cD1_IDENTB6 Char( 6)
DECLARE @cD1_NUMSEQ Char( 6)
DECLARE @cD1_TIPO Char( 1)
DECLARE @cD1_NFORI Char( 9)
DECLARE @cD1_SERIORI Char( 3)
DECLARE @cD1_ITEMORI Char( 4)
DECLARE @dD1_DTDIGIT Char( 8)
DECLARE @cB6_PODER3 Char( 1)
DECLARE @dB6_UENT Char( 8)
DECLARE @cB6_IDENT Char( 6)
DECLARE @cB6_LOCAL Char( 2)
DECLARE @cB6_PRODUTO Char( 15)
DECLARE @cB6_TES Char( 3)
DECLARE @cB6_ATEND Char( 1)
DECLARE @cB6_ESTOQUE Char( 1)
DECLARE @cB6_TIPO Char( 1)
DECLARE @cB6_TPCF Char( 1)
DECLARE @cXB6_IDENTB6 Char( 6)
DECLARE @cB6_IDENTB6 Char( 6)
DECLARE @cXB6_PODER3 Char( 1)
DECLARE @cXB6_UENT Char( 8)
DECLARE @cB6_ORIGLAN Char( 2)
DECLARE @cXB6_TPCF Char( 1)
DECLARE @cXB6_TIPO Char( 1)
DECLARE @cXB6_IDENT Char( 6)
DECLARE @cIdentSB6 Char( 6)
DECLARE @cB6_DOC Char( 9)
DECLARE @cB6_SERIE Char( 3)
DECLARE @cF4_PODER3 Char( 1)
DECLARE @cF4_ESTOQUE Char( 1)
DECLARE @cC9_NFISCAL Char( 9)
DECLARE @lProcessa Char( 01 )
DECLARE @nD2_QUANT Decimal( 14 , 2 )
DECLARE @nD2_PRCVEN Decimal( 14 , 2 )
DECLARE @nD2_CUSTO1 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @nD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @nD2_CUSFF1 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF2 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF3 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF4 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF5 Decimal( 14 , 2 )
DECLARE @nD1_QUANT Decimal( 14 , 2 )
DECLARE @nD1_VUNIT Decimal( 14 , 2 )
DECLARE @nD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @nD1_CUSTO Decimal( 14 , 2 )
DECLARE @nD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @nD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @nD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @nD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF1 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF2 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF3 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF4 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF5 Decimal( 14 , 2 )
DECLARE @nB2_QTNP Decimal( 12 , 2 )
DECLARE @nXB2_QTNP Decimal( 12 , 2 )
DECLARE @nB2_QNPT Decimal( 12 , 2 )
DECLARE @nXB2_QNPT Decimal( 12 , 2 )
DECLARE @nB2_QTER Decimal( 12 , 2 )
DECLARE @nXB2_QTER Decimal( 12 , 2 )
DECLARE @nB6_QUANTAux Decimal( 11 , 2 )
DECLARE @nB6_SALDO Decimal( 12 , 2 )
DECLARE @nB6_PRUNIT Decimal( 12 , 2 )
DECLARE @nB6_QULIB Decimal( 11 , 2 )
DECLARE @nB6_QUANT Decimal( 11 , 2 )
DECLARE @nXB6_SALDO Decimal( 12 , 2 )
DECLARE @nXXB6_SALDO Decimal( 12 , 2 )
DECLARE @cXB6_ESTOQUE Char( 1)
DECLARE @nXB6_QUANT Decimal( 11 , 2 )
DECLARE @nXB6_CUSTO1 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO2 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO3 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO4 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO5 Decimal( 14 , 2 )
DECLARE @nXB6_CUSFF1 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF2 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF3 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF4 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF5 Decimal( 14 , 4 )
DECLARE @nC9_QTDLIB Decimal( 14 , 2 )
DECLARE @nB6_TQULIB Decimal( 14 , 2 )
DECLARE @iSD2_RECNO Integer
DECLARE @iSD1_RECNO Integer
DECLARE @iRecnoSF4 Integer
DECLARE @iB6_RECNO Integer
DECLARE @iSB6_RECNO Integer
DECLARE @iRecno Integer
DECLARE @iRecCount Integer
DECLARE @iRecnoSB6 Integer
DECLARE @iSC9_RECNO Integer
DECLARE @iRecnoSB2 Integer
DECLARE @iRecnoAux Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nContador Integer
DECLARE @iTranCount Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SB6' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SB6 output 
   SET @cAux  = 'SC6' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SC6 output 
   SET @cAux  = 'SC9' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SC9 output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_15_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   Begin Tran 
   UPDATE SB2010 
     WITH (ROWLOCK) 
      SET B2_QTNP  = 0 , B2_QNPT  = 0 , B2_QTER  = 0 
    WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and D_E_L_E_T_  = ' ' 
   Commit Tran 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_B6QTD
   DECLARE CUR_B6QTD insensitive  CURSOR FOR 
   SELECT B6_ORIGLAN , B6_PODER3 , R_E_C_N_O_ 
     FROM SB6010 
     WHERE B6_FILIAL  = @cFil_SB6  and B6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_B6QTD
   FETCH CUR_B6QTD 
    INTO @cB6_ORIGLAN , @cB6_PODER3 , @iRecno 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      DELETE FROM SB6010  WHERE R_E_C_N_O_  = @iRecno 
      FETCH CUR_B6QTD 
       INTO @cB6_ORIGLAN , @cB6_PODER3 , @iRecno 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_B6QTD
   DEALLOCATE CUR_B6QTD
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD2
   DECLARE CUR_SD2 insensitive  CURSOR FOR 
   SELECT D2_CLIENTE , D2_LOJA , D2_COD , D2_LOCAL , D2_SEGUM , D2_DOC , D2_SERIE , D2_EMISSAO , D2_QUANT , D2_PRCVEN , D2_TES , 
          F4_PODER3 , D2_UM , D2_QTSEGUM , D2_IDENTB6 , D2_NUMSEQ , D2_CUSTO1 , D2_CUSTO2 , D2_CUSTO3 , D2_CUSTO4 , D2_CUSTO5 , 
          D2_CUSFF1 , D2_CUSFF2 , D2_CUSFF3 , D2_CUSFF4 , D2_CUSFF5 , D2_TIPO , D2_NFORI , D2_SERIORI , D2_ITEMORI , F4_ESTOQUE , 
          SD2.R_E_C_N_O_ 
     FROM SD2010 SD2, SF4010 SF4
     WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_PODER3  = 'R' 
      and F4_CODIGO  = D2_TES  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD2
   FETCH CUR_SD2 
    INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
          @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
          @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
          @cD2_TIPO , @cD2_NFORI , @cD2_SERIORI , @cD2_ITEMORI , @cF4_ESTOQUE , @iSD2_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_IDENTB6  = ' ' 
      SET @cB6_IDENTB6  = ' ' 
      SET @iRecnoAux  = Null 
      IF @cF4_PODER3  = 'R' 
      BEGIN 
         SET @cXB6_TIPO  = 'E' 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_TIPO  = 'D' 
      END 
      IF @cD2_TIPO  = 'B' 
      BEGIN 
         SET @cXB6_TPCF  = 'F' 
      END 
      ELSE 
      BEGIN 
         IF @cD2_TIPO in ( 'N' , 'C'  ) 
         BEGIN 
            SET @cXB6_TPCF  = 'C' 
         END 
      END 
      IF @cD2_IDENTB6  = ' ' 
      BEGIN 
         SET @cXB6_IDENT  = @cD2_NUMSEQ 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_IDENT  = @cD2_IDENTB6 
      END 
      IF @cD2_TIPO in ( 'C' , 'I' , 'P'  ) 
      BEGIN 
         SELECT @iRecnoAux  = MIN ( R_E_C_N_O_ )
           FROM SD2010 
           WHERE D2_FILIAL  = @cFil_SD2  and D2_DOC  = @cD2_NFORI  and D2_SERIE  = @cD2_SERIORI  and D2_CLIENTE  = @cD2_CLIENTE 
            and D2_LOJA  = @cD2_LOJA  and D2_COD  = @cD2_COD  and D2_ITEM  = @cD2_ITEMORI  and D_E_L_E_T_  = ' ' 
         IF @iRecnoAux is NOT null 
         BEGIN 
            SELECT @cB6_IDENTB6  = D2_NUMSEQ 
              FROM SD2010 
              WHERE R_E_C_N_O_  = @iRecnoAux 
            SET @cXB6_IDENTB6  = @cB6_IDENTB6 
         END 
      END 
      SET @iRecnoSB6  = NULL 
      SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
        FROM SB6010 
      IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
      BEGIN 
         SET @iRecnoSB6  = 1 
      END 
      ELSE 
      BEGIN 
         SET @iRecnoSB6  = @iRecnoSB6  + 1 
      END 
      IF @nContador  = 1 
      BEGIN 
         begin Tran 
         SET @nContador  = @nContador 
      END 
      INSERT INTO SB6010 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , B6_EMISSAO , 
             B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , B6_CUSTO2 , 
             B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , B6_PODER3 , 
             B6_SALDO , B6_TPCF , B6_IDENTB6 , B6_ESTOQUE , R_E_C_N_O_ ) 
      VALUES (@cFil_SB6 , @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , 
             @nD2_QUANT , @nD2_PRCVEN , @cD2_TES , @cXB6_TIPO , @dD2_EMISSAO , @cD2_UM , @nD2_QTSEGUM , @cXB6_IDENT , @nD2_CUSTO1 , 
             @nD2_CUSTO2 , @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , 
             @nD2_CUSFF5 , @cF4_PODER3 , @nD2_QUANT , @cXB6_TPCF , @cXB6_IDENTB6 , @cF4_ESTOQUE , @iRecnoSB6 );
      IF @cD2_IDENTB6  = ' ' 
      BEGIN 
         UPDATE SD2010 
           WITH (ROWLOCK) 
            SET D2_IDENTB6  = @cD2_NUMSEQ 
          WHERE R_E_C_N_O_  = @iSD2_RECNO 
      END 
      FETCH CUR_SD2 
       INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
             @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
             @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
             @cD2_TIPO , @cD2_NFORI , @cD2_SERIORI , @cD2_ITEMORI , @cF4_ESTOQUE , @iSD2_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD2
   DEALLOCATE CUR_SD2
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD1
   DECLARE CUR_SD1 insensitive  CURSOR FOR 
   SELECT D1_FORNECE , D1_LOJA , D1_COD , D1_LOCAL , D1_SEGUM , D1_DOC , D1_SERIE , D1_EMISSAO , D1_QUANT , D1_TES , F4_PODER3 , 
          D1_UM , D1_QTSEGUM , D1_VUNIT , D1_IDENTB6 , D1_NUMSEQ , D1_CUSTO , D1_CUSTO2 , D1_CUSTO3 , D1_CUSTO4 , D1_CUSTO5 , 
          D1_CUSFF1 , D1_CUSFF2 , D1_CUSFF3 , D1_CUSFF4 , D1_CUSFF5 , D1_TIPO , D1_NFORI , D1_SERIORI , D1_ITEMORI , D1_DTDIGIT , 
          F4_ESTOQUE , SD1.R_E_C_N_O_ 
     FROM SD1010 SD1, SF4010 SF4
     WHERE D1_FILIAL  = @cFil_SD1  and D1_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = D1_TES 
      and F4_PODER3  = 'R'  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD1
   FETCH CUR_SD1 
    INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
          @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @nD1_VUNIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
          @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
          @cD1_TIPO , @cD1_NFORI , @cD1_SERIORI , @cD1_ITEMORI , @dD1_DTDIGIT , @cF4_ESTOQUE , @iSD1_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_IDENTB6  = ' ' 
      SET @cB6_IDENTB6  = ' ' 
      SET @iRecnoAux  = Null 
      IF @cF4_PODER3  = 'R' 
      BEGIN 
         SET @cXB6_TIPO  = 'D' 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_TIPO  = 'E' 
      END 
      IF @cD1_TIPO  = 'B' 
      BEGIN 
         SET @cXB6_TPCF  = 'C' 
      END 
      ELSE 
      BEGIN 
         IF @cD1_TIPO  = 'N' 
         BEGIN 
            SET @cXB6_TPCF  = 'F' 
         END 
      END 
      IF @cD1_IDENTB6  = ' ' 
      BEGIN 
         SET @cXB6_IDENT  = @cD1_NUMSEQ 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_IDENT  = @cD1_IDENTB6 
      END 
      IF @cD1_TIPO in ( 'C' , 'I' , 'P'  ) 
      BEGIN 
         SELECT @iRecnoAux  = MIN ( R_E_C_N_O_ )
           FROM SD1010 
           WHERE D1_FILIAL  = @cFil_SD1  and D1_DOC  = @cD1_NFORI  and D1_SERIE  = @cD1_SERIORI  and D1_FORNECE  = @cD1_FORNECE 
            and D1_LOJA  = @cD1_LOJA  and D1_COD  = @cD1_COD  and D1_ITEM  = @cD1_ITEMORI  and D_E_L_E_T_  = ' ' 
         IF @iRecnoAux is NOT null 
         BEGIN 
            SELECT @cB6_IDENTB6  = D1_NUMSEQ 
              FROM SD1010 
              WHERE R_E_C_N_O_  = @iRecnoAux 
            SET @cXB6_IDENTB6  = @cB6_IDENTB6 
         END 
      END 
      SET @iRecnoSB6  = NULL 
      SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
        FROM SB6010 
      IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
      BEGIN 
         SET @iRecnoSB6  = 1 
      END 
      ELSE 
      BEGIN 
         SET @iRecnoSB6  = @iRecnoSB6  + 1 
      END 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      INSERT INTO SB6010 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , B6_EMISSAO , 
             B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , B6_CUSTO2 , 
             B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , B6_PODER3 , 
             B6_SALDO , B6_TPCF , B6_IDENTB6 , B6_ESTOQUE , R_E_C_N_O_ ) 
      VALUES (@cFil_SB6 , @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , 
             @nD1_QUANT , @nD1_VUNIT , @cD1_TES , @cXB6_TIPO , @dD1_DTDIGIT , @cD1_UM , @nD1_QTSEGUM , @cXB6_IDENT , @nD1_CUSTO , 
             @nD1_CUSTO2 , @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , 
             @nD1_CUSFF5 , @cF4_PODER3 , @nD1_QUANT , @cXB6_TPCF , @cXB6_IDENTB6 , @cF4_ESTOQUE , @iRecnoSB6 );
      IF @cD1_IDENTB6  = ' ' 
      BEGIN 
         UPDATE SD1010 
           WITH (ROWLOCK) 
            SET D1_IDENTB6  = @cD1_NUMSEQ 
          WHERE R_E_C_N_O_  = @iSD1_RECNO 
      END 
      FETCH CUR_SD1 
       INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
             @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @nD1_VUNIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
             @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
             @cD1_TIPO , @cD1_NFORI , @cD1_SERIORI , @cD1_ITEMORI , @dD1_DTDIGIT , @cF4_ESTOQUE , @iSD1_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD1
   DEALLOCATE CUR_SD1
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD2DE
   DECLARE CUR_SD2DE insensitive  CURSOR FOR 
   SELECT D2_CLIENTE , D2_LOJA , D2_COD , D2_LOCAL , D2_SEGUM , D2_DOC , D2_SERIE , D2_EMISSAO , D2_QUANT , D2_PRCVEN , D2_TES , 
          F4_PODER3 , D2_UM , D2_QTSEGUM , D2_IDENTB6 , D2_NUMSEQ , D2_CUSTO1 , D2_CUSTO2 , D2_CUSTO3 , D2_CUSTO4 , D2_CUSTO5 , 
          D2_CUSFF1 , D2_CUSFF2 , D2_CUSFF3 , D2_CUSFF4 , D2_CUSFF5 , D2_TIPO , F4_ESTOQUE , SD2.R_E_C_N_O_ 
     FROM SD2010 SD2, SF4010 SF4
     WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_PODER3  = 'D' 
      and F4_CODIGO  = D2_TES  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD2DE
   FETCH CUR_SD2DE 
    INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
          @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
          @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
          @cD2_TIPO , @cF4_ESTOQUE , @iSD2_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_PODER3  = '' 
      SET @cXB6_UENT  = '' 
      SET @cIdentSB6  = '' 
      SET @nXB6_SALDO  = 0 
      SET @nXXB6_SALDO  = 0 
      SET @cXB6_ESTOQUE  = '' 
      SET @nXB6_QUANT  = 0 
      SET @nXB6_CUSTO1  = 0 
      SET @nXB6_CUSTO2  = 0 
      SET @nXB6_CUSTO3  = 0 
      SET @nXB6_CUSTO4  = 0 
      SET @nXB6_CUSTO5  = 0 
      SET @nXB6_CUSFF1  = 0 
      SET @nXB6_CUSFF2  = 0 
      SET @nXB6_CUSFF3  = 0 
      SET @nXB6_CUSFF4  = 0 
      SET @nXB6_CUSFF5  = 0 
      SET @iRecnoSB6  = null 
      SELECT @iRecnoSB6  = MIN ( R_E_C_N_O_ )
        FROM SB6010 
        WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cD2_IDENTB6  and B6_PRODUTO  = @cD2_COD  and D_E_L_E_T_  = ' ' 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      IF @iRecnoSB6 is NOT null 
      BEGIN 
         SELECT @cXB6_IDENT  = B6_IDENT , @cXB6_PODER3  = B6_PODER3 , @nXB6_SALDO  = B6_SALDO , @cXB6_UENT  = B6_UENT , @cXB6_ESTOQUE  = B6_ESTOQUE 
           , @nXB6_QUANT  = B6_QUANT , @nXB6_CUSTO1  = B6_CUSTO1 , @nXB6_CUSTO2  = B6_CUSTO2 , @nXB6_CUSTO3  = B6_CUSTO3 
           , @nXB6_CUSTO4  = B6_CUSTO4 , @nXB6_CUSTO5  = B6_CUSTO5 , @nXB6_CUSFF1  = B6_CUSFF1 , @nXB6_CUSFF2  = B6_CUSFF2 
           , @nXB6_CUSFF3  = B6_CUSFF3 , @nXB6_CUSFF4  = B6_CUSFF4 , @nXB6_CUSFF5  = B6_CUSFF5 
           FROM SB6010 
           WHERE R_E_C_N_O_  = @iRecnoSB6 
         IF @cF4_PODER3  = 'R' 
         BEGIN 
            SET @cXB6_TIPO  = 'E' 
         END 
         ELSE 
         BEGIN 
            SET @cXB6_TIPO  = 'D' 
         END 
         IF @cD2_TIPO  = 'B' 
         BEGIN 
            SET @cXB6_TPCF  = 'F' 
         END 
         ELSE 
         BEGIN 
            IF @cD2_TIPO  = 'N' 
            BEGIN 
               SET @cXB6_TPCF  = 'C' 
            END 
         END 
         SET @cIdentSB6  = @cXB6_IDENT 
         IF @cXB6_PODER3  = 'R' 
         BEGIN 
            UPDATE SB6010 
              WITH (ROWLOCK) 
               SET B6_SALDO  =  (@nXB6_SALDO  - @nD2_QUANT ) 
             WHERE R_E_C_N_O_  = @iRecnoSB6 
            SET @nXXB6_SALDO  =  (@nXB6_SALDO  - @nD2_QUANT ) 
            IF @nXXB6_SALDO  <= 0 
            BEGIN 
               UPDATE SB6010 
                 WITH (ROWLOCK) 
                  SET B6_ATEND  = 'S' 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
            IF @cXB6_UENT  < @dD2_EMISSAO 
            BEGIN 
               UPDATE SB6010 
                 WITH (ROWLOCK) 
                  SET B6_UENT  = @dD2_EMISSAO 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
         END 
         IF @cIdentSB6  <> ' ' 
         BEGIN 
            IF @nXB6_SALDO  < @nD2_QUANT 
            BEGIN 
               SET @nD2_QUANT  = @nXB6_SALDO 
            END 
            SET @nD2_CUSTO1  = @nXB6_CUSTO1  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO2  = @nXB6_CUSTO2  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO3  = @nXB6_CUSTO3  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO4  = @nXB6_CUSTO4  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO5  = @nXB6_CUSTO5  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF1  = @nXB6_CUSFF1  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF2  = @nXB6_CUSFF2  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF3  = @nXB6_CUSFF3  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF4  = @nXB6_CUSFF4  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF5  = @nXB6_CUSFF5  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @iRecnoSB6  = NULL 
            SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
              FROM SB6010 
            IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
            BEGIN 
               SET @iRecnoSB6  = 1 
            END 
            ELSE 
            BEGIN 
               SET @iRecnoSB6  = @iRecnoSB6  + 1 
            END 
            SELECT @nB6_PRUNIT  = B6_PRUNIT 
              FROM SB6010 
              WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cIdentSB6  and B6_PRODUTO  = @cD2_COD  and B6_PODER3  = 'R' 
               and D_E_L_E_T_  = ' ' 
            INSERT INTO SB6010 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , 
                   B6_EMISSAO , B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , 
                   B6_CUSTO2 , B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , 
                   B6_PODER3 , B6_UENT , B6_TPCF , B6_ESTOQUE , R_E_C_N_O_ ) 
            VALUES (@cFil_SB6 , @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , 
                   @nD2_QUANT , @nB6_PRUNIT , @cD2_TES , @cXB6_TIPO , @dD2_EMISSAO , @cD2_UM , @nD2_QTSEGUM , @cIdentSB6 , 
                   @nD2_CUSTO1 , @nD2_CUSTO2 , @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , 
                   @nD2_CUSFF4 , @nD2_CUSFF5 , 'D' , '        ' , @cXB6_TPCF , @cXB6_ESTOQUE , @iRecnoSB6 );
         END 
      END 
      FETCH CUR_SD2DE 
       INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
             @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
             @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
             @cD2_TIPO , @cF4_ESTOQUE , @iSD2_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD2DE
   DEALLOCATE CUR_SD2DE
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD1DE
   DECLARE CUR_SD1DE insensitive  CURSOR FOR 
   SELECT D1_FORNECE , D1_LOJA , D1_COD , D1_LOCAL , D1_SEGUM , D1_DOC , D1_SERIE , D1_EMISSAO , D1_QUANT , D1_TES , F4_PODER3 , 
          D1_UM , D1_QTSEGUM , D1_DTDIGIT , D1_IDENTB6 , D1_NUMSEQ , D1_CUSTO , D1_CUSTO2 , D1_CUSTO3 , D1_CUSTO4 , D1_CUSTO5 , 
          D1_CUSFF1 , D1_CUSFF2 , D1_CUSFF3 , D1_CUSFF4 , D1_CUSFF5 , D1_TIPO , D1_VUNIT , F4_ESTOQUE , SD1.R_E_C_N_O_ 
     FROM SD1010 SD1, SF4010 SF4
     WHERE D1_FILIAL  = @cFil_SD1  and D1_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = D1_TES 
      and F4_PODER3  = 'D'  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD1DE
   FETCH CUR_SD1DE 
    INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
          @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @dD1_DTDIGIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
          @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
          @cD1_TIPO , @nD1_VUNIT , @cF4_ESTOQUE , @iSD1_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = 0 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_PODER3  = '' 
      SET @cXB6_UENT  = '' 
      SET @cIdentSB6  = '' 
      SET @nXB6_SALDO  = 0 
      SET @nXXB6_SALDO  = 0 
      SET @cXB6_ESTOQUE  = '' 
      SET @nXB6_QUANT  = 0 
      SET @nXB6_CUSTO1  = 0 
      SET @nXB6_CUSTO2  = 0 
      SET @nXB6_CUSTO3  = 0 
      SET @nXB6_CUSTO4  = 0 
      SET @nXB6_CUSTO5  = 0 
      SET @nXB6_CUSFF1  = 0 
      SET @nXB6_CUSFF2  = 0 
      SET @nXB6_CUSFF3  = 0 
      SET @nXB6_CUSFF4  = 0 
      SET @nXB6_CUSFF5  = 0 
      SET @iRecnoSB6  = null 
      SELECT @iRecnoSB6  = MIN ( R_E_C_N_O_ )
        FROM SB6010 
        WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cD1_IDENTB6  and B6_PRODUTO  = @cD1_COD  and D_E_L_E_T_  = ' ' 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      IF @iRecnoSB6 is NOT null 
      BEGIN 
         SELECT @cXB6_IDENT  = B6_IDENT , @cXB6_PODER3  = B6_PODER3 , @nXB6_SALDO  = B6_SALDO , @cXB6_UENT  = B6_UENT , @cXB6_ESTOQUE  = B6_ESTOQUE 
           , @nXB6_QUANT  = B6_QUANT , @nXB6_CUSTO1  = B6_CUSTO1 , @nXB6_CUSTO2  = B6_CUSTO2 , @nXB6_CUSTO3  = B6_CUSTO3 
           , @nXB6_CUSTO4  = B6_CUSTO4 , @nXB6_CUSTO5  = B6_CUSTO5 , @nXB6_CUSFF1  = B6_CUSFF1 , @nXB6_CUSFF2  = B6_CUSFF2 
           , @nXB6_CUSFF3  = B6_CUSFF3 , @nXB6_CUSFF4  = B6_CUSFF4 , @nXB6_CUSFF5  = B6_CUSFF5 
           FROM SB6010 
           WHERE R_E_C_N_O_  = @iRecnoSB6 
         IF @cF4_PODER3  = 'R' 
         BEGIN 
            SET @cXB6_TIPO  = 'D' 
         END 
         ELSE 
         BEGIN 
            SET @cXB6_TIPO  = 'E' 
         END 
         IF @cD1_TIPO  = 'B' 
         BEGIN 
            SET @cXB6_TPCF  = 'C' 
         END 
         ELSE 
         BEGIN 
            IF @cD1_TIPO  = 'N' 
            BEGIN 
               SET @cXB6_TPCF  = 'F' 
            END 
         END 
         SET @cIdentSB6  = @cXB6_IDENT 
         IF @cXB6_PODER3  = 'R' 
         BEGIN 
            UPDATE SB6010 
              WITH (ROWLOCK) 
               SET B6_SALDO  =  (@nXB6_SALDO  - @nD1_QUANT ) 
             WHERE R_E_C_N_O_  = @iRecnoSB6 
            SET @nXXB6_SALDO  =  (@nXB6_SALDO  - @nD1_QUANT ) 
            IF @nXXB6_SALDO  <= 0 
            BEGIN 
               UPDATE SB6010 
                 WITH (ROWLOCK) 
                  SET B6_ATEND  = 'S' 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
            IF @cXB6_UENT  < @dD1_DTDIGIT 
            BEGIN 
               UPDATE SB6010 
                 WITH (ROWLOCK) 
                  SET B6_UENT  = @dD1_DTDIGIT 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
         END 
      END 
      IF @cIdentSB6  <> ' ' 
      BEGIN 
         IF @nXB6_SALDO  < @nD1_QUANT 
         BEGIN 
            SET @nD1_QUANT  = @nXB6_SALDO 
         END 
         SET @nD1_CUSTO  = @nXB6_CUSTO1  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO2  = @nXB6_CUSTO2  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO3  = @nXB6_CUSTO3  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO4  = @nXB6_CUSTO4  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO5  = @nXB6_CUSTO5  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF1  = @nXB6_CUSFF1  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF2  = @nXB6_CUSFF2  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF3  = @nXB6_CUSFF3  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF4  = @nXB6_CUSFF4  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF5  = @nXB6_CUSFF5  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @iRecnoSB6  = NULL 
         SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
           FROM SB6010 
         IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
         BEGIN 
            SET @iRecnoSB6  = 1 
         END 
         ELSE 
         BEGIN 
            SET @iRecnoSB6  = @iRecnoSB6  + 1 
         END 
         INSERT INTO SB6010 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , B6_EMISSAO , 
                B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , B6_CUSTO2 , 
                B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , B6_PODER3 , 
                B6_UENT , B6_TPCF , B6_ESTOQUE , R_E_C_N_O_ ) 
         VALUES (@cFil_SB6 , @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , 
                @nD1_QUANT , @nD1_VUNIT , @cD1_TES , @cXB6_TIPO , @dD1_DTDIGIT , @cD1_UM , @nD1_QTSEGUM , @cIdentSB6 , @nD1_CUSTO , 
                @nD1_CUSTO2 , @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , 
                @nD1_CUSFF5 , 'D' , '        ' , @cXB6_TPCF , @cXB6_ESTOQUE , @iRecnoSB6 );
      END 
      FETCH CUR_SD1DE 
       INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
             @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @dD1_DTDIGIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
             @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
             @cD1_TIPO , @nD1_VUNIT , @cF4_ESTOQUE , @iSD1_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD1DE
   DEALLOCATE CUR_SD1DE
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SC9
   DECLARE CUR_SC9 insensitive  CURSOR FOR 
   SELECT SB6.R_E_C_N_O_ , C9_QTDLIB , B6_QULIB , SC9.R_E_C_N_O_ , SC9.C9_NFISCAL 
     FROM SC9010 SC9, SC6010 SC6, SF4010 SF4, SB6010 SB6
     WHERE C9_FILIAL  = @cFil_SC9  and C9_NFISCAL  = ' '  and C6_FILIAL  = @cFil_SC6  and C6_NUM  = C9_PEDIDO  and C6_ITEM  = C9_ITEM 
      and C6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = C6_TES  and F4_PODER3  = 'D' 
      and B6_FILIAL  = @cFil_SB6  and B6_IDENT  = C9_IDENTB6  and B6_PRODUTO  = C6_PRODUTO  and B6_PODER3  = 'R'  and SC9.D_E_L_E_T_  = ' ' 
      and SC6.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' '  and SB6.D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_SC9
   FETCH CUR_SC9 
    INTO @iSB6_RECNO , @nC9_QTDLIB , @nB6_QULIB , @iSC9_RECNO , @cC9_NFISCAL 
   WHILE (@@Fetch_status  = 0 )
   BEGIN
      SELECT @nB6_TQULIB  = COALESCE ( SUM(SC9.C9_QTDLIB ), 0 )
        FROM SC9010 SC9, SC6010 SC6, SF4010 SF4, SB6010 SB6
        WHERE SC9.C9_FILIAL  = @cFil_SC9  and SC9.C9_NFISCAL  = ' '  and SC6.C6_FILIAL  = @cFil_SC6  and SC6.C6_NUM  = SC9.C9_PEDIDO 
         and SC6.C6_ITEM  = SC9.C9_ITEM  and SC6.C6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and SF4.F4_FILIAL  = @cFil_SF4 
         and SF4.F4_CODIGO  = SC6.C6_TES  and SF4.F4_PODER3  = 'D'  and SB6.B6_FILIAL  = @cFil_SB6  and SB6.B6_IDENT  = SC9.C9_IDENTB6 
         and SB6.B6_PRODUTO  = SC6.C6_PRODUTO  and SB6.B6_PODER3  = 'R'  and SC9.D_E_L_E_T_  = ' '  and SC6.D_E_L_E_T_  = ' ' 
         and SF4.D_E_L_E_T_  = ' '  and SB6.D_E_L_E_T_  = ' '  and SB6.R_E_C_N_O_  = @iSB6_RECNO 
        GROUP BY SB6.R_E_C_N_O_ 
      UPDATE SB6010 
        WITH (ROWLOCK) 
         SET B6_QULIB  = @nB6_TQULIB 
       WHERE R_E_C_N_O_  = @iSB6_RECNO 
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      FETCH CUR_SC9 
       INTO @iSB6_RECNO , @nC9_QTDLIB , @nB6_QULIB , @iSC9_RECNO , @cC9_NFISCAL 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SC9
   DEALLOCATE CUR_SC9
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SB6
   DECLARE CUR_SB6 insensitive  CURSOR FOR 
   SELECT B6_LOCAL , B6_PRODUTO , B6_IDENT , B6_TES , B6_PODER3 , B6_QUANT , B6_ATEND , B6_ESTOQUE , SB6.R_E_C_N_O_ , B6_DOC , 
          B6_SERIE 
     FROM SB6010 SB6
     WHERE B6_FILIAL  = @cFil_SB6  and B6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and SB6.D_E_L_E_T_  = ' ' 
     ORDER BY B6_FILIAL , B6_IDENT , B6_PRODUTO , B6_PODER3 
   FOR READ ONLY 
    
   OPEN CUR_SB6
   FETCH CUR_SB6 
    INTO @cB6_LOCAL , @cB6_PRODUTO , @cB6_IDENT , @cB6_TES , @cB6_PODER3 , @nB6_QUANT , @cB6_ATEND , @cB6_ESTOQUE , @iB6_RECNO , 
          @cB6_DOC , @cB6_SERIE 
   SET @nB6_QULIB  = 0 
   SET @nB6_QUANTAux  = 0 
   WHILE (@@Fetch_status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      IF @cB6_PODER3  = 'R' 
      BEGIN 
         SET @cAux  = ' ' 
         EXEC MAT035_15_01 @IN_FILIALCOR , @cB6_PRODUTO , @cB6_IDENT , @cB6_TES , @cAux , @cAux , @cAux , @nB6_SALDO output , 
                @nB6_QULIB output , @nB6_QUANTAux output 
         IF @nB6_SALDO  <= 0 
         BEGIN 
            SET @cB6_ATEND  = 'S' 
         END 
         UPDATE SB6010 
           WITH (ROWLOCK) 
            SET B6_SALDO  = @nB6_SALDO , B6_QULIB  = @nB6_QULIB , B6_ATEND  = @cB6_ATEND 
          WHERE R_E_C_N_O_  = @iB6_RECNO 
      END 
      SET @cF4_ESTOQUE  = '' 
      IF @cB6_PODER3  = 'D' 
      BEGIN 
         SELECT @cB6_LOCAL  = B6_LOCAL , @cF4_ESTOQUE  = B6_ESTOQUE 
           FROM SB6010 
           WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cB6_IDENT  and B6_PRODUTO  = @cB6_PRODUTO  and B6_PODER3  = 'R' 
            and R_E_C_N_O_  = (
         SELECT MIN ( R_E_C_N_O_ )
           FROM SB6010 SB6
           WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cB6_IDENT  and B6_PRODUTO  = @cB6_PRODUTO  and B6_PODER3  = 'R' 
            and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      END 
      SET @iRecnoSF4  = null 
      SET @nXB2_QTNP  = 0 
      SET @nXB2_QNPT  = 0 
      SET @nB2_QTER  = 0 
      SET @nXB2_QTER  = 0 
      SET @iRecnoSB2  = 0 
      SET @nD1_QUANT  = 0 
      SET @nD2_QUANT  = 0 
      IF @cB6_TES  < '501' 
      BEGIN 
         SELECT @nD1_QUANT  = SUM(D1_QUANT )
           FROM SD1010 
           WHERE D1_FILIAL  = @cFil_SD1  and D1_IDENTB6  = @cB6_IDENT  and D1_COD  = @cB6_PRODUTO  and D1_DOC  = @cB6_DOC 
            and D1_SERIE  = @cB6_SERIE  and D_E_L_E_T_  = ' ' 
      END 
      IF @cB6_TES  > '500' 
      BEGIN 
         SELECT @nD2_QUANT  = SUM(D2_QUANT )
           FROM SD2010 
           WHERE D2_FILIAL  = @cFil_SD2  and D2_IDENTB6  = @cB6_IDENT  and D2_COD  = @cB6_PRODUTO  and D2_DOC  = @cB6_DOC 
            and D2_SERIE  = @cB6_SERIE  and D_E_L_E_T_  = ' ' 
      END 
      SELECT @iRecnoSF4  = MIN ( R_E_C_N_O_ )
        FROM SF4010 
        WHERE F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cB6_TES  and D_E_L_E_T_  = ' ' 
      IF @iRecnoSF4 is NOT null 
      BEGIN 
         SELECT @cF4_ESTOQUE  = F4_ESTOQUE 
           FROM SF4010 
           WHERE R_E_C_N_O_  = @iRecnoSF4 
         EXEC MAT025_15_01 @IN_FILIALCOR , @cB6_PRODUTO , @cB6_LOCAL , @iRecnoSB2 output 
         SELECT @nB2_QTNP  = B2_QTNP , @nB2_QNPT  = B2_QNPT , @nB2_QTER  = B2_QTER 
           FROM SB2010 
           WHERE R_E_C_N_O_  = @iRecnoSB2 
         IF @nB2_QTNP is NOT null 
         BEGIN 
            SET @nXB2_QTNP  = @nB2_QTNP 
            SET @nXB2_QNPT  = @nB2_QNPT 
            SET @nXB2_QTER  = @nB2_QTER 
         END 
         IF @cB6_TES  > '500' 
         BEGIN 
            IF @cF4_ESTOQUE  = 'S'  or @cB6_ESTOQUE  = 'S' 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QTNP  = @nB2_QTNP  - @nB6_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QNPT  = @nB2_QNPT  + @nB6_QUANT 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QTER  = @nB2_QTER  - @nD2_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QTER  = @nB2_QTER  + @nD2_QUANT 
                  END 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cF4_ESTOQUE  = 'S'  or @cB6_ESTOQUE  = 'S' 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QNPT  = @nB2_QNPT  - @nB6_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QTNP  = @nB2_QTNP  + @nB6_QUANT 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QTER  = @nB2_QTER  - @nD1_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QTER  = @nB2_QTER  + @nD1_QUANT 
                  END 
               END 
            END 
         END 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_QTNP  = @nXB2_QTNP , B2_QNPT  = @nXB2_QNPT , B2_QTER  = @nXB2_QTER 
          WHERE R_E_C_N_O_  = @iRecnoSB2 
      END 
      FETCH CUR_SB6 
       INTO @cB6_LOCAL , @cB6_PRODUTO , @cB6_IDENT , @cB6_TES , @cB6_PODER3 , @nB6_QUANT , @cB6_ATEND , @cB6_ESTOQUE , @iB6_RECNO , 
             @cB6_DOC , @cB6_SERIE 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SB6
   DEALLOCATE CUR_SB6
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT041_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT041_15_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT041_15_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT041_15_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_PAR01 Char( 15) , 
    @IN_MV_PAR02 Char( 15) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SB6 Char( 2)
DECLARE @cFil_SC6 Char( 2)
DECLARE @cFil_SC9 Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cD2_CLIENTE Char( 14)
DECLARE @cD2_LOJA Char( 4)
DECLARE @cD2_COD Char( 15)
DECLARE @cD2_LOCAL Char( 2)
DECLARE @cD2_SEGUM Char( 2)
DECLARE @cD2_DOC Char( 8)
DECLARE @cD2_SERIE Char( 3)
DECLARE @dD2_EMISSAO Char( 8)
DECLARE @cD2_TIPO Char( 1)
DECLARE @cD2_NFORI Char( 8)
DECLARE @cD2_SERIORI Char( 3)
DECLARE @cD2_ITEMORI Char( 4)
DECLARE @cD2_TES Char( 3)
DECLARE @cD2_UM Char( 2)
DECLARE @cD2_IDENTB6 Char( 6)
DECLARE @cD2_NUMSEQ Char( 6)
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cD1_LOJA Char( 4)
DECLARE @cD1_COD Char( 15)
DECLARE @cD1_LOCAL Char( 2)
DECLARE @cD1_SEGUM Char( 2)
DECLARE @cD1_DOC Char( 8)
DECLARE @cD1_SERIE Char( 3)
DECLARE @dD1_EMISSAO Char( 8)
DECLARE @cD1_TES Char( 3)
DECLARE @cD1_UM Char( 2)
DECLARE @cD1_IDENTB6 Char( 6)
DECLARE @cD1_NUMSEQ Char( 6)
DECLARE @cD1_TIPO Char( 1)
DECLARE @cD1_NFORI Char( 8)
DECLARE @cD1_SERIORI Char( 3)
DECLARE @cD1_ITEMORI Char( 4)
DECLARE @dD1_DTDIGIT Char( 8)
DECLARE @cB6_PODER3 Char( 1)
DECLARE @dB6_UENT Char( 8)
DECLARE @cB6_IDENT Char( 6)
DECLARE @cB6_LOCAL Char( 2)
DECLARE @cB6_PRODUTO Char( 15)
DECLARE @cB6_TES Char( 3)
DECLARE @cB6_ATEND Char( 1)
DECLARE @cB6_ESTOQUE Char( 1)
DECLARE @cB6_TIPO Char( 1)
DECLARE @cB6_TPCF Char( 1)
DECLARE @cXB6_IDENTB6 Char( 6)
DECLARE @cB6_IDENTB6 Char( 6)
DECLARE @cXB6_PODER3 Char( 1)
DECLARE @cXB6_UENT Char( 8)
DECLARE @cB6_ORIGLAN Char( 2)
DECLARE @cXB6_TPCF Char( 1)
DECLARE @cXB6_TIPO Char( 1)
DECLARE @cXB6_IDENT Char( 6)
DECLARE @cIdentSB6 Char( 6)
DECLARE @cB6_DOC Char( 8)
DECLARE @cB6_SERIE Char( 3)
DECLARE @cF4_PODER3 Char( 1)
DECLARE @cF4_ESTOQUE Char( 1)
DECLARE @cC9_NFISCAL Char( 8)
DECLARE @lProcessa Char( 01 )
DECLARE @nD2_QUANT Decimal( 14 , 2 )
DECLARE @nD2_PRCVEN Decimal( 14 , 2 )
DECLARE @nD2_CUSTO1 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO2 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO3 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO4 Decimal( 14 , 2 )
DECLARE @nD2_CUSTO5 Decimal( 14 , 2 )
DECLARE @nD2_QTSEGUM Decimal( 11 , 2 )
DECLARE @nD2_CUSFF1 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF2 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF3 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF4 Decimal( 14 , 2 )
DECLARE @nD2_CUSFF5 Decimal( 14 , 2 )
DECLARE @nD1_QUANT Decimal( 14 , 2 )
DECLARE @nD1_VUNIT Decimal( 14 , 2 )
DECLARE @nD1_QTSEGUM Decimal( 11 , 2 )
DECLARE @nD1_CUSTO Decimal( 14 , 2 )
DECLARE @nD1_CUSTO2 Decimal( 14 , 2 )
DECLARE @nD1_CUSTO3 Decimal( 14 , 2 )
DECLARE @nD1_CUSTO4 Decimal( 14 , 2 )
DECLARE @nD1_CUSTO5 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF1 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF2 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF3 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF4 Decimal( 14 , 2 )
DECLARE @nD1_CUSFF5 Decimal( 14 , 2 )
DECLARE @nB2_QTNP Decimal( 12 , 2 )
DECLARE @nXB2_QTNP Decimal( 12 , 2 )
DECLARE @nB2_QNPT Decimal( 12 , 2 )
DECLARE @nXB2_QNPT Decimal( 12 , 2 )
DECLARE @nB2_QTER Decimal( 12 , 2 )
DECLARE @nXB2_QTER Decimal( 12 , 2 )
DECLARE @nB6_QUANTAux Decimal( 11 , 2 )
DECLARE @nB6_SALDO Decimal( 12 , 2 )
DECLARE @nB6_PRUNIT Decimal( 12 , 2 )
DECLARE @nB6_QULIB Decimal( 11 , 2 )
DECLARE @nB6_QUANT Decimal( 11 , 2 )
DECLARE @nXB6_SALDO Decimal( 12 , 2 )
DECLARE @nXXB6_SALDO Decimal( 12 , 2 )
DECLARE @cXB6_ESTOQUE Char( 1)
DECLARE @nXB6_QUANT Decimal( 11 , 2 )
DECLARE @nXB6_CUSTO1 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO2 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO3 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO4 Decimal( 14 , 2 )
DECLARE @nXB6_CUSTO5 Decimal( 14 , 2 )
DECLARE @nXB6_CUSFF1 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF2 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF3 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF4 Decimal( 14 , 4 )
DECLARE @nXB6_CUSFF5 Decimal( 14 , 4 )
DECLARE @nC9_QTDLIB Decimal( 14 , 2 )
DECLARE @nB6_TQULIB Decimal( 14 , 2 )
DECLARE @iSD2_RECNO Integer
DECLARE @iSD1_RECNO Integer
DECLARE @iRecnoSF4 Integer
DECLARE @iB6_RECNO Integer
DECLARE @iSB6_RECNO Integer
DECLARE @iRecno Integer
DECLARE @iRecCount Integer
DECLARE @iRecnoSB6 Integer
DECLARE @iSC9_RECNO Integer
DECLARE @iRecnoSB2 Integer
DECLARE @iRecnoAux Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nContador Integer
DECLARE @iTranCount Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SB6' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SB6 output 
   SET @cAux  = 'SC6' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SC6 output 
   SET @cAux  = 'SC9' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SC9 output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_15_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   Begin Tran 
   UPDATE SB2030 
     WITH (ROWLOCK) 
      SET B2_QTNP  = 0 , B2_QNPT  = 0 , B2_QTER  = 0 
    WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and D_E_L_E_T_  = ' ' 
   Commit Tran 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_B6QTD
   DECLARE CUR_B6QTD insensitive  CURSOR FOR 
   SELECT B6_ORIGLAN , B6_PODER3 , R_E_C_N_O_ 
     FROM SB6030 
     WHERE B6_FILIAL  = @cFil_SB6  and B6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_B6QTD
   FETCH CUR_B6QTD 
    INTO @cB6_ORIGLAN , @cB6_PODER3 , @iRecno 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      DELETE FROM SB6030  WHERE R_E_C_N_O_  = @iRecno 
      FETCH CUR_B6QTD 
       INTO @cB6_ORIGLAN , @cB6_PODER3 , @iRecno 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_B6QTD
   DEALLOCATE CUR_B6QTD
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD2
   DECLARE CUR_SD2 insensitive  CURSOR FOR 
   SELECT D2_CLIENTE , D2_LOJA , D2_COD , D2_LOCAL , D2_SEGUM , D2_DOC , D2_SERIE , D2_EMISSAO , D2_QUANT , D2_PRCVEN , D2_TES , 
          F4_PODER3 , D2_UM , D2_QTSEGUM , D2_IDENTB6 , D2_NUMSEQ , D2_CUSTO1 , D2_CUSTO2 , D2_CUSTO3 , D2_CUSTO4 , D2_CUSTO5 , 
          D2_CUSFF1 , D2_CUSFF2 , D2_CUSFF3 , D2_CUSFF4 , D2_CUSFF5 , D2_TIPO , D2_NFORI , D2_SERIORI , D2_ITEMORI , F4_ESTOQUE , 
          SD2.R_E_C_N_O_ 
     FROM SD2030 SD2, SF4030 SF4
     WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_PODER3  = 'R' 
      and F4_CODIGO  = D2_TES  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD2
   FETCH CUR_SD2 
    INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
          @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
          @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
          @cD2_TIPO , @cD2_NFORI , @cD2_SERIORI , @cD2_ITEMORI , @cF4_ESTOQUE , @iSD2_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_IDENTB6  = ' ' 
      SET @cB6_IDENTB6  = ' ' 
      SET @iRecnoAux  = Null 
      IF @cF4_PODER3  = 'R' 
      BEGIN 
         SET @cXB6_TIPO  = 'E' 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_TIPO  = 'D' 
      END 
      IF @cD2_TIPO  = 'B' 
      BEGIN 
         SET @cXB6_TPCF  = 'F' 
      END 
      ELSE 
      BEGIN 
         IF @cD2_TIPO in ( 'N' , 'C'  ) 
         BEGIN 
            SET @cXB6_TPCF  = 'C' 
         END 
      END 
      IF @cD2_IDENTB6  = ' ' 
      BEGIN 
         SET @cXB6_IDENT  = @cD2_NUMSEQ 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_IDENT  = @cD2_IDENTB6 
      END 
      IF @cD2_TIPO in ( 'C' , 'I' , 'P'  ) 
      BEGIN 
         SELECT @iRecnoAux  = MIN ( R_E_C_N_O_ )
           FROM SD2030 
           WHERE D2_FILIAL  = @cFil_SD2  and D2_DOC  = @cD2_NFORI  and D2_SERIE  = @cD2_SERIORI  and D2_CLIENTE  = @cD2_CLIENTE 
            and D2_LOJA  = @cD2_LOJA  and D2_COD  = @cD2_COD  and D2_ITEM  = @cD2_ITEMORI  and D_E_L_E_T_  = ' ' 
         IF @iRecnoAux is NOT null 
         BEGIN 
            SELECT @cB6_IDENTB6  = D2_NUMSEQ 
              FROM SD2030 
              WHERE R_E_C_N_O_  = @iRecnoAux 
            SET @cXB6_IDENTB6  = @cB6_IDENTB6 
         END 
      END 
      SET @iRecnoSB6  = NULL 
      SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
        FROM SB6030 
      IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
      BEGIN 
         SET @iRecnoSB6  = 1 
      END 
      ELSE 
      BEGIN 
         SET @iRecnoSB6  = @iRecnoSB6  + 1 
      END 
      IF @nContador  = 1 
      BEGIN 
         begin Tran 
         SET @nContador  = @nContador 
      END 
      INSERT INTO SB6030 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , B6_EMISSAO , 
             B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , B6_CUSTO2 , 
             B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , B6_PODER3 , 
             B6_SALDO , B6_TPCF , B6_IDENTB6 , B6_ESTOQUE , R_E_C_N_O_ ) 
      VALUES (@cFil_SB6 , @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , 
             @nD2_QUANT , @nD2_PRCVEN , @cD2_TES , @cXB6_TIPO , @dD2_EMISSAO , @cD2_UM , @nD2_QTSEGUM , @cXB6_IDENT , @nD2_CUSTO1 , 
             @nD2_CUSTO2 , @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , 
             @nD2_CUSFF5 , @cF4_PODER3 , @nD2_QUANT , @cXB6_TPCF , @cXB6_IDENTB6 , @cF4_ESTOQUE , @iRecnoSB6 );
      IF @cD2_IDENTB6  = ' ' 
      BEGIN 
         UPDATE SD2030 
           WITH (ROWLOCK) 
            SET D2_IDENTB6  = @cD2_NUMSEQ 
          WHERE R_E_C_N_O_  = @iSD2_RECNO 
      END 
      FETCH CUR_SD2 
       INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
             @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
             @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
             @cD2_TIPO , @cD2_NFORI , @cD2_SERIORI , @cD2_ITEMORI , @cF4_ESTOQUE , @iSD2_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD2
   DEALLOCATE CUR_SD2
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD1
   DECLARE CUR_SD1 insensitive  CURSOR FOR 
   SELECT D1_FORNECE , D1_LOJA , D1_COD , D1_LOCAL , D1_SEGUM , D1_DOC , D1_SERIE , D1_EMISSAO , D1_QUANT , D1_TES , F4_PODER3 , 
          D1_UM , D1_QTSEGUM , D1_VUNIT , D1_IDENTB6 , D1_NUMSEQ , D1_CUSTO , D1_CUSTO2 , D1_CUSTO3 , D1_CUSTO4 , D1_CUSTO5 , 
          D1_CUSFF1 , D1_CUSFF2 , D1_CUSFF3 , D1_CUSFF4 , D1_CUSFF5 , D1_TIPO , D1_NFORI , D1_SERIORI , D1_ITEMORI , D1_DTDIGIT , 
          F4_ESTOQUE , SD1.R_E_C_N_O_ 
     FROM SD1030 SD1, SF4030 SF4
     WHERE D1_FILIAL  = @cFil_SD1  and D1_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = D1_TES 
      and F4_PODER3  = 'R'  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD1
   FETCH CUR_SD1 
    INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
          @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @nD1_VUNIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
          @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
          @cD1_TIPO , @cD1_NFORI , @cD1_SERIORI , @cD1_ITEMORI , @dD1_DTDIGIT , @cF4_ESTOQUE , @iSD1_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_IDENTB6  = ' ' 
      SET @cB6_IDENTB6  = ' ' 
      SET @iRecnoAux  = Null 
      IF @cF4_PODER3  = 'R' 
      BEGIN 
         SET @cXB6_TIPO  = 'D' 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_TIPO  = 'E' 
      END 
      IF @cD1_TIPO  = 'B' 
      BEGIN 
         SET @cXB6_TPCF  = 'C' 
      END 
      ELSE 
      BEGIN 
         IF @cD1_TIPO  = 'N' 
         BEGIN 
            SET @cXB6_TPCF  = 'F' 
         END 
      END 
      IF @cD1_IDENTB6  = ' ' 
      BEGIN 
         SET @cXB6_IDENT  = @cD1_NUMSEQ 
      END 
      ELSE 
      BEGIN 
         SET @cXB6_IDENT  = @cD1_IDENTB6 
      END 
      IF @cD1_TIPO in ( 'C' , 'I' , 'P'  ) 
      BEGIN 
         SELECT @iRecnoAux  = MIN ( R_E_C_N_O_ )
           FROM SD1030 
           WHERE D1_FILIAL  = @cFil_SD1  and D1_DOC  = @cD1_NFORI  and D1_SERIE  = @cD1_SERIORI  and D1_FORNECE  = @cD1_FORNECE 
            and D1_LOJA  = @cD1_LOJA  and D1_COD  = @cD1_COD  and D1_ITEM  = @cD1_ITEMORI  and D_E_L_E_T_  = ' ' 
         IF @iRecnoAux is NOT null 
         BEGIN 
            SELECT @cB6_IDENTB6  = D1_NUMSEQ 
              FROM SD1030 
              WHERE R_E_C_N_O_  = @iRecnoAux 
            SET @cXB6_IDENTB6  = @cB6_IDENTB6 
         END 
      END 
      SET @iRecnoSB6  = NULL 
      SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
        FROM SB6030 
      IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
      BEGIN 
         SET @iRecnoSB6  = 1 
      END 
      ELSE 
      BEGIN 
         SET @iRecnoSB6  = @iRecnoSB6  + 1 
      END 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      INSERT INTO SB6030 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , B6_EMISSAO , 
             B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , B6_CUSTO2 , 
             B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , B6_PODER3 , 
             B6_SALDO , B6_TPCF , B6_IDENTB6 , B6_ESTOQUE , R_E_C_N_O_ ) 
      VALUES (@cFil_SB6 , @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , 
             @nD1_QUANT , @nD1_VUNIT , @cD1_TES , @cXB6_TIPO , @dD1_DTDIGIT , @cD1_UM , @nD1_QTSEGUM , @cXB6_IDENT , @nD1_CUSTO , 
             @nD1_CUSTO2 , @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , 
             @nD1_CUSFF5 , @cF4_PODER3 , @nD1_QUANT , @cXB6_TPCF , @cXB6_IDENTB6 , @cF4_ESTOQUE , @iRecnoSB6 );
      IF @cD1_IDENTB6  = ' ' 
      BEGIN 
         UPDATE SD1030 
           WITH (ROWLOCK) 
            SET D1_IDENTB6  = @cD1_NUMSEQ 
          WHERE R_E_C_N_O_  = @iSD1_RECNO 
      END 
      FETCH CUR_SD1 
       INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
             @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @nD1_VUNIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
             @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
             @cD1_TIPO , @cD1_NFORI , @cD1_SERIORI , @cD1_ITEMORI , @dD1_DTDIGIT , @cF4_ESTOQUE , @iSD1_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD1
   DEALLOCATE CUR_SD1
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD2DE
   DECLARE CUR_SD2DE insensitive  CURSOR FOR 
   SELECT D2_CLIENTE , D2_LOJA , D2_COD , D2_LOCAL , D2_SEGUM , D2_DOC , D2_SERIE , D2_EMISSAO , D2_QUANT , D2_PRCVEN , D2_TES , 
          F4_PODER3 , D2_UM , D2_QTSEGUM , D2_IDENTB6 , D2_NUMSEQ , D2_CUSTO1 , D2_CUSTO2 , D2_CUSTO3 , D2_CUSTO4 , D2_CUSTO5 , 
          D2_CUSFF1 , D2_CUSFF2 , D2_CUSFF3 , D2_CUSFF4 , D2_CUSFF5 , D2_TIPO , F4_ESTOQUE , SD2.R_E_C_N_O_ 
     FROM SD2030 SD2, SF4030 SF4
     WHERE D2_FILIAL  = @cFil_SD2  and D2_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_PODER3  = 'D' 
      and F4_CODIGO  = D2_TES  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD2DE
   FETCH CUR_SD2DE 
    INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
          @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
          @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
          @cD2_TIPO , @cF4_ESTOQUE , @iSD2_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_PODER3  = '' 
      SET @cXB6_UENT  = '' 
      SET @cIdentSB6  = '' 
      SET @nXB6_SALDO  = 0 
      SET @nXXB6_SALDO  = 0 
      SET @cXB6_ESTOQUE  = '' 
      SET @nXB6_QUANT  = 0 
      SET @nXB6_CUSTO1  = 0 
      SET @nXB6_CUSTO2  = 0 
      SET @nXB6_CUSTO3  = 0 
      SET @nXB6_CUSTO4  = 0 
      SET @nXB6_CUSTO5  = 0 
      SET @nXB6_CUSFF1  = 0 
      SET @nXB6_CUSFF2  = 0 
      SET @nXB6_CUSFF3  = 0 
      SET @nXB6_CUSFF4  = 0 
      SET @nXB6_CUSFF5  = 0 
      SET @iRecnoSB6  = null 
      SELECT @iRecnoSB6  = MIN ( R_E_C_N_O_ )
        FROM SB6030 
        WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cD2_IDENTB6  and B6_PRODUTO  = @cD2_COD  and D_E_L_E_T_  = ' ' 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      IF @iRecnoSB6 is NOT null 
      BEGIN 
         SELECT @cXB6_IDENT  = B6_IDENT , @cXB6_PODER3  = B6_PODER3 , @nXB6_SALDO  = B6_SALDO , @cXB6_UENT  = B6_UENT , @cXB6_ESTOQUE  = B6_ESTOQUE 
           , @nXB6_QUANT  = B6_QUANT , @nXB6_CUSTO1  = B6_CUSTO1 , @nXB6_CUSTO2  = B6_CUSTO2 , @nXB6_CUSTO3  = B6_CUSTO3 
           , @nXB6_CUSTO4  = B6_CUSTO4 , @nXB6_CUSTO5  = B6_CUSTO5 , @nXB6_CUSFF1  = B6_CUSFF1 , @nXB6_CUSFF2  = B6_CUSFF2 
           , @nXB6_CUSFF3  = B6_CUSFF3 , @nXB6_CUSFF4  = B6_CUSFF4 , @nXB6_CUSFF5  = B6_CUSFF5 
           FROM SB6030 
           WHERE R_E_C_N_O_  = @iRecnoSB6 
         IF @cF4_PODER3  = 'R' 
         BEGIN 
            SET @cXB6_TIPO  = 'E' 
         END 
         ELSE 
         BEGIN 
            SET @cXB6_TIPO  = 'D' 
         END 
         IF @cD2_TIPO  = 'B' 
         BEGIN 
            SET @cXB6_TPCF  = 'F' 
         END 
         ELSE 
         BEGIN 
            IF @cD2_TIPO  = 'N' 
            BEGIN 
               SET @cXB6_TPCF  = 'C' 
            END 
         END 
         SET @cIdentSB6  = @cXB6_IDENT 
         IF @cXB6_PODER3  = 'R' 
         BEGIN 
            UPDATE SB6030 
              WITH (ROWLOCK) 
               SET B6_SALDO  =  (@nXB6_SALDO  - @nD2_QUANT ) 
             WHERE R_E_C_N_O_  = @iRecnoSB6 
            SET @nXXB6_SALDO  =  (@nXB6_SALDO  - @nD2_QUANT ) 
            IF @nXXB6_SALDO  <= 0 
            BEGIN 
               UPDATE SB6030 
                 WITH (ROWLOCK) 
                  SET B6_ATEND  = 'S' 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
            IF @cXB6_UENT  < @dD2_EMISSAO 
            BEGIN 
               UPDATE SB6030 
                 WITH (ROWLOCK) 
                  SET B6_UENT  = @dD2_EMISSAO 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
         END 
         IF @cIdentSB6  <> ' ' 
         BEGIN 
            IF @nXB6_SALDO  < @nD2_QUANT 
            BEGIN 
               SET @nD2_QUANT  = @nXB6_SALDO 
            END 
            SET @nD2_CUSTO1  = @nXB6_CUSTO1  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO2  = @nXB6_CUSTO2  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO3  = @nXB6_CUSTO3  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO4  = @nXB6_CUSTO4  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSTO5  = @nXB6_CUSTO5  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF1  = @nXB6_CUSFF1  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF2  = @nXB6_CUSFF2  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF3  = @nXB6_CUSFF3  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF4  = @nXB6_CUSFF4  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @nD2_CUSFF5  = @nXB6_CUSFF5  *  (@nD2_QUANT  / @nXB6_QUANT ) 
            SET @iRecnoSB6  = NULL 
            SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
              FROM SB6030 
            IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
            BEGIN 
               SET @iRecnoSB6  = 1 
            END 
            ELSE 
            BEGIN 
               SET @iRecnoSB6  = @iRecnoSB6  + 1 
            END 
            SELECT @nB6_PRUNIT  = B6_PRUNIT 
              FROM SB6030 
              WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cIdentSB6  and B6_PRODUTO  = @cD2_COD  and B6_PODER3  = 'R' 
               and D_E_L_E_T_  = ' ' 
            INSERT INTO SB6030 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , 
                   B6_EMISSAO , B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , 
                   B6_CUSTO2 , B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , 
                   B6_PODER3 , B6_UENT , B6_TPCF , B6_ESTOQUE , R_E_C_N_O_ ) 
            VALUES (@cFil_SB6 , @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , 
                   @nD2_QUANT , @nB6_PRUNIT , @cD2_TES , @cXB6_TIPO , @dD2_EMISSAO , @cD2_UM , @nD2_QTSEGUM , @cIdentSB6 , 
                   @nD2_CUSTO1 , @nD2_CUSTO2 , @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , 
                   @nD2_CUSFF4 , @nD2_CUSFF5 , 'D' , '        ' , @cXB6_TPCF , @cXB6_ESTOQUE , @iRecnoSB6 );
         END 
      END 
      FETCH CUR_SD2DE 
       INTO @cD2_CLIENTE , @cD2_LOJA , @cD2_COD , @cD2_LOCAL , @cD2_SEGUM , @cD2_DOC , @cD2_SERIE , @dD2_EMISSAO , @nD2_QUANT , 
             @nD2_PRCVEN , @cD2_TES , @cF4_PODER3 , @cD2_UM , @nD2_QTSEGUM , @cD2_IDENTB6 , @cD2_NUMSEQ , @nD2_CUSTO1 , @nD2_CUSTO2 , 
             @nD2_CUSTO3 , @nD2_CUSTO4 , @nD2_CUSTO5 , @nD2_CUSFF1 , @nD2_CUSFF2 , @nD2_CUSFF3 , @nD2_CUSFF4 , @nD2_CUSFF5 , 
             @cD2_TIPO , @cF4_ESTOQUE , @iSD2_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD2DE
   DEALLOCATE CUR_SD2DE
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SD1DE
   DECLARE CUR_SD1DE insensitive  CURSOR FOR 
   SELECT D1_FORNECE , D1_LOJA , D1_COD , D1_LOCAL , D1_SEGUM , D1_DOC , D1_SERIE , D1_EMISSAO , D1_QUANT , D1_TES , F4_PODER3 , 
          D1_UM , D1_QTSEGUM , D1_DTDIGIT , D1_IDENTB6 , D1_NUMSEQ , D1_CUSTO , D1_CUSTO2 , D1_CUSTO3 , D1_CUSTO4 , D1_CUSTO5 , 
          D1_CUSFF1 , D1_CUSFF2 , D1_CUSFF3 , D1_CUSFF4 , D1_CUSFF5 , D1_TIPO , D1_VUNIT , F4_ESTOQUE , SD1.R_E_C_N_O_ 
     FROM SD1030 SD1, SF4030 SF4
     WHERE D1_FILIAL  = @cFil_SD1  and D1_COD  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = D1_TES 
      and F4_PODER3  = 'D'  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
     ORDER BY F4_PODER3  desc  
   FOR READ ONLY 
    
   OPEN CUR_SD1DE
   FETCH CUR_SD1DE 
    INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
          @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @dD1_DTDIGIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
          @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
          @cD1_TIPO , @nD1_VUNIT , @cF4_ESTOQUE , @iSD1_RECNO 
   WHILE (@@Fetch_Status  = 0 )
   BEGIN
      SET @nContador  = 0 
      SET @cXB6_TPCF  = '' 
      SET @cXB6_TIPO  = '' 
      SET @cXB6_IDENT  = '' 
      SET @cXB6_PODER3  = '' 
      SET @cXB6_UENT  = '' 
      SET @cIdentSB6  = '' 
      SET @nXB6_SALDO  = 0 
      SET @nXXB6_SALDO  = 0 
      SET @cXB6_ESTOQUE  = '' 
      SET @nXB6_QUANT  = 0 
      SET @nXB6_CUSTO1  = 0 
      SET @nXB6_CUSTO2  = 0 
      SET @nXB6_CUSTO3  = 0 
      SET @nXB6_CUSTO4  = 0 
      SET @nXB6_CUSTO5  = 0 
      SET @nXB6_CUSFF1  = 0 
      SET @nXB6_CUSFF2  = 0 
      SET @nXB6_CUSFF3  = 0 
      SET @nXB6_CUSFF4  = 0 
      SET @nXB6_CUSFF5  = 0 
      SET @iRecnoSB6  = null 
      SELECT @iRecnoSB6  = MIN ( R_E_C_N_O_ )
        FROM SB6030 
        WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cD1_IDENTB6  and B6_PRODUTO  = @cD1_COD  and D_E_L_E_T_  = ' ' 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      IF @iRecnoSB6 is NOT null 
      BEGIN 
         SELECT @cXB6_IDENT  = B6_IDENT , @cXB6_PODER3  = B6_PODER3 , @nXB6_SALDO  = B6_SALDO , @cXB6_UENT  = B6_UENT , @cXB6_ESTOQUE  = B6_ESTOQUE 
           , @nXB6_QUANT  = B6_QUANT , @nXB6_CUSTO1  = B6_CUSTO1 , @nXB6_CUSTO2  = B6_CUSTO2 , @nXB6_CUSTO3  = B6_CUSTO3 
           , @nXB6_CUSTO4  = B6_CUSTO4 , @nXB6_CUSTO5  = B6_CUSTO5 , @nXB6_CUSFF1  = B6_CUSFF1 , @nXB6_CUSFF2  = B6_CUSFF2 
           , @nXB6_CUSFF3  = B6_CUSFF3 , @nXB6_CUSFF4  = B6_CUSFF4 , @nXB6_CUSFF5  = B6_CUSFF5 
           FROM SB6030 
           WHERE R_E_C_N_O_  = @iRecnoSB6 
         IF @cF4_PODER3  = 'R' 
         BEGIN 
            SET @cXB6_TIPO  = 'D' 
         END 
         ELSE 
         BEGIN 
            SET @cXB6_TIPO  = 'E' 
         END 
         IF @cD1_TIPO  = 'B' 
         BEGIN 
            SET @cXB6_TPCF  = 'C' 
         END 
         ELSE 
         BEGIN 
            IF @cD1_TIPO  = 'N' 
            BEGIN 
               SET @cXB6_TPCF  = 'F' 
            END 
         END 
         SET @cIdentSB6  = @cXB6_IDENT 
         IF @cXB6_PODER3  = 'R' 
         BEGIN 
            UPDATE SB6030 
              WITH (ROWLOCK) 
               SET B6_SALDO  =  (@nXB6_SALDO  - @nD1_QUANT ) 
             WHERE R_E_C_N_O_  = @iRecnoSB6 
            SET @nXXB6_SALDO  =  (@nXB6_SALDO  - @nD1_QUANT ) 
            IF @nXXB6_SALDO  <= 0 
            BEGIN 
               UPDATE SB6030 
                 WITH (ROWLOCK) 
                  SET B6_ATEND  = 'S' 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
            IF @cXB6_UENT  < @dD1_DTDIGIT 
            BEGIN 
               UPDATE SB6030 
                 WITH (ROWLOCK) 
                  SET B6_UENT  = @dD1_DTDIGIT 
                WHERE R_E_C_N_O_  = @iRecnoSB6 
            END 
         END 
      END 
      IF @cIdentSB6  <> ' ' 
      BEGIN 
         IF @nXB6_SALDO  < @nD1_QUANT 
         BEGIN 
            SET @nD1_QUANT  = @nXB6_SALDO 
         END 
         SET @nD1_CUSTO  = @nXB6_CUSTO1  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO2  = @nXB6_CUSTO2  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO3  = @nXB6_CUSTO3  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO4  = @nXB6_CUSTO4  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSTO5  = @nXB6_CUSTO5  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF1  = @nXB6_CUSFF1  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF2  = @nXB6_CUSFF2  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF3  = @nXB6_CUSFF3  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF4  = @nXB6_CUSFF4  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @nD1_CUSFF5  = @nXB6_CUSFF5  *  (@nD1_QUANT  / @nXB6_QUANT ) 
         SET @iRecnoSB6  = NULL 
         SELECT @iRecnoSB6  = MAX ( R_E_C_N_O_ )
           FROM SB6030 
         IF  (@iRecnoSB6 is null  or @iRecnoSB6  = 0 ) 
         BEGIN 
            SET @iRecnoSB6  = 1 
         END 
         ELSE 
         BEGIN 
            SET @iRecnoSB6  = @iRecnoSB6  + 1 
         END 
         INSERT INTO SB6030 (B6_FILIAL , B6_CLIFOR , B6_LOJA , B6_PRODUTO , B6_LOCAL , B6_SEGUM , B6_DOC , B6_SERIE , B6_EMISSAO , 
                B6_QUANT , B6_PRUNIT , B6_TES , B6_TIPO , B6_DTDIGIT , B6_UM , B6_QTSEGUM , B6_IDENT , B6_CUSTO1 , B6_CUSTO2 , 
                B6_CUSTO3 , B6_CUSTO4 , B6_CUSTO5 , B6_CUSFF1 , B6_CUSFF2 , B6_CUSFF3 , B6_CUSFF4 , B6_CUSFF5 , B6_PODER3 , 
                B6_UENT , B6_TPCF , B6_ESTOQUE , R_E_C_N_O_ ) 
         VALUES (@cFil_SB6 , @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , 
                @nD1_QUANT , @nD1_VUNIT , @cD1_TES , @cXB6_TIPO , @dD1_DTDIGIT , @cD1_UM , @nD1_QTSEGUM , @cIdentSB6 , @nD1_CUSTO , 
                @nD1_CUSTO2 , @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , 
                @nD1_CUSFF5 , 'D' , '        ' , @cXB6_TPCF , @cXB6_ESTOQUE , @iRecnoSB6 );
      END 
      FETCH CUR_SD1DE 
       INTO @cD1_FORNECE , @cD1_LOJA , @cD1_COD , @cD1_LOCAL , @cD1_SEGUM , @cD1_DOC , @cD1_SERIE , @dD1_EMISSAO , @nD1_QUANT , 
             @cD1_TES , @cF4_PODER3 , @cD1_UM , @nD1_QTSEGUM , @dD1_DTDIGIT , @cD1_IDENTB6 , @cD1_NUMSEQ , @nD1_CUSTO , @nD1_CUSTO2 , 
             @nD1_CUSTO3 , @nD1_CUSTO4 , @nD1_CUSTO5 , @nD1_CUSFF1 , @nD1_CUSFF2 , @nD1_CUSFF3 , @nD1_CUSFF4 , @nD1_CUSFF5 , 
             @cD1_TIPO , @nD1_VUNIT , @cF4_ESTOQUE , @iSD1_RECNO 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SD1DE
   DEALLOCATE CUR_SD1DE
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SC9
   DECLARE CUR_SC9 insensitive  CURSOR FOR 
   SELECT SB6.R_E_C_N_O_ , C9_QTDLIB , B6_QULIB , SC9.R_E_C_N_O_ , SC9.C9_NFISCAL 
     FROM SC9030 SC9, SC6030 SC6, SF4030 SF4, SB6030 SB6
     WHERE C9_FILIAL  = @cFil_SC9  and C9_NFISCAL  = ' '  and C6_FILIAL  = @cFil_SC6  and C6_NUM  = C9_PEDIDO  and C6_ITEM  = C9_ITEM 
      and C6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = C6_TES  and F4_PODER3  = 'D' 
      and B6_FILIAL  = @cFil_SB6  and B6_IDENT  = C9_IDENTB6  and B6_PRODUTO  = C6_PRODUTO  and B6_PODER3  = 'R'  and SC9.D_E_L_E_T_  = ' ' 
      and SC6.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' '  and SB6.D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_SC9
   FETCH CUR_SC9 
    INTO @iSB6_RECNO , @nC9_QTDLIB , @nB6_QULIB , @iSC9_RECNO , @cC9_NFISCAL 
   WHILE (@@Fetch_status  = 0 )
   BEGIN
      SELECT @nB6_TQULIB  = COALESCE ( SUM(SC9.C9_QTDLIB ), 0 )
        FROM SC9030 SC9, SC6030 SC6, SF4030 SF4, SB6030 SB6
        WHERE SC9.C9_FILIAL  = @cFil_SC9  and SC9.C9_NFISCAL  = ' '  and SC6.C6_FILIAL  = @cFil_SC6  and SC6.C6_NUM  = SC9.C9_PEDIDO 
         and SC6.C6_ITEM  = SC9.C9_ITEM  and SC6.C6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and SF4.F4_FILIAL  = @cFil_SF4 
         and SF4.F4_CODIGO  = SC6.C6_TES  and SF4.F4_PODER3  = 'D'  and SB6.B6_FILIAL  = @cFil_SB6  and SB6.B6_IDENT  = SC9.C9_IDENTB6 
         and SB6.B6_PRODUTO  = SC6.C6_PRODUTO  and SB6.B6_PODER3  = 'R'  and SC9.D_E_L_E_T_  = ' '  and SC6.D_E_L_E_T_  = ' ' 
         and SF4.D_E_L_E_T_  = ' '  and SB6.D_E_L_E_T_  = ' '  and SB6.R_E_C_N_O_  = @iSB6_RECNO 
        GROUP BY SB6.R_E_C_N_O_ 
      UPDATE SB6030 
        WITH (ROWLOCK) 
         SET B6_QULIB  = @nB6_TQULIB 
       WHERE R_E_C_N_O_  = @iSB6_RECNO 
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      FETCH CUR_SC9 
       INTO @iSB6_RECNO , @nC9_QTDLIB , @nB6_QULIB , @iSC9_RECNO , @cC9_NFISCAL 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SC9
   DEALLOCATE CUR_SC9
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SB6
   DECLARE CUR_SB6 insensitive  CURSOR FOR 
   SELECT B6_LOCAL , B6_PRODUTO , B6_IDENT , B6_TES , B6_PODER3 , B6_QUANT , B6_ATEND , B6_ESTOQUE , SB6.R_E_C_N_O_ , B6_DOC , 
          B6_SERIE 
     FROM SB6030 SB6
     WHERE B6_FILIAL  = @cFil_SB6  and B6_PRODUTO  between @IN_MV_PAR01 and @IN_MV_PAR02  and SB6.D_E_L_E_T_  = ' ' 
     ORDER BY B6_FILIAL , B6_IDENT , B6_PRODUTO , B6_PODER3 
   FOR READ ONLY 
    
   OPEN CUR_SB6
   FETCH CUR_SB6 
    INTO @cB6_LOCAL , @cB6_PRODUTO , @cB6_IDENT , @cB6_TES , @cB6_PODER3 , @nB6_QUANT , @cB6_ATEND , @cB6_ESTOQUE , @iB6_RECNO , 
          @cB6_DOC , @cB6_SERIE 
   SET @nB6_QULIB  = 0 
   SET @nB6_QUANTAux  = 0 
   WHILE (@@Fetch_status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      IF @nContador  = 1 
      BEGIN 
         Begin Tran 
         SET @nContador  = @nContador 
      END 
      IF @cB6_PODER3  = 'R' 
      BEGIN 
         SET @cAux  = ' ' 
         EXEC MAT035_15_02 @IN_FILIALCOR , @cB6_PRODUTO , @cB6_IDENT , @cB6_TES , @cAux , @cAux , @cAux , @nB6_SALDO output , 
                @nB6_QULIB output , @nB6_QUANTAux output 
         IF @nB6_SALDO  <= 0 
         BEGIN 
            SET @cB6_ATEND  = 'S' 
         END 
         UPDATE SB6030 
           WITH (ROWLOCK) 
            SET B6_SALDO  = @nB6_SALDO , B6_QULIB  = @nB6_QULIB , B6_ATEND  = @cB6_ATEND 
          WHERE R_E_C_N_O_  = @iB6_RECNO 
      END 
      SET @cF4_ESTOQUE  = '' 
      IF @cB6_PODER3  = 'D' 
      BEGIN 
         SELECT @cB6_LOCAL  = B6_LOCAL , @cF4_ESTOQUE  = B6_ESTOQUE 
           FROM SB6030 
           WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cB6_IDENT  and B6_PRODUTO  = @cB6_PRODUTO  and B6_PODER3  = 'R' 
            and R_E_C_N_O_  = (
         SELECT MIN ( R_E_C_N_O_ )
           FROM SB6030 SB6
           WHERE B6_FILIAL  = @cFil_SB6  and B6_IDENT  = @cB6_IDENT  and B6_PRODUTO  = @cB6_PRODUTO  and B6_PODER3  = 'R' 
            and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
      END 
      SET @iRecnoSF4  = null 
      SET @nXB2_QTNP  = 0 
      SET @nXB2_QNPT  = 0 
      SET @nB2_QTER  = 0 
      SET @nXB2_QTER  = 0 
      SET @iRecnoSB2  = 0 
      SET @nD1_QUANT  = 0 
      SET @nD2_QUANT  = 0 
      IF @cB6_TES  < '501' 
      BEGIN 
         SELECT @nD1_QUANT  = SUM(D1_QUANT )
           FROM SD1030 
           WHERE D1_FILIAL  = @cFil_SD1  and D1_IDENTB6  = @cB6_IDENT  and D1_COD  = @cB6_PRODUTO  and D1_DOC  = @cB6_DOC 
            and D1_SERIE  = @cB6_SERIE  and D_E_L_E_T_  = ' ' 
      END 
      IF @cB6_TES  > '500' 
      BEGIN 
         SELECT @nD2_QUANT  = SUM(D2_QUANT )
           FROM SD2030 
           WHERE D2_FILIAL  = @cFil_SD2  and D2_IDENTB6  = @cB6_IDENT  and D2_COD  = @cB6_PRODUTO  and D2_DOC  = @cB6_DOC 
            and D2_SERIE  = @cB6_SERIE  and D_E_L_E_T_  = ' ' 
      END 
      SELECT @iRecnoSF4  = MIN ( R_E_C_N_O_ )
        FROM SF4030 
        WHERE F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cB6_TES  and D_E_L_E_T_  = ' ' 
      IF @iRecnoSF4 is NOT null 
      BEGIN 
         SELECT @cF4_ESTOQUE  = F4_ESTOQUE 
           FROM SF4030 
           WHERE R_E_C_N_O_  = @iRecnoSF4 
         EXEC MAT025_15_02 @IN_FILIALCOR , @cB6_PRODUTO , @cB6_LOCAL , @iRecnoSB2 output 
         SELECT @nB2_QTNP  = B2_QTNP , @nB2_QNPT  = B2_QNPT , @nB2_QTER  = B2_QTER 
           FROM SB2030 
           WHERE R_E_C_N_O_  = @iRecnoSB2 
         IF @nB2_QTNP is NOT null 
         BEGIN 
            SET @nXB2_QTNP  = @nB2_QTNP 
            SET @nXB2_QNPT  = @nB2_QNPT 
            SET @nXB2_QTER  = @nB2_QTER 
         END 
         IF @cB6_TES  > '500' 
         BEGIN 
            IF @cF4_ESTOQUE  = 'S'  or @cB6_ESTOQUE  = 'S' 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QTNP  = @nB2_QTNP  - @nB6_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QNPT  = @nB2_QNPT  + @nB6_QUANT 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QTER  = @nB2_QTER  - @nD2_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QTER  = @nB2_QTER  + @nD2_QUANT 
                  END 
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cF4_ESTOQUE  = 'S'  or @cB6_ESTOQUE  = 'S' 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QNPT  = @nB2_QNPT  - @nB6_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QTNP  = @nB2_QTNP  + @nB6_QUANT 
                  END 
               END 
            END 
            ELSE 
            BEGIN 
               IF @cB6_PODER3  = 'D' 
               BEGIN 
                  SET @nXB2_QTER  = @nB2_QTER  - @nD1_QUANT 
               END 
               ELSE 
               BEGIN 
                  IF @cB6_PODER3  = 'R' 
                  BEGIN 
                     SET @nXB2_QTER  = @nB2_QTER  + @nD1_QUANT 
                  END 
               END 
            END 
         END 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_QTNP  = @nXB2_QTNP , B2_QNPT  = @nXB2_QNPT , B2_QTER  = @nXB2_QTER 
          WHERE R_E_C_N_O_  = @iRecnoSB2 
      END 
      FETCH CUR_SB6 
       INTO @cB6_LOCAL , @cB6_PRODUTO , @cB6_IDENT , @cB6_TES , @cB6_PODER3 , @nB6_QUANT , @cB6_ATEND , @cB6_ESTOQUE , @iB6_RECNO , 
             @cB6_DOC , @cB6_SERIE 
      IF @nContador  > 1 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SB6
   DEALLOCATE CUR_SB6
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT042_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT042_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT042_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT042_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TIPO Char( 01 ) , 
    @IN_MV_PAR01 Char( 08 ) , 
    @IN_MV_PAR14 Integer , 
    @IN_RECNOSD1 Integer , 
    @IN_MV_ULMES Char( 08 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB6 Char( 2)
DECLARE @cFil_SF2 Char( 2)
DECLARE @cD1_COD Char( 15)
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cD1_LOJA Char( 4)
DECLARE @cD1_IDENTB6 Char( 6)
DECLARE @dD1_DTDIGIT Char( 8)
DECLARE @cD1_NFORI Char( 9)
DECLARE @cD1_SERIORI Char( 3)
DECLARE @dB6_EMISSAO Char( 8)
DECLARE @dF2_EMISSAO Char( 8)
DECLARE @cAux VarChar( 3 )
DECLARE @nCount Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB6' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SB6 output 
   SET @cAux  = 'SF2' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SF2 output 
   SELECT @cD1_COD  = D1_COD , @cD1_FORNECE  = D1_FORNECE , @cD1_LOJA  = D1_LOJA , @cD1_IDENTB6  = D1_IDENTB6 , @dD1_DTDIGIT  = D1_DTDIGIT 
     , @cD1_NFORI  = D1_NFORI , @cD1_SERIORI  = D1_SERIORI 
     FROM SD1010 
     WHERE R_E_C_N_O_  = @IN_RECNOSD1 
   IF @IN_TIPO  = 'D' 
   BEGIN 
      SELECT @dB6_EMISSAO  = MIN ( SUBSTRING ( B6_EMISSAO , 1 , 8 ))
        FROM SB6010 
        WHERE B6_FILIAL  = @cFil_SB6  and B6_PRODUTO  = @cD1_COD  and B6_CLIFOR  = @cD1_FORNECE  and B6_LOJA  = @cD1_LOJA 
         and B6_IDENT  = @cD1_IDENTB6  and D_E_L_E_T_  = ' ' 
      IF  ( (@IN_MV_PAR14  = 2 )  and  (@dB6_EMISSAO  >= @IN_MV_ULMES )  and  (@dB6_EMISSAO  <= @IN_MV_PAR01 ) )  or  ( (@IN_MV_PAR14  = 3 
        )  and  (@dB6_EMISSAO  = @dD1_DTDIGIT ) ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @dF2_EMISSAO  = MIN ( SUBSTRING ( F2_EMISSAO , 1 , 8 ))
        FROM SF2010 
        WHERE F2_FILIAL  = @cFil_SF2  and F2_DOC  = @cD1_NFORI  and F2_SERIE  = @cD1_SERIORI  and D_E_L_E_T_  = ' ' 
      IF  ( (@IN_MV_PAR14  = 2 )  and  (@dF2_EMISSAO  >= @IN_MV_ULMES )  and  (@dF2_EMISSAO  <= @IN_MV_PAR01 ) )  or  ( (@IN_MV_PAR14  = 3 
        )  and  (@dF2_EMISSAO  = @dD1_DTDIGIT ) ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT042_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT042_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT042_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT042_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_TIPO Char( 01 ) , 
    @IN_MV_PAR01 Char( 08 ) , 
    @IN_MV_PAR14 Integer , 
    @IN_RECNOSD1 Integer , 
    @IN_MV_ULMES Char( 08 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB6 Char( 2)
DECLARE @cFil_SF2 Char( 2)
DECLARE @cD1_COD Char( 15)
DECLARE @cD1_FORNECE Char( 14)
DECLARE @cD1_LOJA Char( 4)
DECLARE @cD1_IDENTB6 Char( 6)
DECLARE @dD1_DTDIGIT Char( 8)
DECLARE @cD1_NFORI Char( 8)
DECLARE @cD1_SERIORI Char( 3)
DECLARE @dB6_EMISSAO Char( 8)
DECLARE @dF2_EMISSAO Char( 8)
DECLARE @cAux VarChar( 3 )
DECLARE @nCount Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB6' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SB6 output 
   SET @cAux  = 'SF2' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SF2 output 
   SELECT @cD1_COD  = D1_COD , @cD1_FORNECE  = D1_FORNECE , @cD1_LOJA  = D1_LOJA , @cD1_IDENTB6  = D1_IDENTB6 , @dD1_DTDIGIT  = D1_DTDIGIT 
     , @cD1_NFORI  = D1_NFORI , @cD1_SERIORI  = D1_SERIORI 
     FROM SD1030 
     WHERE R_E_C_N_O_  = @IN_RECNOSD1 
   IF @IN_TIPO  = 'D' 
   BEGIN 
      SELECT @dB6_EMISSAO  = MIN ( SUBSTRING ( B6_EMISSAO , 1 , 8 ))
        FROM SB6030 
        WHERE B6_FILIAL  = @cFil_SB6  and B6_PRODUTO  = @cD1_COD  and B6_CLIFOR  = @cD1_FORNECE  and B6_LOJA  = @cD1_LOJA 
         and B6_IDENT  = @cD1_IDENTB6  and D_E_L_E_T_  = ' ' 
      IF  ( (@IN_MV_PAR14  = 2 )  and  (@dB6_EMISSAO  >= @IN_MV_ULMES )  and  (@dB6_EMISSAO  <= @IN_MV_PAR01 ) )  or  ( (@IN_MV_PAR14  = 3 
        )  and  (@dB6_EMISSAO  = @dD1_DTDIGIT ) ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @dF2_EMISSAO  = MIN ( SUBSTRING ( F2_EMISSAO , 1 , 8 ))
        FROM SF2030 
        WHERE F2_FILIAL  = @cFil_SF2  and F2_DOC  = @cD1_NFORI  and F2_SERIE  = @cD1_SERIORI  and D_E_L_E_T_  = ' ' 
      IF  ( (@IN_MV_PAR14  = 2 )  and  (@dF2_EMISSAO  >= @IN_MV_ULMES )  and  (@dF2_EMISSAO  <= @IN_MV_PAR01 ) )  or  ( (@IN_MV_PAR14  = 3 
        )  and  (@dF2_EMISSAO  = @dD1_DTDIGIT ) ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT043_16_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT043_16_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT043_16_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT043_16_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @nContador Integer
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cAxuCUSTO Char( 9)
BEGIN
   SET @cAxuCUSTO  = '         ' 
   SET @cB1_CCCUSTO  = '         ' 
   SET @nContador  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_16_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SELECT @cB1_CCCUSTO  = COALESCE ( B1_CCCUSTO , ' ' )
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_COD  and D_E_L_E_T_  = ' ' 
   IF  (SUBSTRING ( @IN_COD , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CCCUSTO , '         ' ) = @cAxuCUSTO 
   BEGIN 
      IF  (@IN_MV_NEGESTR  = '1' ) 
      BEGIN 
         SET @cAux  = 'SG1' 
         EXEC XFILIAL_16_01 @cAux , @IN_FILIALCOR , @cFil_SG1 output 
         SELECT @nContador  = COALESCE ( COUNT ( * ), 0 )
           FROM SG1010 SG1
           WHERE G1_FILIAL  = @cFil_SG1  and G1_COMP  = @IN_COD  and G1_QUANT  < 0  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nContador  = 1 
   END 
   IF  (@nContador  > 0 ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT043_16_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT043_16_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT043_16_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT043_16_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @nContador Integer
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cAxuCUSTO Char( 9)
BEGIN
   SET @cAxuCUSTO  = '         ' 
   SET @cB1_CCCUSTO  = '         ' 
   SET @nContador  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_16_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SELECT @cB1_CCCUSTO  = COALESCE ( B1_CCCUSTO , ' ' )
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_COD  and D_E_L_E_T_  = ' ' 
   IF  (SUBSTRING ( @IN_COD , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CCCUSTO , '         ' ) = @cAxuCUSTO 
   BEGIN 
      IF  (@IN_MV_NEGESTR  = '1' ) 
      BEGIN 
         SET @cAux  = 'SG1' 
         EXEC XFILIAL_16_02 @cAux , @IN_FILIALCOR , @cFil_SG1 output 
         SELECT @nContador  = COALESCE ( COUNT ( * ), 0 )
           FROM SG1030 SG1
           WHERE G1_FILIAL  = @cFil_SG1  and G1_COMP  = @IN_COD  and G1_QUANT  < 0  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nContador  = 1 
   END 
   IF  (@nContador  > 0 ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT043_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT043_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT043_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT043_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @nContador Integer
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cAxuCUSTO Char( 9)
BEGIN
   SET @cAxuCUSTO  = '         ' 
   SET @cB1_CCCUSTO  = '         ' 
   SET @nContador  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SELECT @cB1_CCCUSTO  = COALESCE ( B1_CCCUSTO , ' ' )
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_COD  and D_E_L_E_T_  = ' ' 
   IF  (SUBSTRING ( @IN_COD , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CCCUSTO , '         ' ) = @cAxuCUSTO 
   BEGIN 
      IF  (@IN_MV_NEGESTR  = '1' ) 
      BEGIN 
         SET @cAux  = 'SG1' 
         EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SG1 output 
         SELECT @nContador  = COALESCE ( COUNT ( * ), 0 )
           FROM SG1010 SG1
           WHERE G1_FILIAL  = @cFil_SG1  and G1_COMP  = @IN_COD  and G1_QUANT  < 0  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nContador  = 1 
   END 
   IF  (@nContador  > 0 ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT043_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT043_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT043_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT043_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_NEGESTR Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SG1 Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @nContador Integer
DECLARE @cB1_CCCUSTO Char( 9)
DECLARE @cAxuCUSTO Char( 9)
BEGIN
   SET @cAxuCUSTO  = '         ' 
   SET @cB1_CCCUSTO  = '         ' 
   SET @nContador  = 0 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SELECT @cB1_CCCUSTO  = COALESCE ( B1_CCCUSTO , ' ' )
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_COD  and D_E_L_E_T_  = ' ' 
   IF  (SUBSTRING ( @IN_COD , 1 , 3 ) <> 'MOD' )  and COALESCE ( @cB1_CCCUSTO , '         ' ) = @cAxuCUSTO 
   BEGIN 
      IF  (@IN_MV_NEGESTR  = '1' ) 
      BEGIN 
         SET @cAux  = 'SG1' 
         EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SG1 output 
         SELECT @nContador  = COALESCE ( COUNT ( * ), 0 )
           FROM SG1030 SG1
           WHERE G1_FILIAL  = @cFil_SG1  and G1_COMP  = @IN_COD  and G1_QUANT  < 0  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      SET @nContador  = 1 
   END 
   IF  (@nContador  > 0 ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      SET @OUT_RESULTADO  = '0' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT044_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT044_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT044_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT044_18_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_SALDOINI VarChar( 1 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_INTDL Char( 1 ) ) AS
 
-- Declaration of variables
DECLARE @cFil_SDB Char( 2)
DECLARE @cFil_SBE Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SBK Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @cDtVai VarChar( 08 )
DECLARE @cDB_PRODUTO Char( 15)
DECLARE @cDB_LOCAL Char( 2)
DECLARE @cDB_LOTECTL Char( 10)
DECLARE @cDB_NUMLOTE Char( 6)
DECLARE @cDB_LOCALIZ Char( 15)
DECLARE @cDB_NUMSERI Char( 20)
DECLARE @nDB_QUANT Decimal( 12 , 2 )
DECLARE @nDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @cDB_TM Char( 3)
DECLARE @nEDB_QUANT Decimal( 12 , 2 )
DECLARE @nEDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @nEDB_EMPENHO Decimal( 12 , 2 )
DECLARE @nEDB_EMPENHO2 Decimal( 12 , 2 )
DECLARE @nSDB_QUANT Decimal( 12 , 2 )
DECLARE @nSDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @nSDB_EMPENHO Decimal( 12 , 2 )
DECLARE @nSDB_EMPENHO2 Decimal( 12 , 2 )
DECLARE @iRecno Integer
DECLARE @cFil_SBF Char( 2)
DECLARE @nQuant Decimal( 12 , 2 )
DECLARE @nQuant2 Decimal( 12 , 2 )
DECLARE @nEmpenho Decimal( 12 , 2 )
DECLARE @nEmpenho2 Decimal( 12 , 2 )
DECLARE @cEstFis Char( 6)
DECLARE @cPrior Char( 3)
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @BF_LOCAL Char( 2)
DECLARE @BF_LOCALIZ Char( 15 )
DECLARE @BF_ESTFIS Char( 06 )
DECLARE @B1_RASTRO Char( 1)
DECLARE @BE_LOCAL Char( 2)
DECLARE @BE_LOCALIZ Char( 15)
DECLARE @iRecnoSBF Integer
DECLARE @nIN_QTSEGUM Decimal( 14 , 2 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'SBK' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBK output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SDB output 
   SET @cAux  = 'SBF' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBF output 
   SET @cAux  = 'SBE' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBE output 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SDB
   DECLARE CUR_SDB insensitive  CURSOR FOR 
   SELECT DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
     FROM SDB010 SDB
     WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @IN_PRODUTO  and DB_LOCAL  = @IN_LOCAL  and DB_ESTORNO  <> 'S'  and DB_ATUEST  <> 'N' 
      and  ( (DB_DATA  > (
   SELECT COALESCE ( MAX ( SUBSTRING ( BK_DATA , 1 , 8 )), @IN_MV_ULMES )
     FROM SBK010 SBKSUB
     WHERE SBKSUB.BK_FILIAL  = @cFil_SBK  and SBKSUB.BK_COD  = SDB.DB_PRODUTO  and SBKSUB.BK_LOCAL  = SDB.DB_LOCAL  and SBKSUB.BK_LOTECTL  = SDB.DB_LOTECTL 
      and SBKSUB.BK_NUMLOTE  = SDB.DB_NUMLOTE  and SBKSUB.BK_LOCALIZ  = SDB.DB_LOCALIZ  and SBKSUB.BK_NUMSERI  = SDB.DB_NUMSERI 
      and SBKSUB.BK_DATA  >= @IN_MV_ULMES  and SBKSUB.D_E_L_E_T_  = ' ' ))  or  (@IN_SALDOINI  = '0' ) )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
    
   OPEN CUR_SDB
   FETCH CUR_SDB 
    INTO @cDB_PRODUTO , @cDB_LOCAL , @cDB_LOTECTL , @cDB_NUMLOTE , @cDB_NUMSERI , @cDB_LOCALIZ 
   WHILE (@@fetch_status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nEDB_QUANT  = 0 
      SET @nSDB_QUANT  = 0 
      SET @nEDB_QTSEGUM  = 0 
      SET @nSDB_QTSEGUM  = 0 
      SET @nEDB_EMPENHO  = 0 
      SET @nEDB_EMPENHO2  = 0 
      SET @nSDB_EMPENHO  = 0 
      SET @nSDB_EMPENHO2  = 0 
      SELECT @cDtVai  = MAX ( SUBSTRING ( BK_DATA , 1 , 8 ))
        FROM SBK010 SBK
        WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cDB_PRODUTO  and BK_LOCAL  = @cDB_LOCAL  and BK_LOTECTL  = @cDB_LOTECTL 
         and BK_NUMLOTE  = @cDB_NUMLOTE  and BK_LOCALIZ  = @cDB_LOCALIZ  and BK_NUMSERI  = @cDB_NUMSERI  and BK_DATA  >= @IN_MV_ULMES 
         and D_E_L_E_T_  = ' ' 
      IF @cDtVai is null 
      BEGIN 
         SET @cDtVai  = '19809901' 
      END 
      SELECT @nEDB_QUANT  = SUM(DB_QUANT ), @nEDB_QTSEGUM  = SUM(DB_QTSEGUM ), @nEDB_EMPENHO  = SUM(DB_EMPENHO ), @nEDB_EMPENHO2  = SUM(DB_EMP2 )
        
        FROM SDB010 SDB
        WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @cDB_PRODUTO  and DB_LOCAL  = @cDB_LOCAL  and DB_LOTECTL  = @cDB_LOTECTL 
         and DB_NUMLOTE  = @cDB_NUMLOTE  and DB_NUMSERI  = @cDB_NUMSERI  and DB_LOCALIZ  = @cDB_LOCALIZ  and DB_TM  <= '500' 
         and DB_ESTORNO  <> 'S'  and DB_ATUEST  <> 'N'  and  ( (DB_DATA  > @cDtVai )  or  (@IN_SALDOINI  = '0' ) )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
      SELECT @nSDB_QUANT  = SUM(DB_QUANT ), @nSDB_QTSEGUM  = SUM(DB_QTSEGUM ), @nSDB_EMPENHO  = SUM(DB_EMPENHO ), @nSDB_EMPENHO2  = SUM(DB_EMP2 )
        
        FROM SDB010 SDB
        WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @cDB_PRODUTO  and DB_LOCAL  = @cDB_LOCAL  and DB_LOTECTL  = @cDB_LOTECTL 
         and DB_NUMLOTE  = @cDB_NUMLOTE  and DB_NUMSERI  = @cDB_NUMSERI  and DB_LOCALIZ  = @cDB_LOCALIZ  and DB_TM  > '500' 
         and DB_ESTORNO  <> 'S'  and DB_ATUEST  <> 'N'  and  ( (DB_DATA  > @cDtVai )  or  (@IN_SALDOINI  = '0' ) )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
      IF  (@nEDB_QUANT is null )  or  (@nEDB_QUANT  < 0 ) 
      BEGIN 
         SET @nEDB_QUANT  = 0 
      END 
      IF  (@nSDB_QUANT is null )  or  (@nSDB_QUANT  < 0 ) 
      BEGIN 
         SET @nSDB_QUANT  = 0 
      END 
      IF  (@nEDB_QTSEGUM is null )  or  (@nEDB_QTSEGUM  < 0 ) 
      BEGIN 
         SET @nEDB_QTSEGUM  = 0 
      END 
      IF  (@nSDB_QTSEGUM is null )  or  (@nSDB_QTSEGUM  < 0 ) 
      BEGIN 
         SET @nSDB_QTSEGUM  = 0 
      END 
      IF  (@nEDB_EMPENHO is null )  or  (@nEDB_EMPENHO  < 0 ) 
      BEGIN 
         SET @nEDB_EMPENHO  = 0 
      END 
      IF  (@nSDB_EMPENHO is null )  or  (@nSDB_EMPENHO  < 0 ) 
      BEGIN 
         SET @nSDB_EMPENHO  = 0 
      END 
      IF  (@nEDB_EMPENHO2 is null )  or  (@nEDB_EMPENHO2  < 0 ) 
      BEGIN 
         SET @nEDB_EMPENHO2  = 0 
      END 
      IF  (@nSDB_EMPENHO2 is null )  or  (@nSDB_EMPENHO2  < 0 ) 
      BEGIN 
         SET @nSDB_EMPENHO2  = 0 
      END 
      SET @nQuant  = @nEDB_QUANT  - @nSDB_QUANT 
      SET @nQuant2  = @nEDB_QTSEGUM  - @nSDB_QTSEGUM 
      SET @nEmpenho  = @nEDB_EMPENHO  - @nSDB_EMPENHO 
      SET @nEmpenho2  = @nEDB_EMPENHO2  - @nSDB_EMPENHO2 
      SET @cEstFis  = ' ' 
      SET @cPrior  = ' ' 
      SELECT @cEstFis  = BE_ESTFIS , @cPrior  = BE_PRIOR 
        FROM SBE010 
        WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @cDB_LOCAL  and BE_LOCALIZ  = @cDB_LOCALIZ  and D_E_L_E_T_  = ' ' 
      IF @cPrior is null 
      BEGIN 
         SET @cPrior  = ' ' 
      END 
      IF @IN_INTDL  = '0' 
      BEGIN 
         SET @cEstFis  = ' ' 
      END 
      SET @iRecno  = null 
      SELECT @iRecno  = R_E_C_N_O_ 
        FROM SBF010 
        WHERE BF_FILIAL  = @cFil_SBF  and BF_LOCAL  = @cDB_LOCAL  and BF_LOCALIZ  = @cDB_LOCALIZ  and BF_ESTFIS  = @cEstFis 
         and BF_PRODUTO  = @cDB_PRODUTO  and BF_NUMSERI  = @cDB_NUMSERI  and BF_LOTECTL  = @cDB_LOTECTL  and BF_NUMLOTE  = @cDB_NUMLOTE 
         and D_E_L_E_T_  = ' ' 
      IF @nContador  = 1 
      BEGIN 
         begin tran 
         SET @nContador  = @nContador 
      END 
      SET @nIN_QTSEGUM  = @nQuant2 
      EXEC MAT018_18_01 @cDB_PRODUTO , @IN_FILIALCOR , @nQuant , @nIN_QTSEGUM , 2 , @nQuant2 output 
      IF @iRecno is null 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM SBF010 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO SBF010 (BF_FILIAL , BF_LOCAL , BF_LOCALIZ , BF_PRODUTO , BF_NUMSERI , BF_LOTECTL , BF_NUMLOTE , BF_QUANT , 
                BF_QTSEGUM , BF_ESTFIS , BF_PRIOR , BF_EMPENHO , BF_EMPEN2 , R_E_C_N_O_ ) 
         VALUES (@cFil_SBF , @cDB_LOCAL , @cDB_LOCALIZ , @cDB_PRODUTO , @cDB_NUMSERI , @cDB_LOTECTL , @cDB_NUMLOTE , @nQuant , 
                @nQuant2 , @cEstFis , @cPrior , @nEmpenho , @nEmpenho2 , @iRecno );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         UPDATE SBF010 
           WITH (ROWLOCK) 
            SET BF_QUANT  = BF_QUANT  + @nQuant , BF_QTSEGUM  = BF_QTSEGUM  + @nQuant2 , BF_ESTFIS  = @cEstFis , BF_EMPENHO  = BF_EMPENHO  + @nEmpenho 
           , BF_EMPEN2  = BF_EMPEN2  + @nEmpenho2 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      FETCH CUR_SDB 
       INTO @cDB_PRODUTO , @cDB_LOCAL , @cDB_LOTECTL , @cDB_NUMLOTE , @cDB_NUMSERI , @cDB_LOCALIZ 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SDB
   DEALLOCATE CUR_SDB
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT044_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT044_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT044_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT044_18_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_PRODUTO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_SALDOINI VarChar( 1 ) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_MV_RASTRO Char( 01 ) , 
    @IN_INTDL Char( 1 ) ) AS
 
-- Declaration of variables
DECLARE @cFil_SDB Char( 2)
DECLARE @cFil_SBE Char( 2)
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SBK Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @cDtVai VarChar( 08 )
DECLARE @cDB_PRODUTO Char( 15)
DECLARE @cDB_LOCAL Char( 2)
DECLARE @cDB_LOTECTL Char( 10)
DECLARE @cDB_NUMLOTE Char( 6)
DECLARE @cDB_LOCALIZ Char( 15)
DECLARE @cDB_NUMSERI Char( 20)
DECLARE @nDB_QUANT Decimal( 12 , 2 )
DECLARE @nDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @cDB_TM Char( 3)
DECLARE @nEDB_QUANT Decimal( 12 , 2 )
DECLARE @nEDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @nEDB_EMPENHO Decimal( 12 , 2 )
DECLARE @nEDB_EMPENHO2 Decimal( 12 , 2 )
DECLARE @nSDB_QUANT Decimal( 12 , 2 )
DECLARE @nSDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @nSDB_EMPENHO Decimal( 12 , 2 )
DECLARE @nSDB_EMPENHO2 Decimal( 12 , 2 )
DECLARE @iRecno Integer
DECLARE @cFil_SBF Char( 2)
DECLARE @nQuant Decimal( 12 , 2 )
DECLARE @nQuant2 Decimal( 12 , 2 )
DECLARE @nEmpenho Decimal( 12 , 2 )
DECLARE @nEmpenho2 Decimal( 12 , 2 )
DECLARE @cEstFis Char( 6)
DECLARE @cPrior Char( 3)
DECLARE @nContador Integer
DECLARE @iTranCount Integer
DECLARE @BF_LOCAL Char( 2)
DECLARE @BF_LOCALIZ Char( 15 )
DECLARE @BF_ESTFIS Char( 06 )
DECLARE @B1_RASTRO Char( 1)
DECLARE @BE_LOCAL Char( 2)
DECLARE @BE_LOCALIZ Char( 15)
DECLARE @iRecnoSBF Integer
DECLARE @nIN_QTSEGUM Decimal( 14 , 2 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @cAux  = 'SBK' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBK output 
   SET @cAux  = 'SDB' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SDB output 
   SET @cAux  = 'SBF' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBF output 
   SET @cAux  = 'SBE' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBE output 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @nContador  = 0 
    
   -- Cursor declaration CUR_SDB
   DECLARE CUR_SDB insensitive  CURSOR FOR 
   SELECT DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
     FROM SDB030 SDB
     WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @IN_PRODUTO  and DB_LOCAL  = @IN_LOCAL  and DB_ESTORNO  <> 'S'  and DB_ATUEST  <> 'N' 
      and  ( (DB_DATA  > (
   SELECT COALESCE ( MAX ( SUBSTRING ( BK_DATA , 1 , 8 )), @IN_MV_ULMES )
     FROM SBK030 SBKSUB
     WHERE SBKSUB.BK_FILIAL  = @cFil_SBK  and SBKSUB.BK_COD  = SDB.DB_PRODUTO  and SBKSUB.BK_LOCAL  = SDB.DB_LOCAL  and SBKSUB.BK_LOTECTL  = SDB.DB_LOTECTL 
      and SBKSUB.BK_NUMLOTE  = SDB.DB_NUMLOTE  and SBKSUB.BK_LOCALIZ  = SDB.DB_LOCALIZ  and SBKSUB.BK_NUMSERI  = SDB.DB_NUMSERI 
      and SBKSUB.BK_DATA  >= @IN_MV_ULMES  and SBKSUB.D_E_L_E_T_  = ' ' ))  or  (@IN_SALDOINI  = '0' ) )  and D_E_L_E_T_  = ' ' 
     
     GROUP BY DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
    
   OPEN CUR_SDB
   FETCH CUR_SDB 
    INTO @cDB_PRODUTO , @cDB_LOCAL , @cDB_LOTECTL , @cDB_NUMLOTE , @cDB_NUMSERI , @cDB_LOCALIZ 
   WHILE (@@fetch_status  = 0 )
   BEGIN
      SET @nContador  = @nContador  + 1 
      SET @nEDB_QUANT  = 0 
      SET @nSDB_QUANT  = 0 
      SET @nEDB_QTSEGUM  = 0 
      SET @nSDB_QTSEGUM  = 0 
      SET @nEDB_EMPENHO  = 0 
      SET @nEDB_EMPENHO2  = 0 
      SET @nSDB_EMPENHO  = 0 
      SET @nSDB_EMPENHO2  = 0 
      SELECT @cDtVai  = MAX ( SUBSTRING ( BK_DATA , 1 , 8 ))
        FROM SBK030 SBK
        WHERE BK_FILIAL  = @cFil_SBK  and BK_COD  = @cDB_PRODUTO  and BK_LOCAL  = @cDB_LOCAL  and BK_LOTECTL  = @cDB_LOTECTL 
         and BK_NUMLOTE  = @cDB_NUMLOTE  and BK_LOCALIZ  = @cDB_LOCALIZ  and BK_NUMSERI  = @cDB_NUMSERI  and BK_DATA  >= @IN_MV_ULMES 
         and D_E_L_E_T_  = ' ' 
      IF @cDtVai is null 
      BEGIN 
         SET @cDtVai  = '19809901' 
      END 
      SELECT @nEDB_QUANT  = SUM(DB_QUANT ), @nEDB_QTSEGUM  = SUM(DB_QTSEGUM ), @nEDB_EMPENHO  = SUM(DB_EMPENHO ), @nEDB_EMPENHO2  = SUM(DB_EMP2 )
        
        FROM SDB030 SDB
        WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @cDB_PRODUTO  and DB_LOCAL  = @cDB_LOCAL  and DB_LOTECTL  = @cDB_LOTECTL 
         and DB_NUMLOTE  = @cDB_NUMLOTE  and DB_NUMSERI  = @cDB_NUMSERI  and DB_LOCALIZ  = @cDB_LOCALIZ  and DB_TM  <= '500' 
         and DB_ESTORNO  <> 'S'  and DB_ATUEST  <> 'N'  and  ( (DB_DATA  > @cDtVai )  or  (@IN_SALDOINI  = '0' ) )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
      SELECT @nSDB_QUANT  = SUM(DB_QUANT ), @nSDB_QTSEGUM  = SUM(DB_QTSEGUM ), @nSDB_EMPENHO  = SUM(DB_EMPENHO ), @nSDB_EMPENHO2  = SUM(DB_EMP2 )
        
        FROM SDB030 SDB
        WHERE DB_FILIAL  = @cFil_SDB  and DB_PRODUTO  = @cDB_PRODUTO  and DB_LOCAL  = @cDB_LOCAL  and DB_LOTECTL  = @cDB_LOTECTL 
         and DB_NUMLOTE  = @cDB_NUMLOTE  and DB_NUMSERI  = @cDB_NUMSERI  and DB_LOCALIZ  = @cDB_LOCALIZ  and DB_TM  > '500' 
         and DB_ESTORNO  <> 'S'  and DB_ATUEST  <> 'N'  and  ( (DB_DATA  > @cDtVai )  or  (@IN_SALDOINI  = '0' ) )  and D_E_L_E_T_  = ' ' 
        
        GROUP BY DB_PRODUTO , DB_LOCAL , DB_LOTECTL , DB_NUMLOTE , DB_NUMSERI , DB_LOCALIZ 
      IF  (@nEDB_QUANT is null )  or  (@nEDB_QUANT  < 0 ) 
      BEGIN 
         SET @nEDB_QUANT  = 0 
      END 
      IF  (@nSDB_QUANT is null )  or  (@nSDB_QUANT  < 0 ) 
      BEGIN 
         SET @nSDB_QUANT  = 0 
      END 
      IF  (@nEDB_QTSEGUM is null )  or  (@nEDB_QTSEGUM  < 0 ) 
      BEGIN 
         SET @nEDB_QTSEGUM  = 0 
      END 
      IF  (@nSDB_QTSEGUM is null )  or  (@nSDB_QTSEGUM  < 0 ) 
      BEGIN 
         SET @nSDB_QTSEGUM  = 0 
      END 
      IF  (@nEDB_EMPENHO is null )  or  (@nEDB_EMPENHO  < 0 ) 
      BEGIN 
         SET @nEDB_EMPENHO  = 0 
      END 
      IF  (@nSDB_EMPENHO is null )  or  (@nSDB_EMPENHO  < 0 ) 
      BEGIN 
         SET @nSDB_EMPENHO  = 0 
      END 
      IF  (@nEDB_EMPENHO2 is null )  or  (@nEDB_EMPENHO2  < 0 ) 
      BEGIN 
         SET @nEDB_EMPENHO2  = 0 
      END 
      IF  (@nSDB_EMPENHO2 is null )  or  (@nSDB_EMPENHO2  < 0 ) 
      BEGIN 
         SET @nSDB_EMPENHO2  = 0 
      END 
      SET @nQuant  = @nEDB_QUANT  - @nSDB_QUANT 
      SET @nQuant2  = @nEDB_QTSEGUM  - @nSDB_QTSEGUM 
      SET @nEmpenho  = @nEDB_EMPENHO  - @nSDB_EMPENHO 
      SET @nEmpenho2  = @nEDB_EMPENHO2  - @nSDB_EMPENHO2 
      SET @cEstFis  = ' ' 
      SET @cPrior  = ' ' 
      SELECT @cEstFis  = BE_ESTFIS , @cPrior  = BE_PRIOR 
        FROM SBE030 
        WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @cDB_LOCAL  and BE_LOCALIZ  = @cDB_LOCALIZ  and D_E_L_E_T_  = ' ' 
      IF @cPrior is null 
      BEGIN 
         SET @cPrior  = ' ' 
      END 
      IF @IN_INTDL  = '0' 
      BEGIN 
         SET @cEstFis  = ' ' 
      END 
      SET @iRecno  = null 
      SELECT @iRecno  = R_E_C_N_O_ 
        FROM SBF030 
        WHERE BF_FILIAL  = @cFil_SBF  and BF_LOCAL  = @cDB_LOCAL  and BF_LOCALIZ  = @cDB_LOCALIZ  and BF_ESTFIS  = @cEstFis 
         and BF_PRODUTO  = @cDB_PRODUTO  and BF_NUMSERI  = @cDB_NUMSERI  and BF_LOTECTL  = @cDB_LOTECTL  and BF_NUMLOTE  = @cDB_NUMLOTE 
         and D_E_L_E_T_  = ' ' 
      IF @nContador  = 1 
      BEGIN 
         begin tran 
         SET @nContador  = @nContador 
      END 
      SET @nIN_QTSEGUM  = @nQuant2 
      EXEC MAT018_18_02 @cDB_PRODUTO , @IN_FILIALCOR , @nQuant , @nIN_QTSEGUM , 2 , @nQuant2 output 
      IF @iRecno is null 
      BEGIN 
         SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM SBF030 
         SET @iRecno  = @iRecno  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
         INSERT INTO SBF030 (BF_FILIAL , BF_LOCAL , BF_LOCALIZ , BF_PRODUTO , BF_NUMSERI , BF_LOTECTL , BF_NUMLOTE , BF_QUANT , 
                BF_QTSEGUM , BF_ESTFIS , BF_PRIOR , BF_EMPENHO , BF_EMPEN2 , R_E_C_N_O_ ) 
         VALUES (@cFil_SBF , @cDB_LOCAL , @cDB_LOCALIZ , @cDB_PRODUTO , @cDB_NUMSERI , @cDB_LOTECTL , @cDB_NUMLOTE , @nQuant , 
                @nQuant2 , @cEstFis , @cPrior , @nEmpenho , @nEmpenho2 , @iRecno );
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecno = @iRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         UPDATE SBF030 
           WITH (ROWLOCK) 
            SET BF_QUANT  = BF_QUANT  + @nQuant , BF_QTSEGUM  = BF_QTSEGUM  + @nQuant2 , BF_ESTFIS  = @cEstFis , BF_EMPENHO  = BF_EMPENHO  + @nEmpenho 
           , BF_EMPEN2  = BF_EMPEN2  + @nEmpenho2 
          WHERE R_E_C_N_O_  = @iRecno 
      END 
      FETCH CUR_SDB 
       INTO @cDB_PRODUTO , @cDB_LOCAL , @cDB_LOTECTL , @cDB_NUMLOTE , @cDB_NUMSERI , @cDB_LOCALIZ 
      IF @nContador  > 1023 
      BEGIN 
         Commit Tran 
         SET @nContador  = 0 
      END 
   END 
   CLOSE CUR_SDB
   DEALLOCATE CUR_SDB
   IF @nContador  > 0 
   BEGIN 
       Commit Transaction  
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT045_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT045_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT045_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT045_17_01]
(
    @IN_FILIAL_SD5 Char( 2) , 
    @IN_PROD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_LOTE Char( 10) , 
    @IN_DATA Char( 08 ) , 
    @IN_SUBLOTE Char( 6) , 
    @IN_cDtSaldo Char( 08 ) , 
    @IN_cRastroS Char( 01 ) , 
    @IN_nSLD1SD5 Float , 
    @IN_nSLD7SD5 Float , 
    @OUT_SALDO1 Float  output , 
    @OUT_SALDO7 Float  output ) AS
 
-- Declaration of variables
DECLARE @lAvalia Char( 01 )
DECLARE @cD5_NUMLOTE Char( 6)
DECLARE @nD5_QUANT Decimal( 12 , 2 )
DECLARE @nD5_QTSEGUM Decimal( 12 , 2 )
DECLARE @cD5_ORIGLAN Char( 3)
DECLARE @cFilial Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cLote Char( 10)
DECLARE @cDataInicio Char( 8 )
DECLARE @cDataFim Char( 8 )
BEGIN
   SET @cFilial  = @IN_FILIAL_SD5 
   SET @cProduto  = @IN_PROD 
   SET @cLocal  = @IN_LOCAL 
   SET @cLote  = @IN_LOTE 
   SET @cDataInicio  = @IN_cDtSaldo 
   SET @cDataFim  = @IN_DATA 
   SET @OUT_SALDO1  = @IN_nSLD1SD5 
   SET @OUT_SALDO7  = @IN_nSLD7SD5 
    
   -- Cursor declaration CUR_MAT029_B
   DECLARE CUR_MAT029_B insensitive  CURSOR FOR 
   SELECT D5_NUMLOTE , SUM(D5_QUANT ) D5_QUANT , SUM(D5_QTSEGUM ) D5_QTSEGUM , D5_ORIGLAN 
     FROM SD5010 
     WHERE D5_FILIAL  = @cFilial  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cLote  and D5_ESTORNO  <> 'S' 
      and D5_DATA  > @cDataInicio  and D5_DATA  < @cDataFim  and  ( (D5_ORIGLAN  <= '500' )  or  (SUBSTRING ( D5_ORIGLAN , 
          1 , 2 )in ( 'DE' , 'PR'  ) )  or  (D5_ORIGLAN  = 'MAN' ) )  and D_E_L_E_T_  = ' ' 
     GROUP BY D5_NUMLOTE , D5_ORIGLAN 
   UNION ALL
   SELECT D5_NUMLOTE , SUM(D5_QUANT ) * -   1  D5_QUANT , SUM(D5_QTSEGUM ) * -   1  D5_QTSEGUM , D5_ORIGLAN 
     FROM SD5010 
     WHERE D5_FILIAL  = @cFilial  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cLote  and D5_ESTORNO  <> 'S' 
      and D5_DATA  > @cDataInicio  and D5_DATA  < @cDataFim  and  (D5_ORIGLAN  > '500'  and SUBSTRING ( D5_ORIGLAN , 1 , 
          2 )NOT in ( 'DE' , 'RE'  )  and  (D5_ORIGLAN  <> 'MAN' ) )  and D_E_L_E_T_  = ' ' 
     GROUP BY D5_NUMLOTE , D5_ORIGLAN 
   FOR READ ONLY 
    
   OPEN CUR_MAT029_B
   FETCH CUR_MAT029_B 
    INTO @cD5_NUMLOTE , @nD5_QUANT , @nD5_QTSEGUM , @cD5_ORIGLAN 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @lAvalia  = '1' 
      IF  (@IN_SUBLOTE  <> ' ' )  and  (@IN_cRastroS  = '1' )  and  (@cD5_NUMLOTE  <> @IN_SUBLOTE ) 
      BEGIN 
         SET @lAvalia  = '0' 
      END 
      IF @lAvalia  = '1' 
      BEGIN 
         SET @OUT_SALDO1  = @OUT_SALDO1  + @nD5_QUANT 
         SET @OUT_SALDO7  = @OUT_SALDO7  + @nD5_QTSEGUM 
      END 
      FETCH CUR_MAT029_B 
       INTO @cD5_NUMLOTE , @nD5_QUANT , @nD5_QTSEGUM , @cD5_ORIGLAN 
   END 
   CLOSE CUR_MAT029_B
   DEALLOCATE CUR_MAT029_B
END
GO

GO
--SqlScripter----[dbo].[MAT045_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT045_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT045_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT045_17_02]
(
    @IN_FILIAL_SD5 Char( 2) , 
    @IN_PROD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_LOTE Char( 10) , 
    @IN_DATA Char( 08 ) , 
    @IN_SUBLOTE Char( 6) , 
    @IN_cDtSaldo Char( 08 ) , 
    @IN_cRastroS Char( 01 ) , 
    @IN_nSLD1SD5 Float , 
    @IN_nSLD7SD5 Float , 
    @OUT_SALDO1 Float  output , 
    @OUT_SALDO7 Float  output ) AS
 
-- Declaration of variables
DECLARE @lAvalia Char( 01 )
DECLARE @cD5_NUMLOTE Char( 6)
DECLARE @nD5_QUANT Decimal( 12 , 2 )
DECLARE @nD5_QTSEGUM Decimal( 12 , 2 )
DECLARE @cD5_ORIGLAN Char( 3)
DECLARE @cFilial Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cLote Char( 10)
DECLARE @cDataInicio Char( 8 )
DECLARE @cDataFim Char( 8 )
BEGIN
   SET @cFilial  = @IN_FILIAL_SD5 
   SET @cProduto  = @IN_PROD 
   SET @cLocal  = @IN_LOCAL 
   SET @cLote  = @IN_LOTE 
   SET @cDataInicio  = @IN_cDtSaldo 
   SET @cDataFim  = @IN_DATA 
   SET @OUT_SALDO1  = @IN_nSLD1SD5 
   SET @OUT_SALDO7  = @IN_nSLD7SD5 
    
   -- Cursor declaration CUR_MAT029_B
   DECLARE CUR_MAT029_B insensitive  CURSOR FOR 
   SELECT D5_NUMLOTE , SUM(D5_QUANT ) D5_QUANT , SUM(D5_QTSEGUM ) D5_QTSEGUM , D5_ORIGLAN 
     FROM SD5030 
     WHERE D5_FILIAL  = @cFilial  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cLote  and D5_ESTORNO  <> 'S' 
      and D5_DATA  > @cDataInicio  and D5_DATA  < @cDataFim  and  ( (D5_ORIGLAN  <= '500' )  or  (SUBSTRING ( D5_ORIGLAN , 
          1 , 2 )in ( 'DE' , 'PR'  ) )  or  (D5_ORIGLAN  = 'MAN' ) )  and D_E_L_E_T_  = ' ' 
     GROUP BY D5_NUMLOTE , D5_ORIGLAN 
   UNION ALL
   SELECT D5_NUMLOTE , SUM(D5_QUANT ) * -   1  D5_QUANT , SUM(D5_QTSEGUM ) * -   1  D5_QTSEGUM , D5_ORIGLAN 
     FROM SD5030 
     WHERE D5_FILIAL  = @cFilial  and D5_PRODUTO  = @cProduto  and D5_LOCAL  = @cLocal  and D5_LOTECTL  = @cLote  and D5_ESTORNO  <> 'S' 
      and D5_DATA  > @cDataInicio  and D5_DATA  < @cDataFim  and  (D5_ORIGLAN  > '500'  and SUBSTRING ( D5_ORIGLAN , 1 , 
          2 )NOT in ( 'DE' , 'RE'  )  and  (D5_ORIGLAN  <> 'MAN' ) )  and D_E_L_E_T_  = ' ' 
     GROUP BY D5_NUMLOTE , D5_ORIGLAN 
   FOR READ ONLY 
    
   OPEN CUR_MAT029_B
   FETCH CUR_MAT029_B 
    INTO @cD5_NUMLOTE , @nD5_QUANT , @nD5_QTSEGUM , @cD5_ORIGLAN 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @lAvalia  = '1' 
      IF  (@IN_SUBLOTE  <> ' ' )  and  (@IN_cRastroS  = '1' )  and  (@cD5_NUMLOTE  <> @IN_SUBLOTE ) 
      BEGIN 
         SET @lAvalia  = '0' 
      END 
      IF @lAvalia  = '1' 
      BEGIN 
         SET @OUT_SALDO1  = @OUT_SALDO1  + @nD5_QUANT 
         SET @OUT_SALDO7  = @OUT_SALDO7  + @nD5_QTSEGUM 
      END 
      FETCH CUR_MAT029_B 
       INTO @cD5_NUMLOTE , @nD5_QUANT , @nD5_QTSEGUM , @cD5_ORIGLAN 
   END 
   CLOSE CUR_MAT029_B
   DEALLOCATE CUR_MAT029_B
END
GO

GO
--SqlScripter----[dbo].[MAT046_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT046_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT046_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT046_17_01]
(
    @IN_FILIAL_SDB Char( 2) , 
    @IN_PROD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_LOTE Char( 10) , 
    @IN_LOCALIZA Char( 15) , 
    @IN_NUMSER Char( 20) , 
    @IN_SUBLOTE Char( 6) , 
    @IN_DATA Char( 08 ) , 
    @IN_cDtSaldo Char( 08 ) , 
    @IN_cRastroL Char( 01 ) , 
    @IN_cRastroS Char( 01 ) , 
    @IN_nSLD1SDB Float , 
    @IN_nSLD7SDB Float , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_PRDORI Char( 15) , 
    @OUT_SALDO1 Float  output , 
    @OUT_SALDO7 Float  output ) AS
 
-- Declaration of variables
DECLARE @nDB_QUANT Decimal( 12 , 2 )
DECLARE @nDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @cDB_TM Char( 3)
DECLARE @cFilial Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cLocaliz Char( 15)
DECLARE @cNumSeri Char( 20)
DECLARE @cLote Char( 10)
DECLARE @cSubLote Char( 6)
DECLARE @cDataInicio Char( 8 )
DECLARE @cDataFim Char( 8 )
BEGIN
   SET @cFilial  = @IN_FILIAL_SDB 
   SET @cProduto  = @IN_PROD 
   SET @cLocal  = @IN_LOCAL 
   SET @cLocaliz  = @IN_LOCALIZA 
   SET @cNumSeri  = @IN_NUMSER 
   SET @cLote  = @IN_LOTE 
   SET @cSubLote  = @IN_SUBLOTE 
   SET @cDataInicio  = @IN_cDtSaldo 
   SET @cDataFim  = @IN_DATA 
   SET @OUT_SALDO1  = @IN_nSLD1SDB 
   SET @OUT_SALDO7  = @IN_nSLD7SDB 
   IF @IN_cRastroL  = '1' 
   BEGIN 
      IF @IN_cRastroS  = '1'  and @IN_SUBLOTE  <> ' ' 
      BEGIN 
          
         -- Cursor declaration CUR_MAT029_D1
         DECLARE CUR_MAT029_D1 insensitive  CURSOR FOR 
         SELECT DB_TM , SUM(DB_QUANT ) DB_QUANT , SUM(DB_QTSEGUM ) DB_QTSEGUM 
           FROM SDB010 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_NUMLOTE  = @cSubLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio 
            and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  <= '500'  or SUBSTRING ( DB_TM , 1 , 2 )in ( 'DE' , 
                'PR'  )  or DB_TM  = 'MAN' )  and D_E_L_E_T_  = ' ' 
           GROUP BY DB_TM 
         UNION 
         SELECT DB_TM , SUM(DB_QUANT ) * -   1  DB_QUANT , SUM(DB_QTSEGUM ) * -   1  DB_QTSEGUM 
           FROM SDB010 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_NUMLOTE  = @cSubLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio 
            and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  > '500'  and SUBSTRING ( DB_TM , 1 , 2 )NOT in ( 'DE' , 
                'PR'  )  and DB_TM  <> 'MAN' )  and D_E_L_E_T_  = ' ' 
           GROUP BY DB_TM 
         FOR READ ONLY 
          
         OPEN CUR_MAT029_D1
         FETCH CUR_MAT029_D1 
          INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         WHILE ( (@@Fetch_Status  = 0 ) )
         BEGIN
            SET @OUT_SALDO1  = @OUT_SALDO1  + @nDB_QUANT 
            SET @OUT_SALDO7  = @OUT_SALDO7  + @nDB_QTSEGUM 
            FETCH CUR_MAT029_D1 
             INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         END 
         CLOSE CUR_MAT029_D1
         DEALLOCATE CUR_MAT029_D1
      END 
      ELSE 
      BEGIN 
          
         -- Cursor declaration CUR_MAT029_D2
         DECLARE CUR_MAT029_D2 insensitive  CURSOR FOR 
         SELECT DB_TM , SUM(DB_QUANT ) DB_QUANT , SUM(DB_QTSEGUM ) DB_QTSEGUM 
           FROM SDB010 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim 
            and DB_ATUEST  <> 'N'  and D_E_L_E_T_  = ' '  and  (DB_TM  <= '500'  or SUBSTRING ( DB_TM , 1 , 2 )in ( 'DE' , 
                'PR'  )  or DB_TM  = 'MAN' ) 
           GROUP BY DB_TM 
         UNION 
         SELECT DB_TM , SUM(DB_QUANT ) * -   1  DB_QUANT , SUM(DB_QTSEGUM ) * -   1  DB_QTSEGUM 
           FROM SDB010 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim 
            and DB_ATUEST  <> 'N'  and D_E_L_E_T_  = ' '  and  (DB_TM  > '500'  and SUBSTRING ( DB_TM , 1 , 2 )NOT in ( 'DE' , 
                'PR'  )  and DB_TM  <> 'MAN' ) 
           GROUP BY DB_TM 
         FOR READ ONLY 
          
         OPEN CUR_MAT029_D2
         FETCH CUR_MAT029_D2 
          INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         WHILE ( (@@Fetch_Status  = 0 ) )
         BEGIN
            SET @OUT_SALDO1  = @OUT_SALDO1  + @nDB_QUANT 
            SET @OUT_SALDO7  = @OUT_SALDO7  + @nDB_QTSEGUM 
            FETCH CUR_MAT029_D2 
             INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         END 
         CLOSE CUR_MAT029_D2
         DEALLOCATE CUR_MAT029_D2
      END 
   END 
   ELSE 
   BEGIN 
       
      -- Cursor declaration CUR_MAT029_D3
      DECLARE CUR_MAT029_D3 insensitive  CURSOR FOR 
      SELECT DB_TM , SUM(DB_QUANT ) DB_QUANT , SUM(DB_QTSEGUM ) DB_QTSEGUM 
        FROM SDB010 
        WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz  and DB_NUMSERI  = @cNumSeri 
         and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  <= '500' 
         or SUBSTRING ( DB_TM , 1 , 2 )in ( 'DE' , 'PR'  )  or DB_TM  = 'MAN' )  and D_E_L_E_T_  = ' ' 
        GROUP BY DB_TM 
      UNION 
      SELECT DB_TM , SUM(DB_QUANT ) * -   1  DB_QUANT , SUM(DB_QTSEGUM ) * -   1  DB_QTSEGUM 
        FROM SDB010 
        WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz  and DB_NUMSERI  = @cNumSeri 
         and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  > '500' 
         and SUBSTRING ( DB_TM , 1 , 2 )NOT in ( 'DE' , 'PR'  )  and DB_TM  <> 'MAN' )  and D_E_L_E_T_  = ' ' 
        GROUP BY DB_TM 
      FOR READ ONLY 
       
      OPEN CUR_MAT029_D3
      FETCH CUR_MAT029_D3 
       INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @OUT_SALDO1  = @OUT_SALDO1  + @nDB_QUANT 
         SET @OUT_SALDO7  = @OUT_SALDO7  + @nDB_QTSEGUM 
         FETCH CUR_MAT029_D3 
          INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
      END 
      CLOSE CUR_MAT029_D3
      DEALLOCATE CUR_MAT029_D3
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT046_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT046_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT046_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT046_17_02]
(
    @IN_FILIAL_SDB Char( 2) , 
    @IN_PROD Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_LOTE Char( 10) , 
    @IN_LOCALIZA Char( 15) , 
    @IN_NUMSER Char( 20) , 
    @IN_SUBLOTE Char( 6) , 
    @IN_DATA Char( 08 ) , 
    @IN_cDtSaldo Char( 08 ) , 
    @IN_cRastroL Char( 01 ) , 
    @IN_cRastroS Char( 01 ) , 
    @IN_nSLD1SDB Float , 
    @IN_nSLD7SDB Float , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_PRDORI Char( 15) , 
    @OUT_SALDO1 Float  output , 
    @OUT_SALDO7 Float  output ) AS
 
-- Declaration of variables
DECLARE @nDB_QUANT Decimal( 12 , 2 )
DECLARE @nDB_QTSEGUM Decimal( 12 , 2 )
DECLARE @cDB_TM Char( 3)
DECLARE @cFilial Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cLocaliz Char( 15)
DECLARE @cNumSeri Char( 20)
DECLARE @cLote Char( 10)
DECLARE @cSubLote Char( 6)
DECLARE @cDataInicio Char( 8 )
DECLARE @cDataFim Char( 8 )
BEGIN
   SET @cFilial  = @IN_FILIAL_SDB 
   SET @cProduto  = @IN_PROD 
   SET @cLocal  = @IN_LOCAL 
   SET @cLocaliz  = @IN_LOCALIZA 
   SET @cNumSeri  = @IN_NUMSER 
   SET @cLote  = @IN_LOTE 
   SET @cSubLote  = @IN_SUBLOTE 
   SET @cDataInicio  = @IN_cDtSaldo 
   SET @cDataFim  = @IN_DATA 
   SET @OUT_SALDO1  = @IN_nSLD1SDB 
   SET @OUT_SALDO7  = @IN_nSLD7SDB 
   IF @IN_cRastroL  = '1' 
   BEGIN 
      IF @IN_cRastroS  = '1'  and @IN_SUBLOTE  <> ' ' 
      BEGIN 
          
         -- Cursor declaration CUR_MAT029_D1
         DECLARE CUR_MAT029_D1 insensitive  CURSOR FOR 
         SELECT DB_TM , SUM(DB_QUANT ) DB_QUANT , SUM(DB_QTSEGUM ) DB_QTSEGUM 
           FROM SDB030 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_NUMLOTE  = @cSubLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio 
            and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  <= '500'  or SUBSTRING ( DB_TM , 1 , 2 )in ( 'DE' , 
                'PR'  )  or DB_TM  = 'MAN' )  and D_E_L_E_T_  = ' ' 
           GROUP BY DB_TM 
         UNION 
         SELECT DB_TM , SUM(DB_QUANT ) * -   1  DB_QUANT , SUM(DB_QTSEGUM ) * -   1  DB_QTSEGUM 
           FROM SDB030 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_NUMLOTE  = @cSubLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio 
            and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  > '500'  and SUBSTRING ( DB_TM , 1 , 2 )NOT in ( 'DE' , 
                'PR'  )  and DB_TM  <> 'MAN' )  and D_E_L_E_T_  = ' ' 
           GROUP BY DB_TM 
         FOR READ ONLY 
          
         OPEN CUR_MAT029_D1
         FETCH CUR_MAT029_D1 
          INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         WHILE ( (@@Fetch_Status  = 0 ) )
         BEGIN
            SET @OUT_SALDO1  = @OUT_SALDO1  + @nDB_QUANT 
            SET @OUT_SALDO7  = @OUT_SALDO7  + @nDB_QTSEGUM 
            FETCH CUR_MAT029_D1 
             INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         END 
         CLOSE CUR_MAT029_D1
         DEALLOCATE CUR_MAT029_D1
      END 
      ELSE 
      BEGIN 
          
         -- Cursor declaration CUR_MAT029_D2
         DECLARE CUR_MAT029_D2 insensitive  CURSOR FOR 
         SELECT DB_TM , SUM(DB_QUANT ) DB_QUANT , SUM(DB_QTSEGUM ) DB_QTSEGUM 
           FROM SDB030 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim 
            and DB_ATUEST  <> 'N'  and D_E_L_E_T_  = ' '  and  (DB_TM  <= '500'  or SUBSTRING ( DB_TM , 1 , 2 )in ( 'DE' , 
                'PR'  )  or DB_TM  = 'MAN' ) 
           GROUP BY DB_TM 
         UNION 
         SELECT DB_TM , SUM(DB_QUANT ) * -   1  DB_QUANT , SUM(DB_QTSEGUM ) * -   1  DB_QTSEGUM 
           FROM SDB030 
           WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz 
            and DB_NUMSERI  = @cNumSeri  and DB_LOTECTL  = @cLote  and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim 
            and DB_ATUEST  <> 'N'  and D_E_L_E_T_  = ' '  and  (DB_TM  > '500'  and SUBSTRING ( DB_TM , 1 , 2 )NOT in ( 'DE' , 
                'PR'  )  and DB_TM  <> 'MAN' ) 
           GROUP BY DB_TM 
         FOR READ ONLY 
          
         OPEN CUR_MAT029_D2
         FETCH CUR_MAT029_D2 
          INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         WHILE ( (@@Fetch_Status  = 0 ) )
         BEGIN
            SET @OUT_SALDO1  = @OUT_SALDO1  + @nDB_QUANT 
            SET @OUT_SALDO7  = @OUT_SALDO7  + @nDB_QTSEGUM 
            FETCH CUR_MAT029_D2 
             INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
         END 
         CLOSE CUR_MAT029_D2
         DEALLOCATE CUR_MAT029_D2
      END 
   END 
   ELSE 
   BEGIN 
       
      -- Cursor declaration CUR_MAT029_D3
      DECLARE CUR_MAT029_D3 insensitive  CURSOR FOR 
      SELECT DB_TM , SUM(DB_QUANT ) DB_QUANT , SUM(DB_QTSEGUM ) DB_QTSEGUM 
        FROM SDB030 
        WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz  and DB_NUMSERI  = @cNumSeri 
         and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  <= '500' 
         or SUBSTRING ( DB_TM , 1 , 2 )in ( 'DE' , 'PR'  )  or DB_TM  = 'MAN' )  and D_E_L_E_T_  = ' ' 
        GROUP BY DB_TM 
      UNION 
      SELECT DB_TM , SUM(DB_QUANT ) * -   1  DB_QUANT , SUM(DB_QTSEGUM ) * -   1  DB_QTSEGUM 
        FROM SDB030 
        WHERE DB_FILIAL  = @cFilial  and DB_PRODUTO  = @cProduto  and DB_LOCAL  = @cLocal  and DB_LOCALIZ  = @cLocaliz  and DB_NUMSERI  = @cNumSeri 
         and DB_ESTORNO  = ' '  and DB_DATA  > @cDataInicio  and DB_DATA  < @cDataFim  and DB_ATUEST  <> 'N'  and  (DB_TM  > '500' 
         and SUBSTRING ( DB_TM , 1 , 2 )NOT in ( 'DE' , 'PR'  )  and DB_TM  <> 'MAN' )  and D_E_L_E_T_  = ' ' 
        GROUP BY DB_TM 
      FOR READ ONLY 
       
      OPEN CUR_MAT029_D3
      FETCH CUR_MAT029_D3 
       INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @OUT_SALDO1  = @OUT_SALDO1  + @nDB_QUANT 
         SET @OUT_SALDO7  = @OUT_SALDO7  + @nDB_QTSEGUM 
         FETCH CUR_MAT029_D3 
          INTO @cDB_TM , @nDB_QUANT , @nDB_QTSEGUM 
      END 
      CLOSE CUR_MAT029_D3
      DEALLOCATE CUR_MAT029_D3
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT047_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT047_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT047_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT047_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CALIASAVAL Char( 03 ) , 
    @IN_CTES Char( 3) , 
    @IN_CESPECIE Char( 05 ) , 
    @IN_CTIPODOC Char( 02 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_DOC Char( 9) , 
    @IN_SERIE Char( 3) , 
    @IN_FORCLI Char( 14) , 
    @IN_LOJA Char( 4) , 
    @IN_USAFILTRF Char( 01 ) , 
    @OUT_RESULTADO Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @iRecno Integer
DECLARE @iRecnoSF1 Integer
DECLARE @iRecnoSF2 Integer
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SF1 Char( 2)
DECLARE @cFil_SF2 Char( 2)
DECLARE @cFil_SA1 Char( 2)
DECLARE @cFil_SA2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @cFilRet Char( 2)
DECLARE @cCGC Char( 14)
DECLARE @cCodFil Char( 2)
DECLARE @cFILIALCOR Char( 2)
DECLARE @cCTES Char( 3)
DECLARE @cDOC Char( 9)
DECLARE @cSERIE Char( 3)
DECLARE @cFORCLI Char( 14)
DECLARE @cLOJA Char( 4)
BEGIN
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cCTES  = @IN_CTES 
   SET @cDOC  = @IN_DOC 
   SET @cSERIE  = @IN_SERIE 
   SET @cFORCLI  = @IN_FORCLI 
   SET @cLOJA  = @IN_LOJA 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SF1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SF1 output 
   SET @cAux  = 'SF2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SF2 output 
   SET @cAux  = 'SA1' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SA1 output 
   SET @cAux  = 'SA2' 
   EXEC XFILIAL_19_01 @cAux , @cFILIALCOR , @cFil_SA2 output 
   SET @cFilRet  = ' ' 
   SET @iRecno  = null 
   SELECT @iRecno  = R_E_C_N_O_ 
     FROM SF4010 
     WHERE F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cCTES  and F4_TRANFIL  = '1'  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is NOT null ) 
   BEGIN 
      IF @IN_CPAISLOC  <> 'BRA'  and @IN_CESPECIE in ( 'RTE' , 'RTS'  )  and @IN_CTIPODOC in ( '54' , '64'  ) 
      BEGIN 
         IF @IN_CALIASAVAL  = 'SD2' 
         BEGIN 
            SET @cFilRet  = ' ' 
            SET @iRecnoSF2  = null 
            SELECT @iRecnoSF2  = SF2.R_E_C_N_O_ , @cFilRet  = SF2.F2_FILDEST 
              FROM SF2010 SF2
              WHERE F2_FILIAL  = @cFil_SF2  and F2_DOC  = @cDOC  and F2_SERIE  = @cSERIE  and F2_CLIENTE  = @cFORCLI  and F2_LOJA  = @cLOJA 
               and D_E_L_E_T_  = ' ' 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CALIASAVAL  = 'SD1' ) 
            BEGIN 
               SET @cFilRet  = ' ' 
               SET @iRecnoSF1  = null 
               SELECT @iRecnoSF1  = SF1.R_E_C_N_O_ , @cFilRet  = SF1.F1_FILORIG 
                 FROM SF1010 SF1
                 WHERE F1_FILIAL  = @cFil_SF1  and F1_DOC  = @cDOC  and F1_SERIE  = @cSERIE  and F1_FORNECE  = @cFORCLI  and F1_LOJA  = @cLOJA 
                  and D_E_L_E_T_  = ' ' 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_USAFILTRF  = '1' ) 
         BEGIN 
            IF @IN_CALIASAVAL  = 'SD1' 
            BEGIN 
               IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
               BEGIN 
                  SET @cCodFil  = ' ' 
                  SELECT @cCodFil  = SA1.A1_FILTRF 
                    FROM SA1010 SA1
                    WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
               ELSE 
               BEGIN 
                  SET @cCodFil  = ' ' 
                  SELECT @cCodFil  = SA2.A2_FILTRF 
                    FROM SA2010 SA2
                    WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CALIASAVAL  = 'SD2' ) 
               BEGIN 
                  IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
                  BEGIN 
                     SET @cCodFil  = ' ' 
                     SELECT @cCodFil  = SA2.A2_FILTRF 
                       FROM SA2010 SA2
                       WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
                  ELSE 
                  BEGIN 
                     SET @cCodFil  = ' ' 
                     SELECT @cCodFil  = SA1.A1_FILTRF 
                       FROM SA1010 SA1
                       WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
               END 
            END 
            IF  (@cCodFil  <> ' ' ) 
            BEGIN 
               SET @cFilRet  = ' ' 
               SELECT @cFilRet  = TRD.TRD_FILIAL 
                 FROM TRD01SP TRD
                 WHERE TRD_FILIAL  = @cCodFil  and D_E_L_E_T_  = ' ' 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CALIASAVAL  = 'SD1' 
            BEGIN 
               IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
               BEGIN 
                  SET @cCGC  = ' ' 
                  SELECT @cCGC  = SA1.A1_CGC 
                    FROM SA1010 SA1
                    WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
               ELSE 
               BEGIN 
                  SET @cCGC  = ' ' 
                  SELECT @cCGC  = SA2.A2_CGC 
                    FROM SA2010 SA2
                    WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CALIASAVAL  = 'SD2' ) 
               BEGIN 
                  IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
                  BEGIN 
                     SET @cCGC  = ' ' 
                     SELECT @cCGC  = SA2.A2_CGC 
                       FROM SA2010 SA2
                       WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
                  ELSE 
                  BEGIN 
                     SET @cCGC  = ' ' 
                     SELECT @cCGC  = SA1.A1_CGC 
                       FROM SA1010 SA1
                       WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
               END 
            END 
            IF  (@cCGC  <> ' ' ) 
            BEGIN 
               SET @cFilRet  = ' ' 
               SELECT @cFilRet  = TRD.TRD_FILIAL 
                 FROM TRD01SP TRD
                 WHERE TRD_CGC  = @cCGC  and D_E_L_E_T_  = ' ' 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = COALESCE ( @cFilRet , ' ' )
END
GO

GO
--SqlScripter----[dbo].[MAT047_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT047_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT047_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT047_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CALIASAVAL Char( 03 ) , 
    @IN_CTES Char( 3) , 
    @IN_CESPECIE Char( 05 ) , 
    @IN_CTIPODOC Char( 02 ) , 
    @IN_CPAISLOC Char( 03 ) , 
    @IN_DOC Char( 8) , 
    @IN_SERIE Char( 3) , 
    @IN_FORCLI Char( 14) , 
    @IN_LOJA Char( 4) , 
    @IN_USAFILTRF Char( 01 ) , 
    @OUT_RESULTADO Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @iRecno Integer
DECLARE @iRecnoSF1 Integer
DECLARE @iRecnoSF2 Integer
DECLARE @cFil_SF4 Char( 2)
DECLARE @cFil_SF1 Char( 2)
DECLARE @cFil_SF2 Char( 2)
DECLARE @cFil_SA1 Char( 2)
DECLARE @cFil_SA2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @cFilRet Char( 2)
DECLARE @cCGC Char( 14)
DECLARE @cCodFil Char( 2)
DECLARE @cFILIALCOR Char( 2)
DECLARE @cCTES Char( 3)
DECLARE @cDOC Char( 8)
DECLARE @cSERIE Char( 3)
DECLARE @cFORCLI Char( 14)
DECLARE @cLOJA Char( 4)
BEGIN
   SET @cFILIALCOR  = @IN_FILIALCOR 
   SET @cCTES  = @IN_CTES 
   SET @cDOC  = @IN_DOC 
   SET @cSERIE  = @IN_SERIE 
   SET @cFORCLI  = @IN_FORCLI 
   SET @cLOJA  = @IN_LOJA 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SF4 output 
   SET @cAux  = 'SF1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SF1 output 
   SET @cAux  = 'SF2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SF2 output 
   SET @cAux  = 'SA1' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SA1 output 
   SET @cAux  = 'SA2' 
   EXEC XFILIAL_19_02 @cAux , @cFILIALCOR , @cFil_SA2 output 
   SET @cFilRet  = ' ' 
   SET @iRecno  = null 
   SELECT @iRecno  = R_E_C_N_O_ 
     FROM SF4030 
     WHERE F4_FILIAL  = @cFil_SF4  and F4_CODIGO  = @cCTES  and F4_TRANFIL  = '1'  and D_E_L_E_T_  = ' ' 
   IF  (@iRecno is NOT null ) 
   BEGIN 
      IF @IN_CPAISLOC  <> 'BRA'  and @IN_CESPECIE in ( 'RTE' , 'RTS'  )  and @IN_CTIPODOC in ( '54' , '64'  ) 
      BEGIN 
         IF @IN_CALIASAVAL  = 'SD2' 
         BEGIN 
            SET @cFilRet  = ' ' 
            SET @iRecnoSF2  = null 
            SELECT @iRecnoSF2  = SF2.R_E_C_N_O_ , @cFilRet  = SF2.F2_FILDEST 
              FROM SF2030 SF2
              WHERE F2_FILIAL  = @cFil_SF2  and F2_DOC  = @cDOC  and F2_SERIE  = @cSERIE  and F2_CLIENTE  = @cFORCLI  and F2_LOJA  = @cLOJA 
               and D_E_L_E_T_  = ' ' 
         END 
         ELSE 
         BEGIN 
            IF  (@IN_CALIASAVAL  = 'SD1' ) 
            BEGIN 
               SET @cFilRet  = ' ' 
               SET @iRecnoSF1  = null 
               SELECT @iRecnoSF1  = SF1.R_E_C_N_O_ , @cFilRet  = SF1.F1_FILORIG 
                 FROM SF1030 SF1
                 WHERE F1_FILIAL  = @cFil_SF1  and F1_DOC  = @cDOC  and F1_SERIE  = @cSERIE  and F1_FORNECE  = @cFORCLI  and F1_LOJA  = @cLOJA 
                  and D_E_L_E_T_  = ' ' 
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF  (@IN_USAFILTRF  = '1' ) 
         BEGIN 
            IF @IN_CALIASAVAL  = 'SD1' 
            BEGIN 
               IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
               BEGIN 
                  SET @cCodFil  = ' ' 
                  SELECT @cCodFil  = SA1.A1_FILTRF 
                    FROM SA1030 SA1
                    WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
               ELSE 
               BEGIN 
                  SET @cCodFil  = ' ' 
                  SELECT @cCodFil  = SA2.A2_FILTRF 
                    FROM SA2030 SA2
                    WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CALIASAVAL  = 'SD2' ) 
               BEGIN 
                  IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
                  BEGIN 
                     SET @cCodFil  = ' ' 
                     SELECT @cCodFil  = SA2.A2_FILTRF 
                       FROM SA2030 SA2
                       WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
                  ELSE 
                  BEGIN 
                     SET @cCodFil  = ' ' 
                     SELECT @cCodFil  = SA1.A1_FILTRF 
                       FROM SA1030 SA1
                       WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
               END 
            END 
            IF  (@cCodFil  <> ' ' ) 
            BEGIN 
               SET @cFilRet  = ' ' 
               SELECT @cFilRet  = TRD.TRD_FILIAL 
                 FROM TRD02SP TRD
                 WHERE TRD_FILIAL  = @cCodFil  and D_E_L_E_T_  = ' ' 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CALIASAVAL  = 'SD1' 
            BEGIN 
               IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
               BEGIN 
                  SET @cCGC  = ' ' 
                  SELECT @cCGC  = SA1.A1_CGC 
                    FROM SA1030 SA1
                    WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
               ELSE 
               BEGIN 
                  SET @cCGC  = ' ' 
                  SELECT @cCGC  = SA2.A2_CGC 
                    FROM SA2030 SA2
                    WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
               END 
            END 
            ELSE 
            BEGIN 
               IF  (@IN_CALIASAVAL  = 'SD2' ) 
               BEGIN 
                  IF @IN_CTIPODOC in ( 'D' , 'B'  ) 
                  BEGIN 
                     SET @cCGC  = ' ' 
                     SELECT @cCGC  = SA2.A2_CGC 
                       FROM SA2030 SA2
                       WHERE A2_FILIAL  = @cFil_SA2  and A2_COD  = @cFORCLI  and A2_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
                  ELSE 
                  BEGIN 
                     SET @cCGC  = ' ' 
                     SELECT @cCGC  = SA1.A1_CGC 
                       FROM SA1030 SA1
                       WHERE A1_FILIAL  = @cFil_SA1  and A1_COD  = @cFORCLI  and A1_LOJA  = @cLOJA  and D_E_L_E_T_  = ' ' 
                       
                  END 
               END 
            END 
            IF  (@cCGC  <> ' ' ) 
            BEGIN 
               SET @cFilRet  = ' ' 
               SELECT @cFilRet  = TRD.TRD_FILIAL 
                 FROM TRD02SP TRD
                 WHERE TRD_CGC  = @cCGC  and D_E_L_E_T_  = ' ' 
            END 
         END 
      END 
   END 
   SET @OUT_RESULTADO  = COALESCE ( @cFilRet , ' ' )
END
GO

GO
--SqlScripter----[dbo].[MAT049_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT049_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT049_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT049_19_01]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QT2UM Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SCC VarChar( 2)
DECLARE @cFil_SD8 VarChar( 2)
DECLARE @cDtVai VarChar( 08 )
DECLARE @cDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
DECLARE @cD8_PRODUTO VarChar( 15)
DECLARE @cD8_LOCAL VarChar( 2)
DECLARE @cD8_SEQ VarChar( 6)
DECLARE @cD8_TM VarChar( 3)
DECLARE @nCC_QFIM Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nCC_QFIM2UM Decimal( 14 , 2 )
DECLARE @nTCC_QFIM Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nTCC_QFIM2UM Decimal( 14 , 2 )
DECLARE @nD8_QUANT Decimal( 14 , 2 )
DECLARE @nD8_CUSTO1 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO2 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO3 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO4 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO5 Decimal( 14 , 2 )
DECLARE @nD8_QT2UM Decimal( 14 , 2 )
DECLARE @nTQTDE Decimal( 14 , 2 )
DECLARE @nTCUSTO1 Decimal( 14 , 2 )
DECLARE @nTCUSTO2 Decimal( 14 , 2 )
DECLARE @nTCUSTO3 Decimal( 14 , 2 )
DECLARE @nTCUSTO4 Decimal( 14 , 2 )
DECLARE @nTCUSTO5 Decimal( 14 , 2 )
DECLARE @nTQT2UM Decimal( 14 , 2 )
BEGIN
   SET @cDtVai  = '19800101' 
   SET @cDtAux  = '19800101' 
   SET @nCC_QFIM  = 0 
   SET @nCC_VFIMFF1  = 0 
   SET @nCC_VFIMFF2  = 0 
   SET @nCC_VFIMFF3  = 0 
   SET @nCC_VFIMFF4  = 0 
   SET @nCC_VFIMFF5  = 0 
   SET @nCC_QFIM2UM  = 0 
   SET @nTCC_QFIM  = 0 
   SET @nTCC_VFIMFF1  = 0 
   SET @nTCC_VFIMFF2  = 0 
   SET @nTCC_VFIMFF3  = 0 
   SET @nTCC_VFIMFF4  = 0 
   SET @nTCC_VFIMFF5  = 0 
   SET @nTCC_QFIM2UM  = 0 
   SET @nD8_QUANT  = 0 
   SET @nD8_CUSTO1  = 0 
   SET @nD8_CUSTO2  = 0 
   SET @nD8_CUSTO3  = 0 
   SET @nD8_CUSTO4  = 0 
   SET @nD8_CUSTO5  = 0 
   SET @nD8_QT2UM  = 0 
   SET @nTQTDE  = 0 
   SET @nTCUSTO1  = 0 
   SET @nTCUSTO2  = 0 
   SET @nTCUSTO3  = 0 
   SET @nTCUSTO4  = 0 
   SET @nTCUSTO5  = 0 
   SET @nTQT2UM  = 0 
   SET @cAux  = 'SCC' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SCC output 
   SET @cAux  = 'SD8' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD8 output 
    
   -- Cursor declaration CUR_SCC
   DECLARE CUR_SCC INSENSITIVE  CURSOR FOR 
   SELECT CC_QFIM , CC_VFIMFF1 , CC_VFIMFF2 , CC_VFIMFF3 , CC_VFIMFF4 , CC_VFIMFF5 , CC_QFIM2UM , CONVERT( Char( 08 ) ,DATEADD ( DAY , 
          1 , CC_DATA ),112 )
     FROM SCC010 
     WHERE CC_FILIAL  = @cFil_SCC  and CC_PRODUTO  = @IN_CCOD  and CC_LOCAL  = @IN_CLOCAL  and CC_DATA  = (
   SELECT MAX ( SUBSTRING ( CC_DATA , 1 , 8 ))
     FROM SCC010 
     WHERE CC_FILIAL  = @cFil_SCC  and CC_PRODUTO  = @IN_CCOD  and CC_LOCAL  = @IN_CLOCAL  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
     
   FOR READ ONLY 
    
   OPEN CUR_SCC
   FETCH CUR_SCC 
    INTO @nCC_QFIM , @nCC_VFIMFF1 , @nCC_VFIMFF2 , @nCC_VFIMFF3 , @nCC_VFIMFF4 , @nCC_VFIMFF5 , @nCC_QFIM2UM , @cDtVai 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      IF @nCC_QFIM is null 
      BEGIN 
         SET @nCC_QFIM  = 0 
      END 
      IF @nCC_VFIMFF1 is null 
      BEGIN 
         SET @nCC_VFIMFF1  = 0 
      END 
      IF @nCC_VFIMFF2 is null 
      BEGIN 
         SET @nCC_VFIMFF2  = 0 
      END 
      IF @nCC_VFIMFF3 is null 
      BEGIN 
         SET @nCC_VFIMFF3  = 0 
      END 
      IF @nCC_VFIMFF4 is null 
      BEGIN 
         SET @nCC_VFIMFF4  = 0 
      END 
      IF @nCC_VFIMFF5 is null 
      BEGIN 
         SET @nCC_VFIMFF5  = 0 
      END 
      IF @nCC_QFIM2UM is null 
      BEGIN 
         SET @nCC_QFIM2UM  = 0 
      END 
      SET @nTCC_QFIM  = @nTCC_QFIM  + @nCC_QFIM 
      SET @nTCC_VFIMFF1  = @nTCC_VFIMFF1  + @nCC_VFIMFF1 
      SET @nTCC_VFIMFF2  = @nTCC_VFIMFF2  + @nCC_VFIMFF2 
      SET @nTCC_VFIMFF3  = @nTCC_VFIMFF3  + @nCC_VFIMFF3 
      SET @nTCC_VFIMFF4  = @nTCC_VFIMFF4  + @nCC_VFIMFF4 
      SET @nTCC_VFIMFF5  = @nTCC_VFIMFF5  + @nCC_VFIMFF5 
      SET @nTCC_QFIM2UM  = @nTCC_QFIM2UM  + @nCC_QFIM2UM 
      FETCH CUR_SCC 
       INTO @nCC_QFIM , @nCC_VFIMFF1 , @nCC_VFIMFF2 , @nCC_VFIMFF3 , @nCC_VFIMFF4 , @nCC_VFIMFF5 , @nCC_QFIM2UM , @cDtVai 
   END 
   CLOSE CUR_SCC
   DEALLOCATE CUR_SCC
   IF @nTCC_QFIM is null 
   BEGIN 
      SET @nTCC_QFIM  = 0 
   END 
   IF @nTCC_VFIMFF1 is null 
   BEGIN 
      SET @nTCC_VFIMFF1  = 0 
   END 
   IF @nTCC_VFIMFF2 is null 
   BEGIN 
      SET @nTCC_VFIMFF2  = 0 
   END 
   IF @nTCC_VFIMFF3 is null 
   BEGIN 
      SET @nTCC_VFIMFF3  = 0 
   END 
   IF @nTCC_VFIMFF4 is null 
   BEGIN 
      SET @nTCC_VFIMFF4  = 0 
   END 
   IF @nTCC_VFIMFF5 is null 
   BEGIN 
      SET @nTCC_VFIMFF5  = 0 
   END 
   IF @nTCC_QFIM2UM is null 
   BEGIN 
      SET @nTCC_QFIM2UM  = 0 
   END 
   IF @cDtVai is null 
   BEGIN 
      SET @cDtVai  = '19800101' 
   END 
   IF @cDtVai  = ' ' 
   BEGIN 
      SET @cDtVai  = '19800101' 
   END 
    
   -- Cursor declaration CUR_SD8
   DECLARE CUR_SD8 INSENSITIVE  CURSOR FOR 
   SELECT D8_PRODUTO , D8_LOCAL , D8_SEQ , D8_TM , D8_QUANT , D8_QT2UM , D8_CUSTO1 , D8_CUSTO2 , D8_CUSTO3 , D8_CUSTO4 , 
          D8_CUSTO5 
     FROM SD8010 SD8
     WHERE D8_FILIAL  = @cFil_SD8  and SD8.D8_PRODUTO  = @IN_CCOD  and SD8.D8_LOCAL  = @IN_CLOCAL  and D8_TIPONF  <> 'E' 
      and D8_DATA  >= @cDtVai  and D8_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_SD8
   FETCH CUR_SD8 
    INTO @cD8_PRODUTO , @cD8_LOCAL , @cD8_SEQ , @cD8_TM , @nD8_QUANT , @nD8_QT2UM , @nD8_CUSTO1 , @nD8_CUSTO2 , @nD8_CUSTO3 , 
          @nD8_CUSTO4 , @nD8_CUSTO5 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      IF @nD8_QUANT is null 
      BEGIN 
         SET @nD8_QUANT  = 0 
      END 
      IF @nD8_CUSTO1 is null 
      BEGIN 
         SET @nD8_CUSTO1  = 0 
      END 
      IF @nD8_CUSTO2 is null 
      BEGIN 
         SET @nD8_CUSTO2  = 0 
      END 
      IF @nD8_CUSTO3 is null 
      BEGIN 
         SET @nD8_CUSTO3  = 0 
      END 
      IF @nD8_CUSTO4 is null 
      BEGIN 
         SET @nD8_CUSTO4  = 0 
      END 
      IF @nD8_CUSTO5 is null 
      BEGIN 
         SET @nD8_CUSTO5  = 0 
      END 
      IF @nD8_QT2UM is null 
      BEGIN 
         SET @nD8_QT2UM  = 0 
      END 
      IF @cD8_TM is null 
      BEGIN 
         SET @cD8_TM  = '' 
      END 
      IF @cD8_TM  > '500' 
      BEGIN 
         SET @nTQTDE  = @nTQTDE  - @nD8_QUANT 
         SET @nTCUSTO1  = @nTCUSTO1  - @nD8_CUSTO1 
         SET @nTCUSTO2  = @nTCUSTO2  - @nD8_CUSTO2 
         SET @nTCUSTO3  = @nTCUSTO3  - @nD8_CUSTO3 
         SET @nTCUSTO4  = @nTCUSTO4  - @nD8_CUSTO4 
         SET @nTCUSTO5  = @nTCUSTO5  - @nD8_CUSTO5 
         SET @nTQT2UM  = @nTQT2UM  - @nD8_QT2UM 
      END 
      ELSE 
      BEGIN 
         SET @nTQTDE  = @nTQTDE  + @nD8_QUANT 
         SET @nTCUSTO1  = @nTCUSTO1  + @nD8_CUSTO1 
         SET @nTCUSTO2  = @nTCUSTO2  + @nD8_CUSTO2 
         SET @nTCUSTO3  = @nTCUSTO3  + @nD8_CUSTO3 
         SET @nTCUSTO4  = @nTCUSTO4  + @nD8_CUSTO4 
         SET @nTCUSTO5  = @nTCUSTO5  + @nD8_CUSTO5 
         SET @nTQT2UM  = @nTQT2UM  + @nD8_QT2UM 
      END 
      FETCH CUR_SD8 
       INTO @cD8_PRODUTO , @cD8_LOCAL , @cD8_SEQ , @cD8_TM , @nD8_QUANT , @nD8_QT2UM , @nD8_CUSTO1 , @nD8_CUSTO2 , @nD8_CUSTO3 , 
             @nD8_CUSTO4 , @nD8_CUSTO5 
   END 
   CLOSE CUR_SD8
   DEALLOCATE CUR_SD8
   IF @nTQTDE is null 
   BEGIN 
      SET @nTQTDE  = 0 
   END 
   IF @nTCUSTO1 is null 
   BEGIN 
      SET @nTCUSTO1  = 0 
   END 
   IF @nTCUSTO2 is null 
   BEGIN 
      SET @nTCUSTO2  = 0 
   END 
   IF @nTCUSTO3 is null 
   BEGIN 
      SET @nTCUSTO3  = 0 
   END 
   IF @nTCUSTO4 is null 
   BEGIN 
      SET @nTCUSTO4  = 0 
   END 
   IF @nTCUSTO5 is null 
   BEGIN 
      SET @nTCUSTO5  = 0 
   END 
   IF @nTQT2UM is null 
   BEGIN 
      SET @nTQT2UM  = 0 
   END 
   SET @OUT_QSALDOATU  =  (@nTCC_QFIM  + @nTQTDE ) 
   SET @OUT_CUSTOATU  =  (@nTCC_VFIMFF1  + @nTCUSTO1 ) 
   SET @OUT_CUSTOATU2  =  (@nTCC_VFIMFF2  + @nTCUSTO2 ) 
   SET @OUT_CUSTOATU3  =  (@nTCC_VFIMFF3  + @nTCUSTO3 ) 
   SET @OUT_CUSTOATU4  =  (@nTCC_VFIMFF4  + @nTCUSTO4 ) 
   SET @OUT_CUSTOATU5  =  (@nTCC_VFIMFF5  + @nTCUSTO5 ) 
   SET @OUT_QT2UM  =  (@nTCC_QFIM2UM  + @nTQT2UM ) 
END
GO

GO
--SqlScripter----[dbo].[MAT049_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT049_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT049_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT049_19_02]
(
    @IN_CCOD Char( 15) , 
    @IN_CLOCAL Char( 2) , 
    @IN_DDATA Char( 08 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_QSALDOATU Float  output , 
    @OUT_CUSTOATU Float  output , 
    @OUT_CUSTOATU2 Float  output , 
    @OUT_CUSTOATU3 Float  output , 
    @OUT_CUSTOATU4 Float  output , 
    @OUT_CUSTOATU5 Float  output , 
    @OUT_QT2UM Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SCC VarChar( 2)
DECLARE @cFil_SD8 VarChar( 2)
DECLARE @cDtVai VarChar( 08 )
DECLARE @cDtAux VarChar( 08 )
DECLARE @cAux VarChar( 03 )
DECLARE @cD8_PRODUTO VarChar( 15)
DECLARE @cD8_LOCAL VarChar( 2)
DECLARE @cD8_SEQ VarChar( 6)
DECLARE @cD8_TM VarChar( 3)
DECLARE @nCC_QFIM Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nCC_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nCC_QFIM2UM Decimal( 14 , 2 )
DECLARE @nTCC_QFIM Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF1 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF2 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF3 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF4 Decimal( 14 , 2 )
DECLARE @nTCC_VFIMFF5 Decimal( 14 , 2 )
DECLARE @nTCC_QFIM2UM Decimal( 14 , 2 )
DECLARE @nD8_QUANT Decimal( 14 , 2 )
DECLARE @nD8_CUSTO1 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO2 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO3 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO4 Decimal( 14 , 2 )
DECLARE @nD8_CUSTO5 Decimal( 14 , 2 )
DECLARE @nD8_QT2UM Decimal( 14 , 2 )
DECLARE @nTQTDE Decimal( 14 , 2 )
DECLARE @nTCUSTO1 Decimal( 14 , 2 )
DECLARE @nTCUSTO2 Decimal( 14 , 2 )
DECLARE @nTCUSTO3 Decimal( 14 , 2 )
DECLARE @nTCUSTO4 Decimal( 14 , 2 )
DECLARE @nTCUSTO5 Decimal( 14 , 2 )
DECLARE @nTQT2UM Decimal( 14 , 2 )
BEGIN
   SET @cDtVai  = '19800101' 
   SET @cDtAux  = '19800101' 
   SET @nCC_QFIM  = 0 
   SET @nCC_VFIMFF1  = 0 
   SET @nCC_VFIMFF2  = 0 
   SET @nCC_VFIMFF3  = 0 
   SET @nCC_VFIMFF4  = 0 
   SET @nCC_VFIMFF5  = 0 
   SET @nCC_QFIM2UM  = 0 
   SET @nTCC_QFIM  = 0 
   SET @nTCC_VFIMFF1  = 0 
   SET @nTCC_VFIMFF2  = 0 
   SET @nTCC_VFIMFF3  = 0 
   SET @nTCC_VFIMFF4  = 0 
   SET @nTCC_VFIMFF5  = 0 
   SET @nTCC_QFIM2UM  = 0 
   SET @nD8_QUANT  = 0 
   SET @nD8_CUSTO1  = 0 
   SET @nD8_CUSTO2  = 0 
   SET @nD8_CUSTO3  = 0 
   SET @nD8_CUSTO4  = 0 
   SET @nD8_CUSTO5  = 0 
   SET @nD8_QT2UM  = 0 
   SET @nTQTDE  = 0 
   SET @nTCUSTO1  = 0 
   SET @nTCUSTO2  = 0 
   SET @nTCUSTO3  = 0 
   SET @nTCUSTO4  = 0 
   SET @nTCUSTO5  = 0 
   SET @nTQT2UM  = 0 
   SET @cAux  = 'SCC' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SCC output 
   SET @cAux  = 'SD8' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD8 output 
    
   -- Cursor declaration CUR_SCC
   DECLARE CUR_SCC INSENSITIVE  CURSOR FOR 
   SELECT CC_QFIM , CC_VFIMFF1 , CC_VFIMFF2 , CC_VFIMFF3 , CC_VFIMFF4 , CC_VFIMFF5 , CC_QFIM2UM , CONVERT( Char( 08 ) ,DATEADD ( DAY , 
          1 , CC_DATA ),112 )
     FROM SCC030 
     WHERE CC_FILIAL  = @cFil_SCC  and CC_PRODUTO  = @IN_CCOD  and CC_LOCAL  = @IN_CLOCAL  and CC_DATA  = (
   SELECT MAX ( SUBSTRING ( CC_DATA , 1 , 8 ))
     FROM SCC030 
     WHERE CC_FILIAL  = @cFil_SCC  and CC_PRODUTO  = @IN_CCOD  and CC_LOCAL  = @IN_CLOCAL  and D_E_L_E_T_  = ' ' ) and D_E_L_E_T_  = ' ' 
     
   FOR READ ONLY 
    
   OPEN CUR_SCC
   FETCH CUR_SCC 
    INTO @nCC_QFIM , @nCC_VFIMFF1 , @nCC_VFIMFF2 , @nCC_VFIMFF3 , @nCC_VFIMFF4 , @nCC_VFIMFF5 , @nCC_QFIM2UM , @cDtVai 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      IF @nCC_QFIM is null 
      BEGIN 
         SET @nCC_QFIM  = 0 
      END 
      IF @nCC_VFIMFF1 is null 
      BEGIN 
         SET @nCC_VFIMFF1  = 0 
      END 
      IF @nCC_VFIMFF2 is null 
      BEGIN 
         SET @nCC_VFIMFF2  = 0 
      END 
      IF @nCC_VFIMFF3 is null 
      BEGIN 
         SET @nCC_VFIMFF3  = 0 
      END 
      IF @nCC_VFIMFF4 is null 
      BEGIN 
         SET @nCC_VFIMFF4  = 0 
      END 
      IF @nCC_VFIMFF5 is null 
      BEGIN 
         SET @nCC_VFIMFF5  = 0 
      END 
      IF @nCC_QFIM2UM is null 
      BEGIN 
         SET @nCC_QFIM2UM  = 0 
      END 
      SET @nTCC_QFIM  = @nTCC_QFIM  + @nCC_QFIM 
      SET @nTCC_VFIMFF1  = @nTCC_VFIMFF1  + @nCC_VFIMFF1 
      SET @nTCC_VFIMFF2  = @nTCC_VFIMFF2  + @nCC_VFIMFF2 
      SET @nTCC_VFIMFF3  = @nTCC_VFIMFF3  + @nCC_VFIMFF3 
      SET @nTCC_VFIMFF4  = @nTCC_VFIMFF4  + @nCC_VFIMFF4 
      SET @nTCC_VFIMFF5  = @nTCC_VFIMFF5  + @nCC_VFIMFF5 
      SET @nTCC_QFIM2UM  = @nTCC_QFIM2UM  + @nCC_QFIM2UM 
      FETCH CUR_SCC 
       INTO @nCC_QFIM , @nCC_VFIMFF1 , @nCC_VFIMFF2 , @nCC_VFIMFF3 , @nCC_VFIMFF4 , @nCC_VFIMFF5 , @nCC_QFIM2UM , @cDtVai 
   END 
   CLOSE CUR_SCC
   DEALLOCATE CUR_SCC
   IF @nTCC_QFIM is null 
   BEGIN 
      SET @nTCC_QFIM  = 0 
   END 
   IF @nTCC_VFIMFF1 is null 
   BEGIN 
      SET @nTCC_VFIMFF1  = 0 
   END 
   IF @nTCC_VFIMFF2 is null 
   BEGIN 
      SET @nTCC_VFIMFF2  = 0 
   END 
   IF @nTCC_VFIMFF3 is null 
   BEGIN 
      SET @nTCC_VFIMFF3  = 0 
   END 
   IF @nTCC_VFIMFF4 is null 
   BEGIN 
      SET @nTCC_VFIMFF4  = 0 
   END 
   IF @nTCC_VFIMFF5 is null 
   BEGIN 
      SET @nTCC_VFIMFF5  = 0 
   END 
   IF @nTCC_QFIM2UM is null 
   BEGIN 
      SET @nTCC_QFIM2UM  = 0 
   END 
   IF @cDtVai is null 
   BEGIN 
      SET @cDtVai  = '19800101' 
   END 
   IF @cDtVai  = ' ' 
   BEGIN 
      SET @cDtVai  = '19800101' 
   END 
    
   -- Cursor declaration CUR_SD8
   DECLARE CUR_SD8 INSENSITIVE  CURSOR FOR 
   SELECT D8_PRODUTO , D8_LOCAL , D8_SEQ , D8_TM , D8_QUANT , D8_QT2UM , D8_CUSTO1 , D8_CUSTO2 , D8_CUSTO3 , D8_CUSTO4 , 
          D8_CUSTO5 
     FROM SD8030 SD8
     WHERE D8_FILIAL  = @cFil_SD8  and SD8.D8_PRODUTO  = @IN_CCOD  and SD8.D8_LOCAL  = @IN_CLOCAL  and D8_TIPONF  <> 'E' 
      and D8_DATA  >= @cDtVai  and D8_DATA  < @IN_DDATA  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN CUR_SD8
   FETCH CUR_SD8 
    INTO @cD8_PRODUTO , @cD8_LOCAL , @cD8_SEQ , @cD8_TM , @nD8_QUANT , @nD8_QT2UM , @nD8_CUSTO1 , @nD8_CUSTO2 , @nD8_CUSTO3 , 
          @nD8_CUSTO4 , @nD8_CUSTO5 
   WHILE ( (@@fetch_status  = 0 ) )
   BEGIN
      IF @nD8_QUANT is null 
      BEGIN 
         SET @nD8_QUANT  = 0 
      END 
      IF @nD8_CUSTO1 is null 
      BEGIN 
         SET @nD8_CUSTO1  = 0 
      END 
      IF @nD8_CUSTO2 is null 
      BEGIN 
         SET @nD8_CUSTO2  = 0 
      END 
      IF @nD8_CUSTO3 is null 
      BEGIN 
         SET @nD8_CUSTO3  = 0 
      END 
      IF @nD8_CUSTO4 is null 
      BEGIN 
         SET @nD8_CUSTO4  = 0 
      END 
      IF @nD8_CUSTO5 is null 
      BEGIN 
         SET @nD8_CUSTO5  = 0 
      END 
      IF @nD8_QT2UM is null 
      BEGIN 
         SET @nD8_QT2UM  = 0 
      END 
      IF @cD8_TM is null 
      BEGIN 
         SET @cD8_TM  = '' 
      END 
      IF @cD8_TM  > '500' 
      BEGIN 
         SET @nTQTDE  = @nTQTDE  - @nD8_QUANT 
         SET @nTCUSTO1  = @nTCUSTO1  - @nD8_CUSTO1 
         SET @nTCUSTO2  = @nTCUSTO2  - @nD8_CUSTO2 
         SET @nTCUSTO3  = @nTCUSTO3  - @nD8_CUSTO3 
         SET @nTCUSTO4  = @nTCUSTO4  - @nD8_CUSTO4 
         SET @nTCUSTO5  = @nTCUSTO5  - @nD8_CUSTO5 
         SET @nTQT2UM  = @nTQT2UM  - @nD8_QT2UM 
      END 
      ELSE 
      BEGIN 
         SET @nTQTDE  = @nTQTDE  + @nD8_QUANT 
         SET @nTCUSTO1  = @nTCUSTO1  + @nD8_CUSTO1 
         SET @nTCUSTO2  = @nTCUSTO2  + @nD8_CUSTO2 
         SET @nTCUSTO3  = @nTCUSTO3  + @nD8_CUSTO3 
         SET @nTCUSTO4  = @nTCUSTO4  + @nD8_CUSTO4 
         SET @nTCUSTO5  = @nTCUSTO5  + @nD8_CUSTO5 
         SET @nTQT2UM  = @nTQT2UM  + @nD8_QT2UM 
      END 
      FETCH CUR_SD8 
       INTO @cD8_PRODUTO , @cD8_LOCAL , @cD8_SEQ , @cD8_TM , @nD8_QUANT , @nD8_QT2UM , @nD8_CUSTO1 , @nD8_CUSTO2 , @nD8_CUSTO3 , 
             @nD8_CUSTO4 , @nD8_CUSTO5 
   END 
   CLOSE CUR_SD8
   DEALLOCATE CUR_SD8
   IF @nTQTDE is null 
   BEGIN 
      SET @nTQTDE  = 0 
   END 
   IF @nTCUSTO1 is null 
   BEGIN 
      SET @nTCUSTO1  = 0 
   END 
   IF @nTCUSTO2 is null 
   BEGIN 
      SET @nTCUSTO2  = 0 
   END 
   IF @nTCUSTO3 is null 
   BEGIN 
      SET @nTCUSTO3  = 0 
   END 
   IF @nTCUSTO4 is null 
   BEGIN 
      SET @nTCUSTO4  = 0 
   END 
   IF @nTCUSTO5 is null 
   BEGIN 
      SET @nTCUSTO5  = 0 
   END 
   IF @nTQT2UM is null 
   BEGIN 
      SET @nTQT2UM  = 0 
   END 
   SET @OUT_QSALDOATU  =  (@nTCC_QFIM  + @nTQTDE ) 
   SET @OUT_CUSTOATU  =  (@nTCC_VFIMFF1  + @nTCUSTO1 ) 
   SET @OUT_CUSTOATU2  =  (@nTCC_VFIMFF2  + @nTCUSTO2 ) 
   SET @OUT_CUSTOATU3  =  (@nTCC_VFIMFF3  + @nTCUSTO3 ) 
   SET @OUT_CUSTOATU4  =  (@nTCC_VFIMFF4  + @nTCUSTO4 ) 
   SET @OUT_CUSTOATU5  =  (@nTCC_VFIMFF5  + @nTCUSTO5 ) 
   SET @OUT_QT2UM  =  (@nTCC_QFIM2UM  + @nTQT2UM ) 
END
GO

GO
--SqlScripter----[dbo].[MAT050_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT050_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT050_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT050_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @nOUT_VLR1 Float
DECLARE @nOUT_VLR2 Float
DECLARE @nOUT_VLR3 Float
DECLARE @nOUT_VLR4 Float
DECLARE @nOUT_VLR5 Float
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @nOUT_VLR1  = 0 
   SET @nOUT_VLR2  = 0 
   SET @nOUT_VLR3  = 0 
   SET @nOUT_VLR4  = 0 
   SET @nOUT_VLR5  = 0 
   EXEC MAT051_17_01 @IN_FILIALCOR , @IN_CODIGO , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nOUT_VLR1 output , @nOUT_VLR2 output , 
          @nOUT_VLR3 output , @nOUT_VLR4 output , @nOUT_VLR5 output 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT050_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT050_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT050_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT050_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @nOUT_VLR1 Float
DECLARE @nOUT_VLR2 Float
DECLARE @nOUT_VLR3 Float
DECLARE @nOUT_VLR4 Float
DECLARE @nOUT_VLR5 Float
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @nOUT_VLR1  = 0 
   SET @nOUT_VLR2  = 0 
   SET @nOUT_VLR3  = 0 
   SET @nOUT_VLR4  = 0 
   SET @nOUT_VLR5  = 0 
   EXEC MAT051_17_02 @IN_FILIALCOR , @IN_CODIGO , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nOUT_VLR1 output , @nOUT_VLR2 output , 
          @nOUT_VLR3 output , @nOUT_VLR4 output , @nOUT_VLR5 output 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT050_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT050_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT050_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT050_18_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @nOUT_VLR1 Float
DECLARE @nOUT_VLR2 Float
DECLARE @nOUT_VLR3 Float
DECLARE @nOUT_VLR4 Float
DECLARE @nOUT_VLR5 Float
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @nOUT_VLR1  = 0 
   SET @nOUT_VLR2  = 0 
   SET @nOUT_VLR3  = 0 
   SET @nOUT_VLR4  = 0 
   SET @nOUT_VLR5  = 0 
   EXEC MAT051_18_01 @IN_FILIALCOR , @IN_CODIGO , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nOUT_VLR1 output , @nOUT_VLR2 output , 
          @nOUT_VLR3 output , @nOUT_VLR4 output , @nOUT_VLR5 output 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT050_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT050_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT050_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT050_18_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @nOUT_VLR1 Float
DECLARE @nOUT_VLR2 Float
DECLARE @nOUT_VLR3 Float
DECLARE @nOUT_VLR4 Float
DECLARE @nOUT_VLR5 Float
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @nOUT_VLR1  = 0 
   SET @nOUT_VLR2  = 0 
   SET @nOUT_VLR3  = 0 
   SET @nOUT_VLR4  = 0 
   SET @nOUT_VLR5  = 0 
   EXEC MAT051_18_02 @IN_FILIALCOR , @IN_CODIGO , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nOUT_VLR1 output , @nOUT_VLR2 output , 
          @nOUT_VLR3 output , @nOUT_VLR4 output , @nOUT_VLR5 output 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   ELSE 
   BEGIN 
      IF @nOUT_VLR1  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR2  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR3  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR4  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
      SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
      IF @iPos  > 0  and @nOUT_VLR5  > 0 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
          WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT051_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT051_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT051_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT051_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_VLR1 Float  output , 
    @OUT_VLR2 Float  output , 
    @OUT_VLR3 Float  output , 
    @OUT_VLR4 Float  output , 
    @OUT_VLR5 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @vVLR1 Float
DECLARE @vVLR2 Float
DECLARE @vVLR3 Float
DECLARE @vVLR4 Float
DECLARE @vVLR5 Float
DECLARE @vQTD Float
DECLARE @iPos Integer
DECLARE @nD5_QUANT Decimal( 12 , 2 )
BEGIN
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @vVLR1  = 0 
   SET @vVLR2  = 0 
   SET @vVLR3  = 0 
   SET @vVLR4  = 0 
   SET @vVLR5  = 0 
   SET @vQTD  = 0 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2010 
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_FILIAL , B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2010 
        WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
   END 
   IF @vQTD is null  or @vQTD  = 0 
   BEGIN 
      SET @vQTD  = 1 
   END 
   IF @vVLR1 is null 
   BEGIN 
      SET @vVLR1  = 0 
   END 
   IF @vVLR2 is null 
   BEGIN 
      SET @vVLR2  = 0 
   END 
   IF @vVLR3 is null 
   BEGIN 
      SET @vVLR3  = 0 
   END 
   IF @vVLR4 is null 
   BEGIN 
      SET @vVLR4  = 0 
   END 
   IF @vVLR5 is null 
   BEGIN 
      SET @vVLR5  = 0 
   END 
   SET @OUT_VLR1  = @vVLR1  / @vQTD 
   SET @OUT_VLR2  = @vVLR2  / @vQTD 
   SET @OUT_VLR3  = @vVLR3  / @vQTD 
   SET @OUT_VLR4  = @vVLR4  / @vQTD 
   SET @OUT_VLR5  = @vVLR5  / @vQTD 
END
GO

GO
--SqlScripter----[dbo].[MAT051_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT051_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT051_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT051_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_VLR1 Float  output , 
    @OUT_VLR2 Float  output , 
    @OUT_VLR3 Float  output , 
    @OUT_VLR4 Float  output , 
    @OUT_VLR5 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @vVLR1 Float
DECLARE @vVLR2 Float
DECLARE @vVLR3 Float
DECLARE @vVLR4 Float
DECLARE @vVLR5 Float
DECLARE @vQTD Float
DECLARE @iPos Integer
DECLARE @nD5_QUANT Decimal( 12 , 2 )
BEGIN
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @vVLR1  = 0 
   SET @vVLR2  = 0 
   SET @vVLR3  = 0 
   SET @vVLR4  = 0 
   SET @vVLR5  = 0 
   SET @vQTD  = 0 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2030 
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_FILIAL , B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2030 
        WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
   END 
   IF @vQTD is null  or @vQTD  = 0 
   BEGIN 
      SET @vQTD  = 1 
   END 
   IF @vVLR1 is null 
   BEGIN 
      SET @vVLR1  = 0 
   END 
   IF @vVLR2 is null 
   BEGIN 
      SET @vVLR2  = 0 
   END 
   IF @vVLR3 is null 
   BEGIN 
      SET @vVLR3  = 0 
   END 
   IF @vVLR4 is null 
   BEGIN 
      SET @vVLR4  = 0 
   END 
   IF @vVLR5 is null 
   BEGIN 
      SET @vVLR5  = 0 
   END 
   SET @OUT_VLR1  = @vVLR1  / @vQTD 
   SET @OUT_VLR2  = @vVLR2  / @vQTD 
   SET @OUT_VLR3  = @vVLR3  / @vQTD 
   SET @OUT_VLR4  = @vVLR4  / @vQTD 
   SET @OUT_VLR5  = @vVLR5  / @vQTD 
END
GO

GO
--SqlScripter----[dbo].[MAT051_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT051_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT051_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT051_18_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_VLR1 Float  output , 
    @OUT_VLR2 Float  output , 
    @OUT_VLR3 Float  output , 
    @OUT_VLR4 Float  output , 
    @OUT_VLR5 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @vVLR1 Float
DECLARE @vVLR2 Float
DECLARE @vVLR3 Float
DECLARE @vVLR4 Float
DECLARE @vVLR5 Float
DECLARE @vQTD Float
DECLARE @iPos Integer
DECLARE @nD5_QUANT Decimal( 12 , 2 )
BEGIN
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @vVLR1  = 0 
   SET @vVLR2  = 0 
   SET @vVLR3  = 0 
   SET @vVLR4  = 0 
   SET @vVLR5  = 0 
   SET @vQTD  = 0 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2010 
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_FILIAL , B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2010 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2010 
        WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2010 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
   END 
   IF @vQTD is null  or @vQTD  = 0 
   BEGIN 
      SET @vQTD  = 1 
   END 
   IF @vVLR1 is null 
   BEGIN 
      SET @vVLR1  = 0 
   END 
   IF @vVLR2 is null 
   BEGIN 
      SET @vVLR2  = 0 
   END 
   IF @vVLR3 is null 
   BEGIN 
      SET @vVLR3  = 0 
   END 
   IF @vVLR4 is null 
   BEGIN 
      SET @vVLR4  = 0 
   END 
   IF @vVLR5 is null 
   BEGIN 
      SET @vVLR5  = 0 
   END 
   SET @OUT_VLR1  = @vVLR1  / @vQTD 
   SET @OUT_VLR2  = @vVLR2  / @vQTD 
   SET @OUT_VLR3  = @vVLR3  / @vQTD 
   SET @OUT_VLR4  = @vVLR4  / @vQTD 
   SET @OUT_VLR5  = @vVLR5  / @vQTD 
END
GO

GO
--SqlScripter----[dbo].[MAT051_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT051_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT051_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT051_18_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_VLR1 Float  output , 
    @OUT_VLR2 Float  output , 
    @OUT_VLR3 Float  output , 
    @OUT_VLR4 Float  output , 
    @OUT_VLR5 Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cAux VarChar( 3 )
DECLARE @vVLR1 Float
DECLARE @vVLR2 Float
DECLARE @vVLR3 Float
DECLARE @vVLR4 Float
DECLARE @vVLR5 Float
DECLARE @vQTD Float
DECLARE @iPos Integer
DECLARE @nD5_QUANT Decimal( 12 , 2 )
BEGIN
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @vVLR1  = 0 
   SET @vVLR2  = 0 
   SET @vVLR3  = 0 
   SET @vVLR4  = 0 
   SET @vVLR5  = 0 
   SET @vQTD  = 0 
   IF @IN_MV_CUSFIL  = '1' 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2030 
        WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_FILIAL , B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2030 
           WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_FILIAL , B2_COD 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @vVLR1  = SUM(B2_VATU1 ), @vQTD  = SUM(B2_QATU )
        FROM SB2030 
        WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        GROUP BY B2_COD 
      SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR2  = SUM(B2_VATU2 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR3  = SUM(B2_VATU3 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR4  = SUM(B2_VATU4 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
      IF @iPos  > 0 
      BEGIN 
         SELECT @vVLR5  = SUM(B2_VATU5 )
           FROM SB2030 
           WHERE B2_COD  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
           GROUP BY B2_COD 
      END 
   END 
   IF @vQTD is null  or @vQTD  = 0 
   BEGIN 
      SET @vQTD  = 1 
   END 
   IF @vVLR1 is null 
   BEGIN 
      SET @vVLR1  = 0 
   END 
   IF @vVLR2 is null 
   BEGIN 
      SET @vVLR2  = 0 
   END 
   IF @vVLR3 is null 
   BEGIN 
      SET @vVLR3  = 0 
   END 
   IF @vVLR4 is null 
   BEGIN 
      SET @vVLR4  = 0 
   END 
   IF @vVLR5 is null 
   BEGIN 
      SET @vVLR5  = 0 
   END 
   SET @OUT_VLR1  = @vVLR1  / @vQTD 
   SET @OUT_VLR2  = @vVLR2  / @vQTD 
   SET @OUT_VLR3  = @vVLR3  / @vQTD 
   SET @OUT_VLR4  = @vVLR4  / @vQTD 
   SET @OUT_VLR5  = @vVLR5  / @vQTD 
END
GO

GO
--SqlScripter----[dbo].[MAT052_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT052_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT052_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT052_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_RESULTADO  = '0' 
   begin tran 
   INSERT INTO TRT01SP (TRB_FILIAL , TRB_COD ) 
   VALUES (@IN_FILIALCOR , @IN_CODIGO );
   SET @OUT_RESULTADO  = '1' 
   commit tran 
END
GO

GO
--SqlScripter----[dbo].[MAT052_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT052_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT052_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT052_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CODIGO Char( 15) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
BEGIN
   SET @OUT_RESULTADO  = '0' 
   begin tran 
   INSERT INTO TRT02SP (TRB_FILIAL , TRB_COD ) 
   VALUES (@IN_FILIALCOR , @IN_CODIGO );
   SET @OUT_RESULTADO  = '1' 
   commit tran 
END
GO

GO
--SqlScripter----[dbo].[MAT053_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT053_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT053_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT053_18_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DELOCAL Char( 2) , 
    @IN_ATELOCAL Char( 2) , 
    @IN_MV_PAR03 Char( 15) , 
    @IN_MV_PAR04 Char( 15) , 
    @IN_L300SALNEG Char( 01 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_NEGATBF Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SBF Char( 2)
DECLARE @cFil_SBE Char( 2)
DECLARE @cFil_D14 Char( 2)
DECLARE @iRecnoSBE Integer
DECLARE @cProduto Char( 15)
DECLARE @lLocaliz Char( 01 )
DECLARE @lIntDl Char( 01 )
DECLARE @cAux VarChar( 3 )
DECLARE @BF_LOCAL Char( 2)
DECLARE @BF_LOCALIZ Char( 15 )
DECLARE @nResult Char( 01 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBF' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBF output 
   SET @cAux  = 'SBE' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBE output 
   SET @cAux  = 'D14' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_D14 output 
    
   -- Cursor declaration LISTA_DE_PROD
   DECLARE LISTA_DE_PROD insensitive  CURSOR FOR 
   SELECT B1_COD 
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  between @IN_MV_PAR03 and @IN_MV_PAR04  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN LISTA_DE_PROD
   FETCH LISTA_DE_PROD 
    INTO @cProduto 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      EXEC MAT012_18_01 @cProduto , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
      IF @lLocaliz  = '1' 
      BEGIN 
         IF @IN_MV_WMSNEW  = '1' 
         BEGIN 
            EXEC MAT057_18_01 @cProduto , @IN_FILIALCOR , @lIntDl output 
         END 
         ELSE 
         BEGIN 
            SET @lIntDl  = '0' 
         END 
         IF  not  (@IN_MV_WMSNEW  = '1'  and @lIntDl  = '1' )  and @IN_MV_NEGATBF  = '0' 
         BEGIN 
            IF  (@IN_L300SALNEG  = '1' ) 
            BEGIN 
               begin tran 
               DELETE FROM SBF010  WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL 
                  and BF_LOCAL  <= @IN_ATELOCAL  and BF_QUANT  = 0 
               commit tran 
            END 
            ELSE 
            BEGIN 
               begin tran 
               DELETE FROM SBF010  WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL 
                  and BF_LOCAL  <= @IN_ATELOCAL  and BF_QUANT  <= 0 
               commit tran 
            END 
         END 
         IF @IN_MV_WMSNEW  = '0' 
         BEGIN 
             
            -- Cursor declaration CUR_SBF1
            DECLARE CUR_SBF1 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF010 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  <= 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBF1
            FETCH CUR_SBF1 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE010 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '1' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE010 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '1' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBF1 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBF1
            DEALLOCATE CUR_SBF1
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration CUR_SBFD14
            DECLARE CUR_SBFD14 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF010 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  <= 0  and D_E_L_E_T_  = ' ' 
            UNION 
            SELECT D14_LOCAL , D14_ENDER 
              FROM D14010 
              WHERE D14_FILIAL  = @cFil_D14  and D14_PRODUT  = @cProduto  and D14_LOCAL  >= @IN_DELOCAL  and D14_LOCAL  <= @IN_ATELOCAL 
               and D14_QTDEST  <= 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBFD14
            FETCH CUR_SBFD14 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE010 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '1' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE010 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '1' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBFD14 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBFD14
            DEALLOCATE CUR_SBFD14
         END 
         IF @IN_MV_WMSNEW  = '0' 
         BEGIN 
             
            -- Cursor declaration CUR_SBF2
            DECLARE CUR_SBF2 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF010 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  > 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBF2
            FETCH CUR_SBF2 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE010 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '2' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE010 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '2' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBF2 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBF2
            DEALLOCATE CUR_SBF2
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration CUR_SBF2D14
            DECLARE CUR_SBF2D14 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF010 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  > 0  and D_E_L_E_T_  = ' ' 
            UNION 
            SELECT D14_LOCAL , D14_ENDER 
              FROM D14010 
              WHERE D14_FILIAL  = @cFil_D14  and D14_PRODUT  = @cProduto  and D14_LOCAL  >= @IN_DELOCAL  and D14_LOCAL  <= @IN_ATELOCAL 
               and D14_QTDEST  > 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBF2D14
            FETCH CUR_SBF2D14 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE010 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '2' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE010 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '2' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBF2D14 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBF2D14
            DEALLOCATE CUR_SBF2D14
         END 
      END 
      FETCH LISTA_DE_PROD 
       INTO @cProduto 
   END 
   CLOSE LISTA_DE_PROD
   DEALLOCATE LISTA_DE_PROD
   IF @IN_MV_WMSNEW  = '0' 
   BEGIN 
      UPDATE SBE010 
        WITH (ROWLOCK) 
         SET BE_STATUS  = '1' 
       WHERE BE_FILIAL  = @cFil_SBE  and NOT EXISTS (
      SELECT 1 
        FROM SBF010 SBF
        WHERE SBF.BF_FILIAL  = @cFil_SBF  and SBF.BF_LOCAL  = BE_LOCAL  and SBF.BF_LOCALIZ  = BE_LOCALIZ  and SBF.D_E_L_E_T_  = ' ' 
        )  and BE_STATUS  = '2'  and D_E_L_E_T_  = ' ' 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      UPDATE SBE010 
        WITH (ROWLOCK) 
         SET BE_STATUS  = '1' 
       WHERE BE_FILIAL  = @cFil_SBE  and NOT EXISTS (
      SELECT 1 
        FROM SBF010 SBF
        WHERE SBF.BF_FILIAL  = @cFil_SBF  and SBF.BF_LOCAL  = BE_LOCAL  and SBF.BF_LOCALIZ  = BE_LOCALIZ  and SBF.D_E_L_E_T_  = ' ' 
        
      UNION 
      SELECT 1 
        FROM D14010 D14
        WHERE D14.D14_FILIAL  = @cFil_D14  and D14.D14_LOCAL  = BE_LOCAL  and D14.D14_ENDER  = BE_LOCALIZ  and D14.D_E_L_E_T_  = ' ' 
        )  and BE_STATUS  = '2'  and D_E_L_E_T_  = ' ' 
      SET @OUT_RESULTADO  = '1' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT053_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT053_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT053_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT053_18_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DELOCAL Char( 2) , 
    @IN_ATELOCAL Char( 2) , 
    @IN_MV_PAR03 Char( 15) , 
    @IN_MV_PAR04 Char( 15) , 
    @IN_L300SALNEG Char( 01 ) , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_NEGATBF Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SBF Char( 2)
DECLARE @cFil_SBE Char( 2)
DECLARE @cFil_D14 Char( 2)
DECLARE @iRecnoSBE Integer
DECLARE @cProduto Char( 15)
DECLARE @lLocaliz Char( 01 )
DECLARE @lIntDl Char( 01 )
DECLARE @cAux VarChar( 3 )
DECLARE @BF_LOCAL Char( 2)
DECLARE @BF_LOCALIZ Char( 15 )
DECLARE @nResult Char( 01 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SBF' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBF output 
   SET @cAux  = 'SBE' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBE output 
   SET @cAux  = 'D14' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_D14 output 
    
   -- Cursor declaration LISTA_DE_PROD
   DECLARE LISTA_DE_PROD insensitive  CURSOR FOR 
   SELECT B1_COD 
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  between @IN_MV_PAR03 and @IN_MV_PAR04  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN LISTA_DE_PROD
   FETCH LISTA_DE_PROD 
    INTO @cProduto 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      EXEC MAT012_18_02 @cProduto , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
      IF @lLocaliz  = '1' 
      BEGIN 
         IF @IN_MV_WMSNEW  = '1' 
         BEGIN 
            EXEC MAT057_18_02 @cProduto , @IN_FILIALCOR , @lIntDl output 
         END 
         ELSE 
         BEGIN 
            SET @lIntDl  = '0' 
         END 
         IF  not  (@IN_MV_WMSNEW  = '1'  and @lIntDl  = '1' )  and @IN_MV_NEGATBF  = '0' 
         BEGIN 
            IF  (@IN_L300SALNEG  = '1' ) 
            BEGIN 
               begin tran 
               DELETE FROM SBF030  WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL 
                  and BF_LOCAL  <= @IN_ATELOCAL  and BF_QUANT  = 0 
               commit tran 
            END 
            ELSE 
            BEGIN 
               begin tran 
               DELETE FROM SBF030  WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL 
                  and BF_LOCAL  <= @IN_ATELOCAL  and BF_QUANT  <= 0 
               commit tran 
            END 
         END 
         IF @IN_MV_WMSNEW  = '0' 
         BEGIN 
             
            -- Cursor declaration CUR_SBF1
            DECLARE CUR_SBF1 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF030 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  <= 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBF1
            FETCH CUR_SBF1 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE030 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '1' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE030 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '1' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBF1 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBF1
            DEALLOCATE CUR_SBF1
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration CUR_SBFD14
            DECLARE CUR_SBFD14 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF030 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  <= 0  and D_E_L_E_T_  = ' ' 
            UNION 
            SELECT D14_LOCAL , D14_ENDER 
              FROM D14020 
              WHERE D14_FILIAL  = @cFil_D14  and D14_PRODUT  = @cProduto  and D14_LOCAL  >= @IN_DELOCAL  and D14_LOCAL  <= @IN_ATELOCAL 
               and D14_QTDEST  <= 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBFD14
            FETCH CUR_SBFD14 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE030 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '1' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE030 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '1' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBFD14 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBFD14
            DEALLOCATE CUR_SBFD14
         END 
         IF @IN_MV_WMSNEW  = '0' 
         BEGIN 
             
            -- Cursor declaration CUR_SBF2
            DECLARE CUR_SBF2 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF030 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  > 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBF2
            FETCH CUR_SBF2 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE030 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '2' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE030 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '2' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBF2 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBF2
            DEALLOCATE CUR_SBF2
         END 
         ELSE 
         BEGIN 
             
            -- Cursor declaration CUR_SBF2D14
            DECLARE CUR_SBF2D14 insensitive  CURSOR FOR 
            SELECT BF_LOCAL , BF_LOCALIZ 
              FROM SBF030 
              WHERE BF_FILIAL  = @cFil_SBF  and BF_PRODUTO  = @cProduto  and BF_LOCAL  >= @IN_DELOCAL  and BF_LOCAL  <= @IN_ATELOCAL 
               and BF_QUANT  > 0  and D_E_L_E_T_  = ' ' 
            UNION 
            SELECT D14_LOCAL , D14_ENDER 
              FROM D14020 
              WHERE D14_FILIAL  = @cFil_D14  and D14_PRODUT  = @cProduto  and D14_LOCAL  >= @IN_DELOCAL  and D14_LOCAL  <= @IN_ATELOCAL 
               and D14_QTDEST  > 0  and D_E_L_E_T_  = ' ' 
             
            OPEN CUR_SBF2D14
            FETCH CUR_SBF2D14 
             INTO @BF_LOCAL , @BF_LOCALIZ 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
               SET @iRecnoSBE  = null 
               SELECT @iRecnoSBE  = COALESCE ( SBE.R_E_C_N_O_ , 0 )
                 FROM SBE030 SBE
                 WHERE BE_FILIAL  = @cFil_SBE  and BE_LOCAL  = @BF_LOCAL  and BE_LOCALIZ  = @BF_LOCALIZ  and BE_STATUS NOT IN ( '2' , 
                      '3' , '4' , '5' , '6'  )  and SBE.D_E_L_E_T_  = ' ' 
               IF @iRecnoSBE  > 0 
               BEGIN 
                  UPDATE SBE030 
                    WITH (ROWLOCK) 
                     SET BE_STATUS  = '2' 
                   WHERE R_E_C_N_O_  = @iRecnoSBE 
               END 
               FETCH CUR_SBF2D14 
                INTO @BF_LOCAL , @BF_LOCALIZ 
            END 
            CLOSE CUR_SBF2D14
            DEALLOCATE CUR_SBF2D14
         END 
      END 
      FETCH LISTA_DE_PROD 
       INTO @cProduto 
   END 
   CLOSE LISTA_DE_PROD
   DEALLOCATE LISTA_DE_PROD
   IF @IN_MV_WMSNEW  = '0' 
   BEGIN 
      UPDATE SBE030 
        WITH (ROWLOCK) 
         SET BE_STATUS  = '1' 
       WHERE BE_FILIAL  = @cFil_SBE  and NOT EXISTS (
      SELECT 1 
        FROM SBF030 SBF
        WHERE SBF.BF_FILIAL  = @cFil_SBF  and SBF.BF_LOCAL  = BE_LOCAL  and SBF.BF_LOCALIZ  = BE_LOCALIZ  and SBF.D_E_L_E_T_  = ' ' 
        )  and BE_STATUS  = '2'  and D_E_L_E_T_  = ' ' 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      UPDATE SBE030 
        WITH (ROWLOCK) 
         SET BE_STATUS  = '1' 
       WHERE BE_FILIAL  = @cFil_SBE  and NOT EXISTS (
      SELECT 1 
        FROM SBF030 SBF
        WHERE SBF.BF_FILIAL  = @cFil_SBF  and SBF.BF_LOCAL  = BE_LOCAL  and SBF.BF_LOCALIZ  = BE_LOCALIZ  and SBF.D_E_L_E_T_  = ' ' 
        
      UNION 
      SELECT 1 
        FROM D14020 D14
        WHERE D14.D14_FILIAL  = @cFil_D14  and D14.D14_LOCAL  = BE_LOCAL  and D14.D14_ENDER  = BE_LOCALIZ  and D14.D_E_L_E_T_  = ' ' 
        )  and BE_STATUS  = '2'  and D_E_L_E_T_  = ' ' 
      SET @OUT_RESULTADO  = '1' 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT054_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT054_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT054_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT054_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CFILAUX Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SBD Char( 2)
DECLARE @cFil_SD8 Char( 2)
DECLARE @cFil_SCC Char( 2)
DECLARE @cCC_DATA Char( 8)
DECLARE @cCC_PRODUTO Char( 15)
DECLARE @cCC_LOCAL Char( 2)
DECLARE @cCC_DTORIG Char( 8)
DECLARE @cCC_SEQ Char( 6)
DECLARE @cBD_PRODUTO Char( 15)
DECLARE @cBD_LOCAL Char( 2)
DECLARE @cBD_SEQ Char( 6)
DECLARE @cFILAUX Char( 2)
DECLARE @cFiltra Char( 01 )
DECLARE @cAux VarChar( 03 )
DECLARE @iPos Integer
DECLARE @iRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iRec Integer
DECLARE @iRecAnt Integer
DECLARE @vBD_CUSINI2 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI3 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI4 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI5 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @vD8_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD8_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD8_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD8_CUSTO5 Decimal( 14 , 2 )
DECLARE @vCC_QINI Decimal( 14 , 2 )
DECLARE @vCC_QINI2UM Decimal( 14 , 2 )
DECLARE @vCC_VINIFF1 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF2 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF3 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF4 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF5 Decimal( 14 , 2 )
DECLARE @vCC_QFIM Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF1 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF2 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF3 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF4 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF5 Decimal( 14 , 2 )
DECLARE @vCC_QFIM2UM Decimal( 14 , 2 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cFiltra  = '0' 
   SET @cFILAUX  = @IN_CFILAUX 
   IF @cFILAUX is null 
   BEGIN 
      SET @cFILAUX  = '  ' 
   END 
   SET @cAux  = 'SBD' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SBD output 
   SET @cAux  = 'SD8' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SD8 output 
   SET @cAux  = 'SCC' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SCC output 
   IF @IN_MV_CUSFIFO  = '1' 
   BEGIN 
      DELETE FROM SBD010  WHERE BD_FILIAL  = @cFil_SBD  and BD_DTPROC  >= @IN_DINICIO  and D_E_L_E_T_  = ' ' 
      SELECT @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM SD8010 
        WHERE D8_FILIAL  = @cFil_SD8  and D_E_L_E_T_  = ' ' 
      SET @iRec  = 0 
      WHILE ( (@iRec  <= @iMaxRecno ) )
      BEGIN
         SET @iRecAnt  = @iRec 
         SET @iRec  = @iRec  + 1024 
         UPDATE SD8010 
           WITH (ROWLOCK) 
            SET D8_SD1DEV  = D8_SD1DEV  - D8_QFIMDEV , D8_QFIMDEV  = 0 
          WHERE R_E_C_N_O_  between @iRecAnt and @iRec  and D8_FILIAL  = @cFil_SD8  and D8_QFIMDEV  > 0  and D8_TM  > '500' 
            and D8_ITEM  <> ' '  and D_E_L_E_T_  = ' ' 
      END 
      DELETE FROM SD8010  WHERE D8_FILIAL  = @cFil_SD8  and D8_DTPROC  >= @IN_DINICIO  and D_E_L_E_T_  = ' ' 
       
      -- Cursor declaration CUR_SCC
      DECLARE CUR_SCC insensitive  CURSOR FOR 
      SELECT CC_PRODUTO , CC_LOCAL , CC_DTORIG , CC_SEQ , CC_QFIM , CC_VFIMFF1 , CC_VFIMFF2 , CC_VFIMFF3 , CC_VFIMFF4 , CC_VFIMFF5 , 
             CC_QFIM2UM , CC_QINI , CC_QINI2UM , CC_VINIFF1 , CC_VINIFF2 , CC_VINIFF3 , CC_VINIFF4 , CC_VINIFF5 , CC_DATA 
        FROM SCC010 SCC
        WHERE CC_FILIAL  = @cFil_SCC  and CC_STATUS  = 'A'  and D_E_L_E_T_  = ' ' 
       
      OPEN CUR_SCC
      FETCH CUR_SCC 
       INTO @cCC_PRODUTO , @cCC_LOCAL , @cCC_DTORIG , @cCC_SEQ , @vCC_QFIM , @vCC_VFIMFF1 , @vCC_VFIMFF2 , @vCC_VFIMFF3 , 
             @vCC_VFIMFF4 , @vCC_VFIMFF5 , @vCC_QFIM2UM , @vCC_QINI , @vCC_QINI2UM , @vCC_VINIFF1 , @vCC_VINIFF2 , @vCC_VINIFF3 , 
             @vCC_VINIFF4 , @vCC_VINIFF5 , @cCC_DATA 
      WHILE (@@fetch_status  = 0 )
      BEGIN
         SET @iRecno  = null 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SBD010 
           WHERE BD_FILIAL  = @cFil_SBD  and BD_SEQ  = @cCC_SEQ  and D_E_L_E_T_  = ' ' 
         IF @iRecno is null 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SBD010 
            SET @iRecno  = @iRecno  + 1 
            INSERT INTO SBD010 (BD_FILIAL , BD_PRODUTO , BD_LOCAL , BD_DATA , BD_SEQ , BD_DTCALC , R_E_C_N_O_ , BD_STATUS , 
                   BD_QINI , BD_QINI2UM , BD_CUSINI1 , BD_QFIM , BD_QFIM2UM , BD_CUSFIM1 , BD_DTPROC , BD_CUSINI2 , BD_CUSFIM2 , 
                   BD_CUSINI3 , BD_CUSFIM3 , BD_CUSINI4 , BD_CUSFIM4 , BD_CUSINI5 , BD_CUSFIM5 ) 
            VALUES (@cFil_SBD , @cCC_PRODUTO , @cCC_LOCAL , @cCC_DTORIG , @cCC_SEQ , @IN_MV_PAR1 , @iRecno , ' ' , @vCC_QINI , 
                   @vCC_QINI2UM , @vCC_VINIFF1 , @vCC_QFIM , @vCC_QFIM2UM , @vCC_VFIMFF1 , @IN_MV_PAR1 , @vCC_VINIFF2 , @vCC_VFIMFF2 , 
                   @vCC_VINIFF3 , @vCC_VFIMFF3 , @vCC_VINIFF4 , @vCC_VFIMFF4 , @vCC_VINIFF5 , @vCC_VFIMFF5 );
         END 
         ELSE 
         BEGIN 
            SET @vBD_CUSINI2  = 0 
            SET @vBD_CUSINI3  = 0 
            SET @vBD_CUSINI4  = 0 
            SET @vBD_CUSINI5  = 0 
            SET @vBD_CUSFIM2  = 0 
            SET @vBD_CUSFIM3  = 0 
            SET @vBD_CUSFIM4  = 0 
            SET @vBD_CUSFIM5  = 0 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI2  = @vCC_VINIFF2 
               SET @vBD_CUSFIM2  = @vCC_VFIMFF2 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI3  = @vCC_VINIFF3 
               SET @vBD_CUSFIM3  = @vCC_VFIMFF3 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI4  = @vCC_VINIFF4 
               SET @vBD_CUSFIM4  = @vCC_VFIMFF4 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI5  = @vCC_VINIFF5 
               SET @vBD_CUSFIM5  = @vCC_VFIMFF5 
            END 
            UPDATE SBD010 
              WITH (ROWLOCK) 
               SET BD_STATUS  = ' ' , BD_QINI  = @vCC_QINI , BD_QINI2UM  = @vCC_QINI2UM , BD_CUSINI1  = @vCC_VINIFF1 , BD_QFIM  = @vCC_QFIM 
              , BD_QFIM2UM  = @vCC_QFIM2UM , BD_CUSFIM1  = @vCC_VFIMFF1 , BD_DTPROC  = @IN_MV_PAR1 , BD_CUSINI2  = @vBD_CUSINI2 
              , BD_CUSFIM2  = @vCC_VFIMFF2 , BD_CUSINI3  = @vBD_CUSINI3 , BD_CUSFIM3  = @vCC_VFIMFF3 , BD_CUSINI4  = @vBD_CUSINI4 
              , BD_CUSFIM4  = @vCC_VFIMFF4 , BD_CUSINI5  = @vBD_CUSINI5 , BD_CUSFIM5  = @vCC_VFIMFF5 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cCC_DATA  = ' ' 
         BEGIN 
            SET @vD8_CUSTO2  = 0 
            SET @vD8_CUSTO3  = 0 
            SET @vD8_CUSTO4  = 0 
            SET @vD8_CUSTO5  = 0 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO2  = @vCC_VINIFF2 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO3  = @vCC_VINIFF3 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO4  = @vCC_VINIFF4 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO5  = @vCC_VINIFF5 
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SD8010 
            SET @iRecno  = @iRecno  + 1 
            INSERT INTO SD8010 (D8_FILIAL , D8_PRODUTO , D8_LOCAL , D8_DATA , D8_QUANT , D8_QT2UM , D8_CUSTO1 , D8_CUSTO2 , 
                   D8_CUSTO3 , D8_CUSTO4 , D8_CUSTO5 , D8_TIPONF , D8_SEQ , D8_DTCALC , D8_DTPROC , R_E_C_N_O_ ) 
            VALUES (@cFil_SD8 , @cCC_PRODUTO , @cCC_LOCAL , @cCC_DATA , @vCC_QINI , @vCC_QFIM2UM , @vCC_VINIFF1 , @vCC_VINIFF2 , 
                   @vCC_VINIFF3 , @vCC_VINIFF4 , @vCC_VINIFF5 , 'E' , @cCC_SEQ , @IN_MV_PAR1 , @IN_MV_PAR1 , @iRecno );
         END 
         FETCH CUR_SCC 
          INTO @cCC_PRODUTO , @cCC_LOCAL , @cCC_DTORIG , @cCC_SEQ , @vCC_QFIM , @vCC_VFIMFF1 , @vCC_VFIMFF2 , @vCC_VFIMFF3 , 
                @vCC_VFIMFF4 , @vCC_VFIMFF5 , @vCC_QFIM2UM , @vCC_QINI , @vCC_QINI2UM , @vCC_VINIFF1 , @vCC_VINIFF2 , @vCC_VINIFF3 , 
                @vCC_VINIFF4 , @vCC_VINIFF5 , @cCC_DATA 
      END 
      CLOSE CUR_SCC
      DEALLOCATE CUR_SCC
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT054_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT054_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT054_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT054_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CFILAUX Char( 2) , 
    @IN_DINICIO Char( 08 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @IN_MV_PAR1 Char( 08 ) , 
    @IN_MV_CUSFIFO Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SBD Char( 2)
DECLARE @cFil_SD8 Char( 2)
DECLARE @cFil_SCC Char( 2)
DECLARE @cCC_DATA Char( 8)
DECLARE @cCC_PRODUTO Char( 15)
DECLARE @cCC_LOCAL Char( 2)
DECLARE @cCC_DTORIG Char( 8)
DECLARE @cCC_SEQ Char( 6)
DECLARE @cBD_PRODUTO Char( 15)
DECLARE @cBD_LOCAL Char( 2)
DECLARE @cBD_SEQ Char( 6)
DECLARE @cFILAUX Char( 2)
DECLARE @cFiltra Char( 01 )
DECLARE @cAux VarChar( 03 )
DECLARE @iPos Integer
DECLARE @iRecno Integer
DECLARE @iMaxRecno Integer
DECLARE @iRec Integer
DECLARE @iRecAnt Integer
DECLARE @vBD_CUSINI2 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI3 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI4 Decimal( 14 , 4 )
DECLARE @vBD_CUSINI5 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM2 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM3 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM4 Decimal( 14 , 4 )
DECLARE @vBD_CUSFIM5 Decimal( 14 , 4 )
DECLARE @vD8_CUSTO2 Decimal( 14 , 2 )
DECLARE @vD8_CUSTO3 Decimal( 14 , 2 )
DECLARE @vD8_CUSTO4 Decimal( 14 , 2 )
DECLARE @vD8_CUSTO5 Decimal( 14 , 2 )
DECLARE @vCC_QINI Decimal( 14 , 2 )
DECLARE @vCC_QINI2UM Decimal( 14 , 2 )
DECLARE @vCC_VINIFF1 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF2 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF3 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF4 Decimal( 14 , 2 )
DECLARE @vCC_VINIFF5 Decimal( 14 , 2 )
DECLARE @vCC_QFIM Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF1 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF2 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF3 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF4 Decimal( 14 , 2 )
DECLARE @vCC_VFIMFF5 Decimal( 14 , 2 )
DECLARE @vCC_QFIM2UM Decimal( 14 , 2 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cFiltra  = '0' 
   SET @cFILAUX  = @IN_CFILAUX 
   IF @cFILAUX is null 
   BEGIN 
      SET @cFILAUX  = '  ' 
   END 
   SET @cAux  = 'SBD' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SBD output 
   SET @cAux  = 'SD8' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SD8 output 
   SET @cAux  = 'SCC' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SCC output 
   IF @IN_MV_CUSFIFO  = '1' 
   BEGIN 
      DELETE FROM SBD030  WHERE BD_FILIAL  = @cFil_SBD  and BD_DTPROC  >= @IN_DINICIO  and D_E_L_E_T_  = ' ' 
      SELECT @iMaxRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
        FROM SD8030 
        WHERE D8_FILIAL  = @cFil_SD8  and D_E_L_E_T_  = ' ' 
      SET @iRec  = 0 
      WHILE ( (@iRec  <= @iMaxRecno ) )
      BEGIN
         SET @iRecAnt  = @iRec 
         SET @iRec  = @iRec  + 1024 
         UPDATE SD8030 
           WITH (ROWLOCK) 
            SET D8_SD1DEV  = D8_SD1DEV  - D8_QFIMDEV , D8_QFIMDEV  = 0 
          WHERE R_E_C_N_O_  between @iRecAnt and @iRec  and D8_FILIAL  = @cFil_SD8  and D8_QFIMDEV  > 0  and D8_TM  > '500' 
            and D8_ITEM  <> ' '  and D_E_L_E_T_  = ' ' 
      END 
      DELETE FROM SD8030  WHERE D8_FILIAL  = @cFil_SD8  and D8_DTPROC  >= @IN_DINICIO  and D_E_L_E_T_  = ' ' 
       
      -- Cursor declaration CUR_SCC
      DECLARE CUR_SCC insensitive  CURSOR FOR 
      SELECT CC_PRODUTO , CC_LOCAL , CC_DTORIG , CC_SEQ , CC_QFIM , CC_VFIMFF1 , CC_VFIMFF2 , CC_VFIMFF3 , CC_VFIMFF4 , CC_VFIMFF5 , 
             CC_QFIM2UM , CC_QINI , CC_QINI2UM , CC_VINIFF1 , CC_VINIFF2 , CC_VINIFF3 , CC_VINIFF4 , CC_VINIFF5 , CC_DATA 
        FROM SCC030 SCC
        WHERE CC_FILIAL  = @cFil_SCC  and CC_STATUS  = 'A'  and D_E_L_E_T_  = ' ' 
       
      OPEN CUR_SCC
      FETCH CUR_SCC 
       INTO @cCC_PRODUTO , @cCC_LOCAL , @cCC_DTORIG , @cCC_SEQ , @vCC_QFIM , @vCC_VFIMFF1 , @vCC_VFIMFF2 , @vCC_VFIMFF3 , 
             @vCC_VFIMFF4 , @vCC_VFIMFF5 , @vCC_QFIM2UM , @vCC_QINI , @vCC_QINI2UM , @vCC_VINIFF1 , @vCC_VINIFF2 , @vCC_VINIFF3 , 
             @vCC_VINIFF4 , @vCC_VINIFF5 , @cCC_DATA 
      WHILE (@@fetch_status  = 0 )
      BEGIN
         SET @iRecno  = null 
         SELECT @iRecno  = R_E_C_N_O_ 
           FROM SBD030 
           WHERE BD_FILIAL  = @cFil_SBD  and BD_SEQ  = @cCC_SEQ  and D_E_L_E_T_  = ' ' 
         IF @iRecno is null 
         BEGIN 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SBD030 
            SET @iRecno  = @iRecno  + 1 
            INSERT INTO SBD030 (BD_FILIAL , BD_PRODUTO , BD_LOCAL , BD_DATA , BD_SEQ , BD_DTCALC , R_E_C_N_O_ , BD_STATUS , 
                   BD_QINI , BD_QINI2UM , BD_CUSINI1 , BD_QFIM , BD_QFIM2UM , BD_CUSFIM1 , BD_DTPROC , BD_CUSINI2 , BD_CUSFIM2 , 
                   BD_CUSINI3 , BD_CUSFIM3 , BD_CUSINI4 , BD_CUSFIM4 , BD_CUSINI5 , BD_CUSFIM5 ) 
            VALUES (@cFil_SBD , @cCC_PRODUTO , @cCC_LOCAL , @cCC_DTORIG , @cCC_SEQ , @IN_MV_PAR1 , @iRecno , ' ' , @vCC_QINI , 
                   @vCC_QINI2UM , @vCC_VINIFF1 , @vCC_QFIM , @vCC_QFIM2UM , @vCC_VFIMFF1 , @IN_MV_PAR1 , @vCC_VINIFF2 , @vCC_VFIMFF2 , 
                   @vCC_VINIFF3 , @vCC_VFIMFF3 , @vCC_VINIFF4 , @vCC_VFIMFF4 , @vCC_VINIFF5 , @vCC_VFIMFF5 );
         END 
         ELSE 
         BEGIN 
            SET @vBD_CUSINI2  = 0 
            SET @vBD_CUSINI3  = 0 
            SET @vBD_CUSINI4  = 0 
            SET @vBD_CUSINI5  = 0 
            SET @vBD_CUSFIM2  = 0 
            SET @vBD_CUSFIM3  = 0 
            SET @vBD_CUSFIM4  = 0 
            SET @vBD_CUSFIM5  = 0 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI2  = @vCC_VINIFF2 
               SET @vBD_CUSFIM2  = @vCC_VFIMFF2 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI3  = @vCC_VINIFF3 
               SET @vBD_CUSFIM3  = @vCC_VFIMFF3 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI4  = @vCC_VINIFF4 
               SET @vBD_CUSFIM4  = @vCC_VFIMFF4 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vBD_CUSINI5  = @vCC_VINIFF5 
               SET @vBD_CUSFIM5  = @vCC_VFIMFF5 
            END 
            UPDATE SBD030 
              WITH (ROWLOCK) 
               SET BD_STATUS  = ' ' , BD_QINI  = @vCC_QINI , BD_QINI2UM  = @vCC_QINI2UM , BD_CUSINI1  = @vCC_VINIFF1 , BD_QFIM  = @vCC_QFIM 
              , BD_QFIM2UM  = @vCC_QFIM2UM , BD_CUSFIM1  = @vCC_VFIMFF1 , BD_DTPROC  = @IN_MV_PAR1 , BD_CUSINI2  = @vBD_CUSINI2 
              , BD_CUSFIM2  = @vCC_VFIMFF2 , BD_CUSINI3  = @vBD_CUSINI3 , BD_CUSFIM3  = @vCC_VFIMFF3 , BD_CUSINI4  = @vBD_CUSINI4 
              , BD_CUSFIM4  = @vCC_VFIMFF4 , BD_CUSINI5  = @vBD_CUSINI5 , BD_CUSFIM5  = @vCC_VFIMFF5 
             WHERE R_E_C_N_O_  = @iRecno 
         END 
         IF @cCC_DATA  = ' ' 
         BEGIN 
            SET @vD8_CUSTO2  = 0 
            SET @vD8_CUSTO3  = 0 
            SET @vD8_CUSTO4  = 0 
            SET @vD8_CUSTO5  = 0 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO2  = @vCC_VINIFF2 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO3  = @vCC_VINIFF3 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO4  = @vCC_VINIFF4 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               SET @vD8_CUSTO5  = @vCC_VINIFF5 
            END 
            SELECT @iRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM SD8030 
            SET @iRecno  = @iRecno  + 1 
            INSERT INTO SD8030 (D8_FILIAL , D8_PRODUTO , D8_LOCAL , D8_DATA , D8_QUANT , D8_QT2UM , D8_CUSTO1 , D8_CUSTO2 , 
                   D8_CUSTO3 , D8_CUSTO4 , D8_CUSTO5 , D8_TIPONF , D8_SEQ , D8_DTCALC , D8_DTPROC , R_E_C_N_O_ ) 
            VALUES (@cFil_SD8 , @cCC_PRODUTO , @cCC_LOCAL , @cCC_DATA , @vCC_QINI , @vCC_QFIM2UM , @vCC_VINIFF1 , @vCC_VINIFF2 , 
                   @vCC_VINIFF3 , @vCC_VINIFF4 , @vCC_VINIFF5 , 'E' , @cCC_SEQ , @IN_MV_PAR1 , @IN_MV_PAR1 , @iRecno );
         END 
         FETCH CUR_SCC 
          INTO @cCC_PRODUTO , @cCC_LOCAL , @cCC_DTORIG , @cCC_SEQ , @vCC_QFIM , @vCC_VFIMFF1 , @vCC_VFIMFF2 , @vCC_VFIMFF3 , 
                @vCC_VFIMFF4 , @vCC_VFIMFF5 , @vCC_QFIM2UM , @vCC_QINI , @vCC_QINI2UM , @vCC_VINIFF1 , @vCC_VINIFF2 , @vCC_VINIFF3 , 
                @vCC_VINIFF4 , @vCC_VINIFF5 , @cCC_DATA 
      END 
      CLOSE CUR_SCC
      DEALLOCATE CUR_SCC
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT055_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT055_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT055_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT055_18_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_PAR03 Char( 15) , 
    @IN_MV_PAR04 Char( 15) , 
    @IN_MV_CUSMED Char( 01 ) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_CUSEMP Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cAux VarChar( 3 )
DECLARE @nOUT_VLR1 Float
DECLARE @nOUT_VLR2 Float
DECLARE @nOUT_VLR3 Float
DECLARE @nOUT_VLR4 Float
DECLARE @nOUT_VLR5 Float
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
    
   -- Cursor declaration PROD_UNIFICADO
   DECLARE PROD_UNIFICADO insensitive  CURSOR FOR 
   SELECT B1_COD 
     FROM SB1010 
     WHERE B1_COD  between @IN_MV_PAR03 and @IN_MV_PAR04  and B1_COD NOT LIKE 'MOD%'  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN PROD_UNIFICADO
   FETCH PROD_UNIFICADO 
    INTO @cProduto 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @nOUT_VLR1  = 0 
      SET @nOUT_VLR2  = 0 
      SET @nOUT_VLR3  = 0 
      SET @nOUT_VLR4  = 0 
      SET @nOUT_VLR5  = 0 
      EXEC MAT051_18_01 @IN_FILIALCOR , @cProduto , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nOUT_VLR1 output , @nOUT_VLR2 output , 
             @nOUT_VLR3 output , @nOUT_VLR4 output , @nOUT_VLR5 output 
      IF @IN_MV_CUSMED  = '1'  and @IN_MV_CUSFIL  = '1' 
      BEGIN 
         UPDATE SB2010 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_CUSMED  = '1'  and @IN_MV_CUSEMP  = '1' 
         BEGIN 
            UPDATE SB2010 
              WITH (ROWLOCK) 
               SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
             WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2010 
                 WITH (ROWLOCK) 
                  SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
         END 
      END 
      FETCH PROD_UNIFICADO 
       INTO @cProduto 
   END 
   CLOSE PROD_UNIFICADO
   DEALLOCATE PROD_UNIFICADO
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT055_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT055_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT055_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT055_18_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_MV_PAR03 Char( 15) , 
    @IN_MV_PAR04 Char( 15) , 
    @IN_MV_CUSMED Char( 01 ) , 
    @IN_MV_CUSFIL Char( 01 ) , 
    @IN_MV_CUSEMP Char( 01 ) , 
    @IN_MV_MOEDACM Char( 05 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB2 Char( 2)
DECLARE @cProduto Char( 15)
DECLARE @cAux VarChar( 3 )
DECLARE @nOUT_VLR1 Float
DECLARE @nOUT_VLR2 Float
DECLARE @nOUT_VLR3 Float
DECLARE @nOUT_VLR4 Float
DECLARE @nOUT_VLR5 Float
DECLARE @iPos Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
    
   -- Cursor declaration PROD_UNIFICADO
   DECLARE PROD_UNIFICADO insensitive  CURSOR FOR 
   SELECT B1_COD 
     FROM SB1030 
     WHERE B1_COD  between @IN_MV_PAR03 and @IN_MV_PAR04  and B1_COD NOT LIKE 'MOD%'  and D_E_L_E_T_  = ' ' 
   FOR READ ONLY 
    
   OPEN PROD_UNIFICADO
   FETCH PROD_UNIFICADO 
    INTO @cProduto 
   WHILE ( (@@Fetch_Status  = 0 ) )
   BEGIN
      SET @nOUT_VLR1  = 0 
      SET @nOUT_VLR2  = 0 
      SET @nOUT_VLR3  = 0 
      SET @nOUT_VLR4  = 0 
      SET @nOUT_VLR5  = 0 
      EXEC MAT051_18_02 @IN_FILIALCOR , @cProduto , @IN_MV_CUSFIL , @IN_MV_MOEDACM , @nOUT_VLR1 output , @nOUT_VLR2 output , 
             @nOUT_VLR3 output , @nOUT_VLR4 output , @nOUT_VLR5 output 
      IF @IN_MV_CUSMED  = '1'  and @IN_MV_CUSFIL  = '1' 
      BEGIN 
         UPDATE SB2030 
           WITH (ROWLOCK) 
            SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
          WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
         SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
         SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
         SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
         IF @iPos  > 0 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
             WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_CUSMED  = '1'  and @IN_MV_CUSEMP  = '1' 
         BEGIN 
            UPDATE SB2030 
              WITH (ROWLOCK) 
               SET B2_VATU1  =  (B2_QATU  * @nOUT_VLR1 ) , B2_CM1  = @nOUT_VLR1 
             WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            SET @iPos  = CHARINDEX ( '2' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VATU2  =  (B2_QATU  * @nOUT_VLR2 ) , B2_CM2  = @nOUT_VLR2 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
            SET @iPos  = CHARINDEX ( '3' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VATU3  =  (B2_QATU  * @nOUT_VLR3 ) , B2_CM3  = @nOUT_VLR3 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
            SET @iPos  = CHARINDEX ( '4' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VATU4  =  (B2_QATU  * @nOUT_VLR4 ) , B2_CM4  = @nOUT_VLR4 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
            SET @iPos  = CHARINDEX ( '5' , @IN_MV_MOEDACM )
            IF @iPos  > 0 
            BEGIN 
               UPDATE SB2030 
                 WITH (ROWLOCK) 
                  SET B2_VATU5  =  (B2_QATU  * @nOUT_VLR5 ) , B2_CM5  = @nOUT_VLR5 
                WHERE B2_COD  = @cProduto  and D_E_L_E_T_  = ' ' 
            END 
         END 
      END 
      FETCH PROD_UNIFICADO 
       INTO @cProduto 
   END 
   CLOSE PROD_UNIFICADO
   DEALLOCATE PROD_UNIFICADO
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MAT056_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT056_22_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT056_22_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT056_22_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CCODDE Char( 15) , 
    @IN_CCODATE Char( 15) , 
    @IN_LOCALDE Char( 2) , 
    @IN_LOCALATE Char( 2) , 
    @IN_CTIPO Char( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_DATAINI Char( 08 ) , 
    @IN_DATAFIM Char( 08 ) , 
    @IN_MV_PAR09 Char( 01 ) , 
    @IN_MV_PAR10 Char( 01 ) , 
    @IN_MV_PAR11 Char( 01 ) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_PAR12 Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output , 
    @OUT_NPASSOU Char( 01 )  output , 
    @OUT_NSALANT Float  output , 
    @OUT_NCOMPRAS Float  output , 
    @OUT_NREQCONS Float  output , 
    @OUT_NREQPROD Float  output , 
    @OUT_NREQTRANS Float  output , 
    @OUT_NPRODUCAO Float  output , 
    @OUT_NVENDAS Float  output , 
    @OUT_NREQOUTR Float  output , 
    @OUT_NDEVVENDAS Float  output , 
    @OUT_NDEVCOMPRS Float  output , 
    @OUT_NENTRTERC Float  output , 
    @OUT_NSAITERC Float  output , 
    @OUT_NSALDOATU Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cB1Cod Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cB2Cod Char( 15)
DECLARE @cB2Local Char( 2)
DECLARE @cTipo Char( 2)
DECLARE @nVINIRP1 Decimal( 14 , 2 )
DECLARE @nVINIRP2 Decimal( 14 , 2 )
DECLARE @nVINIRP3 Decimal( 14 , 2 )
DECLARE @nVINIRP4 Decimal( 14 , 2 )
DECLARE @nVINIRP5 Decimal( 14 , 2 )
DECLARE @nCM1 Decimal( 14 , 4 )
DECLARE @nCM2 Decimal( 14 , 4 )
DECLARE @nCM3 Decimal( 14 , 4 )
DECLARE @nCM4 Decimal( 14 , 4 )
DECLARE @nCM5 Decimal( 14 , 4 )
DECLARE @nCMRP1 Decimal( 14 , 4 )
DECLARE @nCMRP2 Decimal( 14 , 4 )
DECLARE @nCMRP3 Decimal( 14 , 4 )
DECLARE @nCMRP4 Decimal( 14 , 4 )
DECLARE @nCMRP5 Decimal( 14 , 4 )
DECLARE @nB2VATU1 Decimal( 14 , 2 )
DECLARE @nB2VATU2 Decimal( 14 , 2 )
DECLARE @nB2VATU3 Decimal( 14 , 2 )
DECLARE @nB2VATU4 Decimal( 14 , 2 )
DECLARE @nB2VATU5 Decimal( 14 , 2 )
DECLARE @nB2VFIM1 Decimal( 14 , 2 )
DECLARE @nB2VFIM2 Decimal( 14 , 2 )
DECLARE @nB2VFIM3 Decimal( 14 , 2 )
DECLARE @nB2VFIM4 Decimal( 14 , 2 )
DECLARE @nB2VFIM5 Decimal( 14 , 2 )
DECLARE @cAux VarChar( 03 )
DECLARE @OutResult VarChar( 01 )
DECLARE @nPassou VarChar( 01 )
DECLARE @cB1_CC Char( 01 )
DECLARE @nSaldoAtu Float
DECLARE @nSaldo01 Float
DECLARE @nSaldo02 Float
DECLARE @nSaldo03 Float
DECLARE @nSaldo04 Float
DECLARE @nSaldo05 Float
DECLARE @nSaldo06 Float
DECLARE @nSaldo07 Float
DECLARE @nCompras Float
DECLARE @nReqProd Float
DECLARE @nReqCons Float
DECLARE @nReqMNT Float
DECLARE @nProducao Float
DECLARE @nVendas Float
DECLARE @nReqTrans Float
DECLARE @nReqOutr Float
DECLARE @nDevVendas Float
DECLARE @nDevComprs Float
DECLARE @nEntrTerc Float
DECLARE @nSaiTerc Float
DECLARE @nCusto1 Float
DECLARE @nCusto2 Float
DECLARE @nCusto3 Float
DECLARE @nCusto4 Float
DECLARE @nCusto5 Float
DECLARE @nCusReq1 Float
DECLARE @nCusReq2 Float
DECLARE @nCusReq3 Float
DECLARE @nCusReq4 Float
DECLARE @nCusReq5 Float
BEGIN
   SET @nSaldoAtu  = 0 
   SET @nSaldo01  = 0 
   SET @nSaldo02  = 0 
   SET @nSaldo03  = 0 
   SET @nSaldo04  = 0 
   SET @nSaldo05  = 0 
   SET @nSaldo06  = 0 
   SET @nSaldo07  = 0 
   SET @nCompras  = 0 
   SET @nReqProd  = 0 
   SET @nReqCons  = 0 
   SET @nProducao  = 0 
   SET @nVendas  = 0 
   SET @nReqTrans  = 0 
   SET @nReqOutr  = 0 
   SET @nReqMNT  = 0 
   SET @nDevVendas  = 0 
   SET @nDevComprs  = 0 
   SET @nEntrTerc  = 0 
   SET @nSaiTerc  = 0 
   SET @nPassou  = '0' 
   SET @OUT_RESULTADO  = '0' 
   SET @cB1_CC  = '0' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_22_01 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   IF @IN_MV_PAR10  = '1' 
   BEGIN 
      SELECT @nSaldo02  = COALESCE ( SUM(B2_VATU1 ), 0 ), @nSaldo03  = COALESCE ( SUM(B2_VATU2 ), 0 ), @nSaldo04  = COALESCE ( SUM(B2_VATU3 ), 
             0 ), @nSaldo05  = COALESCE ( SUM(B2_VATU4 ), 0 ), @nSaldo06  = COALESCE ( SUM(B2_VATU5 ), 0 )
        FROM SB2010 SB2, SB1010 SB1
        WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB2.B2_COD  >= @IN_CCODDE  and SB2.B2_COD  <= @IN_CCODATE  and SB2.B2_LOCAL  >= @IN_LOCALDE 
         and SB2.B2_LOCAL  <= @IN_LOCALATE  and SB2.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SB2.B2_COD 
         and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
      SET @nSaldo02  = COALESCE ( @nSaldo02 , 0 )
      SET @nSaldo03  = COALESCE ( @nSaldo03 , 0 )
      SET @nSaldo04  = COALESCE ( @nSaldo04 , 0 )
      SET @nSaldo05  = COALESCE ( @nSaldo05 , 0 )
      SET @nSaldo06  = COALESCE ( @nSaldo06 , 0 )
      IF @IN_MV_PAR09  = '1' 
      BEGIN 
         SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo02 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '2' 
         BEGIN 
            SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo03 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '3' 
            BEGIN 
               SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo04 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '4' 
               BEGIN 
                  SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo05 
               END 
               ELSE 
               BEGIN 
                  IF @IN_MV_PAR09  = '5' 
                  BEGIN 
                     SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo06 
                  END 
               END 
            END 
         END 
      END 
      IF @nSaldoAtu  > 0 
      BEGIN 
         SET @nPassou  = '1' 
      END 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR10  = '2' 
      BEGIN 
         SELECT @nSaldo02  = COALESCE ( SUM(B2_VFIM1 ), 0 ), @nSaldo03  = COALESCE ( SUM(B2_VFIM2 ), 0 ), @nSaldo04  = COALESCE ( SUM(B2_VFIM3 ), 
                0 ), @nSaldo05  = COALESCE ( SUM(B2_VFIM4 ), 0 ), @nSaldo06  = COALESCE ( SUM(B2_VFIM5 ), 0 )
           FROM SB2010 SB2, SB1010 SB1
           WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB2.B2_COD  >= @IN_CCODDE  and SB2.B2_COD  <= @IN_CCODATE  and SB2.B2_LOCAL  >= @IN_LOCALDE 
            and SB2.B2_LOCAL  <= @IN_LOCALATE  and SB2.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB2.B2_COD  = SB1.B1_COD 
            and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
         SET @nSaldo02  = COALESCE ( @nSaldo02 , 0 )
         SET @nSaldo03  = COALESCE ( @nSaldo03 , 0 )
         SET @nSaldo04  = COALESCE ( @nSaldo04 , 0 )
         SET @nSaldo05  = COALESCE ( @nSaldo05 , 0 )
         SET @nSaldo06  = COALESCE ( @nSaldo06 , 0 )
         IF @IN_MV_PAR09  = '1' 
         BEGIN 
            SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo02 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '2' 
            BEGIN 
               SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo03 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '3' 
               BEGIN 
                  SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo04 
               END 
               ELSE 
               BEGIN 
                  IF @IN_MV_PAR09  = '4' 
                  BEGIN 
                     SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo05 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_MV_PAR09  = '5' 
                     BEGIN 
                        SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo06 
                     END 
                  END 
               END 
            END 
         END 
         IF @nSaldoAtu  > 0 
         BEGIN 
            SET @nPassou  = '1' 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR10  = '3' 
         BEGIN 
             
            -- Cursor declaration CUR_SB1
            DECLARE CUR_SB1 INSENSITIVE  CURSOR FOR 
            SELECT B1_FILIAL , B1_COD , B1_TIPO 
              FROM SB1010 
              WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  >= @IN_CCODDE  and B1_COD  <= @IN_CCODATE  and B1_TIPO  = @IN_CTIPO 
               and D_E_L_E_T_  = ' ' 
              ORDER BY B1_TIPO , B1_COD 
            FOR READ ONLY 
             
            OPEN CUR_SB1
            FETCH CUR_SB1 
             INTO @cFil_SB1 , @cB1Cod , @cTipo 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
                
               -- Cursor declaration CUR_SB2
               DECLARE CUR_SB2 INSENSITIVE  CURSOR FOR 
               SELECT B2_FILIAL , B2_COD , B2_LOCAL , B2_VATU1 , B2_VATU2 , B2_VATU3 , B2_VATU4 , B2_VATU5 , B2_VFIM1 , B2_VFIM2 , 
                      B2_VFIM3 , B2_VFIM4 , B2_VFIM5 
                 FROM SB2010 
                 WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cB1Cod  and B2_LOCAL  >= @IN_LOCALDE  and B2_LOCAL  <= @IN_LOCALATE 
                  and D_E_L_E_T_  = ' ' 
                 ORDER BY B2_FILIAL , B2_COD , B2_LOCAL 
               FOR READ ONLY 
                
               OPEN CUR_SB2
               FETCH CUR_SB2 
                INTO @cFil_SB2 , @cB2Cod , @cB2Local , @nB2VATU1 , @nB2VATU2 , @nB2VATU3 , @nB2VATU4 , @nB2VATU5 , @nB2VFIM1 , 
                      @nB2VFIM2 , @nB2VFIM3 , @nB2VFIM4 , @nB2VFIM5 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @cB1_CC  = '0' 
                  SELECT @cB1_CC  = '1' 
                    FROM SB1010 
                    WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @cB2Cod  and D_E_L_E_T_  = ' '  and B1_CCCUSTO  <> ' ' 
                  IF @IN_MV_PAR11  = '2'  and  (SUBSTRING ( @cB2Cod , 1 , 3 ) = 'MOD'  or COALESCE ( @cB1_CC , '0' ) = '1' 
                    ) 
                  BEGIN 
                     SET @cB1_CC  = '0' 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_MV_PAR10  = '3' 
                     BEGIN 
                        EXEC MAT006_22_01 @cB2Cod , @cB2Local , @IN_DATAFIM , '  ' , @IN_MV_LOCPROC , @IN_FILIALCOR , @IN_MV_D3SERVI , 
                               @IN_INTDL , @IN_MV_CQ , @IN_MV_WMSNEW , '0' , @nSaldo01 output , @nSaldo02 output , @nSaldo03 output , 
                               @nSaldo04 output , @nSaldo05 output , @nSaldo06 output , @nSaldo07 output , @nCM1 output , 
                               @nCM2 output , @nCM3 output , @nCM4 output , @nCM5 output , @nCMRP1 output , @nCMRP2 output , 
                               @nCMRP3 output , @nCMRP4 output , @nCMRP5 output , @nVINIRP1 output , @nVINIRP2 output , @nVINIRP3 output , 
                               @nVINIRP4 output , @nVINIRP5 output 
                        IF @IN_MV_PAR09  = '1' 
                        BEGIN 
                           SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo02 
                        END 
                        ELSE 
                        BEGIN 
                           IF @IN_MV_PAR09  = '2' 
                           BEGIN 
                              SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo03 
                           END 
                           ELSE 
                           BEGIN 
                              IF @IN_MV_PAR09  = '3' 
                              BEGIN 
                                 SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo04 
                              END 
                              ELSE 
                              BEGIN 
                                 IF @IN_MV_PAR09  = '4' 
                                 BEGIN 
                                    SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo05 
                                 END 
                                 ELSE 
                                 BEGIN 
                                    IF @IN_MV_PAR09  = '5' 
                                    BEGIN 
                                       SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo06 
                                    END 
                                 END 
                              END 
                           END 
                        END 
                     END 
                  END 
                  FETCH CUR_SB2 
                   INTO @cFil_SB2 , @cB2Cod , @cB2Local , @nB2VATU1 , @nB2VATU2 , @nB2VATU3 , @nB2VATU4 , @nB2VATU5 , @nB2VFIM1 , 
                         @nB2VFIM2 , @nB2VFIM3 , @nB2VFIM4 , @nB2VFIM5 
               END 
               CLOSE CUR_SB2
               DEALLOCATE CUR_SB2
               FETCH CUR_SB1 
                INTO @cFil_SB1 , @cB1Cod , @cTipo 
            END 
            IF @nSaldoAtu  > 0 
            BEGIN 
               SET @nPassou  = '1' 
            END 
            CLOSE CUR_SB1
            DEALLOCATE CUR_SB1
         END 
      END 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D1_CUSTO ), 0 ), @nCusto2  = COALESCE ( SUM(D1_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D1_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D1_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D1_CUSTO5 ), 0 )
     FROM SD1010 SD1, SF4010 SF4, SB1010 SB1
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  >= @IN_CCODDE  and SD1.D1_COD  <= @IN_CCODATE  and SD1.D1_LOCAL  >= @IN_LOCALDE 
      and SD1.D1_LOCAL  <= @IN_LOCALATE  and SD1.D1_DTDIGIT  >= @IN_DATAINI  and SD1.D1_DTDIGIT  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SF4.F4_CODIGO  = SD1.D1_TES  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SF4.D_E_L_E_T_  = ' ' 
      and SD1.D1_TIPO  = 'D'  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = '         '  and SD1.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD1.D1_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nDevVendas  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nDevVendas  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nDevVendas  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nDevVendas  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nDevVendas  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nDevVendas  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D1_CUSTO ), 0 ), @nCusto2  = COALESCE ( SUM(D1_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D1_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D1_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D1_CUSTO5 ), 0 )
     FROM SD1010 SD1, SF4010 SF4, SB1010 SB1
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  >= @IN_CCODDE  and SD1.D1_COD  <= @IN_CCODATE  and SD1.D1_LOCAL  >= @IN_LOCALDE 
      and SD1.D1_LOCAL  <= @IN_LOCALATE  and SD1.D1_DTDIGIT  >= @IN_DATAINI  and SD1.D1_DTDIGIT  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D1_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SD1.D1_TIPO  <> 'D' 
      and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = '         '  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD1.D1_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
     
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nCompras  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nCompras  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nCompras  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nCompras  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nCompras  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nCompras  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D1_CUSTO ), 0 ), @nCusto2  = COALESCE ( SUM(D1_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D1_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D1_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D1_CUSTO5 ), 0 )
     FROM SD1010 SD1, SF4010 SF4, SB1010 SB1
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  >= @IN_CCODDE  and SD1.D1_COD  <= @IN_CCODATE  and SD1.D1_LOCAL  >= @IN_LOCALDE 
      and SD1.D1_LOCAL  <= @IN_LOCALATE  and SD1.D1_DTDIGIT  >= @IN_DATAINI  and SD1.D1_DTDIGIT  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D1_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( 'D' , 'R'  )  and SD1.D1_ORIGLAN  <> 'LF' 
      and SD1.D1_REMITO  = '         '  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD1.D1_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nEntrTerc  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nEntrTerc  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nEntrTerc  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nEntrTerc  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nEntrTerc  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nEntrTerc  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D2_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D2_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D2_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D2_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D2_CUSTO5 ), 0 )
     FROM SD2010 SD2, SF4010 SF4, SB1010 SB1
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  >= @IN_CCODDE  and SD2.D2_COD  <= @IN_CCODATE  and SD2.D2_LOCAL  >= @IN_LOCALDE 
      and SD2.D2_LOCAL  <= @IN_LOCALATE  and SD2.D2_EMISSAO  >= @IN_DATAINI  and SD2.D2_EMISSAO  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SD2.D2_TIPO  = 'D' 
      and SD2.D2_ORIGLAN  <> 'LF'  and SD2.D2_REMITO  = '         '  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD2.D2_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
     
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nDevComprs  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nDevComprs  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nDevComprs  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nDevComprs  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nDevComprs  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nDevComprs  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D2_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D2_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D2_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D2_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D2_CUSTO5 ), 0 )
     FROM SD2010 SD2, SF4010 SF4, SB1010 SB1
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  >= @IN_CCODDE  and SD2.D2_COD  <= @IN_CCODATE  and SD2.D2_LOCAL  >= @IN_LOCALDE 
      and SD2.D2_LOCAL  <= @IN_LOCALATE  and SD2.D2_EMISSAO  >= @IN_DATAINI  and SD2.D2_EMISSAO  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SD2.D2_TIPO  <> 'D' 
      and SD2.D2_ORIGLAN  <> 'LF'  and SD2.D2_REMITO  = '         '  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD2.D2_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
     
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nVendas  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nVendas  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nVendas  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nVendas  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nVendas  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nVendas  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D2_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D2_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D2_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D2_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D2_CUSTO5 ), 0 )
     FROM SD2010 SD2, SF4010 SF4, SB1010 SB1
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  >= @IN_CCODDE  and SD2.D2_COD  <= @IN_CCODATE  and SD2.D2_LOCAL  >= @IN_LOCALDE 
      and SD2.D2_LOCAL  <= @IN_LOCALATE  and SD2.D2_EMISSAO  >= @IN_DATAINI  and SD2.D2_EMISSAO  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( 'D' , 'R'  )  and SD2.D2_ORIGLAN  <> 'LF' 
      and SD2.D2_REMITO  = '         '  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD2.D2_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nSaiTerc  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nSaiTerc  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nSaiTerc  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nSaiTerc  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nSaiTerc  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nSaiTerc  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_ESTORNO  <> 'S' 
      and SD3.D3_CF IN ( 'PR0' , 'PR1'  )  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nProducao  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nProducao  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nProducao  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nProducao  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nProducao  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nProducao  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_ESTORNO  <> 'S' 
      and SD3.D3_CF  = 'DE4'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO 
      and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqTrans  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqTrans  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqTrans  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqTrans  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqTrans  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nReqTrans  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_ESTORNO  <> 'S' 
      and SD3.D3_CF  = 'RE4'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO 
      and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqTrans  = @nReqTrans  - @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqTrans  = @nReqTrans  - @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqTrans  = @nReqTrans  - @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqTrans  = @nReqTrans  - @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqTrans  = @nReqTrans  - @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nReqTrans  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  <> '             ' 
      and SUBSTRING ( D3_OP , 7 , 2 ) <> 'OS'  and SD3.D3_CF  <> '             '  and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1' 
      and SD3.D3_TM  > '500'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  <> '             ' 
      and SUBSTRING ( D3_OP , 7 , 2 ) <> 'OS'  and SD3.D3_CF  <> '             '  and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1' 
      and SD3.D3_TM  < '501'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqProd  = @nReqProd  +  (@nCusReq1  - @nCusto1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqProd  = @nReqProd  +  (@nCusReq2  - @nCusto2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqProd  = @nReqProd  +  (@nCusReq3  - @nCusto3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqProd  = @nReqProd  +  (@nCusReq4  - @nCusto4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqProd  = @nReqProd  +  (@nCusReq5  - @nCusto5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqProd  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1'  and SD3.D3_CF  <> 'RE4'  and SD3.D3_CF  <> 'DE4'  and SD3.D3_TM  > '500' 
      and SUBSTRING ( D3_CF , 3 , 1 ) <> '3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1'  and SD3.D3_CF  <> 'RE4'  and SD3.D3_CF  <> 'DE4'  and SD3.D3_TM  < '501' 
      and SUBSTRING ( D3_CF , 3 , 1 ) <> '3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqCons  = @nReqCons  +  (@nCusReq1  - @nCusto1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqCons  = @nReqCons  +  (@nCusReq2  - @nCusto2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqCons  = @nReqCons  +  (@nCusReq3  - @nCusto3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqCons  = @nReqCons  +  (@nCusReq4  - @nCusto4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqCons  = @nReqCons  +  (@nCusReq5  - @nCusto5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqCons  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  = 'RE3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  = 'DE3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqOutr  = @nReqOutr  +  (@nCusReq1  - @nCusto1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqOutr  = @nReqOutr  +  (@nCusReq2  - @nCusto2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqOutr  = @nReqOutr  +  (@nCusReq3  - @nCusto3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqOutr  = @nReqOutr  +  (@nCusReq4  - @nCusto4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqOutr  = @nReqOutr  +  (@nCusReq5  - @nCusto5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqOutr  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SUBSTRING ( D3_OP , 
          7 , 2 ) = 'OS'  and SD3.D3_TM  > '500'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3010 SD3, SB1010 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SUBSTRING ( D3_OP , 
          7 , 2 ) = 'OS'  and SD3.D3_TM  < '501'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqMNT  = @nReqMNT  +  (@nCusto1  - @nCusReq1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqMNT  = @nReqMNT  +  (@nCusto2  - @nCusReq2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqMNT  = @nReqMNT  +  (@nCusto3  - @nCusReq3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqMNT  = @nReqMNT  +  (@nCusto4  - @nCusReq4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqMNT  = @nReqMNT  +  (@nCusto5  - @nCusReq5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqMNT  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   IF @IN_MV_PAR12  = '1' 
   BEGIN 
      SET @nReqProd  = @nReqProd  - @nReqMNT 
      SET @nReqMNT  = 0 
   END 
   SET @OUT_RESULTADO  = '1' 
   SET @OUT_NPASSOU  = @nPassou 
   SET @OUT_NSALANT  = @nSaldoAtu  - @nCompras  - @nReqProd  - @nReqCons  - @nProducao  + @nVendas  - @nReqTrans  - @nReqOutr  - @nDevVendas  + @nDevComprs  - @nEntrTerc  + @nSaiTerc 
     
   SET @OUT_NCOMPRAS  = @nCompras 
   SET @OUT_NREQCONS  = @nReqCons 
   SET @OUT_NREQPROD  = @nReqProd 
   SET @OUT_NREQTRANS  = @nReqTrans 
   SET @OUT_NPRODUCAO  = @nProducao 
   SET @OUT_NVENDAS  = @nVendas 
   SET @OUT_NREQOUTR  = @nReqOutr 
   SET @OUT_NDEVVENDAS  = @nDevVendas 
   SET @OUT_NDEVCOMPRS  = @nDevComprs 
   SET @OUT_NENTRTERC  = @nEntrTerc 
   SET @OUT_NSAITERC  = @nSaiTerc 
   SET @OUT_NSALDOATU  = @nSaldoAtu 
END
GO

GO
--SqlScripter----[dbo].[MAT056_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT056_22_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT056_22_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT056_22_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CCODDE Char( 15) , 
    @IN_CCODATE Char( 15) , 
    @IN_LOCALDE Char( 2) , 
    @IN_LOCALATE Char( 2) , 
    @IN_CTIPO Char( 2) , 
    @IN_MV_LOCPROC Char( 2) , 
    @IN_MV_CQ Char( 2) , 
    @IN_MV_WMSNEW Char( 2) , 
    @IN_DATAINI Char( 08 ) , 
    @IN_DATAFIM Char( 08 ) , 
    @IN_MV_PAR09 Char( 01 ) , 
    @IN_MV_PAR10 Char( 01 ) , 
    @IN_MV_PAR11 Char( 01 ) , 
    @IN_MV_D3SERVI Char( 01 ) , 
    @IN_INTDL Char( 01 ) , 
    @IN_MV_PAR12 Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output , 
    @OUT_NPASSOU Char( 01 )  output , 
    @OUT_NSALANT Float  output , 
    @OUT_NCOMPRAS Float  output , 
    @OUT_NREQCONS Float  output , 
    @OUT_NREQPROD Float  output , 
    @OUT_NREQTRANS Float  output , 
    @OUT_NPRODUCAO Float  output , 
    @OUT_NVENDAS Float  output , 
    @OUT_NREQOUTR Float  output , 
    @OUT_NDEVVENDAS Float  output , 
    @OUT_NDEVCOMPRS Float  output , 
    @OUT_NENTRTERC Float  output , 
    @OUT_NSAITERC Float  output , 
    @OUT_NSALDOATU Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cFil_SB2 Char( 2)
DECLARE @cFil_SD1 Char( 2)
DECLARE @cFil_SD2 Char( 2)
DECLARE @cFil_SD3 Char( 2)
DECLARE @cFil_SF4 Char( 2)
DECLARE @cB1Cod Char( 15)
DECLARE @cLocal Char( 2)
DECLARE @cB2Cod Char( 15)
DECLARE @cB2Local Char( 2)
DECLARE @cTipo Char( 2)
DECLARE @nVINIRP1 Decimal( 14 , 2 )
DECLARE @nVINIRP2 Decimal( 14 , 2 )
DECLARE @nVINIRP3 Decimal( 14 , 2 )
DECLARE @nVINIRP4 Decimal( 14 , 2 )
DECLARE @nVINIRP5 Decimal( 14 , 2 )
DECLARE @nCM1 Decimal( 14 , 4 )
DECLARE @nCM2 Decimal( 14 , 4 )
DECLARE @nCM3 Decimal( 14 , 4 )
DECLARE @nCM4 Decimal( 14 , 4 )
DECLARE @nCM5 Decimal( 14 , 4 )
DECLARE @nCMRP1 Decimal( 14 , 4 )
DECLARE @nCMRP2 Decimal( 14 , 4 )
DECLARE @nCMRP3 Decimal( 14 , 4 )
DECLARE @nCMRP4 Decimal( 14 , 4 )
DECLARE @nCMRP5 Decimal( 14 , 4 )
DECLARE @nB2VATU1 Decimal( 14 , 2 )
DECLARE @nB2VATU2 Decimal( 14 , 2 )
DECLARE @nB2VATU3 Decimal( 14 , 2 )
DECLARE @nB2VATU4 Decimal( 14 , 2 )
DECLARE @nB2VATU5 Decimal( 14 , 2 )
DECLARE @nB2VFIM1 Decimal( 14 , 2 )
DECLARE @nB2VFIM2 Decimal( 14 , 2 )
DECLARE @nB2VFIM3 Decimal( 14 , 2 )
DECLARE @nB2VFIM4 Decimal( 14 , 2 )
DECLARE @nB2VFIM5 Decimal( 14 , 2 )
DECLARE @cAux VarChar( 03 )
DECLARE @OutResult VarChar( 01 )
DECLARE @nPassou VarChar( 01 )
DECLARE @cB1_CC Char( 01 )
DECLARE @nSaldoAtu Float
DECLARE @nSaldo01 Float
DECLARE @nSaldo02 Float
DECLARE @nSaldo03 Float
DECLARE @nSaldo04 Float
DECLARE @nSaldo05 Float
DECLARE @nSaldo06 Float
DECLARE @nSaldo07 Float
DECLARE @nCompras Float
DECLARE @nReqProd Float
DECLARE @nReqCons Float
DECLARE @nReqMNT Float
DECLARE @nProducao Float
DECLARE @nVendas Float
DECLARE @nReqTrans Float
DECLARE @nReqOutr Float
DECLARE @nDevVendas Float
DECLARE @nDevComprs Float
DECLARE @nEntrTerc Float
DECLARE @nSaiTerc Float
DECLARE @nCusto1 Float
DECLARE @nCusto2 Float
DECLARE @nCusto3 Float
DECLARE @nCusto4 Float
DECLARE @nCusto5 Float
DECLARE @nCusReq1 Float
DECLARE @nCusReq2 Float
DECLARE @nCusReq3 Float
DECLARE @nCusReq4 Float
DECLARE @nCusReq5 Float
BEGIN
   SET @nSaldoAtu  = 0 
   SET @nSaldo01  = 0 
   SET @nSaldo02  = 0 
   SET @nSaldo03  = 0 
   SET @nSaldo04  = 0 
   SET @nSaldo05  = 0 
   SET @nSaldo06  = 0 
   SET @nSaldo07  = 0 
   SET @nCompras  = 0 
   SET @nReqProd  = 0 
   SET @nReqCons  = 0 
   SET @nProducao  = 0 
   SET @nVendas  = 0 
   SET @nReqTrans  = 0 
   SET @nReqOutr  = 0 
   SET @nReqMNT  = 0 
   SET @nDevVendas  = 0 
   SET @nDevComprs  = 0 
   SET @nEntrTerc  = 0 
   SET @nSaiTerc  = 0 
   SET @nPassou  = '0' 
   SET @OUT_RESULTADO  = '0' 
   SET @cB1_CC  = '0' 
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SET @cAux  = 'SB2' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SB2 output 
   SET @cAux  = 'SD1' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SD1 output 
   SET @cAux  = 'SD2' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SD2 output 
   SET @cAux  = 'SD3' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SD3 output 
   SET @cAux  = 'SF4' 
   EXEC XFILIAL_22_02 @cAux , @IN_FILIALCOR , @cFil_SF4 output 
   IF @IN_MV_PAR10  = '1' 
   BEGIN 
      SELECT @nSaldo02  = COALESCE ( SUM(B2_VATU1 ), 0 ), @nSaldo03  = COALESCE ( SUM(B2_VATU2 ), 0 ), @nSaldo04  = COALESCE ( SUM(B2_VATU3 ), 
             0 ), @nSaldo05  = COALESCE ( SUM(B2_VATU4 ), 0 ), @nSaldo06  = COALESCE ( SUM(B2_VATU5 ), 0 )
        FROM SB2030 SB2, SB1030 SB1
        WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB2.B2_COD  >= @IN_CCODDE  and SB2.B2_COD  <= @IN_CCODATE  and SB2.B2_LOCAL  >= @IN_LOCALDE 
         and SB2.B2_LOCAL  <= @IN_LOCALATE  and SB2.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SB2.B2_COD 
         and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
      SET @nSaldo02  = COALESCE ( @nSaldo02 , 0 )
      SET @nSaldo03  = COALESCE ( @nSaldo03 , 0 )
      SET @nSaldo04  = COALESCE ( @nSaldo04 , 0 )
      SET @nSaldo05  = COALESCE ( @nSaldo05 , 0 )
      SET @nSaldo06  = COALESCE ( @nSaldo06 , 0 )
      IF @IN_MV_PAR09  = '1' 
      BEGIN 
         SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo02 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '2' 
         BEGIN 
            SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo03 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '3' 
            BEGIN 
               SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo04 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '4' 
               BEGIN 
                  SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo05 
               END 
               ELSE 
               BEGIN 
                  IF @IN_MV_PAR09  = '5' 
                  BEGIN 
                     SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo06 
                  END 
               END 
            END 
         END 
      END 
      IF @nSaldoAtu  > 0 
      BEGIN 
         SET @nPassou  = '1' 
      END 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR10  = '2' 
      BEGIN 
         SELECT @nSaldo02  = COALESCE ( SUM(B2_VFIM1 ), 0 ), @nSaldo03  = COALESCE ( SUM(B2_VFIM2 ), 0 ), @nSaldo04  = COALESCE ( SUM(B2_VFIM3 ), 
                0 ), @nSaldo05  = COALESCE ( SUM(B2_VFIM4 ), 0 ), @nSaldo06  = COALESCE ( SUM(B2_VFIM5 ), 0 )
           FROM SB2030 SB2, SB1030 SB1
           WHERE SB2.B2_FILIAL  = @cFil_SB2  and SB2.B2_COD  >= @IN_CCODDE  and SB2.B2_COD  <= @IN_CCODATE  and SB2.B2_LOCAL  >= @IN_LOCALDE 
            and SB2.B2_LOCAL  <= @IN_LOCALATE  and SB2.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB2.B2_COD  = SB1.B1_COD 
            and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
         SET @nSaldo02  = COALESCE ( @nSaldo02 , 0 )
         SET @nSaldo03  = COALESCE ( @nSaldo03 , 0 )
         SET @nSaldo04  = COALESCE ( @nSaldo04 , 0 )
         SET @nSaldo05  = COALESCE ( @nSaldo05 , 0 )
         SET @nSaldo06  = COALESCE ( @nSaldo06 , 0 )
         IF @IN_MV_PAR09  = '1' 
         BEGIN 
            SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo02 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '2' 
            BEGIN 
               SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo03 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '3' 
               BEGIN 
                  SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo04 
               END 
               ELSE 
               BEGIN 
                  IF @IN_MV_PAR09  = '4' 
                  BEGIN 
                     SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo05 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_MV_PAR09  = '5' 
                     BEGIN 
                        SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo06 
                     END 
                  END 
               END 
            END 
         END 
         IF @nSaldoAtu  > 0 
         BEGIN 
            SET @nPassou  = '1' 
         END 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR10  = '3' 
         BEGIN 
             
            -- Cursor declaration CUR_SB1
            DECLARE CUR_SB1 INSENSITIVE  CURSOR FOR 
            SELECT B1_FILIAL , B1_COD , B1_TIPO 
              FROM SB1030 
              WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  >= @IN_CCODDE  and B1_COD  <= @IN_CCODATE  and B1_TIPO  = @IN_CTIPO 
               and D_E_L_E_T_  = ' ' 
              ORDER BY B1_TIPO , B1_COD 
            FOR READ ONLY 
             
            OPEN CUR_SB1
            FETCH CUR_SB1 
             INTO @cFil_SB1 , @cB1Cod , @cTipo 
            WHILE ( (@@fetch_status  = 0 ) )
            BEGIN
                
               -- Cursor declaration CUR_SB2
               DECLARE CUR_SB2 INSENSITIVE  CURSOR FOR 
               SELECT B2_FILIAL , B2_COD , B2_LOCAL , B2_VATU1 , B2_VATU2 , B2_VATU3 , B2_VATU4 , B2_VATU5 , B2_VFIM1 , B2_VFIM2 , 
                      B2_VFIM3 , B2_VFIM4 , B2_VFIM5 
                 FROM SB2030 
                 WHERE B2_FILIAL  = @cFil_SB2  and B2_COD  = @cB1Cod  and B2_LOCAL  >= @IN_LOCALDE  and B2_LOCAL  <= @IN_LOCALATE 
                  and D_E_L_E_T_  = ' ' 
                 ORDER BY B2_FILIAL , B2_COD , B2_LOCAL 
               FOR READ ONLY 
                
               OPEN CUR_SB2
               FETCH CUR_SB2 
                INTO @cFil_SB2 , @cB2Cod , @cB2Local , @nB2VATU1 , @nB2VATU2 , @nB2VATU3 , @nB2VATU4 , @nB2VATU5 , @nB2VFIM1 , 
                      @nB2VFIM2 , @nB2VFIM3 , @nB2VFIM4 , @nB2VFIM5 
               WHILE ( (@@fetch_status  = 0 ) )
               BEGIN
                  SET @cB1_CC  = '0' 
                  SELECT @cB1_CC  = '1' 
                    FROM SB1030 
                    WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @cB2Cod  and D_E_L_E_T_  = ' '  and B1_CCCUSTO  <> ' ' 
                  IF @IN_MV_PAR11  = '2'  and  (SUBSTRING ( @cB2Cod , 1 , 3 ) = 'MOD'  or COALESCE ( @cB1_CC , '0' ) = '1' 
                    ) 
                  BEGIN 
                     SET @cB1_CC  = '0' 
                  END 
                  ELSE 
                  BEGIN 
                     IF @IN_MV_PAR10  = '3' 
                     BEGIN 
                        EXEC MAT006_22_02 @cB2Cod , @cB2Local , @IN_DATAFIM , '  ' , @IN_MV_LOCPROC , @IN_FILIALCOR , @IN_MV_D3SERVI , 
                               @IN_INTDL , @IN_MV_CQ , @IN_MV_WMSNEW , '0' , @nSaldo01 output , @nSaldo02 output , @nSaldo03 output , 
                               @nSaldo04 output , @nSaldo05 output , @nSaldo06 output , @nSaldo07 output , @nCM1 output , 
                               @nCM2 output , @nCM3 output , @nCM4 output , @nCM5 output , @nCMRP1 output , @nCMRP2 output , 
                               @nCMRP3 output , @nCMRP4 output , @nCMRP5 output , @nVINIRP1 output , @nVINIRP2 output , @nVINIRP3 output , 
                               @nVINIRP4 output , @nVINIRP5 output 
                        IF @IN_MV_PAR09  = '1' 
                        BEGIN 
                           SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo02 
                        END 
                        ELSE 
                        BEGIN 
                           IF @IN_MV_PAR09  = '2' 
                           BEGIN 
                              SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo03 
                           END 
                           ELSE 
                           BEGIN 
                              IF @IN_MV_PAR09  = '3' 
                              BEGIN 
                                 SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo04 
                              END 
                              ELSE 
                              BEGIN 
                                 IF @IN_MV_PAR09  = '4' 
                                 BEGIN 
                                    SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo05 
                                 END 
                                 ELSE 
                                 BEGIN 
                                    IF @IN_MV_PAR09  = '5' 
                                    BEGIN 
                                       SET @nSaldoAtu  = @nSaldoAtu  + @nSaldo06 
                                    END 
                                 END 
                              END 
                           END 
                        END 
                     END 
                  END 
                  FETCH CUR_SB2 
                   INTO @cFil_SB2 , @cB2Cod , @cB2Local , @nB2VATU1 , @nB2VATU2 , @nB2VATU3 , @nB2VATU4 , @nB2VATU5 , @nB2VFIM1 , 
                         @nB2VFIM2 , @nB2VFIM3 , @nB2VFIM4 , @nB2VFIM5 
               END 
               CLOSE CUR_SB2
               DEALLOCATE CUR_SB2
               FETCH CUR_SB1 
                INTO @cFil_SB1 , @cB1Cod , @cTipo 
            END 
            IF @nSaldoAtu  > 0 
            BEGIN 
               SET @nPassou  = '1' 
            END 
            CLOSE CUR_SB1
            DEALLOCATE CUR_SB1
         END 
      END 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D1_CUSTO ), 0 ), @nCusto2  = COALESCE ( SUM(D1_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D1_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D1_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D1_CUSTO5 ), 0 )
     FROM SD1030 SD1, SF4030 SF4, SB1030 SB1
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  >= @IN_CCODDE  and SD1.D1_COD  <= @IN_CCODATE  and SD1.D1_LOCAL  >= @IN_LOCALDE 
      and SD1.D1_LOCAL  <= @IN_LOCALATE  and SD1.D1_DTDIGIT  >= @IN_DATAINI  and SD1.D1_DTDIGIT  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SF4.F4_CODIGO  = SD1.D1_TES  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SF4.D_E_L_E_T_  = ' ' 
      and SD1.D1_TIPO  = 'D'  and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = '         '  and SD1.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD1.D1_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nDevVendas  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nDevVendas  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nDevVendas  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nDevVendas  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nDevVendas  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nDevVendas  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D1_CUSTO ), 0 ), @nCusto2  = COALESCE ( SUM(D1_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D1_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D1_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D1_CUSTO5 ), 0 )
     FROM SD1030 SD1, SF4030 SF4, SB1030 SB1
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  >= @IN_CCODDE  and SD1.D1_COD  <= @IN_CCODATE  and SD1.D1_LOCAL  >= @IN_LOCALDE 
      and SD1.D1_LOCAL  <= @IN_LOCALATE  and SD1.D1_DTDIGIT  >= @IN_DATAINI  and SD1.D1_DTDIGIT  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D1_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SD1.D1_TIPO  <> 'D' 
      and SD1.D1_ORIGLAN  <> 'LF'  and SD1.D1_REMITO  = '         '  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD1.D1_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
     
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nCompras  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nCompras  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nCompras  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nCompras  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nCompras  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nCompras  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D1_CUSTO ), 0 ), @nCusto2  = COALESCE ( SUM(D1_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D1_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D1_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D1_CUSTO5 ), 0 )
     FROM SD1030 SD1, SF4030 SF4, SB1030 SB1
     WHERE SD1.D1_FILIAL  = @cFil_SD1  and SD1.D1_COD  >= @IN_CCODDE  and SD1.D1_COD  <= @IN_CCODATE  and SD1.D1_LOCAL  >= @IN_LOCALDE 
      and SD1.D1_LOCAL  <= @IN_LOCALATE  and SD1.D1_DTDIGIT  >= @IN_DATAINI  and SD1.D1_DTDIGIT  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD1.D1_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( 'D' , 'R'  )  and SD1.D1_ORIGLAN  <> 'LF' 
      and SD1.D1_REMITO  = '         '  and SD1.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD1.D1_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nEntrTerc  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nEntrTerc  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nEntrTerc  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nEntrTerc  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nEntrTerc  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nEntrTerc  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D2_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D2_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D2_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D2_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D2_CUSTO5 ), 0 )
     FROM SD2030 SD2, SF4030 SF4, SB1030 SB1
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  >= @IN_CCODDE  and SD2.D2_COD  <= @IN_CCODATE  and SD2.D2_LOCAL  >= @IN_LOCALDE 
      and SD2.D2_LOCAL  <= @IN_LOCALATE  and SD2.D2_EMISSAO  >= @IN_DATAINI  and SD2.D2_EMISSAO  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SD2.D2_TIPO  = 'D' 
      and SD2.D2_ORIGLAN  <> 'LF'  and SD2.D2_REMITO  = '         '  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD2.D2_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
     
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nDevComprs  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nDevComprs  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nDevComprs  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nDevComprs  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nDevComprs  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nDevComprs  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D2_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D2_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D2_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D2_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D2_CUSTO5 ), 0 )
     FROM SD2030 SD2, SF4030 SF4, SB1030 SB1
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  >= @IN_CCODDE  and SD2.D2_COD  <= @IN_CCODATE  and SD2.D2_LOCAL  >= @IN_LOCALDE 
      and SD2.D2_LOCAL  <= @IN_LOCALATE  and SD2.D2_EMISSAO  >= @IN_DATAINI  and SD2.D2_EMISSAO  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( ' ' , 'N'  )  and SD2.D2_TIPO  <> 'D' 
      and SD2.D2_ORIGLAN  <> 'LF'  and SD2.D2_REMITO  = '         '  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' ' 
      and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD2.D2_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
     
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nVendas  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nVendas  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nVendas  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nVendas  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nVendas  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nVendas  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D2_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D2_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D2_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D2_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D2_CUSTO5 ), 0 )
     FROM SD2030 SD2, SF4030 SF4, SB1030 SB1
     WHERE SD2.D2_FILIAL  = @cFil_SD2  and SD2.D2_COD  >= @IN_CCODDE  and SD2.D2_COD  <= @IN_CCODATE  and SD2.D2_LOCAL  >= @IN_LOCALDE 
      and SD2.D2_LOCAL  <= @IN_LOCALATE  and SD2.D2_EMISSAO  >= @IN_DATAINI  and SD2.D2_EMISSAO  < @IN_DATAFIM  and SF4.F4_FILIAL  = @cFil_SF4 
      and SD2.D2_TES  = SF4.F4_CODIGO  and SF4.F4_ESTOQUE  = 'S'  and SF4.F4_PODER3 IN ( 'D' , 'R'  )  and SD2.D2_ORIGLAN  <> 'LF' 
      and SD2.D2_REMITO  = '         '  and SD2.D_E_L_E_T_  = ' '  and SF4.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD2.D2_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nSaiTerc  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nSaiTerc  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nSaiTerc  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nSaiTerc  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nSaiTerc  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nSaiTerc  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_ESTORNO  <> 'S' 
      and SD3.D3_CF IN ( 'PR0' , 'PR1'  )  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nProducao  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nProducao  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nProducao  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nProducao  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nProducao  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nProducao  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_ESTORNO  <> 'S' 
      and SD3.D3_CF  = 'DE4'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO 
      and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqTrans  = @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqTrans  = @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqTrans  = @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqTrans  = @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqTrans  = @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nReqTrans  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_ESTORNO  <> 'S' 
      and SD3.D3_CF  = 'RE4'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO 
      and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqTrans  = @nReqTrans  - @nCusto1 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqTrans  = @nReqTrans  - @nCusto2 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqTrans  = @nReqTrans  - @nCusto3 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqTrans  = @nReqTrans  - @nCusto4 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqTrans  = @nReqTrans  - @nCusto5 
               END 
            END 
         END 
      END 
   END 
   IF @nReqTrans  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  <> '             ' 
      and SUBSTRING ( D3_OP , 7 , 2 ) <> 'OS'  and SD3.D3_CF  <> '             '  and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1' 
      and SD3.D3_TM  > '500'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  <> '             ' 
      and SUBSTRING ( D3_OP , 7 , 2 ) <> 'OS'  and SD3.D3_CF  <> '             '  and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1' 
      and SD3.D3_TM  < '501'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqProd  = @nReqProd  +  (@nCusReq1  - @nCusto1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqProd  = @nReqProd  +  (@nCusReq2  - @nCusto2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqProd  = @nReqProd  +  (@nCusReq3  - @nCusto3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqProd  = @nReqProd  +  (@nCusReq4  - @nCusto4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqProd  = @nReqProd  +  (@nCusReq5  - @nCusto5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqProd  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1'  and SD3.D3_CF  <> 'RE4'  and SD3.D3_CF  <> 'DE4'  and SD3.D3_TM  > '500' 
      and SUBSTRING ( D3_CF , 3 , 1 ) <> '3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  <> 'PR0'  and SD3.D3_CF  <> 'PR1'  and SD3.D3_CF  <> 'RE4'  and SD3.D3_CF  <> 'DE4'  and SD3.D3_TM  < '501' 
      and SUBSTRING ( D3_CF , 3 , 1 ) <> '3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqCons  = @nReqCons  +  (@nCusReq1  - @nCusto1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqCons  = @nReqCons  +  (@nCusReq2  - @nCusto2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqCons  = @nReqCons  +  (@nCusReq3  - @nCusto3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqCons  = @nReqCons  +  (@nCusReq4  - @nCusto4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqCons  = @nReqCons  +  (@nCusReq5  - @nCusto5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqCons  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  = 'RE3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SD3.D3_OP  = '             ' 
      and SD3.D3_CF  = 'DE3'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1  and SB1.B1_COD  = SD3.D3_COD 
      and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqOutr  = @nReqOutr  +  (@nCusReq1  - @nCusto1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqOutr  = @nReqOutr  +  (@nCusReq2  - @nCusto2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqOutr  = @nReqOutr  +  (@nCusReq3  - @nCusto3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqOutr  = @nReqOutr  +  (@nCusReq4  - @nCusto4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqOutr  = @nReqOutr  +  (@nCusReq5  - @nCusto5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqOutr  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   SELECT @nCusto1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusto2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusto3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusto4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusto5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SUBSTRING ( D3_OP , 
          7 , 2 ) = 'OS'  and SD3.D3_TM  > '500'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusto1  = COALESCE ( @nCusto1 , 0 )
   SET @nCusto2  = COALESCE ( @nCusto2 , 0 )
   SET @nCusto3  = COALESCE ( @nCusto3 , 0 )
   SET @nCusto4  = COALESCE ( @nCusto4 , 0 )
   SET @nCusto5  = COALESCE ( @nCusto5 , 0 )
   SELECT @nCusReq1  = COALESCE ( SUM(D3_CUSTO1 ), 0 ), @nCusReq2  = COALESCE ( SUM(D3_CUSTO2 ), 0 ), @nCusReq3  = COALESCE ( SUM(D3_CUSTO3 ), 
          0 ), @nCusReq4  = COALESCE ( SUM(D3_CUSTO4 ), 0 ), @nCusReq5  = COALESCE ( SUM(D3_CUSTO5 ), 0 )
     FROM SD3030 SD3, SB1030 SB1
     WHERE SD3.D3_FILIAL  = @cFil_SD3  and SD3.D3_COD  >= @IN_CCODDE  and SD3.D3_COD  <= @IN_CCODATE  and SD3.D3_LOCAL  >= @IN_LOCALDE 
      and SD3.D3_LOCAL  <= @IN_LOCALATE  and SD3.D3_EMISSAO  >= @IN_DATAINI  and SD3.D3_EMISSAO  < @IN_DATAFIM  and SUBSTRING ( D3_OP , 
          7 , 2 ) = 'OS'  and SD3.D3_TM  < '501'  and SD3.D3_ESTORNO  <> 'S'  and SD3.D_E_L_E_T_  = ' '  and SB1.B1_FILIAL  = @cFil_SB1 
      and SB1.B1_COD  = SD3.D3_COD  and SB1.B1_TIPO  = @IN_CTIPO  and SB1.D_E_L_E_T_  = ' ' 
   SET @nCusReq1  = COALESCE ( @nCusReq1 , 0 )
   SET @nCusReq2  = COALESCE ( @nCusReq2 , 0 )
   SET @nCusReq3  = COALESCE ( @nCusReq3 , 0 )
   SET @nCusReq4  = COALESCE ( @nCusReq4 , 0 )
   SET @nCusReq5  = COALESCE ( @nCusReq5 , 0 )
   IF @IN_MV_PAR09  = '1' 
   BEGIN 
      SET @nReqMNT  = @nReqMNT  +  (@nCusto1  - @nCusReq1 ) 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PAR09  = '2' 
      BEGIN 
         SET @nReqMNT  = @nReqMNT  +  (@nCusto2  - @nCusReq2 ) 
      END 
      ELSE 
      BEGIN 
         IF @IN_MV_PAR09  = '3' 
         BEGIN 
            SET @nReqMNT  = @nReqMNT  +  (@nCusto3  - @nCusReq3 ) 
         END 
         ELSE 
         BEGIN 
            IF @IN_MV_PAR09  = '4' 
            BEGIN 
               SET @nReqMNT  = @nReqMNT  +  (@nCusto4  - @nCusReq4 ) 
            END 
            ELSE 
            BEGIN 
               IF @IN_MV_PAR09  = '5' 
               BEGIN 
                  SET @nReqMNT  = @nReqMNT  +  (@nCusto5  - @nCusReq5 ) 
               END 
            END 
         END 
      END 
   END 
   IF @nReqMNT  <> 0 
   BEGIN 
      SET @nPassou  = '1' 
   END 
   IF @IN_MV_PAR12  = '1' 
   BEGIN 
      SET @nReqProd  = @nReqProd  - @nReqMNT 
      SET @nReqMNT  = 0 
   END 
   SET @OUT_RESULTADO  = '1' 
   SET @OUT_NPASSOU  = @nPassou 
   SET @OUT_NSALANT  = @nSaldoAtu  - @nCompras  - @nReqProd  - @nReqCons  - @nProducao  + @nVendas  - @nReqTrans  - @nReqOutr  - @nDevVendas  + @nDevComprs  - @nEntrTerc  + @nSaiTerc 
     
   SET @OUT_NCOMPRAS  = @nCompras 
   SET @OUT_NREQCONS  = @nReqCons 
   SET @OUT_NREQPROD  = @nReqProd 
   SET @OUT_NREQTRANS  = @nReqTrans 
   SET @OUT_NPRODUCAO  = @nProducao 
   SET @OUT_NVENDAS  = @nVendas 
   SET @OUT_NREQOUTR  = @nReqOutr 
   SET @OUT_NDEVVENDAS  = @nDevVendas 
   SET @OUT_NDEVCOMPRS  = @nDevComprs 
   SET @OUT_NENTRTERC  = @nEntrTerc 
   SET @OUT_NSAITERC  = @nSaiTerc 
   SET @OUT_NSALDOATU  = @nSaldoAtu 
END
GO

GO
--SqlScripter----[dbo].[MAT057_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT057_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT057_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT057_17_01]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB5 Char( 2)
DECLARE @B5_CTRWMS Char( 1 )
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_CTRWMS Char( 1 )
BEGIN
   SET @cAux  = 'SB5' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SB5 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B5_CTRWMS  = B5_CTRWMS 
     FROM SB5010 
     WHERE B5_FILIAL  = @cFil_SB5  and B5_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   SELECT @BZ_CTRWMS  = BZ_CTRWMS 
     FROM SBZ010 
     WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF @BZ_CTRWMS  = '1'  or @BZ_CTRWMS  = '0' 
   BEGIN 
      IF  (@BZ_CTRWMS  = '1' )  or  (@BZ_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B5_CTRWMS  = '1' )  or  (@B5_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT057_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT057_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT057_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT057_17_02]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB5 Char( 2)
DECLARE @B5_CTRWMS Char( 1 )
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_CTRWMS Char( 1 )
BEGIN
   SET @cAux  = 'SB5' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SB5 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B5_CTRWMS  = B5_CTRWMS 
     FROM SB5030 
     WHERE B5_FILIAL  = @cFil_SB5  and B5_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   SELECT @BZ_CTRWMS  = BZ_CTRWMS 
     FROM SBZ030 
     WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF @BZ_CTRWMS  = '1'  or @BZ_CTRWMS  = '0' 
   BEGIN 
      IF  (@BZ_CTRWMS  = '1' )  or  (@BZ_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B5_CTRWMS  = '1' )  or  (@B5_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT057_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT057_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT057_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT057_18_01]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB5 Char( 2)
DECLARE @B5_CTRWMS Char( 1 )
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_CTRWMS Char( 1 )
BEGIN
   SET @cAux  = 'SB5' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SB5 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_18_01 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B5_CTRWMS  = B5_CTRWMS 
     FROM SB5010 
     WHERE B5_FILIAL  = @cFil_SB5  and B5_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   SELECT @BZ_CTRWMS  = BZ_CTRWMS 
     FROM SBZ010 
     WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF @BZ_CTRWMS  = '1'  or @BZ_CTRWMS  = '0' 
   BEGIN 
      IF  (@BZ_CTRWMS  = '1' )  or  (@BZ_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B5_CTRWMS  = '1' )  or  (@B5_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT057_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT057_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT057_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT057_18_02]
(
    @IN_PRODUTO Char( 15) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB5 Char( 2)
DECLARE @B5_CTRWMS Char( 1 )
DECLARE @cAux VarChar( 3 )
DECLARE @cFil_SBZ Char( 2)
DECLARE @BZ_CTRWMS Char( 1 )
BEGIN
   SET @cAux  = 'SB5' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SB5 output 
   SET @cAux  = 'SBZ' 
   EXEC XFILIAL_18_02 @cAux , @IN_FILIALCOR , @cFil_SBZ output 
   SELECT @B5_CTRWMS  = B5_CTRWMS 
     FROM SB5030 
     WHERE B5_FILIAL  = @cFil_SB5  and B5_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   SELECT @BZ_CTRWMS  = BZ_CTRWMS 
     FROM SBZ030 
     WHERE BZ_FILIAL  = @cFil_SBZ  and BZ_COD  = @IN_PRODUTO  and D_E_L_E_T_  = ' ' 
   IF @BZ_CTRWMS  = '1'  or @BZ_CTRWMS  = '0' 
   BEGIN 
      IF  (@BZ_CTRWMS  = '1' )  or  (@BZ_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
   ELSE 
   BEGIN 
      IF  (@B5_CTRWMS  = '1' )  or  (@B5_CTRWMS  = 'S' ) 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT058_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT058_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT058_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT058_17_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CODIGO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_B2_QFIM Float , 
    @IN_CONSULTA Char( 01 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_SOMASBF Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_D11 Char( 2)
DECLARE @cFil_D13 Char( 2)
DECLARE @cFil_D15 Char( 2)
DECLARE @lLocaliz Char( 01 )
DECLARE @cEndereco Char( 15)
DECLARE @cProduto Char( 15)
DECLARE @cLoteCtl Char( 10)
DECLARE @cNumLote Char( 6)
DECLARE @cNumSerie Char( 20)
DECLARE @cIdUnit Char( 6)
DECLARE @cTm Char( 3)
DECLARE @nSaldo Float
DECLARE @nSaldo2 Float
DECLARE @nRecno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nDifSB2 Float
DECLARE @nQtMult Integer
DECLARE @nCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_SOMASBF  = 0 
   SET @nDifSB2  = 0 
   EXEC MAT012_17_01 @IN_CODIGO , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
   IF @lLocaliz  = '1' 
   BEGIN 
      SET @cAux  = 'D13' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_D13 output 
      SET @cAux  = 'D15' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_D15 output 
      SET @cAux  = 'D11' 
      EXEC XFILIAL_17_01 @cAux , @IN_FILIALCOR , @cFil_D11 output 
       
      -- Cursor declaration CUR_D15
      DECLARE CUR_D15 insensitive  CURSOR FOR 
      SELECT D15_ENDER , D15_PRODUT , D15_LOTECT , D15_NUMLOT , D15_NUMSER , D15_IDUNIT , '000'  TM , D15_QINI , D15_QISEGU 
        FROM D15010 D15
        WHERE D15_FILIAL  = @cFil_D15  and D15_LOCAL  = @IN_LOCAL  and D15_PRDORI  = @IN_CODIGO  and D15_DATA  = @IN_MV_ULMES 
         and D15_QINI  <> 0  and D15.D_E_L_E_T_  = ' ' 
      UNION ALL
      SELECT D13_ENDER , D13_PRODUT , D13_LOTECT , D13_NUMLOT , D13_NUMSER , D13_IDUNIT , D13_TM , SUM(D13_QTDEST ) SALDO , 
             SUM(D13_QTDES2 ) SALDO2 
        FROM D13010 D13
        WHERE D13_FILIAL  = @cFil_D13  and D13_LOCAL  = @IN_LOCAL  and D13_PRDORI  = @IN_CODIGO  and D13_DTESTO  > @IN_MV_ULMES 
         and D13_DTESTO  <= @IN_DATA  and D13_USACAL  <> '2'  and D13.D_E_L_E_T_  = ' ' 
        GROUP BY D13_ENDER , D13_PRODUT , D13_LOTECT , D13_NUMLOT , D13_NUMSER , D13_IDUNIT , D13_TM 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_D15
      FETCH CUR_D15 
       INTO @cEndereco , @cProduto , @cLoteCtl , @cNumLote , @cNumSerie , @cIdUnit , @cTm , @nSaldo , @nSaldo2 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nRecno  = null 
         IF @IN_CONSULTA  <> '1' 
         BEGIN 
            SELECT @nRecno  = R_E_C_N_O_ 
              FROM D15010 
              WHERE D15_FILIAL  = @cFil_D15  and D15_LOCAL  = @IN_LOCAL  and D15_ENDER  = @cEndereco  and D15_PRDORI  = @IN_CODIGO 
               and D15_PRODUT  = @cProduto  and D15_LOTECT  = @cLoteCtl  and D15_NUMLOT  = @cNumLote  and D15_NUMSER  = @cNumSerie 
               and D15_IDUNIT  = @cIdUnit  and D15_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
         END 
         IF @cTm  >= '500' 
         BEGIN 
            SET @nSaldo  =  (@nSaldo  *  (-   1 ) ) 
            SET @nSaldo2  =  (@nSaldo2  *  (-   1 ) ) 
         END 
         IF @nRecno is null 
         BEGIN 
            SELECT @nRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM D15010 
            SET @nRecno  = @nRecno  + 1 
            IF @IN_CONSULTA  <> '1' 
            BEGIN 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
               INSERT INTO D15010 (D15_FILIAL , D15_PRDORI , D15_PRODUT , D15_LOCAL , D15_LOTECT , D15_NUMLOT , D15_ENDER , 
                      D15_NUMSER , D15_IDUNIT , D15_DATA , D15_QINI , D15_QISEGU , R_E_C_N_O_ ) 
               VALUES (@cFil_D15 , @IN_CODIGO , @cProduto , @IN_LOCAL , @cLoteCtl , @cNumLote , @cEndereco , @cNumSerie , 
                      @cIdUnit , @IN_DATA , @nSaldo , @nSaldo2 , @nRecno );
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @nRecno = @nRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CONSULTA  <> '1' 
            BEGIN 
               UPDATE D15010 
                 WITH (ROWLOCK) 
                  SET D15_QINI  = D15_QINI  + @nSaldo , D15_QISEGU  = D15_QISEGU  + @nSaldo2 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @OUT_SOMASBF  = @OUT_SOMASBF  + @nSaldo 
         SELECT @nQtMult  = D11_QTMULT 
           FROM D11010 
           WHERE D11_FILIAL  = @cFil_D11  and D11_PRODUT  = @IN_CODIGO  and D11_PRDORI  = @IN_CODIGO  and D11_PRDCMP  = @cProduto 
            and D_E_L_E_T_  = ' ' 
         IF @nQtMult is null 
         BEGIN 
            SET @nQtMult  = 1 
         END 
         SET @nDifSB2  = @nDifSB2  +  (@nSaldo  / @nQtMult ) 
         FETCH CUR_D15 
          INTO @cEndereco , @cProduto , @cLoteCtl , @cNumLote , @cNumSerie , @cIdUnit , @cTm , @nSaldo , @nSaldo2 
      END 
      SELECT @nCount  = COUNT ( * )
        FROM D11010 
        WHERE D11_FILIAL  = @cFil_D11  and D11_PRODUT  = @IN_CODIGO  and D11_PRDORI  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        
      IF  (@nCount is null )  or  (@nCount  = 0 ) 
      BEGIN 
         SET @nCount  = 1 
      END 
      SET @nDifSB2  =  (@nDifSB2  / @nCount ) 
      IF @IN_CONSULTA  <> '1'  and ROUND ( @nDifSB2 , 6 ) <> ROUND ( @IN_B2_QFIM , 6 )
      BEGIN 
         SET @cAux  = 'D14' 
         INSERT INTO TRC010_SP (TRC_FILIAL , TRC_COD , TRC_LOCAL , TRC_ALIAS , TRC_QFIM , TRC_DIVERG ) 
         VALUES (@IN_FILIALCOR , @IN_CODIGO , @IN_LOCAL , @cAux , @IN_B2_QFIM , @nDifSB2 );
      END 
      CLOSE CUR_D15
      DEALLOCATE CUR_D15
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT058_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT058_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT058_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT058_17_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CODIGO Char( 15) , 
    @IN_LOCAL Char( 2) , 
    @IN_MV_ULMES Char( 08 ) , 
    @IN_300SALNEG Char( 01 ) , 
    @IN_B2_QFIM Float , 
    @IN_CONSULTA Char( 01 ) , 
    @IN_FILSEQ Integer , 
    @IN_MV_WMSNEW Char( 01 ) , 
    @IN_MV_ARQPROD Char( 03 ) , 
    @OUT_SOMASBF Float  output ) AS
 
-- Declaration of variables
DECLARE @cFil_D11 Char( 2)
DECLARE @cFil_D13 Char( 2)
DECLARE @cFil_D15 Char( 2)
DECLARE @lLocaliz Char( 01 )
DECLARE @cEndereco Char( 15)
DECLARE @cProduto Char( 15)
DECLARE @cLoteCtl Char( 10)
DECLARE @cNumLote Char( 6)
DECLARE @cNumSerie Char( 20)
DECLARE @cIdUnit Char( 6)
DECLARE @cTm Char( 3)
DECLARE @nSaldo Float
DECLARE @nSaldo2 Float
DECLARE @nRecno Integer
DECLARE @cAux VarChar( 3 )
DECLARE @nDifSB2 Float
DECLARE @nQtMult Integer
DECLARE @nCount Integer
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_SOMASBF  = 0 
   SET @nDifSB2  = 0 
   EXEC MAT012_17_02 @IN_CODIGO , @IN_FILIALCOR , @IN_MV_WMSNEW , @IN_MV_ARQPROD , @lLocaliz output 
   IF @lLocaliz  = '1' 
   BEGIN 
      SET @cAux  = 'D13' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_D13 output 
      SET @cAux  = 'D15' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_D15 output 
      SET @cAux  = 'D11' 
      EXEC XFILIAL_17_02 @cAux , @IN_FILIALCOR , @cFil_D11 output 
       
      -- Cursor declaration CUR_D15
      DECLARE CUR_D15 insensitive  CURSOR FOR 
      SELECT D15_ENDER , D15_PRODUT , D15_LOTECT , D15_NUMLOT , D15_NUMSER , D15_IDUNIT , '000'  TM , D15_QINI , D15_QISEGU 
        FROM D15020 D15
        WHERE D15_FILIAL  = @cFil_D15  and D15_LOCAL  = @IN_LOCAL  and D15_PRDORI  = @IN_CODIGO  and D15_DATA  = @IN_MV_ULMES 
         and D15_QINI  <> 0  and D15.D_E_L_E_T_  = ' ' 
      UNION ALL
      SELECT D13_ENDER , D13_PRODUT , D13_LOTECT , D13_NUMLOT , D13_NUMSER , D13_IDUNIT , D13_TM , SUM(D13_QTDEST ) SALDO , 
             SUM(D13_QTDES2 ) SALDO2 
        FROM D13020 D13
        WHERE D13_FILIAL  = @cFil_D13  and D13_LOCAL  = @IN_LOCAL  and D13_PRDORI  = @IN_CODIGO  and D13_DTESTO  > @IN_MV_ULMES 
         and D13_DTESTO  <= @IN_DATA  and D13_USACAL  <> '2'  and D13.D_E_L_E_T_  = ' ' 
        GROUP BY D13_ENDER , D13_PRODUT , D13_LOTECT , D13_NUMLOT , D13_NUMSER , D13_IDUNIT , D13_TM 
        ORDER BY 1 , 2 , 3 , 4 , 5 , 6 , 7 
      FOR READ ONLY 
       
      OPEN CUR_D15
      FETCH CUR_D15 
       INTO @cEndereco , @cProduto , @cLoteCtl , @cNumLote , @cNumSerie , @cIdUnit , @cTm , @nSaldo , @nSaldo2 
      WHILE ( (@@Fetch_Status  = 0 ) )
      BEGIN
         SET @nRecno  = null 
         IF @IN_CONSULTA  <> '1' 
         BEGIN 
            SELECT @nRecno  = R_E_C_N_O_ 
              FROM D15020 
              WHERE D15_FILIAL  = @cFil_D15  and D15_LOCAL  = @IN_LOCAL  and D15_ENDER  = @cEndereco  and D15_PRDORI  = @IN_CODIGO 
               and D15_PRODUT  = @cProduto  and D15_LOTECT  = @cLoteCtl  and D15_NUMLOT  = @cNumLote  and D15_NUMSER  = @cNumSerie 
               and D15_IDUNIT  = @cIdUnit  and D15_DATA  = @IN_DATA  and D_E_L_E_T_  = ' ' 
         END 
         IF @cTm  >= '500' 
         BEGIN 
            SET @nSaldo  =  (@nSaldo  *  (-   1 ) ) 
            SET @nSaldo2  =  (@nSaldo2  *  (-   1 ) ) 
         END 
         IF @nRecno is null 
         BEGIN 
            SELECT @nRecno  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
              FROM D15020 
            SET @nRecno  = @nRecno  + 1 
            IF @IN_CONSULTA  <> '1' 
            BEGIN 
               select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
               INSERT INTO D15020 (D15_FILIAL , D15_PRDORI , D15_PRODUT , D15_LOCAL , D15_LOTECT , D15_NUMLOT , D15_ENDER , 
                      D15_NUMSER , D15_IDUNIT , D15_DATA , D15_QINI , D15_QISEGU , R_E_C_N_O_ ) 
               VALUES (@cFil_D15 , @IN_CODIGO , @cProduto , @IN_LOCAL , @cLoteCtl , @cNumLote , @cEndereco , @cNumSerie , 
                      @cIdUnit , @IN_DATA , @nSaldo , @nSaldo2 , @nRecno );
               
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @nRecno = @nRecno + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
            END 
         END 
         ELSE 
         BEGIN 
            IF @IN_CONSULTA  <> '1' 
            BEGIN 
               UPDATE D15020 
                 WITH (ROWLOCK) 
                  SET D15_QINI  = D15_QINI  + @nSaldo , D15_QISEGU  = D15_QISEGU  + @nSaldo2 
                WHERE R_E_C_N_O_  = @nRecno 
            END 
         END 
         SET @OUT_SOMASBF  = @OUT_SOMASBF  + @nSaldo 
         SELECT @nQtMult  = D11_QTMULT 
           FROM D11020 
           WHERE D11_FILIAL  = @cFil_D11  and D11_PRODUT  = @IN_CODIGO  and D11_PRDORI  = @IN_CODIGO  and D11_PRDCMP  = @cProduto 
            and D_E_L_E_T_  = ' ' 
         IF @nQtMult is null 
         BEGIN 
            SET @nQtMult  = 1 
         END 
         SET @nDifSB2  = @nDifSB2  +  (@nSaldo  / @nQtMult ) 
         FETCH CUR_D15 
          INTO @cEndereco , @cProduto , @cLoteCtl , @cNumLote , @cNumSerie , @cIdUnit , @cTm , @nSaldo , @nSaldo2 
      END 
      SELECT @nCount  = COUNT ( * )
        FROM D11020 
        WHERE D11_FILIAL  = @cFil_D11  and D11_PRODUT  = @IN_CODIGO  and D11_PRDORI  = @IN_CODIGO  and D_E_L_E_T_  = ' ' 
        
      IF  (@nCount is null )  or  (@nCount  = 0 ) 
      BEGIN 
         SET @nCount  = 1 
      END 
      SET @nDifSB2  =  (@nDifSB2  / @nCount ) 
      IF @IN_CONSULTA  <> '1'  and ROUND ( @nDifSB2 , 6 ) <> ROUND ( @IN_B2_QFIM , 6 )
      BEGIN 
         SET @cAux  = 'D14' 
         INSERT INTO TRC020_SP (TRC_FILIAL , TRC_COD , TRC_LOCAL , TRC_ALIAS , TRC_QFIM , TRC_DIVERG ) 
         VALUES (@IN_FILIALCOR , @IN_CODIGO , @IN_LOCAL , @cAux , @IN_B2_QFIM , @nDifSB2 );
      END 
      CLOSE CUR_D15
      DEALLOCATE CUR_D15
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT059_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT059_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT059_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT059_19_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cB1_CCCUSTO Char( 9)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_01 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SELECT @cB1_CCCUSTO  = COALESCE ( B1_CCCUSTO , ' ' )
     FROM SB1010 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_COD  and D_E_L_E_T_  = ' ' 
   IF  (SUBSTRING ( @IN_COD , 1 , 3 ) = 'MOD' ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PRODMOD  = '1'  and @cB1_CCCUSTO  <> ' ' 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MAT059_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MAT059_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MAT059_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MAT059_19_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_COD Char( 15) , 
    @IN_MV_PRODMOD Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_SB1 Char( 2)
DECLARE @cAux VarChar( 03 )
DECLARE @cB1_CCCUSTO Char( 9)
BEGIN
   SET @cAux  = 'SB1' 
   EXEC XFILIAL_19_02 @cAux , @IN_FILIALCOR , @cFil_SB1 output 
   SELECT @cB1_CCCUSTO  = COALESCE ( B1_CCCUSTO , ' ' )
     FROM SB1030 
     WHERE B1_FILIAL  = @cFil_SB1  and B1_COD  = @IN_COD  and D_E_L_E_T_  = ' ' 
   IF  (SUBSTRING ( @IN_COD , 1 , 3 ) = 'MOD' ) 
   BEGIN 
      SET @OUT_RESULTADO  = '1' 
   END 
   ELSE 
   BEGIN 
      IF @IN_MV_PRODMOD  = '1'  and @cB1_CCCUSTO  <> ' ' 
      BEGIN 
         SET @OUT_RESULTADO  = '1' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_RESULTADO  = '0' 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[MRP001_24_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MRP001_24_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MRP001_24_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MRP001_24_01]
(
    @IN_FILIALHWA Char( 2) , 
    @IN_FILIALT4N Char( 2) , 
    @IN_FILIALSMB Char( 2) , 
    @IN_GRAVASMB Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cNivel VarChar( 2)
DECLARE @cNivelAnt VarChar( 2)
DECLARE @iCount Integer
DECLARE @iNivel Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   Begin Tran 
   UPDATE HWA010 
     WITH (ROWLOCK) 
      SET HWA_NIVEL  = '02' 
    WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' ' 
   UPDATE HWA010 
     WITH (ROWLOCK) 
      SET HWA_NIVEL  = '01' 
    WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' '  and NOT EXISTS (
   SELECT 1 
     FROM T4N010 T4N
     WHERE T4N.T4N_FILIAL  = @IN_FILIALT4N  and T4N.T4N_COMP  = HWA_PROD  and T4N.D_E_L_E_T_  = ' ' ) 
   Commit Tran 
   SET @iNivel  = 2 
   SET @cNivel  = '02' 
   WHILE (1  = 1 )
   BEGIN
      SELECT @iCount  = COUNT ( * )
        FROM HWA010 
        WHERE HWA_FILIAL  = @IN_FILIALHWA  and HWA_NIVEL  = @cNivel  and D_E_L_E_T_  = ' ' 
      IF  (@iCount  = 0 ) 
      BEGIN 
         break
      END 
      SET @cNivelAnt  = @cNivel 
      SET @iNivel  = @iNivel  + 1 
      SET @cNivel  = CONVERT( VarChar( 2 ) ,@iNivel )
      IF @iNivel  <= 9 
      BEGIN 
         SET @cNivel  = '0'  + @cNivel 
      END 
      Begin Tran 
      UPDATE HWA010 
        WITH (ROWLOCK) 
         SET HWA_NIVEL  = @cNivel 
       WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' '  and EXISTS (
      SELECT 1 
        FROM T4N010 T4N
        WHERE T4N.T4N_FILIAL  = @IN_FILIALT4N  and T4N.T4N_COMP  = HWA_PROD  and T4N.D_E_L_E_T_  = ' '  and EXISTS (
      SELECT 1 
        FROM HWA010 PAI
        WHERE PAI.HWA_FILIAL  = @IN_FILIALHWA  and PAI.HWA_PROD  = T4N.T4N_PROD  and PAI.HWA_NIVEL  = @cNivelAnt ) ) 
      Commit Tran 
   END 
   Begin Tran 
   UPDATE HWA010 
     WITH (ROWLOCK) 
      SET HWA_NIVEL  = '99' 
    WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' '  and NOT EXISTS (
   SELECT 1 
     FROM T4N010 T4N
     WHERE T4N.T4N_FILIAL  = @IN_FILIALT4N  and T4N.T4N_PROD  = HWA_PROD  and T4N.D_E_L_E_T_  = ' ' ) 
   Commit Tran 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MRP001_24_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MRP001_24_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MRP001_24_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[MRP001_24_02]
(
    @IN_FILIALHWA Char( 2) , 
    @IN_FILIALT4N Char( 2) , 
    @IN_FILIALSMB Char( 2) , 
    @IN_GRAVASMB Char( 01 ) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cNivel VarChar( 2)
DECLARE @cNivelAnt VarChar( 2)
DECLARE @iCount Integer
DECLARE @iNivel Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   Begin Tran 
   UPDATE HWA020 
     WITH (ROWLOCK) 
      SET HWA_NIVEL  = '02' 
    WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' ' 
   UPDATE HWA020 
     WITH (ROWLOCK) 
      SET HWA_NIVEL  = '01' 
    WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' '  and NOT EXISTS (
   SELECT 1 
     FROM T4N020 T4N
     WHERE T4N.T4N_FILIAL  = @IN_FILIALT4N  and T4N.T4N_COMP  = HWA_PROD  and T4N.D_E_L_E_T_  = ' ' ) 
   Commit Tran 
   SET @iNivel  = 2 
   SET @cNivel  = '02' 
   WHILE (1  = 1 )
   BEGIN
      SELECT @iCount  = COUNT ( * )
        FROM HWA020 
        WHERE HWA_FILIAL  = @IN_FILIALHWA  and HWA_NIVEL  = @cNivel  and D_E_L_E_T_  = ' ' 
      IF  (@iCount  = 0 ) 
      BEGIN 
         break
      END 
      SET @cNivelAnt  = @cNivel 
      SET @iNivel  = @iNivel  + 1 
      SET @cNivel  = CONVERT( VarChar( 2 ) ,@iNivel )
      IF @iNivel  <= 9 
      BEGIN 
         SET @cNivel  = '0'  + @cNivel 
      END 
      Begin Tran 
      UPDATE HWA020 
        WITH (ROWLOCK) 
         SET HWA_NIVEL  = @cNivel 
       WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' '  and EXISTS (
      SELECT 1 
        FROM T4N020 T4N
        WHERE T4N.T4N_FILIAL  = @IN_FILIALT4N  and T4N.T4N_COMP  = HWA_PROD  and T4N.D_E_L_E_T_  = ' '  and EXISTS (
      SELECT 1 
        FROM HWA020 PAI
        WHERE PAI.HWA_FILIAL  = @IN_FILIALHWA  and PAI.HWA_PROD  = T4N.T4N_PROD  and PAI.HWA_NIVEL  = @cNivelAnt ) ) 
      Commit Tran 
   END 
   Begin Tran 
   UPDATE HWA020 
     WITH (ROWLOCK) 
      SET HWA_NIVEL  = '99' 
    WHERE HWA_FILIAL  = @IN_FILIALHWA  and D_E_L_E_T_  = ' '  and NOT EXISTS (
   SELECT 1 
     FROM T4N020 T4N
     WHERE T4N.T4N_FILIAL  = @IN_FILIALT4N  and T4N.T4N_PROD  = HWA_PROD  and T4N.D_E_L_E_T_  = ' ' ) 
   Commit Tran 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[MSCALCPER_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_12_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_12_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_14_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_14_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_16_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_16_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_20_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_20_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_24_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSCALCPER_24_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSEXIST_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_01_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_01_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_02_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_02_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_03_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_03_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_06_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_06_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_07_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_07_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_08_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_08_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_08_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_08_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_08_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_08_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_09_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_09_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_10_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_10_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_11_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_11_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_12_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_12_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_12_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_12_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_12_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_12_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_12_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_12_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_13_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_13_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_13_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_13_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_13_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_13_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_14_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_14_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_14_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_14_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_14_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_14_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_14_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_14_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_15_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_15_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_15_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_15_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_15_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_15_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_16_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_16_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_16_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_16_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_16_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_16_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_16_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_16_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_17_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_17_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_18_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_18_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_19_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_19_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_20_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_20_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_20_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_20_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_20_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_20_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_20_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_20_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_21_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_21_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_21_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_21_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_21_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_21_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_22_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_22_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_22_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_22_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_22_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_22_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_23_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_23_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_24_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_24_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_24_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_24_01]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSEXIST_24_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSEXIST_24_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSEXIST_24_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSEXIST_24_02]
(
@IN_FILE         VarChar(255),
@IN_TYPE         VarChar(01),
@OUT_RESULTADO   VarChar(01) OutPut
)
as
declare @NAME VarChar(255)
declare @TIPO VarChar(01)
Begin
IF @IN_TYPE = 'T' SELECT @TIPO = 'U'
IF @IN_TYPE = 'P' SELECT @TIPO = 'P'

Select @NAME =name From sysobjects
Where type = @TIPO and name = @IN_FILE

IF @NAME IS NULL
SELECT @OUT_RESULTADO ='0'
ELSE
SELECT @OUT_RESULTADO ='1'
END
GO

GO
--SqlScripter----[dbo].[MSSOMA1_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_01_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_01_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_01_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_01_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_02_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_02_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_02_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_02_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_03_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_03_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_03_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_03_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_06_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_06_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_06_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_06_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_07_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_07_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_07_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_07_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_08_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_08_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_08_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_08_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_08_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_08_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_08_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_08_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_09_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_09_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_09_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_09_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_10_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_10_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_10_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_10_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_11_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_11_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_11_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_11_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_12_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_12_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_12_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_12_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_12_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_12_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_12_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_12_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_12_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_12_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_13_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_13_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_13_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_13_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_13_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_13_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_13_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_13_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_14_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_14_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_14_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_14_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_14_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_14_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_14_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_14_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_14_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_14_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_15_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_15_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_15_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_15_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_15_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_15_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_15_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_15_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_16_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_16_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_16_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_16_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_16_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_16_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_16_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_16_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_16_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_16_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_17_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_17_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_17_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_17_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_18_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_18_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_18_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_18_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_19_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_19_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_19_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_19_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_20_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_20_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_20_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_20_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_20_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_20_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_20_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_20_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_20_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_20_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_21_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_21_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_21_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_21_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_21_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_21_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_21_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_21_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_22_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_22_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_22_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_22_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_22_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_22_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_22_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_22_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_23_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_23_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_23_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_23_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_24_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_24_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_24_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_24_01]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_24_01 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSOMA1_24_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[MSSOMA1_24_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[MSSOMA1_24_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[MSSOMA1_24_02]
(
@IN_SOMAR      VarChar(100),
@IN_SOMALOW    Char(01),
@OUT_RESULTADO VarChar(100) OutPut
)
as

Declare @iAux     integer
Declare @iTamOri  integer
Declare @iNx      integer
Declare @cNext    Char(01)
Declare @cSpace   Char(01)
Declare @cRef     VarChar(1)
Declare @cResult  VarChar(100)
Declare @iTamStr  integer

begin
select @iTamStr = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iTamOri = ( Len( @IN_SOMAR + '#' ) - 1 )
select @iAux = 1
select @iNx  = 1
select @cRef = ' '
select @cNext   = '0'
select @cSpace  = '0'
select @cResult = ' '

If Len(Rtrim(@IN_SOMAR)) = 0 begin
Exec MSSTRZERO_24_02 @iAux, @iTamStr , @OUT_RESULTADO OutPut
end
else if @IN_SOMAR = Replicate( '*', @iTamOri) begin
select @OUT_RESULTADO = @IN_SOMAR

end
else begin
While @iTamStr >= @iNx begin
select @cRef = Substring(  @IN_SOMAR + '#' , @iTamStr , 1 )
if @cRef = ' ' begin
select @cResult = ' ' + @cResult
select @cNext = '1'
select @cSpace = '1'
end
else if @IN_SOMAR = ( Replicate('z',  @iTamOri )) begin
select @cResult = ( Replicate('*',  @iTamOri ))
break
end
else if @cRef < '9' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1) ) + Char( Ascii( @cRef ) + 1 ) + @cResult
select @cNext = '0'
end
else if ( @cRef = '9' and @iTamStr > 1 ) begin
If ( Substring( @IN_SOMAR,  @iTamStr - 1 ,1 ) <= '9'  and  Substring( @IN_SOMAR, @iTamStr - 1 ,1 ) <> ' ') begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
else if ( Substring( @IN_SOMAR, ( @iTamStr -1 ), 1 ) = ' ' ) begin
select @cResult = Substring( @IN_SOMAR,1,( @iTamStr - 2 ) ) + '10' + @cResult
select @cNext = '0'
end
else begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + 'A' + @cResult
select @cNext = '0'
end
end
else if @cRef = '9' and ( @iTamStr = 1 ) and ( @cSpace = '1' ) begin
select @cResult = '10' + Substring( @cResult, 1, ( Len( @cResult + '#' ) - 1) )
select @cNext = '0'
end
else if @cRef = '9' and @iTamStr = 1 and @cSpace = '0' begin
select @cResult = 'A' + @cResult
select @cNext ='0'
end
else if @cRef > '9' and @cRef < 'Z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 ) ) + Char( ( Ascii( @cRef )+ 1 ) ) + @cResult
select @cNext = '0'
end
else if @cRef > 'Z' and @cRef < 'z' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + Char((Ascii( @cRef ) + 1)) + @cResult
select @cNext = '0'
end
else if @cRef = 'Z' and @IN_SOMALOW = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, ( @iTamStr - 1 )) + 'a' + @cResult
select @cNext = '0'
end
else if ( @cRef='z' or @cRef = 'Z') and @cSpace = '1' begin
select @cResult = Substring( @IN_SOMAR, 1, @iTamStr ) + '0' + Substring( @cResult, 1, ( Len( @cResult +'#' ) - 2 ))
select @cNext = '0'
end
else if @cRef = 'z' or @cRef = 'Z' begin
select @cResult = '0' + @cResult
select @cNext = '1'
end
if @cNext = '0' break
select @iTamStr = @iTamStr - 1
End
select @OUT_RESULTADO = @cResult
end
end
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_12_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_12_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_14_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_14_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_16_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_16_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_20_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_20_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_24_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[MSSTRZERO_24_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
GO

GO
--SqlScripter----[dbo].[PCO001_12_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[PCO001_12_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[PCO001_12_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[PCO001_12_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CONFIG Char( 2) , 
    @IN_TIPOMOV Char( 01 ) , 
    @IN_FIMMES Char( 08 ) , 
    @IN_CHAVE Char( 150) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_AKS Char( 2)
DECLARE @cAux Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'AKS' 
   EXEC XFILIAL_12_01 @cAux , @IN_FILIALCOR , @cFil_AKS output 
   IF @IN_TIPOMOV  = 'C' 
   BEGIN 
      UPDATE AKS010 
        WITH (ROWLOCK) 
         SET AKS_SDCRD1  = AKS_SDCRD1  + @IN_VALOR1 , AKS_SDCRD2  = AKS_SDCRD2  + @IN_VALOR2 , AKS_SDCRD3  = AKS_SDCRD3  + @IN_VALOR3 
        , AKS_SDCRD4  = AKS_SDCRD4  + @IN_VALOR4 , AKS_SDCRD5  = AKS_SDCRD5  + @IN_VALOR5 
       WHERE AKS_FILIAL  = @cFil_AKS  and AKS_CONFIG  = @IN_CONFIG  and AKS_CHAVE  = @IN_CHAVE  and AKS_DATA  > @IN_FIMMES 
         and D_E_L_E_T_  = ' ' 
   END 
   ELSE 
   BEGIN 
      UPDATE AKS010 
        WITH (ROWLOCK) 
         SET AKS_SDDEB1  = AKS_SDDEB1  + @IN_VALOR1 , AKS_SDDEB2  = AKS_SDDEB2  + @IN_VALOR2 , AKS_SDDEB3  = AKS_SDDEB3  + @IN_VALOR3 
        , AKS_SDDEB4  = AKS_SDDEB4  + @IN_VALOR4 , AKS_SDDEB5  = AKS_SDDEB5  + @IN_VALOR5 
       WHERE AKS_FILIAL  = @cFil_AKS  and AKS_CONFIG  = @IN_CONFIG  and AKS_CHAVE  = @IN_CHAVE  and AKS_DATA  > @IN_FIMMES 
         and D_E_L_E_T_  = ' ' 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[PCO001_12_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[PCO001_12_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[PCO001_12_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[PCO001_12_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CONFIG Char( 2) , 
    @IN_TIPOMOV Char( 01 ) , 
    @IN_FIMMES Char( 08 ) , 
    @IN_CHAVE Char( 150) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_AKS Char( 2)
DECLARE @cAux Char( 03 )
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @cAux  = 'AKS' 
   EXEC XFILIAL_12_02 @cAux , @IN_FILIALCOR , @cFil_AKS output 
   IF @IN_TIPOMOV  = 'C' 
   BEGIN 
      UPDATE AKS030 
        WITH (ROWLOCK) 
         SET AKS_SDCRD1  = AKS_SDCRD1  + @IN_VALOR1 , AKS_SDCRD2  = AKS_SDCRD2  + @IN_VALOR2 , AKS_SDCRD3  = AKS_SDCRD3  + @IN_VALOR3 
        , AKS_SDCRD4  = AKS_SDCRD4  + @IN_VALOR4 , AKS_SDCRD5  = AKS_SDCRD5  + @IN_VALOR5 
       WHERE AKS_FILIAL  = @cFil_AKS  and AKS_CONFIG  = @IN_CONFIG  and AKS_CHAVE  = @IN_CHAVE  and AKS_DATA  > @IN_FIMMES 
         and D_E_L_E_T_  = ' ' 
   END 
   ELSE 
   BEGIN 
      UPDATE AKS030 
        WITH (ROWLOCK) 
         SET AKS_SDDEB1  = AKS_SDDEB1  + @IN_VALOR1 , AKS_SDDEB2  = AKS_SDDEB2  + @IN_VALOR2 , AKS_SDDEB3  = AKS_SDDEB3  + @IN_VALOR3 
        , AKS_SDDEB4  = AKS_SDDEB4  + @IN_VALOR4 , AKS_SDDEB5  = AKS_SDDEB5  + @IN_VALOR5 
       WHERE AKS_FILIAL  = @cFil_AKS  and AKS_CONFIG  = @IN_CONFIG  and AKS_CHAVE  = @IN_CHAVE  and AKS_DATA  > @IN_FIMMES 
         and D_E_L_E_T_  = ' ' 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[PCO002_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[PCO002_13_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[PCO002_13_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[PCO002_13_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CONFIG Char( 2) , 
    @IN_CHAVE Char( 150) , 
    @OUT_RESULT1 Float  output , 
    @OUT_RESULT2 Float  output , 
    @OUT_RESULT3 Float  output , 
    @OUT_RESULT4 Float  output , 
    @OUT_RESULT5 Float  output , 
    @OUT_RESULT6 Float  output , 
    @OUT_RESULT7 Float  output , 
    @OUT_RESULT8 Float  output , 
    @OUT_RESULT9 Float  output , 
    @OUT_RESULT10 Float  output ) AS
 
-- Declaration of variables
DECLARE @nValorC1 Float
DECLARE @nValorC2 Float
DECLARE @nValorC3 Float
DECLARE @nValorC4 Float
DECLARE @nValorC5 Float
DECLARE @nValorD1 Float
DECLARE @nValorD2 Float
DECLARE @nValorD3 Float
DECLARE @nValorD4 Float
DECLARE @nValorD5 Float
BEGIN
   SET @OUT_RESULT1  = 0 
   SET @OUT_RESULT2  = 0 
   SET @OUT_RESULT3  = 0 
   SET @OUT_RESULT4  = 0 
   SET @OUT_RESULT5  = 0 
   SET @OUT_RESULT6  = 0 
   SET @OUT_RESULT7  = 0 
   SET @OUT_RESULT8  = 0 
   SET @OUT_RESULT9  = 0 
   SET @OUT_RESULT10  = 0 
   SET @nValorC1  = 0 
   SET @nValorC2  = 0 
   SET @nValorC3  = 0 
   SET @nValorC4  = 0 
   SET @nValorC5  = 0 
   SET @nValorD1  = 0 
   SET @nValorD2  = 0 
   SET @nValorD3  = 0 
   SET @nValorD4  = 0 
   SET @nValorD5  = 0 
   SELECT @nValorC1  = COALESCE ( SUM(AKT_MVCRD1 ), 0 ), @nValorC2  = COALESCE ( SUM(AKT_MVCRD2 ), 0 ), @nValorC3  = COALESCE ( SUM(AKT_MVCRD3 ), 
          0 ), @nValorC4  = COALESCE ( SUM(AKT_MVCRD4 ), 0 ), @nValorC5  = COALESCE ( SUM(AKT_MVCRD5 ), 0 ), @nValorD1  = COALESCE ( SUM(AKT_MVDEB1 ), 
          0 ), @nValorD2  = COALESCE ( SUM(AKT_MVDEB2 ), 0 ), @nValorD3  = COALESCE ( SUM(AKT_MVDEB3 ), 0 ), @nValorD4  = COALESCE ( SUM(AKT_MVDEB4 ), 
          0 ), @nValorD5  = COALESCE ( SUM(AKT_MVDEB5 ), 0 )
     FROM AKT010 
     WHERE AKT_FILIAL  = @IN_FILIALCOR  and AKT_CONFIG  = @IN_CONFIG  and AKT_CHAVE  = @IN_CHAVE  and AKT_DATA  <= @IN_DATA 
      and D_E_L_E_T_  = ' ' 
   SET @OUT_RESULT1  = @nValorC1 
   SET @OUT_RESULT2  = @nValorC2 
   SET @OUT_RESULT3  = @nValorC3 
   SET @OUT_RESULT4  = @nValorC4 
   SET @OUT_RESULT5  = @nValorC5 
   SET @OUT_RESULT6  = @nValorD1 
   SET @OUT_RESULT7  = @nValorD2 
   SET @OUT_RESULT8  = @nValorD3 
   SET @OUT_RESULT9  = @nValorD4 
   SET @OUT_RESULT10  = @nValorD5 
END
GO

GO
--SqlScripter----[dbo].[PCO002_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[PCO002_13_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[PCO002_13_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[PCO002_13_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_DATA Char( 08 ) , 
    @IN_CONFIG Char( 2) , 
    @IN_CHAVE Char( 150) , 
    @OUT_RESULT1 Float  output , 
    @OUT_RESULT2 Float  output , 
    @OUT_RESULT3 Float  output , 
    @OUT_RESULT4 Float  output , 
    @OUT_RESULT5 Float  output , 
    @OUT_RESULT6 Float  output , 
    @OUT_RESULT7 Float  output , 
    @OUT_RESULT8 Float  output , 
    @OUT_RESULT9 Float  output , 
    @OUT_RESULT10 Float  output ) AS
 
-- Declaration of variables
DECLARE @nValorC1 Float
DECLARE @nValorC2 Float
DECLARE @nValorC3 Float
DECLARE @nValorC4 Float
DECLARE @nValorC5 Float
DECLARE @nValorD1 Float
DECLARE @nValorD2 Float
DECLARE @nValorD3 Float
DECLARE @nValorD4 Float
DECLARE @nValorD5 Float
BEGIN
   SET @OUT_RESULT1  = 0 
   SET @OUT_RESULT2  = 0 
   SET @OUT_RESULT3  = 0 
   SET @OUT_RESULT4  = 0 
   SET @OUT_RESULT5  = 0 
   SET @OUT_RESULT6  = 0 
   SET @OUT_RESULT7  = 0 
   SET @OUT_RESULT8  = 0 
   SET @OUT_RESULT9  = 0 
   SET @OUT_RESULT10  = 0 
   SET @nValorC1  = 0 
   SET @nValorC2  = 0 
   SET @nValorC3  = 0 
   SET @nValorC4  = 0 
   SET @nValorC5  = 0 
   SET @nValorD1  = 0 
   SET @nValorD2  = 0 
   SET @nValorD3  = 0 
   SET @nValorD4  = 0 
   SET @nValorD5  = 0 
   SELECT @nValorC1  = COALESCE ( SUM(AKT_MVCRD1 ), 0 ), @nValorC2  = COALESCE ( SUM(AKT_MVCRD2 ), 0 ), @nValorC3  = COALESCE ( SUM(AKT_MVCRD3 ), 
          0 ), @nValorC4  = COALESCE ( SUM(AKT_MVCRD4 ), 0 ), @nValorC5  = COALESCE ( SUM(AKT_MVCRD5 ), 0 ), @nValorD1  = COALESCE ( SUM(AKT_MVDEB1 ), 
          0 ), @nValorD2  = COALESCE ( SUM(AKT_MVDEB2 ), 0 ), @nValorD3  = COALESCE ( SUM(AKT_MVDEB3 ), 0 ), @nValorD4  = COALESCE ( SUM(AKT_MVDEB4 ), 
          0 ), @nValorD5  = COALESCE ( SUM(AKT_MVDEB5 ), 0 )
     FROM AKT030 
     WHERE AKT_FILIAL  = @IN_FILIALCOR  and AKT_CONFIG  = @IN_CONFIG  and AKT_CHAVE  = @IN_CHAVE  and AKT_DATA  <= @IN_DATA 
      and D_E_L_E_T_  = ' ' 
   SET @OUT_RESULT1  = @nValorC1 
   SET @OUT_RESULT2  = @nValorC2 
   SET @OUT_RESULT3  = @nValorC3 
   SET @OUT_RESULT4  = @nValorC4 
   SET @OUT_RESULT5  = @nValorC5 
   SET @OUT_RESULT6  = @nValorD1 
   SET @OUT_RESULT7  = @nValorD2 
   SET @OUT_RESULT8  = @nValorD3 
   SET @OUT_RESULT9  = @nValorD4 
   SET @OUT_RESULT10  = @nValorD5 
END
GO

GO
--SqlScripter----[dbo].[PCO003_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[PCO003_13_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[PCO003_13_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[PCO003_13_01]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CONFIG Char( 2) , 
    @IN_TIPOMOV Char( 01 ) , 
    @IN_DATA Char( 08 ) , 
    @IN_DATAF Char( 08 ) , 
    @IN_CHAVE Char( 150) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_TPSALD Char( 2) , 
    @IN_NIV01 Char( 20) , 
    @IN_NIV02 Char( 20) , 
    @IN_NIV03 Char( 20) , 
    @IN_NIV04 Char( 20) , 
    @IN_NIV05 Char( 20) , 
    @IN_NIV06 Char( 20) , 
    @IN_ANALIT Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_AKT Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecnoAKT Integer
DECLARE @iRecno Integer
DECLARE @nValor1 Float
DECLARE @nValor2 Float
DECLARE @nValor3 Float
DECLARE @nValor4 Float
DECLARE @nValor5 Float
DECLARE @Out_Res Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @Out_Res  = '0' 
   SET @cAux  = 'AKT' 
   EXEC XFILIAL_13_01 @cAux , @IN_FILIALCOR , @cFil_AKT output 
   SET @nValor1  = @IN_VALOR1 
   SET @nValor2  = @IN_VALOR2 
   SET @nValor3  = @IN_VALOR3 
   SET @nValor4  = @IN_VALOR4 
   SET @nValor5  = @IN_VALOR5 
   SET @iRecnoAKT  = null 
   IF @IN_TIPOMOV  = 'C' 
   BEGIN 
      SELECT @iRecnoAKT  = R_E_C_N_O_ 
        FROM AKT010 
        WHERE AKT_FILIAL  = @cFil_AKT  and AKT_CONFIG  = @IN_CONFIG  and AKT_CHAVE  = @IN_CHAVE  and AKT_DATA  = @IN_DATA 
         and D_E_L_E_T_  = ' ' 
      IF @iRecnoAKT Is null 
      BEGIN 
         SELECT @iRecnoAKT  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM AKT010 
         SET @iRecnoAKT  = @iRecnoAKT  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO AKT010 (AKT_FILIAL , AKT_CHAVE , AKT_DATA , AKT_CONFIG , AKT_MVCRD1 , AKT_MVCRD2 , AKT_MVCRD3 , AKT_MVCRD4 , 
                AKT_MVCRD5 , AKT_TPSALD , AKT_NIV01 , AKT_NIV02 , AKT_NIV03 , AKT_NIV04 , AKT_NIV05 , AKT_NIV06 , AKT_ANALIT , 
                R_E_C_N_O_ ) 
         VALUES (@cFil_AKT , @IN_CHAVE , @IN_DATA , @IN_CONFIG , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_TPSALD , 
                @IN_NIV01 , @IN_NIV02 , @IN_NIV03 , @IN_NIV04 , @IN_NIV05 , @IN_NIV06 , @IN_ANALIT , @iRecnoAKT );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoAKT = @iRecnoAKT + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE AKT010 
           WITH (ROWLOCK) 
            SET AKT_MVCRD1  = AKT_MVCRD1  + @nValor1 , AKT_MVCRD2  = AKT_MVCRD2  + @nValor2 , AKT_MVCRD3  = AKT_MVCRD3  + @nValor3 
           , AKT_MVCRD4  = AKT_MVCRD4  + @nValor4 , AKT_MVCRD5  = AKT_MVCRD5  + @nValor5 
          WHERE R_E_C_N_O_  = @iRecnoAKT 
         commit tran 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @iRecnoAKT  = R_E_C_N_O_ 
        FROM AKT010 
        WHERE AKT_FILIAL  = @cFil_AKT  and AKT_CONFIG  = @IN_CONFIG  and AKT_CHAVE  = @IN_CHAVE  and AKT_DATA  = @IN_DATA 
         and D_E_L_E_T_  = ' ' 
      IF @iRecnoAKT Is null 
      BEGIN 
         SELECT @iRecnoAKT  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM AKT010 
         SET @iRecnoAKT  = @iRecnoAKT  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO AKT010 (AKT_FILIAL , AKT_CHAVE , AKT_DATA , AKT_CONFIG , AKT_MVDEB1 , AKT_MVDEB2 , AKT_MVDEB3 , AKT_MVDEB4 , 
                AKT_MVDEB5 , AKT_TPSALD , AKT_NIV01 , AKT_NIV02 , AKT_NIV03 , AKT_NIV04 , AKT_NIV05 , AKT_NIV06 , AKT_ANALIT , 
                R_E_C_N_O_ ) 
         VALUES (@cFil_AKT , @IN_CHAVE , @IN_DATA , @IN_CONFIG , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_TPSALD , 
                @IN_NIV01 , @IN_NIV02 , @IN_NIV03 , @IN_NIV04 , @IN_NIV05 , @IN_NIV06 , @IN_ANALIT , @iRecnoAKT );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoAKT = @iRecnoAKT + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE AKT010 
           WITH (ROWLOCK) 
            SET AKT_MVDEB1  = AKT_MVDEB1  + @nValor1 , AKT_MVDEB2  = AKT_MVDEB2  + @nValor2 , AKT_MVDEB3  = AKT_MVDEB3  + @nValor3 
           , AKT_MVDEB4  = AKT_MVDEB4  + @nValor4 , AKT_MVDEB5  = AKT_MVDEB5  + @nValor5 
          WHERE R_E_C_N_O_  = @iRecnoAKT 
         commit tran 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[PCO003_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[PCO003_13_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[PCO003_13_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[PCO003_13_02]
(
    @IN_FILIALCOR Char( 2) , 
    @IN_CONFIG Char( 2) , 
    @IN_TIPOMOV Char( 01 ) , 
    @IN_DATA Char( 08 ) , 
    @IN_DATAF Char( 08 ) , 
    @IN_CHAVE Char( 150) , 
    @IN_VALOR1 Float , 
    @IN_VALOR2 Float , 
    @IN_VALOR3 Float , 
    @IN_VALOR4 Float , 
    @IN_VALOR5 Float , 
    @IN_TPSALD Char( 2) , 
    @IN_NIV01 Char( 20) , 
    @IN_NIV02 Char( 20) , 
    @IN_NIV03 Char( 20) , 
    @IN_NIV04 Char( 20) , 
    @IN_NIV05 Char( 20) , 
    @IN_NIV06 Char( 20) , 
    @IN_ANALIT Char( 1) , 
    @OUT_RESULTADO Char( 01 )  output ) AS
 
-- Declaration of variables
DECLARE @cFil_AKT Char( 2)
DECLARE @cAux Char( 03 )
DECLARE @iRecnoAKT Integer
DECLARE @iRecno Integer
DECLARE @nValor1 Float
DECLARE @nValor2 Float
DECLARE @nValor3 Float
DECLARE @nValor4 Float
DECLARE @nValor5 Float
DECLARE @Out_Res Char( 01 )
DECLARE @iLoop Integer
DECLARE @ins_error Integer
DECLARE @ins_ini Integer
DECLARE @ins_fim Integer
DECLARE @icoderror Integer
BEGIN
   SET @OUT_RESULTADO  = '0' 
   SET @Out_Res  = '0' 
   SET @cAux  = 'AKT' 
   EXEC XFILIAL_13_02 @cAux , @IN_FILIALCOR , @cFil_AKT output 
   SET @nValor1  = @IN_VALOR1 
   SET @nValor2  = @IN_VALOR2 
   SET @nValor3  = @IN_VALOR3 
   SET @nValor4  = @IN_VALOR4 
   SET @nValor5  = @IN_VALOR5 
   SET @iRecnoAKT  = null 
   IF @IN_TIPOMOV  = 'C' 
   BEGIN 
      SELECT @iRecnoAKT  = R_E_C_N_O_ 
        FROM AKT030 
        WHERE AKT_FILIAL  = @cFil_AKT  and AKT_CONFIG  = @IN_CONFIG  and AKT_CHAVE  = @IN_CHAVE  and AKT_DATA  = @IN_DATA 
         and D_E_L_E_T_  = ' ' 
      IF @iRecnoAKT Is null 
      BEGIN 
         SELECT @iRecnoAKT  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM AKT030 
         SET @iRecnoAKT  = @iRecnoAKT  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO AKT030 (AKT_FILIAL , AKT_CHAVE , AKT_DATA , AKT_CONFIG , AKT_MVCRD1 , AKT_MVCRD2 , AKT_MVCRD3 , AKT_MVCRD4 , 
                AKT_MVCRD5 , AKT_TPSALD , AKT_NIV01 , AKT_NIV02 , AKT_NIV03 , AKT_NIV04 , AKT_NIV05 , AKT_NIV06 , AKT_ANALIT , 
                R_E_C_N_O_ ) 
         VALUES (@cFil_AKT , @IN_CHAVE , @IN_DATA , @IN_CONFIG , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_TPSALD , 
                @IN_NIV01 , @IN_NIV02 , @IN_NIV03 , @IN_NIV04 , @IN_NIV05 , @IN_NIV06 , @IN_ANALIT , @iRecnoAKT );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoAKT = @iRecnoAKT + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE AKT030 
           WITH (ROWLOCK) 
            SET AKT_MVCRD1  = AKT_MVCRD1  + @nValor1 , AKT_MVCRD2  = AKT_MVCRD2  + @nValor2 , AKT_MVCRD3  = AKT_MVCRD3  + @nValor3 
           , AKT_MVCRD4  = AKT_MVCRD4  + @nValor4 , AKT_MVCRD5  = AKT_MVCRD5  + @nValor5 
          WHERE R_E_C_N_O_  = @iRecnoAKT 
         commit tran 
      END 
   END 
   ELSE 
   BEGIN 
      SELECT @iRecnoAKT  = R_E_C_N_O_ 
        FROM AKT030 
        WHERE AKT_FILIAL  = @cFil_AKT  and AKT_CONFIG  = @IN_CONFIG  and AKT_CHAVE  = @IN_CHAVE  and AKT_DATA  = @IN_DATA 
         and D_E_L_E_T_  = ' ' 
      IF @iRecnoAKT Is null 
      BEGIN 
         SELECT @iRecnoAKT  = COALESCE ( MAX ( R_E_C_N_O_ ), 0 )
           FROM AKT030 
         SET @iRecnoAKT  = @iRecnoAKT  + 1 
         select @iLoop = 0 
While @iLoop = 0 begin 
 Begin tran
  BEGIN TRY 
          
         INSERT INTO AKT030 (AKT_FILIAL , AKT_CHAVE , AKT_DATA , AKT_CONFIG , AKT_MVDEB1 , AKT_MVDEB2 , AKT_MVDEB3 , AKT_MVDEB4 , 
                AKT_MVDEB5 , AKT_TPSALD , AKT_NIV01 , AKT_NIV02 , AKT_NIV03 , AKT_NIV04 , AKT_NIV05 , AKT_NIV06 , AKT_ANALIT , 
                R_E_C_N_O_ ) 
         VALUES (@cFil_AKT , @IN_CHAVE , @IN_DATA , @IN_CONFIG , @nValor1 , @nValor2 , @nValor3 , @nValor4 , @nValor5 , @IN_TPSALD , 
                @IN_NIV01 , @IN_NIV02 , @IN_NIV03 , @IN_NIV04 , @IN_NIV05 , @IN_NIV06 , @IN_ANALIT , @iRecnoAKT );
          
         
    select @iLoop = 1 
  END TRY 
  BEGIN CATCH 
    select @ins_error = @@ERROR
    If @ins_error = 2627 
      begin
        select @iRecnoAKT = @iRecnoAKT + 1 
    End 
    If ( @ins_error <> 2627 )
    begin
       select @iLoop = 1
    End
  END CATCH
  commit Tran
End 
 
      END 
      ELSE 
      BEGIN 
         begin tran 
         UPDATE AKT030 
           WITH (ROWLOCK) 
            SET AKT_MVDEB1  = AKT_MVDEB1  + @nValor1 , AKT_MVDEB2  = AKT_MVDEB2  + @nValor2 , AKT_MVDEB3  = AKT_MVDEB3  + @nValor3 
           , AKT_MVDEB4  = AKT_MVDEB4  + @nValor4 , AKT_MVDEB5  = AKT_MVDEB5  + @nValor5 
          WHERE R_E_C_N_O_  = @iRecnoAKT 
         commit tran 
      END 
   END 
   SET @OUT_RESULTADO  = '1' 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_01_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_01_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_01_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_01_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_01_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_01_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_01_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_01_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_02_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_02_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_02_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_02_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_02_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_02_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_02_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_02_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_03_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_03_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_03_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_03_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_03_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_03_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_03_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_03_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_06_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_06_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_06_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_06_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_06_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_06_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_06_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_06_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_07_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_07_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_07_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_07_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_07_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_07_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_07_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_07_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_08_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_08_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_08_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_08_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_08_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_08_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_08_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_08_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_09_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_09_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_09_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_09_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_09_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_09_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_09_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_09_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_10_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_10_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_10_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_10_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_10_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_10_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_10_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_10_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_11_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_11_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_11_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_11_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_11_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_11_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_11_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_11_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_12_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_12_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_12_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_12_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_12_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_12_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_12_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_12_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_13_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_13_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_13_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_13_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_13_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_13_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_13_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_13_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_14_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_14_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_14_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_14_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_14_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_14_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_14_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_14_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_15_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_15_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_15_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_15_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_15_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_15_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_15_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_15_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_16_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_16_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_16_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_16_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_16_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_16_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_16_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_16_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_17_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_17_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_17_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_17_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_17_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_17_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_17_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_17_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_18_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_18_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_18_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_18_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_18_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_18_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_18_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_18_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_19_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_19_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_19_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_19_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_19_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_19_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_19_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_19_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_20_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_20_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_20_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_20_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_20_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_20_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_20_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_20_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_21_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_21_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_21_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_21_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_21_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_21_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_21_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_21_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_22_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_22_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_22_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_22_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_22_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_22_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_22_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_22_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_23_01].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_23_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_23_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_23_01]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2010 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO

GO
--SqlScripter----[dbo].[XFILIAL_23_02].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[XFILIAL_23_02]') IS NULL EXEC('CREATE PROCEDURE [dbo].[XFILIAL_23_02] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
-- Procedure creation 
ALTER PROCEDURE [dbo].[XFILIAL_23_02]
(
    @IN_ALIAS Char( 03 ) , 
    @IN_FILIALCOR Char( 2) , 
    @OUT_FILIAL Char( 2)  output ) AS
 
-- Declaration of variables
DECLARE @cModo Char( 01 )
DECLARE @cModoUn Char( 01 )
DECLARE @cModoEmp Char( 01 )
DECLARE @iTamFil Integer
DECLARE @iTamUn Integer
DECLARE @iTamEmp Integer
BEGIN
   SET @OUT_FILIAL  = ' ' 
   SET @cModo  = ' '   
   SET @cModoUn  = ' '   
   SET @cModoEmp  = ' ' 
   SET @iTamFil  = 0   
   SET @iTamUn  = 0   
   SET @iTamEmp  = 0 
   SELECT @cModo  = X2_MODO , @cModoUn  = X2_MODOUN , @cModoEmp  = X2_MODOEMP , @iTamFil  = X2_TAMFIL , @iTamUn  = X2_TAMUN 
     , @iTamEmp  = X2_TAMEMP 
     FROM SX2020 
     WHERE X2_CHAVE  = @IN_ALIAS  and D_E_L_E_T_  = ' ' 
   IF  (@iTamEmp  = 0  and @iTamUn  = 0  and @iTamFil  >= 2 ) 
   BEGIN 
      IF @cModo  = 'C' 
      BEGIN 
         SET @OUT_FILIAL  = '  ' 
      END 
      ELSE 
      BEGIN 
         SET @OUT_FILIAL  = @IN_FILIALCOR 
      END 
   END 
   ELSE 
   BEGIN 
      IF @iTamEmp  = 0 
      BEGIN 
         IF @cModoUn  = 'E' 
         BEGIN 
            IF @cModo  = 'E' 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamUn  + 1 , 
                      @iTamFil )
            END 
            ELSE 
            BEGIN 
               SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamUn )
            END 
         END 
      END 
      ELSE 
      BEGIN 
         IF @iTamUn  > 0 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModoUn  = 'E' 
               BEGIN 
                  IF @cModo  = 'E' 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + @iTamUn  + 1 , @iTamFil )
                  END 
                  ELSE 
                  BEGIN 
                     SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                       , @iTamUn )
                  END 
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
         ELSE 
         BEGIN 
            IF @cModoEmp  = 'E' 
            BEGIN 
               IF @cModo  = 'E' 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp ) + SUBSTRING ( @IN_FILIALCOR , @iTamEmp  + 1 
                    , @iTamFil )
               END 
               ELSE 
               BEGIN 
                  SET @OUT_FILIAL  = SUBSTRING ( @IN_FILIALCOR , 1 , @iTamEmp )
               END 
            END 
         END 
      END 
   END 
END
GO
