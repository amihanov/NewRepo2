
GO
--SqlScripter----[dbo].[sp_cons_arch_nf].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_arch_nf]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_arch_nf] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_arch_nf]
@error varchar(255)  OUTPUT,
   @cod_desc varchar(5)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_arch_nf
   *    *
   *    *      Objetivo        :       Retorna el codigo del archivo con nuevo formato de caratula 
   *    *
   *    *      Autor          :       Manuel Arancibia A.
   *    *      Creacion        :       09/12/2008
   *    *
   *    *      Entrada         :      	cod_desc        código del archivo 
   *    *				
   *    *                                              
   *    *      Salida          :      	@error		codigo y glosadel error
   *    *						ocurrido en el SP
   *    *
   *    *      Comentario      :      	No tiene
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   BEGIN

      SELECT dbo.tbl_desc.cod_desc
      FROM dbo.tbl_desc
      WHERE dbo.tbl_desc.tip_desc = 'NF' AND dbo.tbl_desc.cod_desc = @cod_desc

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR <> 0)
         BEGIN

            SELECT @cod_e = 'DIPB001'

            EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT

            SELECT @error = @cod_e + ': ' + @gls_e

         END
      ELSE 
         BEGIN
            SELECT @error = '0'
         END

   END
GO

GO
--SqlScripter----[dbo].[sp_cons_archivo_car_nueva].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_archivo_car_nueva]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_archivo_car_nueva] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_archivo_car_nueva]
@vcError varchar(255)  OUTPUT,
   @vcCod_desc varchar(5)
AS 
   
   /*
   *   
   *   
   *    *      Servicio        :       sp_cons_archivo_car_nueva
   *    *
   *    *      Objetivo        :       Retorna el codigo del archivo con nuevas lineas de caratula 
   *    *
   *    *      Autor           :       Hans Miranda F.
   *    *      Creacion        :       23/04/2015
   *    *
   *    *      Entrada         :        cod_desc        c≤digo del archivo 
   *    *       
   *    *                                              
   *    *      Salida          :        @error    codigo y glosadel error
   *    *                               ocurrido en el SP
   *    *
   *    *      Comentario      :        No tiene
   *    *
   *
   */
   DECLARE
      @vcCod_e varchar(7), 
      @vcGls_e varchar(255)
   BEGIN

      SELECT dbo.tbl_desc.cod_desc
      FROM dbo.tbl_desc
      WHERE dbo.tbl_desc.tip_desc = 'CN' AND dbo.tbl_desc.cod_desc = @vcCod_desc



      IF (@@ERROR <> 0)
         BEGIN

            SELECT @vcCod_e = 'DIPB001'

            EXECUTE dbo.sp_error @vcCod_e, @vcGls_e  OUTPUT

            SELECT @vcError = @vcCod_e + ': ' + @vcGls_e

         END
      ELSE 
         BEGIN
            SELECT @vcError = '0'
         END

   END
GO

GO
--SqlScripter----[dbo].[sp_cons_cant_registros].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_cant_registros]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_cant_registros] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_cant_registros]
@vcError varchar(255)  OUTPUT
AS 

  /*
   *   
   *   
   *    *      Servicio        :       MonitorFt3
   *    *
   *    *      Objetivo        :       Consulta la cantidad de registros existente en las tablas
   *    *                              tbl_opca,tbl_oppr,tbl_tarc,tbl_tpro
   *    *
   *    *      Autor           :       Hans Miranda F.
   *    *
   *    *      Creacion        :       25/11/2013
   *    *
   *    *
   *    *      Resultado       :       idTrazaOpca
   *    *                              idTrazaOppr
   *    *                              idTrazaTarc
   *    *                              idTrazaTpro
   *    *
   *    *                             
   *    *      Salida          :       @vcError          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   
 DECLARE @vcGls_error varchar(255),   
         @iIdOpca int,
         @iIdOppr int,
         @iIdTarc int,
         @iIdTpro int
      
 SELECT @vcError = '0'

  BEGIN


     select @iIdOpca = count(ide_traz) from tbl_opca
     select @iIdOppr = count(ide_traz) from tbl_oppr
     select @iIdTarc = count(ide_traz) from tbl_tarc
     select @iIdTpro = count(ide_traz) from tbl_tpro


     select @iIdOpca as idTrazaOpca, @iIdOppr as idTrazaOppr, @iIdTarc as idTrazaTarc, @iIdTpro as idTrazaTpro
            
         IF @@ERROR != 0
          BEGIN      
               SELECT @vcError = 'CCANT001'

          END
  END
       
  BEGIN

         SELECT @vcGls_error = ''

         EXECUTE dbo.sp_error @vcError, @vcGls_error  OUTPUT

         SELECT @vcError = @vcError + ': ' + @vcGls_error
   
   
         IF @vcError != '0'
            RETURN -1
            
         RETURN 0
      

   END
GO

GO
--SqlScripter----[dbo].[sp_cons_casi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_casi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_casi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_casi]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_casi
   *    *
   *    *      Objetivo        :       consulta registros de una Casilla Interna    
   *    *
   *    *      Autor          :       ruh.
   *    *
   *    *      Creacion        :       20/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi       codigo de la Casilla       
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *    
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   IF NOT (nullif(ltrim(nullif(rtrim(@cod_casi), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_casi.cod_casi
               FROM dbo.tbl_casi
               WHERE dbo.tbl_casi.cod_casi = @cod_casi
            )
            SELECT @cod_e = 'CASI001'
         ELSE 
            BEGIN

               SELECT 
                  dbo.tbl_casi.cod_casi, 
                  dbo.tbl_casi.des_casi, 
                  dbo.tbl_casi.cod_inst, 
                  dbo.tbl_casi.usu_cnxn, 
                  dbo.tbl_casi.pas_cnxn, 
                  dbo.tbl_casi.dir_entr, 
                  dbo.tbl_casi.dir_sali, 
                  dbo.tbl_casi.dir_buzo, 
                  dbo.tbl_casi.flg_freg, 
                  dbo.tbl_casi.flg_gavi, 
                  dbo.tbl_casi.flg_gnot
               FROM dbo.tbl_casi
               WHERE dbo.tbl_casi.cod_casi = @cod_casi

               SELECT @cod_e = '0'

            END
      END
   ELSE 
      BEGIN

         SELECT 
            dbo.tbl_casi.cod_casi, 
            dbo.tbl_casi.des_casi, 
            dbo.tbl_casi.cod_inst, 
            dbo.tbl_casi.usu_cnxn, 
            dbo.tbl_casi.pas_cnxn, 
            dbo.tbl_casi.dir_entr, 
            dbo.tbl_casi.dir_sali, 
            dbo.tbl_casi.dir_buzo, 
            dbo.tbl_casi.flg_freg, 
            dbo.tbl_casi.flg_gavi, 
            dbo.tbl_casi.flg_gnot
         FROM dbo.tbl_casi

         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_cdex].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_cdex]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_cdex] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_cdex]
@error varchar(255)  OUTPUT,
   @cod_cdex varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_cdex
   *    *
   *    *      Objetivo        :       Consulta los datos de una casilla o todas las 
   *    *                             casillas externas    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_cdex      codigo casilla externa       
   *    *
   *    *      Salida         :       @error         codigo y glosa del error 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   IF NOT (nullif(ltrim(nullif(rtrim(@cod_cdex), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_cdex.cod_cdex
               FROM dbo.tbl_cdex
               WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex
            )
            SELECT @cod_e = 'CDEX003'
         ELSE 
            BEGIN

               SELECT dbo.tbl_cdex.cod_cdex, dbo.tbl_cdex.des_cdex, dbo.tbl_cdex.cod_serv, dbo.tbl_cdex.cod_inst
               FROM dbo.tbl_cdex
               WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex

               SELECT @cod_e = '0'

            END
      END
   ELSE 
      BEGIN

         SELECT dbo.tbl_cdex.cod_cdex, dbo.tbl_cdex.des_cdex, dbo.tbl_cdex.cod_serv, dbo.tbl_cdex.cod_inst
         FROM dbo.tbl_cdex

         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_cerr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_cerr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_cerr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_cerr]
@error varchar(255)  OUTPUT,
   @cod_erro varchar(7) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_cerr
   *    *
   *    *      Objetivo        :       consulta sobre un codigo determinado  
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_erro	codigo del error       
   *    *
   *    *      Salida          :       @error          error en e SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   IF NOT (nullif(ltrim(nullif(rtrim(@cod_erro), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_cerr.cod_erro
               FROM dbo.tbl_cerr
               WHERE dbo.tbl_cerr.cod_erro = @cod_erro
            )
            SELECT @cod_e = 'CERR002'
         ELSE 
            BEGIN

               SELECT dbo.tbl_cerr.cod_erro, dbo.tbl_cerr.des_erro
               FROM dbo.tbl_cerr
               WHERE dbo.tbl_cerr.cod_erro = @cod_erro

               SELECT @cod_e = '0'

            END
      END
   ELSE 
      BEGIN

         SELECT dbo.tbl_cerr.cod_erro, dbo.tbl_cerr.des_erro
         FROM dbo.tbl_cerr

         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_corr_todos].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_corr_todos]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_corr_todos] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_corr_todos]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_corr_todos
   *    *
   *    *      Objetivo        :       Consulta todos los correlativos por institucion    
   *    *				existentes
   *    *
   *    *      Autor           :       Clauio Velasquez S.
   *    *
   *    *      Creacion        :       17/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *
   *    *      Salida          :       @error          Codigo y error ocurrido en el SP
   *    *
   *    *      Comentario      :      Notiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   BEGIN

      BEGIN TRANSACTION 

      SELECT 
         dbo.tbl_corr.cod_inst, 
         dbo.tbl_corr.cor_actu, 
         CONVERT(varchar(10), dbo.tbl_corr.fec_ingr, 103) AS fec_ingr, 
         CONVERT(varchar(8), dbo.tbl_corr.fec_ingr, 108) AS hor_ingr, 
         dbo.tbl_corr.usu_ingr
      FROM dbo.tbl_corr

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF @@ERROR != 0
         BEGIN

            IF @@TRANCOUNT > 0
               ROLLBACK TRANSACTION 

            SELECT @cod_e = 'CORR005'

         END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_dest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_dest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_dest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_dest]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6),
   @cas_dest varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF (nullif(ltrim(nullif(rtrim(@cod_prod), '')), '') IS NULL AND nullif(ltrim(nullif(rtrim(@cas_dest), '')), '') IS NULL)
      SELECT dbo.tbl_dest.cod_serv, dbo.tbl_dest.cas_dest, dbo.tbl_dest.cod_prod, dbo.tbl_dest.cod_inst
      FROM dbo.tbl_dest
   ELSE 
      BEGIN
         IF NOT EXISTS 
            (
               SELECT *
               FROM dbo.tbl_dest
               WHERE dbo.tbl_dest.cod_prod = @cod_prod AND dbo.tbl_dest.cas_dest = @cas_dest
            )
            SELECT @error = 'DEST012'
         ELSE 
            SELECT dbo.tbl_dest.cod_serv, dbo.tbl_dest.cod_inst
            FROM dbo.tbl_dest
            WHERE dbo.tbl_dest.cod_prod = @cod_prod AND dbo.tbl_dest.cas_dest = @cas_dest
      END
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @error = 'DEST009'
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_estt].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_estt]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_estt] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_estt]
@error varchar(255)  OUTPUT,
   @est_traz varchar(2)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_estt
   *    *
   *    *      Objetivo        :       Consultar sobre 1 o todos los Estados    
   *    *
   *    *      Autor                  ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @est_traz      codigo del Estado de Traza       
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *   *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   IF NOT (nullif(ltrim(nullif(rtrim(@est_traz), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_estt.est_traz
               FROM dbo.tbl_estt
               WHERE dbo.tbl_estt.est_traz = @est_traz
            )
            SELECT @cod_e = 'ESTT001'
         ELSE 
            BEGIN

               SELECT dbo.tbl_estt.est_traz, dbo.tbl_estt.des_traz
               FROM dbo.tbl_estt
               WHERE dbo.tbl_estt.est_traz = @est_traz

               SELECT @cod_e = '0'

            END
      END
   ELSE 
      BEGIN

         SELECT dbo.tbl_estt.est_traz, dbo.tbl_estt.des_traz
         FROM dbo.tbl_estt

         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_feri].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_feri]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_feri] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_feri]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_feri
   *    *
   *    *      Objetivo        :       Consulta todas las fechas festivas de la tabla
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :      21/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       No tiene
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT dbo.tbl_feri.fec_feri, dbo.tbl_feri.des_feri, dbo.tbl_feri.fec_ingr
   FROM dbo.tbl_feri
   ORDER BY dbo.tbl_feri.fec_feri
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_hpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_hpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_hpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_hpro]
@error varchar(255)  OUTPUT,
   @ide_traz int = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_hpro
   *    *
   *    *      Objetivo        :       Consulta registro en tabla historica de productos
   *    *
   *    *      Autor           :       Claudio Velasquz S.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @ide_traz 	identificador de traza
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario     :       No tiene 
   *    *
   *
   *   -- Declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*-- inicializamos variables*/
   SELECT @error = '0'
   /*-- cuerpo del sp*/
   IF (@ide_traz IS NULL)
      SELECT @error = 'HPRO004'
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         SELECT 
            dbo.tbl_hpro.est_traz, 
            dbo.tbl_hpro.cod_prod, 
            dbo.tbl_hpro.cod_inst, 
            dbo.tbl_hpro.cod_casi, 
            dbo.tbl_hpro.cod_serv, 
            dbo.tbl_hpro.nom_arch, 
            dbo.tbl_hpro.tam_arch, 
            dbo.tbl_hpro.fec_rece
         FROM dbo.tbl_hpro
         WHERE dbo.tbl_hpro.ide_traz = @ide_traz

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'HPRO005'
         ELSE 
            IF @@ROWCOUNT <= 0
               SELECT @error = 'HPRO001'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION /* 	Por si las moscas*/

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_hproridetraza].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_hproridetraza]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_hproridetraza] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_hproridetraza]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   IF (@itr_ini < 0 AND @itr_fin < 0)
      BEGIN
         SELECT 
            dbo.tbl_hpro.ide_traz, 
            dbo.tbl_hpro.est_traz, 
            dbo.tbl_hpro.cod_prod, 
            dbo.tbl_hpro.cod_inst, 
            dbo.tbl_hpro.cod_casi, 
            dbo.tbl_hpro.cod_serv, 
            dbo.tbl_hpro.nom_arch, 
            dbo.tbl_hpro.tam_arch, 
            dbo.tbl_hpro.fec_rece
         FROM dbo.tbl_hpro
      END
   ELSE 
      BEGIN
         SELECT 
            dbo.tbl_hpro.ide_traz, 
            dbo.tbl_hpro.est_traz, 
            dbo.tbl_hpro.cod_prod, 
            dbo.tbl_hpro.cod_inst, 
            dbo.tbl_hpro.cod_casi, 
            dbo.tbl_hpro.cod_serv, 
            dbo.tbl_hpro.nom_arch, 
            dbo.tbl_hpro.tam_arch, 
            dbo.tbl_hpro.fec_rece
         FROM dbo.tbl_hpro
         WHERE dbo.tbl_hpro.ide_traz >= @itr_ini AND dbo.tbl_hpro.ide_traz <= @itr_fin
      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_hres_casdestestado].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_hres_casdestestado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_hres_casdestestado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_hres_casdestestado]
@error varchar(255)  OUTPUT,
   @est_resc varchar(2),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_hres_cadestestado
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_hres que coincidan con el estado de rescate 
   *    *                              y el destino.
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *     Modificado      :       
   *    *
   *    *      Entrada         :       @est_resc       Estado de Rescate
   *    *                              @cas_dest       Casilla de Destino
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en l SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_hres.cor_resc, 
      dbo.tbl_hres.nom_msg, 
      dbo.tbl_hres.nom_arch, 
      dbo.tbl_hres.tam_arch, 
      dbo.tbl_hres.est_resc, 
      dbo.tbl_hres.est_fres, 
      dbo.tbl_hres.cas_orig, 
      dbo.tbl_hres.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_ingr, 103) AS fec_ingr, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_ingr, 108) AS hor_ingr
   FROM dbo.tbl_hres
   WHERE dbo.tbl_hres.cas_dest = @cas_dest AND dbo.tbl_hres.est_resc = @est_resc
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_hres_casdestrcorr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_hres_casdestrcorr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_hres_casdestrcorr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_hres_casdestrcorr]
@error varchar(255)  OUTPUT,
   @corr_ini int,
   @corr_fin int,
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_hres_casdestrcorr
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_hres que coincidan por el rango de correlativos 
   *    *                              y de destino ingresada.
   *    *
   *    *      Autr           :       ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @corr_ini       Correlativo Inicial
   *    *                              @corr_fin       Correlativo Final
   *    *                             @cas_dest       Casilla de Destino
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_hres.cor_resc, 
      dbo.tbl_hres.nom_msg, 
      dbo.tbl_hres.nom_arch, 
      dbo.tbl_hres.tam_arch, 
      dbo.tbl_hres.est_resc, 
      dbo.tbl_hres.est_fres, 
      dbo.tbl_hres.cas_orig, 
      dbo.tbl_hres.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_ingr, 103) AS fec_ingr, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_ingr, 108) AS hor_ingr
   FROM dbo.tbl_hres
   WHERE 
      dbo.tbl_hres.cas_dest = @cas_dest AND 
      dbo.tbl_hres.cor_resc >= @corr_ini AND 
      dbo.tbl_hres.cor_resc <= @corr_fin
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_hres_casdestrfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_hres_casdestrfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_hres_casdestrfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_hres_casdestrfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10),
   @fec_fin varchar(10),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_hres_casdestrfecha
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_hres que coincidan con la casilla de origen 
   *    *                              y de destino ingresada.
   *    *
   *    *      Auor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cas_orig       Casilla de Origen
   *    *                              @cas_dest       Casilla de Destino
   *    *
   *    *     Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_hres.cor_resc, 
      dbo.tbl_hres.nom_msg, 
      dbo.tbl_hres.nom_arch, 
      dbo.tbl_hres.tam_arch, 
      dbo.tbl_hres.est_resc, 
      dbo.tbl_hres.est_fres, 
      dbo.tbl_hres.cas_orig, 
      dbo.tbl_hres.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_ingr, 103) AS fec_ingr, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_ingr, 108) AS hor_ingr
   FROM dbo.tbl_hres
   WHERE 
      dbo.tbl_hres.cas_dest = @cas_dest AND 
      dbo.tbl_hres.fec_ingr >= CONVERT(datetime2(3), @fec_ini, 111) AND 
      dbo.tbl_hres.fec_ingr < dateadd(day, 1, CONVERT(datetime2(3), @fec_fin, 111))
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_hres_casoricasdest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_hres_casoricasdest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_hres_casoricasdest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_hres_casoricasdest]
@error varchar(255)  OUTPUT,
   @cas_orig varchar(8),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_hres_caoricasdest
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_hres que coincidan con la casilla de origen 
   *    *                              y de destino ingresada.
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cas_orig       Casilla de Origen
   *    *                              @cas_dest       Casilla de Destino
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocrrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_hres.cor_resc, 
      dbo.tbl_hres.nom_msg, 
      dbo.tbl_hres.nom_arch, 
      dbo.tbl_hres.tam_arch, 
      dbo.tbl_hres.est_resc, 
      dbo.tbl_hres.est_fres, 
      dbo.tbl_hres.cas_orig, 
      dbo.tbl_hres.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_hres.fec_ingr, 103) AS fec_ingr, 
      CONVERT(varchar(8), dbo.tbl_hres.fec_ingr, 108) AS hor_ingr
   FROM dbo.tbl_hres
   WHERE dbo.tbl_hres.cas_orig = @cas_orig AND dbo.tbl_hres.cas_dest = @cas_dest
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_htracasidest].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_htracasidest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_htracasidest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_htracasidest]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @vcFechaRecepcion varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_htracasidest
   *    *
   *    *      Objetivo        :       Consultar historico por casilla destino
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       26/12/2013, Hans Miranda F.
   *    *
   *    *      Motivo          :       Limitar cantidad de registros extraidos a partir de una fecha de recepcion.
   *    *
   *    *      Entrada         :       @cod_casi          Codigo de casilla
   *    *                              @vcFechaRecepcion  Fecha inicial
   *    *
   *    *      Salida          :       @error   Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   - declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializamos variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM tbl_casi
         WHERE tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   IF (@error = '0')
      BEGIN

         SELECT 
               tbl_htra.ide_traz, 
               tbl_htra.est_traz, 
               tbl_htra.cas_orig, 
               tbl_htra.cas_dest, 
               tbl_htra.nom_arcc, 
               tbl_htra.nom_arre, 
               tbl_htra.tam_arch, 
               CONVERT(char(10), tbl_htra.fec_rece, 103) AS fec_recep, 
               CONVERT(char(8), tbl_htra.fec_rece, 108) AS hor_recep, 
               CONVERT(char(10), tbl_htra.fec_ingr, 103) AS fec_ingre, 
               CONVERT(char(8), tbl_htra.fec_ingr, 108) AS hor_ingre
          FROM tbl_htra
          WHERE tbl_htra.cas_dest = @cod_casi and
                tbl_htra.fec_rece >= CONVERT(datetime, @vcFechaRecepcion+' 00:00:00.000',121)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'HTRA001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_htracasiorig].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_htracasiorig]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_htracasiorig] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_htracasiorig]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @vcFechaRecepcion varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_htracasiorig
   *    *
   *    *      Objetivo        :       Consultar historico de traza por casilla origen.
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       26/12/2013, Hans Miranda F.
   *    *
   *    *      Entrada         :       @cod_casi          C≤digo de casilla
   *    *
   *    *      Motivo          :       Limitar cantidad de registros extraidos a partir de una fecha de recepcion.
   *    *
   *    *      Entrada         :       @cod_casi          Codigo de casilla
   *    *                              @vcFechaRecepcion  Fecha inicial
   *    *
   *    *      Salida          :       @error   Error gnerador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   - declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- Inicializamos variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM tbl_casi
         WHERE tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   IF (@error = '0')
      BEGIN

         SELECT
               tbl_htra.ide_traz, 
               tbl_htra.est_traz, 
               tbl_htra.cas_orig, 
               tbl_htra.cas_dest, 
               tbl_htra.nom_arcc, 
               tbl_htra.nom_arre, 
               tbl_htra.tam_arch, 
               CONVERT(char(10), tbl_htra.fec_rece, 103) AS fec_recep, 
               CONVERT(char(8), tbl_htra.fec_rece, 108) AS hor_recep, 
               CONVERT(char(10), tbl_htra.fec_ingr, 103) AS fec_ingre, 
               CONVERT(char(8), tbl_htra.fec_ingr, 108) AS hor_ingre
          FROM tbl_htra
          WHERE tbl_htra.cas_orig = @cod_casi and
                tbl_htra.fec_rece >= CONVERT(datetime, @vcFechaRecepcion+' 00:00:00.000',121)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'HTRA001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_htraestado].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_htraestado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_htraestado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_htraestado]
@error varchar(255)  OUTPUT,
   @est_traz varchar(2),
   @vcFechaRecepcion varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_htraestado
   *    *
   *    *      Objetivo        :       Consultar historico de traza por estado.
   *    *                              
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       26/12/2013, Hans Miranda F.
   *    *
   *    *      Motivo          :       Limitar cantidad de registros extraidos a partir de una fecha de recepcion.
   *    *
   *    *      Entrada         :       @est_traz          Estado de traza
   *    *                              @vcFechaRecepcion  Fecha inicial
   *    *
   *    *      Salida          :       @error   Error generador en elSP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   - declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializamos variable*/
   SELECT @error = '0'
   /*- cuerpo sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM tbl_estt
         WHERE tbl_estt.est_traz = @est_traz
      )
      SELECT @error = 'ESTT001'
   IF (@error = '0')
      BEGIN

         SELECT 
               tbl_htra.ide_traz, 
               tbl_htra.est_traz, 
               tbl_htra.cas_orig, 
               tbl_htra.cas_dest, 
               tbl_htra.nom_arcc, 
               tbl_htra.nom_arre, 
               tbl_htra.tam_arch, 
               CONVERT(char(10), tbl_htra.fec_rece, 103) AS fec_recep, 
               CONVERT(char(8), tbl_htra.fec_rece, 108) AS hor_recep, 
               CONVERT(char(10), tbl_htra.fec_ingr, 103) AS fec_ingre, 
               CONVERT(char(8), tbl_htra.fec_ingr, 108) AS hor_ingre
          FROM tbl_htra
          WHERE tbl_htra.est_traz = @est_traz and
                tbl_htra.fec_rece >= CONVERT(datetime, @vcFechaRecepcion+' 00:00:00.000',121)
               
         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'HTRA001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_htraidetraza].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_htraidetraza]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_htraidetraza] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_htraidetraza]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_htraidetraza
   *    *
   *    *      Objetivo        :       Consultar historico por rango de ide. traza.
   *    *                             
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @itr_ini      	Identificador inicial
   *    *                              @itr_fin	Identificador final
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   - declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializamos variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   BEGIN TRANSACTION 
   SELECT 
      dbo.tbl_htra.ide_traz, 
      dbo.tbl_htra.est_traz, 
      dbo.tbl_htra.cas_orig, 
      dbo.tbl_htra.cas_dest, 
      dbo.tbl_htra.nom_arcc, 
      dbo.tbl_htra.nom_arre, 
      dbo.tbl_htra.tam_arch, 
      CONVERT(char(10), dbo.tbl_htra.fec_rece, 103) AS fec_recep, 
      CONVERT(char(8), dbo.tbl_htra.fec_rece, 108) AS hor_recep, 
      CONVERT(char(10), dbo.tbl_htra.fec_ingr, 103) AS fec_ingre, 
      CONVERT(char(8), dbo.tbl_htra.fec_ingr, 108) AS hor_ingre
   FROM dbo.tbl_htra
   WHERE dbo.tbl_htra.ide_traz BETWEEN @itr_ini AND @itr_fin
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF (@@ERROR != 0)
      SELECT @error = 'HTRA001'
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_htrarfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_htrarfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_htrarfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_htrarfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_htrarfecha
   *    *
   *    *      Objetivo        :       Consulta historico por rango de fecha
   *    *
   *    *      utor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @fec_ini        fecha inicial
   *    *                             @fec_fin        fecha final 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   -- declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*-- inicializamos variables*/
   SELECT @error = '0'
   /*-- cuerpo del sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 111)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 111)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF @error = '0'
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 111)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 111)

         BEGIN TRANSACTION 

         SELECT 
            dbo.tbl_htra.ide_traz, 
            dbo.tbl_htra.est_traz, 
            dbo.tbl_htra.cas_orig, 
            dbo.tbl_htra.cas_dest, 
            dbo.tbl_htra.nom_arcc, 
            dbo.tbl_htra.nom_arre, 
            dbo.tbl_htra.tam_arch, 
            CONVERT(char(10), dbo.tbl_htra.fec_rece, 103) AS fec_recep, 
            CONVERT(char(8), dbo.tbl_htra.fec_rece, 108) AS hor_recep, 
            CONVERT(char(10), dbo.tbl_htra.fec_ingr, 103) AS fec_ingre, 
            CONVERT(char(8), dbo.tbl_htra.fec_ingr, 108) AS hor_ingre
         FROM dbo.tbl_htra
         WHERE CONVERT(char(10), dbo.tbl_htra.fec_rece, 111) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'HTRA001'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION /**** por si las moscas ****/

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_inst].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_inst]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_inst] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_inst]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_inst
   *    *
   *    *      Objetivo        :       consulta el nombre de una Institucion    
   *    *
   *    *      Autor                  ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst       codigo de la institucion       
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *    
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   IF NOT (nullif(ltrim(nullif(rtrim(@cod_inst), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_inst.cod_inst
               FROM dbo.tbl_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst
            )
            SELECT @cod_e = 'INST002'
         ELSE 
            BEGIN

               SELECT dbo.tbl_inst.cod_inst, dbo.tbl_inst.nom_inst
               FROM dbo.tbl_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst

               SELECT @cod_e = '0'

            END
      END
   ELSE 
      BEGIN

         SELECT dbo.tbl_inst.cod_inst, dbo.tbl_inst.nom_inst
         FROM dbo.tbl_inst

         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_limp].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_limp]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_limp] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_limp]
@error varchar(255)  OUTPUT,
   @ide_traz int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int
   /* inicializamos variables*/
   SELECT @error = '0'
   /* programamos el sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_limp
         WHERE dbo.tbl_limp.ide_traz = @ide_traz
      )
      SELECT @error = 'LIMP002'
   IF @error = '0'
      BEGIN

         SELECT *
         FROM dbo.tbl_limp
         WHERE dbo.tbl_limp.ide_traz = @ide_traz

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'LIMP001'

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_limptodos].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_limptodos]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_limptodos] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_limptodos]
@vcError varchar(255)  OUTPUT,
   @vcFechaRecepIni varchar(10),
   @vcFechaRecepFin varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_limptodos
   *    *
   *    *      Objetivo        :       consulta todos los registros que se encuentran en la tabla tbl_limp    
   *    *
   *    *      Autor           :       uh.
   *    *
   *    *      Creacion        :       04/11/1999
   *    *
   *    *      Modificado      :       06/12/2013, Hans Miranda
   *    *
   *    *      Motivo          :       Limitar la cantidad de registros extraidos.
   *    *
   *    *      Entrada         :       @vcFechaRecepIni Fecha de inicio, recepcionados
   *    *                              @vcFechaRecepFin Fecha de termino, recepcionados
   *    *
   *    *      Salida          :       @error codigo y glosa del error 
   *    *
   *    *      Comentario      :       No tiene 
   *
   */
   
 DECLARE
   @vcCod_e varchar(7), 
   @vcGls_e varchar(255)
   
 SELECT @vcCod_e = '0'
 

 begin
    
      SELECT 
      tbl_limp.ide_traz, 
      tbl_limp.est_limp, 
      tbl_limp.est_tarc, 
      tbl_limp.est_tpro, 
      tbl_limp.cas_orig, 
      tbl_limp.cas_dest, 
      tbl_limp.nom_arch, 
      tbl_limp.tam_arch, 
      CONVERT(varchar(10),tbl_limp.fec_rece, 103) AS fec_recp, 
      CONVERT(varchar(8), tbl_limp.fec_rece, 108) AS hor_rece, 
      CONVERT(varchar(10),tbl_limp.fec_boar, 103) AS fec_boar, 
      CONVERT(varchar(8), tbl_limp.fec_boar, 108) AS hor_boar, 
      CONVERT(varchar(10),tbl_limp.fec_botr, 103) AS fec_botr, 
      CONVERT(varchar(8), tbl_limp.fec_botr, 108) AS hor_botr, 
      tbl_limp.cod_prod,
      tbl_limp.cod_inst,
      tbl_limp.cod_serv
      FROM tbl_limp
      where tbl_limp.fec_rece >= CONVERT(datetime, @vcFechaRecepIni+' 00:00:00.000',121) 
        and tbl_limp.fec_rece <= CONVERT(datetime, @vcFechaRecepFin+' 23:59:59.999',121)

       
       
       IF @@ERROR != 0          
        begin
          SELECT @vcCod_e = 'CONS001'
        end
    
       
     EXECUTE sp_error @vcCod_e, @vcGls_e  OUTPUT
     SELECT @vcError = @vcCod_e + ': ' + @vcGls_e
     IF @vcCod_e != '0'
        RETURN -1
     RETURN 0
     
end
GO

GO
--SqlScripter----[dbo].[sp_cons_monitoreo_01].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_monitoreo_01]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_monitoreo_01] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_monitoreo_01]
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *
   *    *	Servicio	:	sp_cons_monitoreo_01
   *    *	Objetivo	:	Entrega archivos en estado
   *    *                              13 con destino la sbif con
   *    *				retraso de al menos 1 hora
   *    *	Autor		:	Claudio Velásquez S.
   *    *	Creacion		27/03/2006
   *    *
   *    *	Entrada		:	no tiene
   *    *
   *
   */
   DECLARE
      @fechaActual varchar(10)
   DECLARE
      @horaActual varchar(8)
   DECLARE
      @minutos int
   DECLARE
      @estado varchar(2)
   DECLARE
      @casilla varchar(15)
   SELECT @fechaActual = CONVERT(varchar(8), getdate(), 112)
   SELECT @horaActual = CONVERT(varchar(8), getdate(), 108)
   SELECT @minutos = 60
   SELECT @estado = '13'
   SELECT @casilla = 'sbif'
   /*  Archivos pendientes*/
   PRINT 'FILE TRANSFER III PENDIENTES'
   SELECT 
      dbo.tbl_htra.ide_traz, 
      dbo.tbl_htra.est_traz, 
      dbo.tbl_htra.cas_orig, 
      dbo.tbl_htra.cas_dest, 
      dbo.tbl_htra.nom_arcc, 
      @fechaActual AS fec_ingr, 
      CONVERT(char(10), dbo.tbl_htra.fec_ingr, 108) AS hor_ingr
   FROM dbo.tbl_htra
   WHERE 
      dbo.tbl_htra.est_traz = @estado AND 
      datediff(mi, CONVERT(char(10), dbo.tbl_htra.fec_ingr, 108), @horaActual) > @minutos AND 
      dbo.tbl_htra.ide_traz IN 
      (
         SELECT dbo.tbl_tarc.ide_traz
         FROM dbo.tbl_tarc
         WHERE 
            CONVERT(char(12), dbo.tbl_tarc.fec_rece, 112) = @fechaActual AND 
            dbo.tbl_tarc.cas_dest = @casilla AND 
            dbo.tbl_tarc.est_traz = @estado
      )
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_msg_codigo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_msg_codigo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_msg_codigo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_msg_codigo]
@error varchar(255)  OUTPUT,
   @cod_msg varchar(3) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_msg_codigo
   *    *
   *    *      Objetivo        :       Consultar Estructura de Mensajes
   *    *				por codigo de mensaje
   *    *
   *    *      Autor          :       Claudio Velasquez S
   *    *
   *    *      Creacion        :       21/03/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_msg     Codigo del mensaje 
   *    *
   *    *      Salida          :       @error       Codigo y glosa del eror
   *    *                                           ocurrido en el SP
   *    *
   *    *      Comentario      :      	Implementacion para cambiar protocolo FT3 - SBIF 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @cod_msg_aux varchar(3)
   SELECT @cod_erro = '0'
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos codigo de mensaje*/
   IF (nullif(ltrim(nullif(rtrim(@cod_msg), '')), '') IS NULL)
      SELECT @cod_erro = 'ESTR004'
   ELSE 
      BEGIN

         SELECT @cod_msg_aux = upper(nullif(ltrim(nullif(rtrim(@cod_msg), '')), ''))

         BEGIN TRANSACTION 

         SELECT 
            dbo.tbl_estr.cod_msg, 
            dbo.tbl_estr.des_msg, 
            dbo.tbl_estr.nom_msg, 
            dbo.tbl_estr.lrg_msg, 
            dbo.tbl_estr.bq1_msg, 
            dbo.tbl_estr.bq2_msg, 
            dbo.tbl_estr.bq3_msg
         FROM dbo.tbl_estr
         WHERE dbo.tbl_estr.cod_msg = @cod_msg_aux

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @cod_erro = 'ESTR001'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_erro, @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   IF @cod_erro != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_msg_nombre].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_msg_nombre]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_msg_nombre] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_msg_nombre]
@error varchar(255)  OUTPUT,
   @nom_msg varchar(3) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_msg_nombre
   *    *
   *    *      Objetivo        :       Consultar Estructura de Mensajes
   *    *				por nombre de mensaje
   *    *
   *    *      Autor          :       Claudio Velasquez S
   *    *
   *    *      Creacion        :       21/03/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @nom_msg     Codigo del mensaje 
   *    *
   *    *      Salida          :       @error       Codigo y glosa del eror
   *    *                                           ocurrido en el SP
   *    *
   *    *      Comentario      :      	Implementacion para cambiar protocolo FT3 - SBIF 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @nom_msg_aux varchar(3)
   SELECT @cod_erro = '0'
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos codigo de mensaje*/
   IF (nullif(ltrim(nullif(rtrim(@nom_msg), '')), '') IS NULL)
      SELECT @cod_erro = 'ESTR005'
   ELSE 
      BEGIN

         SELECT @nom_msg_aux = upper(nullif(ltrim(nullif(rtrim(@nom_msg), '')), ''))

         BEGIN TRANSACTION 

         SELECT 
            dbo.tbl_estr.cod_msg, 
            dbo.tbl_estr.des_msg, 
            dbo.tbl_estr.nom_msg, 
            dbo.tbl_estr.lrg_msg, 
            dbo.tbl_estr.bq1_msg, 
            dbo.tbl_estr.bq2_msg, 
            dbo.tbl_estr.bq3_msg
         FROM dbo.tbl_estr
         WHERE dbo.tbl_estr.nom_msg = @nom_msg_aux

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @cod_erro = 'ESTR001'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_erro, @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   IF @cod_erro != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_msg_todos].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_msg_todos]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_msg_todos] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_msg_todos]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_msg_todos
   *    *
   *    *      Objetivo        :       Consultar todas las Estructuras de 
   *    *				Mensajes 
   *    *
   *    *      Autor           :       Claudio Velasquez S
   *    *
   *    *      Creacion        :       21/03/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Salida          :       @error       Codigo y glosa del error
   *    *                                           ocurrido en el SP
   *    *
   *    *      Comentario      :      	Implementacion para cambiar protocolo FT3 - SBIF 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255)
   SELECT @cod_erro = '0'
   BEGIN TRANSACTION 
   SELECT 
      dbo.tbl_estr.cod_msg, 
      dbo.tbl_estr.des_msg, 
      dbo.tbl_estr.nom_msg, 
      dbo.tbl_estr.lrg_msg, 
      substring(dbo.tbl_estr.bq1_msg, 1, 2) AS nro_campos
   FROM dbo.tbl_estr
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF (@@ERROR != 0)
      SELECT @cod_erro = 'ESTR001'
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   EXECUTE dbo.sp_error @cod_erro, @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   IF @cod_erro != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_opcarfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_opcarfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_opcarfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_opcarfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_opcarfecha
   *    *
   *    *      Objetivo        :       Consulta por rango de fecha de ingreso
   *    *
   *    *      Auto           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @fec_ini        Fecha inicial
   *    *				@fec_fin	Fecha final
   *    *
   *    *     Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene
   *    *
   *
   *   - declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*- inicializacion de variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 111)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 111)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF (@error = '0')
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 111)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 111)

         BEGIN TRANSACTION 

         SELECT dbo.tbl_opca.ide_traz, dbo.tbl_opca.cod_erro, CONVERT(char(1), dbo.tbl_opca.fec_ingr, 103) AS fec_ingre, CONVERT(char(8), dbo.tbl_opca.fec_ingr, 108) AS hor_ingre
         FROM dbo.tbl_opca
         WHERE CONVERT(char(10), dbo.tbl_opca.fec_ingr, 111) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'OPCA001'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION /**** por si las moscas ****/

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_oppr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_oppr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_oppr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_oppr]
@error varchar(255)  OUTPUT,
   @ide_traz int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_oppr
   *    *
   *    *      Objetivo        :       Consultar registros a tabla de Operacion Productos
   *    *
   *    *      Autor          :       ruh.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @ide_traz       Identificacion de la Traza 
   *    *
   *    *      Salida          :       @error          codigo y glosa del errr
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que exista el codigo de traza*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_oppr.ide_traz
         FROM dbo.tbl_oppr
         WHERE dbo.tbl_oppr.ide_traz = @ide_traz
      )
      SELECT @cod_e = 'OPPR001'
   ELSE 
      BEGIN

         SELECT 
            dbo.tbl_oppr.ide_traz, 
            dbo.tbl_oppr.cod_prod, 
            dbo.tbl_oppr.cod_inst, 
            dbo.tbl_oppr.cod_casi, 
            dbo.tbl_oppr.cod_serv, 
            dbo.tbl_oppr.nom_arch, 
            dbo.tbl_oppr.tam_arch, 
            dbo.tbl_oppr.cod_erro, 
            dbo.tbl_oppr.fec_rece
         FROM dbo.tbl_oppr
         WHERE dbo.tbl_oppr.ide_traz = @ide_traz

         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_opprridetraza].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_opprridetraza]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_opprridetraza] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_opprridetraza]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   IF (@itr_ini < 0 AND @itr_fin < 0)
      BEGIN
         SELECT 
            dbo.tbl_oppr.ide_traz, 
            dbo.tbl_oppr.est_traz, 
            dbo.tbl_oppr.cod_prod, 
            dbo.tbl_oppr.cod_inst, 
            dbo.tbl_oppr.cod_casi, 
            dbo.tbl_oppr.cod_serv, 
            dbo.tbl_oppr.nom_arch, 
            dbo.tbl_oppr.tam_arch, 
            dbo.tbl_oppr.cod_erro, 
            dbo.tbl_oppr.fec_rece
         FROM dbo.tbl_oppr
      END
   ELSE 
      BEGIN
         SELECT 
            dbo.tbl_oppr.ide_traz, 
            dbo.tbl_oppr.est_traz, 
            dbo.tbl_oppr.cod_prod, 
            dbo.tbl_oppr.cod_inst, 
            dbo.tbl_oppr.cod_casi, 
            dbo.tbl_oppr.cod_serv, 
            dbo.tbl_oppr.nom_arch, 
            dbo.tbl_oppr.tam_arch, 
            dbo.tbl_oppr.cod_erro, 
            dbo.tbl_oppr.fec_rece
         FROM dbo.tbl_oppr
         WHERE dbo.tbl_oppr.ide_traz >= @itr_ini AND dbo.tbl_oppr.ide_traz <= @itr_fin
      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_para].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_para]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_para] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_para]
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   SELECT *
   FROM dbo.tbl_param
GO

GO
--SqlScripter----[dbo].[sp_cons_parametros].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_parametros]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_parametros] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_parametros]
@vcError varchar(255)  OUTPUT

AS 

  /*
   *   
   *   
   *    *      Servicio        :       MonitorFt3
   *    *
   *    *      Objetivo        :       Consulta los parametros de la tbl_param,
   *    *                              sp creado para monitor FT3.
   *    *                              
   *    *                              
   *    *
   *    *      Autor           :       Hans Miranda F.
   *    *
   *    *      Creacion        :       25/11/2013
   *    *
   *    *
   *    *      Resultado       :       swsdr
   *    *                              swdre
   *    *                              swsrut
   *    *                              swrut
   *    *                              swlimp
   *    *
   *    *                             
   *    *      Salida          :       @vcError          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   
 DECLARE @vcGls_error varchar(255)   
      
 SELECT @vcError = '0'

 BEGIN

        select swsdr,swdre,swsrut,swrut,swlimp, ide_traz
          from tbl_param
            
            
         IF @@ERROR != 0
          BEGIN      
               SELECT @vcError = 'CTPARAM001'

          END
  END
       
  BEGIN

         SELECT @vcGls_error = ''

         EXECUTE dbo.sp_error @vcError, @vcGls_error  OUTPUT

         SELECT @vcError = @vcError + ': ' + @vcGls_error

         IF @vcError != '0'
            RETURN -1
            
         RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[sp_cons_prod].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_prod]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_prod] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_prod]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT (nullif(ltrim(nullif(rtrim(@cod_prod), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT *
               FROM dbo.tbl_prod
               WHERE dbo.tbl_prod.cod_prod = @cod_prod
            )
            SELECT @error = 'PROD002'
         ELSE 
            BEGIN

               SELECT dbo.tbl_prod.cod_prod, dbo.tbl_prod.des_prod, dbo.tbl_prod.dir_entr, dbo.tbl_prod.dir_sali
               FROM dbo.tbl_prod
               WHERE dbo.tbl_prod.cod_prod = @cod_prod

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'PROD010'

            END
      END
   ELSE 
      SELECT dbo.tbl_prod.cod_prod, dbo.tbl_prod.des_prod, dbo.tbl_prod.dir_entr, dbo.tbl_prod.dir_sali
      FROM dbo.tbl_prod
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_registro_rescate].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_registro_rescate]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_registro_rescate] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_registro_rescate]
@error varchar(255)  OUTPUT,
   @cas_dest varchar(8),
   @nom_arch varchar(20)

AS 


   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_registro_rescate
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_resc que coincidan 
   *    *                              con el nombre, tamano y fecha del archivo.
   *    *                              
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       12/04/2000
   *    *
   *    *      Modificado por  :       Hans Miranda F.
   *    *      
   *    *      Fecha Modif.    :       04/11/2013
   *    *
   *    *      Motivo          :       Exclusion de fecha del archivo en la consulta. 
   *    *
   *    *
   *    *      Entrada         :       @cas_dest       Casilla de destino       
   *    *                              @nom_arch       Nombre d Archivo
   *    *                             
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locals
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
      
      
begin
      
      
   SELECT 
      dbo.tbl_resc.cor_resc, 
      dbo.tbl_resc.cas_dest, 
      dbo.tbl_resc.nom_msg, 
      dbo.tbl_resc.nom_arch, 
      dbo.tbl_resc.cas_orig, 
      dbo.tbl_resc.tam_arch, 
      dbo.tbl_resc.est_resc, 
      dbo.tbl_resc.est_fres, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_arch, 108) AS hor_arch, 
      dbo.tbl_resc.usu_ingr
   FROM dbo.tbl_resc
   WHERE 
      dbo.tbl_resc.nom_arch = @nom_arch AND 
      dbo.tbl_resc.cas_dest = @cas_dest
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
   
 end
GO

GO
--SqlScripter----[dbo].[sp_cons_resc_casdestestado].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_resc_casdestestado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_resc_casdestestado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_resc_casdestestado]
@error varchar(255)  OUTPUT,
   @est_resc varchar(2),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_resc_cadestestado
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_resc que 
   *    *				coincidan con el estado de rescate 
   *    *                              y el destino.
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/200
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @est_resc       Estado de Rescate
   *    *                              @cas_dest       Casilla de Destino
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrdo en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_resc.cor_resc, 
      dbo.tbl_resc.nom_msg, 
      dbo.tbl_resc.nom_arch, 
      dbo.tbl_resc.tam_arch, 
      dbo.tbl_resc.est_resc, 
      dbo.tbl_resc.est_fres, 
      dbo.tbl_resc.cas_orig, 
      dbo.tbl_resc.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_resc, 103) AS fec_res, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_resc, 108) AS hor_res
   FROM dbo.tbl_resc
   WHERE dbo.tbl_resc.cas_dest = @cas_dest AND dbo.tbl_resc.est_resc = @est_resc
   ORDER BY dbo.tbl_resc.cor_resc
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_resc_casdestrcorr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_resc_casdestrcorr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_resc_casdestrcorr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_resc_casdestrcorr]
@error varchar(255)  OUTPUT,
   @corr_ini int,
   @corr_fin int,
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_resc_casdestrcorr
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_resc que coincidan por el rango de correlativos 
   *    *                              y de destino ingresada.
   *    *
   *    *      Autr           :       ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @corr_ini       Correlativo Inicial
   *    *                              @corr_fin       Correlativo Final
   *    *                             @cas_dest       Casilla de Destino
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_resc.cor_resc, 
      dbo.tbl_resc.nom_msg, 
      dbo.tbl_resc.nom_arch, 
      dbo.tbl_resc.tam_arch, 
      dbo.tbl_resc.est_resc, 
      dbo.tbl_resc.est_fres, 
      dbo.tbl_resc.cas_orig, 
      dbo.tbl_resc.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_resc, 103) AS fec_res, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_resc, 108) AS hor_res
   FROM dbo.tbl_resc
   WHERE 
      dbo.tbl_resc.cas_dest = @cas_dest AND 
      dbo.tbl_resc.cor_resc >= @corr_ini AND 
      dbo.tbl_resc.cor_resc <= @corr_fin
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_resc_casdestrfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_resc_casdestrfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_resc_casdestrfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_resc_casdestrfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10),
   @fec_fin varchar(10),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_resc_casdestrfecha
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_resc que coincidan con la casilla de origen 
   *    *                              y de destino ingresada.
   *    *
   *    *      Auor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cas_orig       Casilla de Origen
   *    *                              @cas_dest       Casilla de Destino
   *    *
   *    *     Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_resc.cor_resc, 
      dbo.tbl_resc.nom_msg, 
      dbo.tbl_resc.nom_arch, 
      dbo.tbl_resc.tam_arch, 
      dbo.tbl_resc.est_resc, 
      dbo.tbl_resc.est_fres, 
      dbo.tbl_resc.cas_orig, 
      dbo.tbl_resc.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_resc, 103) AS fec_resc, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_resc, 108) AS hor_resc
   FROM dbo.tbl_resc
   WHERE 
      dbo.tbl_resc.cas_dest = @cas_dest AND 
      dbo.tbl_resc.fec_resc >= CONVERT(datetime2(3), @fec_ini, 111) AND 
      dbo.tbl_resc.fec_resc < dateadd(day, 1, CONVERT(datetime2(3), @fec_fin, 111))
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_resc_casoricasdest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_resc_casoricasdest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_resc_casoricasdest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_resc_casoricasdest]
@error varchar(255)  OUTPUT,
   @cas_orig varchar(8),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_resc_caoricasdest
   *    *
   *    *      Objetivo        :       Consulta registros de tbl_resc que coincidan con la casilla de origen 
   *    *                              y de destino ingresada.
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cas_orig       Casilla de Origen
   *    *                              @cas_dest       Casilla de Destino
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocrrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT 
      dbo.tbl_resc.cor_resc, 
      dbo.tbl_resc.nom_msg, 
      dbo.tbl_resc.nom_arch, 
      dbo.tbl_resc.tam_arch, 
      dbo.tbl_resc.est_resc, 
      dbo.tbl_resc.est_fres, 
      dbo.tbl_resc.cas_orig, 
      dbo.tbl_resc.cas_dest, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_arch, 103) AS fec_arch, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_arch, 108) AS hor_arch, 
      CONVERT(varchar(10), dbo.tbl_resc.fec_resc, 103) AS fec_resc, 
      CONVERT(varchar(8), dbo.tbl_resc.fec_resc, 108) AS hor_resc
   FROM dbo.tbl_resc
   WHERE dbo.tbl_resc.cas_orig = @cas_orig AND dbo.tbl_resc.cas_dest = @cas_dest
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_serv].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_serv]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_serv] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_serv]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_serv
   *    *
   *    *      Objetivo        :       consulta datos de un Servidor    
   *    *
   *    *      Autor           :       uh.
   *    *
   *    *      Creacion        :       20/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_serv       codigo del Servidor       
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *    *
   *    *      Comntario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   IF NOT (nullif(ltrim(nullif(rtrim(@cod_serv), '')), '') IS NULL)
      BEGIN
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_serv.cod_serv
               FROM dbo.tbl_serv
               WHERE dbo.tbl_serv.cod_serv = @cod_serv
            )
            SELECT @cod_e = 'SERV011'
         ELSE 
            BEGIN

               SELECT 
                  dbo.tbl_serv.cod_serv, 
                  dbo.tbl_serv.des_serv, 
                  dbo.tbl_serv.tip_serv, 
                  dbo.tbl_serv.dip_serv, 
                  dbo.tbl_serv.dir_sali, 
                  dbo.tbl_serv.dir_entr, 
                  dbo.tbl_serv.dir_buzo
               FROM dbo.tbl_serv
               WHERE dbo.tbl_serv.cod_serv = @cod_serv

               SELECT @cod_e = '0'

            END
      END
   ELSE 
      BEGIN
		/*
         SELECT 
            dbo.tbl_serv.cod_serv, 
            dbo.tbl_serv.des_serv, 
            dbo.tbl_serv.tip_serv, 
            dbo.tbl_serv.dip_serv, 
            dbo.tbl_serv.dir_sali, 
            dbo.tbl_serv.dir_entr AS dir_buzo
         FROM dbo.tbl_serv
		*/
         SELECT 
            dbo.tbl_serv.cod_serv, 
            dbo.tbl_serv.des_serv, 
            dbo.tbl_serv.tip_serv, 
            dbo.tbl_serv.dip_serv, 
            dbo.tbl_serv.dir_sali, 
            dbo.tbl_serv.dir_entr, 
            dbo.tbl_serv.dir_buzo
         FROM dbo.tbl_serv
		
         SELECT @cod_e = '0'

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcarchcasdest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcarchcasdest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcarchcasdest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcarchcasdest]
@error varchar(255)  OUTPUT,
   @nom_arch varchar(20),
   @cas_dest varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
      
     -- insert into tbl_traceo( campo1) values('cas_destz=' + @cas_dest + '--' + 'nom_arch='+ @nom_arch );
      
   SELECT @cod_e = '0'
   
   SELECT dbo.tbl_tarc.ide_traz, dbo.tbl_tarc.est_traz, dbo.tbl_tarc.cas_orig, dbo.tbl_tarc.tam_arch, dbo.tbl_tarc.fec_rece
   FROM dbo.tbl_tarc
   WHERE dbo.tbl_tarc.nom_arcc = @nom_arch AND dbo.tbl_tarc.cas_dest = @cas_dest
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcarchcasi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcarchcasi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcarchcasi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcarchcasi]
@error varchar(255)  OUTPUT,
   @cas_dest varchar(8) = NULL,
   @nom_arch varchar(20) = NULL,
   @est_traz varchar(2) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcarchcasi 
   *    *
   *    *      Objetivo        :       Consultar la tbla tbl_tarc por nombre archivo y casilla destino
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       31/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                             @cas_dest	Casilla destino del archivo
   *    *      			@nom_arch      	Nombre de archivo 
   *    *      			@est_traz      	Estado de traza
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_casi
         WHERE dbo.tbl_casi.cod_casi = @cas_dest
      )
      SELECT @error = 'CASI001'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'ESTT001'
   IF (@error = '0')
      BEGIN

         SELECT dbo.tbl_tarc.ide_traz, dbo.tbl_tarc.cas_orig
         FROM dbo.tbl_tarc
         WHERE 
            dbo.tbl_tarc.est_traz = @est_traz AND 
            dbo.tbl_tarc.cas_dest = @cas_dest AND 
            dbo.tbl_tarc.nom_arcc = @nom_arch

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcarchcasorig].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcarchcasorig]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcarchcasorig] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcarchcasorig]
@error varchar(255)  OUTPUT,
   @nom_arch varchar(20),
   @cas_orig varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   SELECT dbo.tbl_tarc.ide_traz ,  dbo.tbl_tarc.est_traz, dbo.tbl_tarc.cas_dest, dbo.tbl_tarc.tam_arch, dbo.tbl_tarc.fec_rece
   FROM dbo.tbl_tarc
   WHERE dbo.tbl_tarc.nom_arcc = @nom_arch AND dbo.tbl_tarc.cas_orig = @cas_orig
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcarchcdest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcarchcdest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcarchcdest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcarchcdest]
@error varchar(255)  OUTPUT,
   @cas_dest varchar(8) = NULL,
   @nom_arch varchar(20) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcarchcdest 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc por casilla detino y 
   *    *                              nombre de archivo
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       08/09/1999
   *    *
   *    *      Modificado      :       07/11/2005
   *    *
   *    *								Permitir envios despues de 24 horas *
   *    *      Entrada         :       @cas_dest   Casilla de destino 
   *    *								@nom_arch 	Nombre de archivo 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos vriables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @cod_inst varchar(4)
   /* inicializamos variables*/
   
    
   
   SELECT @error = '0'
   /*- programamos el sp*/

   BEGIN TRANSACTION 
   IF (@error = '0')
      BEGIN

         SELECT @cod_inst = dbo.tbl_casi.cod_inst
         FROM dbo.tbl_casi
         WHERE dbo.tbl_casi.cod_casi = @cas_dest

         IF (@cod_inst != '0750') AND (@cod_inst != '0765')
            BEGIN
               SELECT dbo.tbl_tarc.ide_traz, dbo.tbl_tarc.est_traz
               FROM dbo.tbl_tarc
               WHERE 
                  dbo.tbl_tarc.cas_dest = @cas_dest AND 
                  dbo.tbl_tarc.nom_arcc = @nom_arch AND 
                  CONVERT(char(8), dbo.tbl_tarc.fec_rece, 112) = CONVERT(char(8), getdate(), 112)
            END
         ELSE 
            BEGIN
               SELECT dbo.tbl_tarc.ide_traz, dbo.tbl_tarc.est_traz
               FROM dbo.tbl_tarc
               WHERE dbo.tbl_tarc.cas_dest = @cas_dest AND dbo.tbl_tarc.nom_arcc = @nom_arch
            END

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcarchcorig].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcarchcorig]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcarchcorig] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcarchcorig]
@error varchar(255)  OUTPUT,
   @cas_orig varchar(8) = NULL,
   @nom_arch varchar(20) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcarchcorig 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc por casilla estino y 
   *    *                              nombre de archivo
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       08/09/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cas_orig      	Casila de origen 
   *    *				@nom_arch 	Nombre de archivo 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   BEGIN TRANSACTION 
   IF (@error = '0')
      BEGIN

         SELECT dbo.tbl_tarc.ide_traz, dbo.tbl_tarc.est_traz
         FROM dbo.tbl_tarc
         WHERE dbo.tbl_tarc.cas_orig = @cas_orig AND dbo.tbl_tarc.nom_arcc = @nom_arch

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarccasidest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarccasidest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarccasidest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarccasidest]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarccasidest 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc por casilla origen
   *    *
   *    *      Autor           :      Claudio Velasquez S.
   *    *
   *    *      Creacion        :       12/12/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi      	Codigo de Casilla destino 
   *    *
   *    *      Salida          :       @error		Error generador en el SP      
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_casi
         WHERE dbo.tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   IF (@error = '0')
      BEGIN

         SELECT 
            dbo.tbl_tarc.ide_traz, 
            dbo.tbl_tarc.est_traz, 
            dbo.tbl_tarc.cas_orig, 
            dbo.tbl_tarc.cas_dest, 
            dbo.tbl_tarc.nom_arcc, 
            dbo.tbl_tarc.nom_arre, 
            dbo.tbl_tarc.tam_arch, 
            CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) AS fec_recep, 
            CONVERT(char(8), dbo.tbl_tarc.fec_rece, 108) AS hor_recep, 
            dbo.tbl_tarc.usu_ingr
         FROM dbo.tbl_tarc
         WHERE dbo.tbl_tarc.cas_dest = @cod_casi

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarccasiorig].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_tarccasiorig]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarccasiorig] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarccasiorig]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @vcFechaRecepcion varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarccasiorig 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc por casilla origen
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       26/12/2013, Hans Miranda F.
   *    *
   *    *      Motivo          :       Limitar cantidad de registros extraidos a partir de una fecha de recepcion.
   *    *
   *    *      Entrada         :       @cod_casi          Codigo de casilla
   *    *                              @vcFechaRecepcion  Fecha inicial
   *    *
   *    *      Salida          :       @error   Error generador en el SP       
   *    *
   *    *     Comentario       :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM tbl_casi
         WHERE tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   IF (@error = '0')
      BEGIN

         SELECT 
               tbl_tarc.ide_traz, 
               tbl_tarc.est_traz, 
               tbl_tarc.cas_orig, 
               tbl_tarc.cas_dest, 
               tbl_tarc.nom_arcc, 
               tbl_tarc.nom_arre, 
               tbl_tarc.tam_arch, 
               CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) AS fec_recep, 
               CONVERT(char(8), dbo.tbl_tarc.fec_rece, 108) AS hor_recep, 
               tbl_tarc.usu_ingr
          FROM tbl_tarc
          WHERE tbl_tarc.cas_orig = @cod_casi and
                tbl_tarc.fec_rece >= CONVERT(datetime, @vcFechaRecepcion+' 00:00:00.000',121)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcestado].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcestado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcestado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcestado]
@error varchar(255)  OUTPUT,
   @est_traz varchar(2),
   @vcFechaRecepcion varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcestado 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc por estado de traza   
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       26/12/2013, Hans Miranda F.
   *    *
   *    *      Motivo          :       Limitar cantidad de registros extraidos a partir de una fecha de recepcion.
   *    *
   *    *      Entrada         :       @est_traz          Estado de traza
   *    *                              @vcFechaRecepcion  Fecha inicial
   *    *
   *    *      Salida          :       @error   Error generador en el SP       
   *    *
   *    *     Comentario       :       No tiene 
   *    * 
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   BEGIN TRANSACTION 
   IF NOT EXISTS 
      (
         SELECT *
         FROM tbl_estt
         WHERE tbl_estt.est_traz = @est_traz
      )
      SELECT @error = 'ESTT001'
   IF @error = '0'
      BEGIN

         SELECT 
               tbl_tarc.ide_traz, 
               tbl_tarc.est_traz, 
               tbl_tarc.cas_orig, 
               tbl_tarc.cas_dest, 
               tbl_tarc.nom_arcc, 
               tbl_tarc.nom_arre, 
               tbl_tarc.tam_arch, 
               CONVERT(char(10), tbl_tarc.fec_rece, 103) AS fec_recep, 
               CONVERT(char(8), tbl_tarc.fec_rece, 108) AS hor_recep, 
               tbl_tarc.usu_ingr
          FROM tbl_tarc
          WHERE tbl_tarc.est_traz = @est_traz and
                tbl_tarc.fec_rece >= CONVERT(datetime, @vcFechaRecepcion+' 00:00:00.000',121)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcfectope].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcfectope]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcfectope] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcfectope]
@error varchar(255)  OUTPUT,
   @fec_tope datetime2(3)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   SELECT dbo.tbl_tarc.ide_traz
   FROM dbo.tbl_tarc
   WHERE dbo.tbl_tarc.fec_rece <= @fec_tope
   ORDER BY dbo.tbl_tarc.ide_traz
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcperiodo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcperiodo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcperiodo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcperiodo]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8) = NULL,
   @var_tpo varchar(1) = NULL,
   @int_tpo int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcperiodo 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc pr casilla origen
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       11/09/2002
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi      	Codigo de Casilla destino 
   *    *      Entrada        :       @var_tpo      	Escala de tiempo (D:Dia, H: Hora o M: Minuto)
   *    *      Entrada         :       @int_tpo      	Intervalo de tiempo 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tine 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @cnt_tpo int, 
      @hor_actu datetime2(3), 
      @hor_requ datetime2(3)
   /* inicializamos variables*/
   SELECT @error = '0'
   SELECT @cnt_tpo = abs(@int_tpo)
   SELECT @hor_actu = getdate()
   /*- programamos el sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_casi
         WHERE dbo.tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   ELSE 
      IF (upper(@var_tpo) = 'H')
         BEGIN
            IF (@cnt_tpo < 0) OR (@cnt_tpo > 23)
               SELECT @error = 'ERRH001'
            ELSE 
               SELECT @hor_requ = dateadd(hour, @int_tpo, @hor_actu)
         END
      ELSE 
         IF (upper(@var_tpo) = 'M')
            BEGIN
               IF (@cnt_tpo < 0) OR (@cnt_tpo > 59)
                  SELECT @error = 'ERRM001'
               ELSE 
                  SELECT @hor_requ = dateadd(minute, @int_tpo, @hor_actu)
            END
         ELSE 
            IF (upper(@var_tpo) = 'D')
               BEGIN
                  IF (@cnt_tpo < 1) OR (@cnt_tpo > 31)
                     SELECT @error = 'ERRD001'
                  ELSE 
                     SELECT @hor_requ = dateadd(day, @int_tpo, @hor_actu)
               END
            ELSE 
               SELECT @error = 'ERRE001'
   IF (@error = '0')
      BEGIN

         SELECT 
            dbo.tbl_tarc.ide_traz, 
            dbo.tbl_tarc.est_traz, 
            dbo.tbl_tarc.cas_orig, 
            dbo.tbl_tarc.cas_dest, 
            dbo.tbl_tarc.nom_arcc, 
            dbo.tbl_tarc.tam_arch, 
            CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) AS fec_recep, 
            CONVERT(char(8), dbo.tbl_tarc.fec_rece, 108) AS hor_recep
         FROM dbo.tbl_tarc
         WHERE 
            dbo.tbl_tarc.cas_dest = @cod_casi AND 
            dbo.tbl_tarc.fec_rece >= @hor_requ AND 
            dbo.tbl_tarc.fec_rece <= @hor_actu

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcrfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcrfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcrfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcrfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcrfecha 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_trc por rango de fechas   
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_ini      	Fecha inicial
   *    *                             @fec_fin      	Fecha final
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 111)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 111)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF @error = '0'
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 111)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 111)

         BEGIN TRANSACTION 

         SELECT 
            dbo.tbl_tarc.ide_traz, 
            dbo.tbl_tarc.est_traz, 
            dbo.tbl_tarc.cas_orig, 
            dbo.tbl_tarc.cas_dest, 
            dbo.tbl_tarc.nom_arcc, 
            dbo.tbl_tarc.nom_arre, 
            dbo.tbl_tarc.tam_arch, 
            CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) AS fec_recep, 
            CONVERT(char(8), dbo.tbl_tarc.fec_rece, 108) AS hor_recep, 
            dbo.tbl_tarc.usu_ingr
         FROM dbo.tbl_tarc
         WHERE CONVERT(char(10), dbo.tbl_tarc.fec_rece, 111) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION /**** por si las moscas ****/

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tarcridetraza].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tarcridetraza]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tarcridetraza] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tarcridetraza]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_tarcridetraza 
   *    *
   *    *      Objetivo        :       Consultar la tabla tbl_tarc por rango de id.
   *    *                              de traza.
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @itr_ini      	Identificador traza incial
   *    *                              @itr_fin      	Identificador traza final
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   BEGIN TRANSACTION 
   IF @error = '0'
      BEGIN

         SELECT 
            dbo.tbl_tarc.ide_traz, 
            dbo.tbl_tarc.est_traz, 
            dbo.tbl_tarc.cas_orig, 
            dbo.tbl_tarc.cas_dest, 
            dbo.tbl_tarc.nom_arcc, 
            dbo.tbl_tarc.nom_arre, 
            dbo.tbl_tarc.tam_arch, 
            CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) AS fec_recep, 
            CONVERT(char(8), dbo.tbl_tarc.fec_rece, 108) AS hor_recep, 
            dbo.tbl_tarc.usu_ingr
         FROM dbo.tbl_tarc
         WHERE dbo.tbl_tarc.ide_traz BETWEEN @itr_ini AND @itr_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @error = 'TARC001'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION /**** por si las moscas ****/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_cons_tblParam].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tblParam]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tblParam] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tblParam]
@error varchar(255) output

/*
 *      Servicio : sp_cons_tblParam 
 *
 *      Objetivo : Consulta tabla tbl_param
 *
 *      Autor    :       G.Martinez
 *
 *      Creacion :       17/04/2012
 */

as

-- declaramos variables locales
declare 
    @cod_e varchar(7), @gls_e varchar(255)

   select swrut, swsrut from tbl_param

execute dbo.sp_error @cod_e, @gls_e output

select @error = @cod_e + ': ' + @gls_e

if @cod_e != '0'
  return -1

return 0
GO

GO
--SqlScripter----[dbo].[sp_cons_tpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tpro]
@error varchar(255)  OUTPUT,
   @ide_traz int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.ide_traz = @ide_traz
      )
      SELECT @error = 'TPRO001'
   SELECT 
      dbo.tbl_tpro.est_traz, 
      dbo.tbl_tpro.cod_prod,
      dbo.tbl_tpro.cod_inst, 
      dbo.tbl_tpro.cod_casi, 
      dbo.tbl_tpro.cod_serv, 
      dbo.tbl_tpro.nom_arch, 
      dbo.tbl_tpro.tam_arch, 
      dbo.tbl_tpro.fec_rece
   FROM dbo.tbl_tpro
   WHERE dbo.tbl_tpro.ide_traz = @ide_traz
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @error = 'TPRO006'
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_tpro_archivo_enviado].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tpro_archivo_enviado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tpro_archivo_enviado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tpro_archivo_enviado]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @nom_arch varchar(50)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE 
            dbo.tbl_tpro.nom_arch = @nom_arch AND 
            dbo.tbl_tpro.cod_serv = @cod_serv AND 
            dbo.tbl_tpro.est_traz >= '70'
      )
      SELECT 'S'
   ELSE 
      SELECT 'N'
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @error = 'TPRO006'
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_tpro_archivo_retirado].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tpro_archivo_retirado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tpro_archivo_retirado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tpro_archivo_retirado]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @fec_rece varchar(20)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE 
            dbo.tbl_tpro.cod_serv = @cod_serv AND 
            dbo.tbl_tpro.nom_arch = @nom_arch AND 
            dbo.tbl_tpro.fec_rece = @fec_rece
      )
      SELECT 'S'
   ELSE 
      SELECT 'N'
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @error = 'TPRO006'
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_tpro_mensaje_retirado].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tpro_mensaje_retirado]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tpro_mensaje_retirado] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tpro_mensaje_retirado]
@error		varchar(255) out,
	@cod_serv	varchar(08),
	@nom_arch	varchar(50),
	@tip_mens	varchar(3)
as

declare @gls_erro varchar(255)

select @error = '0'
if exists( select * from tbl_tpro where cod_serv = @cod_serv and
					nom_arch = @nom_arch and
					( ( @tip_mens = 'RES' and est_traz = '75' ) or
                                          ( @tip_mens = 'res' and est_traz = '75' ) or
                                          ( @tip_mens = 'not' and est_traz = '80' ) or
				  	  ( @tip_mens = 'NOT' and est_traz = '80' ) ) )
	select 'N', cod_prod from tbl_tpro where cod_serv = @cod_serv and
						 nom_arch = @nom_arch and
						 ( ( @tip_mens = 'RES' and est_traz = '75' ) or
                                                   ( @tip_mens = 'res' and est_traz = '75' ) or
                                                   ( @tip_mens = 'not' and est_traz = '80' ) or
						   ( @tip_mens = 'NOT' and est_traz = '80' ) )
else
	select 'S', 'XXXXXX'


if @@error != 0 
	select @error = 'TPRO006'

if @error = '0'
	begin
		select @error = @error + ': Exito en la operacion'
		return 0
	end
else
	begin
		select @gls_erro = ''
		exec sp_error @error, @gls_erro output
		select @error = @error + ': ' + @gls_erro
		return -1
	end
GO

GO
--SqlScripter----[dbo].[sp_cons_tpro2].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tpro2]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tpro2] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tpro2]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_casi varchar(8),
   @cod_serv varchar(8),
   @nom_arch varchar(50)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE 
            dbo.tbl_tpro.cod_prod = @cod_prod AND 
            dbo.tbl_tpro.cod_inst = @cod_inst AND 
            dbo.tbl_tpro.cod_casi = @cod_casi AND 
            dbo.tbl_tpro.cod_serv = @cod_serv AND 
            dbo.tbl_tpro.nom_arch = @nom_arch
      )
      SELECT @error = 'TPRO014'
   SELECT 
      dbo.tbl_tpro.est_traz, 
      dbo.tbl_tpro.cod_prod, 
      dbo.tbl_tpro.cod_inst, 
      dbo.tbl_tpro.cod_casi, 
      dbo.tbl_tpro.cod_serv, 
      dbo.tbl_tpro.nom_arch, 
      dbo.tbl_tpro.tam_arch, 
      dbo.tbl_tpro.fec_rece
   FROM dbo.tbl_tpro
   WHERE 
      dbo.tbl_tpro.cod_prod = @cod_prod AND 
      dbo.tbl_tpro.cod_inst = @cod_inst AND 
      dbo.tbl_tpro.cod_casi = @cod_casi AND 
      dbo.tbl_tpro.cod_serv = @cod_serv AND 
      dbo.tbl_tpro.nom_arch = @nom_arch
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @error = 'TPRO006'
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_tpro3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tpro3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tpro3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tpro3]
@error varchar(255)  OUTPUT,
   @nom_arch varchar(50),
   @cod_serv varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.nom_arch = @nom_arch AND dbo.tbl_tpro.cod_serv = @cod_serv
      )
      SELECT '1'
   ELSE 
      SELECT '0'
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @error = 'TPRO006'
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro
         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_cons_tprofectope].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tprofectope]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tprofectope] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tprofectope]
@error varchar(255)  OUTPUT,
   @fec_tope datetime2(3)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   SELECT 
      dbo.tbl_tpro.nom_arch, 
      CONVERT(varchar, dbo.tbl_tpro.fec_rece, 111), 
      CONVERT(varchar, dbo.tbl_tpro.fec_rece, 108), 
      dbo.tbl_tpro.est_traz, 
      dbo.tbl_tpro.cod_serv
   FROM dbo.tbl_tpro
   WHERE dbo.tbl_tpro.fec_rece <= @fec_tope AND dbo.tbl_tpro.cod_serv != 'SINACOFI'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_tproridetraza].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_tproridetraza]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_tproridetraza] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_tproridetraza]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   IF (@itr_ini < 0 AND @itr_fin < 0)
      BEGIN
         SELECT 
            dbo.tbl_tpro.ide_traz, 
            dbo.tbl_tpro.est_traz, 
            dbo.tbl_tpro.cod_prod, 
            dbo.tbl_tpro.cod_inst, 
            dbo.tbl_tpro.cod_casi, 
            dbo.tbl_tpro.cod_serv, 
            dbo.tbl_tpro.nom_arch, 
            dbo.tbl_tpro.tam_arch, 
            dbo.tbl_tpro.fec_rece
         FROM dbo.tbl_tpro
      END
   ELSE 
      BEGIN
         SELECT 
            dbo.tbl_tpro.ide_traz, 
            dbo.tbl_tpro.est_traz, 
            dbo.tbl_tpro.cod_prod, 
            dbo.tbl_tpro.cod_inst, 
            dbo.tbl_tpro.cod_casi, 
            dbo.tbl_tpro.cod_serv, 
            dbo.tbl_tpro.nom_arch, 
            dbo.tbl_tpro.tam_arch, 
            dbo.tbl_tpro.fec_rece
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.ide_traz >= @itr_ini AND dbo.tbl_tpro.ide_traz <= @itr_fin
      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_user].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_user]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_user] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_user]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @cod_user varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_user
   *    *
   *    *      Objetivo        :       Consulta los valores asciados a un usuario en particular   
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst       Codigo de la institucion a la que pertenece l usuario
   *    *                              @cod_user       Codigo del usuario       
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT dbo.tbl_user.cod_inst, dbo.tbl_user.cod_user, dbo.tbl_user.pas_user, dbo.tbl_user.nom_user
   FROM dbo.tbl_user
   WHERE dbo.tbl_user.cod_inst = @cod_inst AND dbo.tbl_user.cod_user = @cod_user
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_cons_user_todos].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_cons_user_todos]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_cons_user_todos] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_cons_user_todos]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_cons_user_todos
   *    *
   *    *      Objetivo        :       Consulta todos los usuarios de la tabla tbl_user   
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Cracion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       No tiene
   *    *
   *    *      Salida          :       @error         codigo y glosa del error 
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT dbo.tbl_user.cod_inst, dbo.tbl_user.cod_user, dbo.tbl_user.pas_user, dbo.tbl_user.nom_user
   FROM dbo.tbl_user
   SELECT @cod_e = '0'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_casi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_casi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_casi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_casi]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_casi
   *    *
   *    *      Objetivo        :       Eliminar una Casilla Existente
   *    *
   *    *      Autor           :       ruh. *
   *    *      Creacion        :       20/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi     codigo de Casilla       
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                             ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @cod_serv varchar(8)
   SELECT @cod_serv = 'SERVSNCF'
   
   /*
   *    Buscamos el codigodel servidor interno de SNCF para usarlo en las casillas
   *    internas.
   */
   SELECT @cod_serv = dbo.tbl_serv.cod_serv
   FROM dbo.tbl_serv
   WHERE dbo.tbl_serv.tip_serv = 'I'
   
   /*
   *    falta agregar que pasa cuando no existe el servidor interno
   *    verificamos el valor para el codigo casilla
   */
   IF (nullif(ltrim(nullif(rtrim(@cod_casi), '')), '') IS NULL)
      SELECT @cod_e = 'CASI010'
   /*- verificamos que exista el codigo de Casilla en la tabla tbl_casi*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_casi.cod_casi
            FROM dbo.tbl_casi
            WHERE dbo.tbl_casi.cod_casi = @cod_casi
         )
         SELECT @cod_e = 'CASI002'
      /* verificamos que no exista en la Traza de Archivos ( tbl_tarc ) como ori. o dest.*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_tarc.ide_traz
               FROM dbo.tbl_tarc
               WHERE dbo.tbl_tarc.cas_orig = @cod_casi OR dbo.tbl_tarc.cas_dest = @cod_casi
            )
            SELECT @cod_e = 'CASI005'
         /* verificamos que n exista en el historico de traza ( tbl_htra ) (ori. o dest.)*/
         ELSE 
            IF EXISTS 
               (
                  SELECT dbo.tbl_htra.ide_traz
                  FROM dbo.tbl_htra
                  WHERE dbo.tbl_htra.cas_orig = @cod_casi OR dbo.tbl_htra.cas_dest = @cod_casi
               )
               SELECT @cod_e = 'CASI004'
            /* verificamos que no exista en la tabla dedestinos ( tbl_dest )*/
            ELSE 
               IF EXISTS 
                  (
                     SELECT dbo.tbl_dest.cas_dest
                     FROM dbo.tbl_dest
                     WHERE dbo.tbl_dest.cas_dest = @cod_casi AND dbo.tbl_dest.cod_serv = @cod_serv
                  )
                  SELECT @cod_e = 'CASI024'
               /* verificamos que no exista en la tabla de traza de productos ( tbl_tpro )*/
               ELSE 
                  IF EXISTS 
                     (
                        SELECT dbo.tbl_tpro.ide_traz
                        FROM dbo.tbl_tpro
                        WHERE dbo.tbl_tpro.cod_casi = @cod_casi AND dbo.tbl_tpro.cod_serv = @cod_serv
                     )
                     SELECT @cod_e = 'CASI026'
                  /* verificamos que no exista en la tabla de historico de productos ( tbl_hpro  )*/
                  ELSE 
                     IF EXISTS 
                        (
                           SELECT dbo.tbl_hpro.ide_traz
                           FROM dbo.tbl_hpro
                           WHERE dbo.tbl_hpro.cod_casi = @cod_casi AND dbo.tbl_hpro.cod_serv = @cod_serv
                        )
                        SELECT @cod_e = 'CASI027'
                     /* verificamos que no exista en la tabla de operacion de productos ( tbl_oppr )*/
                     ELSE 
                        IF EXISTS 
                           (
                              SELECT dbo.tbl_oppr.ide_traz
                              FROM dbo.tbl_oppr
                              WHERE dbo.tbl_oppr.cod_casi = @cod_casi AND dbo.tbl_oppr.cod_serv = @cod_serv
                           )
                           SELECT @cod_e = 'CASI025'
                        ELSE 
                           BEGIN

                              BEGIN TRANSACTION 

                              DELETE dbo.tbl_casi
                              WHERE dbo.tbl_casi.cod_casi = @cod_casi

                              /*
                              *   SSMA warning messages:
                              *   S2SS0016: SQL Server might use a different error code.
                              */

                              IF @@ERROR != 0
                                 BEGIN

                                    IF @@TRANCOUNT > 0
                                       ROLLBACK TRANSACTION 

                                    SELECT @cod_e = 'CASI023'

                                 END
                              ELSE 
                                 SELECT @cod_e = '0'

                              IF @@TRANCOUNT > 0
                                 COMMIT TRANSACTION 

                           END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_cdex].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_cdex]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_cdex] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_cdex]
@error varchar(255)  OUTPUT,
   @cod_cdex varchar(8),
   @cod_serv varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @error = '0'
   /* validamos que el par Cod. Casilla + Servidor exista*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_cdex.cod_cdex
         FROM dbo.tbl_cdex
         WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex AND dbo.tbl_cdex.cod_serv = @cod_serv
      )
      SELECT @cod_e = 'CDEX003'
   /* validamos que el par cod_casilla + servidor no exista en Destinos*/
   ELSE 
      IF EXISTS 
         (
            SELECT dbo.tbl_dest.cod_prod
            FROM dbo.tbl_dest
            WHERE dbo.tbl_dest.cod_serv = @cod_serv AND dbo.tbl_dest.cas_dest = @cod_cdex
         )
         SELECT @cod_e = 'CDEX005'
      /* validamos que el par cod_casilla + servidor no existe en Traza Productos*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_tpro.ide_traz
               FROM dbo.tbl_tpro
               WHERE dbo.tbl_tpro.cod_serv = @cod_serv AND dbo.tbl_tpro.cod_casi = @cod_cdex
            )
            SELECT @cod_e = 'CDEX006'
         /* validamos que el par cod.casilla+servidor no exista en Hist. productos*/
         ELSE 
            IF EXISTS 
               (
                  SELECT dbo.tbl_hpro.ide_traz
                  FROM dbo.tbl_hpro
                  WHERE dbo.tbl_hpro.cod_serv = @cod_serv AND dbo.tbl_hpro.cod_casi = @cod_cdex
               )
               SELECT @cod_e = 'CDEX007'
            /* validamos que el par cod.casilla+servidor no exista en Operacion de Productos*/
            ELSE 
               IF EXISTS 
                  (
                     SELECT dbo.tbl_oppr.ide_traz
                     FROM dbo.tbl_oppr
                     WHERE dbo.tbl_oppr.cod_serv = @cod_serv AND dbo.tbl_oppr.cod_casi = @cod_cdex
                  )
                  SELECT @cod_e = 'CDEX008'
               ELSE 
                  BEGIN

                     BEGIN TRANSACTION 

                     DELETE dbo.tbl_cdex
                     WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex AND dbo.tbl_cdex.cod_serv = @cod_serv

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF @@ERROR != 0
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @cod_e = 'CDEX012'

                        END
                     ELSE 
                        SELECT @cod_e = '0'

                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 

                  END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_cerr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_cerr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_cerr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_cerr]
@error varchar(255)  OUTPUT,
   @cod_erro varchar(7)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_cerr
   *    *
   *    *      Objetivo        :       eliminar un codigo de error    
   *    *
   *    *      utor           :       ruh.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_erro	codigo de error       
   *    *
   *    *      Salida          :       @error          error generado en el SP 
   *   *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que el codigo de error tenga valor ingresado*/
   IF (nullif(ltrim(nullif(rtrim(@cod_erro), '')), '') IS NULL)
      SELECT @cod_e = 'CERR010'
   /*- Verificamos que exist en la tabla de errores*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_cerr.cod_erro
            FROM dbo.tbl_cerr
            WHERE dbo.tbl_cerr.cod_erro = @cod_erro
         )
         SELECT @cod_e = 'CERR002'
      /*- Verificamos que no este ingresado en historico de operacion de casillas*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_opca.cod_erro
               FROM dbo.tbl_opca
               WHERE dbo.tbl_opca.cod_erro = @cod_erro
            )
            SELECT @cod_e = 'CERR004'
         /*- Verificamos que no este ingresado en el historico de operacion de productos*/
         ELSE 
            IF EXISTS 
               (
                  SELECT dbo.tbl_oppr.cod_erro
                  FROM dbo.tbl_oppr
                  WHERE dbo.tbl_oppr.cod_erro = @cod_erro
               )
               SELECT @cod_e = 'CERR003'
            ELSE 
               BEGIN

                  BEGIN TRANSACTION 

                  DELETE dbo.tbl_cerr
                  WHERE dbo.tbl_cerr.cod_erro = @cod_erro

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF @@ERROR != 0
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @cod_e = 'CERR007'

                     END
                  ELSE 
                     SELECT @cod_e = '0'

                  IF @@TRANCOUNT > 0
                     COMMIT TRANSACTION 

               END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_corr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_corr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_corr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_corr]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_corr
   *    *
   *    *      Objetivo        :       Eliminacion de un correlativo de institucion    
   *    *
   *    *      Autor          :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst       Codigo de la institucion        
   *    *
   *    *      Salida          :       @error          Codigoy error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que la institucion a la que se le modifica el correlativo exista en tbl_ist*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_inst.cod_inst
         FROM dbo.tbl_inst
         WHERE dbo.tbl_inst.cod_inst = @cod_inst
      )
      SELECT @cod_e = 'INST002'
   ELSE 
      BEGIN

         SELECT @cod_e = '0'

         BEGIN TRANSACTION 

         DELETE dbo.tbl_corr
         WHERE dbo.tbl_corr.cod_inst = @cod_inst

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @cod_e = 'CORR001'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_dest].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_dest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_dest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_dest]
@error		varchar(255) out,
	@cod_prod	varchar(06),
	@cas_dest	varchar(08)
as

declare @gls_erro varchar(255)

select @error = '0'
if not exists( select * from tbl_dest where cod_prod = @cod_prod  and
											cas_dest = @cas_dest )
	select @error = 'DEST012'
else
	begin
		begin tran
		delete tbl_dest where cod_prod = @cod_prod and cas_dest = @cas_dest
		if @@error != 0
			begin
				rollback transaction
				select @error = 'DEST011'
			end
		commit tran
	end

if @@error != 0
	select @error = 'DEST011'
if @error = '0'
	begin
		select @error = @error + ': Exito en la operacion'
		return 0
	end
else
	begin
		select @gls_erro = ''
		exec sp_error @error, @gls_erro output
		select @error = @error + ': ' + @gls_erro
		return -1
	end
GO

GO
--SqlScripter----[dbo].[sp_elim_estt].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_estt]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_estt] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_estt]
@error varchar(255)  OUTPUT,
   @est_traz varchar(2)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_estt
   *    *
   *    *      Objetivo        :       eliminar un Estado de Traza   
   *    *
   *    *      Ator           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @est_traz      Codigo de la Traza       
   *    *
   *    *      Salida          :       @error         error generado en e SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que el codigo de la traza no sea nulo*/
   IF (nullif(ltrim(nullif(rtrim(@est_traz), '')), '') IS NULL)
      SELECT @cod_e = 'ESTT008'
   /*- Verificamos que exist en la tabla de Estados de Trazas*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_estt.est_traz
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @cod_e = 'ESTT001'
      /* Verificamos que no exista en la tabla de Traza de Archivos*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_tarc.est_traz
               FROM dbo.tbl_tarc
               WHERE dbo.tbl_tarc.est_traz = @est_traz
            )
            SELECT @cod_e = 'ESTT003'
         /* Verificamos que no exista en la tabla de Traza de Productos*/
         ELSE 
            IF EXISTS 
               (
                  SELECT dbo.tbl_tpro.est_traz
                  FROM dbo.tbl_tpro
                  WHERE dbo.tbl_tpro.est_traz = @est_traz
               )
               SELECT @cod_e = 'ESTT004'
            /* verifiamos que no este en Tabla de historicos de productos*/
            ELSE 
               IF EXISTS 
                  (
                     SELECT dbo.tbl_hpro.ide_traz
                     FROM dbo.tbl_hpro
                     WHERE dbo.tbl_hpro.est_traz = @est_traz
                  )
                  SELECT @cod_e = 'ESTT010'
               /* verificamos que no exista en el historico de Traza*/
               ELSE 
                  IF EXISTS 
                     (
                        SELECT dbo.tbl_htra.ide_traz
                        FROM dbo.tbl_htra
                        WHERE dbo.tbl_htra.est_traz = @est_traz
                     )
                     SELECT @cod_e = 'ESTT011'
                  ELSE 
                     BEGIN

                        BEGIN TRANSACTION 

                        DELETE dbo.tbl_estt
                        WHERE dbo.tbl_estt.est_traz = @est_traz

                        /*
                        *   SSMA warning messages:
                        *   S2SS0016: SQL Server might use a different error code.
                        */

                        IF @@ERROR != 0
                           BEGIN

                              IF @@TRANCOUNT > 0
                                 ROLLBACK TRANSACTION 

                              SELECT @cod_e = 'ESTT007'

                           END
                        ELSE 
                           SELECT @cod_e = '0'

                        IF @@TRANCOUNT > 0
                           COMMIT TRANSACTION 

                     END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_feri].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_feri]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_feri] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_feri]
@error varchar(255)  OUTPUT,
   @fec_feri datetime2(3)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_feri
   *    *
   *    *      Objetivo        :       eliminar una fecha festiva desde el calendario *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       21/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_feri      fecha festiva a eliminar
   *    *
   *    *      Salida          :       @error         error gnerado en el SP 
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* Verificamos que exista en la tabla de feriados*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_feri.fec_feri
         FROM dbo.tbl_feri
         WHERE CONVERT(varchar(8), dbo.tbl_feri.fec_feri, 112) = CONVERT(varchar(8), @fec_feri, 112)
      )
      SELECT @cod_e = 'FERI001'
   ELSE 
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_feri
         WHERE CONVERT(varchar(8), dbo.tbl_feri.fec_feri, 112) = CONVERT(varchar(8), @fec_feri, 112)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @cod_e = 'FERI006'

            END
         ELSE 
            SELECT @cod_e = '0'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_hpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_hpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_hpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_hpro]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_hpro
   *    *
   *    *      Objetivo        :       Elimina un rango de registro en historia de productos
   *    *
   *    *     Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_ini	Fecha inicial
   *    *				@fec_fin	Fecha final
   *    *
   *    *      Salida          :       @errr		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   -- Declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*-- incializamos variables*/
   SELECT @error = '0'
   /*-- cuerpo del sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 103)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 103)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF (@error = '0')
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 103)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 103)

         BEGIN TRANSACTION 

         DELETE dbo.tbl_hpro
         WHERE dbo.tbl_hpro.fec_rece BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION

               SELECT @error = 'HPRO006'

            END
         ELSE 
            IF (@@ROWCOUNT <= 0)
               SELECT @error = 'HPRO002'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_hproidetraz].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_hproidetraz]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_hproidetraz] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_hproidetraz]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_hproidetraz
   *    *
   *          Objetivo        :       Elimina un rango de trazas desde tabla tbl_hpro    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       22/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @itr_ini       dentificador de traza inicial
   *    *                              @itr_fin       Identificador de traza final       
   *    *
   *    *      Salida          :       @error         error generado en el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   BEGIN TRANSACTION 
   DELETE dbo.tbl_hpro
   WHERE dbo.tbl_hpro.ide_traz >= @itr_ini AND dbo.tbl_hpro.ide_traz <= @itr_fin
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @cod_e = 'HPRO006'

      END
   ELSE 
      SELECT @cod_e = '0'
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_hprotrazexpi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_hprotrazexpi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_hprotrazexpi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_hprotrazexpi]
@error varchar(255)  OUTPUT,
   @nom_arch varchar(50),
   @fec_rece datetime2(3),
   @cod_serv varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   BEGIN TRANSACTION 
   DELETE dbo.tbl_hpro
   WHERE 
      dbo.tbl_hpro.nom_arch = @nom_arch AND 
      dbo.tbl_hpro.fec_rece = @fec_rece AND 
      dbo.tbl_hpro.cod_serv = @cod_serv
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @error = 'HPRO006'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_elim_hres_casdestrcorr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_hres_casdestrcorr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_hres_casdestrcorr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_hres_casdestrcorr]
@error varchar(255)  OUTPUT,
   @corr_ini int,
   @corr_fin int,
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_hres_casdestrcorr 
   *    *
   *    *      Objetivo        :       Elimina desde tbl_resc de acuerdo a un rango de correlativos y la casilla
   *    *                              de Destino
   *    *
   *    *      Autor           :      ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @corr_ini       Correaltivo Inicial
   *    *                              @corr_fin       Correlativo Final
   *    *                             @cas_dest       Casilla de Destino 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   BEGIN TRANSACTION 
   DELETE dbo.tbl_hres
   WHERE 
      dbo.tbl_hres.cas_dest = @cas_dest AND 
      dbo.tbl_hres.cor_resc >= @corr_ini AND 
      dbo.tbl_hres.cor_resc <= @corr_fin
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @cod_e = 'RESC007'

      END
   ELSE 
      SELECT @cod_e = '0'
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_hres_casdestrfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_hres_casdestrfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_hres_casdestrfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_hres_casdestrfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10),
   @fec_fin varchar(10),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_hres_casdestrfecha 
   *    *
   *    *      Objetivo        :       Elimina desde tbl_hres de acuerdo a un rango de fechas y la casilla
   *    *                              de Destino
   *    *
   *    *      Autor           :      ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_ini        Fecha Inicial
   *    *                              @fec_fin        Fecha Final
   *    *                              @cas_des       Casilla de Destino 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   DECLARE
      @dfecha_ini datetime2(3), 
      @dfecha_fin datetime2(3)
   SELECT @dfecha_ini = CONVERT(datetime2(3), @fec_ini, 111)
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @cod_e = 'GENE003'
   ELSE 
      BEGIN

         SELECT @dfecha_fin = CONVERT(datetime2(3), @fec_fin, 111)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @cod_e = 'GENE003'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               DELETE dbo.tbl_hres
               WHERE 
                  dbo.tbl_hres.cas_dest = @cas_dest AND 
                  dbo.tbl_hres.fec_ingr >= @dfecha_ini AND 
                  dbo.tbl_hres.fec_ingr < dateadd(day, 1, @dfecha_fin)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'RESC007'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_htracasiorig].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_htracasiorig]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_htracasiorig] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_htracasiorig]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_htracasiorig
   *    *
   *    *      Objetivo        :       Elimina del historico por casilla de origen
   *    *
   *    *      Autor           :       Cludio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @cod_casi        Casilla de origen
   *    *
   *    *      Salida          :       @error		Error geerador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   -- declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*-- inicializamos variables*/
   SELECT @error = '0'
   /*-- cuerpodel sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_casi
         WHERE dbo.tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_htra
         WHERE dbo.tbl_htra.cas_orig = @cod_casi

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               SELECT @error = 'HTRA002'

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_htracasirfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_htracasirfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_htracasirfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_htracasirfecha]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_htracasirfecha
   *    *
   *    *      Objetivo        :       Elimina del historco casilla origen y rango fecha
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @cod_casi       asilla de origen
   *    *                              @fec_ini        fecha inicial
   *    *                              @fec_fin        fecha final 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tene 
   *    *
   *
   *   -- declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*-- inicializamos variables*/
   SELECT @error = '0'
   /*-- cuerpo del sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_casi
            WHERE dbo.tbl_casi.cod_casi = @cod_casi
         )
         SELECT @error = 'CASI001'
      ELSE 
         BEGIN

            SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 103)

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               SELECT @error = 'GENE003'
            ELSE 
               BEGIN

                  SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 103)

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF @@ERROR != 0
                     SELECT @error = 'GENE003'

               END

         END
   IF (@error = '0')
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 103)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 103)

         BEGIN TRANSACTION 

         DELETE dbo.tbl_htra
         WHERE dbo.tbl_htra.cas_orig = @cod_casi AND CONVERT(char(10), dbo.tbl_htra.fec_rece, 103) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               SELECT @error = 'HTRA002'

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_htraidetraz].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_htraidetraz]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_htraidetraz] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_htraidetraz]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int,
   @fec_top datetime2(3)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_htraidetraz
   *    *
   *    *      Objetivo        :       Elimina transferencias desde la tabla tbl_htra    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       22/08/1999
   *    *
   *    *      Modificad      :       
   *    *
   *    *      Entrada         :       @itr_ini       Identificador de traza inicial
   *    *                              @itr_fin       Identificador de traza final  
   *    *                              @fec_top       Fecha Tope para el rango     
   *    *
   *   *      Salida          :       @error         error generado en el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   BEGIN TRANSACTION 
   DELETE dbo.tbl_htra
   WHERE 
      dbo.tbl_htra.ide_traz >= @itr_ini AND 
      dbo.tbl_htra.ide_traz <= @itr_fin AND 
      dbo.tbl_htra.fec_rece <= @fec_top
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @cod_e = 'HTRA002'

      END
   ELSE 
      SELECT @cod_e = '0'
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_htrarfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_htrarfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_htrarfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_htrarfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_htrarfecha
   *    *
   *    *      Objetivo        :       Elimina del historico por rango de fecha
   *    *
   *    *     Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @fec_ini        fecha inicial
   *    *                             @fec_fin        fecha final 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   -- declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*-- inicializamos variables*/
   SELECT @error = '0'
   /*-- cuerpo del sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 103)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 103)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF (@error = '0')
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 103)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 103)

         BEGIN TRANSACTION 

         DELETE dbo.tbl_htra
         WHERE CONVERT(char(10), dbo.tbl_htra.fec_rece, 103) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'HTRA002'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_inst].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_inst]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_inst] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_inst]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_inst
   *    *
   *    *      Objetivo        :       eliminar una Institucion    
   *    *
   *    *      Autr           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst      codigo de la Institucion       
   *    *
   *    *      Salida          :       @error         error generado n el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que el codigo de la institucion sea distinto de nulo*/
   IF (nullif(ltrim(nullif(rtrim(@cod_inst), '')), '') IS NULL)
      SELECT @cod_e = 'INST009'
   /* Verficamos que exista en la tabla de Instituciones*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_inst.cod_inst
            FROM dbo.tbl_inst
            WHERE dbo.tbl_inst.cod_inst = @cod_inst
         )
         SELECT @cod_e = 'INST002'
      /* Verificamos que no este ingresado en las casillas externas*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_cdex.cod_inst
               FROM dbo.tbl_cdex
               WHERE dbo.tbl_cdex.cod_inst = @cod_inst
            )
            SELECT @cod_e = 'INST003'
         /* Verificamos que no este ingresado en las casillas internas*/
         ELSE 
            IF EXISTS 
               (
                  SELECT dbo.tbl_casi.cod_inst
                  FROM dbo.tbl_casi
                  WHERE dbo.tbl_casi.cod_inst = @cod_inst
               )
               SELECT @cod_e = 'INST004'
            /* Verificamos que no este en la tabla de Destinos*/
            ELSE 
               IF EXISTS 
                  (
                     SELECT dbo.tbl_dest.cod_inst
                     FROM dbo.tbl_dest
                     WHERE dbo.tbl_dest.cod_inst = @cod_inst
                  )
                  SELECT @cod_e = 'INST005'
               /* verificamos que no este en la tabla de Historico de Productos*/
               ELSE 
                  IF EXISTS 
                     (
                        SELECT dbo.tbl_hpro.ide_traz
                        FROM dbo.tbl_hpro
                        WHERE dbo.tbl_hpro.cod_inst = @cod_inst
                     )
                     SELECT @cod_e = 'INST011'
                  /* verificamos que no este en la tabla ed Traza de Productos*/
                  ELSE 
                     IF EXISTS 
                        (
                           SELECT dbo.tbl_tpro.ide_traz
                           FROM dbo.tbl_tpro
                           WHERE dbo.tbl_tpro.cod_inst = @cod_inst
                        )
                        SELECT @cod_e = 'INST012'
                     ELSE 
                        BEGIN

                           BEGIN TRANSACTION 

                           DELETE dbo.tbl_inst
                           WHERE dbo.tbl_inst.cod_inst = @cod_inst

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF @@ERROR != 0
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @cod_e = 'INST008'

                              END
                           ELSE 
                              SELECT @cod_e = '0'

                           IF @@TRANCOUNT > 0
                              COMMIT TRANSACTION 

                        END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_msg].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_msg]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_msg] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_msg]
@error varchar(255)  OUTPUT,
   @cod_msg varchar(3) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_msg
   *    *
   *    *      Objetivo        :       Consultar Estructura de Mensajes
   *    *				por codigo de mensaje
   *    *
   *    *      Autor           :      Claudio Velasquez S
   *    *
   *    *      Creacion        :       21/03/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_msg     Codigo del mensaje 
   *    *
   *    *      Salida          :       @error       Codigo y glosa del error
   *    *                                          ocurrido en el SP
   *    *
   *    *      Comentario      :      	Implementacion para cambiar protocolo FT3 - SBIF 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_erro varchar(7), 
      @gls_erro varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos codigo de mensaje*/
   IF (nullif(ltrim(nullif(rtrim(@cod_msg), '')), '') IS NULL)
      SELECT @cod_erro = 'ESTR004'
   ELSE 
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_estr
         WHERE dbo.tbl_estr.cod_msg = @cod_msg

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            SELECT @cod_erro = 'ESTR003'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_erro, @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   IF @cod_erro != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_opcarfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_opcarfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_opcarfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_opcarfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_opcarfecha
   *    *
   *    *      Objetivo        :       Eliminacion por rango de fecha de ingreso
   *    *
   *    *     Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @fec_ini        Fecha inicial
   *    *				@fec_fin	Fecha final *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene
   *    *
   *
   *   - declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*- inicializacion de variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 103)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 103)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF (@error = '0')
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 103)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 103)

         BEGIN TRANSACTION 

         DELETE dbo.tbl_opca
         WHERE CONVERT(char(10), dbo.tbl_opca.fec_ingr, 103) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'OPCA002'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_opcaride].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_opcaride]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_opcaride] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_opcaride]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_opcaride
   *    *
   *    *      Objetivo        :       Eliminacion por rango de identificador
   *    *
   *    *      Autor           :       Claudi Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @itr_ini        Identificador inicial
   *    *                              @itr_fin        Idenificador final
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene
   *    *
   *
   *   - declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializacion de variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_opca
         WHERE dbo.tbl_opca.ide_traz BETWEEN @itr_ini AND @itr_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'OPCA002'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_oppr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_oppr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_oppr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_oppr]
@error varchar(255)  OUTPUT,
   @fecha_inicial datetime2(3),
   @fecha_final datetime2(3)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_oppr
   *    *
   *    *      Objetivo        :       Eliminar registros d tabla de Operacion de 
   *    *                              productos segun rango de fechas
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fecha_incial fecha inicial para borrar 
   *    *                              @fecha_final   fecha final para borrar
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *     Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @n_reg int
   SELECT @n_reg = 0
   /* contamos los registros a borrar en el rango de fechas especificado*/
   SELECT @n_reg = count(dbo.tbl_oppr.ide_traz)
   FROM dbo.tbl_oppr
   WHERE dbo.tbl_oppr.fec_rece >= @fecha_inicial AND dbo.tbl_oppr.fec_rece <= @fecha_final
   IF (@n_reg = 0)
      SELECT @cod_e = 'OPPR002'
   ELSE 
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_oppr
         WHERE dbo.tbl_oppr.fec_rece >= @fecha_inicial AND dbo.tbl_oppr.fec_rece <= @fecha_final

         IF @error != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @cod_e = 'OPPR011'

            END
         ELSE 
            SELECT @cod_e = '0'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_prod].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_prod]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_prod] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_prod]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_prod
         WHERE dbo.tbl_prod.cod_prod = @cod_prod
      )
      SELECT @error = 'PROD002'
   ELSE 
      IF EXISTS 
         (
            SELECT *
            FROM dbo.tbl_dest
            WHERE dbo.tbl_dest.cod_prod = @cod_prod
         )
         SELECT @error = 'PROD008'
      ELSE 
         IF EXISTS 
            (
               SELECT *
               FROM dbo.tbl_hpro
               WHERE dbo.tbl_hpro.cod_prod = @cod_prod
            )
            SELECT @error = 'PROD006'
         ELSE 
            IF EXISTS 
               (
                  SELECT *
                  FROM dbo.tbl_oppr
                  WHERE dbo.tbl_oppr.cod_prod = @cod_prod
               )
               SELECT @error = 'PROD007'
            ELSE 
               BEGIN

                  BEGIN TRANSACTION 

                  DELETE dbo.tbl_prod
                  WHERE dbo.tbl_prod.cod_prod = @cod_prod

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF @@ERROR != 0
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @error = 'PROD012'

                     END

                  IF @@TRANCOUNT > 0
                     COMMIT TRANSACTION 

               END
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_elim_resc_casdestrcorr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_resc_casdestrcorr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_resc_casdestrcorr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_resc_casdestrcorr]
@error varchar(255)  OUTPUT,
   @corr_ini int,
   @corr_fin int,
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_resc_casdestrcorr 
   *    *
   *    *      Objetivo        :       Elimina desde tbl_resc de acuerdo a un rango de correlativos y la casilla
   *    *                              de Destino
   *    *
   *    *      Autor           :      ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @corr_ini       Correaltivo Inicial
   *    *                              @corr_fin       Correlativo Final
   *    *                             @cas_dest       Casilla de Destino 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   BEGIN TRANSACTION 
   DELETE dbo.tbl_resc
   WHERE 
      dbo.tbl_resc.cas_dest = @cas_dest AND 
      dbo.tbl_resc.cor_resc >= @corr_ini AND 
      dbo.tbl_resc.cor_resc <= @corr_fin
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @cod_e = 'RESC007'

      END
   ELSE 
      SELECT @cod_e = '0'
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_resc_casdestrfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_resc_casdestrfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_resc_casdestrfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_resc_casdestrfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10),
   @fec_fin varchar(10),
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_resc_casdestrfecha 
   *    *
   *    *      Objetivo        :       Elimina desde tbl_resc de acuerdo a un rango de fechas y la casilla
   *    *                              de Destino
   *    *
   *    *      Autor           :      ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_ini        Fecha Inicial
   *    *                              @fec_fin        Fecha Final
   *    *                              @cas_des       Casilla de Destino 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   DECLARE
      @dfecha_ini datetime2(3), 
      @dfecha_fin datetime2(3)
   SELECT @dfecha_ini = CONVERT(datetime2(3), @fec_ini, 111)
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @cod_e = 'GENE003'
   ELSE 
      BEGIN

         SELECT @dfecha_fin = CONVERT(datetime2(3), @fec_fin, 111)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @cod_e = 'GENE003'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               DELETE dbo.tbl_resc
               WHERE 
                  dbo.tbl_resc.cas_dest = @cas_dest AND 
                  dbo.tbl_resc.fec_resc >= @dfecha_ini AND 
                  dbo.tbl_resc.fec_resc < dateadd(day, 1, @dfecha_fin)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'RESC007'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_serv].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_serv]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_serv] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_serv]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_serv
   *    *
   *    *      Objetivo        :       Eliminar un registro de la tabla Servidores
   *    *
   *    *      Autor          :       ruh.
   *    *
   *    *      Creacion        :       20/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_serv     codigo del servidor       
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                             ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* verificamos el valor para el codigo del servidor*/
   IF (nullif(ltrim(nullif(rtrim(@cod_serv), '')), '') IS NULL)
      SELECT @cod_e = 'SERV001'
   /*- verificamos que exista el codigo de servidor*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_serv.cod_serv
            FROM dbo.tbl_serv
            WHERE dbo.tbl_serv.cod_serv = @cod_serv
         )
         SELECT @cod_e = 'SERV011'
      /* verificamos que servidor noexista en la tabla de Destinos*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_dest.cod_serv
               FROM dbo.tbl_dest
               WHERE dbo.tbl_dest.cod_serv = @cod_serv
            )
            SELECT @cod_e = 'SERV012'
         /* verificamos que el servidor no exista en tabla Casillas Externas*/
         ELSE 
            IF EXISTS 
               (
                  SELECT dbo.tbl_cdex.cod_cdex
                  FROM dbo.tbl_cdex
                  WHERE dbo.tbl_cdex.cod_serv = @cod_serv
               )
               SELECT @cod_e = 'SERV013'
            /* verificamos que el servidor no exista en tabla Traza de productos*/
            ELSE 
               IF EXISTS 
                  (
                     SELECT dbo.tbl_tpro.ide_traz
                     FROM dbo.tbl_tpro
                     WHERE dbo.tbl_tpro.cod_serv = @cod_serv
                  )
                  SELECT @cod_e = 'SERV014'
               /* verificamosque el servidor no exista en tabla Historico Productos*/
               ELSE 
                  IF EXISTS 
                     (
                        SELECT dbo.tbl_hpro.ide_traz
                        FROM dbo.tbl_hpro
                        WHERE dbo.tbl_hpro.cod_serv = @cod_serv
                     )
                     SELECT @cod_e = 'SERV015'
                  /* verificamos que el servidor no exista en tabla Operacion de Productos*/
                  ELSE 
                     IF EXISTS 
                        (
                           SELECT dbo.tbl_oppr.ide_traz
                           FROM dbo.tbl_oppr
                           WHERE dbo.tbl_oppr.cod_serv = @cod_serv
                        )
                        SELECT @cod_e = 'SERV016'
                     ELSE 
                        BEGIN

                           BEGIN TRANSACTION 

                           DELETE dbo.tbl_serv
                           WHERE dbo.tbl_serv.cod_serv = @cod_serv

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF @@ERROR != 0
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @cod_e = 'SERV022'

                              END
                           ELSE 
                              SELECT @cod_e = '0'

                           IF @@TRANCOUNT > 0
                              COMMIT TRANSACTION 

                        END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_elim_tarccasiorig].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tarccasiorig]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tarccasiorig] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tarccasiorig]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_tarccasiorig
   *    *
   *    *      Objetivo        :       Elimina registros por casilla origen
   *    *
   *    *      Autor           :       Claudio Vlasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi	Codigo de casilla
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario     :       No tiene 
   *    *
   *
   *   - Declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- Inicializacion de variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_casi
         WHERE dbo.tbl_casi.cod_casi = @cod_casi
      )
      SELECT @error = 'CASI001'
   ELSE 
      IF EXISTS 
         (
            SELECT *
            FROM dbo.tbl_htra
            WHERE dbo.tbl_htra.cas_orig = @cod_casi
         )
         SELECT @error = 'HTRA004'
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_tarc
         WHERE dbo.tbl_tarc.cas_orig = @cod_casi

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'TARC003'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_tarccasirfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tarccasirfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tarccasirfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tarccasirfecha]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_tarccasirfecha
   *    *
   *    *      Objetivo        :       Elimina registrospor casilla origen y rango de fecha
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi		Codigo de casilla
   *    *                             @fec_ini        fecha inicial
   *    *                              @fec_fin        fecha final 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   --- Declaracio de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /*--- Inicializamos el SP*/
   SELECT @error = '0'
   /*--- cuerpo del stored procedure*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_casi
            WHERE dbo.tbl_casi.cod_casi = @cod_casi
         )
         SELECT @error = 'CASI001'
      ELSE 
         IF NOT EXISTS 
            (
               SELECT *
               FROM dbo.tbl_htra
               WHERE dbo.tbl_htra.cas_orig = @cod_casi
            )
            SELECT @error = 'HTRA004'
         ELSE 
            BEGIN

               SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 103)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'
               ELSE 
                  BEGIN

                     SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 103)

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF @@ERROR != 0
                        SELECT @error = 'GENE003'

                  END

            END
   IF (@error = '0')
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 103)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 103)

         BEGIN TRANSACTION 

         DELETE dbo.tbl_tarc
         WHERE dbo.tbl_tarc.cas_orig = @cod_casi AND CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'TARC003'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_tarcrfecha].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tarcrfecha]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tarcrfecha] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tarcrfecha]
@error varchar(255)  OUTPUT,
   @fec_ini varchar(10) = NULL,
   @fec_fin varchar(10) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_tarcrfecha 
   *    *
   *    *      Objetivo        :       Elimina registros porrango de fechas
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_ini      Fecha de ingreso inicial
   *    *                             @fec_fin 	    Fecha de ingreso final
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @vfec_ini datetime2(3), 
      @vfec_fin datetime2(3)
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   IF (@fec_ini IS NULL) OR (@fec_fin IS NULL)
      SELECT @error = 'GENE004'
   ELSE 
      BEGIN

         SELECT @vfec_ini = CONVERT(datetime2(3), @fec_ini, 103)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            SELECT @error = 'GENE003'
         ELSE 
            BEGIN

               SELECT @vfec_fin = CONVERT(datetime2(3), @fec_fin, 103)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  SELECT @error = 'GENE003'

            END

      END
   IF @error = '0'
      BEGIN

         SELECT @fec_ini = CONVERT(char(10), @vfec_ini, 103)

         SELECT @fec_fin = CONVERT(char(10), @vfec_fin, 103)

         BEGIN TRANSACTION 

         DELETE dbo.tbl_tarc
         WHERE CONVERT(char(10), dbo.tbl_tarc.fec_rece, 103) BETWEEN @fec_ini AND @fec_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'TARC003'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_tarcride].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tarcride]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tarcride] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tarcride]
@error varchar(255)  OUTPUT,
   @itr_ini int,
   @itr_fin int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_tarcride 
   *    *
   *    *      Objetivo        :       Eliminar por rango de identificador de traza
   *    *
   *    *      Autor           :      Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @itr_ini      	Identificador de traza inicial
   *    *                              @itr_fin        Identificador de traz final
   *    *
   *    *      Salida          :       @error		Error generador en el SP
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   - declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializaion de variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_tarc
         WHERE dbo.tbl_tarc.ide_traz BETWEEN @itr_ini AND @itr_fin

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'TARC003'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_elim_tarctpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tarctpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tarctpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tarctpro]
@error varchar(255)  OUTPUT,
   @ide_traz int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   DECLARE
      @est_limp varchar(2)
   DECLARE
      @est_tarc varchar(2)
   DECLARE
      @est_tpro varchar(2)
   DECLARE
      @cas_orig varchar(8)
   DECLARE
      @cas_dest varchar(8)
   DECLARE
      @nom_arcc varchar(20)
   DECLARE
      @nom_arre varchar(20)
   DECLARE
      @tam_arch float(53)
   DECLARE
      @fec_rece datetime2(3)
   DECLARE
      @cod_prod varchar(6)
   DECLARE
      @cod_inst varchar(4)
   DECLARE
      @cod_serv varchar(8)
   DECLARE
      @usu_ingr varchar(15)
   DECLARE
      @fec_actu datetime2(3)
   DECLARE
      @ret_value int
   SELECT 
      @est_tarc = dbo.tbl_tarc.est_traz, 
      @cas_orig = dbo.tbl_tarc.cas_orig, 
      @cas_dest = dbo.tbl_tarc.cas_dest, 
      @nom_arcc = dbo.tbl_tarc.nom_arcc, 
      @nom_arre = dbo.tbl_tarc.nom_arre, 
      @tam_arch = dbo.tbl_tarc.tam_arch, 
      @fec_rece = dbo.tbl_tarc.fec_rece, 
      @usu_ingr = dbo.tbl_tarc.usu_ingr
   FROM dbo.tbl_tarc
   WHERE dbo.tbl_tarc.ide_traz = @ide_traz
   SELECT @error = '0'
   /*----------------------------------------------------------*/
   BEGIN TRANSACTION 
   EXECUTE @ret_value = dbo.sp_elim_tarcride @error  OUTPUT, @ide_traz, @ide_traz
   IF @ret_value != 0
      BEGIN
         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 
      END
   IF substring(@error, 1, 1) = '0'
      BEGIN

         SELECT @fec_actu = getdate()

         EXECUTE @ret_value = dbo.sp_elim_htraidetraz @error  OUTPUT, @ide_traz, @ide_traz, @fec_actu

         IF @ret_value != 0
            BEGIN
               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 
            END

      END
   IF (substring(@error, 1, 1) = '0') AND (@cas_orig = 'SNCFCASI' OR @cas_dest = 'SNCFCASI')
      BEGIN

         SELECT @est_tpro = dbo.tbl_tpro.est_traz, @cod_prod = dbo.tbl_tpro.cod_prod, @cod_inst = dbo.tbl_tpro.cod_inst, @cod_serv = dbo.tbl_tpro.cod_serv
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.ide_traz = @ide_traz

         IF substring(@error, 1, 1) = '0'
            BEGIN

               EXECUTE @ret_value = dbo.sp_elim_tpro @error  OUTPUT, @ide_traz

               IF @ret_value != 0
                  BEGIN
                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 
                  END

            END

         IF substring(@error, 1, 1) = '0'
            BEGIN

               EXECUTE @ret_value = dbo.sp_elim_hproidetraz @error  OUTPUT, @ide_traz, @ide_traz

               IF @ret_value != 0
                  BEGIN
                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 
                  END

            END

         IF substring(@error, 1, 1) = '0'
            BEGIN

               SELECT @est_limp = substring(dbo.tbl_limp.est_limp, 1, 1) + '0'
               FROM dbo.tbl_limp
               WHERE dbo.tbl_limp.ide_traz = @ide_traz

               UPDATE dbo.tbl_limp
                  SET 
                     est_limp = @est_limp, 
                     est_tpro = @est_tpro, 
                     cod_prod = @cod_prod, 
                     cod_inst = @cod_inst, 
                     cod_serv = @cod_serv, 
                     fec_botr = getdate()
               WHERE dbo.tbl_limp.ide_traz = @ide_traz

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @error = 'BORR005'

                     EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

                     SELECT @error = @error + ': ' + @gls_erro

                  END

            END

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   /*---------------------------------------------------------*/
   IF substring(@error, 1, 1) = '0'
      RETURN 0
   RETURN -1
GO

GO
--SqlScripter----[dbo].[sp_elim_tpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tpro]
@error varchar(255)  OUTPUT,
   @ide_traz int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   BEGIN TRANSACTION 
   DELETE dbo.tbl_tpro
   WHERE dbo.tbl_tpro.ide_traz = @ide_traz
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @error = 'TPRO008'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_elim_tprohpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tprohpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tprohpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tprohpro]
@error varchar(255)  OUTPUT,
   @nom_arch varchar(50),
   @fec_rece datetime2(3),
   @cod_serv varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @ide_traz int
   DECLARE
      @est_limp varchar(2)
   DECLARE
      @est_tarc varchar(2)
   DECLARE
      @est_tpro varchar(2)
   DECLARE
      @cas_orig varchar(8)
   DECLARE
      @cas_dest varchar(8)
   DECLARE
      @nom_arcc varchar(20)
   DECLARE
      @nom_arre varchar(20)
   DECLARE
      @tam_arch float(53)
   DECLARE
      @cod_prod varchar(6)
   DECLARE
      @cod_inst varchar(4)
   DECLARE
      @usu_ingr varchar(15)
   DECLARE
      @fec_botr datetime2(3)
   DECLARE
      @cas_auxi varchar(8)
   DECLARE
      @ret_value int
   SELECT @error = '0'
   SELECT @ide_traz = -1
   SELECT @est_limp = '00'
   SELECT @est_tarc = ''
   SELECT @nom_arcc = @nom_arch
   SELECT @nom_arre = ''
   SELECT 
      @est_tpro = dbo.tbl_tpro.est_traz, 
      @cas_auxi = dbo.tbl_tpro.cod_casi, 
      @tam_arch = dbo.tbl_tpro.tam_arch, 
      @cod_prod = dbo.tbl_tpro.cod_prod, 
      @cod_inst = dbo.tbl_tpro.cod_inst, 
      @usu_ingr = dbo.tbl_tpro.usu_ingr
   FROM dbo.tbl_tpro
   WHERE 
      dbo.tbl_tpro.nom_arch = @nom_arch AND 
      dbo.tbl_tpro.fec_rece = @fec_rece AND 
      dbo.tbl_tpro.cod_serv = @cod_serv
   IF (@est_tpro >= '70')
      BEGIN

         SELECT @cas_orig = 'sncfcasi'

         SELECT @cas_dest = @cas_auxi

      END
   ELSE 
      BEGIN

         SELECT @cas_orig = @cas_auxi

         SELECT @cas_dest = 'sncfcasi'

      END
   /*-------------------------------------------------------------------------------------*/
   BEGIN TRANSACTION 
   EXECUTE @ret_value = dbo.sp_elim_tprotrazexpi @error  OUTPUT, @nom_arch, @fec_rece, @cod_serv
   IF @ret_value != 0
      BEGIN
         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 
      END
   IF substring(@error, 1, 1) = '0'
      BEGIN

         EXECUTE @ret_value = dbo.sp_elim_hprotrazexpi @error  OUTPUT, @nom_arch, @fec_rece, @cod_serv

         IF @ret_value != 0
            BEGIN
               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 
            END

      END
   IF substring(@error, 1, 1) = '0'
      BEGIN

         SELECT @fec_botr = getdate()

         EXECUTE @ret_value = dbo.sp_ingr_limp 
            @error  OUTPUT, 
            @ide_traz, 
            @est_limp, 
            @est_tarc, 
            @est_tpro, 
            @cas_orig, 
            @cas_dest, 
            @nom_arch, 
            @tam_arch, 
            @fec_rece, 
            '1900/01/01 00:00', 
            @fec_botr, 
            @cod_prod, 
            @cod_inst, 
            @cod_serv

         IF @ret_value != 0
            BEGIN
               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 
            END

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   /*-------------------------------------------------------------------------------------*/
   IF substring(@error, 1, 1) = '0'
      RETURN 0
   RETURN -1
GO

GO
--SqlScripter----[dbo].[sp_elim_tprotrazexpi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_tprotrazexpi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_tprotrazexpi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_tprotrazexpi]
@error varchar(255)  OUTPUT,
   @nom_arch varchar(50),
   @fec_rece datetime2(3),
   @cod_serv varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   BEGIN TRANSACTION 
   DELETE dbo.tbl_tpro
   WHERE 
      dbo.tbl_tpro.nom_arch = @nom_arch AND 
      dbo.tbl_tpro.fec_rece = @fec_rece AND 
      dbo.tbl_tpro.cod_serv = @cod_serv
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @error = 'TPRO008'

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   IF @error = '0'
      BEGIN

         SELECT @error = @error + ': Exito en la operacion'

         RETURN 0

      END
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_elim_user].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_elim_user]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_elim_user] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_elim_user]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @cod_user varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_elim_user
   *    *
   *    *      Objetivo        :       Eliminar usuarios d la tabla tbl_user
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst	Codigo de institucion a la que pertenece el usuario       
   *    *                             @cod_user       Codigo del usuario a eliminar
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *   *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que el par institucion-codigo usuario exista en la tabla tbl_user*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_user.cod_user
         FROM dbo.tbl_user
         WHERE dbo.tbl_user.cod_inst = @cod_inst AND dbo.tbl_user.cod_user = @cod_user
      )
      SELECT @cod_e = 'USER006'
   ELSE 
      BEGIN

         BEGIN TRANSACTION 

         DELETE dbo.tbl_user
         WHERE dbo.tbl_user.cod_inst = @cod_inst AND dbo.tbl_user.cod_user = @cod_user

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @cod_e = 'USER008'

            END
         ELSE 
            SELECT @cod_e = '0'

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_error].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_error]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_error] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_error]
@cod_erro varchar(7),
   @gls_erro varchar(255)  OUTPUT
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   
   /*
   *   
   *    *      Servicio        :       sp_error
   *    *
   *    *      Objetivo        :       devuelve la glosa de un codigo determinado   
   *    *
   *    *      Autor           :      ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_erro	codigo del error       
   *    *
   *    *      Salida          :       @gls_erro       descripcion del error
   *    *
   *    *      Comentario     :      No tiene 
   *    *
   *
   */
   SELECT @gls_erro = ''
   SELECT @gls_erro = dbo.tbl_cerr.des_erro
   FROM dbo.tbl_cerr
   WHERE dbo.tbl_cerr.cod_erro = @cod_erro
   IF @gls_erro = ''
      RETURN -1
   ELSE 
      RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_es_habil].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_es_habil]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_es_habil] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_es_habil]
@error varchar(255)  OUTPUT,
   @fecha datetime2(3),
   @habil varchar(1)  OUTPUT
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   DECLARE
      @dia int
   SELECT @cod_e = '0'
   SELECT @habil = 'S'
   SELECT @dia = datepart(dw, @fecha)
   IF @dia = 1 OR @dia = 7
      SELECT @habil = 'N'
   ELSE 
      IF EXISTS 
         (
            SELECT dbo.tbl_feri.fec_feri
            FROM dbo.tbl_feri
            WHERE dbo.tbl_feri.fec_feri = @fecha
         )
         SELECT @habil = 'N'
   /*
   *   SSMA warning messages:
   *   S2SS0016: SQL Server might use a different error code.
   */

   IF @@ERROR != 0
      SELECT @cod_e = 'XXXXX'
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ':' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_casi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_casi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_casi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_casi]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @des_casi varchar(30),
   @cod_inst varchar(4),
   @usu_cnxn varchar(8),
   @pas_cnxn varchar(8),
   @dir_entr varchar(50),
   @dir_sali varchar(50),
   @dir_buzo varchar(50),
   @flg_freg varchar(1),
   @flg_gavi varchar(1),
   @flg_gnot varchar(1)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_casi
   *    *
   *    *      Objetivo        :       Ingresar Casillas en Sinacofi
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi     codigo de Casilla       
   *    *                              @des_casi     descripcion de la Casilla
   *    *                              @cod_inst     codigo de Institucion
   *    *                              @usu_cnxn     usuario FTP
   *    *                              @pas_cnxn     password FTP
   *    *                              @dir_entr     directorio de entrada
   *    *                              @dir_sali     directorio de salida
   *    *                              @dir_buzo     directorio buzon de mensajes
   *    *                              @flg_freg     fin de registro
   *    *                              @flg_gavi     genera Aviso
   *    *                              @flg_gnot     genera Notificacion
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* verificamos el valor para el codigo casilla*/
   IF (nullif(ltrim(nullif(rtrim(@cod_casi), '')), '') IS NULL)
      SELECT @cod_e = 'CASI010'
   /* verificamos el valor de la descripcion de la casilla*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_casi), '')), '') IS NULL)
         SELECT @cod_e = 'CASI011'
      /* verificamos el codigo de institucion*/
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@cod_inst), '')), '') IS NULL)
            SELECT @cod_e = 'CASI012'
         /* verificamos el valor del login*/
         ELSE 
            IF (nullif(ltrim(nullif(rtrim(@usu_cnxn), '')), '') IS NULL)
               SELECT @cod_e = 'CASI013'
            /* verificamos el valor de la password*/
            ELSE 
               IF (nullif(ltrim(nullif(rtrim(@pas_cnxn), '')), '') IS NULL)
                  SELECT @cod_e = 'CASI014'
               /* verificamos el valor del directorio de entrada*/
               ELSE 
                  IF (nullif(ltrim(nullif(rtrim(@dir_entr), '')), '') IS NULL)
                     SELECT @cod_e = 'CASI015'
                  /* verificamos el valor del directorio de salida*/
                  ELSE 
                     IF (nullif(ltrim(nullif(rtrim(@dir_sali), '')), '') IS NULL)
                        SELECT @cod_e = 'CASI016'
                     /* verificamos el valor del directorio de buzon*/
                     ELSE 
                        IF (nullif(ltrim(nullif(rtrim(@dir_buzo), '')), '') IS NULL)
                           SELECT @cod_e = 'CASI017'
                        /* verificamos el campo fin_regi*/
                        ELSE 
                           IF (nullif(ltrim(nullif(rtrim(@flg_freg), '')), '') IS NULL OR (@flg_freg <> 'S' AND @flg_freg <> 'N'))
                              SELECT @cod_e = 'CASI018'
                           /* verificamos la generacion de aviso*/
                           ELSE 
                              IF (nullif(ltrim(nullif(rtrim(@flg_gavi), '')), '') IS NULL OR (@flg_gavi <> 'S' AND @flg_gavi <> 'N'))
                                 SELECT @cod_e = 'CASI019'
                              /* verificamos la generacion de notificacion*/
                              ELSE 
                                 IF (nullif(ltrim(nullif(rtrim(@flg_gnot), '')), '') IS NULL OR (@flg_gnot <> 'S' AND @flg_gnot <> 'N'))
                                    SELECT @cod_e = 'CASI020'
                                 /*- verificamos que no exista el codigo de Casilla en la tabla*/
                                 ELSE 
                                    IF EXISTS 
                                       (
                                          SELECT *
                                          FROM dbo.tbl_casi, dbo.tbl_cdex
                                          WHERE dbo.tbl_casi.cod_casi = @cod_casi OR dbo.tbl_cdex.cod_cdex = @cod_casi
                                       )
                                       SELECT @cod_e = 'CASI002'
                                    /* verificamos que la Institucion ingresada exista en Tbl_Inst*/
                                    ELSE 
                                       IF NOT EXISTS 
                                          (
                                             SELECT dbo.tbl_inst.cod_inst
                                             FROM dbo.tbl_inst
                                             WHERE dbo.tbl_inst.cod_inst = @cod_inst
                                          )
                                          SELECT @cod_e = 'CASI006'
                                       /* Verificamos que el Directorio de Entrada especificado sea unico*/
                                       ELSE 
                                          IF EXISTS 
                                             (
                                                SELECT dbo.tbl_casi.dir_entr
                                                FROM dbo.tbl_casi
                                                WHERE lower(@dir_entr) = lower(dbo.tbl_casi.dir_entr) OR lower(@dir_entr) = lower(dbo.tbl_casi.dir_sali) OR lower(@dir_entr) = lower(dbo.tbl_casi.dir_buzo)
                                             )
                                             SELECT @cod_e = 'CASI007'
                                          /* Verificamos que el Dir. Salida sea unico*/
                                          ELSE 
                                             IF EXISTS 
                                                (
                                                   SELECT dbo.tbl_casi.dir_sali
                                                   FROM dbo.tbl_casi
                                                   WHERE lower(@dir_sali) = lower(dbo.tbl_casi.dir_sali) OR lower(@dir_sali) = lower(dbo.tbl_casi.dir_entr) OR lower(@dir_sali) = lower(dbo.tbl_casi.dir_buzo)
                                                )
                                                SELECT @cod_e = 'CASI008'
                                             /* Verificamos que el Dir. Buzon sea unico*/
                                             ELSE 
                                                IF EXISTS 
                                                   (
                                                      SELECT dbo.tbl_casi.dir_buzo
                                                      FROM dbo.tbl_casi
                                                      WHERE lower(@dir_buzo) = lower(dbo.tbl_casi.dir_buzo) OR lower(@dir_buzo) = lower(dbo.tbl_casi.dir_entr) OR lower(@dir_buzo) = lower(dbo.tbl_casi.dir_sali)
                                                   )
                                                   SELECT @cod_e = 'CASI009'
                                                ELSE 
                                                   BEGIN

                                                      BEGIN TRANSACTION 

                                                      INSERT dbo.tbl_casi(
                                                         cod_casi, 
                                                         des_casi, 
                                                         cod_inst, 
                                                         usu_cnxn, 
                                                         pas_cnxn, 
                                                         dir_entr, 
                                                         dir_sali, 
                                                         dir_buzo, 
                                                         flg_freg, 
                                                         flg_gavi, 
                                                         flg_gnot, 
                                                         fec_ingr, 
                                                         usu_ingr)
                                                         VALUES (
                                                            @cod_casi, 
                                                            @des_casi, 
                                                            @cod_inst, 
                                                            @usu_cnxn, 
                                                            @pas_cnxn, 
                                                            @dir_entr, 
                                                            @dir_sali, 
                                                            @dir_buzo, 
                                                            @flg_freg, 
                                                            @flg_gavi, 
                                                            @flg_gnot, 
                                                            getdate(), 
                                                            @usu_ingr)

                                                      /*
                                                      *   SSMA warning messages:
                                                      *   S2SS0016: SQL Server might use a different error code.
                                                      */

                                                      IF @@ERROR != 0
                                                         BEGIN

                                                            IF @@TRANCOUNT > 0
                                                               ROLLBACK TRANSACTION 

                                                            SELECT @cod_e = 'CASI021'

                                                         END
                                                      ELSE 
                                                         SELECT @cod_e = '0'

                                                      IF @@TRANCOUNT > 0
                                                         COMMIT TRANSACTION 

                                                   END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_cdex].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_cdex]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_cdex] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_cdex]
@error varchar(255)  OUTPUT,
   @cod_cdex varchar(8),
   @cod_serv varchar(8),
   @cod_inst varchar(4),
   @des_cdex varchar(40)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   SELECT @error = '0'
   /* validamos que Codigo de Casilla externa sea distinto de Null*/
   IF (nullif(ltrim(nullif(rtrim(@cod_cdex), '')), '') IS NULL)
      SELECT @cod_e = 'CDEX001'
   /* validamos que la descripcion de la casilla sea distinta de null*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_cdex), '')), '') IS NULL)
         SELECT @cod_e = 'CDEX002'
      /* validamos que el codigo de servidor exista en tbl_serv*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_serv.cod_serv
               FROM dbo.tbl_serv
               WHERE dbo.tbl_serv.cod_serv = @cod_serv
            )
            SELECT @cod_e = 'SERV011'
         /* validamos que el servidor sea un servidor externo en tbl_serv*/
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT dbo.tbl_serv.cod_serv
                  FROM dbo.tbl_serv
                  WHERE dbo.tbl_serv.cod_serv = @cod_serv AND dbo.tbl_serv.tip_serv = 'E'
               )
               SELECT @cod_e = 'CDEX013'
            /* validamos que el codigo de institucion exista en la tabla tbl_inst*/
            ELSE 
               IF NOT EXISTS 
                  (
                     SELECT dbo.tbl_inst.cod_inst
                     FROM dbo.tbl_inst
                     WHERE dbo.tbl_inst.cod_inst = @cod_inst
                  )
                  SELECT @cod_e = 'INST002'
               /*- verificamos que no exista el codigo de Casilla en la tabla*/
               ELSE 
                  IF EXISTS 
                     (
                        SELECT *
                        FROM dbo.tbl_casi, dbo.tbl_cdex
                        WHERE dbo.tbl_casi.cod_casi = @cod_cdex OR dbo.tbl_cdex.cod_cdex = @cod_cdex
                     )
                     SELECT @cod_e = 'CDEX010'
                  /* validamos que los campos codigo + servidor sea unica*/
                  ELSE 
                     IF EXISTS 
                        (
                           SELECT dbo.tbl_cdex.cod_cdex
                           FROM dbo.tbl_cdex
                           WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex AND dbo.tbl_cdex.cod_serv = @cod_serv
                        )
                        SELECT @cod_e = 'CDEX004'
                     ELSE 
                        BEGIN

                           BEGIN TRANSACTION 

                           INSERT dbo.tbl_cdex(
                              cod_cdex, 
                              cod_serv, 
                              cod_inst, 
                              des_cdex, 
                              fec_ingr, 
                              usu_ingr)
                              VALUES (
                                 @cod_cdex, 
                                 @cod_serv, 
                                 @cod_inst, 
                                 @des_cdex, 
                                 getdate(), 
                                 @usu_ingr)

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF @@ERROR != 0
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @cod_e = 'CDEX010'

                              END
                           ELSE 
                              SELECT @cod_e = '0'

                           IF @@TRANCOUNT > 0
                              COMMIT TRANSACTION 

                        END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_cerr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_cerr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_cerr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_cerr]
@error varchar(255)  OUTPUT,
   @cod_erro varchar(7),
   @des_erro varchar(70)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_cerr
   *    *
   *    *      Objetivo        :       ingresar nuevo registro en tabla de errores    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_erro	codigo del error       
   *    *                              @des_erro       descripcion del error	
   *    *
   *    *      Salida          :       @error          codigo y error ocurrido en
   *    *                                              en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que el codigo de error tenga valor ingresado*/
   IF (nullif(ltrim(nullif(rtrim(@cod_erro), '')), '') IS NULL)
      SELECT @cod_e = 'CERR010'
   /* validamos que la descripcion no sea Nula*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_erro), '')), '') IS NULL)
         SELECT @cod_e = 'CERR011'
      /* validamos que el codigo a ingresar no exista*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_cerr.cod_erro
               FROM dbo.tbl_cerr
               WHERE dbo.tbl_cerr.cod_erro = @cod_erro
            )
            SELECT @cod_e = 'CERR001'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               INSERT dbo.tbl_cerr(cod_erro, des_erro, fec_ingr, usu_ingr)
                  VALUES (@cod_erro, @des_erro, getdate(), @usu_ingr)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'CERR005'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_corr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_corr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_corr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_corr]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @cor_actu int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_corr
   *    *
   *    *      Objetivo        :       Ingresa el nuevo correlativo para una institucion    
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst       Codigo de la institucion        
   *    *				@cor_act	Correlativo Actual
   *    *
   *    *      Salida          :       @error          Codigo y error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @usu_ingr varchar(15)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que la institucion a la que se le modifica el correlativo exista en tbl_inst*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_inst.cod_inst
         FROM dbo.tbl_inst
         WHERE dbo.tbl_inst.cod_inst = @cod_inst
      )
      SELECT @cod_e = 'INST002'
   /* validamos que la institucion no exista en la tabla de correlativos*/
   ELSE 
      IF EXISTS 
         (
            SELECT dbo.tbl_corr.cor_actu
            FROM dbo.tbl_corr
            WHERE dbo.tbl_corr.cod_inst = @cod_inst
         )
         SELECT @cod_e = 'CORR003'
      ELSE 
         BEGIN

            SELECT @cod_e = '0'

            SELECT @usu_ingr = suser_name()

            BEGIN TRANSACTION 

            INSERT dbo.tbl_corr(cod_inst, cor_actu, fec_ingr, usu_ingr)
               VALUES (@cod_inst, @cor_actu, getdate(), @usu_ingr)

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @cod_e = 'CORR001'

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_dest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_dest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_dest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_dest]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_serv varchar(8),
   @cas_dest varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255), 
      @tip_serv varchar(1)
   SELECT @error = '0'
   IF EXISTS 
      (
         SELECT *
         FROM dbo.tbl_dest
         WHERE dbo.tbl_dest.cod_prod = @cod_prod AND dbo.tbl_dest.cas_dest = @cas_dest
      )
      SELECT @error = 'DEST013'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_prod
            WHERE dbo.tbl_prod.cod_prod = @cod_prod
         )
         SELECT @error = 'DEST003'
      ELSE 
         IF NOT EXISTS 
            (
               SELECT *
               FROM dbo.tbl_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst
            )
            SELECT @error = 'DEST004'
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT *
                  FROM dbo.tbl_serv
                  WHERE dbo.tbl_serv.cod_serv = @cod_serv
               )
               SELECT @error = 'DEST005'
            ELSE 
               BEGIN

                  SELECT @tip_serv = dbo.tbl_serv.tip_serv
                  FROM dbo.tbl_serv
                  WHERE dbo.tbl_serv.cod_serv = @cod_serv

                  IF @tip_serv = 'I'
                     BEGIN
                        IF NOT EXISTS 
                           (
                              SELECT *
                              FROM dbo.tbl_casi
                              WHERE dbo.tbl_casi.cod_casi = @cas_dest
                           )
                           SELECT @error = 'DEST006'
                        ELSE 
                           IF NOT EXISTS 
                              (
                                 SELECT *
                                 FROM dbo.tbl_casi
                                 WHERE dbo.tbl_casi.cod_casi = @cas_dest AND dbo.tbl_casi.cod_inst = @cod_inst
                              )
                              SELECT @error = 'DEST007'
                     END
                  ELSE 
                     BEGIN
                        IF NOT EXISTS 
                           (
                              SELECT *
                              FROM dbo.tbl_cdex
                              WHERE dbo.tbl_cdex.cod_cdex = @cas_dest AND dbo.tbl_cdex.cod_serv = @cod_serv
                           )
                           SELECT @error = 'DEST006'
                        ELSE 
                           IF NOT EXISTS 
                              (
                                 SELECT *
                                 FROM dbo.tbl_cdex
                                 WHERE 
                                    dbo.tbl_cdex.cod_cdex = @cas_dest AND 
                                    dbo.tbl_cdex.cod_serv = @cod_serv AND 
                                    dbo.tbl_cdex.cod_inst = @cod_inst
                              )
                              SELECT @error = 'DEST007'
                     END

               END
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         INSERT dbo.tbl_dest(
            cod_prod, 
            cod_inst, 
            cod_serv, 
            cas_dest, 
            fec_ingr, 
            usu_ingr)
            VALUES (
               @cod_prod, 
               @cod_inst, 
               @cod_serv, 
               @cas_dest, 
               getdate(), 
               suser_name())

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'DEST008'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_ingr_estt].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_estt]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_estt] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_estt]
@error varchar(255)  OUTPUT,
   @est_traz varchar(2),
   @des_traz varchar(30)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_estt
   *    *
   *    *      Objetivo        :       ingresar nuevo estado en la tabla tbl_estt    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @est_traz       codigo de la Traza      
   *    *                              @des_traz       descripcion de la Traza
   *    *
   *    *      Salida          :       @error          codigo y error ocurrido en
   *    *                                              en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que el codigo de la traza no sea nulo*/
   IF (nullif(ltrim(nullif(rtrim(@est_traz), '')), '') IS NULL)
      SELECT @cod_e = 'ESTT008'
   /* validamos que la descrpcion de la traza no sea nulo*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_traz), '')), '') IS NULL)
         SELECT @cod_e = 'ESTT009'
      /* validamos que no exista el codigo  de traza*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_estt.est_traz
               FROM dbo.tbl_estt
               WHERE dbo.tbl_estt.est_traz = @est_traz
            )
            SELECT @cod_e = 'ESTT002'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               INSERT dbo.tbl_estt(est_traz, des_traz, fec_ingr, usu_ingr)
                  VALUES (@est_traz, @des_traz, getdate(), @usu_ingr)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'ESTT005'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_feri].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_feri]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_feri] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_feri]
@error varchar(255)  OUTPUT,
   @fec_feri datetime2(3),
   @des_feri varchar(50)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_feri
   *    *
   *    *      Objetivo        :       Ingresar fecha a Calndario de Fesivos
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       21/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_feri   Fecha Festiva a Ingresar       
   *    *                              @de_feri   Descripcion de la Fecha Festiva
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos vriables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que la descripcion del festivo exista*/
   IF (nullif(ltrim(nullif(rtrim(@des_feri), '')), '') IS NULL)
      SELECT @cod_e = 'FERI003'
   /* validamos que la fecha no exista en la tbl_feri*/
   ELSE 
      IF EXISTS 
         (
            SELECT dbo.tbl_feri.fec_feri
            FROM dbo.tbl_feri
            WHERE CONVERT(varchar(8), dbo.tbl_feri.fec_feri, 112) = CONVERT(varchar(8), @fec_feri, 112)
         )
         SELECT @cod_e = 'FERI002'
      ELSE 
         BEGIN

            BEGIN TRANSACTION 

            INSERT dbo.tbl_feri(fec_feri, des_feri, fec_ingr)
               VALUES (@fec_feri, @des_feri, getdate())

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @cod_e = 'FERI004'

               END
            ELSE 
               SELECT @cod_e = '0'

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_hpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_hpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_hpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_hpro]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2),
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_casi varchar(8),
   @cod_serv varchar(8),
   @nom_arch varchar(50) = NULL,
   @tam_arch float(53) = NULL,
   @fec_rece datetime2(3) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_hpro
   *    *
   *    *      Objetivo        :       Ingreso historico de productos
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *				@ide_traz 	Identificador de la traza
   *    *				@est_traz	Estado de la traza
   *    *				@cod_prod	Codigo de producto
   *    *				@cod_inst	Codigo de institucion
   *    *				@cod_casi	Codigo de casilla
   *    *				@cod_serv	Codigo de servidor
   *    *				@nom_arch	Nombre de archivo
   *    *				@tam_arch 	Tamano del archivo
   *    *				@fec_rece	Fecha de recepcion
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   - declaramos variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializamos variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_estt
         WHERE dbo.tbl_estt.est_traz = @est_traz
      )
      SELECT @error = 'ESTT001'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_dest
            WHERE dbo.tbl_dest.cod_prod = @cod_prod AND dbo.tbl_dest.cod_inst = @cod_inst
         )
         SELECT @error = 'TPRO009'
      ELSE 
         IF (@nom_arch = '') OR (@nom_arch = ' ') OR (@nom_arch IS NULL)
            SELECT @error = 'GENE001'
         ELSE 
            IF (@tam_arch <= 0) OR (@tam_arch IS NULL)
               SELECT @error = 'GENE002'
            ELSE 
               IF (@fec_rece IS NULL)
                  SELECT @error = 'GENE004'
   SELECT @tam_arch
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         INSERT dbo.tbl_hpro(
            ide_traz, 
            est_traz, 
            cod_prod, 
            cod_inst, 
            cod_casi, 
            cod_serv, 
            nom_arch, 
            tam_arch, 
            fec_rece, 
            usu_ingr, 
            fec_ingr)
            VALUES (
               @ide_traz, 
               @est_traz, 
               @cod_prod, 
               @cod_inst, 
               @cod_casi, 
               @cod_serv, 
               @nom_arch, 
               @tam_arch, 
               @fec_rece, 
               suser_name(), 
               getdate())

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'HPRO003'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_ingr_hres].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_hres]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_hres] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_hres]
@error varchar(255)  OUTPUT,
   @cor_resc int,
   @nom_msg varchar(3),
   @nom_arch varchar(20),
   @tam_arch float(53),
   @est_resc varchar(2),
   @est_fres varchar(2),
   @fec_arch datetime2(3),
   @cas_orig varchar(8) = NULL,
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_hres
   *    *
   *    *      Objetivo        :       Ingresa los archivos rescatados en la tabla de historicos de rescate  
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *      Entrada         :       @cor_resc       Correlativo de Rescate
   *    *                              @nom_msg        Tipo del archivo
   *    *                              @nom_arch       Nombre del archivo
   *    *                              @tam_arch       Tamano del archivo
   *    *                              @est_resc       Estado del rescate 
   *    *				@est_fres	SubEstado del rescate
   *    *                              @fec_arch       Fecha del archivo
   *    *                              @cas_orig       Casilla de origen del envio
   *    *                              @cas_dest       Casilla de destino del envio    
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @rt int
   DECLARE
      @cod_inst varchar(4)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que el correlativo sea mayor que 0 y menor o igual que 99999*/
   IF (@cor_resc < 0 OR @cor_resc > 99999)
      SELECT @cod_e = 'HRES001'
   /* validamos que el nombre del archivo sea distinto de nulo*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@nom_arch), '')), '') IS NULL)
         SELECT @cod_e = 'RESC001'
      /* validamos que el tamano del archivo sea mayor que 0*/
      ELSE 
         IF (@tam_arch < 0)
            SELECT @cod_e = 'RESC002'
         /* validamos que el estado de rescate se encuentre dentro de tbl_estt*/
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT dbo.tbl_estt.est_traz
                  FROM dbo.tbl_estt
                  WHERE dbo.tbl_estt.est_traz = @est_resc
               )
               SELECT @cod_e = 'ESTT001'
            /* validamos que la casilla de origen este en la tabla tbl_casi*/
            ELSE 
               IF NOT (@cas_orig IS NULL) AND NOT EXISTS 
                  (
                     SELECT dbo.tbl_casi.cod_casi
                     FROM dbo.tbl_casi
                     WHERE dbo.tbl_casi.cod_casi = @cas_orig
                  )
                  SELECT @cod_e = 'RESC003'
               /* validamos que la casilla de destino este en la tabla tbl_casi*/
               ELSE 
                  IF NOT EXISTS 
                     (
                        SELECT dbo.tbl_casi.cod_casi
                        FROM dbo.tbl_casi
                        WHERE dbo.tbl_casi.cod_casi = @cas_dest
                     )
                     SELECT @cod_e = 'RESC004'
                  /* validamos que el tipo de archivo exista*/
                  ELSE 
                     IF NOT EXISTS 
                        (
                           SELECT dbo.tbl_estr.nom_msg
                           FROM dbo.tbl_estr
                           WHERE dbo.tbl_estr.nom_msg = @nom_msg
                        )
                        SELECT @cod_e = 'RESC009'
                     ELSE 
                        BEGIN

                           /* Agregamos nuevo registro en la tabla de historico de rescate*/
                           BEGIN TRANSACTION 

                           INSERT dbo.tbl_hres(
                              cor_resc, 
                              nom_msg, 
                              nom_arch, 
                              tam_arch, 
                              est_resc, 
                              est_fres, 
                              fec_arch, 
                              cas_orig, 
                              cas_dest, 
                              usu_ingr, 
                              fec_ingr)
                              VALUES (
                                 @cor_resc, 
                                 @nom_msg, 
                                 @nom_arch, 
                                 @tam_arch, 
                                 @est_resc, 
                                 @est_fres, 
                                 @fec_arch, 
                                 @cas_orig, 
                                 @cas_dest, 
                                 @usu_ingr, 
                                 getdate())

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF @@ERROR != 0
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @cod_e = 'HRES002'

                              END
                           ELSE 
                              SELECT @cod_e = '0'

                           IF @@TRANCOUNT > 0
                              COMMIT TRANSACTION 

                        END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_htra].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_htra]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_htra] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_htra]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2),
   @cas_dest varchar(8) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_htra
   *    *
   *    *      Objetivo        :       Ingresa registro en tabla historica
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @ide_traz 	identificador de traza
   *    *				@est_traz	estado de traza
   *    *				@cas_dest	casilla destino
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *   -- Declaracion de variables
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int
   /*-- inicializamos variables*/
   SELECT @error = '0'
   /*-- cuerpo del sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tarc
         WHERE dbo.tbl_tarc.ide_traz = @ide_traz
      )
      SELECT @error = 'TRAC001'
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         INSERT dbo.tbl_htra(
            ide_traz, 
            est_traz, 
            cas_orig, 
            cas_dest, 
            nom_arcc, 
            nom_arre, 
            tam_arch, 
            fec_rece, 
            fec_ingr, 
            usu_ingr)
            SELECT 
               dbo.tbl_tarc.ide_traz, 
               @est_traz, 
               dbo.tbl_tarc.cas_orig, 
               @cas_dest, 
               dbo.tbl_tarc.nom_arcc, 
               dbo.tbl_tarc.nom_arre, 
               dbo.tbl_tarc.tam_arch, 
               dbo.tbl_tarc.fec_rece, 
               getdate(), 
               suser_name()
            FROM dbo.tbl_tarc
            WHERE dbo.tbl_tarc.ide_traz = @ide_traz

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'HTRA001'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_ingr_inst].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_inst]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_inst] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_inst]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @nom_inst varchar(40)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_inst
   *    *
   *    *      Objetivo        :       Ingresar Instituciones
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst	codigo de institucion       
   *    *                              @nom_inst       nombre de la institucion	
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que el codigo de la institucion se distinto de nulo*/
   IF (nullif(ltrim(nullif(rtrim(@cod_inst), '')), '') IS NULL)
      SELECT @cod_e = 'INST009'
   /* validamos que la descrpcion de la traza no sea nulo*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@nom_inst), '')), '') IS NULL)
         SELECT @cod_e = 'INST010'
      /* validamos que la institucion no exista*/
      ELSE 
         IF EXISTS 
            (
               SELECT dbo.tbl_inst.cod_inst
               FROM dbo.tbl_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst
            )
            SELECT @cod_e = 'INST001'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               INSERT dbo.tbl_inst(cod_inst, nom_inst, fec_ingr, usu_ingr)
                  VALUES (@cod_inst, @nom_inst, getdate(), @usu_ingr)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'INST006'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_limp].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_limp]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_limp] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_limp]
@error varchar(255)  OUTPUT,
   @ide_traz int  OUTPUT,
   @est_limp varchar(2),
   @est_tarc varchar(2) = NULL,
   @est_tpro varchar(2) = NULL,
   @cas_orig varchar(8),
   @cas_dest varchar(8),
   @nom_arch varchar(20),
   @tam_arch float(53) = NULL,
   @fec_rece datetime2(3) = NULL,
   @fec_boar datetime2(3) = NULL,
   @fec_botr datetime2(3) = NULL,
   @cod_prod varchar(6) = NULL,
   @cod_inst varchar(8) = NULL,
   @cod_serv varchar(8) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         INSERT dbo.tbl_limp(
            ide_traz, 
            est_limp, 
            est_tarc, 
            est_tpro, 
            cas_orig, 
            cas_dest, 
            nom_arch, 
            tam_arch, 
            fec_rece, 
            fec_boar, 
            fec_botr, 
            cod_prod, 
            cod_inst, 
            cod_serv, 
            usu_ingr)
            VALUES (
               @ide_traz, 
               @est_limp, 
               @est_tarc, 
               @est_tpro, 
               @cas_orig, 
               @cas_dest, 
               @nom_arch, 
               @tam_arch, 
               @fec_rece, 
               @fec_boar, 
               @fec_botr, 
               @cod_prod, 
               @cod_inst, 
               @cod_serv, 
               suser_name())

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'LIMP001'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_ingr_msg].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_msg]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_msg] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_msg]
@error varchar(255)  OUTPUT,
   @cod_msg varchar(3) = NULL,
   @nom_msg varchar(3) = NULL,
   @des_msg varchar(20) = NULL,
   @lrg_msg int = NULL,
   @fto1_msg varchar(255) = NULL,
   @fto2_msg varchar(255) = NULL,
   @fto3_msg varchar(255) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_msg
   *    *
   *    *      Objetivo        :       Ingresar Estructura de Mensajes
   *    *
   *    *      Autor           :       Claudio Velasquez S
   *    *
   *    *      Creacion        :       21/03/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_msg     Codigo del mensaje 
   *    *                              @nom_msg     Nombre del mensaje 
   *    *                              @des_msg     Descripcion del mensaje 
   *    *                              @lrg_msg     Largo del texto estructura 
   *    *                              @fto1_msg    Primer bloque del texto estructura
   *    *                              @fto2_msg    Segundo bloque del texto estructura
   *    *                              @fto3_msg    Tercer bloque del texto estructura
   *    *
   *    *      Salida          :       @error       Codigo y glosa del error
   *    *                                           ocurrido en el SP
   *    *
   *    *      Comentario      :      	Implementacion para cambiar protocolo FT3 - SBIF 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_erro varchar(7), 
      @gls_erro varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos codigo de mensaje*/
   IF EXISTS 
      (
         SELECT *
         FROM dbo.tbl_estr
         WHERE dbo.tbl_estr.cod_msg = @cod_msg
      )
      SELECT @cod_erro = 'ESTR004'
   /* validamos el nombre del mensaje*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@nom_msg), '')), '') IS NULL)
         SELECT @cod_erro = 'ESTR005'
      /* validamos la descripcion del mensaje*/
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@des_msg), '')), '') IS NULL)
            SELECT @cod_erro = 'ESTR006'
         /* validamos primer bloque del texto estructura*/
         ELSE 
            IF (nullif(ltrim(nullif(rtrim(@fto1_msg), '')), '') IS NULL)
               SELECT @cod_erro = 'ESTR007'
            /* validamos el largo de texto estructura*/
            ELSE 
               IF (@lrg_msg <= 0)
                  SELECT @cod_erro = 'ESTR008'
               ELSE 
                  BEGIN

                     BEGIN TRANSACTION 

                     INSERT dbo.tbl_estr(
                        cod_msg, 
                        des_msg, 
                        nom_msg, 
                        lrg_msg, 
                        bq1_msg, 
                        bq2_msg, 
                        bq3_msg, 
                        fec_ingr, 
                        usu_ingr)
                        VALUES (
                           @cod_msg, 
                           @des_msg, 
                           @nom_msg, 
                           @lrg_msg, 
                           @fto1_msg, 
                           @fto2_msg, 
                           @fto3_msg, 
                           getdate(), 
                           @usu_ingr)

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF (@@ERROR != 0)
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @cod_erro = 'ESTR002'

                        END
                     ELSE 
                        SELECT @cod_erro = '0'

                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 

                  END
   EXECUTE dbo.sp_error @cod_erro, @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   IF @cod_erro != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_opca].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_opca]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_opca] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_opca]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @cod_erro varchar(7) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_opca
   *    *
   *    *      Objetivo        :       Ingresa registro en tabla tbl_opca
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       
   *    *                              @ide_traz       Identificador de la traza
   *    *				@cod_erro	Codigo de error
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene
   *    *
   *
   *   - declaracion de variables
   */
   DECLARE
      @cd_rr varchar(8), 
      @gls_erro varchar(255), 
      @vreturn int
   /*- inicializacion de variables*/
   SELECT @error = '0'
   /*- cuerpo del sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_cerr
         WHERE dbo.tbl_cerr.cod_erro = @cod_erro
      )
      SELECT @error = 'CERR002'
   IF (@error = '0')
      BEGIN

         BEGIN TRANSACTION 

         INSERT dbo.tbl_opca(ide_traz, cod_erro, fec_ingr, usu_ingr)
            VALUES (@ide_traz, @cod_erro, getdate(), suser_name())

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'OPCA003'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cd_rr = @error
   EXECUTE dbo.sp_error @cod_erro = @cd_rr, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cd_rr + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_ingr_oppr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_oppr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_oppr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_oppr]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2),
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_casi varchar(8),
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @tam_arch float(53),
   @cod_erro varchar(7),
   @fec_rece datetime2(3)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_oppr
   *    *
   *    *      Objetivo        :       Ingresar registros a tabla de Operacion Productos
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       23/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @ide_traz       Identificacion de la Traza 
   *    *                              @est_traz       codigo estado de la traza
   *    *                              @cod_prod       codigo del producto
   *    *                              @cod_inst       codigo de la institucion
   *    *                              @cod_casi       codigo de la casilla
   *    *                              @cod_serv       codigo del servidor
   *    *                              @nom_arch       nombre del archivo
   *    *                              @tam_arch       tamano del archivo
   *    *                              @cod_erro       codigo de error registrado
   *    *                              @fec_rece       fecha recepcion
   *    *
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @cod_e = '0'
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que el nombre de archivos no sea nulo*/
   IF (nullif(ltrim(nullif(rtrim(@nom_arch), '')), '') IS NULL)
      SELECT @cod_e = 'GENE001'
   
   /*
   *    Como se trata de un error puede que los datos de la transferencia no sean correctos y esta condicion no permitira registrar el error (JRSS)
   *   -- validamos que el tamano del archivo sea mayor que cero
   *   else if ( @tam_arch <= 0 ) 
   *          select @cod_e = "GENE002"
   *
   *    validamos la fecha de recepcion sea distinta de nulo
   */
   ELSE 
      IF (@fec_rece IS NULL)
         SELECT @cod_e = 'GENE004'
      
      /*
      *    Como se trata de un error puede que los datos de la transferencia no sean correctos y esta condicion no permitira registrar el error (JRSS)
      *   
      *   -- validamos que el estado de traza este en la tabla tbl_estt
      *   else if not exists( select est_traz from tbl_estt where est_traz = @est_traz )
      *          select @cod_e = "ESTT001"
      *   
      *   -- validamos que los datos de tranaferencia existan en la tabla Destinos
      *   else if not exists ( select * from tbl_dest 
      *                         where cod_prod = @cod_prod and cod_inst = @cod_inst )
      *           select @cod_e = "TPRO009"
      *
      *    validamos que el codigo de error informado exista
      */
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_cerr.cod_erro
               FROM dbo.tbl_cerr
               WHERE dbo.tbl_cerr.cod_erro = @cod_erro
            )
            SELECT @cod_e = 'CERR002'
         
         /*
         *    Los errores se pueden repetir
         *   	if not exists( select * from tbl_oppr where
         *   				ide_traz = @ide_traz and
         *   				est_traz = @est_traz and
         *   				cod_prod = @cod_prod and
         *   				cod_inst = @cod_inst and
         *   				cod_casi = @cod_casi and
         *                                   cod_serv = @cod_serv and
         *   				nom_arch = @nom_arch and
         *   				tam_arch = @tam_arch and
         *   				cod_erro = @cod_erro and
         *   				fec_rece = @fec_rece )
         *
         */
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               IF @est_traz >= '70'
                  IF EXISTS 
                     (
                        SELECT *
                        FROM dbo.tbl_hpro
                        WHERE 
                           dbo.tbl_hpro.nom_arch = @nom_arch AND 
                           dbo.tbl_hpro.cod_serv = @cod_serv AND 
                           dbo.tbl_hpro.est_traz = '70'
                     )
                     SELECT @cod_prod = dbo.tbl_hpro.cod_prod, @cod_inst = dbo.tbl_hpro.cod_inst, @cod_casi = dbo.tbl_hpro.cod_casi, @tam_arch = dbo.tbl_hpro.tam_arch
                     FROM dbo.tbl_hpro
                     WHERE 
                        dbo.tbl_hpro.nom_arch = @nom_arch AND 
                        dbo.tbl_hpro.cod_serv = @cod_serv AND 
                        dbo.tbl_hpro.est_traz = '70'

               INSERT dbo.tbl_oppr(
                  ide_traz, 
                  est_traz, 
                  cod_prod, 
                  cod_inst, 
                  cod_casi, 
                  cod_serv, 
                  nom_arch, 
                  tam_arch, 
                  cod_erro, 
                  fec_rece, 
                  usu_ingr, 
                  fec_ingr)
                  VALUES (
                     @ide_traz, 
                     @est_traz, 
                     @cod_prod, 
                     @cod_inst, 
                     @cod_casi, 
                     @cod_serv, 
                     @nom_arch, 
                     @tam_arch, 
                     @cod_erro, 
                     @fec_rece, 
                     @usu_ingr, 
                     getdate())

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'OPPR010'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_prod].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_prod]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_prod] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_prod]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6),
   @des_prod varchar(40),
   @dir_entr varchar(50),
   @dir_sali varchar(50)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF EXISTS 
      (
         SELECT *
         FROM dbo.tbl_prod
         WHERE dbo.tbl_prod.cod_prod = @cod_prod
      )
      SELECT @error = 'PROD001'
   ELSE 
      IF @cod_prod = ''
         SELECT @error = 'PROD013'
      ELSE 
         IF EXISTS 
            (
               SELECT *
               FROM dbo.tbl_prod
               WHERE dbo.tbl_prod.dir_entr = @dir_entr
            )
            SELECT @error = 'PROD003'
         ELSE 
            IF EXISTS 
               (
                  SELECT *
                  FROM dbo.tbl_prod
                  WHERE dbo.tbl_prod.dir_sali = @dir_sali
               )
               SELECT @error = 'PROD004'
            ELSE 
               BEGIN

                  BEGIN TRANSACTION 

                  INSERT dbo.tbl_prod(
                     cod_prod, 
                     des_prod, 
                     dir_entr, 
                     dir_sali, 
                     fec_ingr, 
                     usu_ingr)
                     VALUES (
                        @cod_prod, 
                        @des_prod, 
                        @dir_entr, 
                        @dir_sali, 
                        getdate(), 
                        suser_name())

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF @@ERROR != 0
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @error = 'PROD009'

                     END

                  IF @@TRANCOUNT > 0
                     COMMIT TRANSACTION 

               END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_ingr_resc].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_resc]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_resc] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_resc]
@error varchar(255)  OUTPUT,
   @cor_resc int  OUTPUT,
   @nom_msg varchar(3),
   @nom_arch varchar(20),
   @tam_arch float(53),
   @est_resc varchar(2),
   @est_fres varchar(2),
   @fec_arch datetime2(3),
   @cas_orig varchar(8) = NULL,
   @cas_dest varchar(8),
   @usu_ingr varchar(15)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_resc
   *    *
   *    *      Objetivo        :       Ingresa los archivos rescatados en la tabla tbl_resc
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @nom_arch       Nombre del archivo
   *    *                              @tam_arch       Tamano del archivo
   *    *                              @est_resc       Estado del rescate 
   *    *                              @est_fres       SubEstado del rescate 
   *    *                              @fec_arch       Fecha del archivo
   *    *                              @cas_orig       Casilla de origen del envio
   *    *                              @cas_dest       Casilla de destino del envio
   *    *                              @usu_ingr       Usuario que realiza el ingreso    
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *                              @cor_resc       Correlativo de rescate asignado
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @rt int
   DECLARE
      @cod_inst varchar(4)
   DECLARE
      @fec_resc datetime2(3)
   SELECT @cor_resc = 0
   /* validamos que el nombre del archivo sea distinto de nulo*/
   IF (nullif(ltrim(nullif(rtrim(@nom_arch), '')), '') IS NULL)
      SELECT @cod_e = 'RESC001'
   /* validamos que el tamano del archivo sea mayor que 0*/
   ELSE 
      IF (@tam_arch < 0)
         SELECT @cod_e = 'RESC002'
      /* validamos que el estado de rescate se encuentre dentro de tbl_estt*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_estt.est_traz
               FROM dbo.tbl_estt
               WHERE dbo.tbl_estt.est_traz = @est_resc
            )
            SELECT @cod_e = 'ESTT001'
         /* validamos que la casilla de origen este en la tabla tbl_casi*/
         ELSE 
            IF NOT (@cas_orig IS NULL) AND NOT EXISTS 
               (
                  SELECT dbo.tbl_casi.cod_casi
                  FROM dbo.tbl_casi
                  WHERE dbo.tbl_casi.cod_casi = @cas_orig
               )
               SELECT @cod_e = 'RESC003'
            /* validamos que la casilla de destino este en la tabla tbl_casi*/
            ELSE 
               IF NOT EXISTS 
                  (
                     SELECT dbo.tbl_casi.cod_casi
                     FROM dbo.tbl_casi
                     WHERE dbo.tbl_casi.cod_casi = @cas_dest
                  )
                  SELECT @cod_e = 'RESC004'
               /* validamos que exista el tipo de archivo  en la tabla tbl_estr*/
               ELSE 
                  IF NOT EXISTS 
                     (
                        SELECT dbo.tbl_estr.nom_msg
                        FROM dbo.tbl_estr
                        WHERE dbo.tbl_estr.nom_msg = @nom_msg
                     )
                     SELECT @cod_e = 'RESC009'
                  ELSE 
                     BEGIN

                        /* Obtengo el codigo de la institucion de la casilla de destino que ya fue validada*/
                        SELECT @cod_inst = dbo.tbl_casi.cod_inst
                        FROM dbo.tbl_casi
                        WHERE dbo.tbl_casi.cod_casi = @cas_dest

                        /* Obtenemos el correlativo a asignar al nuevo registro*/
                        EXECUTE @rt = dbo.sp_modi_corr @cod_e  OUTPUT, @cod_inst, @cor_resc  OUTPUT

                        IF (@rt = 0)
                           BEGIN

                              /* Eliminamos en la tabla de rescate los correlativos iguales al obtenido para una institucion*/
                              EXECUTE @rt = dbo.sp_elim_resc_casdestrcorr @cod_e  OUTPUT, @cor_resc, @cor_resc, @cas_dest

                              IF (@rt = 0)
                                 BEGIN

                                    /* Eliminamos en la tabla de historicos de rescates los correlativos iguales al obtenido*/
                                    EXECUTE @rt = dbo.sp_elim_hres_casdestrcorr @cod_e  OUTPUT, @cor_resc, @cor_resc, @cas_dest

                                    IF (@rt = 0)
                                       BEGIN

                                          /* Agregamos nuevo registro en la tabla de rescate*/
                                          BEGIN TRANSACTION 

                                          INSERT dbo.tbl_resc(
                                             cor_resc, 
                                             nom_msg, 
                                             nom_arch, 
                                             tam_arch, 
                                             est_resc, 
                                             est_fres, 
                                             fec_arch, 
                                             fec_resc, 
                                             cas_orig, 
                                             cas_dest, 
                                             usu_ingr)
                                             VALUES (
                                                @cor_resc, 
                                                @nom_msg, 
                                                @nom_arch, 
                                                @tam_arch, 
                                                @est_resc, 
                                                @est_fres, 
                                                @fec_arch, 
                                                getdate(), 
                                                @cas_orig, 
                                                @cas_dest, 
                                                @usu_ingr)

                                          /*
                                          *   SSMA warning messages:
                                          *   S2SS0016: SQL Server might use a different error code.
                                          */

                                          IF @@ERROR != 0
                                             BEGIN

                                                IF @@TRANCOUNT > 0
                                                   ROLLBACK TRANSACTION 

                                                SELECT @cod_e = 'RESC005'

                                             END
                                          ELSE 
                                             BEGIN

                                                /* Agregamos el nuevo registro en la tabla de historicos de rescates*/
                                                EXECUTE @rt = dbo.sp_ingr_hres 
                                                   @cod_e  OUTPUT, 
                                                   @cor_resc, 
                                                   @nom_msg, 
                                                   @nom_arch, 
                                                   @tam_arch, 
                                                   @est_resc, 
                                                   @est_fres, 
                                                   @fec_arch, 
                                                   @cas_orig, 
                                                   @cas_dest

                                                IF (@rt = 0)
                                                   SELECT @cod_e = '0'
                                                ELSE 
                                                   BEGIN

                                                      IF @@TRANCOUNT > 0
                                                         ROLLBACK TRANSACTION 

                                                      SELECT @cod_e = substring(@cod_e, 1, 7)

                                                   END

                                             END

                                          IF @@TRANCOUNT > 0
                                             COMMIT TRANSACTION 

                                       END
                                    ELSE 
                                       SELECT @cod_e = substring(@cod_e, 1, 7)

                                 END
                              ELSE 
                                 SELECT @cod_e = substring(@cod_e, 1, 7)

                           END
                        ELSE 
                           SELECT @cod_e = substring(@cod_e, 1, 7)

                     END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_serv].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_serv]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_serv] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_serv]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @des_serv varchar(40),
   @tip_serv varchar(1),
   @dip_serv varchar(255),
   @dir_sali varchar(50),
   @dir_entr varchar(50),
   @dir_buzo varchar(50)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_serv
   *    *
   *    *      Objetivo        :       Ingresar Servidores
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       20/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_serv     codigo del servidor       
   *    *                              @des_serv     descripcion del servidor
   *    *                              @tip_serv     tipo de servidor I o E
   *    *                              @dip_serv     direccion IP del Servidor
   *    *                              @dir_sali     directorio de salida
   *    *                              @dir_entr     directorio de entrada
   *    *                              @dir_buzo     directorio buzon de mensajes
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* verificamos el valor para el codigo del servidor*/
   IF (nullif(ltrim(nullif(rtrim(@cod_serv), '')), '') IS NULL)
      SELECT @cod_e = 'SERV001'
   /* verificamos el valor de la descripcion del servidor*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_serv), '')), '') IS NULL)
         SELECT @cod_e = 'SERV002'
      /* verificamos el tipo del servidor*/
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@tip_serv), '')), '') IS NULL OR (@tip_serv <> 'E' AND @tip_serv <> 'I'))
            SELECT @cod_e = 'SERV003'
         /* verificamos el valor de la direccion IP*/
         ELSE 
            IF (nullif(ltrim(nullif(rtrim(@dip_serv), '')), '') IS NULL)
               SELECT @cod_e = 'SERV004'
            /* verificamos el valor del directorio de entrada ( solo para tipo E )*/
            ELSE 
               IF (@tip_serv = 'E' AND nullif(ltrim(nullif(rtrim(@dir_entr), '')), '') IS NULL)
                  SELECT @cod_e = 'SERV006'
               /* verificamos el valor del directorio de salida ( solo para tipo E )*/
               ELSE 
                  IF (@tip_serv = 'E' AND nullif(ltrim(nullif(rtrim(@dir_sali), '')), '') IS NULL)
                     SELECT @cod_e = 'SERV005'
                  /* verificamos el valor del directorio de buzon ( solo para tipo E )*/
                  ELSE 
                     IF (@tip_serv = 'E' AND nullif(ltrim(nullif(rtrim(@dir_buzo), '')), '') IS NULL)
                        SELECT @cod_e = 'SERV007'
                     /*- verificamos que no exista el codigo de servidor*/
                     ELSE 
                        IF EXISTS 
                           (
                              SELECT dbo.tbl_serv.cod_serv
                              FROM dbo.tbl_serv
                              WHERE dbo.tbl_serv.cod_serv = @cod_serv
                           )
                           SELECT @cod_e = 'SERV010'
                        ELSE 
                           BEGIN

                              BEGIN TRANSACTION 

                              INSERT dbo.tbl_serv(
                                 cod_serv, 
                                 des_serv, 
                                 tip_serv, 
                                 dip_serv, 
                                 dir_sali, 
                                 dir_entr, 
                                 dir_buzo, 
                                 fec_ingr, 
                                 usu_ingr)
                                 VALUES (
                                    @cod_serv, 
                                    @des_serv, 
                                    @tip_serv, 
                                    @dip_serv, 
                                    @dir_sali, 
                                    @dir_entr, 
                                    @dir_buzo, 
                                    getdate(), 
                                    @usu_ingr)

                              /*
                              *   SSMA warning messages:
                              *   S2SS0016: SQL Server might use a different error code.
                              */

                              IF @@ERROR != 0
                                 BEGIN

                                    IF @@TRANCOUNT > 0
                                       ROLLBACK TRANSACTION 

                                    SELECT @cod_e = 'SERV020'

                                 END
                              ELSE 
                                 SELECT @cod_e = '0'

                              IF @@TRANCOUNT > 0
                                 COMMIT TRANSACTION 

                           END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_ingr_tarc].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_tarc]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_tarc] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_tarc]
@error varchar(255)  OUTPUT,
   @ide_traz int  OUTPUT,
   @est_traz varchar(2),
   @cas_orig varchar(8),
   @cas_dest varchar(8) = NULL,
   @nom_arcc varchar(20) = NULL,
   @nom_arre varchar(20) = NULL,
   @tam_arch float(53) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_tarc
   *    *
   *    *      Objetivo        :       Ingresar una traza de archivo
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :
   *    *
   *    *      Entrada         :       @est_traz       Estado de traza
   *    *                              @cas_orig       Casilla de origen
   *    *                              @cas_dest       Casilla de destino
   *    *                              @Nom_arcc       Nombre de archivo
   *    *                              @Nom_arre       Nombre archivo respaldo
   *    *                              @tam_arch       Tamano de archivo
   *    *
   *    *      Salida          :       @error          Error generador en el SP
   *    *                              @ide_traz       Identificador de Traza
   *    *
   *    *      Comentario      :       No tiene
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int, 
      @corr_act int
   /* inicializamos variables*/
   SELECT @error = '0'
   SELECT @corr_act = 0
   /* programamos el sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_estt
         WHERE dbo.tbl_estt.est_traz = @est_traz
      )
      SELECT @error = 'ESTT001'
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         SELECT @corr_act = dbo.tbl_param.ide_traz
         FROM dbo.tbl_param

         IF (@corr_act >= 999999999)
            SELECT @corr_act = 0

         UPDATE dbo.tbl_param
            SET 
               ide_traz = @corr_act + 1

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'CORR001'

            END
         ELSE 
            BEGIN

               /* (i)*/
               SELECT @ide_traz = dbo.tbl_param.ide_traz
               FROM dbo.tbl_param

               EXECUTE @rt = dbo.sp_elim_tarcride @error  OUTPUT, @ide_traz, @ide_traz

               IF (@rt = -1)
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION trans

                     SELECT @error = substring(@error, 1, 7)

                  END
               ELSE 
                  BEGIN

                     /* (ii)*/
                     EXECUTE @rt = dbo.sp_elim_tpro @error  OUTPUT, @ide_traz

                     IF (@rt = -1)
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION trans

                           SELECT @error = substring(@error, 1, 7)

                        END
                     ELSE 
                        BEGIN

                           /* (iii)*/
                           INSERT dbo.tbl_tarc(
                              ide_traz, 
                              est_traz, 
                              cas_orig, 
                              cas_dest, 
                              nom_arcc, 
                              nom_arre, 
                              tam_arch, 
                              fec_rece, 
                              usu_ingr)
                              VALUES (
                                 @ide_traz, 
                                 @est_traz, 
                                 @cas_orig, 
                                 @cas_dest, 
                                 @nom_arcc, 
                                 @nom_arre, 
                                 @tam_arch, 
                                 getdate(), 
                                 suser_name())

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF (@@ERROR != 0)
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @error = 'TARC002'

                              END
                           ELSE 
                              BEGIN

                                 EXECUTE @rt = dbo.sp_ingr_htra @error = @error  OUTPUT, @ide_traz = @ide_traz, @est_traz = @est_traz, @cas_dest = @cas_dest

                                 IF (@rt = -1)
                                    BEGIN

                                       IF @@TRANCOUNT > 0
                                          ROLLBACK TRANSACTION 

                                       SELECT @error = substring(@error, 1, 7)

                                    END
                                 ELSE 
                                    SELECT @error = '0'

                              END

                        END
                        /* (iii)*/

                  END
                  /* (ii)*/

            END
            /* (i)*/

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
      /* if @error = 0*/
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_ingr_tpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_tpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_tpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_tpro]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2),
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_casi varchar(8),
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @tam_arch float(53),
   @fec_rece datetime2(3)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF EXISTS 
      (
         SELECT dbo.tbl_tpro.ide_traz
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.ide_traz = @ide_traz AND @ide_traz != -1
      )
      BEGIN

         INSERT dbo.tbl_tpro(
            ide_traz, 
            est_traz, 
            cod_prod, 
            cod_inst, 
            cod_casi, 
            cod_serv, 
            nom_arch, 
            tam_arch, 
            fec_rece, 
            usu_ingr)
            VALUES (
               @ide_traz, 
               '52', 
               @cod_prod, 
               @cod_inst, 
               @cod_casi, 
               @cod_serv, 
               @nom_arch, 
               @tam_arch, 
               @fec_rece, 
               suser_name())

         SELECT @error = 'TPRO004'

      END
   ELSE 
      IF @ide_traz = 0
         SELECT @error = 'TPRO012'
      ELSE 
         IF NOT EXISTS 
            (
               SELECT *
               FROM dbo.tbl_estt
               WHERE dbo.tbl_estt.est_traz = @est_traz
            )
            SELECT @error = 'TPRO002'
         
         /*
         *    Se valida en el ClienteSTA (JRSS)
         *   else if not exists ( select * from tbl_dest where 
         *   					cod_prod = @cod_prod and
         *   					cod_inst = @cod_inst )
         *   	select @error = "TPRO009"
         *
         */
         ELSE 
            IF @nom_arch = ''
               SELECT @error = 'TPRO010'
            ELSE 
               IF @tam_arch = 0
                  SELECT @error = 'TPRO011'
               ELSE 
                  BEGIN

                     BEGIN TRANSACTION 

                     INSERT dbo.tbl_tpro(
                        ide_traz, 
                        est_traz, 
                        cod_prod, 
                        cod_inst, 
                        cod_casi, 
                        cod_serv, 
                        nom_arch, 
                        tam_arch, 
                        fec_rece, 
                        usu_ingr)
                        VALUES (
                           @ide_traz, 
                           @est_traz, 
                           @cod_prod, 
                           @cod_inst, 
                           @cod_casi, 
                           @cod_serv, 
                           @nom_arch, 
                           @tam_arch, 
                           @fec_rece, 
                           suser_name())

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF @@ERROR != 0
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @error = 'TPRO005'

                        END
                     ELSE 
                        BEGIN

                           INSERT dbo.tbl_hpro(
                              ide_traz, 
                              est_traz, 
                              cod_prod, 
                              cod_inst, 
                              cod_casi, 
                              cod_serv, 
                              nom_arch, 
                              tam_arch, 
                              fec_rece, 
                              usu_ingr, 
                              fec_ingr)
                              VALUES (
                                 @ide_traz, 
                                 @est_traz, 
                                 @cod_prod, 
                                 @cod_inst, 
                                 @cod_casi, 
                                 @cod_serv, 
                                 @nom_arch, 
                                 @tam_arch, 
                                 @fec_rece, 
                                 suser_name(), 
                                 getdate())

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF @@ERROR != 0
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @error = 'HPRO003'

                              END

                        END

                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 

                  END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_ingr_user].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_ingr_user]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_ingr_user] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_ingr_user]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @cod_user varchar(8),
   @pas_user varchar(8),
   @nom_user varchar(20)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_ingr_user
   *    *
   *    *      Objetivo        :       Ingresa usuarios a la tabla tbl_user
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst	Codigo de institucion a la que pertenece el usuario       
   *    *                              @cod_user       Codigo del usuario
   *    *                              @pas_user       Password del usuario
   *    *                              @nom_user       Nombre del usuario 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   /* validamos que el codigo del usuario sea distinto de nulo*/
   IF (nullif(ltrim(nullif(rtrim(@cod_user), '')), '') IS NULL)
      SELECT @cod_e = 'USER001'
   /* validamos que la password del usuario sea distinta de nul*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@pas_user), '')), '') IS NULL)
         SELECT @cod_e = 'USER002'
      /* validamos que el nombre del usuario sea distinto de nul*/
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@nom_user), '')), '') IS NULL)
            SELECT @cod_e = 'USER003'
         /* validamos que el codigo de institucion exista en la tabla tbl_inst*/
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT dbo.tbl_inst.cod_inst
                  FROM dbo.tbl_inst
                  WHERE dbo.tbl_inst.cod_inst = @cod_inst
               )
               SELECT @cod_e = 'INST002'
            /* validamos que el par institucion-codigo usuario no exista en la tabla tbl_user*/
            ELSE 
               IF EXISTS 
                  (
                     SELECT dbo.tbl_user.cod_user
                     FROM dbo.tbl_user
                     WHERE dbo.tbl_user.cod_inst = @cod_inst AND dbo.tbl_user.cod_user = @cod_user
                  )
                  SELECT @cod_e = 'USER004'
               ELSE 
                  BEGIN

                     BEGIN TRANSACTION 

                     INSERT dbo.tbl_user(
                        cod_inst, 
                        cod_user, 
                        pas_user, 
                        nom_user, 
                        fec_ingr, 
                        usu_ingr)
                        VALUES (
                           @cod_inst, 
                           @cod_user, 
                           @pas_user, 
                           @nom_user, 
                           getdate(), 
                           @usu_ingr)

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF @@ERROR != 0
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @cod_e = 'USER005'

                        END
                     ELSE 
                        SELECT @cod_e = '0'

                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 

                  END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_casi].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_casi]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_casi] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_casi]
@error varchar(255)  OUTPUT,
   @cod_casi varchar(8),
   @des_casi varchar(30),
   @cod_inst varchar(4),
   @usu_cnxn varchar(8),
   @pas_cnxn varchar(8),
   @dir_entr varchar(50),
   @dir_sali varchar(50),
   @dir_buzo varchar(50),
   @flg_freg varchar(1),
   @flg_gavi varchar(1),
   @flg_gnot varchar(1)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_casi
   *    *
   *    *      Objetivo        :       Modificar una Casilla Existente
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       19/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_casi     codigo de Casilla       
   *    *                              @des_casi     descripcion de la Casilla
   *    *                              @cod_inst     codigo de Institucion
   *    *                              @usu_cnxn     usuario FTP
   *    *                              @pas_cnxn     password FTP
   *    *                              @dir_entr     directorio de entrada
   *    *                              @dir_sali     directorio de salida
   *    *                              @dir_buzo     directorio buzon de mensajes
   *    *                              @flg_freg     fin de registro
   *    *                              @flg_gavi     genera Aviso
   *    *                              @flg_gnot     genera Notificacion
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* verificamos el valor para el codigo casilla*/
   IF (nullif(ltrim(nullif(rtrim(@cod_casi), '')), '') IS NULL)
      SELECT @cod_e = 'CASI010'
   /* verificamos el valor de la descripcion de la casilla*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_casi), '')), '') IS NULL)
         SELECT @cod_e = 'CASI011'
      /* verificamos el codigo de institucion*/
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@cod_inst), '')), '') IS NULL)
            SELECT @cod_e = 'CASI012'
         /* verificamos el valor del login*/
         ELSE 
            IF (nullif(ltrim(nullif(rtrim(@usu_cnxn), '')), '') IS NULL)
               SELECT @cod_e = 'CASI013'
            /* verificamos el valor de la password*/
            ELSE 
               IF (nullif(ltrim(nullif(rtrim(@pas_cnxn), '')), '') IS NULL)
                  SELECT @cod_e = 'CASI014'
               /* verificamos el valor del directorio de entrada*/
               ELSE 
                  IF (nullif(ltrim(nullif(rtrim(@dir_entr), '')), '') IS NULL)
                     SELECT @cod_e = 'CASI015'
                  /* verificamos el valor del directorio de salida*/
                  ELSE 
                     IF (nullif(ltrim(nullif(rtrim(@dir_sali), '')), '') IS NULL)
                        SELECT @cod_e = 'CASI016'
                     /* verificamos el valor del directorio de buzon*/
                     ELSE 
                        IF (nullif(ltrim(nullif(rtrim(@dir_buzo), '')), '') IS NULL)
                           SELECT @cod_e = 'CASI017'
                        /* verificamos el campo fin_regi*/
                        ELSE 
                           IF (nullif(ltrim(nullif(rtrim(@flg_freg), '')), '') IS NULL OR (@flg_freg <> 'S' AND @flg_freg <> 'N'))
                              SELECT @cod_e = 'CASI018'
                           /* verificamos la generacion de aviso*/
                           ELSE 
                              IF (nullif(ltrim(nullif(rtrim(@flg_gavi), '')), '') IS NULL OR (@flg_gavi <> 'S' AND @flg_gavi <> 'N'))
                                 SELECT @cod_e = 'CASI019'
                              /* verificamos la generacion de notificacion*/
                              ELSE 
                                 IF (nullif(ltrim(nullif(rtrim(@flg_gnot), '')), '') IS NULL OR (@flg_gnot <> 'S' AND @flg_gnot <> 'N'))
                                    SELECT @cod_e = 'CASI020'
                                 /*- verificamos que exista el codigo de Casilla en la tabla tbl_casi*/
                                 ELSE 
                                    IF NOT EXISTS 
                                       (
                                          SELECT dbo.tbl_casi.cod_casi
                                          FROM dbo.tbl_casi
                                          WHERE dbo.tbl_casi.cod_casi = @cod_casi
                                       )
                                       SELECT @cod_e = 'CASI001'
                                    /* verificamos que la Institucion ingresada exista en Tbl_Inst*/
                                    ELSE 
                                       IF NOT EXISTS 
                                          (
                                             SELECT dbo.tbl_inst.cod_inst
                                             FROM dbo.tbl_inst
                                             WHERE dbo.tbl_inst.cod_inst = @cod_inst
                                          )
                                          SELECT @cod_e = 'CASI006'
                                       /* Verificamos que el Directorio de Entrada especificado sea unico*/
                                       ELSE 
                                          IF EXISTS 
                                             (
                                                SELECT dbo.tbl_casi.dir_entr
                                                FROM dbo.tbl_casi
                                                WHERE (lower(@dir_entr) = lower(dbo.tbl_casi.dir_entr) OR lower(@dir_entr) = lower(dbo.tbl_casi.dir_sali) OR lower(@dir_entr) = lower(dbo.tbl_casi.dir_buzo)) AND dbo.tbl_casi.cod_casi <> @cod_casi
                                             )
                                             SELECT @cod_e = 'CASI007'
                                          /* Verificamos que el Dir. Salida sea unico*/
                                          ELSE 
                                             IF EXISTS 
                                                (
                                                   SELECT dbo.tbl_casi.dir_sali
                                                   FROM dbo.tbl_casi
                                                   WHERE (lower(@dir_sali) = lower(dbo.tbl_casi.dir_sali) OR lower(@dir_sali) = lower(dbo.tbl_casi.dir_entr) OR lower(@dir_sali) = lower(dbo.tbl_casi.dir_buzo)) AND dbo.tbl_casi.cod_casi <> @cod_casi
                                                )
                                                SELECT @cod_e = 'CASI008'
                                             /* Verificamos que el Dir. Buzon sea unico*/
                                             ELSE 
                                                IF EXISTS 
                                                   (
                                                      SELECT dbo.tbl_casi.dir_buzo
                                                      FROM dbo.tbl_casi
                                                      WHERE (lower(@dir_buzo) = lower(dbo.tbl_casi.dir_buzo) OR lower(@dir_buzo) = lower(dbo.tbl_casi.dir_entr) OR lower(@dir_buzo) = lower(dbo.tbl_casi.dir_sali)) AND dbo.tbl_casi.cod_casi <> @cod_casi
                                                   )
                                                   SELECT @cod_e = 'CASI009'
                                                ELSE 
                                                   BEGIN

                                                      BEGIN TRANSACTION 

                                                      UPDATE dbo.tbl_casi
                                                         SET 
                                                            cod_casi = @cod_casi, 
                                                            des_casi = @des_casi, 
                                                            cod_inst = @cod_inst, 
                                                            usu_cnxn = @usu_cnxn, 
                                                            pas_cnxn = @pas_cnxn, 
                                                            dir_entr = @dir_entr, 
                                                            dir_sali = @dir_sali, 
                                                            dir_buzo = @dir_buzo, 
                                                            flg_freg = @flg_freg, 
                                                            flg_gavi = @flg_gavi, 
                                                            flg_gnot = @flg_gnot
                                                      WHERE dbo.tbl_casi.cod_casi = @cod_casi

                                                      /*
                                                      *   SSMA warning messages:
                                                      *   S2SS0016: SQL Server might use a different error code.
                                                      */

                                                      IF @@ERROR != 0
                                                         BEGIN

                                                            IF @@TRANCOUNT > 0
                                                               ROLLBACK TRANSACTION 

                                                            SELECT @cod_e = 'CASI022'

                                                         END
                                                      ELSE 
                                                         SELECT @cod_e = '0'

                                                      IF @@TRANCOUNT > 0
                                                         COMMIT TRANSACTION 

                                                   END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_cdex].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_cdex]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_cdex] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_cdex]
@error varchar(255)  OUTPUT,
   @cod_cdex varchar(8),
   @cod_serv varchar(8),
   @cod_inst varchar(4),
   @des_cdex varchar(40)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   SELECT @error = '0'
   /* validamos que la descripcion de la casilla sea distinta de null*/
   IF (nullif(ltrim(nullif(rtrim(@des_cdex), '')), '') IS NULL)
      SELECT @cod_e = 'CDEX002'
   /* validamos que el codigo de servidor exista en tbl_serv*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_serv.cod_serv
            FROM dbo.tbl_serv
            WHERE dbo.tbl_serv.cod_serv = @cod_serv
         )
         SELECT @cod_e = 'SERV011'
      /* validamos que el servidor sea un servidor externo en tbl_serv*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_serv.cod_serv
               FROM dbo.tbl_serv
               WHERE dbo.tbl_serv.cod_serv = @cod_serv AND dbo.tbl_serv.tip_serv = 'E'
            )
            SELECT @cod_e = 'CDEX013'
         /* validamos que el codigo de institucion exista en la tabla tbl_inst*/
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT dbo.tbl_inst.cod_inst
                  FROM dbo.tbl_inst
                  WHERE dbo.tbl_inst.cod_inst = @cod_inst
               )
               SELECT @cod_e = 'INST002'
            /* validamos que el par casilla ext.+servidor exista en la tabla*/
            ELSE 
               IF NOT EXISTS 
                  (
                     SELECT dbo.tbl_cdex.cod_cdex
                     FROM dbo.tbl_cdex
                     WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex AND dbo.tbl_cdex.cod_serv = @cod_serv
                  )
                  SELECT @cod_e = 'CDEX003'
               ELSE 
                  BEGIN

                     BEGIN TRANSACTION 

                     UPDATE dbo.tbl_cdex
                        SET 
                           cod_cdex = @cod_cdex, 
                           cod_serv = @cod_serv, 
                           cod_inst = @cod_inst, 
                           des_cdex = @des_cdex
                     WHERE dbo.tbl_cdex.cod_cdex = @cod_cdex AND dbo.tbl_cdex.cod_serv = @cod_serv

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF @@ERROR != 0
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @cod_e = 'CDEX011'

                        END
                     ELSE 
                        SELECT @cod_e = '0'

                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 

                  END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_cerr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_cerr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_cerr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_cerr]
@error varchar(255)  OUTPUT,
   @cod_erro varchar(7),
   @des_erro varchar(50)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_cerr
   *    *
   *    *      Objetivo        :       modificar descripcion de un codigo de error    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       17/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_erro	codigo del error       
   *    *                              @des_erro       descripcion del error	
   *    *
   *    *      Salida          :       @error          error generado en el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *   - variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que el codigo de error tenga valor ingresado*/
   IF (nullif(ltrim(nullif(rtrim(@cod_erro), '')), '') IS NULL)
      SELECT @cod_e = 'CERR010'
   /* validamos que la descripcion no sea Nula*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_erro), '')), '') IS NULL)
         SELECT @cod_e = 'CERR011'
      /* validamos que el codigo de error a modificar exista*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_cerr.cod_erro
               FROM dbo.tbl_cerr
               WHERE dbo.tbl_cerr.cod_erro = @cod_erro
            )
            SELECT @cod_e = 'CERR002'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               UPDATE dbo.tbl_cerr
                  SET 
                     des_erro = @des_erro
               WHERE dbo.tbl_cerr.cod_erro = @cod_erro

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'CERR006'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_corr].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_corr]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_corr] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_corr]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @corr_act int  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_corr
   *    *
   *    *      Objetivo        :       Modifica el correlativo actual para una institucion    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst       Codigo de la institucion        
   *    *
   *    *      Salida          :       @error          Codigo y error ocurrido en el SP
   *    *                              @cor_act        Correlativo nuevo asignado a la institucion 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_ingr varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_ingr = suser_name()
   SELECT @corr_act = 0
   /* validamos que la institucion a la que se le modifica el correlativo exista en tbl_inst*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_inst.cod_inst
         FROM dbo.tbl_inst
         WHERE dbo.tbl_inst.cod_inst = @cod_inst
      )
      SELECT @cod_e = 'INST002'
   /* validamos que la institucion exista en la tabla de correlativos*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_corr.cor_actu
            FROM dbo.tbl_corr
            WHERE dbo.tbl_corr.cod_inst = @cod_inst
         )
         SELECT @cod_e = 'CORR002'
      ELSE 
         BEGIN

            SELECT @corr_act = dbo.tbl_corr.cor_actu
            FROM dbo.tbl_corr
            WHERE dbo.tbl_corr.cod_inst = @cod_inst

            IF (@corr_act >= 99999)
               SELECT @corr_act = 0

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_corr
               SET 
                  cor_actu = @corr_act + 1
            WHERE dbo.tbl_corr.cod_inst = @cod_inst

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @cod_e = 'CORR001'

               END
            ELSE 
               BEGIN

                  SELECT @cod_e = '0'

                  SELECT @corr_act = @corr_act + 1

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_corr_institucion].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_corr_institucion]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_corr_institucion] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_corr_institucion]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @cor_actu int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_corr_institucion
   *    *
   *    *      Objetivo        :       Actualiza el correlativo actual para una institucion    
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       17/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst       Codigo de la institucion        
   *    *				@cor_actu	Correlativo actual
   *    *
   *    *      Salida          :       @error          Codigo y error ocurrido en el SP
   *    *                              @cor_act        Correlativo nuevo asignado a la institucion 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @usu_modi varchar(15), 
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* nombre de usuario en el servidor*/
   SELECT @usu_modi = suser_name()
   SELECT @cod_e = '0'
   /* validamos que la institucion a la que se le modifica el correlativo exista en tbl_inst*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_inst.cod_inst
         FROM dbo.tbl_inst
         WHERE dbo.tbl_inst.cod_inst = @cod_inst
      )
      SELECT @cod_e = 'INST002'
   ELSE 
      BEGIN

         BEGIN TRANSACTION 

         UPDATE dbo.tbl_corr
            SET 
               cor_actu = @cor_actu, 
               usu_ingr = @usu_modi
         WHERE dbo.tbl_corr.cod_inst = @cod_inst

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @cod_e = 'CORR001'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_dest].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_dest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_dest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_dest]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_serv varchar(8),
   @cas_dest varchar(8)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255), 
      @tip_serv varchar(1)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_dest
         WHERE dbo.tbl_dest.cod_prod = @cod_prod AND dbo.tbl_dest.cas_dest = @cas_dest
      )
      SELECT @error = 'DEST012'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_prod
            WHERE dbo.tbl_prod.cod_prod = @cod_prod
         )
         SELECT @error = 'DEST003'
      ELSE 
         IF NOT EXISTS 
            (
               SELECT *
               FROM dbo.tbl_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst
            )
            SELECT @error = 'DEST004'
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT *
                  FROM dbo.tbl_serv
                  WHERE dbo.tbl_serv.cod_serv = @cod_serv
               )
               SELECT @error = 'DEST005'
            ELSE 
               BEGIN

                  SELECT @tip_serv = dbo.tbl_serv.tip_serv
                  FROM dbo.tbl_serv
                  WHERE dbo.tbl_serv.cod_serv = @cod_serv

                  IF @tip_serv = 'I'
                     BEGIN
                        IF NOT EXISTS 
                           (
                              SELECT *
                              FROM dbo.tbl_casi
                              WHERE dbo.tbl_casi.cod_casi = @cas_dest
                           )
                           SELECT @error = 'DEST006'
                        ELSE 
                           IF NOT EXISTS 
                              (
                                 SELECT *
                                 FROM dbo.tbl_casi
                                 WHERE dbo.tbl_casi.cod_casi = @cas_dest AND dbo.tbl_casi.cod_inst = @cod_inst
                              )
                              SELECT @error = 'DEST007'
                     END
                  ELSE 
                     BEGIN
                        IF NOT EXISTS 
                           (
                              SELECT *
                              FROM dbo.tbl_cdex
                              WHERE dbo.tbl_cdex.cod_cdex = @cas_dest AND dbo.tbl_cdex.cod_serv = @cod_serv
                           )
                           SELECT @error = 'DEST006'
                        ELSE 
                           IF NOT EXISTS 
                              (
                                 SELECT *
                                 FROM dbo.tbl_cdex
                                 WHERE 
                                    dbo.tbl_cdex.cod_cdex = @cas_dest AND 
                                    dbo.tbl_cdex.cod_serv = @cod_serv AND 
                                    dbo.tbl_cdex.cod_inst = @cod_inst
                              )
                              SELECT @error = 'DEST007'
                     END

               END
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         UPDATE dbo.tbl_dest
            SET 
               cod_serv = @cod_serv, 
               cas_dest = @cas_dest, 
               fec_ingr = getdate(), 
               usu_ingr = suser_name()
         WHERE dbo.tbl_dest.cod_prod = @cod_prod AND dbo.tbl_dest.cod_inst = @cod_inst

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF @@ERROR != 0
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'DEST010'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_estado_rescate].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_estado_rescate]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_estado_rescate] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_estado_rescate]
@error varchar(255)  OUTPUT,
   @est_resc varchar(2) = NULL,
   @est_fres varchar(2) = NULL,
   @nom_arch varchar(20) = NULL,
   @fec_arch datetime2(3) = NULL,
   @tam_arch float(53) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_estado_rescate
   *    *
   *    *      Objetivo        :       Modifica el estado de rescate de un archivo 
   *    *				para el cual no se conoce el correlativo de 
   *    *				rescate
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       13/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @est_resc       Estado de rescate
   *    *                              @est_fres       Subestado de rescate
   *    *                              @nom_arch       Estado del rescate 
   *    *                              @fec_arch       Fecha del Archivo 
   *    *                              @tam_arch       Tamano de Archivo 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      	No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @rt int, 
      @cor_resc int, 
      @cas_orig varchar(8), 
      @cas_dest varchar(8), 
      @nom_msg varchar(3), 
      @usu_ingr varchar(15)
   /* validamos que el estado de rescate se encuentre dentro de tbl_estt*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_estt.est_traz
         FROM dbo.tbl_estt
         WHERE dbo.tbl_estt.est_traz = @est_resc
      )
      SELECT @cod_e = 'ESTT001'
   ELSE 
      IF (@nom_arch = '' OR @nom_arch = ' ' OR @nom_arch IS NULL)
         SELECT @cod_e = 'GENE001'
      ELSE 
         IF (@fec_arch IS NULL)
            SELECT @cod_e = 'GENE002'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               UPDATE dbo.tbl_resc
                  SET 
                     est_resc = @est_resc, 
                     est_fres = @est_fres, 
                     tam_arch = @tam_arch
               WHERE dbo.tbl_resc.nom_arch = @nom_arch AND dbo.tbl_resc.fec_arch = @fec_arch

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'RESC008'

                  END
               ELSE 
                  BEGIN

                     SELECT @cor_resc = dbo.tbl_resc.cor_resc, @nom_msg = dbo.tbl_resc.nom_msg, @cas_orig = dbo.tbl_resc.cas_orig, @cas_dest = dbo.tbl_resc.cas_dest, @usu_ingr = dbo.tbl_resc.usu_ingr
                     FROM dbo.tbl_resc
                     WHERE dbo.tbl_resc.nom_arch = @nom_arch AND dbo.tbl_resc.fec_arch = @fec_arch

                     EXECUTE @rt = dbo.sp_ingr_hres 
                        @cod_e  OUTPUT, 
                        @cor_resc, 
                        @nom_msg, 
                        @nom_arch, 
                        @tam_arch, 
                        @est_resc, 
                        @est_fres, 
                        @est_fres, 
                        @fec_arch, 
                        @cas_orig, 
                        @cas_dest, 
                        @usu_ingr

                     IF (@rt = 0)
                        SELECT @cod_e = '0'
                     ELSE 
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @cod_e = substring(@cod_e, 1, 7)

                        END

                  END

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_estt].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_estt]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_estt] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_estt]
@error varchar(255)  OUTPUT,
   @est_traz varchar(2),
   @des_traz varchar(30)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_estt
   *    *
   *    *      Objetivo        :       modificar descripcion de una traza    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @est_traz       codigo de la Traza        
   *    *                              @des_traz       nombre de la Traza
   *    *
   *    *      Salida          :       @error          error generado en el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *   - variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamoss que el codigo de la traza no sea nulo*/
   IF (nullif(ltrim(nullif(rtrim(@est_traz), '')), '') IS NULL)
      SELECT @cod_e = 'ESTT008'
   /* validamos que la descrpcion de la traza no sea nulo*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@des_traz), '')), '') IS NULL)
         SELECT @cod_e = 'ESTT009'
      /* validamos que el estado de traza exista*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_estt.est_traz
               FROM dbo.tbl_estt
               WHERE dbo.tbl_estt.est_traz = @est_traz
            )
            SELECT @cod_e = 'ESTT001'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               UPDATE dbo.tbl_estt
                  SET 
                     des_traz = @des_traz
               WHERE dbo.tbl_estt.est_traz = @est_traz

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'ESTT006'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_esttraza].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_esttraza]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_esttraza] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_esttraza]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_esttraza 
   *    *
   *    *      Objetivo        :       Actualiza el estado de la traza de un archivo
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       08/09/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @ide_traz      Identificador de traza
   *    *                              @est_traz      Estado de traza 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int, 
      @cas_dest varchar(8)
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tarc
         WHERE dbo.tbl_tarc.ide_traz = @ide_traz
      )
      SELECT @error = 'TARC001'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'ESTT001'
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         UPDATE dbo.tbl_tarc
            SET 
               est_traz = @est_traz
         WHERE dbo.tbl_tarc.ide_traz = @ide_traz

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'TARC004'

            END
         ELSE 
            BEGIN

               SELECT @cas_dest = dbo.tbl_tarc.cas_dest
               FROM dbo.tbl_tarc
               WHERE dbo.tbl_tarc.ide_traz = @ide_traz

               EXECUTE @rt = dbo.sp_ingr_htra @error = @error  OUTPUT, @ide_traz = @ide_traz, @est_traz = @est_traz, @cas_dest = @cas_dest

               IF (@rt = -1)
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @error = substring(@error, 1, 7)

                  END
               ELSE 
                  SELECT @error = '0'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_modi_feri].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_feri]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_feri] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_feri]
@error varchar(255)  OUTPUT,
   @fec_feri datetime2(3),
   @des_feri varchar(50)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_feri
   *    *
   *    *      Objetivo        :       Modificar descripcion de un feriado
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       21/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @fec_feri       Fecha Feriada
   *    *                              @des_feri       Descripcion del feriado
   *    *
   *    *      Salida          :       @error          error generado en el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *   - variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que la descripcion del feriado sea distinto de nulo*/
   IF (nullif(ltrim(nullif(rtrim(@des_feri), '')), '') IS NULL)
      SELECT @cod_e = 'FERI003'
   /* validamos que la fecha exista*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_feri.fec_feri
            FROM dbo.tbl_feri
            WHERE CONVERT(varchar(8), dbo.tbl_feri.fec_feri, 112) = CONVERT(varchar(8), @fec_feri, 112)
         )
         SELECT @cod_e = 'FERI001'
      ELSE 
         BEGIN

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_feri
               SET 
                  des_feri = @des_feri
            WHERE CONVERT(varchar(8), dbo.tbl_feri.fec_feri, 112) = CONVERT(varchar(8), @fec_feri, 112)

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @cod_e = 'FERI005'

               END
            ELSE 
               SELECT @cod_e = '0'

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_hpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_hpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_hpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_hpro]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @est_traz varchar(2),
   @ide_traz int
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_hpro
         WHERE dbo.tbl_hpro.cod_serv = @cod_serv AND dbo.tbl_hpro.nom_arch = @nom_arch
      )
      SELECT @error = 'HPRO007'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'TPRO008'
      ELSE 
         BEGIN

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_hpro
               SET 
                  ide_traz = @ide_traz
            WHERE dbo.tbl_hpro.cod_serv = @cod_serv AND dbo.tbl_hpro.nom_arch = @nom_arch

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @error = 'HPRO009'

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_inst].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_inst]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_inst] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_inst]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @nom_inst varchar(40)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_inst
   *    *
   *    *      Objetivo        :       modificar descripcion de una institucion    
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       18/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst	codigo de la Institucion        
   *    *                              @nom_inst       nombre de Institucion
   *    *
   *    *      Salida          :       @error          error generado en el SP 
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *   - variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que el codigo de la institucion se distinto de nulo*/
   IF (nullif(ltrim(nullif(rtrim(@cod_inst), '')), '') IS NULL)
      SELECT @cod_e = 'INST009'
   /* validamos que la descripcion de la traza no sea nulo*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@nom_inst), '')), '') IS NULL)
         SELECT @cod_e = 'INST010'
      /* validamos que la institucion exista*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_inst.cod_inst
               FROM dbo.tbl_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst
            )
            SELECT @cod_e = 'INST002'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               UPDATE dbo.tbl_inst
                  SET 
                     nom_inst = @nom_inst
               WHERE dbo.tbl_inst.cod_inst = @cod_inst

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'INST007'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_limp].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_limp]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_limp] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_limp]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @fec_botr datetime2(3)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_limp
         WHERE dbo.tbl_limp.ide_traz = @ide_traz
      )
      SELECT @error = 'LIMP002'
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         UPDATE dbo.tbl_limp
            SET 
               fec_botr = @fec_botr
         WHERE dbo.tbl_limp.ide_traz = @ide_traz

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'LIMP001'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_modi_msg].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_msg]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_msg] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_msg]
@error varchar(255)  OUTPUT,
   @cod_msg varchar(3) = NULL,
   @nom_msg varchar(3) = NULL,
   @des_msg varchar(20) = NULL,
   @lrg_msg int = NULL,
   @fto1_msg varchar(255) = NULL,
   @fto2_msg varchar(255) = NULL,
   @fto3_msg varchar(255) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_msg 
   *    *
   *    *      Objetivo        :       Actualiza la estructura de un mensaje 
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       22/03/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_msg      Codigo del mensaje 
   *    *        			@nom_msg      Nombre del mensaje 
   *    *        			@des_msg      Descripcion del mensaje 
   *    *        			@lrg_msg      Largo del texto estructura 
   *    *        			@fto1_msg     Primer bloque de texto estructura 
   *    *        			@fto2_msg     Segundo bloque de texto estructura
   *    *        			@fto3_msg     Tercer bloque de texto estructura
   *    * 
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- validamos que exista la estructura del mensaje*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_estr
         WHERE dbo.tbl_estr.cod_msg = @cod_msg
      )
      SELECT @error = 'ESTR004'
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@nom_msg), '')), '') IS NULL)
         SELECT @error = 'ESTR005'
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@des_msg), '')), '') IS NULL)
            SELECT @error = 'ESTR006'
         ELSE 
            IF (@lrg_msg <= 0)
               SELECT @error = 'ESTR008'
            ELSE 
               IF (nullif(ltrim(nullif(rtrim(@fto1_msg), '')), '') IS NULL)
                  SELECT @error = 'ESTR007'
               ELSE 
                  IF @error = '0'
                     BEGIN

                        BEGIN TRANSACTION 

                        UPDATE dbo.tbl_estr
                           SET 
                              nom_msg = @nom_msg, 
                              des_msg = @des_msg, 
                              lrg_msg = @lrg_msg, 
                              bq1_msg = @fto1_msg, 
                              bq2_msg = @fto2_msg, 
                              bq3_msg = @fto3_msg, 
                              usu_ingr = suser_name(), 
                              fec_ingr = getdate()
                        WHERE dbo.tbl_estr.cod_msg = @cod_msg

                        /*
                        *   SSMA warning messages:
                        *   S2SS0016: SQL Server might use a different error code.
                        */

                        IF (@@ERROR != 0)
                           BEGIN

                              IF @@TRANCOUNT > 0
                                 ROLLBACK TRANSACTION 

                              SELECT @error = 'ESTR002'

                           END

                        IF @@TRANCOUNT > 0
                           COMMIT TRANSACTION 

                     END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_modi_prod].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_prod]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_prod] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_prod]
@error varchar(255)  OUTPUT,
   @cod_prod varchar(6),
   @des_prod varchar(40),
   @dir_entr varchar(50),
   @dir_sali varchar(50)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_prod
         WHERE dbo.tbl_prod.cod_prod = @cod_prod
      )
      SELECT @error = 'PROD002'
   ELSE 
      IF EXISTS 
         (
            SELECT *
            FROM dbo.tbl_prod
            WHERE dbo.tbl_prod.dir_entr = @dir_entr AND dbo.tbl_prod.cod_prod != @cod_prod
         )
         SELECT @error = 'PROD003'
      ELSE 
         IF EXISTS 
            (
               SELECT *
               FROM dbo.tbl_prod
               WHERE dbo.tbl_prod.dir_sali = @dir_sali AND dbo.tbl_prod.cod_prod != @cod_prod
            )
            SELECT @error = 'PROD004'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               UPDATE dbo.tbl_prod
                  SET 
                     des_prod = @des_prod, 
                     dir_entr = @dir_entr, 
                     dir_sali = @dir_sali, 
                     fec_ingr = getdate(), 
                     usu_ingr = suser_name()
               WHERE dbo.tbl_prod.cod_prod = @cod_prod

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @error = 'PROD011'

                  END

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_resc].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_resc]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_resc] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_resc]
@error varchar(255)  OUTPUT,
   @cor_resc int,
   @nom_arch varchar(20),
   @est_resc varchar(2),
   @est_fres varchar(2),
   @nom_msg varchar(3),
   @tam_arch float(53),
   @fec_arch datetime2(3),
   @cas_orig varchar(8) = NULL,
   @cas_dest varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_resc
   *    *
   *    *      Objetivo        :       Modifica el estado de rescate de un archivo en tbl_resc
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       05/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cor_resc       Correlativo de rescate al archivo a modificar
   *    *                              @nom_arch       Nombre del archivo
   *    *                              @est_resc       Estado del rescate 
   *    *                              @est_fres       Subestado del rescate
   *    *                              @nom_msg        Nombre del mensaje
   *    *                              @tam_arch       Tamaño del archivo
   *    *                              @fec_arch       Fecha del archivo
   *    *                              @cas_orig       Casilla de Origen
   *    *                              @cas_dest       Casilla de Destino 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255), 
      @rt int
   /* validamos que el estado de rescate se encuentre dentro de tbl_estt*/
   IF NOT EXISTS 
      (
         SELECT dbo.tbl_estt.est_traz
         FROM dbo.tbl_estt
         WHERE dbo.tbl_estt.est_traz = @est_resc
      )
      SELECT @cod_e = 'ESTT001'
   /* validamos que exista el par correlativo-archivo en la tabla tbl_resc*/
   ELSE 
      IF NOT EXISTS 
         (
            SELECT dbo.tbl_resc.cor_resc
            FROM dbo.tbl_resc
            WHERE dbo.tbl_resc.cor_resc = @cor_resc AND dbo.tbl_resc.cas_dest = @cas_dest
         )
         SELECT @cod_e = 'RESC006'
      /* validamos que exista el tipo de archivo  en la tabla tbl_estr*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_estr.nom_msg
               FROM dbo.tbl_estr
               WHERE dbo.tbl_estr.nom_msg = @nom_msg
            )
            SELECT @cod_e = 'RESC009'
         /* validamos que la casilla de destino este en la tabla tbl_casi*/
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT dbo.tbl_casi.cod_casi
                  FROM dbo.tbl_casi
                  WHERE dbo.tbl_casi.cod_casi = @cas_dest
               )
               SELECT @cod_e = 'RESC004'
            /* validamos que la casilla de origen este en la tabla tbl_casi*/
            ELSE 
               IF NOT (@cas_orig IS NULL) AND NOT EXISTS 
                  (
                     SELECT dbo.tbl_casi.cod_casi
                     FROM dbo.tbl_casi
                     WHERE dbo.tbl_casi.cod_casi = @cas_orig
                  )
                  SELECT @cod_e = 'RESC003'
               ELSE 
                  BEGIN

                     BEGIN TRANSACTION 

                     UPDATE dbo.tbl_resc
                        SET 
                           est_resc = @est_resc, 
                           est_fres = @est_fres, 
                           nom_msg = @nom_msg, 
                           tam_arch = @tam_arch, 
                           fec_arch = @fec_arch, 
                           cas_orig = @cas_orig
                     WHERE dbo.tbl_resc.cor_resc = @cor_resc AND dbo.tbl_resc.cas_dest = @cas_dest

                     /*
                     *   SSMA warning messages:
                     *   S2SS0016: SQL Server might use a different error code.
                     */

                     IF @@ERROR != 0
                        BEGIN

                           IF @@TRANCOUNT > 0
                              ROLLBACK TRANSACTION 

                           SELECT @cod_e = 'RESC008'

                        END
                     ELSE 
                        BEGIN

                           EXECUTE @rt = dbo.sp_ingr_hres 
                              @cod_e  OUTPUT, 
                              @cor_resc, 
                              @nom_msg, 
                              @nom_arch, 
                              @tam_arch, 
                              @est_resc, 
                              @est_fres, 
                              @fec_arch, 
                              @cas_orig, 
                              @cas_dest

                           IF (@rt = 0)
                              SELECT @cod_e = '0'
                           ELSE 
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @cod_e = substring(@cod_e, 1, 7)

                              END

                        END

                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 

                  END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_serv].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_serv]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_serv] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_serv]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @des_serv varchar(40),
   @tip_serv varchar(1),
   @dip_serv varchar(255),
   @dir_sali varchar(50),
   @dir_entr varchar(50),
   @dir_buzo varchar(50)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_serv
   *    *
   *    *      Objetivo        :       Modificar Servidores
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       20/08/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_serv     codigo del servidor       
   *    *                              @des_serv     descripcion del servidor
   *    *                              @tip_serv     tipo de servidor I o E
   *    *                              @dip_serv     direccion IP del Servidor
   *    *                              @dir_sali     directorio de salida
   *    *                              @dir_entr     directorio de entrada
   *    *                              @dir_buzo     directorio buzon de mensajes
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* verificamos el valor de la descripcion del servidor*/
   IF (nullif(ltrim(nullif(rtrim(@des_serv), '')), '') IS NULL)
      SELECT @cod_e = 'SERV002'
   /* verificamos el tipo del servidor*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@tip_serv), '')), '') IS NULL OR (@tip_serv <> 'E' AND @tip_serv <> 'I'))
         SELECT @cod_e = 'SERV003'
      /* verificamos el valor de la direccion IP*/
      ELSE 
         IF (nullif(ltrim(nullif(rtrim(@dip_serv), '')), '') IS NULL)
            SELECT @cod_e = 'SERV004'
         /* verificamos el valor del directorio de entrada ( solo para tipo E )*/
         ELSE 
            IF (@tip_serv = 'E' AND nullif(ltrim(nullif(rtrim(@dir_entr), '')), '') IS NULL)
               SELECT @cod_e = 'SERV006'
            /* verificamos el valor del directorio de salida ( solo para tipo E )*/
            ELSE 
               IF (@tip_serv = 'E' AND nullif(ltrim(nullif(rtrim(@dir_sali), '')), '') IS NULL)
                  SELECT @cod_e = 'SERV005'
               /* verificamos el valor del directorio de buzon ( solo para tipo E )*/
               ELSE 
                  IF (@tip_serv = 'E' AND nullif(ltrim(nullif(rtrim(@dir_buzo), '')), '') IS NULL)
                     SELECT @cod_e = 'SERV007'
                  /*- verificamos que exista el codigo de servidor*/
                  ELSE 
                     IF NOT EXISTS 
                        (
                           SELECT dbo.tbl_serv.cod_serv
                           FROM dbo.tbl_serv
                           WHERE dbo.tbl_serv.cod_serv = @cod_serv
                        )
                        SELECT @cod_e = 'SERV011'
                     ELSE 
                        BEGIN

                           BEGIN TRANSACTION 

                           UPDATE dbo.tbl_serv
                              SET 
                                 des_serv = @des_serv, 
                                 tip_serv = @tip_serv, 
                                 dip_serv = @dip_serv, 
                                 dir_sali = @dir_sali, 
                                 dir_entr = @dir_entr, 
                                 dir_buzo = @dir_buzo
                           WHERE dbo.tbl_serv.cod_serv = @cod_serv

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF @@ERROR != 0
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @cod_e = 'SERV021'

                              END
                           ELSE 
                              SELECT @cod_e = '0'

                           IF @@TRANCOUNT > 0
                              COMMIT TRANSACTION 

                        END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[sp_modi_tarc].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_tarc]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_tarc] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_tarc]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2),
   @cas_dest varchar(8) = NULL,
   @tam_arch float(53) = NULL
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_tarc 
   *    *
   *    *      Objetivo        :       Actualiza el estado de la traza de un archivo
   *    *
   *    *      Autor           :       Claudio Velasquez S.
   *    *
   *    *      Creacion        :       08/09/1999
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @ide_traz      Identificador de traza
   *    *        			@est_traz      Estado de traza 
   *    *        			@cas_dest      Casilla destino 
   *    *        			@tam_arch      Tamano de archivo 
   *    *
   *    *      Salida          :       @error		Error generador en el SP       
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_erro varchar(7), 
      @gls_erro varchar(255), 
      @vreturn int, 
      @rt int
   /* inicializamos variables*/
   SELECT @error = '0'
   /*- programamos el sp*/
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tarc
         WHERE dbo.tbl_tarc.ide_traz = @ide_traz
      )
      SELECT @error = 'TARC001'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'ESTT001'
   IF @error = '0'
      BEGIN

         BEGIN TRANSACTION 

         UPDATE dbo.tbl_tarc
            SET 
               est_traz = @est_traz, 
               cas_dest = @cas_dest, 
               tam_arch = @tam_arch, 
               fec_rece = getdate()
         WHERE dbo.tbl_tarc.ide_traz = @ide_traz

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'TARC004'

            END
         ELSE 
            BEGIN

               EXECUTE @rt = dbo.sp_ingr_htra @error = @error  OUTPUT, @ide_traz = @ide_traz, @est_traz = @est_traz, @cas_dest = @cas_dest

               IF (@rt = -1)
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @error = substring(@error, 1, 7)

                  END
               ELSE 
                  SELECT @error = '0'

            END

         IF @@TRANCOUNT > 0
            COMMIT TRANSACTION 

      END
   IF (@error = '0')
      SELECT @vreturn = 0
   ELSE 
      SELECT @vreturn = -1
   SELECT @cod_erro = @error
   EXECUTE dbo.sp_error @cod_erro = @cod_erro, @gls_erro = @gls_erro  OUTPUT
   SELECT @error = @cod_erro + ': ' + @gls_erro
   RETURN @vreturn
GO

GO
--SqlScripter----[dbo].[sp_modi_tparam].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[sp_modi_tparam]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_tparam] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_tparam]
@vcError varchar(255)  OUTPUT,
                                @vcSwsdr varchar(1),
                                @vcSwdre varchar(1),
                                @vcSwsrut varchar(1),
                                @vcSwrut varchar(1),
                                @vcSwlimp varchar(1)
AS 

  /*
   *   
   *   
   *    *      Servicio        :       Monitor FT3
   *    *
   *    *      Objetivo        :       Modificar datos de la tbl_param, sp creado para actualizar
   *    *                              data desde el Monitor FT3.
   *    *                              
   *    *                              
   *    *
   *    *      Autor           :       Hans Miranda F.
   *    *
   *    *      Creacion        :       25/11/2013
   *    *
   *    *
   *    *      Entrada         :       @vcSwsdr       
   *    *                              @vcSwdre
   *    *                              @vcSwsrut
   *    *                              @vcSwrut
   *    *                              @vcSwlimp
   *    *                             
   *    *
   *    *      Salida          :       @vcError          codigo y glosa del error ocurrido en el SP
   *    *
   *    *      Comentario      :       No tiene 
   *    *
   *
   *    declaramos variables locals
   */
   
 DECLARE @vcGls_error varchar(255)   
      
 SELECT @vcError = '0'

 BEGIN

        Update tbl_param 
           set 
              swsdr  = @vcSwsdr , 
              swdre  = @vcSwdre , 
              swsrut = @vcSwsrut , 
              swrut  = @vcSwrut , 
              swlimp = @vcSwlimp 
            
            
         IF @@ERROR != 0
          BEGIN      
               SELECT @vcError = 'UPARAM001'

          END
  END
       
  BEGIN

         SELECT @vcGls_error = ''

         EXECUTE dbo.sp_error @vcError, @vcGls_error  OUTPUT

         SELECT @vcError = @vcError + ': ' + @vcGls_error

         IF @vcError != '0'
            RETURN -1
            
         RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[sp_modi_tpro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_tpro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_tpro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_tpro]
@error varchar(255)  OUTPUT,
   @ide_traz int,
   @est_traz varchar(2)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.ide_traz = @ide_traz
      )
      SELECT @error = 'TPRO001'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'TPRO002'
      ELSE 
         BEGIN

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_tpro
               SET 
                  est_traz = @est_traz, 
                  usu_ingr = suser_name()
            WHERE dbo.tbl_tpro.ide_traz = @ide_traz

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @error = 'TPRO007'

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_tpro_servidor_arch_fec].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_tpro_servidor_arch_fec]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_tpro_servidor_arch_fec] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_tpro_servidor_arch_fec]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @fec_rece datetime2(3),
   @ide_traz int,
   @est_traz varchar(2),
   @cod_prod varchar(6),
   @cod_inst varchar(4),
   @cod_casi varchar(8),
   @tam_arch float(53)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE 
            dbo.tbl_tpro.cod_serv = @cod_serv AND 
            dbo.tbl_tpro.nom_arch = @nom_arch AND 
            dbo.tbl_tpro.fec_rece = @fec_rece
      )
      SELECT @error = 'TPRO014'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'TPRO002'
      ELSE 
         BEGIN

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_tpro
               SET 
                  ide_traz = @ide_traz, 
                  est_traz = @est_traz, 
                  cod_prod = @cod_prod, 
                  cod_inst = @cod_inst, 
                  cod_casi = @cod_casi, 
                  tam_arch = @tam_arch, 
                  usu_ingr = suser_name()
            WHERE 
               dbo.tbl_tpro.cod_serv = @cod_serv AND 
               dbo.tbl_tpro.nom_arch = @nom_arch AND 
               dbo.tbl_tpro.fec_rece = @fec_rece AND 
               (@est_traz < '70' AND dbo.tbl_tpro.est_traz < '70')

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR = 0 AND @est_traz = '55'
               BEGIN
                  UPDATE dbo.tbl_hpro
                     SET 
                        cod_prod = @cod_prod, 
                        tam_arch = @tam_arch
                  WHERE 
                     dbo.tbl_hpro.cod_serv = @cod_serv AND 
                     dbo.tbl_hpro.nom_arch = @nom_arch AND 
                     dbo.tbl_hpro.fec_rece = @fec_rece AND 
                     dbo.tbl_hpro.est_traz = '50'
               END

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR = 0 AND (
               @est_traz = '57' OR 
               @est_traz = '58' OR 
               @est_traz = '63' OR 
               @est_traz = '65')
               BEGIN
                  UPDATE dbo.tbl_hpro
                     SET 
                        cod_prod = @cod_prod, 
                        tam_arch = @tam_arch
                  WHERE 
                     dbo.tbl_hpro.cod_serv = @cod_serv AND 
                     dbo.tbl_hpro.nom_arch = @nom_arch AND 
                     dbo.tbl_hpro.fec_rece = @fec_rece
               END

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @error = 'TPRO007'

               END
            ELSE 
               BEGIN

                  INSERT dbo.tbl_hpro(
                     ide_traz, 
                     est_traz, 
                     cod_prod, 
                     cod_inst, 
                     cod_casi, 
                     cod_serv, 
                     nom_arch, 
                     tam_arch, 
                     fec_rece, 
                     usu_ingr, 
                     fec_ingr)
                     VALUES (
                        @ide_traz, 
                        @est_traz, 
                        @cod_prod, 
                        @cod_inst, 
                        @cod_casi, 
                        @cod_serv, 
                        @nom_arch, 
                        @tam_arch, 
                        @fec_rece, 
                        suser_name(), 
                        getdate())

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF @@ERROR != 0
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @error = 'TPRO007'

                     END

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_tpro_servidor_archivo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_tpro_servidor_archivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_tpro_servidor_archivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_tpro_servidor_archivo]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @ide_traz int,
   @est_traz varchar(2)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   DECLARE
      @cod_prod varchar(6)
   DECLARE
      @cod_inst varchar(4)
   DECLARE
      @cod_casi varchar(8)
   DECLARE
      @tam_arch float(53)
   DECLARE
      @fec_rece datetime2(3)
   DECLARE
      @tip_serv varchar(1)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.cod_serv = @cod_serv AND dbo.tbl_tpro.nom_arch = @nom_arch
      )
      SELECT @error = 'TPRO014'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'TPRO002'
      ELSE 
         BEGIN

            IF @est_traz = '85'
               BEGIN

                  SELECT @tip_serv = dbo.tbl_serv.tip_serv
                  FROM dbo.tbl_serv
                  WHERE dbo.tbl_serv.cod_serv = @cod_serv

                  IF @tip_serv = 'I'
                     SELECT @ide_traz = dbo.tbl_tpro.ide_traz
                     FROM dbo.tbl_tpro
                     WHERE dbo.tbl_tpro.cod_serv = @cod_serv AND dbo.tbl_tpro.nom_arch = @nom_arch

               END

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_tpro
               SET 
                  ide_traz = @ide_traz, 
                  est_traz = @est_traz, 
                  usu_ingr = suser_name()
            WHERE 
               dbo.tbl_tpro.cod_serv = @cod_serv AND 
               dbo.tbl_tpro.nom_arch = @nom_arch AND 
               (@est_traz >= '70' AND dbo.tbl_tpro.est_traz >= '70')

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @error = 'TPRO007'

               END
            ELSE 
               BEGIN

                  SELECT 
                     @ide_traz = dbo.tbl_tpro.ide_traz, 
                     @est_traz = dbo.tbl_tpro.est_traz, 
                     @cod_prod = dbo.tbl_tpro.cod_prod, 
                     @cod_inst = dbo.tbl_tpro.cod_inst, 
                     @cod_casi = dbo.tbl_tpro.cod_casi, 
                     @cod_serv = dbo.tbl_tpro.cod_serv, 
                     @nom_arch = dbo.tbl_tpro.nom_arch, 
                     @tam_arch = dbo.tbl_tpro.tam_arch, 
                     @fec_rece = dbo.tbl_tpro.fec_rece
                  FROM dbo.tbl_tpro
                  WHERE 
                     dbo.tbl_tpro.cod_serv = @cod_serv AND 
                     dbo.tbl_tpro.nom_arch = @nom_arch AND 
                     dbo.tbl_tpro.est_traz = @est_traz

                  UPDATE dbo.tbl_hpro
                     SET 
                        ide_traz = @ide_traz
                  WHERE 
                     dbo.tbl_hpro.cod_serv = @cod_serv AND 
                     dbo.tbl_hpro.nom_arch = @nom_arch AND 
                     (@est_traz >= '70' AND dbo.tbl_hpro.est_traz >= '70')

                  INSERT dbo.tbl_hpro(
                     ide_traz, 
                     est_traz, 
                     cod_prod, 
                     cod_inst, 
                     cod_casi, 
                     cod_serv, 
                     nom_arch, 
                     tam_arch, 
                     fec_rece, 
                     usu_ingr, 
                     fec_ingr)
                     VALUES (
                        @ide_traz, 
                        @est_traz, 
                        @cod_prod, 
                        @cod_inst, 
                        @cod_casi, 
                        @cod_serv, 
                        @nom_arch, 
                        @tam_arch, 
                        @fec_rece, 
                        suser_name(), 
                        getdate())

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF @@ERROR != 0
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @error = 'TPRO007'

                     END

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_tpro2].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_tpro2]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_tpro2] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_tpro2]
@error varchar(255)  OUTPUT,
   @cod_serv varchar(8),
   @nom_arch varchar(50),
   @ide_traz int,
   @est_traz varchar(2)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   DECLARE
      @gls_erro varchar(255)
   SELECT @error = '0'
   IF NOT EXISTS 
      (
         SELECT *
         FROM dbo.tbl_tpro
         WHERE dbo.tbl_tpro.cod_serv = @cod_serv AND dbo.tbl_tpro.nom_arch = @nom_arch
      )
      SELECT @error = 'TPRO014'
   ELSE 
      IF NOT EXISTS 
         (
            SELECT *
            FROM dbo.tbl_estt
            WHERE dbo.tbl_estt.est_traz = @est_traz
         )
         SELECT @error = 'TPRO002'
      ELSE 
         BEGIN

            BEGIN TRANSACTION 

            UPDATE dbo.tbl_tpro
               SET 
                  ide_traz = @ide_traz, 
                  est_traz = @est_traz, 
                  usu_ingr = suser_name()
            WHERE dbo.tbl_tpro.cod_serv = @cod_serv AND dbo.tbl_tpro.nom_arch = @nom_arch

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF @@ERROR != 0
               BEGIN

                  IF @@TRANCOUNT > 0
                     ROLLBACK TRANSACTION 

                  SELECT @error = 'TPRO007'

               END

            IF @@TRANCOUNT > 0
               COMMIT TRANSACTION 

         END
   IF @error = '0'
      RETURN 0
   ELSE 
      BEGIN

         SELECT @gls_erro = ''

         EXECUTE dbo.sp_error @error, @gls_erro  OUTPUT

         SELECT @error = @error + ': ' + @gls_erro

         RETURN -1

      END
GO

GO
--SqlScripter----[dbo].[sp_modi_user].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[sp_modi_user]') IS NULL EXEC('CREATE PROCEDURE [dbo].[sp_modi_user] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[sp_modi_user]
@error varchar(255)  OUTPUT,
   @cod_inst varchar(4),
   @cod_user varchar(8),
   @pas_user varchar(8),
   @nom_user varchar(20)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *      Servicio        :       sp_modi_user
   *    *
   *    *      Objetivo        :       Modifica los atributos del usuario a la tabla tbl_user
   *    *
   *    *      Autor           :       ruh.
   *    *
   *    *      Creacion        :       04/04/2000
   *    *
   *    *      Modificado      :       
   *    *
   *    *      Entrada         :       @cod_inst	Codigo de institucion a la que pertenece el usuario       
   *    *                              @cod_user       Codigo del usuario
   *    *                              @pas_user       Password del usuario
   *    *                              @nom_user       Nombre del usuario 
   *    *
   *    *      Salida          :       @error          codigo y glosa del error
   *    *                                              ocurrido en el SP
   *    *
   *    *      Comentario      :      No tiene 
   *    *
   *
   *    declaramos variables locales
   */
   DECLARE
      @cod_e varchar(7), 
      @gls_e varchar(255)
   /* validamos que la password del usuario sea distinta de nul*/
   IF (nullif(ltrim(nullif(rtrim(@pas_user), '')), '') IS NULL)
      SELECT @cod_e = 'USER002'
   /* validamos que el nombre del usuario sea distinto de nul*/
   ELSE 
      IF (nullif(ltrim(nullif(rtrim(@nom_user), '')), '') IS NULL)
         SELECT @cod_e = 'USER003'
      /* validamos que el par institucion-codigo usuario exista en la tabla tbl_user*/
      ELSE 
         IF NOT EXISTS 
            (
               SELECT dbo.tbl_user.cod_user
               FROM dbo.tbl_user
               WHERE dbo.tbl_user.cod_inst = @cod_inst AND dbo.tbl_user.cod_user = @cod_user
            )
            SELECT @cod_e = 'USER006'
         ELSE 
            BEGIN

               BEGIN TRANSACTION 

               UPDATE dbo.tbl_user
                  SET 
                     pas_user = @pas_user, 
                     nom_user = @nom_user
               WHERE dbo.tbl_user.cod_inst = @cod_inst AND dbo.tbl_user.cod_user = @cod_user

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF @@ERROR != 0
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @cod_e = 'USER007'

                  END
               ELSE 
                  SELECT @cod_e = '0'

               IF @@TRANCOUNT > 0
                  COMMIT TRANSACTION 

            END
   EXECUTE dbo.sp_error @cod_e, @gls_e  OUTPUT
   SELECT @error = @cod_e + ': ' + @gls_e
   IF @cod_e != '0'
      RETURN -1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spConsultaCorrelativoR04R05].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spConsultaCorrelativoR04R05]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spConsultaCorrelativoR04R05] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spConsultaCorrelativoR04R05]
@iAccion int,
   @cTipoAccion char(3)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *   HEADER
   *   ------
   *   
   *   Sistema                 : Transformar R04 - R05
   *   Nombre del Proceso      : Homologar Archivo R04 -R05
   *   Nombre del SP           : spConsultaCorrelativoR04R05
   *   Autor                   : Luis Cortes
   *   Fecha Creacion          : 24/02/2009
   *   Documento Referencia    : homologar R04 - R05
   *   Descripcion             : consulta y modifica el correlativo para la generacion del nombre 
   *                               del archivo R04 - R05
   *   Historial de Mantenimiento
   *   Fecha           Responsable     Observaciones
   *   --------------  --------------  -------------------------------------------------------------------
   *   
   *
   */
   BEGIN
      IF @cTipoAccion = 'R04'
         BEGIN
            IF @iAccion = 1
               BEGIN
                  SELECT dbo.tblCorrelativoR04R05.iCorrelativoR04
                  FROM dbo.tblCorrelativoR04R05
               END
            ELSE 
               BEGIN
                  UPDATE dbo.tblCorrelativoR04R05
                     SET 
                        iCorrelativoR04 = dbo.tblCorrelativoR04R05.iCorrelativoR04 + 1
               END
         END
      ELSE 
         BEGIN
            IF @iAccion = 1
               BEGIN
                  SELECT dbo.tblCorrelativoR04R05.iCorrelativoR05
                  FROM dbo.tblCorrelativoR04R05
               END
            ELSE 
               BEGIN
                  UPDATE dbo.tblCorrelativoR04R05
                     SET 
                        iCorrelativoR05 = dbo.tblCorrelativoR04R05.iCorrelativoR05 + 1
               END
         END
   END
GO

GO
--SqlScripter----[dbo].[spEAR04R05ConsultaCasilla].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spEAR04R05ConsultaCasilla]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spEAR04R05ConsultaCasilla] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spEAR04R05ConsultaCasilla]
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   
   /*
   *   **********************************************************************************************************************************
   *   * Sistema        : Transformar R04 - R05
   *   * Procedimiento  : spEAR04R05ConsultaCasilla
   *   * Descripcion    : Consulta las instituciones para enviar el archivo R04/R05
   *   *
   *   * Responsable    : Jorge R. Melendez I.
   *   * Fecha Creacion :
   *   * Observaciones  :
   *   *
   *   * Responsable Modif. :
   *   * Fecha Modificacion :
   *   * Observaciones      :
   *   **********************************************************************************************************************************
   */
   SELECT 
      dbo.tblEnvioAutomR04R05.cCodigoInstitucion, 
      dbo.tblEnvioAutomR04R05.cNombreInstitucion, 
      dbo.tblEnvioAutomR04R05.vcCasilla, 
      dbo.tblEnvioAutomR04R05.cNombreArchivoR04, 
      dbo.tblEnvioAutomR04R05.cArchivoTransformadoR04, 
      dbo.tblEnvioAutomR04R05.cNombreArchivoR05, 
      dbo.tblEnvioAutomR04R05.cArchivoTransformadoR05
   FROM dbo.tblEnvioAutomR04R05
GO

GO
--SqlScripter----[dbo].[spESBEjecutaProcedimiento].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spESBEjecutaProcedimiento]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spESBEjecutaProcedimiento] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spESBEjecutaProcedimiento]
@vcInvocacion     varchar(4096)
AS

/* *****************************************************************************************
* Sistema      : Central de Riesgo - Bus de servicio
* Procedimiento: spESBEjecutaProcedimiento
* Descripcion  : Procedimiento unico de acceso del Bus a todos los procedimientos
*
* Creacion     : 04-02-2020
* Responsable  : ST Computacion
*
* Control de Cambios
* Fecha      Responsable Observaciones
* ---------- ----------- --------------------------------------------
* *******************************************************************************************/

---------------------------------------------
-- Cuerpo del SP
---------------------------------------------

if rtrim(@vcInvocacion) is null
    return -1
else
    begin
        execute(@vcInvocacion)
        if @@error <> 0
            return -1
    end


RETURN 0
GO

GO
--SqlScripter----[dbo].[spESBObtieneRegistroFT3FT].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spESBObtieneRegistroFT3FT]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spESBObtieneRegistroFT3FT] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spESBObtieneRegistroFT3FT]
@instEnvio    	varchar(4),
												@tipoArchivo	varchar(20),
												@fechaInicio	varchar(25),
												@fechaFin	 	varchar(25)
AS

/* *****************************************************************************************
* Sistema      : Central de Riesgo - Bus de servicio
* Procedimiento: spESBObtieneRegistroFT3FT
* Descripcion  : 
*
* Entrada:
*		@instEnvio Codigo de Institucion que envio el archivo
*   	@tipoArchivo Tipo de archivo
*		@fechaInicio Fecha inicio de recepcion para filtrar resultados(No se utilizara en esta fase)
*		@fechaFin Fecha final de recepcion para filtrar resultados(No se utilizara en esta fase)
*
* Salida:
* 		Ultimo registro recepcionado, solo uno.
*
* Creacion     : 22-01-2020
* Responsable  : ST
*
* Control de Cambios
* Fecha      Responsable Observaciones
* ---------- ----------- --------------------------------------------
* *******************************************************************************************/

---------------------------------------------
-- Cuerpo del SP
---------------------------------------------

SELECT TOP 1 isnull(b.nom_msg,@tipoArchivo) AS tipoArchivo, 
	convert(VARCHAR, a.fec_rece, 112) AS fechaEnvio, 
	convert(VARCHAR, a.fec_rece, 108) AS horaEnvio,
	convert(VARCHAR, b.fec_resc, 112) AS fechaRecepcion, 
	convert(VARCHAR, b.fec_resc, 108) AS horaRecepcion, 
	a.cas_orig AS usuarioEnvio
FROM tbl_tarc a
INNER JOIN tbl_casi c ON c.cod_casi = a.cas_orig
LEFT JOIN tbl_resc b on a.cas_dest = b.cas_dest 
	AND a.cas_orig = b.cas_orig 
	AND a.nom_arcc = b.nom_arch
	AND b.est_resc = 'EE' AND b.est_fres='00'
WHERE
	c.cod_inst = @instEnvio
	AND a.cas_dest = 'sbif' 
	AND upper(a.nom_arcc) like concat('FT',concat(upper(@tipoArchivo),'%'))
ORDER BY a.fec_rece DESC
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaAlertas].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaAlertas]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaAlertas] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaAlertas]
@error varchar(255)  OUTPUT,
   @vcCodigoParametro varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaAlertas
   *    *  Objetivo:       Consulta todas o una alertas existentes en el Sistema.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 13/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoParametro  Codigo de parametro
   *    *
   *    *  Salida:         @error              error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      IF (@vcCodigoParametro = '')
         BEGIN
            /*
            *   SSMA warning messages:
            *   S2SS0064: Possibility of mismatch in LIKE operator behavior.
            */

            SELECT 
               a.vcCodigoParametro, 
               a.vcDescripcionParametro, 
               a.vcValorParametro, 
               b.vcMsgAsunto, 
               b.vcMsgTexto, 
               b.vcMsgFirma
            FROM dbo.tblParametro  AS a, dbo.tblMsAlerta  AS b
            WHERE a.vcCodigoParametro LIKE 'ALR%' AND b.vcCodigoParametro = a.vcCodigoParametro
            ORDER BY a.vcCodigoParametro
         END
      ELSE 
         BEGIN
            /*
            *   SSMA warning messages:
            *   S2SS0064: Possibility of mismatch in LIKE operator behavior.
            */

            SELECT 
               a.vcCodigoParametro, 
               a.vcDescripcionParametro, 
               a.vcValorParametro, 
               b.vcMsgAsunto, 
               b.vcMsgTexto, 
               b.vcMsgFirma
            FROM dbo.tblParametro  AS a, dbo.tblMsAlerta  AS b
            WHERE lower(a.vcCodigoParametro) LIKE rtrim(lower(CAST(coalesce('%' + nullif(ltrim(nullif(rtrim(@vcCodigoParametro), '')), '') + '%', '%') AS nvarchar(4000)))) AND b.vcCodigoParametro = a.vcCodigoParametro
            ORDER BY a.vcCodigoParametro
         END

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaArchEliminadoFT3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaArchEliminadoFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaArchEliminadoFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaArchEliminadoFT3]
@error varchar(255)  OUTPUT,
   @iHoras int,
   @iMinutos int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaArchEliminadoFT3
   *    *  Objetivo:       Consulta los archivos eliminados FT3.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @iHoras    Horas
   *    *                  @iMinutos  Minutos
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      /*****Tbl_Tarc*****/
      SELECT dbo.tbl_tarc.cas_orig, dbo.tbl_tarc.cas_dest, dbo.tbl_tarc.nom_arcc, 'M' AS vcTipoTransaccion
      FROM dbo.tbl_tarc
      WHERE 
         dbo.tbl_tarc.est_traz IN ( '13', '17' ) AND 
         dbo.tbl_tarc.fec_rece <= dateadd(hour, -@iHoras, getdate()) AND 
         dbo.tbl_tarc.fec_rece >= dateadd(mi, -@iHoras * 60 - @iMinutos, getdate())
      ORDER BY 1, 2

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaArchEliminadoWeb].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaArchEliminadoWeb]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaArchEliminadoWeb] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaArchEliminadoWeb]
@error varchar(255)  OUTPUT,
   @iHoras int,
   @iMinutos int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaArchEliminadoWeb
   *    *  Objetivo:       Consulta los archivos eliminados Web.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 19/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @iHoras    Horas
   *    *                  @iMinutos  Minutos
   *    *
   *    *  Salida:         @error     error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   DECLARE
      @dtFechaIni datetime2(3), 
      @dtFechaFin datetime2(3), 
      @vcFechaIni varchar(8), 
      @vcHoraIni varchar(6), 
      @vcFechaFin varchar(8), 
      @vcHoraFin varchar(6)
   BEGIN

      SELECT @dtFechaIni = dateadd(mi, -@iHoras * 60 - @iMinutos, getdate())

      SELECT @dtFechaFin = dateadd(hour, -@iHoras, getdate())

      SELECT @vcFechaIni = CONVERT(varchar(8), @dtFechaIni, 112)

      SELECT @vcHoraIni = right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dtFechaIni))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dtFechaIni))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dtFechaIni))), ''), 2)

      SELECT @vcFechaFin = CONVERT(varchar(8), @dtFechaFin, 112)

      SELECT @vcHoraFin = right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dtFechaFin))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dtFechaFin))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dtFechaFin))), ''), 2)

      /*****TblTransEnvio*****/
      SELECT 
         dbo.tblTransEnvio.vcUsuarioEnvio, 
         dbo.tblTransEnvio.vcCodigoInstitucionOrigen, 
         dbo.tblTransEnvio.vcCodigoInstitucionDestino, 
         dbo.tblTransEnvio.vcCodigoTipoArchivo, 
         dbo.tblTransEnvio.vcNombreArchivo, 
         'A' AS vcTipoTransaccion
      FROM dbo.tblTransEnvio
      WHERE 
         dbo.tblTransEnvio.vcEstadoEnvio = '2' AND 
         ((dbo.tblTransEnvio.vcFechaEnvio > @vcFechaIni) OR (dbo.tblTransEnvio.vcFechaEnvio = @vcFechaIni AND dbo.tblTransEnvio.vcHoraEnvio >= @vcHoraIni)) AND 
         ((dbo.tblTransEnvio.vcFechaEnvio < @vcFechaFin) OR (dbo.tblTransEnvio.vcFechaEnvio = @vcFechaFin AND dbo.tblTransEnvio.vcHoraEnvio <= @vcHoraFin))
       UNION ALL
      /*****TblTransRespuesta*****/
      SELECT 
         dbo.tblTransRespuesta.vcUsuarioEnvio, 
         dbo.tblTransRespuesta.vcCodigoInstitucionOrigen, 
         dbo.tblTransRespuesta.vcCodigoInstitucionDestino, 
         dbo.tblTransRespuesta.vcCodigoTipoArchivo, 
         dbo.tblTransRespuesta.vcNombreArchivo, 
         'A' AS vcTipoTransaccion
      FROM dbo.tblTransRespuesta
      WHERE 
         dbo.tblTransRespuesta.vcEstadoEnvio = '2' AND 
         ((dbo.tblTransRespuesta.vcFechaEnvio > @vcFechaIni) OR (dbo.tblTransRespuesta.vcFechaEnvio = @vcFechaIni AND dbo.tblTransRespuesta.vcHoraEnvio >= @vcHoraIni)) AND 
         ((dbo.tblTransRespuesta.vcFechaEnvio < @vcFechaFin) OR (dbo.tblTransRespuesta.vcFechaEnvio = @vcFechaFin AND dbo.tblTransRespuesta.vcHoraEnvio <= @vcHoraFin))
      ORDER BY 1, 2

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaArchivoAResponder].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaArchivoAResponder]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaArchivoAResponder] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaArchivoAResponder]
@error varchar(255)  OUTPUT,
   @vcCodigoInstitucion varchar(4),
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaArchivoAResponder
   *    *  Objetivo:       Consulta sobre los tipos de archivos disponibles, de acuerdo a un perfil.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 29/07/2010
   *    *
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoInstitucion  Codigo de la institucion.
   *    *                  @vcCodigoTipoArchivo  Codigo del tipo de archivo.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT 
         t1.group_expr$1 AS vcFechaEnvio, 
         t1.group_expr$2 AS vcHoraEnvio, 
         t1.group_expr$3 AS vcCodigoInstitucionOrigen, 
         t1.group_expr$4 AS vcCodigoInstitucionDestino, 
         t1.group_expr$5 AS vcCodigoCasilla, 
         t1.group_expr$6 AS vcCodigoTipoArchivo, 
         t1.group_expr$7 AS vcNombreArchivo, 
         agg_expr$1
      FROM 
         (
            SELECT 
               ta.iNumeroRespuestas AS col$1, 
               te.vcFechaEnvio AS group_expr$1, 
               te.vcHoraEnvio AS group_expr$2, 
               te.vcCodigoInstitucionOrigen AS group_expr$3, 
               te.vcCodigoInstitucionDestino AS group_expr$4, 
               te.vcCodigoCasilla AS group_expr$5, 
               ta.vcCodigoTipoArchivo AS group_expr$6, 
               te.vcNombreArchivo AS group_expr$7
            FROM dbo.tblTransEnvio  AS te, dbo.tblTipoArchivo  AS ta
         )  AS t1 
            INNER JOIN 
            (
               SELECT 
                  count(tr.vcFechaEnvioFK) AS agg_expr$1, 
                  count(tr.vcFechaEnvioFK) AS agg_expr$2, 
                  te.vcFechaEnvio AS group_expr$1, 
                  te.vcHoraEnvio AS group_expr$2, 
                  te.vcCodigoInstitucionOrigen AS group_expr$3, 
                  te.vcCodigoInstitucionDestino AS group_expr$4, 
                  te.vcCodigoCasilla AS group_expr$5, 
                  ta.vcCodigoTipoArchivo AS group_expr$6, 
                  te.vcNombreArchivo AS group_expr$7
               FROM 
                  dbo.tblTipoArchivo  AS ta, 
                  dbo.tblTransEnvio  AS te 
                     LEFT OUTER JOIN dbo.tblTransRespuesta  AS tr 
                     ON 
                        tr.vcFechaEnvioFK = te.vcFechaEnvio AND 
                        tr.vcHoraEnvioFK = te.vcHoraEnvio AND 
                        tr.vcCodigoInstitucionOrigenFK = te.vcCodigoInstitucionOrigen AND 
                        tr.vcCodigoInstitucionDestinoFK = te.vcCodigoInstitucionDestino AND 
                        tr.vcCodigoCasillaFK = te.vcCodigoCasilla AND 
                        tr.vcCodigoTipoArchivoFK = te.vcCodigoTipoArchivo AND 
                        tr.vcNombreArchivoFK = te.vcNombreArchivo
               WHERE 
                  te.vcCodigoInstitucionDestino = @vcCodigoInstitucion AND 
                  te.vcCodigoTipoArchivo = @vcCodigoTipoArchivo AND 
                  te.vcCodigoTipoArchivo = ta.vcCodigoTipoArchivo AND 
                  te.vcEstadoEnvio = '2' AND 
                  te.vcEstadoRescate = '1'
               GROUP BY 
                  te.vcFechaEnvio, 
                  te.vcHoraEnvio, 
                  te.vcCodigoInstitucionOrigen, 
                  te.vcCodigoInstitucionDestino, 
                  te.vcCodigoCasilla, 
                  ta.vcCodigoTipoArchivo, 
                  te.vcNombreArchivo
            )  AS t2 
            ON 
               t1.group_expr$1 = t2.group_expr$1 AND 
               t1.group_expr$2 = t2.group_expr$2 AND 
               t1.group_expr$3 = t2.group_expr$3 AND 
               t1.group_expr$4 = t2.group_expr$4 AND 
               t1.group_expr$5 = t2.group_expr$5 AND 
               t1.group_expr$6 = t2.group_expr$6 AND 
               t1.group_expr$7 = t2.group_expr$7
      WHERE col$1 > agg_expr$2
      ORDER BY t1.group_expr$3, t1.group_expr$7
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaArchPendRescFT3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaArchPendRescFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaArchPendRescFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaArchPendRescFT3]
@error varchar(255)  OUTPUT,
   @iHoras int,
   @iMinutos int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaArchPendRescFT3
   *    *  Objetivo:       Consulta los archivos pendientes de rescate FT3, proximos a la eliminacion.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @iHoras    Horas
   *    *                  @iMinutos  Minutos
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      /*****Tbl_Tarc*****/
      SELECT dbo.tbl_tarc.cas_orig, dbo.tbl_tarc.cas_dest, dbo.tbl_tarc.nom_arcc
      FROM dbo.tbl_tarc
      WHERE 
         dbo.tbl_tarc.est_traz = '13' AND 
         dbo.tbl_tarc.fec_rece <= dateadd(hour, -@iHoras, getdate()) AND 
         dbo.tbl_tarc.fec_rece >= dateadd(mi, -@iHoras * 60 - @iMinutos, getdate())
      ORDER BY 1, 2
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaArchPendRescWeb].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaArchPendRescWeb]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaArchPendRescWeb] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaArchPendRescWeb]
@error varchar(255)  OUTPUT,
   @iHoras int,
   @iMinutos int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaArchPendRescWeb
   *    *  Objetivo:       Consulta los archivos pendientes de rescate Web, proximos a la eliminacion.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @iHoras    Horas
   *    *                  @iMinutos  Minutos
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   DECLARE
      @dtFechaIni datetime2(3), 
      @dtFechaFin datetime2(3), 
      @vcFechaIni varchar(8), 
      @vcHoraIni varchar(6), 
      @vcFechaFin varchar(8), 
      @vcHoraFin varchar(6)
   BEGIN

      SELECT @dtFechaIni = dateadd(mi, -@iHoras * 60 - @iMinutos, getdate())

      SELECT @dtFechaFin = dateadd(hour, -@iHoras, getdate())

      SELECT @vcFechaIni = CONVERT(varchar(8), @dtFechaIni, 112)

      SELECT @vcHoraIni = right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dtFechaIni))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dtFechaIni))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dtFechaIni))), ''), 2)

      SELECT @vcFechaFin = CONVERT(varchar(8), @dtFechaFin, 112)

      SELECT @vcHoraFin = right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dtFechaFin))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dtFechaFin))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dtFechaFin))), ''), 2)

      /*****TblTransEnvio*****/
      SELECT 
         dbo.tblTransEnvio.vcUsuarioEnvio, 
         dbo.tblTransEnvio.vcCodigoInstitucionOrigen, 
         dbo.tblTransEnvio.vcCodigoInstitucionDestino, 
         dbo.tblTransEnvio.vcCodigoTipoArchivo, 
         dbo.tblTransEnvio.vcNombreArchivo
      FROM dbo.tblTransEnvio
      WHERE 
         dbo.tblTransEnvio.vcEstadoEnvio = '2' AND 
--**         dbo.tblTransEnvio.vcEstadoRescate = NULL AND 
         dbo.tblTransEnvio.vcEstadoRescate is NULL AND    --**Modif.: 16-11-2012 EBICYS.com
         ((dbo.tblTransEnvio.vcFechaEnvio > @vcFechaIni) OR (dbo.tblTransEnvio.vcFechaEnvio = @vcFechaIni AND dbo.tblTransEnvio.vcHoraEnvio >= @vcHoraIni)) AND 
         ((dbo.tblTransEnvio.vcFechaEnvio < @vcFechaFin) OR (dbo.tblTransEnvio.vcFechaEnvio = @vcFechaFin AND dbo.tblTransEnvio.vcHoraEnvio <= @vcHoraFin))
       UNION ALL
      /*****TblTransRespuesta*****/
      SELECT 
         dbo.tblTransRespuesta.vcUsuarioEnvio, 
         dbo.tblTransRespuesta.vcCodigoInstitucionOrigen, 
         dbo.tblTransRespuesta.vcCodigoInstitucionDestino, 
         dbo.tblTransRespuesta.vcCodigoTipoArchivo, 
         dbo.tblTransRespuesta.vcNombreArchivo
      FROM dbo.tblTransRespuesta
      WHERE 
         dbo.tblTransRespuesta.vcEstadoEnvio = '2' AND 
--**         dbo.tblTransRespuesta.vcEstadoRescate = NULL AND 
         dbo.tblTransRespuesta.vcEstadoRescate is NULL AND    --** Modif.:16-11-2012 EBICYS.com
         ((dbo.tblTransRespuesta.vcFechaEnvio > @vcFechaIni) OR (dbo.tblTransRespuesta.vcFechaEnvio = @vcFechaIni AND dbo.tblTransRespuesta.vcHoraEnvio >= @vcHoraIni)) AND 
         ((dbo.tblTransRespuesta.vcFechaEnvio < @vcFechaFin) OR (dbo.tblTransRespuesta.vcFechaEnvio = @vcFechaFin AND dbo.tblTransRespuesta.vcHoraEnvio <= @vcHoraFin))
      ORDER BY 1, 2

   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaCodigoNuevaExtension].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaCodigoNuevaExtension]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaCodigoNuevaExtension] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaCodigoNuevaExtension]
@vcError varchar(255)  OUTPUT,
   @vcCod_desc varchar(5)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaCodigoNuevaExtension
   *    *  Objetivo:       Consulta sobre los codigos de archivos existentes de acuerdo a un nuevo registro (3E).
   *    *  Autor Creaci=n: Ulises Venegas.
   *    *  Fecha Creaci=n: 13/03/2019
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo  Codigo tipo de archivo.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   DECLARE
      @vcCod_e varchar(7), 
      @vcGls_e varchar(255)
   BEGIN

      SELECT dbo.tbl_desc.cod_desc
      FROM dbo.tbl_desc
      WHERE dbo.tbl_desc.tip_desc = '3E' AND dbo.tbl_desc.cod_desc = @vcCod_desc



      IF (@@ERROR <> 0)
         BEGIN

            SELECT @vcCod_e = 'DIPB001'

            EXECUTE dbo.sp_error @vcCod_e, @vcGls_e  OUTPUT

            SELECT @vcError = @vcCod_e + ': ' + @vcGls_e

         END
      ELSE 
         BEGIN
            SELECT @vcError = '0'
         END

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaCodigoTipoArchivo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaCodigoTipoArchivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaCodigoTipoArchivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaCodigoTipoArchivo]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaCodigoTipoArchivo
   *    *  Objetivo:       Consulta sobre los tipos de archivos existentes de acuerdo a un codigo de archivo.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 17/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo  Codigo tipo de archivo.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      IF (@vcCodigoTipoArchivo = '')
         BEGIN
            SELECT 
               dbo.tblTipoArchivo.vcCodigoTipoArchivo, 
               dbo.tblTipoArchivo.vcNombreTipoArchivo, 
               dbo.tblTipoArchivo.iNumeroRespuestas, 
               dbo.tblTipoArchivo.vcFormatoNombreArchivo, 
               dbo.tblTipoArchivo.vcModoTransferencia, 
               dbo.tblTipoArchivo.iLargoRegistroArchivo
            FROM dbo.tblTipoArchivo
         END
      ELSE 
         BEGIN
            /*
            *   SSMA warning messages:
            *   S2SS0064: Possibility of mismatch in LIKE operator behavior.
            */

            SELECT 
               dbo.tblTipoArchivo.vcCodigoTipoArchivo, 
               dbo.tblTipoArchivo.vcNombreTipoArchivo, 
               dbo.tblTipoArchivo.iNumeroRespuestas, 
               dbo.tblTipoArchivo.vcFormatoNombreArchivo, 
               dbo.tblTipoArchivo.vcModoTransferencia, 
               dbo.tblTipoArchivo.iLargoRegistroArchivo
            FROM dbo.tblTipoArchivo
            WHERE lower(dbo.tblTipoArchivo.vcCodigoTipoArchivo) LIKE rtrim(lower(CAST(coalesce('%' + nullif(ltrim(nullif(rtrim(@vcCodigoTipoArchivo), '')), '') + '%', '%') AS nvarchar(4000))))
         END

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaConfigTrazabilida].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaConfigTrazabilida]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaConfigTrazabilida] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaConfigTrazabilida]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaConfigTrazabilida
   *    *  Objetivo:       Consulta sobre la configuracion de trazabilidad.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 08/09/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        No hay.
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT dbo.tblConfigLogTrazabilidad.iIdActividad, dbo.tblConfigLogTrazabilidad.iIdModulo, dbo.tblConfigLogTrazabilidad.iDestinoLog, dbo.tblConfigLogTrazabilidad.vcDescripcion
      FROM dbo.tblConfigLogTrazabilidad
      ORDER BY dbo.tblConfigLogTrazabilidad.iIdActividad
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaDestinataEmailFT3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaDestinataEmailFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaDestinataEmailFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaDestinataEmailFT3]
@error varchar(255)  OUTPUT,
   @vcCodigoCasilla varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaDestinataEmailFT3
   *    *  Objetivo:       Consulta sobre los posibles destinatarios, de acuerdo a la casilla.
   *    *  Autor Creación: Andrea Zarabia V.
   *    *  Fecha Creación: 15/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoCasilla   Codigo casilla.
   *    *
   *    *  Salida:         @error         error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT u.vcCodigoUsuario, u.vcNombreUsuario, u.vcDireccionEmail, u.vcCodigoInstitucion
      FROM dbo.tblUsuario  AS u, dbo.tbl_inst  AS i, dbo.tbl_casi  AS c
      WHERE 
         c.cod_casi = @vcCodigoCasilla AND 
         i.cod_inst = c.cod_inst AND 
         u.vcCodigoInstitucion = i.cod_inst
      ORDER BY u.vcCodigoUsuario
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaDestinatarioEmail].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaDestinatarioEmail]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaDestinatarioEmail] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaDestinatarioEmail]
@error varchar(255)  OUTPUT,
   @vcCodigoInstitucion varchar(4),
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaDestinatarioEmail
   *    *  Objetivo:       Consulta sobre los posibles destinatarios, de acuerdo a la isntitucion y al archivo a enviar.
   *    *  Autor Creación: Andrea Zarabia V.
   *    *  Fecha Creación: 15/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoInstitucion      Codigo institucion.
   *    *                  @vcCodigoTipoArchivo      Codigo tipo de archivo.
   *    *
   *    *  Salida:         @error         error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT u.vcCodigoUsuario, u.vcNombreUsuario, u.vcDireccionEmail, u.vcCodigoInstitucion
      FROM dbo.tblUsuario  AS u, dbo.tblRelTipoArchivoUsuario  AS tau
      WHERE 
         u.vcCodigoInstitucion = @vcCodigoInstitucion AND 
         u.vcCodigoUsuario = tau.vcCodigoUsuario AND 
         tau.vcCodigoTipoArchivo = @vcCodigoTipoArchivo
      ORDER BY u.vcCodigoUsuario
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaDestinatarios].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaDestinatarios]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaDestinatarios] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaDestinatarios]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaDestinatarios
   *    *  Objetivo:       Consulta sobre los posibles destinatarios, de acuerdo al archivo a enviar.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 29/07/2010
   *    *
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo  Codigo tipo de archivo.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT DISTINCT i.cod_inst, i.nom_inst, c.cod_casi
      FROM 
         dbo.tblRelTipoArchivoUsuario  AS tau, 
         dbo.tblUsuario  AS u, 
         dbo.tbl_inst  AS i, 
         dbo.tbl_casi  AS c
      WHERE 
         tau.vcCodigoTipoArchivo = @vcCodigoTipoArchivo AND 
         tau.vcCodigoUsuario = u.vcCodigoUsuario AND 
         u.vcCodigoInstitucion = i.cod_inst AND 
         i.cod_inst = c.cod_inst
      ORDER BY i.cod_inst, c.cod_casi
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaFechaHora].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaFechaHora]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaFechaHora] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaFechaHora]
@error varchar(255)  OUTPUT,
   @iCorr int,
   @vcTipoArchivo varchar(3)
AS 
   /*Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.*/
   
   /*
   *   
   *    *  Servicio:       spFT3ConsultaFechaHora
   *    *  Objetivo:       Consulta la fecha y hora de envío y recepción de un archivo recepcionado por la SBIF.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 08/11/2011
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @iCorr          Correlativo
   *    *                  @vcTipoArchivo  Tipo de Archivo
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   SELECT CONVERT(varchar(8), htra.fec_ingr, 112) AS fechaEnvio, CONVERT(varchar(8), htra.fec_ingr, 108) AS horaEnvio, CONVERT(varchar(8), hres.fec_ingr, 112) AS fechaRecepcion, CONVERT(varchar(8), hres.fec_ingr, 108) AS horaRecepcion
   FROM dbo.tbl_hres  AS hres, dbo.tbl_htra  AS htra
   WHERE 
      hres.cor_resc = @iCorr AND 
      hres.nom_msg = @vcTipoArchivo AND 
      hres.nom_arch = htra.nom_arcc AND 
      hres.cas_orig = htra.cas_orig AND 
      hres.cas_dest = htra.cas_dest AND 
      hres.est_resc = 'RR' AND 
      htra.est_traz = '13'
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaInstitucCasilla].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaInstitucCasilla]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaInstitucCasilla] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaInstitucCasilla]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaInstitucCasilla
   *    *  Objetivo:       Consulta instituciones.
   *    *  Autor Creacion: Andrea Zarabia.
   *    *  Fecha Creacion: 18/08/2010
   *   
   *    *  Autor Modifi.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        No hay
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT i.cod_inst AS vcCodigoInstitucion, i.nom_inst AS vc_nom_inst, c.cod_casi, c.usu_cnxn
      FROM dbo.tbl_inst  AS i, dbo.tbl_casi  AS c
      WHERE i.cod_inst = c.cod_inst
      ORDER BY i.nom_inst, c.cod_casi
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaInstitucion].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaInstitucion]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaInstitucion] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaInstitucion]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaInstitucion
   *    *  Objetivo:       Consulta instituciones.
   *    *  Autor Creacion: Andrea Zarabia.
   *    *  Fecha Creacion: 18/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        No hay
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT dbo.tbl_inst.cod_inst AS vcCodigoInstitucion, dbo.tbl_inst.nom_inst AS vc_nom_inst
      FROM dbo.tbl_inst
      ORDER BY dbo.tbl_inst.nom_inst
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaParametro].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaParametro]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaParametro] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaParametro]
@error varchar(255)  OUTPUT,
   @vcCodigoParametro varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaParametro
   *    *  Objetivo:       Consulta uno o todos los parametros.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 29/07/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoParametro  Codigo del parametro.
   *    *
   *    *  Salida:         @error              error de salida
   *    *
   *    *  Comentario:     Si el parametro @vcCodigoParametro viene vacio, se deben devolver todos los registros.
   *
   */
   BEGIN
      IF @vcCodigoParametro != ''
         BEGIN
            SELECT dbo.tblParametro.vcCodigoParametro, dbo.tblParametro.vcDescripcionParametro, dbo.tblParametro.vcValorParametro
            FROM dbo.tblParametro
            WHERE dbo.tblParametro.vcCodigoParametro = @vcCodigoParametro
         END
      ELSE 
         BEGIN
            SELECT dbo.tblParametro.vcCodigoParametro, dbo.tblParametro.vcDescripcionParametro, dbo.tblParametro.vcValorParametro
            FROM dbo.tblParametro
            ORDER BY dbo.tblParametro.vcCodigoParametro
         END
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaPerfiles].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaPerfiles]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaPerfiles] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaPerfiles]
@error  varchar(255) out

/*
 *  Servicio:       spFT3ConsultaPerfiles
 *  Objetivo:       Consulta sobre los perfiles existentes.
 *  Autor Creacin: Andrea Zarabia.
 *  Fecha Creacin: 11/08/2010
 *
 *  Autor Modific.: Alvaro Acevedo S.
 *  Fecha Modific.: 08/11/2011
 *  Motivo        : Este sp solo debe considerar los perfiles 01, 02, 03 y 04.
 *                  La razon es por motivo de la incorporacion del perfil 06.
 *
 *  Autor Modific.: Geronimo Martinez N.
 *  Fecha Modific.: 06/12/2012
 *  Motivo        : Se agrega nuevo codigo de perfil 07: Usuario SAC.
 *
 *  Entrada:        @cod_perf       Codigo del perfil.
 *
 *  Salida:         @error          error de salida
 *                  @vcCodigoPerfil    codigo perfil
 *                  @vcDescripcionPerfil    descripcion perfil
 *
 *  Comentario:     No hay.
 */

as

begin
    select vcCodigoPerfil, vcDescripcionPerfil
    from tblPerfil
    where vcCodigoPerfil in ('01','02','03','04','07')
    order by vcCodigoPerfil
end

if @@rowcount < 1
begin
    select @error = "NO EXISTEN DATOS"
    return 1
end

select @error = ""
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaPerfilPrivilegio].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaPerfilPrivilegio]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaPerfilPrivilegio] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaPerfilPrivilegio]
@error           varchar(255) out,
                                                @vcCodigoPerfil  varchar(2)

/*
 *  Servicio:       spFT3ConsultaPerfilPrivilegio
 *  Objetivo:       Consulta sobre los privilegios y los perfiles relacionados.
 *  Autor Creacion: Andrea Zarabia.
 *  Fecha Creacion: 30/09/2010
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 26/09/2012
 *  Motivo Mod.   : Se incorporan los campos iNivelUrl, vcCodPrivPadre al conjunto resultado.
 *
 *  Entrada:        @vcCodigoPerfil  Codigo del perfil.
 *
 *  Salida:         @error           error de salida
 *
 *
 *  Comentario:     No hay.
 */

as

begin
    select pr.vcCodigoPrivilegio, pr.vcDescripcionPrivilegio, pr.vcDireccionHttp,
      pr.iNivelUrl, pr.vcCodPrivPadre
    from tblPerfil pe, tblRelPrivilegioPerfil rpp, tblPrivilegio pr
    where pe.vcCodigoPerfil      = @vcCodigoPerfil
      and rpp.vcCodigoPrivilegio = pr.vcCodigoPrivilegio
      and rpp.vcCodigoPerfil     = pe.vcCodigoPerfil
    order by pr.vcCodigoPrivilegio
end

if @@rowcount < 1
begin
    select @error = "NO EXISTEN DATOS"
    return 1
end

select @error = ""
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaPrivilegios].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaPrivilegios]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaPrivilegios] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaPrivilegios]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaPrivilegios
   *    *  Objetivo:       Consulta sobre los perfiles existentes.
   *    *  Autor Creacion: Andrea Zarabia.
   *    *  Fecha Creacion: 11/08/2010
   *    *
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        No hay.
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT dbo.tblPrivilegio.vcCodigoPrivilegio, dbo.tblPrivilegio.vcDescripcionPrivilegio, dbo.tblPrivilegio.vcDireccionHttp
      FROM dbo.tblPrivilegio
      ORDER BY dbo.tblPrivilegio.vcCodigoPrivilegio
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaPrivilegiosPerfil].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaPrivilegiosPerfil]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaPrivilegiosPerfil] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaPrivilegiosPerfil]
@error varchar(255)  OUTPUT,
   @vcCodigoPrivilegio varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaPrivilegiosPerfil
   *    *  Objetivo:       Consulta sobre los privilegios y los perfiles relacionados.
   *    *  Autor Creacin: Andrea Zarabia.
   *    *  Fecha Creacin: 30/09/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoPrivilegio    Codigo del privilegio.
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT rpp.vcCodigoPerfil, pe.vcDescripcionPerfil
      FROM dbo.tblRelPrivilegioPerfil  AS rpp, dbo.tblPrivilegio  AS pr, dbo.tblPerfil  AS pe
      WHERE 
         rpp.vcCodigoPrivilegio = @vcCodigoPrivilegio AND 
         pr.vcCodigoPrivilegio = rpp.vcCodigoPrivilegio AND 
         pe.vcCodigoPerfil = rpp.vcCodigoPerfil
      ORDER BY rpp.vcCodigoPerfil
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaPrivilegiosSFT3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaPrivilegiosSFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaPrivilegiosSFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaPrivilegiosSFT3]
@error varchar(255)  OUTPUT
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaPrivilegiosSFT3
   *    *  Objetivo:       Consulta los privilegios del Sistema.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 15/09/2010
   *    *
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        No hay.
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT p.vcDireccionHttp, rpp.vcCodigoPerfil
      FROM dbo.tblPrivilegio  AS p, dbo.tblRelPrivilegioPerfil  AS rpp
      WHERE p.vcCodigoPrivilegio = rpp.vcCodigoPrivilegio
      ORDER BY rpp.vcCodigoPerfil
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaReporteGestion].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaReporteGestion]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaReporteGestion] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaReporteGestion]
@error varchar(255)  OUTPUT,
   @vcFechaConsulta varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaReporteGestion
   *    *  Objetivo:       Consulta las transacciones para generar reportes de gestion.
   *    *  Autor Creación: Alvaro Acevedo Soto
   *    *  Fecha Creación: 25/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcFechaConsulta  Fecha en formato AAAAMM
   *    *
   *    *  Salida:         @error            error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      /*
      *   SSMA warning messages:
      *   S2SS0064: Possibility of mismatch in LIKE operator behavior.
      */

      SELECT ti.cod_inst, isnull(sum(te.iRegistrosEnviados), 0) AS sumatoria, count(te.vcCodigoTipoArchivo) AS contar, ta.vcCodigoTipoArchivo
      FROM 
         dbo.tblTipoArchivo  AS ta 
            CROSS JOIN dbo.tbl_inst  AS ti 
            LEFT OUTER JOIN dbo.tblTransEnvio  AS te 
            ON 
               te.vcCodigoTipoArchivo = ta.vcCodigoTipoArchivo AND 
               te.vcCodigoInstitucionOrigen = ti.cod_inst AND 
               te.vcFechaEnvio LIKE rtrim(@vcFechaConsulta + '%')
      GROUP BY ti.cod_inst, ta.vcCodigoTipoArchivo
       UNION ALL
      /*
      *   SSMA warning messages:
      *   S2SS0064: Possibility of mismatch in LIKE operator behavior.
      */

      SELECT ti.cod_inst, isnull(sum(tr.iRegistrosEnviados), 0) AS sumatoria, count(tr.vcCodigoTipoArchivo) AS contar, ta.vcCodigoTipoArchivo
      FROM 
         dbo.tblTipoArchivo  AS ta 
            CROSS JOIN dbo.tbl_inst  AS ti 
            LEFT OUTER JOIN dbo.tblTransRespuesta  AS tr 
            ON 
               tr.vcCodigoTipoArchivo = ta.vcCodigoTipoArchivo AND 
               tr.vcCodigoInstitucionOrigen = ti.cod_inst AND 
               tr.vcFechaEnvio LIKE rtrim(@vcFechaConsulta + '%')
      GROUP BY ti.cod_inst, ta.vcCodigoTipoArchivo
      ORDER BY 1, 4

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTipoArchivo].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTipoArchivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTipoArchivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTipoArchivo]
@error            varchar(255) out,
                                           @vcCodigoUsuario  varchar(15)

/*
 *  Servicio:       spFT3ConsultaTipoArchivo
 *  Objetivo:       Consulta sobre los tipos de archivos disponibles, de acuerdo a un usuario.
 *  Autor Creaci≤n: Alvaro Acevedo S.
 *  Fecha Creaci≤n: 29/07/2010

 *  Autor Modific.:
 *  Fecha Modific.:
 *
 *  Entrada:        @vcCodigoUsuario  Codigo del usua.
 *
 *  Salida:         @error            error de salida
 *
 *  Comentario:     No hay.
 */

as

begin
    select ta.vcCodigoTipoArchivo, ta.iNumeroRespuestas, ta.vcFormatoNombreArchivo, ta.vcModoTransferencia,
           ta.iLargoRegistroArchivo
    from tblRelTipoArchivoUsuario rtu, tblTipoArchivo ta
    where rtu.vcCodigoUsuario = @vcCodigoUsuario
      and rtu.vcCodigoTipoArchivo = ta.vcCodigoTipoArchivo
      and rtu.vcTratoArchivo in ('1','3')
end

if @@rowcount < 1
begin
    select @error = "NO EXISTEN DATOS"
    return 1
end

select @error = ""
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTipoArchivoUsua].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTipoArchivoUsua]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTipoArchivoUsua] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTipoArchivoUsua]
@error            varchar(255) out,
                                               @vcCodigoUsuario  varchar(15)

/*
 *  Servicio:       spFT3ConsultaTipoArchivoUsua
 *  Objetivo:       Consulta sobre los tipos de archivos existentes de acuerdo a un codigo de usuario.
 *  Autor Creaci≤n: Andrea Zarabia.
 *  Fecha Creaci≤n: 13/10/2010

 *  Autor Modific.:
 *  Fecha Modific.:
 *
 *  Entrada:        @vcCodigoUsuario  Codigo de Usuario.
 *
 *  Salida:         @error            error de salida
 *
 *
 *  Comentario:     No hay.
 */

as

begin
    if (@vcCodigoUsuario = '')
    begin
        select vcCodigoUsuario, vcCodigoTipoArchivo, vcTratoArchivo
        from tblRelTipoArchivoUsuario
    end
    else
    begin
        select vcCodigoUsuario, vcCodigoTipoArchivo, vcTratoArchivo
        from tblRelTipoArchivoUsuario
        where vcCodigoUsuario = @vcCodigoUsuario
    end

if @@rowcount < 1
begin
    select @error = "NO EXISTEN DATOS"
    return 1
end

select @error = ""
return 0

end
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTransHistorica].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTransHistorica]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTransHistorica] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTransHistorica]
@error                       varchar(255) out,
                                              @vcCodigoPerfil              varchar(2),
                                              @vcCodigoInstitucionDestino  varchar(4),
                                              @vcCodigoCasilla             varchar(8),
                                              @vcCodigoUsuario             varchar(15),
                                              @vcFechaInicio               varchar(8),
                                              @vcFechaFin                  varchar(8)

/*
 *  Servicio:       spFT3ConsultaTransHistorica
 *  Objetivo:       Consulta las transacciones historicas.
 *  Autor Creación: Andrea Zarabia.
 *  Fecha Creación: 25/08/2010
 *
 *  Autor Modific.: Alvaro Acevedo Soto
 *  Fecha Modific.: 21/11/2011
 *  Motivo:         Eliminar duplicados.
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 25/09/2012
 *  Motivo Modifi.: Se incorporar el campo vcTicket al conjunto resultado, además se incorpora el perfil 07.
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 21/06/2013
 *  Motivo Modifi.: Incorpora el valor del ticket en el despliegue de los informes.
 *
 *  Entrada:        @vcCodigoPerfil    Codigo Perfil
 *                  @vcCodigoInstitucionDestino    Codigo Institucion.
 *                  @vcCodigoCasilla    Codigo Casilla.
 *                  @vcCodigoUsuario Codigo del usuario
 *                  @vcFechaInicio     Fecha Inicio de Consulta
 *                  @vcFechaFin     Fecha Final de Consulta
 *
 *
 *  Salida:         @error          error de salida
 *
 *  Comentario:     No hay.
 */

as

begin

    if (@vcCodigoPerfil = '01')
    begin
        --Caso en el que la inst. envia archivo y no necesita respuesta (listado como enviado)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, '-' as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta, tblRelTipoArchivoUsuario tau
        where te.vcFechaEnvio              >= @vcFechaInicio
          and te.vcFechaEnvio              <= @vcFechaFin
          and te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
          and te.vcCodigoInstitucionDestino = '0770'
          and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
          and te.vcCodigoTipoArchivo        = tau.vcCodigoTipoArchivo
          and te.vcUsuarioEnvio             = @vcCodigoUsuario
          and te.vcEstadoEnvio              = '2'
          and te.vcUsuarioEnvio             = tau.vcCodigoUsuario
          and ta.iNumeroRespuestas          = 0

        union all

        --Caso en el que la inst. envia archivo y no recibira respuesta (listado como enviado)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, '-' as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblRelTipoArchivoUsuario tau
        where te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcCodigoInstitucionOrigen   = @vcCodigoInstitucionDestino
          and te.vcCodigoInstitucionDestino <> '0770'
          and te.vcCodigoTipoArchivo         = tau.vcCodigoTipoArchivo
          and te.vcEstadoEnvio               = '2'
          and te.vcUsuarioEnvio              = tau.vcCodigoUsuario
          and tau.vcCodigoUsuario            = @vcCodigoUsuario

        union all

        --Caso en el que la inst. envia archivo, y faltan todos los recibos de respuesta (listado como enviado)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, 'Pendiente' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, '-' as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta, tblRelTipoArchivoUsuario tau
        where te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcCodigoInstitucionOrigen   = @vcCodigoInstitucionDestino
          and te.vcCodigoInstitucionDestino  = '0770'
          and te.vcCodigoTipoArchivo         = ta.vcCodigoTipoArchivo
          and te.vcCodigoTipoArchivo         = tau.vcCodigoTipoArchivo
          and te.vcUsuarioEnvio              = @vcCodigoUsuario
          and te.vcEstadoEnvio               = '2'
--**          and te.vcEstadoRescate             = null
          and te.vcEstadoRescate             is null	--** Modif.: 16-11-2012 EBICYS.com
          and te.vcUsuarioEnvio              = tau.vcCodigoUsuario
          and ta.iNumeroRespuestas           > 0
          and tau.vcCodigoUsuario            = @vcCodigoUsuario

        union all

        --Caso en el que la inst. envia archivo, y faltan recibos de respuesta (listado como enviado)
        --Modificado: 09-05-2012 EBICYS Ltda. Autor: PBLRS.
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados, 
               'Pendiente' as vc_estado, 
               '-' as vc_fec_resp, 
               '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 
               'E' as vc_tipo_envio, 
               '-' as vcUsuarioEnvio, 
               count(tr.vcFechaEnvioFK),
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
          from tblTransEnvio te, 
               tblTransRespuesta tr, 
               tblTipoArchivo ta, 
               tblRelTipoArchivoUsuario tau
         where te.vcFechaEnvio               >= @vcFechaInicio
           and te.vcFechaEnvio               <= @vcFechaFin
           and te.vcFechaEnvio                = tr.vcFechaEnvioFK
           and te.vcHoraEnvio                 = tr.vcHoraEnvioFK
           and te.vcCodigoInstitucionOrigen   = @vcCodigoInstitucionDestino
           and te.vcCodigoInstitucionOrigen   = tr.vcCodigoInstitucionOrigenFK
           and te.vcCodigoInstitucionDestino  = '0770'
           and te.vcCodigoInstitucionDestino  = tr.vcCodigoInstitucionDestinoFK
           and te.vcCodigoCasilla             = tr.vcCodigoCasillaFK
           and te.vcCodigoTipoArchivo         = tr.vcCodigoTipoArchivoFK
           and te.vcNombreArchivo             = tr.vcNombreArchivoFK
           and te.vcUsuarioEnvio              = @vcCodigoUsuario
           and te.vcEstadoEnvio               = '2'
           and te.vcEstadoRescate             = '1'
           and tr.vcEstadoEnvio              <> '2'
           and te.vcUsuarioEnvio              = tau.vcCodigoUsuario
           and te.vcCodigoTipoArchivo         = ta.vcCodigoTipoArchivo
           and te.vcCodigoTipoArchivo         = tau.vcCodigoTipoArchivo
           and tr.vcCodigoInstitucionOrigen   = '0770'
           and tr.vcCodigoInstitucionDestino  = @vcCodigoInstitucionDestino
           and tr.vcCodigoCasilla             = @vcCodigoCasilla
           and ta.iNumeroRespuestas           > 0
           and tau.vcCodigoUsuario            = @vcCodigoUsuario
      group by tr.vcFechaEnvioFK, 
               tr.vcHoraEnvioFK, 
               tr.vcCodigoInstitucionOrigenFK,
               tr.vcCodigoInstitucionDestinoFK, 
               tr.vcCodigoCasillaFK, 
               tr.vcCodigoTipoArchivoFK, 
               tr.vcNombreArchivoFK,
               te.vcFechaEnvio, 
               te.vcHoraEnvio,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados,
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
        having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo
                  and iNumeroRespuestas > 0) > count(tr.vcFechaEnvioFK)

        union all

        --Caso en el que la inst. envia archivo y no faltan recibos de respuesta (listado como enviado)
        --Modificado: 09-05-2012 EBICYS Ltda. Autor: PBLRS.
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados, 
               'Respondido' as vc_estado, 
               tr.vcFechaEnvio as vc_fec_resp,
               tr.vcHoraEnvio as vc_hor_resp, 
               '-' as vcNombreArchivo_resp, 
               'E' as vc_tipo_envio, 
               '-' as vcUsuarioEnvio,
               count(tr.vcFechaEnvioFK), 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
          from tblTransEnvio te, 
               tblTransRespuesta tr, 
               tblTipoArchivo ta, 
               tblRelTipoArchivoUsuario tau
         where te.vcFechaEnvio               >= @vcFechaInicio
           and te.vcFechaEnvio               <= @vcFechaFin
           and te.vcFechaEnvio                = tr.vcFechaEnvioFK
           and te.vcHoraEnvio                 = tr.vcHoraEnvioFK
           and te.vcCodigoInstitucionOrigen   = @vcCodigoInstitucionDestino
           and te.vcCodigoInstitucionOrigen   = tr.vcCodigoInstitucionOrigenFK
           and te.vcCodigoInstitucionDestino  = '0770'
           and te.vcCodigoInstitucionDestino  = tr.vcCodigoInstitucionDestinoFK
           and te.vcCodigoCasilla             = tr.vcCodigoCasillaFK
           and te.vcCodigoTipoArchivo         = tr.vcCodigoTipoArchivoFK
           and te.vcNombreArchivo             = tr.vcNombreArchivoFK
           and te.vcUsuarioEnvio              = @vcCodigoUsuario
           and te.vcEstadoEnvio               = '2'
           and te.vcEstadoRescate             = '1'
           and tr.vcEstadoEnvio               = '2'
           and te.vcUsuarioEnvio              = tau.vcCodigoUsuario
           and te.vcCodigoTipoArchivo         = tau.vcCodigoTipoArchivo
           and te.vcCodigoTipoArchivo         = ta.vcCodigoTipoArchivo
           and tr.vcCodigoInstitucionOrigen   = '0770'
           and tr.vcCodigoInstitucionDestino  = @vcCodigoInstitucionDestino
           and tr.vcCodigoCasilla             = @vcCodigoCasilla
           and ta.iNumeroRespuestas           > 0
           and tau.vcCodigoUsuario            = @vcCodigoUsuario
      group by te.vcFechaEnvio, 
               te.vcHoraEnvio,
               te.vcCodigoInstitucionDestino,
               te.vcCodigoTipoArchivo,
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal,
               te.iRegistrosEnviados,
               tr.vcFechaEnvio,
               tr.vcHoraEnvio,
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)

        union all

        --Caso en el que la inst. recibe archivo como respuesta
        select tr.vcFechaEnvio, tr.vcHoraEnvio, 'Recibido' as vc_tipo_trans,
               tr.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, tr.vcCodigoTipoArchivo, tr.vcNombreArchivo,
               tr.vcNombreArchivoOriginal, tr.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               tr.vcNombreArchivoFK as vcNombreArchivo_resp, 'R' as vc_tipo_envio, '-' as vcUsuarioEnvio, 0, 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
        from tblTransRespuesta tr, tblTransEnvio te, tblRelTipoArchivoUsuario tau
        where tr.vcCodigoInstitucionOrigen     = '0770'
          and tr.vcCodigoInstitucionDestino    = @vcCodigoInstitucionDestino
          and tr.vcFechaEnvio                 >= @vcFechaInicio
          and tr.vcFechaEnvio                 <= @vcFechaFin
          and tr.vcEstadoEnvio                 = '2'
          and tr.vcEstadoRescate               = '1'
          and tr.vcUsuarioEnvio                = tau.vcCodigoUsuario
          and tr.vcCodigoTipoArchivo           = tau.vcCodigoTipoArchivo
          and tau.vcCodigoUsuario              = @vcCodigoUsuario
          and tr.vcFechaEnvioFK                = te.vcFechaEnvio
          and tr.vcHoraEnvioFK                 = te.vcHoraEnvio
          and tr.vcCodigoInstitucionOrigenFK   = te.vcCodigoInstitucionOrigen
          and tr.vcCodigoInstitucionDestinoFK  = te.vcCodigoInstitucionDestino
          and tr.vcCodigoCasillaFK             = te.vcCodigoCasilla
          and tr.vcCodigoTipoArchivoFK         = te.vcCodigoTipoArchivo
          and tr.vcNombreArchivoFK             = te.vcNombreArchivo

        union all

        --Caso en el que la inst. recibe archivo
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Recibido' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioRescate as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblRelTipoArchivoUsuario tau
        where te.vcCodigoInstitucionDestino  = @vcCodigoInstitucionDestino
          and te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcEstadoEnvio               = '2'
          and te.vcEstadoRescate             = '1'
          and te.vcUsuarioEnvio              = tau.vcCodigoUsuario
          and te.vcCodigoTipoArchivo         = tau.vcCodigoTipoArchivo
          and tau.vcCodigoUsuario            = @vcCodigoUsuario

        order by 1 desc, 2 desc, 6 desc
    end

    if (@vcCodigoPerfil = '02')
    begin
        --Caso en el que la inst. envia archivo y no necesita respuesta (listado como enviado)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioEnvio as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta
        where te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
          and te.vcCodigoInstitucionDestino = '0770'
          and te.vcFechaEnvio              >= @vcFechaInicio
          and te.vcFechaEnvio              <= @vcFechaFin
          and te.vcEstadoEnvio              = '2'
          and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
          and ta.iNumeroRespuestas          = 0

        union all

        --Caso en el que la inst. envia archivo y no recibira respuesta (listado como enviado)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioEnvio as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta
        where te.vcCodigoInstitucionOrigen   = @vcCodigoInstitucionDestino
          and te.vcCodigoInstitucionDestino <> '0770'
          and te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcEstadoEnvio               = '2'
          and ta.vcCodigoTipoArchivo         = te.vcCodigoTipoArchivo

        union all

        --Caso en el que la inst. envia archivo y faltan todos los recibos de respuesta (listado como enviado)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, 'Pendiente' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioEnvio as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta
        where te.vcCodigoInstitucionOrigen   = @vcCodigoInstitucionDestino
          and te.vcCodigoInstitucionDestino  = '0770'
          and te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcEstadoEnvio               = '2'
--**          and te.vcEstadoRescate             = null
          and te.vcEstadoRescate             is null    --** Modif.: 16-11-2012 EBICYS.com
          and te.vcCodigoTipoArchivo         = ta.vcCodigoTipoArchivo
          and ta.iNumeroRespuestas           > 0

        union all

        --Caso en el que la inst. envia archivo y faltan recibos de respuesta (listado como enviado)
        --Modificado: 09-05-2012 EBICYS Ltda. Autor: PBLRS.
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados, 
               'Pendiente' as vc_estado, 
               '-' as vc_fec_resp, 
               '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 
               'E' as vc_tipo_envio, 
               te.vcUsuarioEnvio as vcUsuarioEnvio, 
               count(tr.vcFechaEnvioFK), 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
          from tblTransEnvio te, 
               tblTipoArchivo ta, 
               tblTransRespuesta tr
         where te.vcCodigoInstitucionOrigen     = @vcCodigoInstitucionDestino
           and te.vcCodigoInstitucionDestino    = '0770'
           and te.vcFechaEnvio                 >= @vcFechaInicio
           and te.vcFechaEnvio                 <= @vcFechaFin
           and te.vcEstadoEnvio                 = '2'
           and te.vcEstadoRescate               = '1'
           and tr.vcEstadoEnvio                <> '2'
           and te.vcCodigoTipoArchivo           = ta.vcCodigoTipoArchivo
           and ta.iNumeroRespuestas             > 0
           and tr.vcFechaEnvioFK                = te.vcFechaEnvio
           and tr.vcHoraEnvioFK                 = te.vcHoraEnvio
           and tr.vcCodigoInstitucionOrigenFK   = te.vcCodigoInstitucionOrigen
           and tr.vcCodigoInstitucionDestinoFK  = te.vcCodigoInstitucionDestino
           and tr.vcCodigoCasillaFK             = te.vcCodigoCasilla
           and tr.vcCodigoTipoArchivoFK         = te.vcCodigoTipoArchivo
           and tr.vcNombreArchivoFK             = te.vcNombreArchivo
           and tr.vcCodigoInstitucionOrigen     = '0770'
           and tr.vcCodigoInstitucionDestino    = @vcCodigoInstitucionDestino
      group by te.vcFechaEnvio, 
               te.vcHoraEnvio,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados,
               te.vcUsuarioEnvio,
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
       having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo
                  and iNumeroRespuestas > 0) > count(tr.vcFechaEnvioFK)

        union all

        --Caso en el que la inst. envia archivo y no faltan recibos de respuesta (listado como enviado)
        --Modificado: 09-05-2012 EBICYS Ltda. Autor: PBLRS.
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados, 
               'Respondido' as vc_estado, 
               tr.vcFechaEnvio as vc_fec_resp,
               tr.vcHoraEnvio as vc_hor_resp, 
               tr.vcNombreArchivo as vcNombreArchivo_resp, 
               'E' as vc_tipo_envio,
               te.vcUsuarioEnvio as vcUsuarioEnvio, 
               count(tr.vcFechaEnvioFK), 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
          from tblTransEnvio te, 
               tblTipoArchivo ta, 
               tblTransRespuesta tr
         where te.vcCodigoInstitucionOrigen        = @vcCodigoInstitucionDestino
           and te.vcCodigoInstitucionDestino       = '0770'
           and te.vcFechaEnvio                    >= @vcFechaInicio
           and te.vcFechaEnvio                    <= @vcFechaFin
           and te.vcEstadoEnvio                    = '2'
           and te.vcEstadoRescate                  = '1'
           and tr.vcEstadoEnvio                    = '2'
           and te.vcFechaEnvio                     = tr.vcFechaEnvioFK
           and te.vcHoraEnvio                      = tr.vcHoraEnvioFK
           and te.vcCodigoInstitucionOrigen        = tr.vcCodigoInstitucionOrigenFK
           and te.vcCodigoInstitucionDestino       = tr.vcCodigoInstitucionDestinoFK
           and te.vcCodigoCasilla                  = tr.vcCodigoCasillaFK
           and te.vcCodigoTipoArchivo              = tr.vcCodigoTipoArchivoFK
           and te.vcNombreArchivo                  = tr.vcNombreArchivoFK
           and te.vcCodigoTipoArchivo              = ta.vcCodigoTipoArchivo
           and ta.iNumeroRespuestas                > 0
           and tr.vcCodigoInstitucionOrigen        = '0770'
           and tr.vcCodigoInstitucionDestino       = @vcCodigoInstitucionDestino
      group by te.vcFechaEnvio, 
               te.vcHoraEnvio,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados,
               tr.vcFechaEnvio, 
               tr.vcHoraEnvio, 
               tr.vcNombreArchivo,
               te.vcUsuarioEnvio,
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)

        union all

        --Caso en el que la inst. recibe archivo como respuesta
        select tr.vcFechaEnvio, tr.vcHoraEnvio, 'Recibido' as vc_tipo_trans,
               tr.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, tr.vcCodigoTipoArchivo, tr.vcNombreArchivo,
               tr.vcNombreArchivoOriginal, tr.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               tr.vcNombreArchivoFK as vcNombreArchivo_resp, 'R' as vc_tipo_envio, tr.vcUsuarioRescate as vcUsuarioEnvio, 0, 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
        from tblTransRespuesta tr, tblTransEnvio te
        where tr.vcCodigoInstitucionOrigen     = '0770'
          and tr.vcCodigoInstitucionDestino    = @vcCodigoInstitucionDestino
          and tr.vcFechaEnvio                 >= @vcFechaInicio
          and tr.vcFechaEnvio                 <= @vcFechaFin
          and tr.vcEstadoEnvio                 = '2'
          and tr.vcEstadoRescate               = '1'
          and tr.vcFechaEnvioFK                = te.vcFechaEnvio
          and tr.vcHoraEnvioFK                 = te.vcHoraEnvio
          and tr.vcCodigoInstitucionOrigenFK   = te.vcCodigoInstitucionOrigen
          and tr.vcCodigoInstitucionDestinoFK  = te.vcCodigoInstitucionDestino
          and tr.vcCodigoCasillaFK             = te.vcCodigoCasilla
          and tr.vcCodigoTipoArchivoFK         = te.vcCodigoTipoArchivo
          and tr.vcNombreArchivoFK             = te.vcNombreArchivo

        union all

        --Caso en el que la inst. recibe archivo
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Recibido' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioRescate as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te
        where te.vcCodigoInstitucionDestino  = @vcCodigoInstitucionDestino
          and te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcEstadoEnvio               = '2'
          and te.vcEstadoRescate             = '1'

        order by 1 desc, 2 desc, 6 desc

    end

    if ((@vcCodigoPerfil = '03') or (@vcCodigoPerfil = '07'))
    begin
        --Caso en el que la inst. 0770 envia archivo y no recibira respuesta (aunque la necesite)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioEnvio as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te
        where te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
          and te.vcFechaEnvio              >= @vcFechaInicio
          and te.vcFechaEnvio              <= @vcFechaFin
          and te.vcEstadoEnvio              = '2'

        union all

        --Caso en el que la inst. 0770 envia archivo como respuesta (listado como enviado)
        select tr.vcFechaEnvio, tr.vcHoraEnvio, 'Enviado' as vc_tipo_trans,
               tr.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, tr.vcCodigoTipoArchivo, tr.vcNombreArchivo,
               tr.vcNombreArchivoOriginal, tr.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               tr.vcNombreArchivoFK as vcNombreArchivo_resp, 'R' as vc_tipo_envio, te.vcUsuarioEnvio as vcUsuarioEnvio, 0, 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
        from tblTransRespuesta tr, tblTransEnvio te
        where tr.vcCodigoInstitucionOrigen     = @vcCodigoInstitucionDestino
          and tr.vcFechaEnvio                 >= @vcFechaInicio
          and tr.vcFechaEnvio                 <= @vcFechaFin
          and tr.vcEstadoEnvio                 = '2'
          and tr.vcFechaEnvioFK                = te.vcFechaEnvio
          and tr.vcHoraEnvioFK                 = te.vcHoraEnvio
          and tr.vcCodigoInstitucionOrigenFK   = te.vcCodigoInstitucionOrigen
          and tr.vcCodigoInstitucionDestinoFK  = te.vcCodigoInstitucionDestino
          and tr.vcCodigoCasillaFK             = te.vcCodigoCasilla
          and tr.vcCodigoTipoArchivoFK         = te.vcCodigoTipoArchivo
          and tr.vcNombreArchivoFK             = te.vcNombreArchivo

        union all

        --Caso en el que la inst. 0770 recibe archivo y no necesita respuesta (listado como recibido)
        select te.vcFechaEnvio, te.vcHoraEnvio, 'Recibido' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, '-' as vc_estado, '-' as vc_fec_resp, '-' as vc_hor_resp,
               '-' as vcNombreArchivo_resp, 'E' as vc_tipo_envio, te.vcUsuarioRescate as vcUsuarioEnvio, 0, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta
        where te.vcCodigoInstitucionDestino  = @vcCodigoInstitucionDestino
          and te.vcFechaEnvio               >= @vcFechaInicio
          and te.vcFechaEnvio               <= @vcFechaFin
          and te.vcEstadoEnvio               = '2'
          and te.vcEstadoRescate             = '1'
          and te.vcCodigoTipoArchivo         = ta.vcCodigoTipoArchivo
          and ta.iNumeroRespuestas           = 0

        union all

        --Caso en el que la inst. 0770 envia archivo como respuesta, pero quedan pendientes
        --Modificado: 09-05-2012 EBICYS Ltda. Autor: PBLRS.
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               'Recibido' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados, 
               'Pendiente' as vc_estado, 
               '-' as vc_fec_resp,
               '-' as vc_hor_resp, 
               '-' as vcNombreArchivo_resp, 
               'R' as vc_tipo_envio, 
               te.vcUsuarioRescate as vcUsuarioEnvio,
               count(tr.vcFechaEnvioFK), 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
          from tblTransEnvio te, 
               tblTipoArchivo ta, 
               tblTransRespuesta tr
         where te.vcCodigoInstitucionDestino    = @vcCodigoInstitucionDestino
           and te.vcFechaEnvio                 >= @vcFechaInicio
           and te.vcFechaEnvio                 <= @vcFechaFin
           and te.vcEstadoEnvio                 = '2'
           and te.vcEstadoRescate               = '1'
           and tr.vcEstadoEnvio                <> '2'
           and te.vcCodigoTipoArchivo           = ta.vcCodigoTipoArchivo
           and ta.iNumeroRespuestas             > 0
           and tr.vcFechaEnvioFK                = te.vcFechaEnvio
           and tr.vcHoraEnvioFK                 = te.vcHoraEnvio
           and tr.vcCodigoInstitucionOrigenFK   = te.vcCodigoInstitucionOrigen
           and tr.vcCodigoInstitucionDestinoFK  = te.vcCodigoInstitucionDestino
           and tr.vcCodigoCasillaFK             = te.vcCodigoCasilla
           and tr.vcCodigoTipoArchivoFK         = te.vcCodigoTipoArchivo
           and tr.vcNombreArchivoFK             = te.vcNombreArchivo
           and tr.vcCodigoInstitucionOrigen     = @vcCodigoInstitucionDestino
      group by te.vcFechaEnvio, 
               te.vcHoraEnvio,
               te.vcCodigoInstitucionDestino,
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados,
               te.vcUsuarioRescate,
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
        having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo
                  and iNumeroRespuestas > 0) > count(tr.vcFechaEnvioFK)

        union all

        --Caso en el que la inst. 0770 recibe archivo y envia todas las respuestas (sin pendientes y listado como recibido)
        --Modificado: 09-05-2012 EBICYS Ltda. Autor: PBLRS.
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               'Recibido' as vc_tipo_trans,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados, 
               'Respondido' as vc_estado, 
               tr.vcFechaEnvio as vc_fec_resp,
               tr.vcHoraEnvio as vc_hor_resp, 
               '-' as vcNombreArchivo_resp, 
               'R' as vc_tipo_envio,
               tr.vcUsuarioEnvio as vcUsuarioEnvio, 
               count(tr.vcFechaEnvioFK), 
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
          from tblTransEnvio te, 
               tblTipoArchivo ta, 
               tblTransRespuesta tr
         where te.vcCodigoInstitucionDestino       = @vcCodigoInstitucionDestino
           and te.vcFechaEnvio                    >= @vcFechaInicio
           and te.vcFechaEnvio                    <= @vcFechaFin
           and te.vcEstadoEnvio                    = '2'
           and te.vcEstadoRescate                  = '1'
           and tr.vcEstadoEnvio                    = '2'
           and te.vcFechaEnvio                     = tr.vcFechaEnvioFK
           and te.vcHoraEnvio                      = tr.vcHoraEnvioFK
           and te.vcCodigoInstitucionOrigen        = tr.vcCodigoInstitucionOrigenFK
           and te.vcCodigoInstitucionDestino       = tr.vcCodigoInstitucionDestinoFK
           and te.vcCodigoCasilla                  = tr.vcCodigoCasillaFK
           and te.vcCodigoTipoArchivo              = tr.vcCodigoTipoArchivoFK
           and te.vcNombreArchivo                  = tr.vcNombreArchivoFK
           and te.vcCodigoTipoArchivo              = ta.vcCodigoTipoArchivo
           and ta.iNumeroRespuestas                > 0
           and tr.vcCodigoInstitucionOrigen        = @vcCodigoInstitucionDestino
      group by te.vcFechaEnvio, 
               te.vcHoraEnvio,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               te.iRegistrosEnviados,
               tr.vcFechaEnvio, 
               tr.vcHoraEnvio, 
               tr.vcUsuarioEnvio,
               (CASE WHEN te.vcTicket IS NULL THEN tr.vcTicket ELSE te.vcTicket END)
        order by 1 desc, 2 desc, 6 desc

    end

    if @@rowcount < 1
    begin
        select @error = 'NO EXISTEN DATOS'
        return 1
    end
    
    select @error = ''
    return 0

end
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTransHistoricaFT3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTransHistoricaFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTransHistoricaFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTransHistoricaFT3]
@error varchar(255)  OUTPUT,
   @vcCodigoPerfil varchar(2),
   @vcCodigoInstitucionDestino varchar(4),
   @vcCodigoCasilla varchar(8),
   @vcCodigoUsuario varchar(15),
   @vcFechaInicio varchar(8),
   @vcFechaFin varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaTransHistoricaFT3
   *    *  Objetivo:       Consulta las transacciones historicas de la tabla tbl_tarc.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 25/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoPerfil              Codigo Perfil
   *    *                  @vcCodigoInstitucionDestino  Codigo Institucion.
   *    *                  @vcCodigoCasilla             Codigo Casilla.
   *    *                  @vcCodigoUsuario             Codigo Usuario.
   *    *                  @vcFechaInicio               Fecha Inicio de Consulta
   *    *                  @vcFechaFin                  Fecha Final de Consulta
   *    *
   *    *
   *    *  Salida:         @error                       error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   DECLARE
      @dFechaAux datetime2(3)
   BEGIN

      SELECT @dFechaAux = CONVERT(datetime2(3), @vcFechaFin)

      SELECT @dFechaAux = dateadd(day, 1, @dFechaAux)

      SELECT @vcFechaFin = CONVERT(varchar(8), @dFechaAux, 112)

      
      /*
      *   ****TBL_TARC****
      *   Caso en el que la inst. xxxx envia archivo de forma manual
      */
      SELECT 
         CONVERT(varchar(8), e.fec_rece, 112) AS vcFechaEnvio, 
         right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, e.fec_rece))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, e.fec_rece))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, e.fec_rece))), ''), 2) AS vcHoraEnvio, 
         'Enviado' AS vc_tipo_trans, 
         c.cod_inst AS vcCodigoInstitucionDestino, 
         '-' AS vcCodigoTipoArchivo, 
         e.nom_arcc AS vcNombreArchivo, 
         e.nom_arre AS vcNombreArchivoOriginal, 
         0 AS iRegistrosEnviados, 
         '-' AS vc_estado, 
         '-' AS vc_fec_resp, 
         '-' AS vc_hor_resp, 
         '-' AS vcNombreArchivo_resp, 
         'M' AS vc_tipo_envio, 
         '-' AS vcUsuarioEnvio
      FROM dbo.tbl_tarc  AS e, dbo.tbl_casi  AS c
      WHERE 
         e.cas_orig = @vcCodigoCasilla AND 
         e.fec_rece >= @vcFechaInicio AND 
         e.fec_rece < @vcFechaFin AND 
         e.est_traz IN ( '13', '17' ) AND 
         c.cod_casi = e.cas_dest
       UNION
      /*Caso en el que la inst. xxxx recibe archivo de forma manual*/
      SELECT 
         CONVERT(varchar(8), e.fec_rece, 112) AS vcFechaEnvio, 
         right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, e.fec_rece))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, e.fec_rece))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, e.fec_rece))), ''), 2) AS vcHoraEnvio, 
         'Recibido' AS vc_tipo_trans, 
         c.cod_inst AS vcCodigoInstitucionDestino, 
         '-' AS vcCodigoTipoArchivo, 
         e.nom_arcc AS vcNombreArchivo, 
         e.nom_arre AS vcNombreArchivoOriginal, 
         0 AS iRegistrosEnviados, 
         '-' AS vc_estado, 
         '-' AS vc_fec_resp, 
         '-' AS vc_hor_resp, 
         '-' AS vcNombreArchivo_resp, 
         'M' AS vc_tipo_envio, 
         d.vcUsuarioRescate AS vcUsuarioEnvio
      FROM dbo.tbl_tarc  AS e, dbo.tbl_casi  AS c, dbo.tblTransDescarga  AS d
      WHERE 
         e.cas_dest = @vcCodigoCasilla AND 
         e.fec_rece >= @vcFechaInicio AND 
         e.fec_rece < @vcFechaFin AND 
         e.est_traz = '17' AND 
         c.cod_casi = e.cas_orig AND 
         d.vcCasillaDestino = e.cas_dest AND 
         d.vcNombreArchivo = e.nom_arcc
       UNION
      /*Caso en el que la inst. xxxx recibe archivo de forma automatica*/
      SELECT 
         CONVERT(varchar(8), e.fec_rece, 112) AS vcFechaEnvio, 
         right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, e.fec_rece))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, e.fec_rece))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, e.fec_rece))), ''), 2) AS vcHoraEnvio, 
         'Recibido' AS vc_tipo_trans, 
         c.cod_inst AS vcCodigoInstitucionDestino, 
         '-' AS vcCodigoTipoArchivo, 
         e.nom_arcc AS vcNombreArchivo, 
         e.nom_arre AS vcNombreArchivoOriginal, 
         0 AS iRegistrosEnviados, 
         '-' AS vc_estado, 
         '-' AS vc_fec_resp, 
         '-' AS vc_hor_resp, 
         '-' AS vcNombreArchivo_resp, 
         'M' AS vc_tipo_envio, 
         '-' AS vcUsuarioEnvio
      FROM dbo.tbl_tarc  AS e, dbo.tbl_casi  AS c
      WHERE 
         e.cas_dest = @vcCodigoCasilla AND 
         e.fec_rece >= @vcFechaInicio AND 
         e.fec_rece < @vcFechaFin AND 
         e.est_traz = '17' AND 
         c.cod_casi = e.cas_orig AND 
         e.nom_arcc NOT IN 
         (
            SELECT d.vcNombreArchivo
            FROM dbo.tblTransDescarga  AS d
         )
      ORDER BY 1 DESC, 2 DESC, 6 DESC

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTransPendienteFT3].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTransPendienteFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTransPendienteFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTransPendienteFT3]
@error            varchar(255) out,
                                                 @vcCodigoCasilla  varchar(8),
                                                 @vcCodigoUsuario  varchar(15),
                                                 @vcTipoConsulta   varchar(1)

/*
 *  Servicio:       spFT3ConsultaTransPendienteFT3
 *  Objetivo:       Consulta las transacciones pendientes de rescate del sistema FT3.
 *  Autor Creación: Alvaro Acevedo.
 *  Fecha Creación: 27/09/2010

 *  Autor Modific.: G.Martinez
 *  Fecha Modific.: 30/05/2013
 *  Observacion   : Se restringe para los usuarios que tipo envio de archivos, para lo 
 *                  cual se agrega el parametro de entrada vcCodigoUsuario.
 *
 *  Fecha Modific.: 03/06/2013
 *  Observacion   : Se incorpora parametro @vcTipoConsulta en llamada SP. 
 *  
 *  Entrada:        @vcCodigoCasilla  Codigo Casilla.
 *                  @vcCodigoUsuario  Codigo de Usuario.
 *                  @vcTipoConsulta   Tipo de consulta a realizar para descarga o generación de informes.
 *
 *  Salida:         @error           error de salida
 *
 *  Comentario:     No hay.
 */

as

begin
	  select @error = 'OK'
    if ( @vcTipoConsulta = 'A' )
    begin
       select t.ide_traz, t.cas_dest, c.cod_inst, t.nom_arcc, convert(varchar(8),t.fec_rece,112) as fec_rece,
              e.vcHoraEnvio as hor_rece, e.vcTicket, e.vcNombreArchivoOriginal
       from tbl_tarc t, tbl_casi c, tblTransEnvio e
       where t.fec_rece >= (dateadd(hour, -(select convert(int,vcValorParametro)
                                         from tblParametro where vcCodigoParametro = 'HOR_002'), getdate()))
         and t.est_traz in ('13','17')
         and t.cas_orig = c.cod_casi
         and t.cas_dest = @vcCodigoCasilla
         and t.nom_arcc = e.vcNombreArchivo
         and e.vcCodigoTipoArchivo in (SELECT vcCodigoTipoArchivo FROM tblRelTipoArchivoUsuario 
                                       WHERE vcTratoArchivo <> '1' 
                                          AND vcCodigoUsuario = @vcCodigoUsuario)
       if ( @@error != 0 )
       begin
            select @error = 'ERROR AL OBTENER ARCHIVOS PARA DESCARGA'
       end
    end
    else
    begin
        select t.ide_traz, t.cas_dest, c.cod_inst, t.nom_arcc, convert(varchar(8),t.fec_rece,112) as fec_rece,
               e.vcHoraEnvio as hor_rece, e.vcTicket, e.vcNombreArchivoOriginal
        from tbl_tarc t, tbl_casi c, tblTransEnvio e
        where t.fec_rece >= (dateadd(hour, -(select convert(int,vcValorParametro)
                                             from tblParametro where vcCodigoParametro = 'HOR_002'), getdate()))
        and t.ide_traz not in (select td.iIdTrazaFT3  from tblTransDescarga td
                               where td.iIdTrazaFT3 = t.ide_traz
                                 and td.vcCasillaOrigen = t.cas_orig
                                 and td.vcCasillaDestino = t.cas_dest
                                 and td.vcNombreArchivo = t.nom_arcc
                                 and td.vcFechaRecepcion = convert(varchar(8),t.fec_rece,112))
        and t.est_traz in ('13','17')
        and t.cas_orig = c.cod_casi
        and t.cas_dest = @vcCodigoCasilla
        and t.nom_arcc = e.vcNombreArchivo
        and e.vcCodigoTipoArchivo in (SELECT vcCodigoTipoArchivo FROM tblRelTipoArchivoUsuario 
                                      WHERE vcTratoArchivo <> '1' 
                                        AND vcCodigoUsuario = @vcCodigoUsuario)
        if ( @@error != 0 )
        begin
            select @error = 'ERROR AL OBTENER DATOS PARA INFORMES'
        end
    end
    
end
if @error != 'OK'
    return 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTransPendRescate].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTransPendRescate]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTransPendRescate] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTransPendRescate]
@error                       varchar(255) out,
                                                @vcCodigoPerfil              varchar(2),
                                                @vcCodigoInstitucionDestino  varchar(4),
                                                @vcCodigoCasilla             varchar(8),
                                                @vcCodigoUsuario             varchar(15)

/*
 *  Servicio:       spFT3ConsultaTransPendRescate
 *  Objetivo:       Consulta las transacciones pendientes de rescate.
 *  Autor Creaci├│n: Andrea Zarabia.
 *  Fecha Creaci├│n: 25/08/2010
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 25/09/2012
 *  Motivo Modifi.: Se incorporar el campo vcTicket al conjunto resultado, adem├ís se incorpora el perfil 07.
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 20/06/2013
 *  Motivo Modifi.: Obtiene los pendientes de rescate despues de la primera descarga del archivo.
 *
 *  Entrada:        @vcCodigoPerfil       Codigo Perfil.
 *                  @vcCodigoInstitucion  Codigo Institucion.
 *                  @vcCodigoCasilla      Codigo Casilla.
 *                  @vcCodigoUsuario      Codigo Usuario.
 *
 *  Autor Modific.: Leonardo Perez
 *  Fecha Modific.: 26/06/2021
 *  Motivo Modifi.: Se cambia la logica para el campo vcEstadoRescate par que acepte los registros null, lineas 78, 94, 117 y 133.
 

 *
 *  Salida:         @error          error de salida
 *
 *  Comentario:     No hay.
 */

as

declare @iValorParametro int, 
        @dtFecha         datetime,
        @vcFechaEnvio    varchar(8),
        @vcHoraEnvio     varchar(6)

begin
    select @iValorParametro = convert(int, vcValorParametro)
    from tblParametro
    where vcCodigoParametro = 'HOR_002'
    select @dtFecha      = dateadd(hour, -@iValorParametro, getdate())
    select @vcFechaEnvio = convert(varchar(8), @dtFecha, 112)
    select @vcHoraEnvio  = right('00'+rtrim(convert(varchar(2), datepart(hh, @dtFecha))), 2)+
                           right('00'+rtrim(convert(varchar(2), datepart(mi, @dtFecha))), 2)+
                           right('00'+rtrim(convert(varchar(2), datepart(ss, @dtFecha))), 2)

    if (@vcCodigoPerfil = '01')
    begin
        select te.vcFechaEnvio, te.vcHoraEnvio, te.vcCodigoInstitucionOrigen, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, 'E' tip_tran, ta.vcModoTransferencia, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta, tblRelTipoArchivoUsuario tau
        where te.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
          and te.vcCodigoCasilla            = @vcCodigoCasilla
          and te.vcEstadoEnvio              = '2'
          and (isnull(te.vcEstadoRescate,'1')  = '1' OR te.vcEstadoRescate = '1')
          and ((te.vcFechaEnvio > @vcFechaEnvio)
                or
               (te.vcFechaEnvio = @vcFechaEnvio and te.vcHoraEnvio >= @vcHoraEnvio))
          and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
          and ta.vcCodigoTipoArchivo        = tau.vcCodigoTipoArchivo
          and tau.vcCodigoUsuario           = @vcCodigoUsuario

        union all

        select tr.vcFechaEnvio, tr.vcHoraEnvio, tr.vcCodigoInstitucionOrigen, tr.vcCodigoTipoArchivo, tr.vcNombreArchivo,
               te.vcNombreArchivoOriginal, tr.iRegistrosEnviados, 'R' tip_tran, ta.vcModoTransferencia, te.vcTicket
        from tblTransRespuesta tr, tblTipoArchivo ta, tblTransEnvio te, tblRelTipoArchivoUsuario tau
        where tr.vcCodigoInstitucionDestino   = @vcCodigoInstitucionDestino
          and tr.vcCodigoCasilla              = @vcCodigoCasilla
          and tr.vcEstadoEnvio                = '2'
          and (isnull(te.vcEstadoRescate,'1')  = '1' OR te.vcEstadoRescate = '1')
          and ((te.vcFechaEnvio > @vcFechaEnvio)
                or
               (te.vcFechaEnvio = @vcFechaEnvio and te.vcHoraEnvio >= @vcHoraEnvio))
          and tr.vcCodigoTipoArchivo          = ta.vcCodigoTipoArchivo
          and tr.vcFechaEnvioFK               = te.vcFechaEnvio
          and tr.vcHoraEnvioFK                = te.vcHoraEnvio
          and tr.vcCodigoInstitucionOrigenFK  = te.vcCodigoInstitucionOrigen
          and tr.vcCodigoInstitucionDestinoFK = te.vcCodigoInstitucionDestino
          and tr.vcCodigoCasillaFK            = te.vcCodigoCasilla
          and tr.vcCodigoTipoArchivoFK        = te.vcCodigoTipoArchivo
          and tr.vcNombreArchivoFK            = te.vcNombreArchivo
          and ta.vcCodigoTipoArchivo          = tau.vcCodigoTipoArchivo
          and tau.vcCodigoUsuario             = @vcCodigoUsuario

    end
    if ((@vcCodigoPerfil = '02') or (@vcCodigoPerfil = '03') or (@vcCodigoPerfil = '07'))
    begin
        select te.vcFechaEnvio, te.vcHoraEnvio, te.vcCodigoInstitucionOrigen, te.vcCodigoTipoArchivo, te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, te.iRegistrosEnviados, 'E' tip_tran, ta.vcModoTransferencia, te.vcTicket
        from tblTransEnvio te, tblTipoArchivo ta, tblRelTipoArchivoUsuario tau
        where te.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
          and te.vcEstadoEnvio              = '2'
          and (isnull(te.vcEstadoRescate,'1')  = '1' OR te.vcEstadoRescate = '1')
          and ((te.vcFechaEnvio > @vcFechaEnvio)
                or
               (te.vcFechaEnvio = @vcFechaEnvio and te.vcHoraEnvio >= @vcHoraEnvio))
          and te.vcCodigoTipoArchivo = ta.vcCodigoTipoArchivo
          and tau.vcCodigoUsuario             = @vcCodigoUsuario
          and tau.vcTratoArchivo              in ('2','3')
          and tau.vcCodigoTipoArchivo         = te.vcCodigoTipoArchivo

        union all

        select tr.vcFechaEnvio, tr.vcHoraEnvio, tr.vcCodigoInstitucionOrigen, tr.vcCodigoTipoArchivo, tr.vcNombreArchivo,
               te.vcNombreArchivoOriginal, tr.iRegistrosEnviados, 'R' tip_tran, ta.vcModoTransferencia, te.vcTicket
        from tblTransRespuesta tr, tblTipoArchivo ta, tblTransEnvio te, tblRelTipoArchivoUsuario tau
        where tr.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
          and tr.vcEstadoEnvio              = '2'
          and (isnull(te.vcEstadoRescate,'1')  = '1' OR te.vcEstadoRescate = '1')
          and ((te.vcFechaEnvio > @vcFechaEnvio)
                or
               (te.vcFechaEnvio = @vcFechaEnvio and te.vcHoraEnvio >= @vcHoraEnvio))
          and tr.vcCodigoTipoArchivo          = ta.vcCodigoTipoArchivo
          and tr.vcFechaEnvioFK               = te.vcFechaEnvio
          and tr.vcHoraEnvioFK                = te.vcHoraEnvio
          and tr.vcCodigoInstitucionOrigenFK  = te.vcCodigoInstitucionOrigen
          and tr.vcCodigoInstitucionDestinoFK = te.vcCodigoInstitucionDestino
          and tr.vcCodigoCasillaFK            = te.vcCodigoCasilla
          and tr.vcCodigoTipoArchivoFK        = te.vcCodigoTipoArchivo
          and tr.vcNombreArchivoFK            = te.vcNombreArchivo
          and tau.vcCodigoUsuario             = @vcCodigoUsuario
          and tau.vcTratoArchivo              in ('2','3')
          and tau.vcCodigoTipoArchivo         = te.vcCodigoTipoArchivo
    end

    if @@rowcount < 1
    begin
        select @error = 'NO EXISTEN DATOS'
        return 1
    end
    
    select @error = ''
    return 0

end
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaTransPendRespuest].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaTransPendRespuest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaTransPendRespuest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaTransPendRespuest]
@error                       varchar(255) out,
                                                 @vcCodigoPerfil              varchar(2),
                                                 @vcCodigoInstitucionDestino  varchar(4),
                                                 @vcCodigoCasilla             varchar(8),
                                                 @vcCodigoUsuario             varchar(15)

/*
 *  Servicio:       spFT3ConsultaTransPendRespuest
 *  Objetivo:       Consulta las transacciones pendientes de respuestas.
 *  Autor Creación: Andrea Zarabia.
 *  Fecha Creación: 25/08/2010
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 24/09/2012
 *  Motivo Modifi.: Se incorporar el campo vcTicket al conjunto resultado, además se incorpora el perfil 07.
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 21/06/2013
 *  Motivo Modifi.: Retorna los archivos pendientes una vez realizada las primera descarga.
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 09/07/2013
 *  Motivo Modifi.: Se elimina excepcion con institucion 0770 en los perfiles 01 y 02.
 *
 *  Entrada:        @vcCodigoPerfil              Codigo Perfil
 *                  @vcCodigoInstitucionDestino  Codigo Institucion.
 *                  @vcCodigoCasilla             Codigo Casilla.
 *                  @vcCodigoUsuario             Codigo Usuario.
 *
 *  Salida:         @error          error de salida
 *
 *  Comentario:     No hay.
 */

as

declare @iValorParametro int, 
        @dtFecha         datetime,
        @vcFechaEnvio    varchar(8),
        @vcHoraEnvio     varchar(6),
        @iValorDias      int,
        @fechaCierre     varchar(8)

begin
    select @iValorParametro = convert(int, vcValorParametro)
    from tblParametro
    where vcCodigoParametro = 'HOR_002'
    select @dtFecha      = dateadd(hour, -@iValorParametro, getdate())
    select @vcFechaEnvio = convert(varchar(8), @dtFecha, 112)
    select @vcHoraEnvio  = right('00'+rtrim(convert(varchar(2), datepart(hh, @dtFecha))), 2)+
                           right('00'+rtrim(convert(varchar(2), datepart(mi, @dtFecha))), 2)+
                           right('00'+rtrim(convert(varchar(2), datepart(ss, @dtFecha))), 2)
    
    select @iValorDias = convert(int, vcValorParametro)
    from tblParametro
    where vcCodigoParametro = 'ARC_002'
    select @fechaCierre = CONVERT(VARCHAR(8), GETDATE()-@iValorDias, 112)
    

    if (@vcCodigoPerfil = '01')
    begin
         select te.vcFechaEnvio, 
                te.vcHoraEnvio, 
                te.iRegistrosEnviados, 
                te.vcCodigoInstitucionOrigen,
                te.vcCodigoInstitucionDestino, 
                te.vcCodigoCasilla, 
                te.vcCodigoTipoArchivo,
                te.vcNombreArchivo,
                te.vcNombreArchivoOriginal, 
                count(tr.vcFechaEnvioFK), 
                te.vcTicket
           from tblTransEnvio te
                LEFT OUTER JOIN tblTransRespuesta tr
                  on te.vcFechaEnvio               = tr.vcFechaEnvioFK
                 and te.vcHoraEnvio                = tr.vcHoraEnvioFK
                 and te.vcCodigoInstitucionOrigen  = tr.vcCodigoInstitucionOrigenFK
                 and te.vcCodigoInstitucionDestino = tr.vcCodigoInstitucionDestinoFK
                 and te.vcCodigoCasilla            = tr.vcCodigoCasillaFK
                 and te.vcCodigoTipoArchivo        = tr.vcCodigoTipoArchivoFK
                 and te.vcNombreArchivo            = tr.vcNombreArchivoFK,
                tblTipoArchivo ta, 
                tblRelTipoArchivoUsuario tau
          where te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
            and te.vcUsuarioEnvio             = @vcCodigoUsuario
            and te.vcEstadoEnvio              = '0'
--*            and te.vcEstadoRescate            = null  
            and te.vcEstadoRescate            in (NULL, '1')  --** Modif: 16-11-2012 EBICYS.com
            and ((te.vcFechaEnvio > @vcFechaEnvio)
                or
                (te.vcFechaEnvio = @vcFechaEnvio and te.vcHoraEnvio >= @vcHoraEnvio))
            and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
            and te.vcCodigoTipoArchivo        = tau.vcCodigoTipoArchivo
            and tr.vcCodigoCasilla            = @vcCodigoCasilla
            and tr.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
            and tau.vcCodigoUsuario           = @vcCodigoUsuario
       group by te.vcFechaEnvio, 
                te.vcHoraEnvio, 
                te.iRegistrosEnviados, 
                te.vcCodigoInstitucionOrigen,
                te.vcCodigoInstitucionDestino, 
                te.vcCodigoCasilla, 
                te.vcCodigoTipoArchivo, 
                te.vcNombreArchivo,
                te.vcNombreArchivoOriginal,
                te.vcTicket
        having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo) > count(tr.vcFechaEnvioFK)

        union all

        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               te.iRegistrosEnviados, 
               te.vcCodigoInstitucionOrigen,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoCasilla, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               count(tr.vcFechaEnvioFK), 
               te.vcTicket
          from tblTransEnvio te
               LEFT OUTER JOIN tblTransRespuesta tr
                 on te.vcFechaEnvio               = tr.vcFechaEnvioFK
                and te.vcHoraEnvio                = tr.vcHoraEnvioFK
                and te.vcHoraEnvio                = tr.vcHoraEnvioFK
                and te.vcCodigoInstitucionOrigen  = tr.vcCodigoInstitucionOrigenFK
                and te.vcCodigoInstitucionDestino = tr.vcCodigoInstitucionDestinoFK
                and te.vcCodigoCasilla            = tr.vcCodigoCasillaFK
                and te.vcCodigoTipoArchivo        = tr.vcCodigoTipoArchivoFK
                and te.vcNombreArchivo            = tr.vcNombreArchivoFK,
               tblTipoArchivo ta, 
               tblRelTipoArchivoUsuario tau
         where te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
           and te.vcUsuarioEnvio             = @vcCodigoUsuario
           and te.vcEstadoEnvio              = '0'
           and te.vcEstadoRescate            in (NULL, '1')
           and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
           and te.vcCodigoTipoArchivo        = tau.vcCodigoTipoArchivo
           and tr.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
           and tr.vcCodigoCasilla            = @vcCodigoCasilla
           and tau.vcCodigoUsuario           = @vcCodigoUsuario
      group by te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               te.iRegistrosEnviados, 
               te.vcCodigoInstitucionOrigen,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoCasilla, 
               te.vcCodigoTipoArchivo, 
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal,
               te.vcTicket
        having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo) > count(tr.vcFechaEnvioFK)
    end

    if (@vcCodigoPerfil = '02')
    begin
         select te.vcFechaEnvio, 
                te.vcHoraEnvio, 
                te.iRegistrosEnviados, 
                te.vcCodigoInstitucionOrigen,
                te.vcCodigoInstitucionDestino, 
                te.vcCodigoCasilla, 
                te.vcCodigoTipoArchivo, 
                te.vcNombreArchivo,
                te.vcNombreArchivoOriginal, 
                count(tr.vcFechaEnvioFK), 
                te.vcTicket
           from tblTransEnvio te
                LEFT OUTER JOIN tblTransRespuesta tr
                  ON te.vcFechaEnvio               = tr.vcFechaEnvioFK
                 and te.vcHoraEnvio                = tr.vcHoraEnvioFK
                 and te.vcCodigoInstitucionOrigen  = tr.vcCodigoInstitucionOrigenFK
                 and te.vcCodigoInstitucionDestino = tr.vcCodigoInstitucionDestinoFK
                 and te.vcCodigoCasilla            = tr.vcCodigoCasillaFK
                 and te.vcCodigoTipoArchivo        = tr.vcCodigoTipoArchivoFK
                 and te.vcNombreArchivo            = tr.vcNombreArchivoFK,
                tblTipoArchivo ta
          where te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
            and te.vcEstadoEnvio              = '0'
--**            and te.vcEstadoRescate            = null
            and te.vcEstadoRescate            in (NULL, '1')    --** Modif.: 16-11-2012 EBICYS.com
            and ((te.vcFechaEnvio > @vcFechaEnvio)
                or
                (te.vcFechaEnvio = @vcFechaEnvio and te.vcHoraEnvio >= @vcHoraEnvio))
            and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
            and tr.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
       group by te.vcFechaEnvio, 
                te.vcHoraEnvio, 
                te.iRegistrosEnviados, 
                te.vcCodigoInstitucionOrigen,
                te.vcCodigoInstitucionDestino, 
                te.vcCodigoCasilla, 
                te.vcCodigoTipoArchivo, 
                te.vcNombreArchivo,
                te.vcNombreArchivoOriginal,
                te.vcTicket
         having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo) > count(tr.vcFechaEnvioFK)

        union all

        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               te.iRegistrosEnviados, 
               te.vcCodigoInstitucionOrigen,
               te.vcCodigoInstitucionDestino, 
               te.vcCodigoCasilla, 
               te.vcCodigoTipoArchivo,
               te.vcNombreArchivo,
               te.vcNombreArchivoOriginal, 
               count(tr.vcFechaEnvioFK), 
               te.vcTicket
          from tblTransEnvio te
               LEFT OUTER JOIN tblTransRespuesta tr
                 ON te.vcFechaEnvio               = tr.vcFechaEnvioFK
                and te.vcHoraEnvio                = tr.vcHoraEnvioFK 
                and te.vcCodigoInstitucionOrigen  = tr.vcCodigoInstitucionOrigenFK
                and te.vcCodigoInstitucionDestino = tr.vcCodigoInstitucionDestinoFK
                and te.vcCodigoCasilla            = tr.vcCodigoCasillaFK
                and te.vcCodigoTipoArchivo        = tr.vcCodigoTipoArchivoFK
                and te.vcNombreArchivo            = tr.vcNombreArchivoFK,
               tblTipoArchivo ta
        where te.vcCodigoInstitucionOrigen  = @vcCodigoInstitucionDestino
          and te.vcEstadoEnvio              = '0'
          and te.vcEstadoRescate            in (NULL, '1')
          and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
          and tr.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
        group by te.vcFechaEnvio, 
                 te.vcHoraEnvio, 
                 te.iRegistrosEnviados, 
                 te.vcCodigoInstitucionOrigen,
                 te.vcCodigoInstitucionDestino, 
                 te.vcCodigoCasilla, 
                 te.vcCodigoTipoArchivo, 
                 te.vcNombreArchivo,
                 te.vcNombreArchivoOriginal,
                 te.vcTicket
        having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo) > count(tr.vcFechaEnvioFK)
    end

    if ((@vcCodigoPerfil = '03') or (@vcCodigoPerfil = '07'))
    begin
        --Caso en el que la inst. 0770 envia archivo como respuesta, pero quedan pendientes
        select te.vcFechaEnvio, 
               te.vcHoraEnvio, 
               te.iRegistrosEnviados,
               te.vcCodigoInstitucionOrigen as vcCodigoInstitucionDestino,
               te.vcCodigoInstitucionDestino as vcCodigoInstitucionOrigen, 
               te.vcCodigoCasilla, 
               te.vcCodigoTipoArchivo,
               te.vcNombreArchivo, 
               te.vcNombreArchivoOriginal, 
               count(tr.vcFechaEnvioFK), 
               te.vcTicket
        from  tblTransEnvio te
              LEFT OUTER JOIN tblTransRespuesta tr
                ON te.vcFechaEnvio               = tr.vcFechaEnvioFK
               and te.vcHoraEnvio                = tr.vcHoraEnvioFK
               and te.vcCodigoInstitucionOrigen  = tr.vcCodigoInstitucionOrigenFK
               and te.vcCodigoInstitucionDestino = tr.vcCodigoInstitucionDestinoFK
               and te.vcCodigoCasilla            = tr.vcCodigoCasillaFK
               and te.vcCodigoTipoArchivo        = tr.vcCodigoTipoArchivoFK
               and te.vcNombreArchivo            = tr.vcNombreArchivoFK,
              tblTipoArchivo ta
        where te.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
          and te.vcEstadoEnvio              = '2'
          and te.vcEstadoRescate            in (NULL, '1')
          and te.vcCodigoTipoArchivo        = ta.vcCodigoTipoArchivo
          and ta.iNumeroRespuestas          > 0
     group by te.vcFechaEnvio, 
              te.vcHoraEnvio, 
              te.iRegistrosEnviados, 
              te.vcCodigoInstitucionOrigen,
              te.vcCodigoInstitucionDestino, 
              te.vcCodigoCasilla, 
              te.vcCodigoTipoArchivo, 
              te.vcNombreArchivo,
              te.vcNombreArchivoOriginal,
              te.vcTicket
       having (select iNumeroRespuestas 
                 from tblTipoArchivo
                where te.vcCodigoTipoArchivo = vcCodigoTipoArchivo
                  and iNumeroRespuestas > 0) > count(tr.vcFechaEnvioFK)
    end
    UPDATE tblTransEnvio SET vcEstadoEnvio='10', vcEstadoRescate='10', vcFechaRescate = (SELECT CONVERT(VARCHAR(8), GETDATE(), 112))
           where vcNombreArchivo IN (SELECT vcNombreArchivo FROM tblTransEnvio
                                     WHERE vcFechaEnvio < @fechaCierre)

    if @@rowcount < 1
    begin
        select @error = 'NO EXISTEN DATOS'
        return 1
    end
    
    select @error = ''
    return 0
end
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaUsuario].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaUsuario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaUsuario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaUsuario]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuario varchar(15)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaUsuario
   *    *  Objetivo:       Consulta sobre un usuario existente.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 11/08/2010
   *    *
   *    *  Autor Modific.: Alvaro Acevedo S.
   *    *  Fecha Modific.: 09/06/2011
   *    *  Motivo:         Traer el id de la sesion.
   *    *
   *    *  Entrada:        @vcCodigoUsuario  Codigo Usuario.
   *    *
   *    *  Salida:         @error            error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      SELECT 
         dbo.tblUsuario.vcCodigoUsuario, 
         dbo.tblUsuario.vcCodigoPerfil, 
         dbo.tblUsuario.vcCodigoInstitucion, 
         dbo.tblUsuario.vcNombreUsuario, 
         dbo.tblUsuario.vcDireccionEmail, 
         dbo.tblUsuario.vcEstadoUsuario, 
         dbo.tblUsuario.vcCodigoCasilla, 
         dbo.tblUsuario.vcIdSession
      FROM dbo.tblUsuario
      WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuario

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaUsuarioFT3].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaUsuarioFT3]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaUsuarioFT3] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaUsuarioFT3]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuario varchar(15)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaUsuarioFT3
   *    *  Objetivo:       Consulta un usuario.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 07/09/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoUsuario  Codigo del usuario.
   *    *
   *    *  Salida:         @error            error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN
      SELECT 
         u.vcCodigoPerfil, 
         u.vcCodigoInstitucion, 
         u.vcNombreUsuario, 
         u.vcCodigoCasilla, 
         i.nom_inst, 
         p.vcDescripcionPerfil
      FROM dbo.tblUsuario  AS u, dbo.tbl_inst  AS i, dbo.tblPerfil  AS p
      WHERE 
         u.vcCodigoUsuario = @vcCodigoUsuario AND 
         u.vcCodigoInstitucion = i.cod_inst AND 
         u.vcCodigoPerfil = p.vcCodigoPerfil
   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTE USUARIO'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaUsuarioInstitucio].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaUsuarioInstitucio]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaUsuarioInstitucio] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaUsuarioInstitucio]
@error                varchar(255) out,
                                                 @vcCodigoInstitucion  varchar(4),
                                                 @iOpcion              int

/*
 *  Servicio:       spFT3ConsultaUsuarioInstitucio
 *  Objetivo:       Consulta todos los usuarios del sistema o solo los asociados a una institucion.
 *  Autor Creaci?n: Andrea Zarabia.
 *  Fecha Creaci?n: 11/08/2010
 *
 *  Autor Modific.: Alvaro Acevedo S.
 *  Fecha Modific.: 08/11/2011
 *  Motivo        : Este sp solo debe considerar los perfiles 01, 02, 03 y 04.
 *                  La razon es por motivo de la incorporacion del perfil 06.
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 10/12/2012
 *  Motivo        : Se incorpora nuevo perfil 07.
 *
 *  Entrada:        @vcCodigoInstitucion  Codigo Institucion.
 *                  @iOpcion              1-Todos, 2-Por Institucion
 *
 *  Salida:         @error          error de salida
 *
 *  Comentario:     No hay.
 */

as

begin
    if (@iOpcion = 1)
    begin
        select vcCodigoUsuario, vcCodigoPerfil, vcCodigoInstitucion, vcNombreUsuario, vcDireccionEmail, vcEstadoUsuario,
               vcCodigoCasilla
        from tblUsuario
        where vcCodigoInstitucion = @vcCodigoInstitucion
          and vcCodigoPerfil in ('01','02','03','04','07')
        order by vcCodigoUsuario
    end
    else
    begin
        select vcCodigoUsuario, vcCodigoPerfil, vcCodigoInstitucion, vcNombreUsuario, vcDireccionEmail, vcEstadoUsuario,
               vcCodigoCasilla
        from tblUsuario
        where vcCodigoPerfil in ('01','02','03','04','07')
        order by vcCodigoUsuario
    end

if @@rowcount < 1
begin
    select @error = "NO EXISTEN DATOS"
    return 1
end

select @error = ""
return 0

end 
/* ### DEFNCOPY: END OF DEFINITION */
GO

GO
--SqlScripter----[dbo].[spFT3ConsultaUsuaTipoArchivo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ConsultaUsuaTipoArchivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ConsultaUsuaTipoArchivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ConsultaUsuaTipoArchivo]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ConsultaTipoArchivoUsua
   *    *  Objetivo:       Consulta sobre los usuarios existentes para un tipo de archivo.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 08/11/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo  Codigo de Archivo.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      IF (@vcCodigoTipoArchivo = '')
         BEGIN
            SELECT tau.vcCodigoUsuario AS vcCodigoUsuario, u.vcCodigoInstitucion AS vcCodigoInstitucion, i.nom_inst AS vc_nom_inst, tau.vcCodigoTipoArchivo AS vcCodigoTipoArchivo
            FROM dbo.tblRelTipoArchivoUsuario  AS tau, dbo.tblUsuario  AS u, dbo.tbl_inst  AS i
            WHERE tau.vcCodigoUsuario = u.vcCodigoUsuario AND u.vcCodigoInstitucion = i.cod_inst
            ORDER BY i.nom_inst
         END
      ELSE 
         BEGIN
            SELECT tau.vcCodigoUsuario AS vcCodigoUsuario, u.vcCodigoInstitucion AS vcCodigoInstitucion, i.nom_inst AS vc_nom_inst, tau.vcCodigoTipoArchivo AS vcCodigoTipoArchivo
            FROM dbo.tblRelTipoArchivoUsuario  AS tau, dbo.tblUsuario  AS u, dbo.tbl_inst  AS i
            WHERE 
               tau.vcCodigoTipoArchivo = @vcCodigoTipoArchivo AND 
               tau.vcCodigoUsuario = u.vcCodigoUsuario AND 
               u.vcCodigoInstitucion = i.cod_inst
            ORDER BY i.nom_inst
         END

      IF @@ROWCOUNT < 1
         BEGIN

            SELECT @error = 'NO EXISTEN DATOS'

            RETURN 1

         END

      SELECT @error = ''

      RETURN 0

   END
GO

GO
--SqlScripter----[dbo].[spFT3EliminaAlerta].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3EliminaAlerta]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3EliminaAlerta] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3EliminaAlerta]
@error varchar(255)  OUTPUT,
   @vcCodigoParametro varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3EliminaAlerta
   *    *  Objetivo:       Elimina una alerta.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 15/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoParametro    Codigo de la alerta. *
   *    *
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      DELETE dbo.tblParametro
      WHERE dbo.tblParametro.vcCodigoParametro = @vcCodigoParametro

      DELETE dbo.tblMsAlerta
      WHERE dbo.tblMsAlerta.vcCodigoParametro = @vcCodigoParametro

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN

            IF @@TRANCOUNT > 0
               ROLLBACK TRANSACTION 

            SELECT @error = 'ERROR AL ELIMINAR ALERTA'

         END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
GO

GO
--SqlScripter----[dbo].[spFT3EliminaPrivilegio].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3EliminaPrivilegio]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3EliminaPrivilegio] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3EliminaPrivilegio]
@error varchar(255)  OUTPUT,
   @vcCodigoPrivilegio varchar(10)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3EliminaPrivilegio
   *    *  Objetivo:       Eliminacion de privilegio.
   *    *  Ator Creacion: Andrea Zarabia.
   *    *  Fecha Creacion: 04/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoPrivilegio    Codigo del privilegio.
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *  Comentario:     Nohay.
   *
   */
   BEGIN

      DELETE dbo.tblPrivilegio
      WHERE dbo.tblPrivilegio.vcCodigoPrivilegio = @vcCodigoPrivilegio

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL ELIMINAR PRIVILEGIO'
         END

   END
   IF @@ROWCOUNT < 1
      BEGIN

         SELECT @error = 'NO EXISTEN DATOS'

         RETURN 1

      END
   SELECT @error = ''
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3EliminaTipoArchivo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3EliminaTipoArchivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3EliminaTipoArchivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3EliminaTipoArchivo]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3EliminaTipoArchivo
   *    *  Objetivo:       Modifica Tipo de Archivo.
   *    * Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo  Codigo del tipo de archivo.
   *    *
   *    *
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *
   *    *  Coentario:     No hay.
   *    *
   *
   */
   BEGIN

      SELECT @error = 'OK'

      DELETE dbo.tblTipoArchivo
      WHERE dbo.tblTipoArchivo.vcCodigoTipoArchivo = @vcCodigoTipoArchivo

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL ELIMINAR TIPO DE ARCHIVO'
         END

   END
GO

GO
--SqlScripter----[dbo].[spFT3InsertaAlerta].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaAlerta]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaAlerta] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaAlerta]
@error varchar(255)  OUTPUT,
   @vcCodigoParametro varchar(10),
   @vcDescripcionParametro varchar(50),
   @vcValorParametro varchar(255),
   @vcMsgAsunto varchar(255),
   @vcMsgTexto varchar(255),
   @vcMsgFirma varchar(255)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaAlerta
   *    *  Objetivo:       Inserta una nueva alerta.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 15/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoParametro    Codigo de la alerta.
   *    *                  @vcDescripcionParametro    Descripcion de la alerta.
   *    *                  @vcValorParametro    Valor de la alerta.
   *    *                  @vcMsgAsunto    Asunto del mensaje.
   *    *                  @vcMsgTexto    Texto del mensaje.
   *    *                  @vcMsgFirma    Firma del mensaje.
   *    *
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      INSERT dbo.tblParametro(vcCodigoParametro, vcDescripcionParametro, vcValorParametro)
         VALUES (@vcCodigoParametro, @vcDescripcionParametro, @vcValorParametro)

      INSERT dbo.tblMsAlerta(vcCodigoParametro, vcMsgAsunto, vcMsgTexto, vcMsgFirma)
         VALUES (@vcCodigoParametro, @vcMsgAsunto, @vcMsgTexto, @vcMsgFirma)

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN

            IF @@TRANCOUNT > 0
               ROLLBACK TRANSACTION 

            SELECT @error = 'ERROR AL MODIFICAR ALERTA'

         END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
GO

GO
--SqlScripter----[dbo].[spFT3InsertaLogTrazabilidad].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaLogTrazabilidad]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaLogTrazabilidad] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaLogTrazabilidad]
@error varchar(255)  OUTPUT,
   @vcFechaRegistro varchar(8),
   @vcHoraRegistro varchar(6),
   @iIdModulo int,
   @iIdActividad int,
   @vcCodigoUsuario varchar(15),
   @vcActividad varchar(255),
   @vcIpUsuario varchar(20),
   @vcDetalle varchar(255)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaLogTrazabilidad
   *    *  Objetivo:       Inserción de una transacción de trazabilidad.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 08/09/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcFechaRegistro  varchar(8),
   *    *                  @vcHoraRegistro   varchar(6),
   *    *                  @iIdModulo        int,
   *    *                  @iIdActividad     int,
   *    *                  @vcCodigoUsuario  varchar(15),
   *    *                  @vcActividad      varchar(255),
   *    *                  @vcIpUsuario      varchar(20),
   *    *                  @vcDetalle        varchar(255)
   *    *
   *    *  Salida:         @error            error de salida
   *    *
   *    *  Comentario:     Sin comentarios
   *
   */
   BEGIN

      SELECT @error = 'OK'

      INSERT dbo.tblRegistroLogTrazabilidad(
         vcFechaRegistro, 
         vcHoraRegistro, 
         iIdModulo, 
         iIdActividad, 
         vcCodigoUsuario, 
         vcActividad, 
         vcIpUsuario, 
         vcDetalle)
         VALUES (
            @vcFechaRegistro, 
            @vcHoraRegistro, 
            @iIdModulo, 
            @iIdActividad, 
            @vcCodigoUsuario, 
            @vcActividad, 
            @vcIpUsuario, 
            @vcDetalle)

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL REGISTRAR LA TRAZABILIDAD'
         END

   END
   IF @error != 'OK'
      RETURN 1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3InsertaPassword].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaPassword]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaPassword] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaPassword]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuario varchar(15),
   @vcPassword varchar(50),
   @iAno int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaPassword
   *    *  Objetivo:       Ingresa pass de un nuevo usuario.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoUsuario    Codigo Usuario.
   *    *                  @vcPassword         Password Usuario.
   *    *                  @iAno               Años en que expirara password.
   *    *
   *    *  Salida:         @error              error de salida
   *    *
   *    *  Comentario:     No hay
   *    *
   *
   */
   DECLARE
      @dFechaAhora datetime2(3), 
      @vcErrorSp varchar(255), 
      @vcFechaHoy varchar(14), 
      @vcFechaManana varchar(14), 
      @vcValorParametro varchar(10), 
      @iCantidadPassword int
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      SELECT @dFechaAhora = getdate()

      SELECT @vcFechaHoy = CONVERT(varchar(8), @dFechaAhora, 112) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dFechaAhora))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dFechaAhora))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dFechaAhora))), ''), 2)

      SELECT @dFechaAhora = CONVERT(nvarchar(30), dateadd(yy, @iAno, @dFechaAhora))

      SELECT @vcFechaManana = CONVERT(varchar(8), @dFechaAhora, 112) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dFechaAhora))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dFechaAhora))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dFechaAhora))), ''), 2)

      SELECT @vcValorParametro = dbo.tblParametro.vcValorParametro
      FROM dbo.tblParametro
      WHERE dbo.tblParametro.vcCodigoParametro = 'PSS_001'

      BEGIN

         /*1*/
         EXECUTE dbo.spFT3ValidaPassword 
            @vcErrorSp  OUTPUT, 
            @iCantidadPassword  OUTPUT, 
            @vcCodigoUsuario, 
            @vcPassword, 
            @vcValorParametro

         IF (@iCantidadPassword = 0)
            BEGIN

               /*2*/
               INSERT dbo.tblPassword(vcCodigoUsuario, vcPassword, vcIniPassword, vcFinPassword)
                  VALUES (@vcCodigoUsuario, @vcPassword, @vcFechaHoy, @vcFechaManana)

               /*
               *   SSMA warning messages:
               *   S2SS0016: SQL Server might use a different error code.
               */

               IF (@@ERROR != 0)
                  BEGIN

                     IF @@TRANCOUNT > 0
                        /*3*/
                        ROLLBACK TRANSACTION 

                     SELECT @error = 'ERROR AL INGRESAR PASSWORD'

                  END
                  /*3*/

            END
            /*2*/
         ELSE 
            BEGIN
               SELECT @error = 'PASSWORD YA UTILIZADA'
            END

      END
      /*1*/

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
   IF @error != 'OK'
      RETURN 1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3InsertaTipoArchivo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaTipoArchivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaTipoArchivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaTipoArchivo]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6),
   @vcNombreTipoArchivo varchar(50),
   @iNumeroRespuestas int,
   @vcFormatoNombreArchivo varchar(50),
   @vcModoTransferencia varchar(1),
   @iLargoRegistroArchivo int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaTipoArchivo
   *    *  Objetivo:       Ingresa nuevo tipo de archivo.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 17/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo     Codigo del tipo de archivo.
   *    *                  @vcNombreTipoArchivo       Nombre del tipo de archivo.
   *    *                  @iNumeroRespuestas        Numero de respuestas.
   *    *                  @vcFormatoNombreArchivo       Formato del nombre del archivo.
   *    *                  @vcModoTransferencia       Modo de transferencia del archivo 0-Ascii 1-Binario.
   *    *                  @iLargoRegistroArchivo        Largo del tipo de archivo.
   *    *
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      SELECT @error = 'OK'

      INSERT dbo.tblTipoArchivo(
         vcCodigoTipoArchivo, 
         vcNombreTipoArchivo, 
         iNumeroRespuestas, 
         vcFormatoNombreArchivo, 
         vcModoTransferencia, 
         iLargoRegistroArchivo)
         VALUES (
            @vcCodigoTipoArchivo, 
            @vcNombreTipoArchivo, 
            @iNumeroRespuestas, 
            @vcFormatoNombreArchivo, 
            @vcModoTransferencia, 
            @iLargoRegistroArchivo)

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL INGRESA TIPO DE ARCHIVO'
         END

   END
   IF @error != 'OK'
      RETURN 1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3InsertaTransDescarga].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaTransDescarga]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaTransDescarga] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaTransDescarga]
@error varchar(255)  OUTPUT,
                                           @iIdTrazaFT3 int,
                                           @vcCasillaOrigen varchar(8),
                                           @vcCasillaDestino varchar(8),
                                           @vcNombreArchivo varchar(20),
                                           @vcFechaRecepcion varchar(8),
                                           @vcHoraRecepcion varchar(6),
                                           @vcUsuarioRescate varchar(15),
                                           @vcFechaRescate varchar(8),
                                           @vcHoraRescate varchar(6)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaTransDescarga
   *    *  Objetivo:       Inserción de una transacción de descarga manual.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 27/09/2010
   *   
   *    *  Autor Modific.: G.Martinez
   *    *  Fecha Modific.: 17/06/2013
   *    *  Descripcion   : Permite aumentar el iIdTrazaFT3 al descargar mas de 
   *    *                  una vez un mismo archivo.
   *    *
   *    *  Entrada:        @iIdTrazaFT3       Id de traza del sistema de casillas del FT3
   *    *                  @vcCasillaOrigen   Casilla origen
   *    *                  @vcCasillaDestino  Casilla destino
   *    *                  @vcNombreArchivo   Nombre archivo
   *    *                  @vcFechaRecepcion  Fecha recepcion
   *    *                  @vcHoraRecepcion   Hora recepcion
   *    *                  @vcUsuarioRescate  Usuario rescate
   *    *                  @vcFechaRescate    Fecha rescate
   *    *                  @vcHoraRescate     Hora rescate
   *    *
   *    *  Salida:         @error             error de salida
   *    *
   *    *  Comentario:     Sin comentarios
   *
   */
   BEGIN

      SELECT @error = 'OK'
      IF EXISTS ( SELECT 1 FROM tblTransDescarga WHERE iIdTrazaFT3=@iIdTrazaFT3 )
         SELECT @iIdTrazaFT3=max( iIdTrazaFT3 )+1 FROM tblTransDescarga

      INSERT tblTransDescarga(
         iIdTrazaFT3, 
         vcCasillaOrigen, 
         vcCasillaDestino, 
         vcNombreArchivo, 
         vcFechaRecepcion, 
         vcHoraRecepcion, 
         vcUsuarioRescate, 
         vcFechaRescate, 
         vcHoraRescate)
         VALUES (
            @iIdTrazaFT3, 
            @vcCasillaOrigen, 
            @vcCasillaDestino, 
            @vcNombreArchivo, 
            @vcFechaRecepcion, 
            @vcHoraRecepcion, 
            @vcUsuarioRescate, 
            @vcFechaRescate, 
            @vcHoraRescate)

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL REGISTRAR LA TRANSFERENCIA DE DESCARGA MANUAL'
         END

   END

if @error != 'OK'
    return 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3InsertaTransEnvioRespuest].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaTransEnvioRespuest]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaTransEnvioRespuest] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaTransEnvioRespuest]
@error varchar(255) out,
                                                 @vcTipoTrans                   varchar(1),
                                                 @vcFechaEnvio                  varchar(8),
                                                 @vcHoraEnvio                   varchar(6),
                                                 @vcUsuarioEnvio                varchar(15),
                                                 @iRegistrosEnviados            int,
                                                 @vcCodigoInstitucionOrigen     varchar(4),
                                                 @vcCodigoInstitucionDestino    varchar(4),
                                                 @vcCodigoCasilla               varchar(8),
                                                 @vcCodigoTipoArchivo           varchar(6),
                                                 @vcNombreArchivo               varchar(50),
                                                 @vcNombreArchivoOriginal       varchar(255),
                                                 @vcEstadoEnvio                 varchar(2),
                                                 @vcTicket                      varchar(9),
                                                 @vcFechaEnvioFK                varchar(8)=null,
                                                 @vcHoraEnvioFK                 varchar(6)=null,
                                                 @vcCodigoInstitucionOrigenFK   varchar(4)=null,
                                                 @vcCodigoInstitucionDestinoFK  varchar(4)=null,
                                                 @vcCodigoCasillaFK             varchar(8)=null,
                                                 @vcCodigoTipoArchivoFK         varchar(6)=null,
                                                 @vcNombreArchivoFK             varchar(50)=null
                                                 

/*
 *  Servicio:       spFT3InsertaTransEnvioRespuest
 *  Objetivo:       Inserción de una transacción de envío o respuesta.
 *  Autor Creación: Alvaro Acevedo S.
 *  Fecha Creación: 28/07/2010

 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 21/09/2012
 *  Motivo Modifi.: Se incorpora campo vcTicket en la tabla tblTransEnvio
 *
 *  Entrada:        @vcTipoTrans                   Tipo de transaccion, E-Envio, R-Respuesta
 *                  @vcFechaEnvio                  Fecha de envio
 *                  @vcHoraEnvio                   Hora de envio
 *                  @vcUsuarioEnvio                Usuario que envia
 *                  @iRegistrosEnviados            Registros enviados
 *                  @vcCodigoInstitucionOrigen     Codigo institucion origen
 *                  @vcCodigoInstitucionDestino    Codigo institucion destino
 *                  @vcCodigoCasilla               Codigo casilla
 *                  @vcCodigoTipoArchivo           Tipo de archivo
 *                  @vcNombreArchivo               Nombre archivo
 *                  @vcNombreArchivoOriginal       Nombre archivo original
 *                  @vcEstadoEnvio                 Estado de envio
 *                  @vcFechaEnvioFK                Fecha de envio foranea
 *                  @vcHoraEnvioFK                 Hora de envio foranea
 *                  @vcCodigoInstitucionOrigenFK   Codigo institucion origen foranea
 *                  @vcCodigoInstitucionDestinoFK  Codigo institucion destino foranea
 *                  @vcCodigoCasillaFK             Codigo casilla foranea
 *                  @vcCodigoTipoArchivoFK         Tipo de archivo foranea
 *                  @vcNombreArchivoFK             Nombre archivo foranea
 *                  @vcTicket                      Ticket ingresado por SAC
 *
 *  Salida:         @error          error de salida
 *
 *  Comentario:     Sin comentarios
 */

as

begin
    select @error = 'OK'
    if ( @vcTipoTrans != 'E' )
    begin
        insert into tblTransRespuesta
            (vcFechaEnvioFK, vcHoraEnvioFK, vcCodigoInstitucionOrigenFK, vcCodigoInstitucionDestinoFK,
             vcCodigoCasillaFK, vcCodigoTipoArchivoFK, vcNombreArchivoFK, vcFechaEnvio, vcHoraEnvio, vcUsuarioEnvio,
             iRegistrosEnviados, vcCodigoInstitucionOrigen, vcCodigoInstitucionDestino, vcCodigoCasilla,
             vcCodigoTipoArchivo, vcNombreArchivo, vcNombreArchivoOriginal, vcEstadoEnvio, vcTicket)
        values
            (@vcFechaEnvioFK, @vcHoraEnvioFK, @vcCodigoInstitucionOrigenFK, @vcCodigoInstitucionDestinoFK,
             @vcCodigoCasillaFK, @vcCodigoTipoArchivoFK, @vcNombreArchivoFK, @vcFechaEnvio, @vcHoraEnvio, @vcUsuarioEnvio,
             @iRegistrosEnviados, @vcCodigoInstitucionOrigen, @vcCodigoInstitucionDestino, @vcCodigoCasilla,
             @vcCodigoTipoArchivo, @vcNombreArchivo, @vcNombreArchivoOriginal, @vcEstadoEnvio, @vcTicket)
        if ( @@error != 0 )
        begin
            select @error = 'ERROR AL REGISTRAR LA TRANSFERENCIA DE RESPUESTA'
        end
    end
    else
    begin
        insert into tblTransEnvio
            (vcFechaEnvio, vcHoraEnvio, vcUsuarioEnvio, iRegistrosEnviados,
             vcCodigoInstitucionOrigen, vcCodigoInstitucionDestino, vcCodigoCasilla,
             vcCodigoTipoArchivo, vcNombreArchivo, vcNombreArchivoOriginal, vcEstadoEnvio, vcTicket)
        values
            (@vcFechaEnvio, @vcHoraEnvio, @vcUsuarioEnvio, @iRegistrosEnviados,
             @vcCodigoInstitucionOrigen, @vcCodigoInstitucionDestino, @vcCodigoCasilla,
             @vcCodigoTipoArchivo, @vcNombreArchivo, @vcNombreArchivoOriginal, @vcEstadoEnvio, @vcTicket)
        if ( @@error != 0 )
        begin
            select @error = 'ERROR AL REGISTRAR LA TRANSFERENCIA DE ENVIO'
        end
    end
end

if @error != 'OK'
    return 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3InsertaUsuario].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3InsertaUsuario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3InsertaUsuario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3InsertaUsuario]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuario varchar(15),
   @vcCodigoPerfil varchar(2),
   @vcCodigoInstitucion varchar(4),
   @vcNombreUsuario varchar(100),
   @vcDireccionEmail varchar(100),
   @vcEstadoUsuario varchar(2),
   @iAno int,
   @vcPassword varchar(50),
   @vcCodigoCasilla varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaUsuario
   *    *  Objetivo:       Ingresa nuevo usuario.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoUsuario      Codigo Usuario.
   *    *                  @vcCodigoPerfil       Codigo Perfil.
   *    *                  @vcCodigoInstitucion  Codigo Institucion.
   *    *                  @vcNombreUsuario      Nombre Usuario.
   *    *                  @vcDireccionEmail     Mail Usuario.
   *    *                  @vcEstadoUsuario      Estado Usuario.
   *    *                  @iAno                 Cantidad de años.
   *    *                  @vcPassword           Password.
   *    *                  @vcCodigoCasilla      Codigo de la Casilla.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *  Comentario:     @vcEstadoUsuario      "00"  Creado
   *    *                  @vcEstadoUsuario      "01"  Activo
   *    *                  @vcEstadoUsuario      "02"  Inactivo
   *    *                  @vcEstadoUsuario      "03"  Bloqueado
   *
   */
   DECLARE
      @vcErrorSp varchar(255)
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      BEGIN

         INSERT dbo.tblUsuario(
            vcCodigoUsuario, 
            vcCodigoPerfil, 
            vcCodigoInstitucion, 
            vcNombreUsuario, 
            vcDireccionEmail, 
            vcEstadoUsuario, 
            vcCodigoCasilla)
            VALUES (
               @vcCodigoUsuario, 
               @vcCodigoPerfil, 
               @vcCodigoInstitucion, 
               @vcNombreUsuario, 
               @vcDireccionEmail, 
               '00', 
               @vcCodigoCasilla)

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'ERROR AL INGRESAR USUARIO'

            END
            /*if*/
         ELSE 
            BEGIN
               EXECUTE dbo.spFT3InsertaPassword @vcErrorSp  OUTPUT, @vcCodigoUsuario, @vcPassword, @iAno
            END
            /*else*/

      END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
   IF @error != 'OK'
      RETURN 1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3LoginConTicket].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3LoginConTicket]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3LoginConTicket] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3LoginConTicket]
@error varchar(255)  OUTPUT,
   @vcCodigoTicket varchar(23),
   @vcCodigoUsuario varchar(15),
   @vcCodigoInstitucion varchar(4)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3LoginConTicket
   *    *  Objetivo:       Valida usuario que ingresa con ticket.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 28/07/2010
   *    *
   *    *  Autor Modific.: Alvaro Acevedo S.
   *    *  Fecha Modific.: 09/06/2011
   *    *  Motivo:         Incorporar codigo para la sesion del usuario.
   *    *
   *    *  Entrada:        @vcCodigoTicket       Codigo del ticket
   *    *                  @vcCodigoUsuario      Codigo de usuario
   *    *                  @vcCodigoInstitucion  Codigo de institucion
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *  Comentario:     Sin comentarios
   *
   *    declaramos variables locales
   */
   DECLARE
      @dFechaHoraHoy datetime2(3), 
      @vcFechaFormato112 varchar(8), 
      @vcHoraFormato112 varchar(6), 
      @vcIdSession varchar(23)
   BEGIN TRANSACTION 
   SELECT @error = 'OK'
   SELECT @dFechaHoraHoy = getdate()
   SELECT @vcFechaFormato112 = CONVERT(varchar(8), @dFechaHoraHoy, 112)
   SELECT @vcHoraFormato112 = right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dFechaHoraHoy))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dFechaHoraHoy))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dFechaHoraHoy))), ''), 2)
   UPDATE dbo.tblTicket
      SET 
         vcEstadoTicket = '1', 
         vcFechaIngreso = @vcFechaFormato112, 
         vcHoraIngreso = @vcHoraFormato112
   WHERE 
      dbo.tblTicket.vcCodigoTicket = @vcCodigoTicket AND 
      dbo.tblTicket.vcCodigoUsuario = @vcCodigoUsuario AND 
      dbo.tblTicket.vcCodigoInstitucion = @vcCodigoInstitucion AND 
      dbo.tblTicket.vcEstadoTicket = '0'
   IF (@@ROWCOUNT < 1)
      BEGIN

         IF @@TRANCOUNT > 0
            ROLLBACK TRANSACTION 

         SELECT @error = 'ERROR EN LA MODIFICACION DEL TICKET'

      END
   ELSE 
      BEGIN

         SELECT @vcIdSession = @vcFechaFormato112 + @vcHoraFormato112 + right('000' + nullif(rtrim(CONVERT(varchar(3), datepart(ms, @dFechaHoraHoy))), ''), 3) + right('000000' + nullif(rtrim(CONVERT(varchar(6), CONVERT(int, rand() * 1000000))), ''), 6)

         UPDATE dbo.tblUsuario
            SET 
               dFechaHoraIngreso = getdate(), 
               iLoginFallidos = 0, 
               vcIdSession = @vcIdSession
         WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuario

         IF (@@ROWCOUNT < 1)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'ERROR EN LA ACTUALIZACION DEL TIMESTAMPT'

            END

      END
   IF @@TRANCOUNT > 0
      COMMIT TRANSACTION 
   IF @error != 'OK'
      RETURN 1
   SELECT @error = 'OK' + @vcIdSession
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3LoginFallidosUsuario].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3LoginFallidosUsuario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3LoginFallidosUsuario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3LoginFallidosUsuario]
@error             varchar(255) out,
                                            @vcCodigoUsuario   varchar(15)

/*
 *  Servicio:       spFT3LoginFallidosUsuario
 *  Objetivo:       Obtiene cantidad de intentos fallidos de conexion del usuario.
 *  Autor Creaci≤n: Geronimo Martinez N.
 *  Fecha Creaci≤n: 10/12/2012
 *
 *  Entrada:        @vcCodigoUsuario           Codigo del usuario
 *
 *  Salida:         @error                     error de salida
 *
 *  Comentario:     Sin comentarios
 */

as

begin
    select iLoginFallidos from tblUsuario
    where vcCodigoUsuario = @vcCodigoUsuario
end

if @@rowcount < 1
begin
    select @error = "NO EXISTEN DATOS"
    return 1
end

select @error = ""
return 0
GO

GO
--SqlScripter----[dbo].[spFT3LoginSinTicket].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3LoginSinTicket]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3LoginSinTicket] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3LoginSinTicket]
@error                 varchar(255) out,
                                      @vcCodigoUsuario       varchar(15),
                                      @vcPasswordEncriptada  varchar(50)

/*
 *  Servicio:       spFT3LoginSinTicket
 *  Objetivo:       Valida usuario que ingresa sin ticket.
 *  Autor Creaci≤n: Alvaro Acevedo S.
 *  Fecha Creaci≤n: 27/07/2010
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 08/10/2012
 *  Motivo        : Se incorporar nuevo codigo de perfil 07.
 *
 *  Entrada:        @vcCodigoUsuario       codigo de usuario
 *                  @vcPasswordEncriptada  password de usuario
 *
 *  Salida:         @error          error de salida
 *
 *  Comentario:     Sin comentarios
 */

as

-- declaramos variables locales
declare @vcCodigoPerfil       varchar(2),
        @vcCodigoInstitucion  varchar(4),
        @vcCodigoCasilla      varchar(8)

begin
    select @error = "OK"

    if not exists (select 1 from tblUsuario
                   where vcCodigoUsuario = @vcCodigoUsuario)
        select @error = "USUARIO NO REGISTRADO EN BD"
    else
        if not exists (select 1 from tblPassword
                       where vcCodigoUsuario = @vcCodigoUsuario
                         and vcPassword = @vcPasswordEncriptada
                         and vcIniPassword = (select max(vcIniPassword)
                                              from tblPassword
                                              where vcCodigoUsuario = @vcCodigoUsuario))
            select @error = "PASSWORD DE USUARIO INCORRECTA"
        else
            if exists (select 1 from tblUsuario
                       where vcCodigoUsuario = @vcCodigoUsuario
                         and vcEstadoUsuario = '00')
                select @error = "ESTADO DE USUARIO CREADO"
            else
                if not exists (select 1 from tblPassword
                               where vcCodigoUsuario = @vcCodigoUsuario
                                 and vcPassword = @vcPasswordEncriptada
                                 and vcIniPassword = (select max(vcIniPassword)
                                                      from tblPassword
                                                      where vcCodigoUsuario = @vcCodigoUsuario)
                                 and vcFinPassword > convert(varchar(8), getdate(), 112) +
                                                     right("00" + rtrim(convert(varchar(2), datepart(hh, getdate()))), 2) +
                                                     right("00" + rtrim(convert(varchar(2), datepart(mi, getdate()))), 2) +
                                                     right("00" + rtrim(convert(varchar(2), datepart(ss, getdate()))), 2))
                begin
                    select @error = "PASSWORD EXPIRADA, FAVOR VUELVA A INGRESAR PARA CAMBIARLA"
                    begin tran
                        update tblUsuario set vcEstadoUsuario = "00"
                        where vcCodigoUsuario = @vcCodigoUsuario

                        if ( @@rowcount < 1 )
                        begin
                            rollback tran
                            select @error = "PASSWORD EXPIRADA, FAVOR CONTACTAR AL ADMINISTRADOR PARA CAMBIARLA"
                        end
                    commit tran
                end
                else
                    if not exists (select 1 from tblUsuario
                                   where vcCodigoUsuario = @vcCodigoUsuario
                                     and vcEstadoUsuario = '01')
                        select @error = "ESTADO DE USUARIO INVALIDO"
                    else
                        if not exists (select 1 from tblUsuario
                                       where vcCodigoUsuario = @vcCodigoUsuario
                                         and vcCodigoPerfil in ('01','02','03','04','07'))
                            select @error = "PERFIL DE USUARIO INVALIDO"
                        else
                            if not exists (select 1 from tblPassword
                                           where vcCodigoUsuario = @vcCodigoUsuario)
                                select @error = "USUARIO NO REGISTRA PASSWORD"
                            else
                                if not exists (select 1 from tbl_casi, tblUsuario
                                               where vcCodigoUsuario = @vcCodigoUsuario
                                                 and vcCodigoCasilla = cod_casi)
                                    select @error = "CASILLA NO REGISTRADA EN BD"
                                else
                                begin
                                    select @vcCodigoPerfil = p.vcCodigoPerfil
                                    from tblUsuario u, tblPerfil p
                                    where u.vcCodigoUsuario = @vcCodigoUsuario
                                      and u.vcCodigoPerfil = p.vcCodigoPerfil

                                    select @vcCodigoCasilla = c.cod_casi
                                    from tblUsuario u, tbl_casi c
                                    where u.vcCodigoUsuario = @vcCodigoUsuario
                                      and u.vcCodigoCasilla = c.cod_casi

                                    select isnull(u.vcNombreUsuario,"Usuario no registra nombre") 'vcNombreUsuario',
                                           isnull(i.cod_inst,"Usuario no registra instituci≤n") 'cod_inst',
                                           isnull(p.vcCodigoPerfil,"Usuario no registra perfil!") 'vcCodigoPerfil',
                                           isnull(i.nom_inst,"Institucion no registra nombre!") 'nom_inst',
                                           isnull(p.vcDescripcionPerfil,"Perfil no registra descripcion!") 'vcDescripcionPerfil',
                                           isnull(c.cod_casi,"Casilla no registra descripci≤n!") 'vcCodigoCasilla'
                                    from tblUsuario u, tbl_inst i, tblPerfil p, tbl_casi c
                                    where u.vcCodigoUsuario = "01"
                                      and u.vcCodigoInstitucion = i.cod_inst
                                      and u.vcCodigoPerfil = p.vcCodigoPerfil
                                      and u.vcCodigoCasilla = c.cod_casi

                                    select @vcCodigoInstitucion = i.cod_inst
                                    from tblUsuario u, tbl_inst i
                                    where u.vcCodigoUsuario = @vcCodigoUsuario
                                      and u.vcCodigoInstitucion = i.cod_inst
                                end
    if @error != "OK"
    begin
       select @error = @error
    end
    else
    begin
        begin tran
            update tblUsuario set dFechaHoraIngreso = getdate()
            where vcCodigoUsuario = @vcCodigoUsuario

            if ( @@rowcount < 1 )
            begin
                rollback tran
                select @error = "ERROR EN LA ACTUALIZACION DEL TIMESTAMPT"
            end
        commit tran
    end
end
GO

GO
--SqlScripter----[dbo].[spFT3ModificaAlerta].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ModificaAlerta]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaAlerta] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaAlerta]
@error varchar(255)  OUTPUT,
   @vcCodigoParametro varchar(10),
   @vcDescripcionParametro varchar(50),
   @vcValorParametro varchar(255),
   @vcMsgAsunto varchar(255),
   @vcMsgTexto varchar(255),
   @vcMsgFirma varchar(255)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ModificaAlerta
   *    *  Objetivo:       Modifica una alerta.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 15/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoParametro    Codigo de la alerta.
   *    *                  @vcDescripcionParametro    Descripcion de la alerta.
   *    *                  @vcValorParametro    Valor de la alerta.
   *    *                  @vcMsgAsunto    Asunto del mensaje.
   *    *                  @vcMsgTexto    Texto del mensaje.
   *    *                  @vcMsgFirma    Firma del mensaje.
   *    *
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      DELETE dbo.tblParametro
      WHERE dbo.tblParametro.vcCodigoParametro = @vcCodigoParametro

      DELETE dbo.tblMsAlerta
      WHERE dbo.tblMsAlerta.vcCodigoParametro = @vcCodigoParametro

      INSERT dbo.tblParametro(vcCodigoParametro, vcDescripcionParametro, vcValorParametro)
         VALUES (@vcCodigoParametro, @vcDescripcionParametro, @vcValorParametro)

      INSERT dbo.tblMsAlerta(vcCodigoParametro, vcMsgAsunto, vcMsgTexto, vcMsgFirma)
         VALUES (@vcCodigoParametro, @vcMsgAsunto, @vcMsgTexto, @vcMsgFirma)

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN

            IF @@TRANCOUNT > 0
               ROLLBACK TRANSACTION 

            SELECT @error = 'ERROR AL MODIFICAR ALERTA'

         END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
GO

GO
--SqlScripter----[dbo].[spFT3ModificaEstadoUsuario].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ModificaEstadoUsuario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaEstadoUsuario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaEstadoUsuario]
@error             varchar(255) out,
                                            @vcCodigoUsuario   varchar(15),
                                            @iLoginFallidos    int,
                                            @vcEstadoUsuario   varchar(2)

/*
 *  Servicio:       spFT3ModificaEstadoUsuario
 *  Objetivo:       Modifica el estado de un usuario.
 *  Autor Creaci≤n: Geronimo Martinez N.
 *  Fecha Creaci≤n: 10/12/2012
 *
 *  Entrada:        @vcCodigoUsuario           Codigo del usuario
 *                  @iLoginFallidos            Numero de intentos fallidos
 *                  @vcEstadoUsuario           Estado del usuario
 *
 *  Salida:         @error                     error de salida
 *
 *  Comentario:     Sin comentarios
 */

as

begin
    select @error = 'OK'
        update tblUsuario
        set iLoginFallidos  = @iLoginFallidos,
            vcEstadoUsuario = @vcEstadoUsuario
        where vcCodigoUsuario = @vcCodigoUsuario
        if ( @@error != 0 )
        begin
            select @error = "ERROR AL MODIFICAR LA INTENTOS FALLIDOS DE CONECCION"
        end
end

if @error != 'OK'
    return 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ModificaPasswordUsuario].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ModificaPasswordUsuario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaPasswordUsuario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaPasswordUsuario]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuario varchar(15),
   @vcFechaAnios int,
   @vcPasswordUsuario varchar(50)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ModificaPasswordUsuario
   *    *  Objetivo:       Modifica estado, y cambia password.
   *    *  Autor Creación: Alvaro Acevedo.
   *    *  Fecha Creación: 30/09/2010
   *   
   *    *  Autor Modific.: Alvaro Acevedo.
   *    *  Fecha Modific.: 24/11/2011
   *    *  Motivo:         Actualizar a cero los intentos de conexion.
   *    *
   *    *  Entrada:        @vcCodigoUsuario    Codigo Usuario.
   *    *                  @vcFechaAnios       Fecha de caducidad de password.
   *    *                  @vcPasswordUsuario  Nueva password.
   *    *
   *    *  Salida:         @error              error de salida
   *    *
   *    *  Comentario:     No hay comentario
   *
   */
   DECLARE
      @res_ins_pass varchar(255)
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      BEGIN

         UPDATE dbo.tblUsuario
            SET 
               vcEstadoUsuario = '01', 
               iLoginFallidos = 0
         WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuario

         /*
         *   SSMA warning messages:
         *   S2SS0016: SQL Server might use a different error code.
         */

         IF (@@ERROR != 0)
            BEGIN

               IF @@TRANCOUNT > 0
                  ROLLBACK TRANSACTION 

               SELECT @error = 'ERROR AL MODIFICAR ESTADO DE USUARIO'

            END
         ELSE 
            BEGIN

               EXECUTE dbo.spFT3InsertaPassword @res_ins_pass  OUTPUT, @vcCodigoUsuario, @vcPasswordUsuario, @vcFechaAnios

               IF @res_ins_pass != 'OK'
                  BEGIN

                     IF @@TRANCOUNT > 0
                        ROLLBACK TRANSACTION 

                     SELECT @error = @res_ins_pass

                  END
               ELSE 
                  BEGIN
                     IF @@TRANCOUNT > 0
                        COMMIT TRANSACTION 
                  END

            END

      END

   END
   IF @error != 'OK'
      RETURN 1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFt3ModificaPerfilPrivilegio].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFt3ModificaPerfilPrivilegio]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFt3ModificaPerfilPrivilegio] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFt3ModificaPerfilPrivilegio]
@error varchar(255)  OUTPUT,
   @vcCodigoPerfil varchar(2),
   @vcCodigoPrivilegio varchar(10),
   @iOpcion int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFt3ModificaPerfilPrivilegio
   *    *  Objetivo:       Asigna privilegios a los perfiles seleccionados.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 05/10/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoPerfil      Codigo del perfil.
   *    *                  @vcCodigoPrivilegio  Codigo del privilegio.
   *    *                  @iOpcion             1- 1era vez que ingresa al sp
   *    *                                       2- 2da o más veces que ingresa al sp
   *    *
   *    *  Salida:         @error               error de salida
   *    *
   *    *  Comentario:     No hay.
   *
   */
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      IF (@iOpcion = 3)
         BEGIN
            DELETE dbo.tblRelPrivilegioPerfil
            WHERE dbo.tblRelPrivilegioPerfil.vcCodigoPrivilegio = @vcCodigoPrivilegio
         END
      ELSE 
         BEGIN
            IF (@iOpcion = 1)
               BEGIN

                  DELETE dbo.tblRelPrivilegioPerfil
                  WHERE dbo.tblRelPrivilegioPerfil.vcCodigoPrivilegio = @vcCodigoPrivilegio

                  INSERT dbo.tblRelPrivilegioPerfil(vcCodigoPrivilegio, vcCodigoPerfil)
                     VALUES (@vcCodigoPrivilegio, @vcCodigoPerfil)

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF (@@ERROR != 0)
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @error = 'ERROR AL INGRESAR PRIVILEGIO - PERFIL'

                     END

               END
            ELSE 
               BEGIN

                  INSERT dbo.tblRelPrivilegioPerfil(vcCodigoPrivilegio, vcCodigoPerfil)
                     VALUES (@vcCodigoPrivilegio, @vcCodigoPerfil)

                  /*
                  *   SSMA warning messages:
                  *   S2SS0016: SQL Server might use a different error code.
                  */

                  IF (@@ERROR != 0)
                     BEGIN

                        IF @@TRANCOUNT > 0
                           ROLLBACK TRANSACTION 

                        SELECT @error = 'ERROR AL INGRESAR PRIVILEGIO - PERFIL'

                     END

               END
         END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
GO

GO
--SqlScripter----[dbo].[spFT3ModificaTipoArchivo].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ModificaTipoArchivo]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaTipoArchivo] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaTipoArchivo]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6),
   @vcNombreTipoArchivo varchar(50),
   @iNumeroRespuestas int,
   @vcFormatoNombreArchivo varchar(50),
   @vcModoTransferencia varchar(1),
   @iLargoRegistroArchivo int
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ModificaTipoArchivo
   *    *  Objetivo:       Modifica Tipo de Archivo.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo  Codigo del tipo de archivo.
   *    *                  @vcNombreTipoArchivo    Nombre del tipo de archivo.
   *    *                  @iNumeroRespuestas     Numero de respuestas.
   *    *                  @vcFormatoNombreArchivo    Formato del nombre del archivo.
   *    *                  @vcModoTransferencia    Modo de transferencia del archivo 0-Ascii 1-Binario.
   *    *                  @iLargoRegistroArchivo     Largo del tipo de archivo.
   *    *
   *    *
   *    *  Salida:         @error          error de salida
   *    *
   *    *
   *    *
   *    *  Comentario:     No hay.
   *    *
   *
   */
   BEGIN

      SELECT @error = 'OK'

      UPDATE dbo.tblTipoArchivo
         SET 
            vcNombreTipoArchivo = @vcNombreTipoArchivo, 
            iNumeroRespuestas = @iNumeroRespuestas, 
            vcFormatoNombreArchivo = @vcFormatoNombreArchivo, 
            vcModoTransferencia = @vcModoTransferencia, 
            iLargoRegistroArchivo = @iLargoRegistroArchivo
      WHERE dbo.tblTipoArchivo.vcCodigoTipoArchivo = @vcCodigoTipoArchivo

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL MODIFICAR TIPO DE ARCHIVO'
         END

   END
GO

GO
--SqlScripter----[dbo].[spFT3ModificaTipoArchivoUsua].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER OFF
GO
IF OBJECT_ID('[dbo].[spFT3ModificaTipoArchivoUsua]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaTipoArchivoUsua] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaTipoArchivoUsua]
@error                varchar(255) out,
                                               @vcCodigoUsuario      varchar(15),
                                               @vcCodigoTipoArchivo  varchar(6),
                                               @iOpcion              int,
                                               @vcTratoArchivo       varchar(1)

/*
 *  Servicio:       spFT3ModificaTipoArchivoUsua
 *  Objetivo:       Asigna usuario a los tipos de archivos seleccionados.
 *  Autor Creaci≤n: Andrea Zarabia.
 *  Fecha Creaci≤n: 13/10/2010
 *
 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 10/10/2012
 *  Motivo        : Se agrega campo vcTratoArchivo, archivos de envφo (valor E), recepci≤n (valor R) y envφo/recepci≤n (valor A).
 *
 *  Entrada:        @vcCodigoUsuario      Codigo del usuario.
 *                  @vcCodigoTipoArchivo  Codigo del tipo de archivo.
 *                  @iOpcion              0- 2da o mßs veces que ingresa al sp
 *                                        1- 1era vez que ingresa al sp
 *                                        2- eliminar todos los tipos de archivos asociados
 *
 *  Salida:         @error                error de salida
 *
 *  Comentario:     No hay.
 */

as

begin
    begin tran
        select @error = 'OK'

        if (@iOpcion = 2)
        begin
            delete from tblRelTipoArchivoUsuario
            where vcCodigoUsuario = @vcCodigoUsuario
        end
        else
        begin
      
        if (@iOpcion = 1)
            begin
                delete from tblRelTipoArchivoUsuario
                where vcCodigoUsuario = @vcCodigoUsuario

                insert into tblRelTipoArchivoUsuario values (@vcCodigoUsuario,@vcCodigoTipoArchivo,@vcTratoArchivo)

 
                 if ( @@error != 0 )
                begin
                    rollback tran
                    select @error = "ERROR AL INGRESAR USUARIO - TIPO DE ARCHIVO"
                end
            end
            else
            begin
           
               insert into tblRelTipoArchivoUsuario values (@vcCodigoUsuario,@vcCodigoTipoArchivo,@vcTratoArchivo)

                if (@@error != 0)
                begin
                    rollback tran
                    select @error = "ERROR AL INGRESAR USUARIO - TIPO DE ARCHIVO"
                end
            end
        end
    commit tran
end
if @error != 'OK'
    return 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ModificaTransEnvioRespues].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ModificaTransEnvioRespues]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaTransEnvioRespues] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaTransEnvioRespues]
@error varchar(255)  OUTPUT,
   @vcTipoEnvio varchar(1),
   @vcFechaEnvio varchar(8),
   @vcHoraEnvio varchar(6),
   @vcCodigoInstitucionOrigen varchar(4),
   @vcCodigoInstitucionDestino varchar(4),
   @vcCodigoCasilla varchar(8),
   @vcCodigoTipoArchivo varchar(6),
   @vcEstadoEnvio varchar(2)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ModificaTransEnvioRespues
   *    *  Objetivo:       Modificacion de una transacción de envío o respuesta.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 31/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcTipoEnvio                 E-Envio, R-Respuesta
   *    *                  @vcFechaEnvio                Fecha envio
   *    *                  @vcHoraEnvio                 Hora envio
   *    *                  @vcCodigoInstitucionOrigen   Codigo institucion origen
   *    *                  @vcCodigoInstitucionDestino  Codigo institucion destino
   *    *                  @vcCodigoCasilla             Codigo casilla
   *    *                  @vcCodigoTipoArchivo         codigo tipo archivo
   *    *                  @vcNombreArchivo             Nombre archivo
   *    *                  @vcEstadoEnvio               Estado de envio
   *    *
   *    *  Salida:         @error                       error de salida
   *    *
   *    *  Comentario:     Sin comentarios
   *
   */
   BEGIN

      SELECT @error = 'OK'

      IF (@vcTipoEnvio != 'E')
         BEGIN

            UPDATE dbo.tblTransRespuesta
               SET 
                  vcEstadoEnvio = @vcEstadoEnvio
            WHERE 
               dbo.tblTransRespuesta.vcFechaEnvio = @vcFechaEnvio AND 
               dbo.tblTransRespuesta.vcHoraEnvio = @vcHoraEnvio AND 
               dbo.tblTransRespuesta.vcCodigoInstitucionOrigen = @vcCodigoInstitucionOrigen AND 
               dbo.tblTransRespuesta.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino AND 
               dbo.tblTransRespuesta.vcCodigoCasilla = @vcCodigoCasilla AND 
               dbo.tblTransRespuesta.vcCodigoTipoArchivo = @vcCodigoTipoArchivo 

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF (@@ERROR != 0)
               BEGIN
                  SELECT @error = 'ERROR AL MODIFICAR LA TRANSFERENCIA DE RESPUESTA'
               END

         END
      ELSE 
         BEGIN

            UPDATE dbo.tblTransEnvio
               SET 
                  vcEstadoEnvio = @vcEstadoEnvio
            WHERE 
               dbo.tblTransEnvio.vcFechaEnvio = @vcFechaEnvio AND 
               dbo.tblTransEnvio.vcHoraEnvio = @vcHoraEnvio AND 
               dbo.tblTransEnvio.vcCodigoInstitucionOrigen = @vcCodigoInstitucionOrigen AND 
               dbo.tblTransEnvio.vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino AND 
               dbo.tblTransEnvio.vcCodigoCasilla = @vcCodigoCasilla AND 
               dbo.tblTransEnvio.vcCodigoTipoArchivo = @vcCodigoTipoArchivo 

            /*
            *   SSMA warning messages:
            *   S2SS0016: SQL Server might use a different error code.
            */

            IF (@@ERROR != 0)
               BEGIN
                  SELECT @error = 'ERROR AL MODIFICAR LA TRANSFERENCIA DE ENVIO'
               END

         END

   END
IF @error != 'OK'
   RETURN 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ModificaTransRescate].sql
GO
SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ModificaTransRescate]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaTransRescate] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaTransRescate]
@error                       varchar(255) out,
                                            @vcTipoEnvio                 varchar(1),
                                            @vcFechaEnvio                varchar(8),
                                            @vcHoraEnvio                 varchar(6),
                                            @vcCodigoInstitucionOrigen   varchar(4),
                                            @vcCodigoInstitucionDestino  varchar(4),
                                            @vcCodigoCasilla             varchar(8),
                                            @vcCodigoTipoArchivo         varchar(6),
                                            @vcNombreArchivo             varchar(50),
                                            @vcUsuarioRescate            varchar(15),
                                            @vcFechaRescate              varchar(8),
                                            @vcHoraRescate               varchar(6),
                                            @vcEstadoRescate             varchar(2)

/*
 *  Servicio:       spFT3ModificaTransRescate
 *  Objetivo:       Modificacion de una transacción de rescate de envío o respuesta.
 *  Autor Creación: Alvaro Acevedo S.
 *  Fecha Creación: 31/08/2010

 *  Autor Modific.: Geronimo Martinez
 *  Fecha Modific.: 28/09/2012
 *  Motivo        : Se elimina la actualización del campo vcEstadoRescate, en el rescate de archivos.
 *
 *  Entrada:        @vcTipoEnvio                 E-Envio, R-Respuesta
 *                  @vcFechaEnvio                Fecha envio
 *                  @vcHoraEnvio                 Hora envio
 *                  @vcCodigoInstitucionOrigen   Codigo institucion origen
 *                  @vcCodigoInstitucionDestino  Codigo institucion destino
 *                  @vcCodigoCasilla             Codigo casilla
 *                  @vcCodigoTipoArchivo         codigo tipo archivo
 *                  @vcNombreArchivo             Nombre archivo
 *                  @vcUsuarioRescate            Usuario rescate
 *                  @vcFechaRescate              Fecha rescate
 *                  @vcHoraRescate               Hora rescate
 *
 *  Salida:         @error                       error de salida
 *
 *  Comentario:     Sin comentarios
 */

as

begin
    select @error = 'OK'
    if ( @vcTipoEnvio != 'E' )
    begin
        update tblTransRespuesta
        set vcUsuarioRescate = @vcUsuarioRescate,
            vcFechaRescate   = @vcFechaRescate,
            vcHoraRescate    = @vcHoraRescate,
            vcEstadoRescate  = @vcEstadoRescate
        where vcFechaEnvio               = @vcFechaEnvio
          and vcHoraEnvio                = @vcHoraEnvio
          and vcCodigoInstitucionOrigen  = @vcCodigoInstitucionOrigen
          and vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
          and vcCodigoCasilla            = @vcCodigoCasilla
          and vcNombreArchivo            = @vcNombreArchivo
        if ( @@error != 0 )
        begin
            select @error = 'ERROR AL MODIFICAR LA TRANSFERENCIA DE RESPUESTA PARA EL RESCATE'
        end
    end
    else
    begin
        update tblTransEnvio
        set vcUsuarioRescate = @vcUsuarioRescate,
            vcFechaRescate   = @vcFechaRescate,
            vcHoraRescate    = @vcHoraRescate,
            vcEstadoRescate  = @vcEstadoRescate
        where vcFechaEnvio               = @vcFechaEnvio
          and vcHoraEnvio                = @vcHoraEnvio
          and vcCodigoInstitucionOrigen  = @vcCodigoInstitucionOrigen
          and vcCodigoInstitucionDestino = @vcCodigoInstitucionDestino
          and vcCodigoCasilla            = @vcCodigoCasilla
          and vcNombreArchivo            = @vcNombreArchivo
        if ( @@error != 0 )
        begin
            select @error = 'ERROR AL MODIFICAR LA TRANSFERENCIA DE ENVIO PARA EL RESCATE'
        end
    end
end

if @error != 'OK'
    return 1
return 0
GO

GO
--SqlScripter----[dbo].[spFT3ModificaUsuario].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ModificaUsuario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ModificaUsuario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ModificaUsuario]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuario varchar(15),
   @vcCodigoPerfil varchar(10),
   @vcCodigoInstitucion varchar(4),
   @vcNombreUsuario varchar(100),
   @vcDireccionEmail varchar(100),
   @vcEstadoUsuario varchar(2),
   @vcCodigoCasilla varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3InsertaUsuario
   *    *  Objetivo:       Ingresa nuevo usuario.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 18/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoUsuario      Codigo Usuario.
   *    *                  @vcCodigoPerfil       Codigo Perfil.
   *    *                  @vcCodigoInstitucion  Codigo Institucion.
   *    *                  @vcNombreUsuario      Nombre Usuario.
   *    *                  @vcDireccionEmail     Mail Usuario.
   *    *                  @vcEstadoUsuario      Estado Usuario.
   *    *                  @vcCodigoCasilla      Codigo Casilla.
   *    *
   *    *  Salida:         @error                error de salida
   *    *
   *    *  Comentario:     @vcEstadoUsuario      "00"  Creado
   *    *                  @vcEstadoUsuario      "01"  Activo
   *    *                  @vcEstadoUsuario      "02"  Inactivo
   *    *                  @vcEstadoUsuario      "03"  Bloqueado
   *
   */
   BEGIN

      SELECT @error = 'OK'

      UPDATE dbo.tblUsuario
         SET 
            vcCodigoPerfil = @vcCodigoPerfil, 
            vcCodigoInstitucion = @vcCodigoInstitucion, 
            vcNombreUsuario = @vcNombreUsuario, 
            vcDireccionEmail = @vcDireccionEmail, 
            vcEstadoUsuario = @vcEstadoUsuario, 
            vcCodigoCasilla = @vcCodigoCasilla
      WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuario

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN
            SELECT @error = 'ERROR AL MODIFICAR USUARIO'
         END

   END
GO

GO
--SqlScripter----[dbo].[spFT3ObtieneCorrelativoDiario].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ObtieneCorrelativoDiario]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ObtieneCorrelativoDiario] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ObtieneCorrelativoDiario]
@error varchar(255)  OUTPUT,
   @vcCodigoTipoArchivo varchar(6),
   @vcCodigoInstitucionOrigen varchar(4),
   @vcFechaGeneracion varchar(8)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ObtieneCorrelativoDiario
   *    *  Objetivo:       Obtiene el correlativo diario del envío de un archivo a una casilla.
   *    *                  La particularidad de este correlativo, es que comienza en 1 diariamente.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 31/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoTipoArchivo        Codigo tipo archivo
   *    *                  @vcCodigoInstitucionOrigen  Codigo institucion origen
   *    *                  @vcFechaGeneracion          Fecha generacion
   *    *
   *    *  Salida:         @error                      error de salida
   *    *
   *    *  Comentario:     Sin comentarios
   *
   */
   DECLARE
      @iNumeroCorrelativo int
   BEGIN

      BEGIN TRANSACTION 

      SELECT @error = 'OK'

      SELECT @iNumeroCorrelativo = 0

      UPDATE dbo.tblCorrelativo
         SET 
            @iNumeroCorrelativo = dbo.tblCorrelativo.iNumeroCorrelativo + 1, 
            iNumeroCorrelativo = dbo.tblCorrelativo.iNumeroCorrelativo + 1
      WHERE 
         dbo.tblCorrelativo.vcCodigoTipoArchivo = @vcCodigoTipoArchivo AND 
         dbo.tblCorrelativo.vcCodigoInstitucionOrigen = @vcCodigoInstitucionOrigen AND 
         dbo.tblCorrelativo.vcFechaGeneracion = @vcFechaGeneracion

      IF (@iNumeroCorrelativo = 0)
         BEGIN

            INSERT dbo.tblCorrelativo(vcCodigoTipoArchivo, vcCodigoInstitucionOrigen, vcFechaGeneracion, iNumeroCorrelativo)
               VALUES (@vcCodigoTipoArchivo, @vcCodigoInstitucionOrigen, @vcFechaGeneracion, 1)

            SELECT @iNumeroCorrelativo = 1

         END

      /*
      *   SSMA warning messages:
      *   S2SS0016: SQL Server might use a different error code.
      */

      IF (@@ERROR != 0)
         BEGIN

            IF @@TRANCOUNT > 0
               ROLLBACK TRANSACTION 

            SELECT @error = 'ERROR AL OBTENER CORRELATIVO DIARIO'

         END

      IF @@TRANCOUNT > 0
         COMMIT TRANSACTION 

   END
   IF @error != 'OK'
      RETURN 0
   RETURN @iNumeroCorrelativo
GO

GO
--SqlScripter----[dbo].[spFT3SolicitaTicket].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3SolicitaTicket]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3SolicitaTicket] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3SolicitaTicket]
@error varchar(255)  OUTPUT,
   @vcCodigoUsuarioSolicitante varchar(15),
   @vcPasswordUsuarioSolicitante varchar(50),
   @vcCodigoUsuarioSistema varchar(15),
   @vcCodigoInstUsuarioSistema varchar(4)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3SolicitaTicket
   *    *  Objetivo:       Genera un ticket.
   *    *  Autor Creación: Alvaro Acevedo S.
   *    *  Fecha Creación: 28/07/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoUsuarioSolicitante    Usuario que solicita el ticket. Debe existir.
   *    *                  @vcPasswordUsuarioSolicitante  Password encriptada del usuario que solicita el ticket.
   *    *                  @vcCodigoUsuarioSistema        Usuario al cual se le asignará el ticket.
   *    *                  @vcCodigoInstUsuarioSistema    Institución del usuario al cual se le asignará el ticket.
   *    *
   *    *  Salida:         @error                         error de salida
   *    *
   *    *  Comentario:     Sin comentarios
   *
   *    declaramos variables locales
   */
   DECLARE
      @dFechaGeneracion datetime2(3), 
      @vcFechaFormato112 varchar(8), 
      @vcHoraFormato112 varchar(6), 
      @vcNumeroTicket varchar(23)
   BEGIN

      SELECT @error = 'OK'

      IF NOT EXISTS 
         (
            SELECT 1
            FROM dbo.tblUsuario
            WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuarioSolicitante
         )
         SELECT @error = 'USUARIO QUE SOLICITA TICKET NO REGISTRADO EN BD'
      ELSE 
         IF NOT EXISTS 
            (
               SELECT 1
               FROM dbo.tblUsuario
               WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuarioSolicitante AND dbo.tblUsuario.vcCodigoPerfil = '05'
            )
            SELECT @error = 'USUARIO QUE SOLICITA TICKET NO COINCIDE CON PERFIL'
         ELSE 
            IF NOT EXISTS 
               (
                  SELECT 1
                  FROM dbo.tblUsuario
                  WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuarioSolicitante AND dbo.tblUsuario.vcEstadoUsuario = '01'
               )
               SELECT @error = 'ESTADO DE USUARIO QUE SOLICITA TICKET INVALIDO'
            ELSE 
               IF NOT EXISTS 
                  (
                     SELECT 1
                     FROM dbo.tblPassword
                     WHERE dbo.tblPassword.vcCodigoUsuario = @vcCodigoUsuarioSolicitante
                  )
                  SELECT @error = 'USUARIO QUE SOLICITA TICKET NO REGISTRA PASSWORD'
               ELSE 
                  IF NOT EXISTS 
                     (
                        SELECT 1
                        FROM dbo.tblPassword
                        WHERE dbo.tblPassword.vcCodigoUsuario = @vcCodigoUsuarioSolicitante AND dbo.tblPassword.vcPassword = @vcPasswordUsuarioSolicitante
                     )
                     SELECT @error = 'PASSWORD DE USUARIO QUE SOLICITA TICKET INCORRECTA'
                  ELSE 
                     IF NOT EXISTS 
                        (
                           SELECT 1
                           FROM dbo.tblUsuario
                           WHERE dbo.tblUsuario.vcCodigoUsuario = @vcCodigoUsuarioSistema AND dbo.tblUsuario.vcCodigoInstitucion = @vcCodigoInstUsuarioSistema
                        )
                        SELECT @error = 'USUARIO-INSTITUCION PARA ASIGNARLE TICKET NO REGISTRADO EN BD'
                     ELSE 
                        BEGIN

                           BEGIN TRANSACTION 

                           SELECT @dFechaGeneracion = getdate()

                           SELECT @vcFechaFormato112 = CONVERT(varchar(8), @dFechaGeneracion, 112)

                           SELECT @vcHoraFormato112 = right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(hh, @dFechaGeneracion))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(mi, @dFechaGeneracion))), ''), 2) + right('00' + nullif(rtrim(CONVERT(varchar(2), datepart(ss, @dFechaGeneracion))), ''), 2)

                           SELECT @vcNumeroTicket = @vcFechaFormato112 + @vcHoraFormato112 + right('000' + nullif(rtrim(CONVERT(varchar(3), datepart(ms, @dFechaGeneracion))), ''), 3) + right('000000' + nullif(rtrim(CONVERT(varchar(6), CONVERT(int, rand() * 1000000))), ''), 6)

                           INSERT dbo.tblTicket(
                              vcCodigoTicket, 
                              vcCodigoUsuarioSolicita, 
                              vcCodigoUsuario, 
                              vcCodigoInstitucion, 
                              vcFechaSolicitud, 
                              vcHoraSolicitud, 
                              vcEstadoTicket)
                              VALUES (
                                 @vcNumeroTicket, 
                                 @vcCodigoUsuarioSolicitante, 
                                 @vcCodigoUsuarioSistema, 
                                 @vcCodigoInstUsuarioSistema, 
                                 @vcFechaFormato112, 
                                 @vcHoraFormato112, 
                                 '0')

                           /*
                           *   SSMA warning messages:
                           *   S2SS0016: SQL Server might use a different error code.
                           */

                           IF (@@ERROR != 0)
                              BEGIN

                                 IF @@TRANCOUNT > 0
                                    ROLLBACK TRANSACTION 

                                 SELECT @error = 'ERROR EN LA CREACION DEL TICKET'

                              END
                           ELSE 
                              BEGIN
                                 SELECT @error = @vcNumeroTicket
                              END

                           IF @@TRANCOUNT > 0
                              COMMIT TRANSACTION 

                        END

   END
   IF @error != @vcNumeroTicket
      RETURN 1
   RETURN 0
GO

GO
--SqlScripter----[dbo].[spFT3ValidaPassword].sql
GO
SET ANSI_NULLS OFF
SET QUOTED_IDENTIFIER ON
GO
IF OBJECT_ID('[dbo].[spFT3ValidaPassword]') IS NULL EXEC('CREATE PROCEDURE [dbo].[spFT3ValidaPassword] AS PRINT ''TEMPORARY OBJECT, DELETE AFTER ALL OBJECTS ARE CREATED''')
GO
ALTER PROCEDURE [dbo].[spFT3ValidaPassword]
@error varchar(255)  OUTPUT,
   @iCantidad int  OUTPUT,
   @vcCodigoUsuario varchar(15),
   @vcPasswordIn varchar(50),
   @vcValorParametro varchar(255)
AS 
   
   /*
   *   Generated by SQL Server Migration Assistant for Sybase version 5.2.1260.
   *   
   *    *  Servicio:       spFT3ValidaPassword
   *    *  Objetivo:       Valida pass de usuario.
   *    *  Autor Creación: Andrea Zarabia.
   *    *  Fecha Creación: 20/08/2010
   *   
   *    *  Autor Modific.:
   *    *  Fecha Modific.:
   *    *
   *    *  Entrada:        @vcCodigoUsuario  Codigo Usuario
   *    *                  @vcPasswordIn     Password
   *    *
   *    *
   *    *  Salida:         @error            error de salida
   *    *
   *    *
   *    *  Comentario:     No hay
   *    *
   *
   */
   DECLARE
      @paso int, 
      @vcPassword varchar(50), 
      @valor int
   SELECT @paso = 0
   SELECT @iCantidad = 0
   SELECT @valor = CONVERT(int, @vcValorParametro)
   DECLARE
       curPass CURSOR LOCAL FORWARD_ONLY STATIC FOR 
         SELECT dbo.tblPassword.vcPassword
         FROM dbo.tblPassword
         WHERE dbo.tblPassword.vcCodigoUsuario = @vcCodigoUsuario
         ORDER BY dbo.tblPassword.vcIniPassword DESC
         FOR READ ONLY
   OPEN curPass
   FETCH curPass
       INTO @vcPassword
   WHILE (@@FETCH_STATUS = 0)
   
      BEGIN

         SELECT @paso = @paso + 1/*contabiliza cantidad de registros del select*/

         IF (@paso > @valor)
            BEGIN
               BREAK
            END

         IF (@vcPassword = @vcPasswordIn)
            BEGIN
               SELECT @iCantidad = @iCantidad + 1/*contabiliza cantidad de registros que cumplen la condicion*/
            END
            /*end if*/

         FETCH curPass
             INTO @vcPassword

      END
      /*fin while*/
   CLOSE curPass
   DEALLOCATE curPass
   RETURN @iCantidad
GO
